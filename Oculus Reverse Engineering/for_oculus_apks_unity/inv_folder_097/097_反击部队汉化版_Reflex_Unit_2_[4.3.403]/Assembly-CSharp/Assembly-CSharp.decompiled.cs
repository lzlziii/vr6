using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Text;
using System.Threading;
using CnControls;
using EZCameraShake;
using ExitGames.Client.Photon;
using Ibuprogames.TiltShiftAsset;
using Il2CppDummyDll;
using Oculus.Platform;
using Oculus.Platform.Models;
using Oculus.Spatializer.Propagation;
using Photon;
using TMPro;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Playables;
using UnityEngine.Rendering;
using UnityEngine.SceneManagement;
using UnityEngine.UI;
using UnityEngine.Video;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class AimOptions : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private CustomButton mode1Button;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private CustomButton mode2Button;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TextMeshProUGUI textMeshProUGUI;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private LanguageString autoAimModeMobile;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private LanguageString manualAimModeMobile;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private LanguageString advancedAimModeVr;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private LanguageString standardAimModeVr;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0x9AA76C", Offset = "0x9AA76C", VA = "0x9AA76C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0x9AA974", Offset = "0x9AA974", VA = "0x9AA974")]
	public void SwitchAimMode(bool optionalAimMode)
	{
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0x9AA770", Offset = "0x9AA770", VA = "0x9AA770")]
	private void UpdateLocked()
	{
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0x9AA9F0", Offset = "0x9AA9F0", VA = "0x9AA9F0")]
	public AimOptions()
	{
	}
}
[Token(Token = "0x2000003")]
public class AvatarPositions : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AvatarPositions instance;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] positions;

	[Token(Token = "0x6000005")]
	[Address(RVA = "0x9AAD2C", Offset = "0x9AAD2C", VA = "0x9AAD2C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0x9AAD80", Offset = "0x9AAD80", VA = "0x9AAD80")]
	public AvatarPositions()
	{
	}
}
[Token(Token = "0x2000004")]
public class BaseShip : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject[] dropPods;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static BaseShip instance;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Vector3 position;

	[Token(Token = "0x6000007")]
	[Address(RVA = "0x9AAD88", Offset = "0x9AAD88", VA = "0x9AAD88")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0x9AAE08", Offset = "0x9AAE08", VA = "0x9AAE08")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0x9AAE58", Offset = "0x9AAE58", VA = "0x9AAE58")]
	private void Start()
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0x9AAF60", Offset = "0x9AAF60", VA = "0x9AAF60")]
	private void OnPhotonCustomRoomPropertiesChanged(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0x9AB0CC", Offset = "0x9AB0CC", VA = "0x9AB0CC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0x9AB004", Offset = "0x9AB004", VA = "0x9AB004")]
	public void UpdateDropPods(int visibleAmmount)
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0x9AB160", Offset = "0x9AB160", VA = "0x9AB160")]
	public BaseShip()
	{
	}
}
[Token(Token = "0x2000005")]
public class ChangeCharacterTrigger : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterControl characterControl;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool tutorial;

	[Token(Token = "0x600000E")]
	[Address(RVA = "0x9B3580", Offset = "0x9B3580", VA = "0x9B3580")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0x9B36C8", Offset = "0x9B36C8", VA = "0x9B36C8")]
	private void ChangeCharacterTutorial()
	{
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0x9B3860", Offset = "0x9B3860", VA = "0x9B3860")]
	private void ChangeCharacter()
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0x9B39F4", Offset = "0x9B39F4", VA = "0x9B39F4")]
	public ChangeCharacterTrigger()
	{
	}
}
[Token(Token = "0x2000006")]
[ExecuteInEditMode]
public class ChangeLightMap : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture lightMapTexture;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshRenderer meshRenderer;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ChangeLightMap instance;

	[Token(Token = "0x6000012")]
	[Address(RVA = "0x9B39FC", Offset = "0x9B39FC", VA = "0x9B39FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0x9B3A50", Offset = "0x9B3A50", VA = "0x9B3A50")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0x9B3A54", Offset = "0x9B3A54", VA = "0x9B3A54")]
	public void UpdateLightMap()
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0x9B3B78", Offset = "0x9B3B78", VA = "0x9B3B78")]
	public ChangeLightMap()
	{
	}
}
[Token(Token = "0x2000007")]
[ExecuteInEditMode]
public class ChangeMaterialEmis : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Material material;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool isEmmisive;

	[Token(Token = "0x6000016")]
	[Address(RVA = "0x9B3B80", Offset = "0x9B3B80", VA = "0x9B3B80")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0x9B3C34", Offset = "0x9B3C34", VA = "0x9B3C34")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0x9B3CE8", Offset = "0x9B3CE8", VA = "0x9B3CE8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0x9B3D64", Offset = "0x9B3D64", VA = "0x9B3D64")]
	public ChangeMaterialEmis()
	{
	}
}
[Token(Token = "0x2000008")]
public class CircleOfFire : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 minSize;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 maxSize;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float lerp;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int damage;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6E1DA0", Offset = "0x6E1DA0")]
	private float damageCheckInterval;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float lastDamageCheck;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float safeDistance;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float circleSize;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float adjustRingHitSize;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ParticleSystem particleSystem;

	[Token(Token = "0x600001A")]
	[Address(RVA = "0x9BF284", Offset = "0x9BF284", VA = "0x9BF284")]
	private void Start()
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x9BF2DC", Offset = "0x9BF2DC", VA = "0x9BF2DC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0x9BF3D4", Offset = "0x9BF3D4", VA = "0x9BF3D4")]
	private void Update()
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0x9BF9BC", Offset = "0x9BF9BC", VA = "0x9BF9BC")]
	public CircleOfFire()
	{
	}
}
[Token(Token = "0x2000009")]
[ExecuteInEditMode]
public class CreateMapTexture : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MeshRenderer BackGroundQuad;

	[Token(Token = "0x600001E")]
	[Address(RVA = "0x96F520", Offset = "0x96F520", VA = "0x96F520")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x6E9F34", Offset = "0x6E9F34")]
	public void UpdateBGTexture()
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0x96F6A0", Offset = "0x96F6A0", VA = "0x96F6A0")]
	private void OnPreRender()
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0x96F7E4", Offset = "0x96F7E4", VA = "0x96F7E4")]
	public CreateMapTexture()
	{
	}
}
[Token(Token = "0x200000A")]
public class DisableWhenNotSelected : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6000021")]
	[Address(RVA = "0x979448", Offset = "0x979448", VA = "0x979448")]
	public void SetSelected()
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0x9794D4", Offset = "0x9794D4", VA = "0x9794D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0x9795C0", Offset = "0x9795C0", VA = "0x9795C0")]
	public DisableWhenNotSelected()
	{
	}
}
[Token(Token = "0x200000B")]
public class EnableIfDroppodsAvailable : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CustomButton customButton;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool active;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private RaycastHit raycastHit;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 offset;

	[Token(Token = "0x6000024")]
	[Address(RVA = "0x97B50C", Offset = "0x97B50C", VA = "0x97B50C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0x97B568", Offset = "0x97B568", VA = "0x97B568")]
	private void CheckActive()
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0x97B8EC", Offset = "0x97B8EC", VA = "0x97B8EC")]
	public EnableIfDroppodsAvailable()
	{
	}
}
[Token(Token = "0x200000C")]
public class FireOptions : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private CustomButton mode1Button;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private CustomButton mode2Button;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TextMeshProUGUI textMeshProUGUI;

	[Token(Token = "0x6000027")]
	[Address(RVA = "0x983FB8", Offset = "0x983FB8", VA = "0x983FB8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0x984070", Offset = "0x984070", VA = "0x984070")]
	private void Start()
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0x9841A4", Offset = "0x9841A4", VA = "0x9841A4")]
	public void SwitchFireode(bool optionalFireMode)
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0x983FBC", Offset = "0x983FBC", VA = "0x983FBC")]
	private void UpdateLocked()
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x984220", Offset = "0x984220", VA = "0x984220")]
	public FireOptions()
	{
	}
}
[Token(Token = "0x200000D")]
public class GamePlayObjectiveUpdate : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LanguageString versusGameStart;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private LanguageString survivalGameStart;

	[Token(Token = "0x600002C")]
	[Address(RVA = "0x98501C", Offset = "0x98501C", VA = "0x98501C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0x9850E0", Offset = "0x9850E0", VA = "0x9850E0")]
	public GamePlayObjectiveUpdate()
	{
	}
}
[Token(Token = "0x200000E")]
public class HideIfNoIAP : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x600002E")]
	[Address(RVA = "0x9567CC", Offset = "0x9567CC", VA = "0x9567CC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0x9567F4", Offset = "0x9567F4", VA = "0x9567F4")]
	public HideIfNoIAP()
	{
	}
}
[Token(Token = "0x200000F")]
public sealed class TiltShiftDemo : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool guiShow;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TiltShift tiltShift;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool menuOpen;

	[Token(Token = "0x400002B")]
	private const float guiMargen = 10f;

	[Token(Token = "0x400002C")]
	private const float guiWidth = 200f;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float updateInterval;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float accum;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int frames;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float timeleft;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float fps;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GUIStyle effectNameStyle;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GUIStyle menuStyle;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GUIStyle boxStyle;

	[Token(Token = "0x6000030")]
	[Address(RVA = "0x908368", Offset = "0x908368", VA = "0x908368")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0x908588", Offset = "0x908588", VA = "0x908588")]
	private void Update()
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0x908654", Offset = "0x908654", VA = "0x908654")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0x908548", Offset = "0x908548", VA = "0x908548")]
	private void ResetDemo()
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0x90A44C", Offset = "0x90A44C", VA = "0x90A44C")]
	private Texture2D MakeTex(int width, int height, Color col)
	{
		return null;
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0x90A568", Offset = "0x90A568", VA = "0x90A568")]
	public TiltShiftDemo()
	{
	}
}
[Token(Token = "0x2000010")]
public class ImageCycle : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float timer;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Sprite[] sprites;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int index;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Image image;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float limit;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool timeEnabled;

	[Token(Token = "0x6000036")]
	[Address(RVA = "0x957C6C", Offset = "0x957C6C", VA = "0x957C6C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0x957D00", Offset = "0x957D00", VA = "0x957D00")]
	public void ButtonNext()
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0x957E9C", Offset = "0x957E9C", VA = "0x957E9C")]
	public void ButtonPrevious()
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0x957D6C", Offset = "0x957D6C", VA = "0x957D6C")]
	private void Next()
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0x95810C", Offset = "0x95810C", VA = "0x95810C")]
	private void Update()
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0x95816C", Offset = "0x95816C", VA = "0x95816C")]
	public ImageCycle()
	{
	}
}
[Token(Token = "0x2000011")]
public class ImageSineAlpha : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Image image;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Color color;

	[Token(Token = "0x600003C")]
	[Address(RVA = "0x958584", Offset = "0x958584", VA = "0x958584")]
	private void Start()
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0x9585DC", Offset = "0x9585DC", VA = "0x9585DC")]
	private void Update()
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0x9586B0", Offset = "0x9586B0", VA = "0x9586B0")]
	public ImageSineAlpha()
	{
	}
}
[Token(Token = "0x2000012")]
public class MakeMaterialUnique : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x600003F")]
	[Address(RVA = "0x8D4A60", Offset = "0x8D4A60", VA = "0x8D4A60")]
	private void Start()
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0x8D4B14", Offset = "0x8D4B14", VA = "0x8D4B14")]
	public MakeMaterialUnique()
	{
	}
}
[Token(Token = "0x2000013")]
public class MakeRunEnable : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Animator animator;

	[Token(Token = "0x6000041")]
	[Address(RVA = "0x8D4B1C", Offset = "0x8D4B1C", VA = "0x8D4B1C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0x8D4B7C", Offset = "0x8D4B7C", VA = "0x8D4B7C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0x8D4BDC", Offset = "0x8D4BDC", VA = "0x8D4BDC")]
	public MakeRunEnable()
	{
	}
}
[Token(Token = "0x2000014")]
public class MapZoom : UnityEngine.MonoBehaviour, IDragHandler, IEventSystemHandler, IDeselectHandler, ISelectHandler, IPointerUpHandler
{
	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool drag;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool zoomed;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool pointerOver;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector2 lastPointerPosition;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform rectTransform;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject border;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private TextMeshProUGUI textMeshProUGUI;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject objectiveOverlay;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject playerListOverlay2;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject playerListOverlay4;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool disablePan;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float lastSelected;

	[Token(Token = "0x6000044")]
	[Address(RVA = "0x8D56F8", Offset = "0x8D56F8", VA = "0x8D56F8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0x8D5BA0", Offset = "0x8D5BA0", VA = "0x8D5BA0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0x8D5D2C", Offset = "0x8D5D2C", VA = "0x8D5D2C")]
	private Vector2 GetPointerPosition(PointerEventData eventData)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0x8D5DE8", Offset = "0x8D5DE8", VA = "0x8D5DE8", Slot = "4")]
	public void OnDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0x8D604C", Offset = "0x8D604C", VA = "0x8D604C")]
	public void PanCamera(Vector2 delta)
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0x8D63C8", Offset = "0x8D63C8", VA = "0x8D63C8", Slot = "5")]
	public void OnDeselect(BaseEventData eventData)
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0x8D645C", Offset = "0x8D645C", VA = "0x8D645C", Slot = "6")]
	public void OnSelect(BaseEventData eventData)
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0x8D64C4", Offset = "0x8D64C4", VA = "0x8D64C4", Slot = "7")]
	public void OnPointerUp(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0x8D57D4", Offset = "0x8D57D4", VA = "0x8D57D4")]
	private void UpdateTextMeshPro()
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0x8D6770", Offset = "0x8D6770", VA = "0x8D6770")]
	public MapZoom()
	{
	}
}
[Token(Token = "0x2000015")]
public class MatchAvatarContainerPosition : Photon.MonoBehaviour
{
	[Token(Token = "0x600004F")]
	[Address(RVA = "0x8D7644", Offset = "0x8D7644", VA = "0x8D7644")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0x8D77D0", Offset = "0x8D77D0", VA = "0x8D77D0")]
	private void OnPhotonPlayerPropertiesChanged(object[] playerAndUpdatedProps)
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0x8D7648", Offset = "0x8D7648", VA = "0x8D7648")]
	private void UpdatePosition()
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0x8D77D4", Offset = "0x8D77D4", VA = "0x8D77D4")]
	public MatchAvatarContainerPosition()
	{
	}
}
[Token(Token = "0x2000016")]
public class MaterialPropTest : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Color color;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Renderer _renderer;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MaterialPropertyBlock materialPropertyBlock;

	[Token(Token = "0x6000053")]
	[Address(RVA = "0x8D7CEC", Offset = "0x8D7CEC", VA = "0x8D7CEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0x8D7D64", Offset = "0x8D7D64", VA = "0x8D7D64")]
	private void Update()
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0x8D7DF0", Offset = "0x8D7DF0", VA = "0x8D7DF0")]
	public MaterialPropTest()
	{
	}
}
[Token(Token = "0x2000017")]
public class DemoScript : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GUIStyle style;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture2D LogoTexture2D;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rect textureRectangle;

	[Token(Token = "0x6000056")]
	[Address(RVA = "0x976D90", Offset = "0x976D90", VA = "0x976D90")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0x976EA0", Offset = "0x976EA0", VA = "0x976EA0")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0x976F88", Offset = "0x976F88", VA = "0x976F88")]
	public DemoScript()
	{
	}
}
[Token(Token = "0x2000018")]
public class SpinFree : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x200035A")]
	public enum Planet
	{
		[Token(Token = "0x400116E")]
		Earth,
		[Token(Token = "0x400116F")]
		Moon,
		[Token(Token = "0x4001170")]
		Mars
	}

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E1EB8", Offset = "0x6E1EB8")]
	public static bool spin;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool large;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static Planet planet;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Material materialEarth;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Material materialMoon;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Material materialMars;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Quaternion rotation;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static Vector3 size;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public bool clockwise;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	public float direction;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public float directionChangeSpeed;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private Color envColor;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private float envLightBoost;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Color lightsColor;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private float lightBoost;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Transform ship;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Vector3 shipRotation;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public static Quaternion lastRotation;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public static Vector3 shipTargetRotation;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static float earthTargetRotation;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private MeshRenderer meshRenderer;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public static Vector3 EarthRotation;

	[Token(Token = "0x6000059")]
	[Address(RVA = "0x8FE07C", Offset = "0x8FE07C", VA = "0x8FE07C")]
	private void Start()
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0x8FE160", Offset = "0x8FE160", VA = "0x8FE160")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0x8FE2EC", Offset = "0x8FE2EC", VA = "0x8FE2EC")]
	private void Update()
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0x8FEB28", Offset = "0x8FEB28", VA = "0x8FEB28")]
	public SpinFree()
	{
	}
}
[Token(Token = "0x2000019")]
public class MoveLookSetting : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMeshProUGUI moveText;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshProUGUI lookText;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject button1;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject button2;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private LanguageString moveStickRange;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private LanguageString lookStickRange;

	[Token(Token = "0x600005E")]
	[Address(RVA = "0x8DC620", Offset = "0x8DC620", VA = "0x8DC620")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0x8DC9B4", Offset = "0x8DC9B4", VA = "0x8DC9B4")]
	public void IncreaseMoveDistance()
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0x8DCA20", Offset = "0x8DCA20", VA = "0x8DCA20")]
	public void IncreaseLookDistance()
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0x8DC6C8", Offset = "0x8DC6C8", VA = "0x8DC6C8")]
	private void UpdateText()
	{
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0x8DCA8C", Offset = "0x8DCA8C", VA = "0x8DCA8C")]
	public MoveLookSetting()
	{
	}
}
[Token(Token = "0x200001A")]
public class MusicOptions : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMeshProUGUI musicText;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshProUGUI fxText;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private LanguageString musicString;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private LanguageString fxString;

	[Token(Token = "0x6000063")]
	[Address(RVA = "0x8DE870", Offset = "0x8DE870", VA = "0x8DE870")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0x8DEB60", Offset = "0x8DEB60", VA = "0x8DEB60")]
	public void IncreaseMusicVolume()
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0x8DEBC8", Offset = "0x8DEBC8", VA = "0x8DEBC8")]
	public void IncreaseFXVolume()
	{
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0x8DE874", Offset = "0x8DE874", VA = "0x8DE874")]
	private void UpdateText()
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0x8DEC30", Offset = "0x8DEC30", VA = "0x8DEC30")]
	public MusicOptions()
	{
	}
}
[Token(Token = "0x200001B")]
public class NavMeshLineRenderer : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float lastUpdateTime;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private NavMeshPath path;

	[Token(Token = "0x6000068")]
	[Address(RVA = "0x8DF048", Offset = "0x8DF048", VA = "0x8DF048")]
	private void Start()
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0x8DF170", Offset = "0x8DF170", VA = "0x8DF170")]
	private void Update()
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0x8DF384", Offset = "0x8DF384", VA = "0x8DF384")]
	public NavMeshLineRenderer()
	{
	}
}
[Token(Token = "0x200001C")]
public class OVRInputTest : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x600006B")]
	[Address(RVA = "0x90F4A4", Offset = "0x90F4A4", VA = "0x90F4A4")]
	private void Update()
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0x90F978", Offset = "0x90F978", VA = "0x90F978")]
	public OVRInputTest()
	{
	}
}
[Token(Token = "0x200001D")]
public class ObectiveVideoPlayer : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static VideoClip VideoClip;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static float lastEnableTime;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RawImage rawImage;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject mapGameObject;

	[Token(Token = "0x600006D")]
	[Address(RVA = "0x91363C", Offset = "0x91363C", VA = "0x91363C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0x9136AC", Offset = "0x9136AC", VA = "0x9136AC")]
	public static void PlayVideo(VideoClip newClip)
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0x913734", Offset = "0x913734", VA = "0x913734")]
	private void Update()
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0x913A68", Offset = "0x913A68", VA = "0x913A68")]
	public ObectiveVideoPlayer()
	{
	}
}
[Token(Token = "0x200001E")]
public class ObjectiveCamera : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string TakeImageStr;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform target;

	[Token(Token = "0x6000072")]
	[Address(RVA = "0x913A74", Offset = "0x913A74", VA = "0x913A74")]
	private void OnPreRender()
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0x913B70", Offset = "0x913B70", VA = "0x913B70")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0x913BD4", Offset = "0x913BD4", VA = "0x913BD4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0x913C9C", Offset = "0x913C9C", VA = "0x913C9C")]
	private void TakeImage()
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0x91401C", Offset = "0x91401C", VA = "0x91401C")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0x914044", Offset = "0x914044", VA = "0x914044")]
	public ObjectiveCamera()
	{
	}
}
[Token(Token = "0x200001F")]
public class ObjectiveDirection : UnityEngine.MonoBehaviour, IManagedLateUpdated
{
	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Image image;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 offset;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 largeSize;

	[Token(Token = "0x6000079")]
	[Address(RVA = "0x9140A8", Offset = "0x9140A8", VA = "0x9140A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0x914100", Offset = "0x914100", VA = "0x914100")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0x9141E8", Offset = "0x9141E8", VA = "0x9141E8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0x9142A4", Offset = "0x9142A4", VA = "0x9142A4", Slot = "4")]
	public void ManageLateUpdate()
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0x9146D0", Offset = "0x9146D0", VA = "0x9146D0")]
	public ObjectiveDirection()
	{
	}
}
[Token(Token = "0x2000020")]
public class ObjectiveLocation : UnityEngine.MonoBehaviour, IManagedLateUpdated
{
	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Image image;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Image bgImage;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 offset;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Color startColor;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Color endColor;

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x914768", Offset = "0x914768", VA = "0x914768")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x914888", Offset = "0x914888", VA = "0x914888")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x91493C", Offset = "0x91493C", VA = "0x91493C", Slot = "4")]
	public void ManageLateUpdate()
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x914AB8", Offset = "0x914AB8", VA = "0x914AB8")]
	public ObjectiveLocation()
	{
	}
}
[Token(Token = "0x2000021")]
public class ObjectiveMarker : UnityEngine.MonoBehaviour, IManagedLateUpdated
{
	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SpriteRenderer image;

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x914B84", Offset = "0x914B84", VA = "0x914B84")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0x914BE8", Offset = "0x914BE8", VA = "0x914BE8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0x914C4C", Offset = "0x914C4C", VA = "0x914C4C", Slot = "4")]
	public void ManageLateUpdate()
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x914FFC", Offset = "0x914FFC", VA = "0x914FFC")]
	public ObjectiveMarker()
	{
	}
}
[Token(Token = "0x2000022")]
public class ObjectiveTouchPreview : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ObjectiveTouchPreview instance;

	[Token(Token = "0x6000086")]
	[Address(RVA = "0x9158D4", Offset = "0x9158D4", VA = "0x9158D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x9159D4", Offset = "0x9159D4", VA = "0x9159D4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0x915A5C", Offset = "0x915A5C", VA = "0x915A5C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0x915A84", Offset = "0x915A84", VA = "0x915A84")]
	public ObjectiveTouchPreview()
	{
	}
}
[Token(Token = "0x2000023")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x6E061C", Offset = "0x6E061C")]
public class FastList<T>
{
	[Token(Token = "0x200035B")]
	public delegate int CompareFunc(T left, T right);

	[Token(Token = "0x200035C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E182C", Offset = "0x6E182C")]
	private sealed class <GetEnumerator>d__25 : IEnumerator<T>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4001172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T <>2__current;

		[Token(Token = "0x4001173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FastList<T> <>4__this;

		[Token(Token = "0x4001174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <i>5__2;

		[Token(Token = "0x17000217")]
		private T System.Collections.Generic.IEnumerator<T>.Current
		{
			[Token(Token = "0x60016D8")]
			[DebuggerHidden]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x17000218")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016DA")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016D5")]
		[DebuggerHidden]
		public <GetEnumerator>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x60016D6")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016D7")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016D9")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T[] array;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int size;

	[Token(Token = "0x17000001")]
	public int Count
	{
		[Token(Token = "0x600008C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600008D")]
		set
		{
		}
	}

	[Token(Token = "0x17000002")]
	public T Item
	{
		[Token(Token = "0x600008E")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x600008F")]
		set
		{
		}
	}

	[Token(Token = "0x600008A")]
	public FastList()
	{
	}

	[Token(Token = "0x600008B")]
	public FastList(int size)
	{
	}

	[Token(Token = "0x6000090")]
	public void Add(T item)
	{
	}

	[Token(Token = "0x6000091")]
	public void AddUnique(T item)
	{
	}

	[Token(Token = "0x6000092")]
	public void AddRange(IEnumerable<T> items)
	{
	}

	[Token(Token = "0x6000093")]
	public void Insert(int index, T item)
	{
	}

	[Token(Token = "0x6000094")]
	public bool Remove(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000095")]
	public void RemoveAt(int index)
	{
	}

	[Token(Token = "0x6000096")]
	public bool RemoveFast(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000097")]
	public void RemoveAtFast(int index)
	{
	}

	[Token(Token = "0x6000098")]
	public bool Contains(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000099")]
	public int IndexOf(T item)
	{
		return default(int);
	}

	[Token(Token = "0x600009A")]
	public T Pop()
	{
		return (T)null;
	}

	[Token(Token = "0x600009B")]
	public T[] ToArray()
	{
		return null;
	}

	[Token(Token = "0x600009C")]
	public void Sort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x600009D")]
	public void InsertionSort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x600009E")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6E9F6C", Offset = "0x6E9F6C")]
	public IEnumerator<T> GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x600009F")]
	public T Find(Predicate<T> match)
	{
		return (T)null;
	}

	[Token(Token = "0x60000A0")]
	private void Allocate()
	{
	}

	[Token(Token = "0x60000A1")]
	private void Trim()
	{
	}

	[Token(Token = "0x60000A2")]
	public void Clear()
	{
	}

	[Token(Token = "0x60000A3")]
	public void Release()
	{
	}
}
[Token(Token = "0x2000024")]
public class InspectorNoteAttribute : PropertyAttribute
{
	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string header;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly string message;

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x960F44", Offset = "0x960F44", VA = "0x960F44")]
	public InspectorNoteAttribute(string header, string message = "")
	{
	}
}
[Token(Token = "0x2000025")]
public class InspectorCommentAttribute : PropertyAttribute
{
	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string message;

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x960F18", Offset = "0x960F18", VA = "0x960F18")]
	public InspectorCommentAttribute(string message = "")
	{
	}
}
[Token(Token = "0x2000026")]
public class OvrAvatarTestDriver : OvrAvatarDriver
{
	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Vector3 headPos;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Quaternion headRot;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float voiceAmplitude;

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0xA24DB8", Offset = "0xA24DB8", VA = "0xA24DB8")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0xA24F24", Offset = "0xA24F24", VA = "0xA24F24")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0xA252C8", Offset = "0xA252C8", VA = "0xA252C8")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0xA25524", Offset = "0xA25524", VA = "0xA25524", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0xA25554", Offset = "0xA25554", VA = "0xA25554")]
	public OvrAvatarTestDriver()
	{
	}
}
[Token(Token = "0x2000027")]
public class PoseEditHelper : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform poseRoot;

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0x94E3C4", Offset = "0x94E3C4", VA = "0x94E3C4")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0x94E450", Offset = "0x94E450", VA = "0x94E450")]
	private void DrawJoints(Transform joint)
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0x94E5BC", Offset = "0x94E5BC", VA = "0x94E5BC")]
	public PoseEditHelper()
	{
	}
}
[Token(Token = "0x2000028")]
public class GazeTargetSpawner : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject GazeTargetPrefab;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int NumberOfDummyTargets;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int RadiusMultiplier;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool isVisible;

	[Token(Token = "0x17000003")]
	public bool IsVisible
	{
		[Token(Token = "0x60000AE")]
		[Address(RVA = "0x986498", Offset = "0x986498", VA = "0x986498")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000AF")]
		[Address(RVA = "0x9864A0", Offset = "0x9864A0", VA = "0x9864A0")]
		set
		{
		}
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x9865C8", Offset = "0x9865C8", VA = "0x9865C8")]
	private void Start()
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x9867E4", Offset = "0x9867E4", VA = "0x9867E4")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x9867EC", Offset = "0x9867EC", VA = "0x9867EC")]
	public GazeTargetSpawner()
	{
	}
}
[Token(Token = "0x2000029")]
public class RemoteLoopbackManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x200035D")]
	private class PacketLatencyPair
	{
		[Token(Token = "0x4001175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte[] PacketData;

		[Token(Token = "0x4001176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float FakeLatency;

		[Token(Token = "0x60016DB")]
		[Address(RVA = "0x952254", Offset = "0x952254", VA = "0x952254")]
		public PacketLatencyPair()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200035E")]
	public class SimulatedLatencySettings
	{
		[Token(Token = "0x4001177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6E9C3C", Offset = "0x6E9C3C")]
		public float FakeLatencyMax;

		[Token(Token = "0x4001178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6E9C54", Offset = "0x6E9C54")]
		public float FakeLatencyMin;

		[Token(Token = "0x4001179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6E9C6C", Offset = "0x6E9C6C")]
		public float LatencyWeight;

		[Token(Token = "0x400117A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6E9C84", Offset = "0x6E9C84")]
		public int MaxSamples;

		[Token(Token = "0x400117B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal float AverageWindow;

		[Token(Token = "0x400117C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal float LatencySum;

		[Token(Token = "0x400117D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal LinkedList<float> LatencyValues;

		[Token(Token = "0x60016DC")]
		[Address(RVA = "0x95225C", Offset = "0x95225C", VA = "0x95225C")]
		public float NextValue()
		{
			return default(float);
		}

		[Token(Token = "0x60016DD")]
		[Address(RVA = "0x9523F4", Offset = "0x9523F4", VA = "0x9523F4")]
		public SimulatedLatencySettings()
		{
		}
	}

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OvrAvatar LocalAvatar;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar LoopbackAvatar;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimulatedLatencySettings LatencySettings;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int PacketSequence;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LinkedList<PacketLatencyPair> packetQueue;

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x951924", Offset = "0x951924", VA = "0x951924")]
	private void Start()
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0x951A48", Offset = "0x951A48", VA = "0x951A48")]
	private void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0x951D94", Offset = "0x951D94", VA = "0x951D94")]
	private void Update()
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0x951CF8", Offset = "0x951CF8", VA = "0x951CF8")]
	private void SendPacketData(byte[] data)
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0x951FF0", Offset = "0x951FF0", VA = "0x951FF0")]
	private void ReceivePacketData(byte[] data)
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0x952368", Offset = "0x952368", VA = "0x952368")]
	public RemoteLoopbackManager()
	{
	}
}
[Token(Token = "0x200002A")]
public class GazeTarget : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarGazeTargetType Type;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ovrAvatarGazeTargets RuntimeTargetList;

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0x98616C", Offset = "0x98616C", VA = "0x98616C")]
	static GazeTarget()
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0x9861DC", Offset = "0x9861DC", VA = "0x9861DC")]
	private void Start()
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0x98632C", Offset = "0x98632C", VA = "0x98632C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0x986390", Offset = "0x986390", VA = "0x986390")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0x986218", Offset = "0x986218", VA = "0x986218")]
	private void UpdateGazeTarget()
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0x986430", Offset = "0x986430", VA = "0x986430")]
	private ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0x986490", Offset = "0x986490", VA = "0x986490")]
	public GazeTarget()
	{
	}
}
[Serializable]
[Token(Token = "0x200002B")]
public class AvatarLayer
{
	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int layerIndex;

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0x9AAD24", Offset = "0x9AAD24", VA = "0x9AAD24")]
	public AvatarLayer()
	{
	}
}
[Serializable]
[Token(Token = "0x200002C")]
public class PacketRecordSettings
{
	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal bool RecordingFrames;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float UpdateRate;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal float AccumulatedTime;

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0xA25F9C", Offset = "0xA25F9C", VA = "0xA25F9C")]
	public PacketRecordSettings()
	{
	}
}
[Token(Token = "0x200002D")]
public class OvrAvatar : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x200035F")]
	public class PacketEventArgs : EventArgs
	{
		[Token(Token = "0x400117E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly OvrAvatarPacket Packet;

		[Token(Token = "0x60016DE")]
		[Address(RVA = "0xA46B78", Offset = "0xA46B78", VA = "0xA46B78")]
		public PacketEventArgs(OvrAvatarPacket packet)
		{
		}
	}

	[Token(Token = "0x2000360")]
	public enum HandType
	{
		[Token(Token = "0x4001180")]
		Right,
		[Token(Token = "0x4001181")]
		Left,
		[Token(Token = "0x4001182")]
		Max
	}

	[Token(Token = "0x2000361")]
	public enum HandJoint
	{
		[Token(Token = "0x4001184")]
		HandBase,
		[Token(Token = "0x4001185")]
		IndexBase,
		[Token(Token = "0x4001186")]
		IndexTip,
		[Token(Token = "0x4001187")]
		ThumbBase,
		[Token(Token = "0x4001188")]
		ThumbTip,
		[Token(Token = "0x4001189")]
		Max
	}

	[Token(Token = "0x2000362")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E183C", Offset = "0x6E183C")]
	private sealed class <WaitForMouthAudioSource>d__132 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400118A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400118B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400118C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatar <>4__this;

		[Token(Token = "0x17000219")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60016E2")]
			[Address(RVA = "0xA48484", Offset = "0xA48484", VA = "0xA48484", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016E4")]
			[Address(RVA = "0xA484EC", Offset = "0xA484EC", VA = "0xA484EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016DF")]
		[Address(RVA = "0xA48090", Offset = "0xA48090", VA = "0xA48090")]
		[DebuggerHidden]
		public <WaitForMouthAudioSource>d__132(int <>1__state)
		{
		}

		[Token(Token = "0x60016E0")]
		[Address(RVA = "0xA482F4", Offset = "0xA482F4", VA = "0xA482F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016E1")]
		[Address(RVA = "0xA482F8", Offset = "0xA482F8", VA = "0xA482F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016E3")]
		[Address(RVA = "0xA4848C", Offset = "0xA4848C", VA = "0xA4848C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OvrAvatarMaterialManager DefaultBodyMaterialManager;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatarMaterialManager DefaultHandMaterialManager;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatarDriver Driver;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	internal OvrAvatarBase Base;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	internal OvrAvatarTouchController ControllerLeft;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	internal OvrAvatarTouchController ControllerRight;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	internal OvrAvatarBody Body;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	internal OvrAvatarHand HandLeft;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	internal OvrAvatarHand HandRight;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E2090", Offset = "0x6E2090")]
	public string oculusUserID;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	internal ulong oculusUserIDInternal;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E20C8", Offset = "0x6E20C8")]
	public bool EnableBody;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	public bool EnableHands;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
	public bool EnableBase;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x73")]
	public bool EnableExpressive;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E2100", Offset = "0x6E2100")]
	public bool RecordPackets;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
	public bool UseSDKPackets;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public PacketRecordSettings PacketSettings;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E2138", Offset = "0x6E2138")]
	public bool StartWithControllers;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AvatarLayer FirstPersonLayer;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AvatarLayer ThirdPersonLayer;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool ShowFirstPerson;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	public bool ShowThirdPerson;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
	public bool CanOwnMicrophone;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	internal ovrAvatarCapabilities Capabilities;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E2170", Offset = "0x6E2170")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E2170", Offset = "0x6E2170")]
	public bool UseTransparentRenderQueue;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Shader Monochrome_SurfaceShader;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Shader Monochrome_SurfaceShader_SelfOccluding;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Shader Monochrome_SurfaceShader_PBS;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Shader Skinshaded_SurfaceShader_SingleComponent;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Shader Skinshaded_VertFrag_SingleComponent;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Shader Skinshaded_VertFrag_CombinedMesh;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Shader Skinshaded_Expressive_SurfaceShader_SingleComponent;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Shader Skinshaded_Expressive_VertFrag_SingleComponent;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Shader Skinshaded_Expressive_VertFrag_CombinedMesh;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Shader Loader_VertFrag_CombinedMesh;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Shader EyeLens;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 MOUTH_HEAD_OFFSET;

	[Token(Token = "0x40000C3")]
	private const string MOUTH_HELPER_NAME = "MouthAnchor";

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private float[] visemes;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private AudioSource audioSource;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private ONSPAudioSource spatializedSource;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private int renderPartCount;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private bool showLeftController;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11D")]
	private bool showRightController;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private List<float[]> voiceUpdates;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private bool CombineMeshes;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x129")]
	private bool ForceMobileTextureFormat;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12A")]
	private bool WaitingForCombinedMesh;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public IntPtr sdkAvatar;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private HashSet<ulong> assetLoadingIds;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Dictionary<string, OvrAvatarComponent> trackedComponents;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public bool assetsFinishedLoading;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static bool doneExpressiveGlobalInit;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E21D0", Offset = "0x6E21D0")]
	public GameObject MouthAnchor;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public Transform LeftHandCustomPose;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public Transform RightHandCustomPose;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private Transform cachedLeftHandCustomPose;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Transform[] cachedCustomLeftHandJoints;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private ovrAvatarTransform[] cachedLeftHandTransforms;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private Transform cachedRightHandCustomPose;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private Transform[] cachedCustomRightHandJoints;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private ovrAvatarTransform[] cachedRightHandTransforms;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private Vector4 clothingAlphaOffset;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private ulong clothingAlphaTexture;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private OvrAvatarPacket CurrentUnityPacket;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static string[,] HandJoints;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	internal ovrAvatarAssetLevelOfDetail LevelOfDetail;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	internal ovrAvatarLookAndFeelVersion LookAndFeelVersion;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	internal ovrAvatarLookAndFeelVersion FallbackLookAndFeelVersion;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static ovrAvatarVisemes RuntimeVisemes;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public EventHandler<PacketEventArgs> PacketRecorded;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static Vector3 MOUTH_POSITION_OFFSET;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static string VOICE_PROPERTY;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static string MOUTH_POSITION_PROPERTY;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static string MOUTH_DIRECTION_PROPERTY;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static string MOUTH_SCALE_PROPERTY;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static float MOUTH_SCALE_GLOBAL;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private static float MOUTH_MAX_GLOBAL;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static string NECK_JONT;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public float VoiceAmplitude;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	public bool EnableMouthVertexAnimation;

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0xA4315C", Offset = "0xA4315C", VA = "0xA4315C")]
	static OvrAvatar()
	{
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0xA434BC", Offset = "0xA434BC", VA = "0xA434BC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0xA43524", Offset = "0xA43524", VA = "0xA43524")]
	public void AssetLoadedCallback(OvrAvatarAsset asset)
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0xA43590", Offset = "0xA43590", VA = "0xA43590")]
	public void CombinedMeshLoadedCallback(IntPtr assetPtr)
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0xA43674", Offset = "0xA43674", VA = "0xA43674")]
	private void AddAvatarComponent(GameObject componentObject, ovrAvatarComponent component)
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0xA43B88", Offset = "0xA43B88", VA = "0xA43B88")]
	private OvrAvatarSkinnedMeshRenderComponent AddSkinnedMeshRenderComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender)
	{
		return null;
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0xA43C84", Offset = "0xA43C84", VA = "0xA43C84")]
	private OvrAvatarSkinnedMeshRenderPBSComponent AddSkinnedMeshRenderPBSComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS)
	{
		return null;
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0xA43D7C", Offset = "0xA43D7C", VA = "0xA43D7C")]
	private OvrAvatarSkinnedMeshPBSV2RenderComponent AddSkinnedMeshRenderPBSV2Component(IntPtr renderPart, GameObject go, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRenderPBSV2, OvrAvatarMaterialManager materialManager, bool isBodyPartZero)
	{
		return null;
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0xA43F64", Offset = "0xA43F64", VA = "0xA43F64")]
	private OvrAvatarProjectorRenderComponent AddProjectorRenderComponent(GameObject gameObject, ovrAvatarRenderPart_ProjectorRender projectorRender)
	{
		return null;
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0xA440A8", Offset = "0xA440A8", VA = "0xA440A8")]
	public static IntPtr GetRenderPart(ovrAvatarComponent component, uint renderPartIndex)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0xA441E4", Offset = "0xA441E4", VA = "0xA441E4")]
	private void UpdateAvatarComponent(ovrAvatarComponent component)
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0xA44600", Offset = "0xA44600", VA = "0xA44600")]
	private static string GetRenderPartName(ovrAvatarComponent component, uint renderPartIndex)
	{
		return null;
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0xA44684", Offset = "0xA44684", VA = "0xA44684")]
	internal static void ConvertTransform(ovrAvatarTransform transform, Transform target)
	{
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0xA44710", Offset = "0xA44710", VA = "0xA44710")]
	public static ovrAvatarTransform CreateOvrAvatarTransform(Vector3 position, Quaternion orientation)
	{
		return default(ovrAvatarTransform);
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0xA4482C", Offset = "0xA4482C", VA = "0xA4482C")]
	private static ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0xA4488C", Offset = "0xA4488C", VA = "0xA4488C")]
	private void BuildRenderComponents()
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0xA44DAC", Offset = "0xA44DAC", VA = "0xA44DAC")]
	private void UpdateSDKAvatarUnityState()
	{
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0xA452A8", Offset = "0xA452A8", VA = "0xA452A8")]
	private void UpdateCustomPoses()
	{
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0xA45570", Offset = "0xA45570", VA = "0xA45570")]
	private static bool UpdatePoseRoot(Transform poseRoot, ref Transform cachedPoseRoot, ref Transform[] cachedPoseJoints, ref ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0xA456D4", Offset = "0xA456D4", VA = "0xA456D4")]
	private static bool UpdateTransforms(Transform[] joints, ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0xA4599C", Offset = "0xA4599C", VA = "0xA4599C")]
	private static void OrderJoints(Transform transform, List<Transform> joints)
	{
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0xA45A88", Offset = "0xA45A88", VA = "0xA45A88")]
	private void AvatarSpecificationCallback(IntPtr avatarSpecification)
	{
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0xA45D4C", Offset = "0xA45D4C", VA = "0xA45D4C")]
	private void Start()
	{
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0xA45F44", Offset = "0xA45F44", VA = "0xA45F44")]
	private void Update()
	{
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0xA462D0", Offset = "0xA462D0", VA = "0xA462D0")]
	public static ovrAvatarHandInputState CreateInputState(ovrAvatarTransform transform, OvrAvatarDriver.ControllerPose pose)
	{
		return default(ovrAvatarHandInputState);
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0xA46324", Offset = "0xA46324", VA = "0xA46324")]
	public void ShowControllers(bool show)
	{
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0xA45C5C", Offset = "0xA45C5C", VA = "0xA45C5C")]
	public void ShowLeftController(bool show)
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0xA45CD4", Offset = "0xA45CD4", VA = "0xA45CD4")]
	public void ShowRightController(bool show)
	{
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0xA46354", Offset = "0xA46354", VA = "0xA46354")]
	public void UpdateVoiceVisualization(float[] voiceSamples)
	{
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0xA46128", Offset = "0xA46128", VA = "0xA46128")]
	private void RecordFrame()
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0xA4653C", Offset = "0xA4653C", VA = "0xA4653C")]
	private void RecordUnityFrame()
	{
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0xA463BC", Offset = "0xA463BC", VA = "0xA463BC")]
	private void RecordSDKFrame()
	{
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0xA4377C", Offset = "0xA4377C", VA = "0xA4377C")]
	private void AddRenderParts(OvrAvatarComponent ovrComponent, ovrAvatarComponent component, Transform parent)
	{
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0xA46BF4", Offset = "0xA46BF4", VA = "0xA46BF4")]
	public void RefreshBodyParts()
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0xA46F20", Offset = "0xA46F20", VA = "0xA46F20")]
	public ovrAvatarBodyComponent? GetBodyComponent()
	{
		return null;
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0xA46F2C", Offset = "0xA46F2C", VA = "0xA46F2C")]
	public Transform GetHandTransform(HandType hand, HandJoint joint)
	{
		return null;
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0xA470E4", Offset = "0xA470E4", VA = "0xA470E4")]
	public void GetPointingDirection(HandType hand, ref Vector3 forward, ref Vector3 up)
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0xA471BC", Offset = "0xA471BC", VA = "0xA471BC")]
	public Transform GetMouthTransform()
	{
		return null;
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0xA44F10", Offset = "0xA44F10", VA = "0xA44F10")]
	private void UpdateVoiceBehavior()
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0xA47270", Offset = "0xA47270", VA = "0xA47270")]
	private bool IsValidMic()
	{
		return default(bool);
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0xA46138", Offset = "0xA46138", VA = "0xA46138")]
	private void InitPostLoad()
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0xA47394", Offset = "0xA47394", VA = "0xA47394")]
	private static void ExpressiveGlobalInit()
	{
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0xA47D10", Offset = "0xA47D10", VA = "0xA47D10")]
	private static ovrAvatarLight CreateLightDirectional(uint id, Vector3 direction, float intensity)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0xA47D80", Offset = "0xA47D80", VA = "0xA47D80")]
	private static ovrAvatarLight CreateLightPoint(uint id, Vector3 position, float range, float intensity)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0xA47DF8", Offset = "0xA47DF8", VA = "0xA47DF8")]
	private static ovrAvatarLight CreateLightSpot(uint id, Vector3 position, Vector3 direction, float spotAngleDeg, float range, float intensity)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0xA461A0", Offset = "0xA461A0", VA = "0xA461A0")]
	private void UpdateExpressive()
	{
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0xA478CC", Offset = "0xA478CC", VA = "0xA478CC")]
	private void ConfigureHelpers()
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0xA48020", Offset = "0xA48020", VA = "0xA48020")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6E9FD0", Offset = "0x6E9FD0")]
	private IEnumerator WaitForMouthAudioSource()
	{
		return null;
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0xA480BC", Offset = "0xA480BC", VA = "0xA480BC")]
	public void DestroyHelperObjects()
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0xA47EC4", Offset = "0xA47EC4", VA = "0xA47EC4")]
	public GameObject CreateHelperObject(Transform parent, Vector3 localPositionOffset, string helperName, string helperTag = "")
	{
		return null;
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0xA48184", Offset = "0xA48184", VA = "0xA48184")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0xA48188", Offset = "0xA48188", VA = "0xA48188")]
	public void UpdateVoiceData(float[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0xA47EC0", Offset = "0xA47EC0", VA = "0xA47EC0")]
	private void UpdateFacewave()
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0xA4818C", Offset = "0xA4818C", VA = "0xA4818C")]
	public OvrAvatar()
	{
	}
}
[Token(Token = "0x200002E")]
public class OvrAvatarAsset
{
	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong assetID;

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0xA484F4", Offset = "0xA484F4", VA = "0xA484F4")]
	public OvrAvatarAsset()
	{
	}
}
[Token(Token = "0x200002F")]
public class OvrAvatarAssetMesh : OvrAvatarAsset
{
	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh mesh;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAvatarSkinnedMeshPose skinnedBindPose;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string[] jointNames;

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0xA4855C", Offset = "0xA4855C", VA = "0xA4855C")]
	public OvrAvatarAssetMesh(ulong _assetId, IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0xA49744", Offset = "0xA49744", VA = "0xA49744")]
	private void LoadSubmeshes(IntPtr asset, IntPtr indexBufferPtr, ulong indexCount)
	{
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0xA4932C", Offset = "0xA4932C", VA = "0xA4932C")]
	private void LoadBlendShapes(IntPtr asset, long vertexCount)
	{
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0xA49184", Offset = "0xA49184", VA = "0xA49184")]
	private void SetSkinnedBindPose(IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0xA491E0", Offset = "0xA491E0", VA = "0xA491E0")]
	private void GetVertexAndIndexData(IntPtr asset, ovrAvatarAssetType meshType, out long vertexCount, out IntPtr vertexBuffer, out uint indexCount, out IntPtr indexBuffer)
	{
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0xA49970", Offset = "0xA49970", VA = "0xA49970")]
	public SkinnedMeshRenderer CreateSkinnedMeshRendererOnObject(GameObject target)
	{
		return null;
	}
}
[Token(Token = "0x2000030")]
public class OvrAvatarAssetTexture : OvrAvatarAsset
{
	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D texture;

	[Token(Token = "0x40000F4")]
	private const int ASTCHeaderSize = 16;

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0xA49EF0", Offset = "0xA49EF0", VA = "0xA49EF0")]
	public OvrAvatarAssetTexture(ulong _assetId, IntPtr asset)
	{
	}
}
[Token(Token = "0x2000031")]
public class OvrAvatarBase : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6000100")]
	[Address(RVA = "0xA4A114", Offset = "0xA4A114", VA = "0xA4A114")]
	public OvrAvatarBase()
	{
	}
}
[Token(Token = "0x2000032")]
public class OvrAvatarBody : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6000101")]
	[Address(RVA = "0xA4A11C", Offset = "0xA4A11C", VA = "0xA4A11C", Slot = "4")]
	public virtual void UpdatePose(float voiceAmplitude)
	{
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0xA4A120", Offset = "0xA4A120", VA = "0xA4A120")]
	public OvrAvatarBody()
	{
	}
}
[Token(Token = "0x2000033")]
public class OvrAvatarComponent : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string[] LayerKeywords;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string[] LayerSampleModeParameters;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly string[] LayerBlendModeParameters;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly string[] LayerMaskTypeParameters;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly string[] LayerColorParameters;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly string[] LayerSurfaceParameters;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly string[] LayerSampleParametersParameters;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static readonly string[] LayerMaskParametersParameters;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static readonly string[] LayerMaskAxisParameters;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<Material, ovrAvatarMaterialState> materialStates;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<OvrAvatarRenderComponent> RenderParts;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ulong ClothingAlphaTexture;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector4 ClothingAlphaOffset;

	[Token(Token = "0x6000103")]
	[Address(RVA = "0xA442EC", Offset = "0xA442EC", VA = "0xA442EC")]
	public void UpdateAvatar(ovrAvatarComponent component, OvrAvatar avatar)
	{
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0xA4A128", Offset = "0xA4A128", VA = "0xA4A128")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0xA4A188", Offset = "0xA4A188", VA = "0xA4A188")]
	public void UpdateAvatarMaterial(Material mat, ovrAvatarMaterialState matState)
	{
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0xA4AA24", Offset = "0xA4AA24", VA = "0xA4AA24")]
	public static Texture2D GetLoadedTexture(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0xA4AAC0", Offset = "0xA4AAC0", VA = "0xA4AAC0")]
	public OvrAvatarComponent()
	{
	}
}
[Token(Token = "0x2000034")]
public abstract class OvrAvatarDriver : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000363")]
	public enum PacketMode
	{
		[Token(Token = "0x400118E")]
		SDK,
		[Token(Token = "0x400118F")]
		Unity
	}

	[Token(Token = "0x2000364")]
	public struct ControllerPose
	{
		[Token(Token = "0x4001190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarButton buttons;

		[Token(Token = "0x4001191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ovrAvatarTouch touches;

		[Token(Token = "0x4001192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 joystickPosition;

		[Token(Token = "0x4001193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float indexTrigger;

		[Token(Token = "0x4001194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float handTrigger;

		[Token(Token = "0x4001195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isActive;

		[Token(Token = "0x60016E5")]
		[Address(RVA = "0xA4BEE8", Offset = "0xA4BEE8", VA = "0xA4BEE8")]
		public static ControllerPose Interpolate(ControllerPose a, ControllerPose b, float t)
		{
			return default(ControllerPose);
		}
	}

	[Token(Token = "0x2000365")]
	public struct PoseFrame
	{
		[Token(Token = "0x4001196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 headPosition;

		[Token(Token = "0x4001197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion headRotation;

		[Token(Token = "0x4001198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 handLeftPosition;

		[Token(Token = "0x4001199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion handLeftRotation;

		[Token(Token = "0x400119A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 handRightPosition;

		[Token(Token = "0x400119B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Quaternion handRightRotation;

		[Token(Token = "0x400119C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float voiceAmplitude;

		[Token(Token = "0x400119D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ControllerPose controllerLeftPose;

		[Token(Token = "0x400119E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public ControllerPose controllerRightPose;

		[Token(Token = "0x60016E6")]
		[Address(RVA = "0xA467C0", Offset = "0xA467C0", VA = "0xA467C0")]
		public static PoseFrame Interpolate(PoseFrame a, PoseFrame b, float t)
		{
			return default(PoseFrame);
		}
	}

	[Token(Token = "0x4000102")]
	private const ovrAvatarControllerType Desired6DofController = ovrAvatarControllerType.Touch;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PacketMode Mode;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected PoseFrame CurrentPose;

	[Token(Token = "0x6000109")]
	[Address(RVA = "0xA4BBB0", Offset = "0xA4BBB0", VA = "0xA4BBB0")]
	public PoseFrame GetCurrentPose()
	{
		return default(PoseFrame);
	}

	[Token(Token = "0x600010A")]
	public abstract void UpdateTransforms(IntPtr sdkAvatar);

	[Token(Token = "0x600010B")]
	[Address(RVA = "0xA4BBC0", Offset = "0xA4BBC0", VA = "0xA4BBC0")]
	protected void UpdateTransformsFromPose(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0xA4BE44", Offset = "0xA4BE44", VA = "0xA4BE44")]
	public static bool GetIsTrackedRemote()
	{
		return default(bool);
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0xA4BDB0", Offset = "0xA4BDB0", VA = "0xA4BDB0")]
	private ovrAvatarControllerType GetControllerType()
	{
		return default(ovrAvatarControllerType);
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0xA4BEE0", Offset = "0xA4BEE0", VA = "0xA4BEE0")]
	protected OvrAvatarDriver()
	{
	}
}
[Token(Token = "0x2000035")]
public class OvrAvatarHand : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x600010F")]
	[Address(RVA = "0xA4C044", Offset = "0xA4C044", VA = "0xA4C044")]
	public OvrAvatarHand()
	{
	}
}
[Token(Token = "0x2000036")]
public class OvrAvatarLocalDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float voiceAmplitude;

	[Token(Token = "0x6000110")]
	[Address(RVA = "0xA4C04C", Offset = "0xA4C04C", VA = "0xA4C04C")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0xA4C1B8", Offset = "0xA4C1B8", VA = "0xA4C1B8")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0xA4C55C", Offset = "0xA4C55C", VA = "0xA4C55C")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0xA4C8E4", Offset = "0xA4C8E4", VA = "0xA4C8E4", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0xA4C910", Offset = "0xA4C910", VA = "0xA4C910")]
	public OvrAvatarLocalDriver()
	{
	}
}
[Token(Token = "0x2000037")]
public class OvrAvatarLocalDriverNoMovement : OvrAvatarDriver
{
	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float voiceAmplitude;

	[Token(Token = "0x6000115")]
	[Address(RVA = "0xA4C918", Offset = "0xA4C918", VA = "0xA4C918")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0xA4CA34", Offset = "0xA4CA34", VA = "0xA4CA34")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0xA4CD84", Offset = "0xA4CD84", VA = "0xA4CD84")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0xA4D0F8", Offset = "0xA4D0F8", VA = "0xA4D0F8", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0xA4D124", Offset = "0xA4D124", VA = "0xA4D124")]
	public OvrAvatarLocalDriverNoMovement()
	{
	}
}
[Token(Token = "0x2000038")]
public class OvrAvatarMaterialManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000366")]
	public enum TextureType
	{
		[Token(Token = "0x40011A0")]
		DiffuseTextures,
		[Token(Token = "0x40011A1")]
		NormalMaps,
		[Token(Token = "0x40011A2")]
		RoughnessMaps,
		[Token(Token = "0x40011A3")]
		Count
	}

	[Serializable]
	[Token(Token = "0x2000367")]
	public struct AvatarComponentMaterialProperties
	{
		[Token(Token = "0x40011A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarBodyPartType TypeIndex;

		[Token(Token = "0x40011A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Color Color;

		[Token(Token = "0x40011A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D[] Textures;

		[Token(Token = "0x40011A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6E9C9C", Offset = "0x6E9C9C")]
		public float DiffuseIntensity;

		[Token(Token = "0x40011A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6E9CB4", Offset = "0x6E9CB4")]
		public float RimIntensity;

		[Token(Token = "0x40011A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6E9CCC", Offset = "0x6E9CCC")]
		public float ReflectionIntensity;
	}

	[Serializable]
	[Token(Token = "0x2000368")]
	public struct AvatarTextureArrayProperties
	{
		[Token(Token = "0x40011AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D[] Textures;

		[Token(Token = "0x40011AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2DArray TextureArray;
	}

	[Serializable]
	[Token(Token = "0x2000369")]
	public struct AvatarMaterialPropertyBlock
	{
		[Token(Token = "0x40011AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector4[] Colors;

		[Token(Token = "0x40011AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float[] DiffuseIntensities;

		[Token(Token = "0x40011AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float[] RimIntensities;

		[Token(Token = "0x40011AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] ReflectionIntensities;
	}

	[Serializable]
	[Token(Token = "0x200036A")]
	public class AvatarMaterialConfig
	{
		[Token(Token = "0x40011B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AvatarComponentMaterialProperties[] ComponentMaterialProperties;

		[Token(Token = "0x40011B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AvatarMaterialPropertyBlock MaterialPropertyBlock;

		[Token(Token = "0x60016E7")]
		[Address(RVA = "0xA4ECC0", Offset = "0xA4ECC0", VA = "0xA4ECC0")]
		public AvatarMaterialConfig()
		{
		}
	}

	[Token(Token = "0x200036B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E184C", Offset = "0x6E184C")]
	private sealed class <RunLoadingAnimation>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatarMaterialManager <>4__this;

		[Token(Token = "0x40011B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <srcBlend>5__2;

		[Token(Token = "0x40011B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <dstBlend>5__3;

		[Token(Token = "0x40011B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <transparentQueue>5__4;

		[Token(Token = "0x40011B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <renderQueue>5__5;

		[Token(Token = "0x40011B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string <renderTag>5__6;

		[Token(Token = "0x1700021B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60016EB")]
			[Address(RVA = "0xA4EC50", Offset = "0xA4EC50", VA = "0xA4EC50", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016ED")]
			[Address(RVA = "0xA4ECB8", Offset = "0xA4ECB8", VA = "0xA4ECB8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016E8")]
		[Address(RVA = "0xA4E414", Offset = "0xA4E414", VA = "0xA4E414")]
		[DebuggerHidden]
		public <RunLoadingAnimation>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x60016E9")]
		[Address(RVA = "0xA4E754", Offset = "0xA4E754", VA = "0xA4E754", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016EA")]
		[Address(RVA = "0xA4E758", Offset = "0xA4E758", VA = "0xA4E758", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016EC")]
		[Address(RVA = "0xA4EC58", Offset = "0xA4EC58", VA = "0xA4EC58", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D[] DiffuseFallbacks;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture2D[] NormalFallbacks;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Renderer TargetRenderer;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AvatarTextureArrayProperties[] TextureArrays;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OvrAvatarTextureCopyManager TextureCopyManager;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly string[] TextureTypeToShaderProperties;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<ReflectionProbeBlendInfo> ReflectionProbes;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AvatarMaterialConfig LocalAvatarConfig;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AvatarMaterialConfig DefaultAvatarConfig;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AvatarMaterialPropertyBlock LocalAvatarMaterialPropertyBlock;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Shader CombinedShader;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string AVATAR_SHADER_LOADER;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string AVATAR_SHADER_MAINTEX;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string AVATAR_SHADER_NORMALMAP;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string AVATAR_SHADER_ROUGHNESSMAP;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string AVATAR_SHADER_COLOR;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string AVATAR_SHADER_DIFFUSEINTENSITY;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string AVATAR_SHADER_RIMINTENSITY;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string AVATAR_SHADER_REFLECTIONINTENSITY;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static string AVATAR_SHADER_CUBEMAP;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static string AVATAR_SHADER_ALPHA;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static string AVATAR_SHADER_LOADING_DIMMER;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static string AVATAR_SHADER_IRIS_COLOR;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static string AVATAR_SHADER_LIP_COLOR;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static string AVATAR_SHADER_BROW_COLOR;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static string AVATAR_SHADER_LASH_COLOR;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static string AVATAR_SHADER_SCLERA_COLOR;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static string AVATAR_SHADER_GUM_COLOR;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static string AVATAR_SHADER_TEETH_COLOR;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static string AVATAR_SHADER_LIP_SMOOTHNESS;

	[Token(Token = "0x4000125")]
	private const float LOADING_ANIMATION_AMPLITUDE = 0.5f;

	[Token(Token = "0x4000126")]
	private const float LOADING_ANIMATION_PERIOD = 0.35f;

	[Token(Token = "0x4000127")]
	private const float LOADING_ANIMATION_CURVE_SCALE = 0.25f;

	[Token(Token = "0x4000128")]
	private const float LOADING_ANIMATION_DIMMER_MIN = 0.3f;

	[Token(Token = "0x600011A")]
	[Address(RVA = "0xA4D12C", Offset = "0xA4D12C", VA = "0xA4D12C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0xA4D194", Offset = "0xA4D194", VA = "0xA4D194")]
	public void CreateTextureArrays()
	{
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0xA4D288", Offset = "0xA4D288", VA = "0xA4D288")]
	public void SetRenderer(Renderer renderer)
	{
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0xA4D2B0", Offset = "0xA4D2B0", VA = "0xA4D2B0")]
	public void OnCombinedMeshReady()
	{
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0xA4D2EC", Offset = "0xA4D2EC", VA = "0xA4D2EC")]
	public void InitTextureArrays()
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0xA4D808", Offset = "0xA4D808", VA = "0xA4D808")]
	private void ProcessTexturesWithMips(Texture2D[] textures, int texArrayResolution, Texture2DArray texArray)
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0xA4D5D0", Offset = "0xA4D5D0", VA = "0xA4D5D0")]
	private void SetMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0xA4D8EC", Offset = "0xA4D8EC", VA = "0xA4D8EC")]
	private void ApplyMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0xA4DB64", Offset = "0xA4DB64", VA = "0xA4DB64")]
	public static ovrAvatarBodyPartType GetComponentType(string objectName)
	{
		return default(ovrAvatarBodyPartType);
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0xA4DC60", Offset = "0xA4DC60", VA = "0xA4DC60")]
	public void ValidateTextures()
	{
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0xA4D798", Offset = "0xA4D798", VA = "0xA4D798")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6EA034", Offset = "0x6EA034")]
	private IEnumerator RunLoadingAnimation()
	{
		return null;
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0xA4E440", Offset = "0xA4E440", VA = "0xA4E440")]
	public OvrAvatarMaterialManager()
	{
	}
}
[Token(Token = "0x2000039")]
public class OvrAvatarMeshInstance : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private HashSet<ulong> AssetsToLoad;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ulong MeshID;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ulong MaterialID;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ulong FadeTextureID;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarBodyPartType MeshType;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ovrAvatarMaterialState MaterialState;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private MeshFilter Mesh;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private MeshRenderer MeshInstance;

	[Token(Token = "0x6000127")]
	[Address(RVA = "0xA4ECC8", Offset = "0xA4ECC8", VA = "0xA4ECC8")]
	public void AssetLoadedCallback(OvrAvatarAsset asset)
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0xA4F7A8", Offset = "0xA4F7A8", VA = "0xA4F7A8")]
	public void SetMeshAssets(ulong fadeTexture, ulong meshID, ulong materialID, ovrAvatarBodyPartType type)
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0xA4ED6C", Offset = "0xA4ED6C", VA = "0xA4ED6C")]
	private void HandleAssetAvailable(OvrAvatarAsset asset)
	{
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0xA4F9FC", Offset = "0xA4F9FC", VA = "0xA4F9FC")]
	public void ChangeMaterial(ulong assetID)
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0xA4F85C", Offset = "0xA4F85C", VA = "0xA4F85C")]
	private void RequestAsset(ulong assetID)
	{
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0xA4F960", Offset = "0xA4F960", VA = "0xA4F960")]
	private void RequestMaterialTextures()
	{
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0xA4FA04", Offset = "0xA4FA04", VA = "0xA4FA04")]
	public void SetActive(bool active)
	{
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0xA4EF38", Offset = "0xA4EF38", VA = "0xA4EF38")]
	private void UpdateMaterial()
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0xA4FA54", Offset = "0xA4FA54", VA = "0xA4FA54")]
	public OvrAvatarMeshInstance()
	{
	}
}
[Token(Token = "0x200003A")]
public class OvrAvatarPacket
{
	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr ovrNativePacket;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<float> frameTimes;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<OvrAvatarDriver.PoseFrame> frames;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<byte[]> encodedAudioPackets;

	[Token(Token = "0x17000004")]
	public float Duration
	{
		[Token(Token = "0x6000130")]
		[Address(RVA = "0xA20394", Offset = "0xA20394", VA = "0xA20394")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000005")]
	public OvrAvatarDriver.PoseFrame FinalFrame
	{
		[Token(Token = "0x6000131")]
		[Address(RVA = "0xA20400", Offset = "0xA20400", VA = "0xA20400")]
		get
		{
			return default(OvrAvatarDriver.PoseFrame);
		}
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0xA20484", Offset = "0xA20484", VA = "0xA20484")]
	public OvrAvatarPacket()
	{
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0xA20548", Offset = "0xA20548", VA = "0xA20548")]
	public OvrAvatarPacket(OvrAvatarDriver.PoseFrame initialPose)
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0xA20688", Offset = "0xA20688", VA = "0xA20688")]
	private OvrAvatarPacket(List<float> frameTimes, List<OvrAvatarDriver.PoseFrame> frames, List<byte[]> audioPackets)
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0xA20764", Offset = "0xA20764", VA = "0xA20764")]
	public void AddFrame(OvrAvatarDriver.PoseFrame frame, float deltaSeconds)
	{
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0xA20834", Offset = "0xA20834", VA = "0xA20834")]
	public OvrAvatarDriver.PoseFrame GetPoseFrame(float seconds)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0xA20A40", Offset = "0xA20A40", VA = "0xA20A40")]
	public static OvrAvatarPacket Read(Stream stream)
	{
		return null;
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0xA20C98", Offset = "0xA20C98", VA = "0xA20C98")]
	public void Write(Stream stream)
	{
	}
}
[Token(Token = "0x200003B")]
internal static class BinaryWriterExtensions
{
	[Token(Token = "0x6000139")]
	[Address(RVA = "0x9AB568", Offset = "0x9AB568", VA = "0x9AB568")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.PoseFrame frame)
	{
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0x9AB67C", Offset = "0x9AB67C", VA = "0x9AB67C")]
	public static void Write(this BinaryWriter writer, Vector3 vec3)
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0x9AB828", Offset = "0x9AB828", VA = "0x9AB828")]
	public static void Write(this BinaryWriter writer, Vector2 vec2)
	{
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0x9AB6EC", Offset = "0x9AB6EC", VA = "0x9AB6EC")]
	public static void Write(this BinaryWriter writer, Quaternion quat)
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x9AB780", Offset = "0x9AB780", VA = "0x9AB780")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.ControllerPose pose)
	{
	}
}
[Token(Token = "0x200003C")]
internal static class BinaryReaderExtensions
{
	[Token(Token = "0x600013E")]
	[Address(RVA = "0x9AB168", Offset = "0x9AB168", VA = "0x9AB168")]
	public static OvrAvatarDriver.PoseFrame ReadPoseFrame(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0x9AB50C", Offset = "0x9AB50C", VA = "0x9AB50C")]
	public static Vector2 ReadVector2(this BinaryReader reader)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0x9AB308", Offset = "0x9AB308", VA = "0x9AB308")]
	public static Vector3 ReadVector3(this BinaryReader reader)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0x9AB380", Offset = "0x9AB380", VA = "0x9AB380")]
	public static Quaternion ReadQuaternion(this BinaryReader reader)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0x9AB41C", Offset = "0x9AB41C", VA = "0x9AB41C")]
	public static OvrAvatarDriver.ControllerPose ReadControllerPose(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.ControllerPose);
	}
}
[Token(Token = "0x200003D")]
public class OvrAvatarProjectorRenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material material;

	[Token(Token = "0x6000143")]
	[Address(RVA = "0xA20E88", Offset = "0xA20E88", VA = "0xA20E88")]
	internal void InitializeProjectorRender(ovrAvatarRenderPart_ProjectorRender render, Shader shader, OvrAvatarRenderComponent target)
	{
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0xA2114C", Offset = "0xA2114C", VA = "0xA2114C")]
	internal void UpdateProjectorRender(OvrAvatarComponent component, ovrAvatarRenderPart_ProjectorRender render)
	{
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0xA212B8", Offset = "0xA212B8", VA = "0xA212B8")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0xA21834", Offset = "0xA21834", VA = "0xA21834")]
	public OvrAvatarProjectorRenderComponent()
	{
	}
}
[Token(Token = "0x200003E")]
public class OvrAvatarRemoteDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Queue<OvrAvatarPacket> packetQueue;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private IntPtr CurrentSDKPacket;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float CurrentPacketTime;

	[Token(Token = "0x4000139")]
	private const int MinPacketQueue = 1;

	[Token(Token = "0x400013A")]
	private const int MaxPacketQueue = 4;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int CurrentSequence;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool isStreaming;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private OvrAvatarPacket currentPacket;

	[Token(Token = "0x6000147")]
	[Address(RVA = "0xA21854", Offset = "0xA21854", VA = "0xA21854")]
	public void QueuePacket(int sequence, OvrAvatarPacket packet)
	{
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0xA218E0", Offset = "0xA218E0", VA = "0xA218E0", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0xA218FC", Offset = "0xA218FC", VA = "0xA218FC")]
	private void UpdateFromSDKPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0xA21A68", Offset = "0xA21A68", VA = "0xA21A68")]
	private void UpdateFromUnityPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0xA21C04", Offset = "0xA21C04", VA = "0xA21C04")]
	public OvrAvatarRemoteDriver()
	{
	}
}
[Token(Token = "0x200003F")]
public class OvrAvatarRenderComponent : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool firstSkinnedUpdate;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SkinnedMeshRenderer mesh;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] bones;

	[Token(Token = "0x600014C")]
	[Address(RVA = "0xA21C7C", Offset = "0xA21C7C", VA = "0xA21C7C")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0xA21DA8", Offset = "0xA21DA8", VA = "0xA21DA8")]
	protected SkinnedMeshRenderer CreateSkinnedMesh(ulong assetID, ovrAvatarVisibilityFlags visibilityMask, int thirdPersonLayer, int firstPersonLayer, int sortingOrder)
	{
		return null;
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0xA22138", Offset = "0xA22138", VA = "0xA22138")]
	protected void UpdateSkinnedMesh(OvrAvatar avatar, Transform[] bones, ovrAvatarTransform localTransform, ovrAvatarVisibilityFlags visibilityMask, IntPtr renderPart)
	{
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0xA21054", Offset = "0xA21054", VA = "0xA21054")]
	protected Material CreateAvatarMaterial(string name, Shader shader)
	{
		return null;
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0xA21844", Offset = "0xA21844", VA = "0xA21844")]
	public OvrAvatarRenderComponent()
	{
	}
}
[Token(Token = "0x2000040")]
[Flags]
public enum ovrAvatarCapabilities
{
	[Token(Token = "0x4000142")]
	Body = 1,
	[Token(Token = "0x4000143")]
	Hands = 2,
	[Token(Token = "0x4000144")]
	Base = 4,
	[Token(Token = "0x4000145")]
	BodyTilt = 0x10,
	[Token(Token = "0x4000146")]
	Expressive = 0x20,
	[Token(Token = "0x4000147")]
	All = -1
}
[Token(Token = "0x2000041")]
public enum ovrAvatarMessageType
{
	[Token(Token = "0x4000149")]
	AvatarSpecification,
	[Token(Token = "0x400014A")]
	AssetLoaded,
	[Token(Token = "0x400014B")]
	Count
}
[Token(Token = "0x2000042")]
public struct ovrAvatarMessage_AvatarSpecification
{
	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public IntPtr avatarSpec;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ulong oculusUserID;
}
[Token(Token = "0x2000043")]
public struct ovrAvatarMessage_AssetLoaded
{
	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ulong assetID;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr asset;
}
[Token(Token = "0x2000044")]
public enum ovrAvatarAssetType
{
	[Token(Token = "0x4000151")]
	Mesh,
	[Token(Token = "0x4000152")]
	Texture,
	[Token(Token = "0x4000153")]
	Pose,
	[Token(Token = "0x4000154")]
	Material,
	[Token(Token = "0x4000155")]
	CombinedMesh,
	[Token(Token = "0x4000156")]
	PBSMaterial,
	[Token(Token = "0x4000157")]
	Count
}
[Token(Token = "0x2000045")]
public struct ovrAvatarMeshVertex
{
	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public byte[] blendIndices;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float[] blendWeights;
}
[Token(Token = "0x2000046")]
public struct ovrAvatarMeshVertexV2
{
	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float r;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float g;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float b;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float a;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public byte[] blendIndices;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float[] blendWeights;
}
[Token(Token = "0x2000047")]
public struct ovrAvatarBlendVertex
{
	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;
}
[Token(Token = "0x2000048")]
public struct ovrAvatarMeshAssetData
{
	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x2000049")]
public struct ovrAvatarMeshAssetDataV2
{
	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x200004A")]
public enum ovrAvatarTextureFormat
{
	[Token(Token = "0x400018C")]
	RGB24,
	[Token(Token = "0x400018D")]
	DXT1,
	[Token(Token = "0x400018E")]
	DXT5,
	[Token(Token = "0x400018F")]
	ASTC_RGB_6x6,
	[Token(Token = "0x4000190")]
	ASTC_RGB_6x6_MIPMAPS,
	[Token(Token = "0x4000191")]
	Count
}
[Token(Token = "0x200004B")]
public struct ovrAvatarTextureAssetData
{
	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTextureFormat format;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint sizeX;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public uint sizeY;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public uint mipCount;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong textureDataSize;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr textureData;
}
[Token(Token = "0x200004C")]
public enum ovrAvatarRenderPartType
{
	[Token(Token = "0x4000199")]
	SkinnedMeshRender,
	[Token(Token = "0x400019A")]
	SkinnedMeshRenderPBS,
	[Token(Token = "0x400019B")]
	ProjectorRender,
	[Token(Token = "0x400019C")]
	SkinnedMeshRenderPBS_V2,
	[Token(Token = "0x400019D")]
	Count
}
[Token(Token = "0x200004D")]
public struct ovrAvatarTransform
{
	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 position;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Quaternion orientation;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 scale;
}
[Token(Token = "0x200004E")]
[Flags]
public enum ovrAvatarButton
{
	[Token(Token = "0x40001A2")]
	One = 1,
	[Token(Token = "0x40001A3")]
	Two = 2,
	[Token(Token = "0x40001A4")]
	Three = 4,
	[Token(Token = "0x40001A5")]
	Joystick = 8
}
[Token(Token = "0x200004F")]
[Flags]
public enum ovrAvatarTouch
{
	[Token(Token = "0x40001A7")]
	One = 1,
	[Token(Token = "0x40001A8")]
	Two = 2,
	[Token(Token = "0x40001A9")]
	Joystick = 4,
	[Token(Token = "0x40001AA")]
	ThumbRest = 8,
	[Token(Token = "0x40001AB")]
	Index = 0x10,
	[Token(Token = "0x40001AC")]
	Pointing = 0x40,
	[Token(Token = "0x40001AD")]
	ThumbUp = 0x80
}
[Token(Token = "0x2000050")]
public struct ovrAvatarHandInputState
{
	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarButton buttonMask;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public ovrAvatarTouch touchMask;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float joystickX;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float joystickY;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float indexTrigger;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float handTrigger;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isActive;
}
[Token(Token = "0x2000051")]
public struct ovrAvatarComponent
{
	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint renderPartCount;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr renderParts;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string name;
}
[Token(Token = "0x2000052")]
public struct ovrAvatarBaseComponent
{
	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 basePosition;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000053")]
public struct ovrAvatarBodyComponent
{
	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform leftEyeTransform;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarTransform rightEyeTransform;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ovrAvatarTransform centerEyeTransform;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000054")]
public struct ovrAvatarControllerComponent
{
	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000055")]
public struct ovrAvatarHandComponent
{
	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000056")]
public enum ovrAvatarMaterialLayerBlendMode
{
	[Token(Token = "0x40001C5")]
	Add,
	[Token(Token = "0x40001C6")]
	Multiply,
	[Token(Token = "0x40001C7")]
	Count
}
[Token(Token = "0x2000057")]
public enum ovrAvatarMaterialLayerSampleMode
{
	[Token(Token = "0x40001C9")]
	Color,
	[Token(Token = "0x40001CA")]
	Texture,
	[Token(Token = "0x40001CB")]
	TextureSingleChannel,
	[Token(Token = "0x40001CC")]
	Parallax,
	[Token(Token = "0x40001CD")]
	Count
}
[Token(Token = "0x2000058")]
public enum ovrAvatarMaterialMaskType
{
	[Token(Token = "0x40001CF")]
	None,
	[Token(Token = "0x40001D0")]
	Positional,
	[Token(Token = "0x40001D1")]
	ViewReflection,
	[Token(Token = "0x40001D2")]
	Fresnel,
	[Token(Token = "0x40001D3")]
	Pulse,
	[Token(Token = "0x40001D4")]
	Count
}
[Token(Token = "0x2000059")]
public enum ovrAvatarControllerType
{
	[Token(Token = "0x40001D6")]
	Touch,
	[Token(Token = "0x40001D7")]
	Malibu,
	[Token(Token = "0x40001D8")]
	Go,
	[Token(Token = "0x40001D9")]
	Quest,
	[Token(Token = "0x40001DA")]
	Count
}
[Token(Token = "0x200005A")]
public enum ovrAvatarAssetLevelOfDetail
{
	[Token(Token = "0x40001DC")]
	Lowest = 1,
	[Token(Token = "0x40001DD")]
	Medium = 3,
	[Token(Token = "0x40001DE")]
	Highest = 5
}
[Token(Token = "0x200005B")]
public enum ovrAvatarLookAndFeelVersion
{
	[Token(Token = "0x40001E0")]
	Unknown = -1,
	[Token(Token = "0x40001E1")]
	One,
	[Token(Token = "0x40001E2")]
	Two
}
[Token(Token = "0x200005C")]
public struct ovrAvatarMaterialLayerState
{
	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarMaterialLayerBlendMode blendMode;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarMaterialMaskType maskType;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector4 layerColor;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector4 sampleParameters;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong sampleTexture;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector4 sampleScaleOffset;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector4 maskParameters;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 maskAxis;

	[Token(Token = "0x6000151")]
	[Address(RVA = "0xAC55BC", Offset = "0xAC55BC", VA = "0xAC55BC")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0x775B0C", Offset = "0x775B0C", VA = "0x775B0C", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0x775B14", Offset = "0x775B14", VA = "0x775B14", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x200005D")]
public struct ovrAvatarMaterialState
{
	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarMaterialMaskType baseMaskType;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector4 baseMaskParameters;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector4 baseMaskAxis;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong alphaMaskTextureID;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 alphaMaskScaleOffset;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong normalMapTextureID;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 normalMapScaleOffset;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong parallaxMapTextureID;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector4 parallaxMapScaleOffset;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ulong roughnessMapTextureID;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector4 roughnessMapScaleOffset;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public uint layerCount;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ovrAvatarMaterialLayerState[] layers;

	[Token(Token = "0x6000154")]
	[Address(RVA = "0xAC58F0", Offset = "0xAC58F0", VA = "0xAC58F0")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0x775D4C", Offset = "0x775D4C", VA = "0x775D4C", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0x775D54", Offset = "0x775D54", VA = "0x775D54", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x200005E")]
public struct ovrAvatarExpressiveParameters
{
	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 irisColor;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector4 scleraColor;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector4 lashColor;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector4 browColor;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 lipColor;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector4 teethColor;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector4 gumColor;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float browLashIntensity;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float lipSmoothness;

	[Token(Token = "0x6000157")]
	[Address(RVA = "0xAC5214", Offset = "0xAC5214", VA = "0xAC5214")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0x775854", Offset = "0x775854", VA = "0x775854", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0x77585C", Offset = "0x77585C", VA = "0x77585C", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x200005F")]
public struct ovrAvatarPBSMaterialState
{
	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong albedoTextureID;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector4 albedoMultiplier;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ulong metallicnessTextureID;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float glossinessScale;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong normalTextureID;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong heightTextureID;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ulong occlusionTextureID;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong emissionTextureID;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 emissionMultiplier;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong detailMaskTextureID;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ulong detailAlbedoTextureID;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ulong detailNormalTextureID;

	[Token(Token = "0x600015A")]
	[Address(RVA = "0xAC5E1C", Offset = "0xAC5E1C", VA = "0xAC5E1C")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0x7765D4", Offset = "0x7765D4", VA = "0x7765D4", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0x7765DC", Offset = "0x7765DC", VA = "0x7765DC", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000060")]
public class OvrAvatarAssetMaterial : OvrAvatarAsset
{
	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarMaterialState material;

	[Token(Token = "0x600015D")]
	[Address(RVA = "0xA484FC", Offset = "0xA484FC", VA = "0xA484FC")]
	public OvrAvatarAssetMaterial(ulong id, IntPtr mat)
	{
	}
}
[Token(Token = "0x2000061")]
public struct ovrAvatarSkinnedMeshPose
{
	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint jointCount;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarTransform[] jointTransform;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int[] jointParents;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr[] jointNames;
}
[Token(Token = "0x2000062")]
[Flags]
public enum ovrAvatarVisibilityFlags
{
	[Token(Token = "0x4000217")]
	FirstPerson = 1,
	[Token(Token = "0x4000218")]
	ThirdPerson = 2,
	[Token(Token = "0x4000219")]
	SelfOccluding = 4
}
[Token(Token = "0x2000063")]
public struct ovrAvatarRenderPart_SkinnedMeshRender
{
	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarMaterialState materialState;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x2000064")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS
{
	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong albedoTextureAssetID;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong surfaceTextureAssetID;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x2000065")]
public struct ovrAvatarRenderPart_ProjectorRender
{
	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint componentIndex;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public uint renderPartIndex;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ovrAvatarMaterialState materialState;
}
[Token(Token = "0x2000066")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2
{
	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarPBSMaterialState materialState;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x2000067")]
public enum ovrAvatarHandGesture
{
	[Token(Token = "0x400022F")]
	Default,
	[Token(Token = "0x4000230")]
	GripSphere,
	[Token(Token = "0x4000231")]
	GripCube,
	[Token(Token = "0x4000232")]
	Count
}
[Token(Token = "0x2000068")]
public enum ovrAvatarBodyPartType
{
	[Token(Token = "0x4000234")]
	Body,
	[Token(Token = "0x4000235")]
	Clothing,
	[Token(Token = "0x4000236")]
	Eyewear,
	[Token(Token = "0x4000237")]
	Hair,
	[Token(Token = "0x4000238")]
	Beard,
	[Token(Token = "0x4000239")]
	Count
}
[Token(Token = "0x2000069")]
public struct ovrAvatarBlendShapeParams
{
	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint blendShapeParamCount;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] blendShapeParams;
}
[Token(Token = "0x200006A")]
public struct ovrAvatarVisemes
{
	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint visemeParamCount;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] visemeParams;
}
[Token(Token = "0x200006B")]
public enum ovrAvatarGazeTargetType
{
	[Token(Token = "0x400023F")]
	AvatarHead,
	[Token(Token = "0x4000240")]
	AvatarHand,
	[Token(Token = "0x4000241")]
	Object,
	[Token(Token = "0x4000242")]
	ObjectStatic,
	[Token(Token = "0x4000243")]
	Count
}
[Token(Token = "0x200006C")]
public struct ovrAvatarGazeTarget
{
	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public Vector3 worldPosition;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarGazeTargetType type;
}
[Token(Token = "0x200006D")]
public struct ovrAvatarGazeTargets
{
	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint targetCount;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarGazeTarget[] targets;
}
[Token(Token = "0x200006E")]
public enum ovrAvatarLightType
{
	[Token(Token = "0x400024A")]
	Point,
	[Token(Token = "0x400024B")]
	Direction,
	[Token(Token = "0x400024C")]
	Spot,
	[Token(Token = "0x400024D")]
	Count
}
[Token(Token = "0x200006F")]
public struct ovrAvatarLight
{
	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarLightType type;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float intensity;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 worldDirection;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 worldPosition;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float range;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float spotAngleDeg;
}
[Token(Token = "0x2000070")]
public struct ovrAvatarLights
{
	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float ambientIntensity;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint lightCount;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarLight[] lights;
}
[Token(Token = "0x2000071")]
public delegate void specificationCallback(IntPtr specification);
[Token(Token = "0x2000072")]
public delegate void assetLoadedCallback(OvrAvatarAsset asset);
[Token(Token = "0x2000073")]
public delegate void combinedMeshLoadedCallback(IntPtr asset);
[Token(Token = "0x2000074")]
public class OvrAvatarSDKManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSDKManager _instance;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<ulong, HashSet<specificationCallback>> specificationCallbacks;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<ulong, HashSet<assetLoadedCallback>> assetLoadedCallbacks;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<IntPtr, combinedMeshLoadedCallback> combinedMeshLoadedCallbacks;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<ulong, OvrAvatarAsset> assetCache;

	[Token(Token = "0x17000006")]
	public static OvrAvatarSDKManager Instance
	{
		[Token(Token = "0x600016A")]
		[Address(RVA = "0xA21F6C", Offset = "0xA21F6C", VA = "0xA21F6C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0xA2247C", Offset = "0xA2247C", VA = "0xA2247C")]
	private void Initialize()
	{
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0xA225E0", Offset = "0xA225E0", VA = "0xA225E0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0xA225E8", Offset = "0xA225E8", VA = "0xA225E8")]
	private void Update()
	{
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0xA22AE8", Offset = "0xA22AE8", VA = "0xA22AE8")]
	public void RequestAvatarSpecification(ulong userId, specificationCallback callback, bool useCombinedMesh, ovrAvatarAssetLevelOfDetail lod, bool forceMobileTextureFormat, ovrAvatarLookAndFeelVersion lookVersion, ovrAvatarLookAndFeelVersion fallbackVersion, bool enableExpressive)
	{
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0xA22C78", Offset = "0xA22C78", VA = "0xA22C78")]
	public void BeginLoadingAsset(ulong assetId, ovrAvatarAssetLevelOfDetail lod, assetLoadedCallback callback)
	{
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0xA22D74", Offset = "0xA22D74", VA = "0xA22D74")]
	public void RegisterCombinedMeshCallback(IntPtr sdkAvatar, combinedMeshLoadedCallback callback)
	{
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0xA220B8", Offset = "0xA220B8", VA = "0xA220B8")]
	public OvrAvatarAsset GetAsset(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0xA22594", Offset = "0xA22594", VA = "0xA22594")]
	public string GetAppId()
	{
		return null;
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0xA22E94", Offset = "0xA22E94", VA = "0xA22E94")]
	public OvrAvatarSDKManager()
	{
	}
}
[Token(Token = "0x2000075")]
public sealed class OvrAvatarSettings : ScriptableObject
{
	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSettings instance;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string ovrAppID;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string ovrGearAppID;

	[Token(Token = "0x17000007")]
	public static string AppID
	{
		[Token(Token = "0x6000174")]
		[Address(RVA = "0xA22E54", Offset = "0xA22E54", VA = "0xA22E54")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000175")]
		[Address(RVA = "0xA22FB0", Offset = "0xA22FB0", VA = "0xA22FB0")]
		set
		{
		}
	}

	[Token(Token = "0x17000008")]
	public static string MobileAppID
	{
		[Token(Token = "0x6000176")]
		[Address(RVA = "0xA22E74", Offset = "0xA22E74", VA = "0xA22E74")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000177")]
		[Address(RVA = "0xA22FDC", Offset = "0xA22FDC", VA = "0xA22FDC")]
		set
		{
		}
	}

	[Token(Token = "0x17000009")]
	public static OvrAvatarSettings Instance
	{
		[Token(Token = "0x6000178")]
		[Address(RVA = "0xA22E9C", Offset = "0xA22E9C", VA = "0xA22E9C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000179")]
		[Address(RVA = "0xA23008", Offset = "0xA23008", VA = "0xA23008")]
		set
		{
		}
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0xA2305C", Offset = "0xA2305C", VA = "0xA2305C")]
	public OvrAvatarSettings()
	{
	}
}
[Token(Token = "0x2000076")]
public class OvrAvatarSkinnedMeshRenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Shader surface;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Shader surfaceSelfOccluding;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool previouslyActive;

	[Token(Token = "0x600017B")]
	[Address(RVA = "0xA24680", Offset = "0xA24680", VA = "0xA24680")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender, Shader surface, Shader surfaceSelfOccluding, int thirdPersonLayer, int firstPersonLayer, int sortOrder)
	{
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0xA2492C", Offset = "0xA2492C", VA = "0xA2492C")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0xA247CC", Offset = "0xA247CC", VA = "0xA247CC")]
	private void UpdateMeshMaterial(ovrAvatarVisibilityFlags visibilityMask, SkinnedMeshRenderer rootMesh)
	{
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0xA24B08", Offset = "0xA24B08", VA = "0xA24B08")]
	public OvrAvatarSkinnedMeshRenderComponent()
	{
	}
}
[Token(Token = "0x2000077")]
public class OvrAvatarSkinnedMeshRenderPBSComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x600017F")]
	[Address(RVA = "0xA24B18", Offset = "0xA24B18", VA = "0xA24B18")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS, Shader shader, int thirdPersonLayer, int firstPersonLayer, int sortOrder)
	{
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0xA24C58", Offset = "0xA24C58", VA = "0xA24C58")]
	internal void UpdateSkinnedMeshRenderPBS(OvrAvatar avatar, IntPtr renderPart, Material mat)
	{
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0xA24DA8", Offset = "0xA24DA8", VA = "0xA24DA8")]
	public OvrAvatarSkinnedMeshRenderPBSComponent()
	{
	}
}
[Token(Token = "0x2000078")]
public class OvrAvatarSkinnedMeshPBSV2RenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public OvrAvatarMaterialManager AvatarMaterialManager;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool PreviouslyActive;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool IsCombinedMaterial;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private ovrAvatarExpressiveParameters ExpressiveParameters;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private bool EnableExpressive;

	[Token(Token = "0x4000268")]
	private const string MAIN_MATERIAL_NAME = "main_material";

	[Token(Token = "0x4000269")]
	private const string EYE_MATERIAL_NAME = "eye_material";

	[Token(Token = "0x400026A")]
	private const string DEFAULT_MATERIAL_NAME = "_material";

	[Token(Token = "0x6000182")]
	[Address(RVA = "0xA230B4", Offset = "0xA230B4", VA = "0xA230B4")]
	internal void Initialize(IntPtr renderPart, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRender, OvrAvatarMaterialManager materialManager, int thirdPersonLayer, int firstPersonLayer, int sortOrder, bool isCombinedMaterial, ovrAvatarAssetLevelOfDetail lod, bool assignExpressiveParams, OvrAvatar avatar)
	{
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0xA23DBC", Offset = "0xA23DBC", VA = "0xA23DBC")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0xA23F08", Offset = "0xA23F08", VA = "0xA23F08")]
	private void InitializeSingleComponentMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0xA237B4", Offset = "0xA237B4", VA = "0xA237B4")]
	private void InitializeCombinedMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0xA24670", Offset = "0xA24670", VA = "0xA24670")]
	public OvrAvatarSkinnedMeshPBSV2RenderComponent()
	{
	}
}
[Token(Token = "0x2000079")]
public class OvrAvatarTextureCopyManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x200036C")]
	private struct CopyTextureParams
	{
		[Token(Token = "0x40011BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture Src;

		[Token(Token = "0x40011BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture Dst;

		[Token(Token = "0x40011BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Mip;

		[Token(Token = "0x40011BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int SrcSize;

		[Token(Token = "0x40011BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int DstElement;

		[Token(Token = "0x60016EE")]
		[Address(RVA = "0x7727DC", Offset = "0x7727DC", VA = "0x7727DC")]
		public CopyTextureParams(Texture src, Texture dst, int mip, int srcSize, int dstElement)
		{
		}
	}

	[Token(Token = "0x200036D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E185C", Offset = "0x6E185C")]
	private sealed class <CopyTextureCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CopyTextureParams copyTextureParams;

		[Token(Token = "0x1700021D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60016F2")]
			[Address(RVA = "0xA25BC4", Offset = "0xA25BC4", VA = "0xA25BC4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016F4")]
			[Address(RVA = "0xA25C2C", Offset = "0xA25C2C", VA = "0xA25C2C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016EF")]
		[Address(RVA = "0xA25AB0", Offset = "0xA25AB0", VA = "0xA25AB0")]
		[DebuggerHidden]
		public <CopyTextureCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60016F0")]
		[Address(RVA = "0xA25ADC", Offset = "0xA25ADC", VA = "0xA25ADC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016F1")]
		[Address(RVA = "0xA25AE0", Offset = "0xA25AE0", VA = "0xA25AE0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016F3")]
		[Address(RVA = "0xA25BCC", Offset = "0xA25BCC", VA = "0xA25BCC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400026B")]
	private const int TEXTURES_TO_COPY_QUEUE_CAPACITY = 256;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Queue<CopyTextureParams> texturesToCopy;

	[Token(Token = "0x6000187")]
	[Address(RVA = "0xA2560C", Offset = "0xA2560C", VA = "0xA2560C")]
	public OvrAvatarTextureCopyManager()
	{
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0xA25684", Offset = "0xA25684", VA = "0xA25684")]
	public void Update()
	{
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0xA25834", Offset = "0xA25834", VA = "0xA25834")]
	public int GetTextureCount()
	{
		return default(int);
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0xA25884", Offset = "0xA25884", VA = "0xA25884")]
	public void CopyTexture(Texture src, Texture dst, int mipLevel, int mipSize, int dstElement, bool useQueue = true)
	{
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0xA257B0", Offset = "0xA257B0", VA = "0xA257B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6EA138", Offset = "0x6EA138")]
	private IEnumerator CopyTextureCoroutine(CopyTextureParams copyTextureParams)
	{
		return null;
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0xA25A20", Offset = "0xA25A20", VA = "0xA25A20")]
	private void CopyTexture(CopyTextureParams copyTextureParams)
	{
	}
}
[Token(Token = "0x200007A")]
public class OvrAvatarTouchController : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x600018D")]
	[Address(RVA = "0xA25C34", Offset = "0xA25C34", VA = "0xA25C34")]
	public OvrAvatarTouchController()
	{
	}
}
[Token(Token = "0x200007B")]
public class BufferedAudioStream
{
	[Token(Token = "0x400026D")]
	private const bool VerboseLogging = false;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private AudioSource audio;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float[] audioBuffer;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int writePos;

	[Token(Token = "0x4000271")]
	private const float bufferLengthSeconds = 0.25f;

	[Token(Token = "0x4000272")]
	private const int sampleRate = 48000;

	[Token(Token = "0x4000273")]
	private const int bufferSize = 12000;

	[Token(Token = "0x4000274")]
	private const float playbackDelayTimeSeconds = 0.05f;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float playbackDelayRemaining;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float remainingBufferTime;

	[Token(Token = "0x600018E")]
	[Address(RVA = "0x9AD164", Offset = "0x9AD164", VA = "0x9AD164")]
	public BufferedAudioStream(AudioSource audio)
	{
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0x9AD274", Offset = "0x9AD274", VA = "0x9AD274")]
	public void Update()
	{
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0x9AD224", Offset = "0x9AD224", VA = "0x9AD224")]
	private void Stop()
	{
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0x9AD44C", Offset = "0x9AD44C", VA = "0x9AD44C")]
	public void AddData(float[] samples)
	{
	}
}
[Token(Token = "0x200007C")]
public class DebugUIBuilder : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x200036E")]
	public delegate void OnClick();

	[Token(Token = "0x200036F")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x2000370")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x2000371")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x2000372")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E186C", Offset = "0x6E186C")]
	private sealed class <>c__DisplayClass36_0
	{
		[Token(Token = "0x40011C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnClick handler;

		[Token(Token = "0x6001705")]
		[Address(RVA = "0x974CE4", Offset = "0x974CE4", VA = "0x974CE4")]
		public <>c__DisplayClass36_0()
		{
		}

		[Token(Token = "0x6001706")]
		[Address(RVA = "0x975684", Offset = "0x975684", VA = "0x975684")]
		internal void <AddButton>b__0()
		{
		}
	}

	[Token(Token = "0x2000373")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E187C", Offset = "0x6E187C")]
	private sealed class <>c__DisplayClass38_0
	{
		[Token(Token = "0x40011C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnSlider onValueChanged;

		[Token(Token = "0x6001707")]
		[Address(RVA = "0x974F58", Offset = "0x974F58", VA = "0x974F58")]
		public <>c__DisplayClass38_0()
		{
		}

		[Token(Token = "0x6001708")]
		[Address(RVA = "0x9758A8", Offset = "0x9758A8", VA = "0x9758A8")]
		internal void <AddSlider>b__0(float f)
		{
		}
	}

	[Token(Token = "0x2000374")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E188C", Offset = "0x6E188C")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x40011C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x40011C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6001709")]
		[Address(RVA = "0x975170", Offset = "0x975170", VA = "0x975170")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x600170A")]
		[Address(RVA = "0x975B2C", Offset = "0x975B2C", VA = "0x975B2C")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x2000375")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E189C", Offset = "0x6E189C")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x40011C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x40011C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x600170B")]
		[Address(RVA = "0x975304", Offset = "0x975304", VA = "0x975304")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x600170C")]
		[Address(RVA = "0x975F04", Offset = "0x975F04", VA = "0x975F04")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x2000376")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E18AC", Offset = "0x6E18AC")]
	private sealed class <>c__DisplayClass42_0
	{
		[Token(Token = "0x40011C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange handler;

		[Token(Token = "0x40011C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle tb;

		[Token(Token = "0x600170D")]
		[Address(RVA = "0x97555C", Offset = "0x97555C", VA = "0x97555C")]
		public <>c__DisplayClass42_0()
		{
		}

		[Token(Token = "0x600170E")]
		[Address(RVA = "0x975F24", Offset = "0x975F24", VA = "0x975F24")]
		internal void <AddRadio>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x4000277")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x4000278")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x4000279")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private bool manuallyResizeContentPanels;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool[] reEnable;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x4000287")]
	private const float elementSpacing = 16f;

	[Token(Token = "0x4000288")]
	private const float marginH = 16f;

	[Token(Token = "0x4000289")]
	private const float marginV = 16f;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector2[] insertPositions;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 menuOffset;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private OVRCameraRig rig;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private LaserPointer lp;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private LineRenderer lr;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x6000192")]
	[Address(RVA = "0x973C90", Offset = "0x973C90", VA = "0x973C90")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0x974094", Offset = "0x974094", VA = "0x974094")]
	public void Show()
	{
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0x974660", Offset = "0x974660", VA = "0x974660")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0x97440C", Offset = "0x97440C", VA = "0x97440C")]
	private void Relayout()
	{
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0x974808", Offset = "0x974808", VA = "0x974808")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0x974ABC", Offset = "0x974ABC", VA = "0x974ABC")]
	public RectTransform AddButton(string label, OnClick handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0x974CEC", Offset = "0x974CEC", VA = "0x974CEC")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0x974DD0", Offset = "0x974DD0", VA = "0x974DD0")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0x974F60", Offset = "0x974F60", VA = "0x974F60")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0x974FFC", Offset = "0x974FFC", VA = "0x974FFC")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0x975178", Offset = "0x975178", VA = "0x975178")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0x97530C", Offset = "0x97530C", VA = "0x97530C")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0x975564", Offset = "0x975564", VA = "0x975564")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0x975614", Offset = "0x975614", VA = "0x975614")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x200007D")]
public class HandedInputSelector : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0x956130", Offset = "0x956130", VA = "0x956130")]
	private void Start()
	{
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0x9561B8", Offset = "0x9561B8", VA = "0x9561B8")]
	private void Update()
	{
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0x956280", Offset = "0x956280", VA = "0x956280")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0x9562BC", Offset = "0x9562BC", VA = "0x9562BC")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x200007E")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x2000377")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x40011CB")]
		On,
		[Token(Token = "0x40011CC")]
		Off,
		[Token(Token = "0x40011CD")]
		OnWhenHitTarget
	}

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 _startPoint;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 _forward;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 _endPoint;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool _hitTarget;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x1700000A")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x60001A5")]
		[Address(RVA = "0x963020", Offset = "0x963020", VA = "0x963020")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x60001A4")]
		[Address(RVA = "0x962FDC", Offset = "0x962FDC", VA = "0x962FDC")]
		set
		{
		}
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0x963028", Offset = "0x963028", VA = "0x963028")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0x963080", Offset = "0x963080", VA = "0x963080")]
	private void Start()
	{
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0x963114", Offset = "0x963114", VA = "0x963114", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0x963130", Offset = "0x963130", VA = "0x963130", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0x963184", Offset = "0x963184", VA = "0x963184")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0x9633E0", Offset = "0x9633E0", VA = "0x9633E0")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0x9634F4", Offset = "0x9634F4", VA = "0x9634F4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0x963588", Offset = "0x963588", VA = "0x963588")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x200007F")]
public class BoundsLockedObject : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 m_initialOffset;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig m_playerOrigin;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GuardianBoundaryEnforcer m_enforcer;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Bounds? m_bounds;

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0x9ACAB0", Offset = "0x9ACAB0", VA = "0x9ACAB0")]
	private void Start()
	{
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0x9ACCBC", Offset = "0x9ACCBC", VA = "0x9ACCBC")]
	private void RefreshDisplay()
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0x9AD15C", Offset = "0x9AD15C", VA = "0x9AD15C")]
	public BoundsLockedObject()
	{
	}
}
[Token(Token = "0x2000080")]
public class GuardianBoundaryDisplay : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GuardianBoundaryEnforcer m_enforcer;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRBoundary.BoundaryType m_boundaryType;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_errorDisplay;

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0x955A10", Offset = "0x955A10", VA = "0x955A10")]
	private void Start()
	{
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0x955B44", Offset = "0x955B44", VA = "0x955B44")]
	private void RefreshDisplay()
	{
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0x955D94", Offset = "0x955D94", VA = "0x955D94")]
	public GuardianBoundaryDisplay()
	{
	}
}
[Token(Token = "0x2000081")]
public class GuardianBoundaryEnforcer : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool m_AllowRecenter;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig m_mainCamera;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Quaternion m_originalTrackerOrientation;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int m_framecount;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Quaternion m_orientToOriginalForward;

	[Token(Token = "0x1700000B")]
	public Quaternion OrientToOriginalForward
	{
		[Token(Token = "0x60001B6")]
		[Address(RVA = "0x955E40", Offset = "0x955E40", VA = "0x955E40")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x14000001")]
	public event Action TrackingChanged
	{
		[Token(Token = "0x60001B4")]
		[Address(RVA = "0x955AA0", Offset = "0x955AA0", VA = "0x955AA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EA19C", Offset = "0x6EA19C")]
		add
		{
		}
		[Token(Token = "0x60001B5")]
		[Address(RVA = "0x955D9C", Offset = "0x955D9C", VA = "0x955D9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EA1AC", Offset = "0x6EA1AC")]
		remove
		{
		}
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0x955E4C", Offset = "0x955E4C", VA = "0x955E4C")]
	private void Start()
	{
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0x955FA4", Offset = "0x955FA4", VA = "0x955FA4")]
	private void Update()
	{
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0x956118", Offset = "0x956118", VA = "0x956118")]
	private void Recentered()
	{
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0x956120", Offset = "0x956120", VA = "0x956120")]
	public GuardianBoundaryEnforcer()
	{
	}
}
[Token(Token = "0x2000082")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6E06B4", Offset = "0x6E06B4")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6E06B4", Offset = "0x6E06B4")]
public class CharacterCameraConstraint : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E22E8", Offset = "0x6E22E8")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E2320", Offset = "0x6E2320")]
	public float CurrentDistance;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E2358", Offset = "0x6E2358")]
	public bool EnableFadeout;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E2390", Offset = "0x6E2390")]
	public bool EnableCollision;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E23C8", Offset = "0x6E23C8")]
	public bool DynamicHeight;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E2400", Offset = "0x6E2400")]
	public float MaxFade;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E2438", Offset = "0x6E2438")]
	public float FadeMinDistance;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E2470", Offset = "0x6E2470")]
	public float FadeMaxDistance;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _cameraUpdateAction;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action _preCharacterMovementAction;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CharacterController _character;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private OVRPlayerController _playerController;

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0x9B3F34", Offset = "0x9B3F34", VA = "0x9B3F34")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0x9B3FF8", Offset = "0x9B3FF8", VA = "0x9B3FF8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0x9B4068", Offset = "0x9B4068", VA = "0x9B4068")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0x9B40AC", Offset = "0x9B40AC", VA = "0x9B40AC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0x9B40F0", Offset = "0x9B40F0", VA = "0x9B40F0")]
	private void CameraUpdate()
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0x9B4428", Offset = "0x9B4428", VA = "0x9B4428")]
	private void PreCharacterMovement()
	{
	}
}
[Token(Token = "0x2000083")]
public class LocomotionController : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CharacterController CharacterController;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRPlayerController PlayerController;

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0x96B144", Offset = "0x96B144", VA = "0x96B144")]
	private void Start()
	{
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0x96B280", Offset = "0x96B280", VA = "0x96B280")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x2000084")]
public class LocomotionTeleport : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000378")]
	public enum States
	{
		[Token(Token = "0x40011CF")]
		Ready,
		[Token(Token = "0x40011D0")]
		Aim,
		[Token(Token = "0x40011D1")]
		CancelAim,
		[Token(Token = "0x40011D2")]
		PreTeleport,
		[Token(Token = "0x40011D3")]
		CancelTeleport,
		[Token(Token = "0x40011D4")]
		Teleporting,
		[Token(Token = "0x40011D5")]
		PostTeleport
	}

	[Token(Token = "0x2000379")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x40011D7")]
		None,
		[Token(Token = "0x40011D8")]
		Aim,
		[Token(Token = "0x40011D9")]
		PreTeleport,
		[Token(Token = "0x40011DA")]
		Teleport
	}

	[Token(Token = "0x200037A")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x40011DC")]
		Point,
		[Token(Token = "0x40011DD")]
		Sphere,
		[Token(Token = "0x40011DE")]
		Capsule
	}

	[Token(Token = "0x200037B")]
	public class AimData
	{
		[Token(Token = "0x40011DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x40011E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x40011E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x40011E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x40011E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E9CE4", Offset = "0x6E9CE4")]
		private List<Vector3> <Points>k__BackingField;

		[Token(Token = "0x1700021F")]
		public List<Vector3> Points
		{
			[Token(Token = "0x6001710")]
			[Address(RVA = "0xD0FDFC", Offset = "0xD0FDFC", VA = "0xD0FDFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EDDF8", Offset = "0x6EDDF8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001711")]
			[Address(RVA = "0xD0FE04", Offset = "0xD0FE04", VA = "0xD0FE04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EDE08", Offset = "0x6EDE08")]
			private set
			{
			}
		}

		[Token(Token = "0x600170F")]
		[Address(RVA = "0xD0FD88", Offset = "0xD0FD88", VA = "0xD0FD88")]
		public AimData()
		{
		}

		[Token(Token = "0x6001712")]
		[Address(RVA = "0xD0FE0C", Offset = "0xD0FE0C", VA = "0xD0FE0C")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x200037C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E18BC", Offset = "0x6E18BC")]
	private sealed class <ReadyStateCoroutine>d__50 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000220")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001716")]
			[Address(RVA = "0xD0FBA0", Offset = "0xD0FBA0", VA = "0xD0FBA0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000221")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001718")]
			[Address(RVA = "0xD0FC08", Offset = "0xD0FC08", VA = "0xD0FC08", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001713")]
		[Address(RVA = "0xD0FA84", Offset = "0xD0FA84", VA = "0xD0FA84")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__50(int <>1__state)
		{
		}

		[Token(Token = "0x6001714")]
		[Address(RVA = "0xD0FAB0", Offset = "0xD0FAB0", VA = "0xD0FAB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001715")]
		[Address(RVA = "0xD0FAB4", Offset = "0xD0FAB4", VA = "0xD0FAB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001717")]
		[Address(RVA = "0xD0FBA8", Offset = "0xD0FBA8", VA = "0xD0FBA8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200037D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E18CC", Offset = "0x6E18CC")]
	private sealed class <AimStateCoroutine>d__62 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000222")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600171C")]
			[Address(RVA = "0xD0F48C", Offset = "0xD0F48C", VA = "0xD0F48C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000223")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600171E")]
			[Address(RVA = "0xD0F4F4", Offset = "0xD0F4F4", VA = "0xD0F4F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001719")]
		[Address(RVA = "0xD0F31C", Offset = "0xD0F31C", VA = "0xD0F31C")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__62(int <>1__state)
		{
		}

		[Token(Token = "0x600171A")]
		[Address(RVA = "0xD0F348", Offset = "0xD0F348", VA = "0xD0F348", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600171B")]
		[Address(RVA = "0xD0F34C", Offset = "0xD0F34C", VA = "0xD0F34C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600171D")]
		[Address(RVA = "0xD0F494", Offset = "0xD0F494", VA = "0xD0F494", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200037E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E18DC", Offset = "0x6E18DC")]
	private sealed class <CancelAimStateCoroutine>d__66 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000224")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001722")]
			[Address(RVA = "0xD0F5CC", Offset = "0xD0F5CC", VA = "0xD0F5CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000225")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001724")]
			[Address(RVA = "0xD0F634", Offset = "0xD0F634", VA = "0xD0F634", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600171F")]
		[Address(RVA = "0xD0F4FC", Offset = "0xD0F4FC", VA = "0xD0F4FC")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__66(int <>1__state)
		{
		}

		[Token(Token = "0x6001720")]
		[Address(RVA = "0xD0F528", Offset = "0xD0F528", VA = "0xD0F528", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001721")]
		[Address(RVA = "0xD0F52C", Offset = "0xD0F52C", VA = "0xD0F52C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001723")]
		[Address(RVA = "0xD0F5D4", Offset = "0xD0F5D4", VA = "0xD0F5D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200037F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E18EC", Offset = "0x6E18EC")]
	private sealed class <PreTeleportStateCoroutine>d__70 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000226")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001728")]
			[Address(RVA = "0xD0FA14", Offset = "0xD0FA14", VA = "0xD0FA14", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000227")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600172A")]
			[Address(RVA = "0xD0FA7C", Offset = "0xD0FA7C", VA = "0xD0FA7C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001725")]
		[Address(RVA = "0xD0F904", Offset = "0xD0F904", VA = "0xD0F904")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__70(int <>1__state)
		{
		}

		[Token(Token = "0x6001726")]
		[Address(RVA = "0xD0F930", Offset = "0xD0F930", VA = "0xD0F930", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001727")]
		[Address(RVA = "0xD0F934", Offset = "0xD0F934", VA = "0xD0F934", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001729")]
		[Address(RVA = "0xD0FA1C", Offset = "0xD0FA1C", VA = "0xD0FA1C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000380")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E18FC", Offset = "0x6E18FC")]
	private sealed class <CancelTeleportStateCoroutine>d__74 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000228")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600172E")]
			[Address(RVA = "0xD0F70C", Offset = "0xD0F70C", VA = "0xD0F70C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000229")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001730")]
			[Address(RVA = "0xD0F774", Offset = "0xD0F774", VA = "0xD0F774", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600172B")]
		[Address(RVA = "0xD0F63C", Offset = "0xD0F63C", VA = "0xD0F63C")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__74(int <>1__state)
		{
		}

		[Token(Token = "0x600172C")]
		[Address(RVA = "0xD0F668", Offset = "0xD0F668", VA = "0xD0F668", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600172D")]
		[Address(RVA = "0xD0F66C", Offset = "0xD0F66C", VA = "0xD0F66C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600172F")]
		[Address(RVA = "0xD0F714", Offset = "0xD0F714", VA = "0xD0F714", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000381")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E190C", Offset = "0x6E190C")]
	private sealed class <TeleportingStateCoroutine>d__78 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700022A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001734")]
			[Address(RVA = "0xD0FD18", Offset = "0xD0FD18", VA = "0xD0FD18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001736")]
			[Address(RVA = "0xD0FD80", Offset = "0xD0FD80", VA = "0xD0FD80", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001731")]
		[Address(RVA = "0xD0FC10", Offset = "0xD0FC10", VA = "0xD0FC10")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__78(int <>1__state)
		{
		}

		[Token(Token = "0x6001732")]
		[Address(RVA = "0xD0FC3C", Offset = "0xD0FC3C", VA = "0xD0FC3C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001733")]
		[Address(RVA = "0xD0FC40", Offset = "0xD0FC40", VA = "0xD0FC40", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001735")]
		[Address(RVA = "0xD0FD20", Offset = "0xD0FD20", VA = "0xD0FD20", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000382")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E191C", Offset = "0x6E191C")]
	private sealed class <PostTeleportStateCoroutine>d__82 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700022C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600173A")]
			[Address(RVA = "0xD0F894", Offset = "0xD0F894", VA = "0xD0F894", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600173C")]
			[Address(RVA = "0xD0F8FC", Offset = "0xD0F8FC", VA = "0xD0F8FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001737")]
		[Address(RVA = "0xD0F77C", Offset = "0xD0F77C", VA = "0xD0F77C")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__82(int <>1__state)
		{
		}

		[Token(Token = "0x6001738")]
		[Address(RVA = "0xD0F7A8", Offset = "0xD0F7A8", VA = "0xD0F7A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001739")]
		[Address(RVA = "0xD0F7AC", Offset = "0xD0F7AC", VA = "0xD0F7AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600173B")]
		[Address(RVA = "0xD0F89C", Offset = "0xD0F89C", VA = "0xD0F89C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E24A8", Offset = "0x6E24A8")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E24E0", Offset = "0x6E24E0")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E2518", Offset = "0x6E2518")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E2550", Offset = "0x6E2550")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E2588", Offset = "0x6E2588")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E25C0", Offset = "0x6E25C0")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E25F8", Offset = "0x6E25F8")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E2630", Offset = "0x6E2630")]
	public bool EnableRotationDuringPostTeleport;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2668", Offset = "0x6E2668")]
	private States <CurrentState>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E2678", Offset = "0x6E2678")]
	public TeleportDestination TeleportDestinationPrefab;

	[NonSerialized]
	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E26C0", Offset = "0x6E26C0")]
	private LocomotionController <LocomotionController>k__BackingField;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E26D0", Offset = "0x6E26D0")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E2708", Offset = "0x6E2708")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E2740", Offset = "0x6E2740")]
	public float AimCollisionRadius;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E2778", Offset = "0x6E2778")]
	public float AimCollisionHeight;

	[Token(Token = "0x1700000C")]
	public States CurrentState
	{
		[Token(Token = "0x60001C5")]
		[Address(RVA = "0x96BD50", Offset = "0x96BD50", VA = "0x96BD50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EA1BC", Offset = "0x6EA1BC")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x60001C6")]
		[Address(RVA = "0x96BD58", Offset = "0x96BD58", VA = "0x96BD58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EA1CC", Offset = "0x6EA1CC")]
		private set
		{
		}
	}

	[Token(Token = "0x1700000D")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x60001CA")]
		[Address(RVA = "0x96BF88", Offset = "0x96BF88", VA = "0x96BF88")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x1700000E")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x60001CB")]
		[Address(RVA = "0x96BFB0", Offset = "0x96BFB0", VA = "0x96BFB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EA1FC", Offset = "0x6EA1FC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001CC")]
		[Address(RVA = "0x96BFB8", Offset = "0x96BFB8", VA = "0x96BFB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EA20C", Offset = "0x6EA20C")]
		private set
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x60001C7")]
		[Address(RVA = "0x96BD60", Offset = "0x96BD60", VA = "0x96BD60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EA1DC", Offset = "0x6EA1DC")]
		add
		{
		}
		[Token(Token = "0x60001C8")]
		[Address(RVA = "0x96BE04", Offset = "0x96BE04", VA = "0x96BE04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EA1EC", Offset = "0x6EA1EC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x60001D5")]
		[Address(RVA = "0x96C6C0", Offset = "0x96C6C0", VA = "0x96C6C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EA254", Offset = "0x6EA254")]
		add
		{
		}
		[Token(Token = "0x60001D6")]
		[Address(RVA = "0x96C764", Offset = "0x96C764", VA = "0x96C764")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EA264", Offset = "0x6EA264")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x60001D8")]
		[Address(RVA = "0x96C808", Offset = "0x96C808", VA = "0x96C808")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EA2D8", Offset = "0x6EA2D8")]
		add
		{
		}
		[Token(Token = "0x60001D9")]
		[Address(RVA = "0x96C8AC", Offset = "0x96C8AC", VA = "0x96C8AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EA2E8", Offset = "0x6EA2E8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x60001DA")]
		[Address(RVA = "0x96C950", Offset = "0x96C950", VA = "0x96C950")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EA2F8", Offset = "0x6EA2F8")]
		add
		{
		}
		[Token(Token = "0x60001DB")]
		[Address(RVA = "0x96C9F4", Offset = "0x96C9F4", VA = "0x96C9F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EA308", Offset = "0x6EA308")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x60001DD")]
		[Address(RVA = "0x96CB0C", Offset = "0x96CB0C", VA = "0x96CB0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EA318", Offset = "0x6EA318")]
		add
		{
		}
		[Token(Token = "0x60001DE")]
		[Address(RVA = "0x96CBB0", Offset = "0x96CBB0", VA = "0x96CBB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EA328", Offset = "0x6EA328")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x60001E0")]
		[Address(RVA = "0x96CCC4", Offset = "0x96CCC4", VA = "0x96CCC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EA39C", Offset = "0x6EA39C")]
		add
		{
		}
		[Token(Token = "0x60001E1")]
		[Address(RVA = "0x96CD68", Offset = "0x96CD68", VA = "0x96CD68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EA3AC", Offset = "0x6EA3AC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x60001E3")]
		[Address(RVA = "0x96CE7C", Offset = "0x96CE7C", VA = "0x96CE7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EA420", Offset = "0x6EA420")]
		add
		{
		}
		[Token(Token = "0x60001E4")]
		[Address(RVA = "0x96CF20", Offset = "0x96CF20", VA = "0x96CF20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EA430", Offset = "0x6EA430")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x60001E6")]
		[Address(RVA = "0x96D034", Offset = "0x96D034", VA = "0x96D034")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EA4A4", Offset = "0x6EA4A4")]
		add
		{
		}
		[Token(Token = "0x60001E7")]
		[Address(RVA = "0x96D0D8", Offset = "0x96D0D8", VA = "0x96D0D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EA4B4", Offset = "0x6EA4B4")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x60001E9")]
		[Address(RVA = "0x96D1EC", Offset = "0x96D1EC", VA = "0x96D1EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EA528", Offset = "0x6EA528")]
		add
		{
		}
		[Token(Token = "0x60001EA")]
		[Address(RVA = "0x96D290", Offset = "0x96D290", VA = "0x96D290")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EA538", Offset = "0x6EA538")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x60001EC")]
		[Address(RVA = "0x96D3A4", Offset = "0x96D3A4", VA = "0x96D3A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EA5AC", Offset = "0x6EA5AC")]
		add
		{
		}
		[Token(Token = "0x60001ED")]
		[Address(RVA = "0x96D448", Offset = "0x96D448", VA = "0x96D448")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EA5BC", Offset = "0x6EA5BC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000C")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x60001EF")]
		[Address(RVA = "0x96D55C", Offset = "0x96D55C", VA = "0x96D55C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EA630", Offset = "0x6EA630")]
		add
		{
		}
		[Token(Token = "0x60001F0")]
		[Address(RVA = "0x96D600", Offset = "0x96D600", VA = "0x96D600")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EA640", Offset = "0x6EA640")]
		remove
		{
		}
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0x96B990", Offset = "0x96B990", VA = "0x96B990")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0x96B9B4", Offset = "0x96B9B4", VA = "0x96B9B4")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0x96BEA8", Offset = "0x96BEA8", VA = "0x96BEA8")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0x96BFC0", Offset = "0x96BFC0", VA = "0x96BFC0")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0x96C33C", Offset = "0x96C33C", VA = "0x96C33C")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6EA21C", Offset = "0x6EA21C")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0x96C3F4", Offset = "0x96C3F4", VA = "0x96C3F4")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0x96C49C", Offset = "0x96C49C", VA = "0x96C49C")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0x96C4B8", Offset = "0x96C4B8", VA = "0x96C4B8")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0x96C580", Offset = "0x96C580", VA = "0x96C580")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0x96C5C4", Offset = "0x96C5C4", VA = "0x96C5C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0x96C620", Offset = "0x96C620", VA = "0x96C620", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0x96C650", Offset = "0x96C650", VA = "0x96C650")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6EA274", Offset = "0x6EA274")]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0x96CA98", Offset = "0x96CA98", VA = "0x96CA98")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0x96CC54", Offset = "0x96CC54", VA = "0x96CC54")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6EA338", Offset = "0x6EA338")]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0x96CE0C", Offset = "0x96CE0C", VA = "0x96CE0C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6EA3BC", Offset = "0x6EA3BC")]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0x96CFC4", Offset = "0x96CFC4", VA = "0x96CFC4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6EA440", Offset = "0x6EA440")]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0x96D17C", Offset = "0x96D17C", VA = "0x96D17C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6EA4C4", Offset = "0x6EA4C4")]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0x96D334", Offset = "0x96D334", VA = "0x96D334")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6EA548", Offset = "0x6EA548")]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0x96D4EC", Offset = "0x96D4EC", VA = "0x96D4EC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6EA5CC", Offset = "0x6EA5CC")]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0x96D6A4", Offset = "0x96D6A4", VA = "0x96D6A4")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0x96D804", Offset = "0x96D804", VA = "0x96D804")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0x96D838", Offset = "0x96D838", VA = "0x96D838")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0x96D900", Offset = "0x96D900", VA = "0x96D900")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0x96DA48", Offset = "0x96DA48", VA = "0x96DA48")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x2000085")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x60001F6")]
	[Address(RVA = "0x904090", Offset = "0x904090", VA = "0x904090", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0x904124", Offset = "0x904124", VA = "0x904124", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x60001F8")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0x9041F4", Offset = "0x9041F4", VA = "0x9041F4")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x2000086")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E2850", Offset = "0x6E2850")]
	public float Range;

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0x904204", Offset = "0x904204", VA = "0x904204", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0x904360", Offset = "0x904360", VA = "0x904360")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x2000087")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E2888", Offset = "0x6E2888")]
	public float Range;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E28C0", Offset = "0x6E28C0")]
	public float MinimumElevation;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E28F8", Offset = "0x6E28F8")]
	public float Gravity;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E2930", Offset = "0x6E2930")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6E2930", Offset = "0x6E2930")]
	public float AimVelocity;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E298C", Offset = "0x6E298C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6E298C", Offset = "0x6E298C")]
	public float AimStep;

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0x904370", Offset = "0x904370", VA = "0x904370", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x9045BC", Offset = "0x9045BC", VA = "0x9045BC")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x2000088")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E29E4", Offset = "0x6E29E4")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x9045D0", Offset = "0x9045D0", VA = "0x9045D0")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0x9046B4", Offset = "0x9046B4", VA = "0x9046B4")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0x9046E4", Offset = "0x9046E4", VA = "0x9046E4")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0x904714", Offset = "0x904714", VA = "0x904714")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0x9047B4", Offset = "0x9047B4", VA = "0x9047B4", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0x904820", Offset = "0x904820", VA = "0x904820", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x904888", Offset = "0x904888", VA = "0x904888")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x2000089")]
public class TeleportDestination : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2A1C", Offset = "0x6E2A1C")]
	private bool <IsValidDestination>k__BackingField;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E2A2C", Offset = "0x6E2A2C")]
	public Transform PositionIndicator;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E2A64", Offset = "0x6E2A64")]
	public Transform OrientationIndicator;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E2A9C", Offset = "0x6E2A9C")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x1700000F")]
	public bool IsValidDestination
	{
		[Token(Token = "0x6000205")]
		[Address(RVA = "0x9049A4", Offset = "0x9049A4", VA = "0x9049A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EA650", Offset = "0x6EA650")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000206")]
		[Address(RVA = "0x9049AC", Offset = "0x9049AC", VA = "0x9049AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EA660", Offset = "0x6EA660")]
		private set
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x600020B")]
		[Address(RVA = "0x904B5C", Offset = "0x904B5C", VA = "0x904B5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EA670", Offset = "0x6EA670")]
		add
		{
		}
		[Token(Token = "0x600020C")]
		[Address(RVA = "0x904C00", Offset = "0x904C00", VA = "0x904C00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EA680", Offset = "0x6EA680")]
		remove
		{
		}
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0x9049B8", Offset = "0x9049B8", VA = "0x9049B8")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0x904A40", Offset = "0x904A40", VA = "0x904A40")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0x904B18", Offset = "0x904B18", VA = "0x904B18")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0x904B58", Offset = "0x904B58", VA = "0x904B58")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0x904CA4", Offset = "0x904CA4", VA = "0x904CA4")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0x904D0C", Offset = "0x904D0C", VA = "0x904D0C")]
	public void Recycle()
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0x904D2C", Offset = "0x904D2C", VA = "0x904D2C", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x200008A")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x2000383")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E192C", Offset = "0x6E192C")]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x1700022E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001740")]
			[Address(RVA = "0x9053F0", Offset = "0x9053F0", VA = "0x9053F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001742")]
			[Address(RVA = "0x905458", Offset = "0x905458", VA = "0x905458", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600173D")]
		[Address(RVA = "0x90513C", Offset = "0x90513C", VA = "0x90513C")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x600173E")]
		[Address(RVA = "0x905360", Offset = "0x905360", VA = "0x905360", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600173F")]
		[Address(RVA = "0x905364", Offset = "0x905364", VA = "0x905364", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001741")]
		[Address(RVA = "0x9053F8", Offset = "0x9053F8", VA = "0x9053F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000384")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E193C", Offset = "0x6E193C")]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x17000230")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001746")]
			[Address(RVA = "0x9052F0", Offset = "0x9052F0", VA = "0x9052F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000231")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001748")]
			[Address(RVA = "0x905358", Offset = "0x905358", VA = "0x905358", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001743")]
		[Address(RVA = "0x9051D8", Offset = "0x9051D8", VA = "0x9051D8")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001744")]
		[Address(RVA = "0x90525C", Offset = "0x90525C", VA = "0x90525C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001745")]
		[Address(RVA = "0x905260", Offset = "0x905260", VA = "0x905260", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001747")]
		[Address(RVA = "0x9052F8", Offset = "0x9052F8", VA = "0x9052F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x6000210")]
	[Address(RVA = "0x904F0C", Offset = "0x904F0C", VA = "0x904F0C")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0x904FB8", Offset = "0x904FB8", VA = "0x904FB8", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0x905010", Offset = "0x905010", VA = "0x905010", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0x9050CC", Offset = "0x9050CC", VA = "0x9050CC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6EA690", Offset = "0x6EA690")]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0x905168", Offset = "0x905168", VA = "0x905168")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6EA6F4", Offset = "0x6EA6F4")]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000215")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x6000216")]
	public abstract void GetAimData(out Ray aimRay);

	[Token(Token = "0x6000217")]
	[Address(RVA = "0x905204", Offset = "0x905204", VA = "0x905204")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EA758", Offset = "0x6EA758")]
	private void <.ctor>b__2_0()
	{
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0x905230", Offset = "0x905230", VA = "0x905230")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EA768", Offset = "0x6EA768")]
	private void <.ctor>b__2_1()
	{
	}
}
[Token(Token = "0x200008B")]
public class TeleportInputHandlerAvatarTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x2000385")]
	public enum InputModes
	{
		[Token(Token = "0x4001200")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x4001201")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x4001202")]
		ThumbstickTeleport,
		[Token(Token = "0x4001203")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x2000386")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x4001205")]
		A,
		[Token(Token = "0x4001206")]
		B,
		[Token(Token = "0x4001207")]
		LeftTrigger,
		[Token(Token = "0x4001208")]
		LeftThumbstick,
		[Token(Token = "0x4001209")]
		RightTrigger,
		[Token(Token = "0x400120A")]
		RightThumbstick,
		[Token(Token = "0x400120B")]
		X,
		[Token(Token = "0x400120C")]
		Y
	}

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E2AE4", Offset = "0x6E2AE4")]
	public OvrAvatar Avatar;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E2B1C", Offset = "0x6E2B1C")]
	public InputModes InputMode;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E2B54", Offset = "0x6E2B54")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E2B8C", Offset = "0x6E2B8C")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E2BC4", Offset = "0x6E2BC4")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x6000219")]
	[Address(RVA = "0x905460", Offset = "0x905460", VA = "0x905460")]
	private void Start()
	{
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0x905540", Offset = "0x905540", VA = "0x905540", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0x905AE4", Offset = "0x905AE4", VA = "0x905AE4", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0x905BBC", Offset = "0x905BBC", VA = "0x905BBC")]
	public TeleportInputHandlerAvatarTouch()
	{
	}
}
[Token(Token = "0x200008C")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2BFC", Offset = "0x6E2BFC")]
	private Transform <Pointer>k__BackingField;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E2C0C", Offset = "0x6E2C0C")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E2C44", Offset = "0x6E2C44")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E2C7C", Offset = "0x6E2C7C")]
	public bool FastTeleport;

	[Token(Token = "0x17000010")]
	public Transform Pointer
	{
		[Token(Token = "0x600021D")]
		[Address(RVA = "0x905C6C", Offset = "0x905C6C", VA = "0x905C6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EA778", Offset = "0x6EA778")]
		get
		{
			return null;
		}
		[Token(Token = "0x600021E")]
		[Address(RVA = "0x905C74", Offset = "0x905C74", VA = "0x905C74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EA788", Offset = "0x6EA788")]
		private set
		{
		}
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0x905988", Offset = "0x905988", VA = "0x905988", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0x905C7C", Offset = "0x905C7C", VA = "0x905C7C", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0x905C68", Offset = "0x905C68", VA = "0x905C68")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x200008D")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x2000387")]
	public enum OrientationModes
	{
		[Token(Token = "0x400120E")]
		HeadRelative,
		[Token(Token = "0x400120F")]
		ForwardFacing
	}

	[Token(Token = "0x2000388")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E194C", Offset = "0x6E194C")]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x17000232")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600174C")]
			[Address(RVA = "0x906118", Offset = "0x906118", VA = "0x906118", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000233")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600174E")]
			[Address(RVA = "0x906180", Offset = "0x906180", VA = "0x906180", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001749")]
		[Address(RVA = "0x905EF4", Offset = "0x905EF4", VA = "0x905EF4")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600174A")]
		[Address(RVA = "0x906070", Offset = "0x906070", VA = "0x906070", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600174B")]
		[Address(RVA = "0x906074", Offset = "0x906074", VA = "0x906074", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600174D")]
		[Address(RVA = "0x906120", Offset = "0x906120", VA = "0x906120", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x6000222")]
	[Address(RVA = "0x905D34", Offset = "0x905D34", VA = "0x905D34")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0x905DE8", Offset = "0x905DE8", VA = "0x905DE8")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0x905DF0", Offset = "0x905DF0", VA = "0x905DF0", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0x905E3C", Offset = "0x905E3C", VA = "0x905E3C", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0x905E84", Offset = "0x905E84", VA = "0x905E84")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6EA798", Offset = "0x6EA798")]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000227")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x6000228")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x6000229")]
	[Address(RVA = "0x905F20", Offset = "0x905F20", VA = "0x905F20")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0x906044", Offset = "0x906044", VA = "0x906044")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EA7FC", Offset = "0x6EA7FC")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x200008E")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x600022B")]
	[Address(RVA = "0x906188", Offset = "0x906188", VA = "0x906188", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0x90618C", Offset = "0x90618C", VA = "0x90618C", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0x906208", Offset = "0x906208", VA = "0x906208")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x200008F")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E2CB4", Offset = "0x6E2CB4")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E2CEC", Offset = "0x6E2CEC")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E2D24", Offset = "0x6E2D24")]
	public float AimDistanceThreshold;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E2D5C", Offset = "0x6E2D5C")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x600022E")]
	[Address(RVA = "0x90620C", Offset = "0x90620C", VA = "0x90620C", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0x90627C", Offset = "0x90627C", VA = "0x90627C", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0x9066F4", Offset = "0x9066F4", VA = "0x9066F4")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x2000090")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E2D94", Offset = "0x6E2D94")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E2DCC", Offset = "0x6E2DCC")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E2E04", Offset = "0x6E2E04")]
	public float RotateStickThreshold;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x6000231")]
	[Address(RVA = "0x9066F8", Offset = "0x9066F8", VA = "0x9066F8", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0x90673C", Offset = "0x90673C", VA = "0x90673C", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0x906BAC", Offset = "0x906BAC", VA = "0x906BAC")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x2000091")]
public class TeleportPoint : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x6000234")]
	[Address(RVA = "0x906BBC", Offset = "0x906BBC", VA = "0x906BBC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0x906BC0", Offset = "0x906BC0", VA = "0x906BC0")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0x906BC8", Offset = "0x906BC8", VA = "0x906BC8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0x906CB0", Offset = "0x906CB0", VA = "0x906CB0")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0x906CD8", Offset = "0x906CD8", VA = "0x906CD8")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x2000092")]
public abstract class TeleportSupport : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2E3C", Offset = "0x6E2E3C")]
	private LocomotionTeleport <LocomotionTeleport>k__BackingField;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x17000011")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x6000239")]
		[Address(RVA = "0x906CF0", Offset = "0x906CF0", VA = "0x906CF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EA80C", Offset = "0x6EA80C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600023A")]
		[Address(RVA = "0x906CF8", Offset = "0x906CF8", VA = "0x906CF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EA81C", Offset = "0x6EA81C")]
		private set
		{
		}
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0x9040C0", Offset = "0x9040C0", VA = "0x9040C0", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0x9041C8", Offset = "0x9041C8", VA = "0x9041C8", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0x906D00", Offset = "0x906D00", VA = "0x906D00")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6EA82C", Offset = "0x6EA82C")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0x904814", Offset = "0x904814", VA = "0x904814", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0x904880", Offset = "0x904880", VA = "0x904880", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0x9041FC", Offset = "0x9041FC", VA = "0x9041FC")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x2000093")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x2000389")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E195C", Offset = "0x6E195C")]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x17000234")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001752")]
			[Address(RVA = "0x907364", Offset = "0x907364", VA = "0x907364", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000235")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001754")]
			[Address(RVA = "0x9073CC", Offset = "0x9073CC", VA = "0x9073CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600174F")]
		[Address(RVA = "0x906F50", Offset = "0x906F50", VA = "0x906F50")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6001750")]
		[Address(RVA = "0x9070F8", Offset = "0x9070F8", VA = "0x9070F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001751")]
		[Address(RVA = "0x9070FC", Offset = "0x9070FC", VA = "0x9070FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001753")]
		[Address(RVA = "0x90736C", Offset = "0x90736C", VA = "0x90736C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E2E4C", Offset = "0x6E2E4C")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x6000241")]
	[Address(RVA = "0x906DC8", Offset = "0x906DC8", VA = "0x906DC8")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0x906E8C", Offset = "0x906E8C", VA = "0x906E8C", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0x906EB8", Offset = "0x906EB8", VA = "0x906EB8", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0x906EE0", Offset = "0x906EE0", VA = "0x906EE0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6EA864", Offset = "0x6EA864")]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0x906F7C", Offset = "0x906F7C", VA = "0x906F7C", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x6000246")]
	protected abstract bool ConsiderTeleport(Vector3 start, ref Vector3 end);

	[Token(Token = "0x6000247")]
	[Address(RVA = "0x906F98", Offset = "0x906F98", VA = "0x906F98", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0x9070CC", Offset = "0x9070CC", VA = "0x9070CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EA8C8", Offset = "0x6EA8C8")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x2000094")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x6000249")]
	[Address(RVA = "0x9073D4", Offset = "0x9073D4", VA = "0x9073D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0x907434", Offset = "0x907434", VA = "0x907434", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0x9075B8", Offset = "0x9075B8", VA = "0x9075B8", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0x9076A8", Offset = "0x9076A8", VA = "0x9076A8")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6EA8D8", Offset = "0x6EA8D8")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0x9076AC", Offset = "0x9076AC", VA = "0x9076AC")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x2000095")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E2E84", Offset = "0x6E2E84")]
	public float LOSOffset;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E2EBC", Offset = "0x6E2EBC")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x600024E")]
	[Address(RVA = "0x9076B8", Offset = "0x9076B8", VA = "0x9076B8", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0x9078E8", Offset = "0x9078E8", VA = "0x9078E8")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x2000096")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x6000250")]
	[Address(RVA = "0x9078F4", Offset = "0x9078F4", VA = "0x9078F4", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0x907A78", Offset = "0x907A78", VA = "0x907A78")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x2000097")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x6000252")]
	[Address(RVA = "0x907A7C", Offset = "0x907A7C", VA = "0x907A7C", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0x907B14", Offset = "0x907B14", VA = "0x907B14", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000254")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x6000255")]
	[Address(RVA = "0x907BA8", Offset = "0x907BA8", VA = "0x907BA8")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x2000098")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x200038A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E196C", Offset = "0x6E196C")]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x4001219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x400121A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x400121B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x17000236")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001758")]
			[Address(RVA = "0x907F10", Offset = "0x907F10", VA = "0x907F10", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000237")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600175A")]
			[Address(RVA = "0x907F78", Offset = "0x907F78", VA = "0x907F78", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001755")]
		[Address(RVA = "0x907C4C", Offset = "0x907C4C", VA = "0x907C4C")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6001756")]
		[Address(RVA = "0x907E10", Offset = "0x907E10", VA = "0x907E10", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001757")]
		[Address(RVA = "0x907E14", Offset = "0x907E14", VA = "0x907E14", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001759")]
		[Address(RVA = "0x907F18", Offset = "0x907F18", VA = "0x907F18", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E2EF4", Offset = "0x6E2EF4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6E2EF4", Offset = "0x6E2EF4")]
	public float TransitionDuration;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E2F4C", Offset = "0x6E2F4C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6E2F4C", Offset = "0x6E2F4C")]
	public float TeleportDelay;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E2FA0", Offset = "0x6E2FA0")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x6000256")]
	[Address(RVA = "0x907BB0", Offset = "0x907BB0", VA = "0x907BB0", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0x907BDC", Offset = "0x907BDC", VA = "0x907BDC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6EA910", Offset = "0x6EA910")]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0x907C78", Offset = "0x907C78", VA = "0x907C78")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x2000099")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x6000259")]
	[Address(RVA = "0x907F80", Offset = "0x907F80", VA = "0x907F80", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0x907F9C", Offset = "0x907F9C", VA = "0x907F9C")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x200009A")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x200038B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E197C", Offset = "0x6E197C")]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400121C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400121D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400121E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x400121F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x4001220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x17000238")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600175E")]
			[Address(RVA = "0x9081E8", Offset = "0x9081E8", VA = "0x9081E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000239")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001760")]
			[Address(RVA = "0x908250", Offset = "0x908250", VA = "0x908250", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600175B")]
		[Address(RVA = "0x908040", Offset = "0x908040", VA = "0x908040")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x600175C")]
		[Address(RVA = "0x9080B4", Offset = "0x9080B4", VA = "0x9080B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600175D")]
		[Address(RVA = "0x9080B8", Offset = "0x9080B8", VA = "0x9080B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600175F")]
		[Address(RVA = "0x9081F0", Offset = "0x9081F0", VA = "0x9081F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E2FD8", Offset = "0x6E2FD8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6E2FD8", Offset = "0x6E2FD8")]
	public float TransitionDuration;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x600025B")]
	[Address(RVA = "0x907FA4", Offset = "0x907FA4", VA = "0x907FA4", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0x907FD0", Offset = "0x907FD0", VA = "0x907FD0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6EA974", Offset = "0x6EA974")]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0x90806C", Offset = "0x90806C", VA = "0x90806C")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x200009B")]
public class DebugUISample : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inMenu;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text sliderText;

	[Token(Token = "0x600025E")]
	[Address(RVA = "0x9762F4", Offset = "0x9762F4", VA = "0x9762F4")]
	private void Start()
	{
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0x9766C4", Offset = "0x9766C4", VA = "0x9766C4")]
	public void TogglePressed(Toggle t)
	{
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0x97677C", Offset = "0x97677C", VA = "0x97677C")]
	public void RadioPressed(string radioLabel, string group, Toggle t)
	{
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0x97697C", Offset = "0x97697C", VA = "0x97697C")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0x976A64", Offset = "0x976A64", VA = "0x976A64")]
	private void Update()
	{
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0x976B40", Offset = "0x976B40", VA = "0x976B40")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0x976BAC", Offset = "0x976BAC", VA = "0x976BAC")]
	public DebugUISample()
	{
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0x976BB4", Offset = "0x976BB4", VA = "0x976BB4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EA9D8", Offset = "0x6EA9D8")]
	private void <Start>b__2_0(Toggle t)
	{
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0x976C10", Offset = "0x976C10", VA = "0x976C10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EA9E8", Offset = "0x6EA9E8")]
	private void <Start>b__2_1(Toggle t)
	{
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0x976C6C", Offset = "0x976C6C", VA = "0x976C6C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EA9F8", Offset = "0x6EA9F8")]
	private void <Start>b__2_2(Toggle t)
	{
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0x976CC8", Offset = "0x976CC8", VA = "0x976CC8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EAA08", Offset = "0x6EAA08")]
	private void <Start>b__2_3(Toggle t)
	{
	}
}
[Token(Token = "0x200009C")]
[ExecuteInEditMode]
public class CharacterCapsule : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController _character;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _height;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _radius;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6E3040", Offset = "0x6E3040")]
	public int SubdivisionsU;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6E305C", Offset = "0x6E305C")]
	public int SubdivisionsV;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _subdivisionU;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _subdivisionV;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _vertices;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x6000269")]
	[Address(RVA = "0x9B482C", Offset = "0x9B482C", VA = "0x9B482C")]
	private void Update()
	{
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0x9B52E4", Offset = "0x9B52E4", VA = "0x9B52E4")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x200009D")]
public class LocomotionSampleSupport : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocomotionController lc;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inMenu;

	[Token(Token = "0x17000012")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x600026B")]
		[Address(RVA = "0x96B288", Offset = "0x96B288", VA = "0x96B288")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0x96B2E0", Offset = "0x96B2E0", VA = "0x96B2E0")]
	public void Start()
	{
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0x96B654", Offset = "0x96B654", VA = "0x96B654")]
	public void Update()
	{
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0x96B738", Offset = "0x96B738", VA = "0x96B738")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6EAA18", Offset = "0x6EAA18")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x600026F")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : UnityEngine.MonoBehaviour where TActivate : UnityEngine.MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x6000270")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x6000271")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x6000272")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x6000273")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x6000274")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x6000275")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x6000276")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : UnityEngine.MonoBehaviour where TActivate : UnityEngine.MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0x96B7A0", Offset = "0x96B7A0", VA = "0x96B7A0")]
	protected void UpdateToggle(Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0x96B7DC", Offset = "0x96B7DC", VA = "0x96B7DC")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0x96B850", Offset = "0x96B850", VA = "0x96B850")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0x96B9D8", Offset = "0x96B9D8", VA = "0x96B9D8")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0x96BAAC", Offset = "0x96BAAC", VA = "0x96BAAC")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0x96B530", Offset = "0x96B530", VA = "0x96B530")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0x96BB9C", Offset = "0x96BB9C", VA = "0x96BB9C")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0x96BC34", Offset = "0x96BC34", VA = "0x96BC34")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0x96BD48", Offset = "0x96BD48", VA = "0x96BD48")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x200009E")]
public class StartMenu : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x200038C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E198C", Offset = "0x6E198C")]
	private sealed class <ShowOverlayAndLoad>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StartMenu <>4__this;

		[Token(Token = "0x4001224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string sceneName;

		[Token(Token = "0x4001225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AsyncOperation <asyncLoad>5__2;

		[Token(Token = "0x1700023A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001764")]
			[Address(RVA = "0x900FBC", Offset = "0x900FBC", VA = "0x900FBC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001766")]
			[Address(RVA = "0x901024", Offset = "0x901024", VA = "0x901024", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001761")]
		[Address(RVA = "0x900A70", Offset = "0x900A70", VA = "0x900A70")]
		[DebuggerHidden]
		public <ShowOverlayAndLoad>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6001762")]
		[Address(RVA = "0x900D74", Offset = "0x900D74", VA = "0x900D74", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001763")]
		[Address(RVA = "0x900D78", Offset = "0x900D78", VA = "0x900D78", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001765")]
		[Address(RVA = "0x900FC4", Offset = "0x900FC4", VA = "0x900FC4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVROverlay overlay;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVROverlay text;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig vrRig;

	[Token(Token = "0x6000280")]
	[Address(RVA = "0x9005D8", Offset = "0x9005D8", VA = "0x9005D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0x90096C", Offset = "0x90096C", VA = "0x90096C")]
	private void LoadScene(string sceneName)
	{
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0x9009F4", Offset = "0x9009F4", VA = "0x9009F4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6EAA50", Offset = "0x6EAA50")]
	private IEnumerator ShowOverlayAndLoad(string sceneName)
	{
		return null;
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0x900A9C", Offset = "0x900A9C", VA = "0x900A9C")]
	private void LoadAvatarGrab()
	{
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0x900AEC", Offset = "0x900AEC", VA = "0x900AEC")]
	private void LoadCustomControllers()
	{
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0x900B3C", Offset = "0x900B3C", VA = "0x900B3C")]
	private void LoadCustomHands()
	{
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0x900B8C", Offset = "0x900B8C", VA = "0x900B8C")]
	private void LoadDebugUI()
	{
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0x900BDC", Offset = "0x900BDC", VA = "0x900BDC")]
	private void LoadDistanceGrab()
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0x900C2C", Offset = "0x900C2C", VA = "0x900C2C")]
	private void LoadGuardianBoundarySystem()
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0x900C7C", Offset = "0x900C7C", VA = "0x900C7C")]
	private void LoadLocomotion()
	{
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0x900CCC", Offset = "0x900CCC", VA = "0x900CCC")]
	private void LoadMixedRealityCapture()
	{
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0x900D1C", Offset = "0x900D1C", VA = "0x900D1C")]
	private void LoadOVROverlay()
	{
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0x900D6C", Offset = "0x900D6C", VA = "0x900D6C")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x200009F")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x17000013")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x600028D")]
		[Address(RVA = "0x8DEC38", Offset = "0x8DEC38", VA = "0x8DEC38")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000014")]
	private static IntPtr Activity
	{
		[Token(Token = "0x600028E")]
		[Address(RVA = "0x8DEE64", Offset = "0x8DEE64", VA = "0x8DEE64")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000015")]
	public static bool IsAvailable
	{
		[Token(Token = "0x600028F")]
		[Address(RVA = "0x8DCD84", Offset = "0x8DCD84", VA = "0x8DCD84")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0x8DD908", Offset = "0x8DD908", VA = "0x8DD908")]
	public static void PlayVideo(string path, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0x8DD6C0", Offset = "0x8DD6C0", VA = "0x8DD6C0")]
	public static void Stop()
	{
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0x8DD0F4", Offset = "0x8DD0F4", VA = "0x8DD0F4")]
	public static void Play()
	{
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0x8DD20C", Offset = "0x8DD20C", VA = "0x8DD20C")]
	public static void Pause()
	{
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0x8DD578", Offset = "0x8DD578", VA = "0x8DD578")]
	public static void SetPlaybackSpeed(float speed)
	{
	}
}
[Token(Token = "0x20000A0")]
public class MoviePlayerSample : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x200038D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E199C", Offset = "0x6E199C")]
	private sealed class <Start>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x1700023C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600176A")]
			[Address(RVA = "0x8DDBB0", Offset = "0x8DDBB0", VA = "0x8DDBB0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600176C")]
			[Address(RVA = "0x8DDC18", Offset = "0x8DDC18", VA = "0x8DDC18", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001767")]
		[Address(RVA = "0x8DCE3C", Offset = "0x8DCE3C", VA = "0x8DCE3C")]
		[DebuggerHidden]
		public <Start>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6001768")]
		[Address(RVA = "0x8DDA48", Offset = "0x8DDA48", VA = "0x8DDA48", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001769")]
		[Address(RVA = "0x8DDA4C", Offset = "0x8DDA4C", VA = "0x8DDA4C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600176B")]
		[Address(RVA = "0x8DDBB8", Offset = "0x8DDBB8", VA = "0x8DDBB8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200038E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E19AC", Offset = "0x6E19AC")]
	private sealed class <>c__DisplayClass13_0
	{
		[Token(Token = "0x4001229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string moviePath;

		[Token(Token = "0x400122A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x600176D")]
		[Address(RVA = "0x8DD09C", Offset = "0x8DD09C", VA = "0x8DD09C")]
		public <>c__DisplayClass13_0()
		{
		}

		[Token(Token = "0x600176E")]
		[Address(RVA = "0x8DD878", Offset = "0x8DD878", VA = "0x8DD878")]
		internal void <Play>b__0()
		{
		}
	}

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E3078", Offset = "0x6E3078")]
	private bool <isPlaying>k__BackingField;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private RenderTexture copyTexture;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string MovieName;

	[Token(Token = "0x17000016")]
	public bool isPlaying
	{
		[Token(Token = "0x6000295")]
		[Address(RVA = "0x8DCA94", Offset = "0x8DCA94", VA = "0x8DCA94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EAAB4", Offset = "0x6EAAB4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000296")]
		[Address(RVA = "0x8DCA9C", Offset = "0x8DCA9C", VA = "0x8DCA9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EAAC4", Offset = "0x6EAAC4")]
		private set
		{
		}
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0x8DCAA8", Offset = "0x8DCAA8", VA = "0x8DCAA8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0x8DCDCC", Offset = "0x8DCDCC", VA = "0x8DCDCC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6EAAD4", Offset = "0x6EAAD4")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0x8DCE68", Offset = "0x8DCE68", VA = "0x8DCE68")]
	public void Play(string moviePath)
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0x8DD0A4", Offset = "0x8DD0A4", VA = "0x8DD0A4")]
	public void Play()
	{
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0x8DD1C0", Offset = "0x8DD1C0", VA = "0x8DD1C0")]
	public void Pause()
	{
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0x8DD2D8", Offset = "0x8DD2D8", VA = "0x8DD2D8")]
	private void Update()
	{
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0x8DD538", Offset = "0x8DD538", VA = "0x8DD538")]
	public void Rewind()
	{
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0x8DD674", Offset = "0x8DD674", VA = "0x8DD674")]
	public void Stop()
	{
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0x8DD78C", Offset = "0x8DD78C", VA = "0x8DD78C")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0x8DD870", Offset = "0x8DD870", VA = "0x8DD870")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x20000A1")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6E0750", Offset = "0x6E0750")]
public class OVROverlayMeshGenerator : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x200038F")]
	private enum CubeFace
	{
		[Token(Token = "0x400122C")]
		Right,
		[Token(Token = "0x400122D")]
		Left,
		[Token(Token = "0x400122E")]
		Top,
		[Token(Token = "0x400122F")]
		Bottom,
		[Token(Token = "0x4001230")]
		Front,
		[Token(Token = "0x4001231")]
		Back,
		[Token(Token = "0x4001232")]
		COUNT
	}

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Mesh _Mesh;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Vector3> _Verts;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Vector2> _UV;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<int> _Tris;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OVROverlay _Overlay;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MeshFilter _MeshFilter;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MeshCollider _MeshCollider;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform _CameraRoot;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform _Transform;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private OVROverlay.OverlayShape _LastShape;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 _LastPosition;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Quaternion _LastRotation;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 _LastScale;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Rect _LastRectLeft;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Rect _LastRectRight;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private bool _Awake;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3[] BottomLeft;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly Vector3[] RightVector;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly Vector3[] UpVector;

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0x90FF74", Offset = "0x90FF74", VA = "0x90FF74")]
	protected void Awake()
	{
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0x9100D4", Offset = "0x9100D4", VA = "0x9100D4")]
	private Rect GetBoundingRect(Rect a, Rect b)
	{
		return default(Rect);
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0x910290", Offset = "0x910290", VA = "0x910290")]
	private void Update()
	{
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0x910768", Offset = "0x910768", VA = "0x910768")]
	private void UpdateMesh(OVROverlay.OverlayShape shape, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect)
	{
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0x910A3C", Offset = "0x910A3C", VA = "0x910A3C")]
	public static void GenerateMesh(List<Vector3> verts, List<Vector2> uvs, List<int> tris, OVROverlay.OverlayShape shape, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect)
	{
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0x911C98", Offset = "0x911C98", VA = "0x911C98")]
	private static Vector2 GetSphereUV(float theta, float phi, float expand_coef)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0x911CF8", Offset = "0x911CF8", VA = "0x911CF8")]
	private static Vector3 GetSphereVert(float theta, float phi)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0x910DBC", Offset = "0x910DBC", VA = "0x910DBC")]
	public static void BuildSphere(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect, float worldScale = 800f, int latitudes = 128, int longitudes = 128, float expand_coef = 1f)
	{
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0x911DE0", Offset = "0x911DE0", VA = "0x911DE0")]
	private static Vector2 GetCubeUV(CubeFace face, Vector2 sideUV, float expand_coef)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0x911FCC", Offset = "0x911FCC", VA = "0x911FCC")]
	private static Vector3 GetCubeVert(CubeFace face, Vector2 sideUV, float expand_coef)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0x911274", Offset = "0x911274", VA = "0x911274")]
	public static void BuildCube(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 position, Quaternion rotation, Vector3 scale, float worldScale = 800f, int subQuads = 1, float expand_coef = 1.01f)
	{
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0x91159C", Offset = "0x91159C", VA = "0x91159C")]
	public static void BuildQuad(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Rect rect)
	{
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0x9118F4", Offset = "0x9118F4", VA = "0x9118F4")]
	public static void BuildHemicylinder(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 scale, Rect rect, int longitudes = 128)
	{
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0x912180", Offset = "0x912180", VA = "0x912180")]
	public OVROverlayMeshGenerator()
	{
	}
}
[Token(Token = "0x20000A2")]
public static class VectorUtil
{
	[Token(Token = "0x60002B0")]
	[Address(RVA = "0xABF3D4", Offset = "0xABF3D4", VA = "0xABF3D4")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x20000A3")]
public class ONSPAmbisonicsNative : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000390")]
	public enum ovrAmbisonicsNativeStatus
	{
		[Token(Token = "0x4001234")]
		Uninitialized = -1,
		[Token(Token = "0x4001235")]
		NotEnabled,
		[Token(Token = "0x4001236")]
		Success,
		[Token(Token = "0x4001237")]
		StreamError,
		[Token(Token = "0x4001238")]
		ProcessError,
		[Token(Token = "0x4001239")]
		MaxStatValue
	}

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int numFOAChannels;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int paramVSpeakerMode;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int paramAmbiStat;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ovrAmbisonicsNativeStatus currentStatus;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private bool useVirtualSpeakers;

	[Token(Token = "0x17000017")]
	public bool UseVirtualSpeakers
	{
		[Token(Token = "0x60002B1")]
		[Address(RVA = "0x10E57F4", Offset = "0x10E57F4", VA = "0x10E57F4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002B2")]
		[Address(RVA = "0x10E57FC", Offset = "0x10E57FC", VA = "0x10E57FC")]
		set
		{
		}
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0x10E5808", Offset = "0x10E5808", VA = "0x10E5808")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0x10E5A24", Offset = "0x10E5A24", VA = "0x10E5A24")]
	private void Update()
	{
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0x10E5C80", Offset = "0x10E5C80", VA = "0x10E5C80")]
	public ONSPAmbisonicsNative()
	{
	}
}
[Token(Token = "0x20000A4")]
public class ONSPAudioSource : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000391")]
	private enum Parameters
	{
		[Token(Token = "0x400123B")]
		P_GAIN,
		[Token(Token = "0x400123C")]
		P_USEINVSQR,
		[Token(Token = "0x400123D")]
		P_NEAR,
		[Token(Token = "0x400123E")]
		P_FAR,
		[Token(Token = "0x400123F")]
		P_RADIUS,
		[Token(Token = "0x4001240")]
		P_DISABLE_RFL,
		[Token(Token = "0x4001241")]
		P_VSPEAKERMODE,
		[Token(Token = "0x4001242")]
		P_AMBISTAT,
		[Token(Token = "0x4001243")]
		P_READONLY_GLOBAL_RFL_ENABLED,
		[Token(Token = "0x4001244")]
		P_READONLY_NUM_VOICES,
		[Token(Token = "0x4001245")]
		P_SENDLEVEL,
		[Token(Token = "0x4001246")]
		P_NUM
	}

	[Token(Token = "0x4000356")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool enableSpatialization;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float gain;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool useInvSqr;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float near;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float far;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float volumetricRadius;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float reverbSend;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool enableRfl;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPAudioSource RoomReflectionGizmoAS;

	[Token(Token = "0x17000018")]
	public bool EnableSpatialization
	{
		[Token(Token = "0x60002B8")]
		[Address(RVA = "0x10E5DE4", Offset = "0x10E5DE4", VA = "0x10E5DE4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002B9")]
		[Address(RVA = "0x10E5DEC", Offset = "0x10E5DEC", VA = "0x10E5DEC")]
		set
		{
		}
	}

	[Token(Token = "0x17000019")]
	public float Gain
	{
		[Token(Token = "0x60002BA")]
		[Address(RVA = "0x10E5DF8", Offset = "0x10E5DF8", VA = "0x10E5DF8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60002BB")]
		[Address(RVA = "0x10E5E00", Offset = "0x10E5E00", VA = "0x10E5E00")]
		set
		{
		}
	}

	[Token(Token = "0x1700001A")]
	public bool UseInvSqr
	{
		[Token(Token = "0x60002BC")]
		[Address(RVA = "0x10E5E84", Offset = "0x10E5E84", VA = "0x10E5E84")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002BD")]
		[Address(RVA = "0x10E5E8C", Offset = "0x10E5E8C", VA = "0x10E5E8C")]
		set
		{
		}
	}

	[Token(Token = "0x1700001B")]
	public float Near
	{
		[Token(Token = "0x60002BE")]
		[Address(RVA = "0x10E5E98", Offset = "0x10E5E98", VA = "0x10E5E98")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60002BF")]
		[Address(RVA = "0x10E5EA0", Offset = "0x10E5EA0", VA = "0x10E5EA0")]
		set
		{
		}
	}

	[Token(Token = "0x1700001C")]
	public float Far
	{
		[Token(Token = "0x60002C0")]
		[Address(RVA = "0x10E5F28", Offset = "0x10E5F28", VA = "0x10E5F28")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60002C1")]
		[Address(RVA = "0x10E5F30", Offset = "0x10E5F30", VA = "0x10E5F30")]
		set
		{
		}
	}

	[Token(Token = "0x1700001D")]
	public float VolumetricRadius
	{
		[Token(Token = "0x60002C2")]
		[Address(RVA = "0x10E5FB8", Offset = "0x10E5FB8", VA = "0x10E5FB8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60002C3")]
		[Address(RVA = "0x10E5FC0", Offset = "0x10E5FC0", VA = "0x10E5FC0")]
		set
		{
		}
	}

	[Token(Token = "0x1700001E")]
	public float ReverbSend
	{
		[Token(Token = "0x60002C4")]
		[Address(RVA = "0x10E6048", Offset = "0x10E6048", VA = "0x10E6048")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60002C5")]
		[Address(RVA = "0x10E6050", Offset = "0x10E6050", VA = "0x10E6050")]
		set
		{
		}
	}

	[Token(Token = "0x1700001F")]
	public bool EnableRfl
	{
		[Token(Token = "0x60002C6")]
		[Address(RVA = "0x10E60D8", Offset = "0x10E60D8", VA = "0x10E60D8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002C7")]
		[Address(RVA = "0x10E60E0", Offset = "0x10E60E0", VA = "0x10E60E0")]
		set
		{
		}
	}

	[PreserveSig]
	[Token(Token = "0x60002B7")]
	[Address(RVA = "0x10E5D04", Offset = "0x10E5D04", VA = "0x10E5D04")]
	private static extern void ONSP_GetGlobalRoomReflectionValues(ref bool reflOn, ref bool reverbOn, ref float width, ref float height, ref float length);

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0x10E60EC", Offset = "0x10E60EC", VA = "0x10E60EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0x10E6260", Offset = "0x10E6260", VA = "0x10E6260")]
	private void Start()
	{
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0x10E6264", Offset = "0x10E6264", VA = "0x10E6264")]
	private void Update()
	{
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0x10E6158", Offset = "0x10E6158", VA = "0x10E6158")]
	public void SetParameters(ref AudioSource source)
	{
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0x10E632C", Offset = "0x10E632C", VA = "0x10E632C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0x10E678C", Offset = "0x10E678C", VA = "0x10E678C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0x10E685C", Offset = "0x10E685C", VA = "0x10E685C")]
	public ONSPAudioSource()
	{
	}
}
[Token(Token = "0x20000A5")]
public class ONSPProfiler : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool profilerEnabled;

	[Token(Token = "0x4000361")]
	private const int DEFAULT_PORT = 2121;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int port;

	[Token(Token = "0x4000363")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0x10E687C", Offset = "0x10E687C", VA = "0x10E687C")]
	private void Start()
	{
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0x10E6888", Offset = "0x10E6888", VA = "0x10E6888")]
	private void Update()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60002D2")]
	[Address(RVA = "0x10E6940", Offset = "0x10E6940", VA = "0x10E6940")]
	private static extern int ONSP_SetProfilerEnabled(bool enabled);

	[PreserveSig]
	[Token(Token = "0x60002D3")]
	[Address(RVA = "0x10E68C0", Offset = "0x10E68C0", VA = "0x10E68C0")]
	private static extern int ONSP_SetProfilerPort(int port);

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0x10E69C0", Offset = "0x10E69C0", VA = "0x10E69C0")]
	public ONSPProfiler()
	{
	}
}
[Token(Token = "0x20000A6")]
public class ONSPPropagationGeometry : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000392")]
	private struct MeshMaterial
	{
		[Token(Token = "0x4001247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MeshFilter meshFilter;

		[Token(Token = "0x4001248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;
	}

	[Token(Token = "0x2000393")]
	private struct TerrainMaterial
	{
		[Token(Token = "0x4001249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Terrain terrain;

		[Token(Token = "0x400124A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;
	}

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string GeometryAssetDirectory;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string filePathRelative;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool fileEnabled;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool includeChildMeshes;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr geometryHandle;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int OSPSuccess;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int terrainDecimation;

	[Token(Token = "0x17000020")]
	public static string GeometryAssetPath
	{
		[Token(Token = "0x60002D5")]
		[Address(RVA = "0x10E9214", Offset = "0x10E9214", VA = "0x10E9214")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000021")]
	public string filePath
	{
		[Token(Token = "0x60002D6")]
		[Address(RVA = "0x10E92A0", Offset = "0x10E92A0", VA = "0x10E92A0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0x10E9318", Offset = "0x10E9318", VA = "0x10E9318")]
	public static string GetPath(Transform current)
	{
		return null;
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0x10E9460", Offset = "0x10E9460", VA = "0x10E9460")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0x10E9464", Offset = "0x10E9464", VA = "0x10E9464")]
	private void CreatePropagationGeometry()
	{
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0x10E992C", Offset = "0x10E992C", VA = "0x10E992C")]
	private void Update()
	{
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0x10E9CC4", Offset = "0x10E9CC4", VA = "0x10E9CC4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0x10E9E20", Offset = "0x10E9E20", VA = "0x10E9E20")]
	private static void traverseMeshHierarchy(GameObject obj, ONSPPropagationMaterial[] currentMaterials, bool includeChildren, List<MeshMaterial> meshMaterials, List<TerrainMaterial> terrainMaterials, bool ignoreStatic)
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0x10EA4D8", Offset = "0x10EA4D8", VA = "0x10EA4D8")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal, bool ignoreStatic)
	{
		return default(int);
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0x10E97FC", Offset = "0x10E97FC", VA = "0x10E97FC")]
	public void UploadGeometry()
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0x10E9630", Offset = "0x10E9630", VA = "0x10E9630")]
	public bool ReadFile()
	{
		return default(bool);
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0x10EBAD0", Offset = "0x10EBAD0", VA = "0x10EBAD0")]
	public ONSPPropagationGeometry()
	{
	}
}
[Token(Token = "0x20000A7")]
internal class ONSPPropagation
{
	[Token(Token = "0x2000394")]
	public enum ovrAudioScalarType : uint
	{
		[Token(Token = "0x400124C")]
		Int8,
		[Token(Token = "0x400124D")]
		UInt8,
		[Token(Token = "0x400124E")]
		Int16,
		[Token(Token = "0x400124F")]
		UInt16,
		[Token(Token = "0x4001250")]
		Int32,
		[Token(Token = "0x4001251")]
		UInt32,
		[Token(Token = "0x4001252")]
		Int64,
		[Token(Token = "0x4001253")]
		UInt64,
		[Token(Token = "0x4001254")]
		Float16,
		[Token(Token = "0x4001255")]
		Float32,
		[Token(Token = "0x4001256")]
		Float64
	}

	[Token(Token = "0x2000395")]
	public class ClientType
	{
		[Token(Token = "0x4001257")]
		public const uint OVRA_CLIENT_TYPE_NATIVE = 0u;

		[Token(Token = "0x4001258")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2016 = 1u;

		[Token(Token = "0x4001259")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_1 = 2u;

		[Token(Token = "0x400125A")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_2 = 3u;

		[Token(Token = "0x400125B")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2018_1 = 4u;

		[Token(Token = "0x400125C")]
		public const uint OVRA_CLIENT_TYPE_FMOD = 5u;

		[Token(Token = "0x400125D")]
		public const uint OVRA_CLIENT_TYPE_UNITY = 6u;

		[Token(Token = "0x400125E")]
		public const uint OVRA_CLIENT_TYPE_UE4 = 7u;

		[Token(Token = "0x400125F")]
		public const uint OVRA_CLIENT_TYPE_VST = 8u;

		[Token(Token = "0x4001260")]
		public const uint OVRA_CLIENT_TYPE_AAX = 9u;

		[Token(Token = "0x4001261")]
		public const uint OVRA_CLIENT_TYPE_TEST = 10u;

		[Token(Token = "0x4001262")]
		public const uint OVRA_CLIENT_TYPE_OTHER = 11u;

		[Token(Token = "0x4001263")]
		public const uint OVRA_CLIENT_TYPE_WWISE_UNKNOWN = 12u;

		[Token(Token = "0x600176F")]
		[Address(RVA = "0x10E6E74", Offset = "0x10E6E74", VA = "0x10E6E74")]
		public ClientType()
		{
		}
	}

	[Token(Token = "0x2000396")]
	public interface PropagationInterface
	{
		[Token(Token = "0x6001770")]
		int SetPropagationQuality(float quality);

		[Token(Token = "0x6001771")]
		int SetPropagationThreadAffinity(ulong cpuMask);

		[Token(Token = "0x6001772")]
		int CreateAudioGeometry(out IntPtr geometry);

		[Token(Token = "0x6001773")]
		int DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6001774")]
		int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount);

		[Token(Token = "0x6001775")]
		int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6001776")]
		int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6001777")]
		int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001778")]
		int AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001779")]
		int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x600177A")]
		int CreateAudioMaterial(out IntPtr material);

		[Token(Token = "0x600177B")]
		int DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x600177C")]
		int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x600177D")]
		int AudioMaterialReset(IntPtr material, MaterialProperty property);
	}

	[Token(Token = "0x2000397")]
	public class UnityNativeInterface : PropagationInterface
	{
		[Token(Token = "0x4001264")]
		public const string strOSPS = "AudioPluginOculusSpatializer";

		[Token(Token = "0x4001265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x1700023E")]
		private IntPtr context
		{
			[Token(Token = "0x600177E")]
			[Address(RVA = "0x10E7A2C", Offset = "0x10E7A2C", VA = "0x10E7A2C")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x600177F")]
		[Address(RVA = "0x10E7A90", Offset = "0x10E7A90", VA = "0x10E7A90")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6001780")]
		[Address(RVA = "0x10E7B20", Offset = "0x10E7B20", VA = "0x10E7B20")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6001781")]
		[Address(RVA = "0x10E7BB0", Offset = "0x10E7BB0", VA = "0x10E7BB0", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001782")]
		[Address(RVA = "0x10E7BD4", Offset = "0x10E7BD4", VA = "0x10E7BD4")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6001783")]
		[Address(RVA = "0x10E7C64", Offset = "0x10E7C64", VA = "0x10E7C64", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001784")]
		[Address(RVA = "0x10E7C88", Offset = "0x10E7C88", VA = "0x10E7C88")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6001785")]
		[Address(RVA = "0x10E7D14", Offset = "0x10E7D14", VA = "0x10E7D14", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001786")]
		[Address(RVA = "0x10E7D38", Offset = "0x10E7D38", VA = "0x10E7D38")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6001787")]
		[Address(RVA = "0x10E7DB8", Offset = "0x10E7DB8", VA = "0x10E7DB8", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001788")]
		[Address(RVA = "0x10E7DC0", Offset = "0x10E7DC0", VA = "0x10E7DC0")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6001789")]
		[Address(RVA = "0x10E7EE0", Offset = "0x10E7EE0", VA = "0x10E7EE0", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600178A")]
		[Address(RVA = "0x10E7FD8", Offset = "0x10E7FD8", VA = "0x10E7FD8")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x600178B")]
		[Address(RVA = "0x10E8070", Offset = "0x10E8070", VA = "0x10E8070", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600178C")]
		[Address(RVA = "0x10E807C", Offset = "0x10E807C", VA = "0x10E807C")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x600178D")]
		[Address(RVA = "0x10E81A8", Offset = "0x10E81A8", VA = "0x10E81A8", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600178E")]
		[Address(RVA = "0x10E81B4", Offset = "0x10E81B4", VA = "0x10E81B4")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600178F")]
		[Address(RVA = "0x10E8260", Offset = "0x10E8260", VA = "0x10E8260", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001790")]
		[Address(RVA = "0x10E826C", Offset = "0x10E826C", VA = "0x10E826C")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001791")]
		[Address(RVA = "0x10E8318", Offset = "0x10E8318", VA = "0x10E8318", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001792")]
		[Address(RVA = "0x10E8324", Offset = "0x10E8324", VA = "0x10E8324")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6001793")]
		[Address(RVA = "0x10E83B0", Offset = "0x10E83B0", VA = "0x10E83B0", Slot = "14")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001794")]
		[Address(RVA = "0x10E83D4", Offset = "0x10E83D4", VA = "0x10E83D4")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6001795")]
		[Address(RVA = "0x10E8454", Offset = "0x10E8454", VA = "0x10E8454", Slot = "15")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001796")]
		[Address(RVA = "0x10E845C", Offset = "0x10E845C", VA = "0x10E845C")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6001797")]
		[Address(RVA = "0x10E8504", Offset = "0x10E8504", VA = "0x10E8504", Slot = "16")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001798")]
		[Address(RVA = "0x10E8510", Offset = "0x10E8510", VA = "0x10E8510")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6001799")]
		[Address(RVA = "0x10E85B8", Offset = "0x10E85B8", VA = "0x10E85B8", Slot = "13")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600179A")]
		[Address(RVA = "0x10E85C8", Offset = "0x10E85C8", VA = "0x10E85C8")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x600179B")]
		[Address(RVA = "0x10E8658", Offset = "0x10E8658", VA = "0x10E8658", Slot = "17")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x600179C")]
		[Address(RVA = "0x10E6E20", Offset = "0x10E6E20", VA = "0x10E6E20")]
		public UnityNativeInterface()
		{
		}
	}

	[Token(Token = "0x2000398")]
	public class WwisePluginInterface : PropagationInterface
	{
		[Token(Token = "0x4001266")]
		public const string strOSPS = "OculusSpatializerWwise";

		[Token(Token = "0x4001267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x1700023F")]
		private IntPtr context
		{
			[Token(Token = "0x600179D")]
			[Address(RVA = "0x10E8664", Offset = "0x10E8664", VA = "0x10E8664")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x600179E")]
		[Address(RVA = "0x10E6C68", Offset = "0x10E6C68", VA = "0x10E6C68")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x600179F")]
		[Address(RVA = "0x10E86C8", Offset = "0x10E86C8", VA = "0x10E86C8")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x60017A0")]
		[Address(RVA = "0x10E8758", Offset = "0x10E8758", VA = "0x10E8758", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60017A1")]
		[Address(RVA = "0x10E877C", Offset = "0x10E877C", VA = "0x10E877C")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x60017A2")]
		[Address(RVA = "0x10E880C", Offset = "0x10E880C", VA = "0x10E880C", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60017A3")]
		[Address(RVA = "0x10E8830", Offset = "0x10E8830", VA = "0x10E8830")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x60017A4")]
		[Address(RVA = "0x10E88C0", Offset = "0x10E88C0", VA = "0x10E88C0", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60017A5")]
		[Address(RVA = "0x10E88E4", Offset = "0x10E88E4", VA = "0x10E88E4")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x60017A6")]
		[Address(RVA = "0x10E8964", Offset = "0x10E8964", VA = "0x10E8964", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60017A7")]
		[Address(RVA = "0x10E896C", Offset = "0x10E896C", VA = "0x10E896C")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x60017A8")]
		[Address(RVA = "0x10E8A8C", Offset = "0x10E8A8C", VA = "0x10E8A8C", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60017A9")]
		[Address(RVA = "0x10E8B84", Offset = "0x10E8B84", VA = "0x10E8B84")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x60017AA")]
		[Address(RVA = "0x10E8C1C", Offset = "0x10E8C1C", VA = "0x10E8C1C", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60017AB")]
		[Address(RVA = "0x10E8C28", Offset = "0x10E8C28", VA = "0x10E8C28")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x60017AC")]
		[Address(RVA = "0x10E8D54", Offset = "0x10E8D54", VA = "0x10E8D54", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60017AD")]
		[Address(RVA = "0x10E8D60", Offset = "0x10E8D60", VA = "0x10E8D60")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60017AE")]
		[Address(RVA = "0x10E8E0C", Offset = "0x10E8E0C", VA = "0x10E8E0C", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60017AF")]
		[Address(RVA = "0x10E8E18", Offset = "0x10E8E18", VA = "0x10E8E18")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60017B0")]
		[Address(RVA = "0x10E8EC4", Offset = "0x10E8EC4", VA = "0x10E8EC4", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60017B1")]
		[Address(RVA = "0x10E8ED0", Offset = "0x10E8ED0", VA = "0x10E8ED0")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x60017B2")]
		[Address(RVA = "0x10E8F60", Offset = "0x10E8F60", VA = "0x10E8F60", Slot = "14")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60017B3")]
		[Address(RVA = "0x10E8F84", Offset = "0x10E8F84", VA = "0x10E8F84")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x60017B4")]
		[Address(RVA = "0x10E9004", Offset = "0x10E9004", VA = "0x10E9004", Slot = "15")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60017B5")]
		[Address(RVA = "0x10E900C", Offset = "0x10E900C", VA = "0x10E900C")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x60017B6")]
		[Address(RVA = "0x10E90B4", Offset = "0x10E90B4", VA = "0x10E90B4", Slot = "16")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60017B7")]
		[Address(RVA = "0x10E90C0", Offset = "0x10E90C0", VA = "0x10E90C0")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x60017B8")]
		[Address(RVA = "0x10E9168", Offset = "0x10E9168", VA = "0x10E9168", Slot = "13")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60017B9")]
		[Address(RVA = "0x10E9178", Offset = "0x10E9178", VA = "0x10E9178")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x60017BA")]
		[Address(RVA = "0x10E9208", Offset = "0x10E9208", VA = "0x10E9208", Slot = "17")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x60017BB")]
		[Address(RVA = "0x10E6CF8", Offset = "0x10E6CF8", VA = "0x10E6CF8")]
		public WwisePluginInterface()
		{
		}
	}

	[Token(Token = "0x2000399")]
	public class FMODPluginInterface : PropagationInterface
	{
		[Token(Token = "0x4001268")]
		public const string strOSPS = "OculusSpatializerFMOD";

		[Token(Token = "0x4001269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x17000240")]
		private IntPtr context
		{
			[Token(Token = "0x60017BC")]
			[Address(RVA = "0x10E6E7C", Offset = "0x10E6E7C", VA = "0x10E6E7C")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x60017BD")]
		[Address(RVA = "0x10E6D44", Offset = "0x10E6D44", VA = "0x10E6D44")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x60017BE")]
		[Address(RVA = "0x10E6EE0", Offset = "0x10E6EE0", VA = "0x10E6EE0")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x60017BF")]
		[Address(RVA = "0x10E6F70", Offset = "0x10E6F70", VA = "0x10E6F70", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60017C0")]
		[Address(RVA = "0x10E6F94", Offset = "0x10E6F94", VA = "0x10E6F94")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x60017C1")]
		[Address(RVA = "0x10E7024", Offset = "0x10E7024", VA = "0x10E7024", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60017C2")]
		[Address(RVA = "0x10E7048", Offset = "0x10E7048", VA = "0x10E7048")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x60017C3")]
		[Address(RVA = "0x10E70D8", Offset = "0x10E70D8", VA = "0x10E70D8", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60017C4")]
		[Address(RVA = "0x10E70FC", Offset = "0x10E70FC", VA = "0x10E70FC")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x60017C5")]
		[Address(RVA = "0x10E717C", Offset = "0x10E717C", VA = "0x10E717C", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60017C6")]
		[Address(RVA = "0x10E7184", Offset = "0x10E7184", VA = "0x10E7184")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x60017C7")]
		[Address(RVA = "0x10E72A4", Offset = "0x10E72A4", VA = "0x10E72A4", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60017C8")]
		[Address(RVA = "0x10E739C", Offset = "0x10E739C", VA = "0x10E739C")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x60017C9")]
		[Address(RVA = "0x10E7434", Offset = "0x10E7434", VA = "0x10E7434", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60017CA")]
		[Address(RVA = "0x10E7440", Offset = "0x10E7440", VA = "0x10E7440")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x60017CB")]
		[Address(RVA = "0x10E756C", Offset = "0x10E756C", VA = "0x10E756C", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60017CC")]
		[Address(RVA = "0x10E7578", Offset = "0x10E7578", VA = "0x10E7578")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60017CD")]
		[Address(RVA = "0x10E7624", Offset = "0x10E7624", VA = "0x10E7624", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60017CE")]
		[Address(RVA = "0x10E7630", Offset = "0x10E7630", VA = "0x10E7630")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60017CF")]
		[Address(RVA = "0x10E76DC", Offset = "0x10E76DC", VA = "0x10E76DC", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60017D0")]
		[Address(RVA = "0x10E76E8", Offset = "0x10E76E8", VA = "0x10E76E8")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x60017D1")]
		[Address(RVA = "0x10E7778", Offset = "0x10E7778", VA = "0x10E7778", Slot = "14")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60017D2")]
		[Address(RVA = "0x10E779C", Offset = "0x10E779C", VA = "0x10E779C")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x60017D3")]
		[Address(RVA = "0x10E781C", Offset = "0x10E781C", VA = "0x10E781C", Slot = "15")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60017D4")]
		[Address(RVA = "0x10E7824", Offset = "0x10E7824", VA = "0x10E7824")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x60017D5")]
		[Address(RVA = "0x10E78CC", Offset = "0x10E78CC", VA = "0x10E78CC", Slot = "16")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60017D6")]
		[Address(RVA = "0x10E78D8", Offset = "0x10E78D8", VA = "0x10E78D8")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x60017D7")]
		[Address(RVA = "0x10E7980", Offset = "0x10E7980", VA = "0x10E7980", Slot = "13")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60017D8")]
		[Address(RVA = "0x10E7990", Offset = "0x10E7990", VA = "0x10E7990")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x60017D9")]
		[Address(RVA = "0x10E7A20", Offset = "0x10E7A20", VA = "0x10E7A20", Slot = "17")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x60017DA")]
		[Address(RVA = "0x10E6DD4", Offset = "0x10E6DD4", VA = "0x10E6DD4")]
		public FMODPluginInterface()
		{
		}
	}

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PropagationInterface CachedInterface;

	[Token(Token = "0x17000022")]
	public static PropagationInterface Interface
	{
		[Token(Token = "0x60002E2")]
		[Address(RVA = "0x10E69D0", Offset = "0x10E69D0", VA = "0x10E69D0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0x10E6A40", Offset = "0x10E6A40", VA = "0x10E6A40")]
	private static PropagationInterface FindInterface()
	{
		return null;
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0x10E6E6C", Offset = "0x10E6E6C", VA = "0x10E6E6C")]
	public ONSPPropagation()
	{
	}
}
[Token(Token = "0x20000A8")]
public sealed class ONSPPropagationMaterial : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x200039A")]
	public enum Preset
	{
		[Token(Token = "0x400126B")]
		Custom,
		[Token(Token = "0x400126C")]
		AcousticTile,
		[Token(Token = "0x400126D")]
		Brick,
		[Token(Token = "0x400126E")]
		BrickPainted,
		[Token(Token = "0x400126F")]
		Carpet,
		[Token(Token = "0x4001270")]
		CarpetHeavy,
		[Token(Token = "0x4001271")]
		CarpetHeavyPadded,
		[Token(Token = "0x4001272")]
		CeramicTile,
		[Token(Token = "0x4001273")]
		Concrete,
		[Token(Token = "0x4001274")]
		ConcreteRough,
		[Token(Token = "0x4001275")]
		ConcreteBlock,
		[Token(Token = "0x4001276")]
		ConcreteBlockPainted,
		[Token(Token = "0x4001277")]
		Curtain,
		[Token(Token = "0x4001278")]
		Foliage,
		[Token(Token = "0x4001279")]
		Glass,
		[Token(Token = "0x400127A")]
		GlassHeavy,
		[Token(Token = "0x400127B")]
		Grass,
		[Token(Token = "0x400127C")]
		Gravel,
		[Token(Token = "0x400127D")]
		GypsumBoard,
		[Token(Token = "0x400127E")]
		PlasterOnBrick,
		[Token(Token = "0x400127F")]
		PlasterOnConcreteBlock,
		[Token(Token = "0x4001280")]
		Soil,
		[Token(Token = "0x4001281")]
		SoundProof,
		[Token(Token = "0x4001282")]
		Snow,
		[Token(Token = "0x4001283")]
		Steel,
		[Token(Token = "0x4001284")]
		Water,
		[Token(Token = "0x4001285")]
		WoodThin,
		[Token(Token = "0x4001286")]
		WoodThick,
		[Token(Token = "0x4001287")]
		WoodFloor,
		[Token(Token = "0x4001288")]
		WoodOnConcrete
	}

	[Serializable]
	[Token(Token = "0x200039B")]
	public sealed class Point
	{
		[Token(Token = "0x4001289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float frequency;

		[Token(Token = "0x400128A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float data;

		[Token(Token = "0x60017DB")]
		[Address(RVA = "0x10F3B6C", Offset = "0x10F3B6C", VA = "0x10F3B6C")]
		public Point(float frequency = 0f, float data = 0f)
		{
		}

		[Token(Token = "0x60017DC")]
		[Address(RVA = "0x10F3CB4", Offset = "0x10F3CB4", VA = "0x10F3CB4")]
		public static implicit operator Point(Vector2 v)
		{
			return null;
		}

		[Token(Token = "0x60017DD")]
		[Address(RVA = "0x10F3D24", Offset = "0x10F3D24", VA = "0x10F3D24")]
		public static implicit operator Vector2(Point point)
		{
			return default(Vector2);
		}
	}

	[Serializable]
	[Token(Token = "0x200039C")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x6E19BC", Offset = "0x6E19BC")]
	public sealed class Spectrum
	{
		[Serializable]
		[Token(Token = "0x2000424")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E1CE0", Offset = "0x6E1CE0")]
		private sealed class <>c
		{
			[Token(Token = "0x4001532")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001533")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Point, float> <>9__3_0;

			[Token(Token = "0x4001534")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Point, float> <>9__3_1;

			[Token(Token = "0x6001919")]
			[Address(RVA = "0x10F417C", Offset = "0x10F417C", VA = "0x10F417C")]
			public <>c()
			{
			}

			[Token(Token = "0x600191A")]
			[Address(RVA = "0x10F4184", Offset = "0x10F4184", VA = "0x10F4184")]
			internal float <get_Item>b__3_0(Point p)
			{
				return default(float);
			}

			[Token(Token = "0x600191B")]
			[Address(RVA = "0x10F419C", Offset = "0x10F419C", VA = "0x10F419C")]
			internal float <get_Item>b__3_1(Point p)
			{
				return default(float);
			}
		}

		[Token(Token = "0x400128B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int selection;

		[Token(Token = "0x400128C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Point> points;

		[Token(Token = "0x17000241")]
		public float Item
		{
			[Token(Token = "0x60017DE")]
			[Address(RVA = "0x10F3D5C", Offset = "0x10F3D5C", VA = "0x10F3D5C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60017DF")]
		[Address(RVA = "0x10F3C3C", Offset = "0x10F3C3C", VA = "0x10F3C3C")]
		public Spectrum()
		{
		}
	}

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr materialHandle;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E3118", Offset = "0x6E3118")]
	public Spectrum absorption;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E3150", Offset = "0x6E3150")]
	public Spectrum transmission;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E3188", Offset = "0x6E3188")]
	public Spectrum scattering;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Preset preset_;

	[Token(Token = "0x17000023")]
	public Preset preset
	{
		[Token(Token = "0x60002E5")]
		[Address(RVA = "0x10EBBA8", Offset = "0x10EBBA8", VA = "0x10EBBA8")]
		get
		{
			return default(Preset);
		}
		[Token(Token = "0x60002E6")]
		[Address(RVA = "0x10EBBB0", Offset = "0x10EBBB0", VA = "0x10EBBB0")]
		set
		{
		}
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0x10EBD6C", Offset = "0x10EBD6C", VA = "0x10EBD6C")]
	private void Start()
	{
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0x10EB964", Offset = "0x10EB964", VA = "0x10EB964")]
	public void StartInternal()
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0x10EC350", Offset = "0x10EC350", VA = "0x10EC350")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0x10EC354", Offset = "0x10EC354", VA = "0x10EC354")]
	public void DestroyInternal()
	{
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0x10EBD70", Offset = "0x10EBD70", VA = "0x10EBD70")]
	public void UploadMaterial()
	{
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0x10EBBD8", Offset = "0x10EBBD8", VA = "0x10EBBD8")]
	public void SetPreset(Preset preset)
	{
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0x10EC438", Offset = "0x10EC438", VA = "0x10EC438")]
	private static void AcousticTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0x10EC898", Offset = "0x10EC898", VA = "0x10EC898")]
	private static void Brick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0x10ECCF8", Offset = "0x10ECCF8", VA = "0x10ECCF8")]
	private static void BrickPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0x10ED158", Offset = "0x10ED158", VA = "0x10ED158")]
	private static void Carpet(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0x10ED5B8", Offset = "0x10ED5B8", VA = "0x10ED5B8")]
	private static void CarpetHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0x10EDA18", Offset = "0x10EDA18", VA = "0x10EDA18")]
	private static void CarpetHeavyPadded(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0x10EDE78", Offset = "0x10EDE78", VA = "0x10EDE78")]
	private static void CeramicTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0x10EE2D8", Offset = "0x10EE2D8", VA = "0x10EE2D8")]
	private static void Concrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0x10EE738", Offset = "0x10EE738", VA = "0x10EE738")]
	private static void ConcreteRough(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0x10EEB98", Offset = "0x10EEB98", VA = "0x10EEB98")]
	private static void ConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0x10EEFF8", Offset = "0x10EEFF8", VA = "0x10EEFF8")]
	private static void ConcreteBlockPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0x10EF458", Offset = "0x10EF458", VA = "0x10EF458")]
	private static void Curtain(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0x10EF8B8", Offset = "0x10EF8B8", VA = "0x10EF8B8")]
	private static void Foliage(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0x10EFD18", Offset = "0x10EFD18", VA = "0x10EFD18")]
	private static void Glass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0x10F0170", Offset = "0x10F0170", VA = "0x10F0170")]
	private static void GlassHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0x10F05D0", Offset = "0x10F05D0", VA = "0x10F05D0")]
	private static void Grass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0x10F090C", Offset = "0x10F090C", VA = "0x10F090C")]
	private static void Gravel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0x10F0C48", Offset = "0x10F0C48", VA = "0x10F0C48")]
	private static void GypsumBoard(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0x10F10A8", Offset = "0x10F10A8", VA = "0x10F10A8")]
	private static void PlasterOnBrick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0x10F1508", Offset = "0x10F1508", VA = "0x10F1508")]
	private static void PlasterOnConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0x10F1968", Offset = "0x10F1968", VA = "0x10F1968")]
	private static void Soil(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0x10F1CA4", Offset = "0x10F1CA4", VA = "0x10F1CA4")]
	private static void SoundProof(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0x10F1E00", Offset = "0x10F1E00", VA = "0x10F1E00")]
	private static void Snow(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0x10F213C", Offset = "0x10F213C", VA = "0x10F213C")]
	private static void Steel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0x10F2594", Offset = "0x10F2594", VA = "0x10F2594")]
	private static void Water(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0x10F29F4", Offset = "0x10F29F4", VA = "0x10F29F4")]
	private static void WoodThin(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0x10F2E4C", Offset = "0x10F2E4C", VA = "0x10F2E4C")]
	private static void WoodThick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0x10F32AC", Offset = "0x10F32AC", VA = "0x10F32AC")]
	private static void WoodFloor(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0x10F370C", Offset = "0x10F370C", VA = "0x10F370C")]
	private static void WoodOnConcrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0x10F3BA4", Offset = "0x10F3BA4", VA = "0x10F3BA4")]
	public ONSPPropagationMaterial()
	{
	}
}
[Token(Token = "0x20000A9")]
public class ONSPPropagationSettings : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float quality;

	[Token(Token = "0x600030B")]
	[Address(RVA = "0x10F41B4", Offset = "0x10F41B4", VA = "0x10F41B4")]
	private void Update()
	{
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0x10F4284", Offset = "0x10F4284", VA = "0x10F4284")]
	public ONSPPropagationSettings()
	{
	}
}
[Token(Token = "0x20000AA")]
public class ONSPVersion : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000372")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[PreserveSig]
	[Token(Token = "0x600030D")]
	[Address(RVA = "0x10F4840", Offset = "0x10F4840", VA = "0x10F4840")]
	private static extern void ONSP_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[Token(Token = "0x600030E")]
	[Address(RVA = "0x10F48D8", Offset = "0x10F48D8", VA = "0x10F48D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0x10F49E4", Offset = "0x10F49E4", VA = "0x10F49E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0x10F49E8", Offset = "0x10F49E8", VA = "0x10F49E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0x10F49EC", Offset = "0x10F49EC", VA = "0x10F49EC")]
	public ONSPVersion()
	{
	}
}
[Token(Token = "0x20000AB")]
public class OculusSpatializerUnity : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x200039D")]
	public delegate void AudioRaycastCallback(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data);

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layerMask;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool visualizeRoom;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool roomVisualizationInitialized;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int raysPerSecond;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float roomInterpSpeed;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxWallDistance;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int rayCacheSize;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool dynamicReflectionsEnabled;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioRaycastCallback _raycastCallback;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float particleSize;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float particleOffset;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject room;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Renderer[] wallRenderer;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] dims;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float[] coefs;

	[Token(Token = "0x4000382")]
	private const int HIT_COUNT = 2048;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] points;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3[] normals;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ParticleSystem sys;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LayerMask gLayerMask;

	[Token(Token = "0x4000388")]
	private const string strOSP = "AudioPluginOculusSpatializer";

	[Token(Token = "0x6000312")]
	[Address(RVA = "0xA3F8E4", Offset = "0xA3F8E4", VA = "0xA3F8E4")]
	private static Vector3 swapHandedness(Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0xA3F91C", Offset = "0xA3F91C", VA = "0xA3F91C")]
	private static void AudioRaycast(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data)
	{
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0xA3FAEC", Offset = "0xA3FAEC", VA = "0xA3FAEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0xA3FB9C", Offset = "0xA3FB9C", VA = "0xA3FB9C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0xA3FC90", Offset = "0xA3FC90", VA = "0xA3FC90")]
	private void Update()
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0xA405F8", Offset = "0xA405F8", VA = "0xA405F8")]
	private void inititalizeRoomVisualization()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000318")]
	[Address(RVA = "0xA3FB80", Offset = "0xA3FB80", VA = "0xA3FB80")]
	private static extern int OSP_Unity_AssignRaycastCallback(MulticastDelegate callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x6000319")]
	[Address(RVA = "0xA3FC00", Offset = "0xA3FC00", VA = "0xA3FC00")]
	private static extern int OSP_Unity_AssignRaycastCallback(IntPtr callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x600031A")]
	[Address(RVA = "0xA40360", Offset = "0xA40360", VA = "0xA40360")]
	private static extern int OSP_Unity_SetDynamicRoomRaysPerSecond(int RaysPerSecond);

	[PreserveSig]
	[Token(Token = "0x600031B")]
	[Address(RVA = "0xA403E0", Offset = "0xA403E0", VA = "0xA403E0")]
	private static extern int OSP_Unity_SetDynamicRoomInterpSpeed(float InterpSpeed);

	[PreserveSig]
	[Token(Token = "0x600031C")]
	[Address(RVA = "0xA40468", Offset = "0xA40468", VA = "0xA40468")]
	private static extern int OSP_Unity_SetDynamicRoomMaxWallDistance(float MaxWallDistance);

	[PreserveSig]
	[Token(Token = "0x600031D")]
	[Address(RVA = "0xA404F0", Offset = "0xA404F0", VA = "0xA404F0")]
	private static extern int OSP_Unity_SetDynamicRoomRaysRayCacheSize(int RayCacheSize);

	[PreserveSig]
	[Token(Token = "0x600031E")]
	[Address(RVA = "0xA40570", Offset = "0xA40570", VA = "0xA40570")]
	private static extern int OSP_Unity_UpdateRoomModel(float wetLevel);

	[PreserveSig]
	[Token(Token = "0x600031F")]
	[Address(RVA = "0xA41430", Offset = "0xA41430", VA = "0xA41430")]
	private static extern int OSP_Unity_GetRoomDimensions(float[] roomDimensions, float[] reflectionsCoefs, out Vector3 position);

	[PreserveSig]
	[Token(Token = "0x6000320")]
	[Address(RVA = "0xA414D8", Offset = "0xA414D8", VA = "0xA414D8")]
	private static extern int OSP_Unity_GetRaycastHits(Vector3[] points, Vector3[] normals, int length);

	[Token(Token = "0x6000321")]
	[Address(RVA = "0xA41580", Offset = "0xA41580", VA = "0xA41580")]
	public OculusSpatializerUnity()
	{
	}
}
[Token(Token = "0x20000AC")]
public struct ReflectionSnapshot
{
	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float fadeTime;
}
[Token(Token = "0x20000AD")]
public class ONSPReflectionZone : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeTime;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Stack<ReflectionSnapshot> snapshotList;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ReflectionSnapshot currentSnapshot;

	[Token(Token = "0x6000323")]
	[Address(RVA = "0x10F4294", Offset = "0x10F4294", VA = "0x10F4294")]
	private void Start()
	{
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0x10F4298", Offset = "0x10F4298", VA = "0x10F4298")]
	private void Update()
	{
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0x10F429C", Offset = "0x10F429C", VA = "0x10F429C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0x10F4404", Offset = "0x10F4404", VA = "0x10F4404")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0x10F42E8", Offset = "0x10F42E8", VA = "0x10F42E8")]
	private bool CheckForAudioListener(GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0x10F4378", Offset = "0x10F4378", VA = "0x10F4378")]
	private void PushCurrentMixerShapshot()
	{
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0x10F4450", Offset = "0x10F4450", VA = "0x10F4450")]
	private void PopCurrentMixerSnapshot()
	{
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0x10F44E8", Offset = "0x10F44E8", VA = "0x10F44E8")]
	private void SetReflectionValues()
	{
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0x10F4650", Offset = "0x10F4650", VA = "0x10F4650")]
	private void SetReflectionValues(ref ReflectionSnapshot mss)
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0x10F47B8", Offset = "0x10F47B8", VA = "0x10F47B8")]
	public ONSPReflectionZone()
	{
	}
}
[Token(Token = "0x20000AE")]
internal static class CustomTypes
{
	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly byte[] memVector3;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly byte[] memVector2;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly byte[] memQuarternion;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly byte[] memPlayer;

	[Token(Token = "0x600032E")]
	[Address(RVA = "0x9717A4", Offset = "0x9717A4", VA = "0x9717A4")]
	internal static void Register()
	{
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0x971A30", Offset = "0x971A30", VA = "0x971A30")]
	private static short SerializeVector3(StreamBuffer outStream, object customobject)
	{
		return default(short);
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0x971C2C", Offset = "0x971C2C", VA = "0x971C2C")]
	private static object DeserializeVector3(StreamBuffer inStream, short length)
	{
		return null;
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0x971E1C", Offset = "0x971E1C", VA = "0x971E1C")]
	private static short SerializeVector2(StreamBuffer outStream, object customobject)
	{
		return default(short);
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0x971FE8", Offset = "0x971FE8", VA = "0x971FE8")]
	private static object DeserializeVector2(StreamBuffer inStream, short length)
	{
		return null;
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0x9721A8", Offset = "0x9721A8", VA = "0x9721A8")]
	private static short SerializeQuaternion(StreamBuffer outStream, object customobject)
	{
		return default(short);
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0x9723B0", Offset = "0x9723B0", VA = "0x9723B0")]
	private static object DeserializeQuaternion(StreamBuffer inStream, short length)
	{
		return null;
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0x9725B8", Offset = "0x9725B8", VA = "0x9725B8")]
	private static short SerializePhotonPlayer(StreamBuffer outStream, object customobject)
	{
		return default(short);
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0x972780", Offset = "0x972780", VA = "0x972780")]
	private static object DeserializePhotonPlayer(StreamBuffer inStream, short length)
	{
		return null;
	}
}
[Token(Token = "0x20000AF")]
public enum PhotonNetworkingMessage
{
	[Token(Token = "0x4000394")]
	OnConnectedToPhoton,
	[Token(Token = "0x4000395")]
	OnLeftRoom,
	[Token(Token = "0x4000396")]
	OnMasterClientSwitched,
	[Token(Token = "0x4000397")]
	OnPhotonCreateRoomFailed,
	[Token(Token = "0x4000398")]
	OnPhotonJoinRoomFailed,
	[Token(Token = "0x4000399")]
	OnCreatedRoom,
	[Token(Token = "0x400039A")]
	OnJoinedLobby,
	[Token(Token = "0x400039B")]
	OnLeftLobby,
	[Token(Token = "0x400039C")]
	OnDisconnectedFromPhoton,
	[Token(Token = "0x400039D")]
	OnConnectionFail,
	[Token(Token = "0x400039E")]
	OnFailedToConnectToPhoton,
	[Token(Token = "0x400039F")]
	OnReceivedRoomListUpdate,
	[Token(Token = "0x40003A0")]
	OnJoinedRoom,
	[Token(Token = "0x40003A1")]
	OnPhotonPlayerConnected,
	[Token(Token = "0x40003A2")]
	OnPhotonPlayerDisconnected,
	[Token(Token = "0x40003A3")]
	OnPhotonRandomJoinFailed,
	[Token(Token = "0x40003A4")]
	OnConnectedToMaster,
	[Token(Token = "0x40003A5")]
	OnPhotonSerializeView,
	[Token(Token = "0x40003A6")]
	OnPhotonInstantiate,
	[Token(Token = "0x40003A7")]
	OnPhotonMaxCccuReached,
	[Token(Token = "0x40003A8")]
	OnPhotonCustomRoomPropertiesChanged,
	[Token(Token = "0x40003A9")]
	OnPhotonPlayerPropertiesChanged,
	[Token(Token = "0x40003AA")]
	OnUpdatedFriendList,
	[Token(Token = "0x40003AB")]
	OnCustomAuthenticationFailed,
	[Token(Token = "0x40003AC")]
	OnCustomAuthenticationResponse,
	[Token(Token = "0x40003AD")]
	OnWebRpcResponse,
	[Token(Token = "0x40003AE")]
	OnOwnershipRequest,
	[Token(Token = "0x40003AF")]
	OnLobbyStatisticsUpdate,
	[Token(Token = "0x40003B0")]
	OnPhotonPlayerActivityChanged,
	[Token(Token = "0x40003B1")]
	OnOwnershipTransfered
}
[Token(Token = "0x20000B0")]
public enum PhotonLogLevel
{
	[Token(Token = "0x40003B3")]
	ErrorsOnly,
	[Token(Token = "0x40003B4")]
	Informational,
	[Token(Token = "0x40003B5")]
	Full
}
[Token(Token = "0x20000B1")]
public enum PhotonTargets
{
	[Token(Token = "0x40003B7")]
	All,
	[Token(Token = "0x40003B8")]
	Others,
	[Token(Token = "0x40003B9")]
	MasterClient,
	[Token(Token = "0x40003BA")]
	AllBuffered,
	[Token(Token = "0x40003BB")]
	OthersBuffered,
	[Token(Token = "0x40003BC")]
	AllViaServer,
	[Token(Token = "0x40003BD")]
	AllBufferedViaServer
}
[Token(Token = "0x20000B2")]
public enum CloudRegionCode
{
	[Token(Token = "0x40003BF")]
	eu = 0,
	[Token(Token = "0x40003C0")]
	us = 1,
	[Token(Token = "0x40003C1")]
	asia = 2,
	[Token(Token = "0x40003C2")]
	jp = 3,
	[Token(Token = "0x40003C3")]
	au = 5,
	[Token(Token = "0x40003C4")]
	usw = 6,
	[Token(Token = "0x40003C5")]
	sa = 7,
	[Token(Token = "0x40003C6")]
	cae = 8,
	[Token(Token = "0x40003C7")]
	kr = 9,
	[Token(Token = "0x40003C8")]
	@in = 10,
	[Token(Token = "0x40003C9")]
	ru = 11,
	[Token(Token = "0x40003CA")]
	rue = 12,
	[Token(Token = "0x40003CB")]
	none = 4
}
[Token(Token = "0x20000B3")]
[Flags]
public enum CloudRegionFlag
{
	[Token(Token = "0x40003CD")]
	eu = 1,
	[Token(Token = "0x40003CE")]
	us = 2,
	[Token(Token = "0x40003CF")]
	asia = 4,
	[Token(Token = "0x40003D0")]
	jp = 8,
	[Token(Token = "0x40003D1")]
	au = 0x10,
	[Token(Token = "0x40003D2")]
	usw = 0x20,
	[Token(Token = "0x40003D3")]
	sa = 0x40,
	[Token(Token = "0x40003D4")]
	cae = 0x80,
	[Token(Token = "0x40003D5")]
	kr = 0x100,
	[Token(Token = "0x40003D6")]
	@in = 0x200,
	[Token(Token = "0x40003D7")]
	ru = 0x400,
	[Token(Token = "0x40003D8")]
	rue = 0x800
}
[Token(Token = "0x20000B4")]
public enum ConnectionState
{
	[Token(Token = "0x40003DA")]
	Disconnected,
	[Token(Token = "0x40003DB")]
	Connecting,
	[Token(Token = "0x40003DC")]
	Connected,
	[Token(Token = "0x40003DD")]
	Disconnecting,
	[Token(Token = "0x40003DE")]
	InitializingApplication
}
[Token(Token = "0x20000B5")]
public enum EncryptionMode
{
	[Token(Token = "0x40003E0")]
	PayloadEncryption = 0,
	[Token(Token = "0x40003E1")]
	DatagramEncryption = 10
}
[Token(Token = "0x20000B6")]
public static class EncryptionDataParameters
{
	[Token(Token = "0x40003E2")]
	public const byte Mode = 0;

	[Token(Token = "0x40003E3")]
	public const byte Secret1 = 1;

	[Token(Token = "0x40003E4")]
	public const byte Secret2 = 2;
}
[Token(Token = "0x20000B7")]
public static class Extensions
{
	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<MethodInfo, ParameterInfo[]> ParametersOfMethods;

	[Token(Token = "0x6000338")]
	[Address(RVA = "0x982818", Offset = "0x982818", VA = "0x982818")]
	public static ParameterInfo[] GetCachedParemeters(this MethodInfo mo)
	{
		return null;
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0x982918", Offset = "0x982918", VA = "0x982918")]
	public static PhotonView[] GetPhotonViewsInChildren(this GameObject go)
	{
		return null;
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0x982974", Offset = "0x982974", VA = "0x982974")]
	public static PhotonView GetPhotonView(this GameObject go)
	{
		return null;
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0x9829CC", Offset = "0x9829CC", VA = "0x9829CC")]
	public static bool AlmostEquals(this Vector3 target, Vector3 second, float sqrMagnitudePrecision)
	{
		return default(bool);
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0x982AB0", Offset = "0x982AB0", VA = "0x982AB0")]
	public static bool AlmostEquals(this Vector2 target, Vector2 second, float sqrMagnitudePrecision)
	{
		return default(bool);
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0x982B74", Offset = "0x982B74", VA = "0x982B74")]
	public static bool AlmostEquals(this Quaternion target, Quaternion second, float maxAngle)
	{
		return default(bool);
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0x982C4C", Offset = "0x982C4C", VA = "0x982C4C")]
	public static bool AlmostEquals(this float target, float second, float floatDiff)
	{
		return default(bool);
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0x982CD0", Offset = "0x982CD0", VA = "0x982CD0")]
	public static void Merge(this IDictionary target, IDictionary addHash)
	{
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0x9830AC", Offset = "0x9830AC", VA = "0x9830AC")]
	public static void MergeStringKeys(this IDictionary target, IDictionary addHash)
	{
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0x9834A4", Offset = "0x9834A4", VA = "0x9834A4")]
	public static string ToStringFull(this IDictionary origin)
	{
		return null;
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0x983510", Offset = "0x983510", VA = "0x983510")]
	public static string ToStringFull(this object[] data)
	{
		return null;
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0x983664", Offset = "0x983664", VA = "0x983664")]
	public static ExitGames.Client.Photon.Hashtable StripToStringKeys(this IDictionary original)
	{
		return null;
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0x983A0C", Offset = "0x983A0C", VA = "0x983A0C")]
	public static void StripKeysWithNullValues(this IDictionary original)
	{
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0x983EE8", Offset = "0x983EE8", VA = "0x983EE8")]
	public static bool Contains(this int[] target, int nr)
	{
		return default(bool);
	}
}
[Token(Token = "0x20000B8")]
public static class GameObjectExtensions
{
	[Token(Token = "0x6000347")]
	[Address(RVA = "0x985004", Offset = "0x985004", VA = "0x985004")]
	public static bool GetActive(this GameObject target)
	{
		return default(bool);
	}
}
[Token(Token = "0x20000B9")]
public class FriendInfo
{
	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E31D0", Offset = "0x6E31D0")]
	private string <UserId>k__BackingField;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E31E0", Offset = "0x6E31E0")]
	private bool <IsOnline>k__BackingField;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E31F0", Offset = "0x6E31F0")]
	private string <Room>k__BackingField;

	[Token(Token = "0x17000024")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6EEBB8", Offset = "0x6EEBB8")]
	public string Name
	{
		[Token(Token = "0x6000348")]
		[Address(RVA = "0x984C58", Offset = "0x984C58", VA = "0x984C58")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000025")]
	public string UserId
	{
		[Token(Token = "0x6000349")]
		[Address(RVA = "0x984C60", Offset = "0x984C60", VA = "0x984C60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EAC38", Offset = "0x6EAC38")]
		get
		{
			return null;
		}
		[Token(Token = "0x600034A")]
		[Address(RVA = "0x984C68", Offset = "0x984C68", VA = "0x984C68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EAC48", Offset = "0x6EAC48")]
		protected internal set
		{
		}
	}

	[Token(Token = "0x17000026")]
	public bool IsOnline
	{
		[Token(Token = "0x600034B")]
		[Address(RVA = "0x984C70", Offset = "0x984C70", VA = "0x984C70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EAC58", Offset = "0x6EAC58")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600034C")]
		[Address(RVA = "0x984C78", Offset = "0x984C78", VA = "0x984C78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EAC68", Offset = "0x6EAC68")]
		protected internal set
		{
		}
	}

	[Token(Token = "0x17000027")]
	public string Room
	{
		[Token(Token = "0x600034D")]
		[Address(RVA = "0x984C84", Offset = "0x984C84", VA = "0x984C84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EAC78", Offset = "0x6EAC78")]
		get
		{
			return null;
		}
		[Token(Token = "0x600034E")]
		[Address(RVA = "0x984C8C", Offset = "0x984C8C", VA = "0x984C8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EAC88", Offset = "0x6EAC88")]
		protected internal set
		{
		}
	}

	[Token(Token = "0x17000028")]
	public bool IsInRoom
	{
		[Token(Token = "0x600034F")]
		[Address(RVA = "0x984C94", Offset = "0x984C94", VA = "0x984C94")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0x984CC0", Offset = "0x984CC0", VA = "0x984CC0", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0x984D60", Offset = "0x984D60", VA = "0x984D60")]
	public FriendInfo()
	{
	}
}
[Token(Token = "0x20000BA")]
internal class LoadBalancingPeer : PhotonPeer
{
	[Token(Token = "0x200039E")]
	private enum RoomOptionBit
	{
		[Token(Token = "0x400128E")]
		CheckUserOnJoin = 1,
		[Token(Token = "0x400128F")]
		DeleteCacheOnLeave = 2,
		[Token(Token = "0x4001290")]
		SuppressRoomEvents = 4,
		[Token(Token = "0x4001291")]
		PublishUserId = 8,
		[Token(Token = "0x4001292")]
		DeleteNullProps = 0x10,
		[Token(Token = "0x4001293")]
		BroadcastPropsChangeToAll = 0x20
	}

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private readonly Dictionary<byte, object> opParameters;

	[Token(Token = "0x17000029")]
	internal bool IsProtocolSecure
	{
		[Token(Token = "0x6000352")]
		[Address(RVA = "0x9680A8", Offset = "0x9680A8", VA = "0x9680A8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0x9680CC", Offset = "0x9680CC", VA = "0x9680CC")]
	public LoadBalancingPeer(ConnectionProtocol protocolType)
	{
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0x96816C", Offset = "0x96816C", VA = "0x96816C")]
	public LoadBalancingPeer(IPhotonPeerListener listener, ConnectionProtocol protocolType)
	{
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0x9681EC", Offset = "0x9681EC", VA = "0x9681EC", Slot = "17")]
	public virtual bool OpGetRegions(string appId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0x9682C0", Offset = "0x9682C0", VA = "0x9682C0", Slot = "18")]
	public virtual bool OpJoinLobby([Optional] TypedLobby lobby)
	{
		return default(bool);
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0x968488", Offset = "0x968488", VA = "0x968488", Slot = "19")]
	public virtual bool OpLeaveLobby()
	{
		return default(bool);
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0x9685A8", Offset = "0x9685A8", VA = "0x9685A8")]
	private void RoomOptionsToOpParameters(Dictionary<byte, object> op, RoomOptions roomOptions)
	{
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0x96899C", Offset = "0x96899C", VA = "0x96899C", Slot = "20")]
	public virtual bool OpCreateRoom(EnterRoomParams opParams)
	{
		return default(bool);
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0x968C50", Offset = "0x968C50", VA = "0x968C50", Slot = "21")]
	public virtual bool OpJoinRoom(EnterRoomParams opParams)
	{
		return default(bool);
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0x968F70", Offset = "0x968F70", VA = "0x968F70", Slot = "22")]
	public virtual bool OpJoinRandomRoom(OpJoinRandomRoomParams opJoinRandomRoomParams)
	{
		return default(bool);
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0x9692CC", Offset = "0x9692CC", VA = "0x9692CC", Slot = "23")]
	public virtual bool OpLeaveRoom(bool becomeInactive)
	{
		return default(bool);
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0x9693D4", Offset = "0x9693D4", VA = "0x9693D4", Slot = "24")]
	public virtual bool OpGetGameList(TypedLobby lobby, string queryData)
	{
		return default(bool);
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0x9696A0", Offset = "0x9696A0", VA = "0x9696A0", Slot = "25")]
	public virtual bool OpFindFriends(string[] friendsToFind)
	{
		return default(bool);
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0x969784", Offset = "0x969784", VA = "0x969784")]
	public bool OpSetCustomPropertiesOfActor(int actorNr, ExitGames.Client.Photon.Hashtable actorProperties)
	{
		return default(bool);
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0x969814", Offset = "0x969814", VA = "0x969814")]
	protected internal bool OpSetPropertiesOfActor(int actorNr, ExitGames.Client.Photon.Hashtable actorProperties, [Optional] ExitGames.Client.Photon.Hashtable expectedProperties, bool webForward = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0x969B0C", Offset = "0x969B0C", VA = "0x969B0C")]
	protected internal void OpSetPropertyOfRoom(byte propCode, object value)
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0x969DE4", Offset = "0x969DE4", VA = "0x969DE4")]
	public bool OpSetCustomPropertiesOfRoom(ExitGames.Client.Photon.Hashtable gameProperties, bool broadcast, byte channelId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0x969BC8", Offset = "0x969BC8", VA = "0x969BC8")]
	protected internal bool OpSetPropertiesOfRoom(ExitGames.Client.Photon.Hashtable gameProperties, [Optional] ExitGames.Client.Photon.Hashtable expectedProperties, bool webForward = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0x969E6C", Offset = "0x969E6C", VA = "0x969E6C", Slot = "26")]
	public virtual bool OpAuthenticate(string appId, string appVersion, AuthenticationValues authValues, string regionCode, bool getLobbyStatistics)
	{
		return default(bool);
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0x96A2C8", Offset = "0x96A2C8", VA = "0x96A2C8", Slot = "27")]
	public virtual bool OpAuthenticateOnce(string appId, string appVersion, AuthenticationValues authValues, string regionCode, EncryptionMode encryptionMode, ConnectionProtocol expectedProtocol)
	{
		return default(bool);
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0x96A6E4", Offset = "0x96A6E4", VA = "0x96A6E4", Slot = "28")]
	public virtual bool OpChangeGroups(byte[] groupsToRemove, byte[] groupsToAdd)
	{
		return default(bool);
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0x96A880", Offset = "0x96A880", VA = "0x96A880", Slot = "29")]
	public virtual bool OpRaiseEvent(byte eventCode, object customEventContent, bool sendReliable, RaiseEventOptions raiseEventOptions)
	{
		return default(bool);
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0x96AAE4", Offset = "0x96AAE4", VA = "0x96AAE4", Slot = "30")]
	public virtual bool OpSettings(bool receiveLobbyStats)
	{
		return default(bool);
	}
}
[Token(Token = "0x20000BB")]
internal class OpJoinRandomRoomParams
{
	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ExitGames.Client.Photon.Hashtable ExpectedCustomRoomProperties;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public byte ExpectedMaxPlayers;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public MatchmakingMode MatchingType;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TypedLobby TypedLobby;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string SqlLobbyFilter;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string[] ExpectedUsers;

	[Token(Token = "0x6000369")]
	[Address(RVA = "0xA4303C", Offset = "0xA4303C", VA = "0xA4303C")]
	public OpJoinRandomRoomParams()
	{
	}
}
[Token(Token = "0x20000BC")]
internal class EnterRoomParams
{
	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string RoomName;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RoomOptions RoomOptions;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TypedLobby Lobby;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ExitGames.Client.Photon.Hashtable PlayerProperties;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool OnGameServer;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool CreateIfNotExists;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool RejoinOnly;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string[] ExpectedUsers;

	[Token(Token = "0x600036A")]
	[Address(RVA = "0x97C07C", Offset = "0x97C07C", VA = "0x97C07C")]
	public EnterRoomParams()
	{
	}
}
[Token(Token = "0x20000BD")]
public class ErrorCode
{
	[Token(Token = "0x40003F8")]
	public const int Ok = 0;

	[Token(Token = "0x40003F9")]
	public const int OperationNotAllowedInCurrentState = -3;

	[Token(Token = "0x40003FA")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6E3200", Offset = "0x6E3200")]
	public const int InvalidOperationCode = -2;

	[Token(Token = "0x40003FB")]
	public const int InvalidOperation = -2;

	[Token(Token = "0x40003FC")]
	public const int InternalServerError = -1;

	[Token(Token = "0x40003FD")]
	public const int InvalidAuthentication = 32767;

	[Token(Token = "0x40003FE")]
	public const int GameIdAlreadyExists = 32766;

	[Token(Token = "0x40003FF")]
	public const int GameFull = 32765;

	[Token(Token = "0x4000400")]
	public const int GameClosed = 32764;

	[Token(Token = "0x4000401")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6E3238", Offset = "0x6E3238")]
	public const int AlreadyMatched = 32763;

	[Token(Token = "0x4000402")]
	public const int ServerFull = 32762;

	[Token(Token = "0x4000403")]
	public const int UserBlocked = 32761;

	[Token(Token = "0x4000404")]
	public const int NoRandomMatchFound = 32760;

	[Token(Token = "0x4000405")]
	public const int GameDoesNotExist = 32758;

	[Token(Token = "0x4000406")]
	public const int MaxCcuReached = 32757;

	[Token(Token = "0x4000407")]
	public const int InvalidRegion = 32756;

	[Token(Token = "0x4000408")]
	public const int CustomAuthenticationFailed = 32755;

	[Token(Token = "0x4000409")]
	public const int AuthenticationTicketExpired = 32753;

	[Token(Token = "0x400040A")]
	public const int PluginReportedError = 32752;

	[Token(Token = "0x400040B")]
	public const int PluginMismatch = 32751;

	[Token(Token = "0x400040C")]
	public const int JoinFailedPeerAlreadyJoined = 32750;

	[Token(Token = "0x400040D")]
	public const int JoinFailedFoundInactiveJoiner = 32749;

	[Token(Token = "0x400040E")]
	public const int JoinFailedWithRejoinerNotFound = 32748;

	[Token(Token = "0x400040F")]
	public const int JoinFailedFoundExcludedUserId = 32747;

	[Token(Token = "0x4000410")]
	public const int JoinFailedFoundActiveJoiner = 32746;

	[Token(Token = "0x4000411")]
	public const int HttpLimitReached = 32745;

	[Token(Token = "0x4000412")]
	public const int ExternalHttpCallFailed = 32744;

	[Token(Token = "0x4000413")]
	public const int SlotError = 32742;

	[Token(Token = "0x4000414")]
	public const int InvalidEncryptionParameters = 32741;

	[Token(Token = "0x600036B")]
	[Address(RVA = "0x97C08C", Offset = "0x97C08C", VA = "0x97C08C")]
	public ErrorCode()
	{
	}
}
[Token(Token = "0x20000BE")]
public class ActorProperties
{
	[Token(Token = "0x4000415")]
	public const byte PlayerName = byte.MaxValue;

	[Token(Token = "0x4000416")]
	public const byte IsInactive = 254;

	[Token(Token = "0x4000417")]
	public const byte UserId = 253;

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x9AA19C", Offset = "0x9AA19C", VA = "0x9AA19C")]
	public ActorProperties()
	{
	}
}
[Token(Token = "0x20000BF")]
public class GamePropertyKey
{
	[Token(Token = "0x4000418")]
	public const byte MaxPlayers = byte.MaxValue;

	[Token(Token = "0x4000419")]
	public const byte IsVisible = 254;

	[Token(Token = "0x400041A")]
	public const byte IsOpen = 253;

	[Token(Token = "0x400041B")]
	public const byte PlayerCount = 252;

	[Token(Token = "0x400041C")]
	public const byte Removed = 251;

	[Token(Token = "0x400041D")]
	public const byte PropsListedInLobby = 250;

	[Token(Token = "0x400041E")]
	public const byte CleanupCacheOnLeave = 249;

	[Token(Token = "0x400041F")]
	public const byte MasterClientId = 248;

	[Token(Token = "0x4000420")]
	public const byte ExpectedUsers = 247;

	[Token(Token = "0x4000421")]
	public const byte PlayerTtl = 246;

	[Token(Token = "0x4000422")]
	public const byte EmptyRoomTtl = 245;

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x9858C4", Offset = "0x9858C4", VA = "0x9858C4")]
	public GamePropertyKey()
	{
	}
}
[Token(Token = "0x20000C0")]
public class EventCode
{
	[Token(Token = "0x4000423")]
	public const byte GameList = 230;

	[Token(Token = "0x4000424")]
	public const byte GameListUpdate = 229;

	[Token(Token = "0x4000425")]
	public const byte QueueState = 228;

	[Token(Token = "0x4000426")]
	public const byte Match = 227;

	[Token(Token = "0x4000427")]
	public const byte AppStats = 226;

	[Token(Token = "0x4000428")]
	public const byte LobbyStats = 224;

	[Token(Token = "0x4000429")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6E3270", Offset = "0x6E3270")]
	public const byte AzureNodeInfo = 210;

	[Token(Token = "0x400042A")]
	public const byte Join = byte.MaxValue;

	[Token(Token = "0x400042B")]
	public const byte Leave = 254;

	[Token(Token = "0x400042C")]
	public const byte PropertiesChanged = 253;

	[Token(Token = "0x400042D")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6E32A8", Offset = "0x6E32A8")]
	public const byte SetProperties = 253;

	[Token(Token = "0x400042E")]
	public const byte ErrorInfo = 251;

	[Token(Token = "0x400042F")]
	public const byte CacheSliceChanged = 250;

	[Token(Token = "0x4000430")]
	public const byte AuthEvent = 223;

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x97C094", Offset = "0x97C094", VA = "0x97C094")]
	public EventCode()
	{
	}
}
[Token(Token = "0x20000C1")]
public class ParameterCode
{
	[Token(Token = "0x4000431")]
	public const byte SuppressRoomEvents = 237;

	[Token(Token = "0x4000432")]
	public const byte EmptyRoomTTL = 236;

	[Token(Token = "0x4000433")]
	public const byte PlayerTTL = 235;

	[Token(Token = "0x4000434")]
	public const byte EventForward = 234;

	[Token(Token = "0x4000435")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6E32E0", Offset = "0x6E32E0")]
	public const byte IsComingBack = 233;

	[Token(Token = "0x4000436")]
	public const byte IsInactive = 233;

	[Token(Token = "0x4000437")]
	public const byte CheckUserOnJoin = 232;

	[Token(Token = "0x4000438")]
	public const byte ExpectedValues = 231;

	[Token(Token = "0x4000439")]
	public const byte Address = 230;

	[Token(Token = "0x400043A")]
	public const byte PeerCount = 229;

	[Token(Token = "0x400043B")]
	public const byte GameCount = 228;

	[Token(Token = "0x400043C")]
	public const byte MasterPeerCount = 227;

	[Token(Token = "0x400043D")]
	public const byte UserId = 225;

	[Token(Token = "0x400043E")]
	public const byte ApplicationId = 224;

	[Token(Token = "0x400043F")]
	public const byte Position = 223;

	[Token(Token = "0x4000440")]
	public const byte MatchMakingType = 223;

	[Token(Token = "0x4000441")]
	public const byte GameList = 222;

	[Token(Token = "0x4000442")]
	public const byte Secret = 221;

	[Token(Token = "0x4000443")]
	public const byte AppVersion = 220;

	[Token(Token = "0x4000444")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6E3318", Offset = "0x6E3318")]
	public const byte AzureNodeInfo = 210;

	[Token(Token = "0x4000445")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6E3350", Offset = "0x6E3350")]
	public const byte AzureLocalNodeId = 209;

	[Token(Token = "0x4000446")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6E3388", Offset = "0x6E3388")]
	public const byte AzureMasterNodeId = 208;

	[Token(Token = "0x4000447")]
	public const byte RoomName = byte.MaxValue;

	[Token(Token = "0x4000448")]
	public const byte Broadcast = 250;

	[Token(Token = "0x4000449")]
	public const byte ActorList = 252;

	[Token(Token = "0x400044A")]
	public const byte ActorNr = 254;

	[Token(Token = "0x400044B")]
	public const byte PlayerProperties = 249;

	[Token(Token = "0x400044C")]
	public const byte CustomEventContent = 245;

	[Token(Token = "0x400044D")]
	public const byte Data = 245;

	[Token(Token = "0x400044E")]
	public const byte Code = 244;

	[Token(Token = "0x400044F")]
	public const byte GameProperties = 248;

	[Token(Token = "0x4000450")]
	public const byte Properties = 251;

	[Token(Token = "0x4000451")]
	public const byte TargetActorNr = 253;

	[Token(Token = "0x4000452")]
	public const byte ReceiverGroup = 246;

	[Token(Token = "0x4000453")]
	public const byte Cache = 247;

	[Token(Token = "0x4000454")]
	public const byte CleanupCacheOnLeave = 241;

	[Token(Token = "0x4000455")]
	public const byte Group = 240;

	[Token(Token = "0x4000456")]
	public const byte Remove = 239;

	[Token(Token = "0x4000457")]
	public const byte PublishUserId = 239;

	[Token(Token = "0x4000458")]
	public const byte Add = 238;

	[Token(Token = "0x4000459")]
	public const byte Info = 218;

	[Token(Token = "0x400045A")]
	public const byte ClientAuthenticationType = 217;

	[Token(Token = "0x400045B")]
	public const byte ClientAuthenticationParams = 216;

	[Token(Token = "0x400045C")]
	public const byte JoinMode = 215;

	[Token(Token = "0x400045D")]
	public const byte ClientAuthenticationData = 214;

	[Token(Token = "0x400045E")]
	public const byte MasterClientId = 203;

	[Token(Token = "0x400045F")]
	public const byte FindFriendsRequestList = 1;

	[Token(Token = "0x4000460")]
	public const byte FindFriendsResponseOnlineList = 1;

	[Token(Token = "0x4000461")]
	public const byte FindFriendsResponseRoomIdList = 2;

	[Token(Token = "0x4000462")]
	public const byte LobbyName = 213;

	[Token(Token = "0x4000463")]
	public const byte LobbyType = 212;

	[Token(Token = "0x4000464")]
	public const byte LobbyStats = 211;

	[Token(Token = "0x4000465")]
	public const byte Region = 210;

	[Token(Token = "0x4000466")]
	public const byte UriPath = 209;

	[Token(Token = "0x4000467")]
	public const byte WebRpcParameters = 208;

	[Token(Token = "0x4000468")]
	public const byte WebRpcReturnCode = 207;

	[Token(Token = "0x4000469")]
	public const byte WebRpcReturnMessage = 206;

	[Token(Token = "0x400046A")]
	public const byte CacheSliceIndex = 205;

	[Token(Token = "0x400046B")]
	public const byte Plugins = 204;

	[Token(Token = "0x400046C")]
	public const byte NickName = 202;

	[Token(Token = "0x400046D")]
	public const byte PluginName = 201;

	[Token(Token = "0x400046E")]
	public const byte PluginVersion = 200;

	[Token(Token = "0x400046F")]
	public const byte ExpectedProtocol = 195;

	[Token(Token = "0x4000470")]
	public const byte CustomInitData = 194;

	[Token(Token = "0x4000471")]
	public const byte EncryptionMode = 193;

	[Token(Token = "0x4000472")]
	public const byte EncryptionData = 192;

	[Token(Token = "0x4000473")]
	public const byte RoomOptionFlags = 191;

	[Token(Token = "0x600036F")]
	[Address(RVA = "0xA25FB0", Offset = "0xA25FB0", VA = "0xA25FB0")]
	public ParameterCode()
	{
	}
}
[Token(Token = "0x20000C2")]
public class OperationCode
{
	[Token(Token = "0x4000474")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6E33C0", Offset = "0x6E33C0")]
	public const byte ExchangeKeysForEncryption = 250;

	[Token(Token = "0x4000475")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6E33F8", Offset = "0x6E33F8")]
	public const byte Join = byte.MaxValue;

	[Token(Token = "0x4000476")]
	public const byte AuthenticateOnce = 231;

	[Token(Token = "0x4000477")]
	public const byte Authenticate = 230;

	[Token(Token = "0x4000478")]
	public const byte JoinLobby = 229;

	[Token(Token = "0x4000479")]
	public const byte LeaveLobby = 228;

	[Token(Token = "0x400047A")]
	public const byte CreateGame = 227;

	[Token(Token = "0x400047B")]
	public const byte JoinGame = 226;

	[Token(Token = "0x400047C")]
	public const byte JoinRandomGame = 225;

	[Token(Token = "0x400047D")]
	public const byte Leave = 254;

	[Token(Token = "0x400047E")]
	public const byte RaiseEvent = 253;

	[Token(Token = "0x400047F")]
	public const byte SetProperties = 252;

	[Token(Token = "0x4000480")]
	public const byte GetProperties = 251;

	[Token(Token = "0x4000481")]
	public const byte ChangeGroups = 248;

	[Token(Token = "0x4000482")]
	public const byte FindFriends = 222;

	[Token(Token = "0x4000483")]
	public const byte GetLobbyStats = 221;

	[Token(Token = "0x4000484")]
	public const byte GetRegions = 220;

	[Token(Token = "0x4000485")]
	public const byte WebRpc = 219;

	[Token(Token = "0x4000486")]
	public const byte ServerSettings = 218;

	[Token(Token = "0x4000487")]
	public const byte GetGameList = 217;

	[Token(Token = "0x6000370")]
	[Address(RVA = "0xA43044", Offset = "0xA43044", VA = "0xA43044")]
	public OperationCode()
	{
	}
}
[Token(Token = "0x20000C3")]
public enum JoinMode : byte
{
	[Token(Token = "0x4000489")]
	Default,
	[Token(Token = "0x400048A")]
	CreateIfNotExists,
	[Token(Token = "0x400048B")]
	JoinOrRejoin,
	[Token(Token = "0x400048C")]
	RejoinOnly
}
[Token(Token = "0x20000C4")]
public enum MatchmakingMode : byte
{
	[Token(Token = "0x400048E")]
	FillRoom,
	[Token(Token = "0x400048F")]
	SerialMatching,
	[Token(Token = "0x4000490")]
	RandomMatching
}
[Token(Token = "0x20000C5")]
public enum ReceiverGroup : byte
{
	[Token(Token = "0x4000492")]
	Others,
	[Token(Token = "0x4000493")]
	All,
	[Token(Token = "0x4000494")]
	MasterClient
}
[Token(Token = "0x20000C6")]
public enum EventCaching : byte
{
	[Token(Token = "0x4000496")]
	DoNotCache = 0,
	[Token(Token = "0x4000497")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6E3408", Offset = "0x6E3408")]
	MergeCache = 1,
	[Token(Token = "0x4000498")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6E3418", Offset = "0x6E3418")]
	ReplaceCache = 2,
	[Token(Token = "0x4000499")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6E3428", Offset = "0x6E3428")]
	RemoveCache = 3,
	[Token(Token = "0x400049A")]
	AddToRoomCache = 4,
	[Token(Token = "0x400049B")]
	AddToRoomCacheGlobal = 5,
	[Token(Token = "0x400049C")]
	RemoveFromRoomCache = 6,
	[Token(Token = "0x400049D")]
	RemoveFromRoomCacheForActorsLeft = 7,
	[Token(Token = "0x400049E")]
	SliceIncreaseIndex = 10,
	[Token(Token = "0x400049F")]
	SliceSetIndex = 11,
	[Token(Token = "0x40004A0")]
	SlicePurgeIndex = 12,
	[Token(Token = "0x40004A1")]
	SlicePurgeUpToIndex = 13
}
[Token(Token = "0x20000C7")]
[Flags]
public enum PropertyTypeFlag : byte
{
	[Token(Token = "0x40004A3")]
	None = 0,
	[Token(Token = "0x40004A4")]
	Game = 1,
	[Token(Token = "0x40004A5")]
	Actor = 2,
	[Token(Token = "0x40004A6")]
	GameAndActor = 3
}
[Token(Token = "0x20000C8")]
public class RoomOptions
{
	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool isVisibleField;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private bool isOpenField;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	public byte MaxPlayers;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int PlayerTtl;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int EmptyRoomTtl;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool cleanupCacheOnLeaveField;

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ExitGames.Client.Photon.Hashtable CustomRoomProperties;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string[] CustomRoomPropertiesForLobby;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string[] Plugins;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool suppressRoomEventsField;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool publishUserIdField;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	private bool deleteNullPropertiesField;

	[Token(Token = "0x1700002A")]
	public bool IsVisible
	{
		[Token(Token = "0x6000371")]
		[Address(RVA = "0x8F55D8", Offset = "0x8F55D8", VA = "0x8F55D8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000372")]
		[Address(RVA = "0x8F55E0", Offset = "0x8F55E0", VA = "0x8F55E0")]
		set
		{
		}
	}

	[Token(Token = "0x1700002B")]
	public bool IsOpen
	{
		[Token(Token = "0x6000373")]
		[Address(RVA = "0x8F55EC", Offset = "0x8F55EC", VA = "0x8F55EC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000374")]
		[Address(RVA = "0x8F55F4", Offset = "0x8F55F4", VA = "0x8F55F4")]
		set
		{
		}
	}

	[Token(Token = "0x1700002C")]
	public bool CleanupCacheOnLeave
	{
		[Token(Token = "0x6000375")]
		[Address(RVA = "0x8F5600", Offset = "0x8F5600", VA = "0x8F5600")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000376")]
		[Address(RVA = "0x8F5608", Offset = "0x8F5608", VA = "0x8F5608")]
		set
		{
		}
	}

	[Token(Token = "0x1700002D")]
	public bool SuppressRoomEvents
	{
		[Token(Token = "0x6000377")]
		[Address(RVA = "0x8F5614", Offset = "0x8F5614", VA = "0x8F5614")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700002E")]
	public bool PublishUserId
	{
		[Token(Token = "0x6000378")]
		[Address(RVA = "0x8F561C", Offset = "0x8F561C", VA = "0x8F561C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000379")]
		[Address(RVA = "0x8F5624", Offset = "0x8F5624", VA = "0x8F5624")]
		set
		{
		}
	}

	[Token(Token = "0x1700002F")]
	public bool DeleteNullProperties
	{
		[Token(Token = "0x600037A")]
		[Address(RVA = "0x8F5630", Offset = "0x8F5630", VA = "0x8F5630")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600037B")]
		[Address(RVA = "0x8F5638", Offset = "0x8F5638", VA = "0x8F5638")]
		set
		{
		}
	}

	[Token(Token = "0x17000030")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6EEBF0", Offset = "0x6EEBF0")]
	public bool isVisible
	{
		[Token(Token = "0x600037C")]
		[Address(RVA = "0x8F5644", Offset = "0x8F5644", VA = "0x8F5644")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600037D")]
		[Address(RVA = "0x8F564C", Offset = "0x8F564C", VA = "0x8F564C")]
		set
		{
		}
	}

	[Token(Token = "0x17000031")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6EEC28", Offset = "0x6EEC28")]
	public bool isOpen
	{
		[Token(Token = "0x600037E")]
		[Address(RVA = "0x8F5658", Offset = "0x8F5658", VA = "0x8F5658")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600037F")]
		[Address(RVA = "0x8F5660", Offset = "0x8F5660", VA = "0x8F5660")]
		set
		{
		}
	}

	[Token(Token = "0x17000032")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6EEC60", Offset = "0x6EEC60")]
	public byte maxPlayers
	{
		[Token(Token = "0x6000380")]
		[Address(RVA = "0x8F566C", Offset = "0x8F566C", VA = "0x8F566C")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6000381")]
		[Address(RVA = "0x8F5674", Offset = "0x8F5674", VA = "0x8F5674")]
		set
		{
		}
	}

	[Token(Token = "0x17000033")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6EEC98", Offset = "0x6EEC98")]
	public bool cleanupCacheOnLeave
	{
		[Token(Token = "0x6000382")]
		[Address(RVA = "0x8F567C", Offset = "0x8F567C", VA = "0x8F567C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000383")]
		[Address(RVA = "0x8F5684", Offset = "0x8F5684", VA = "0x8F5684")]
		set
		{
		}
	}

	[Token(Token = "0x17000034")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6EECD0", Offset = "0x6EECD0")]
	public ExitGames.Client.Photon.Hashtable customRoomProperties
	{
		[Token(Token = "0x6000384")]
		[Address(RVA = "0x8F5690", Offset = "0x8F5690", VA = "0x8F5690")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000385")]
		[Address(RVA = "0x8F5698", Offset = "0x8F5698", VA = "0x8F5698")]
		set
		{
		}
	}

	[Token(Token = "0x17000035")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6EED08", Offset = "0x6EED08")]
	public string[] customRoomPropertiesForLobby
	{
		[Token(Token = "0x6000386")]
		[Address(RVA = "0x8F56A0", Offset = "0x8F56A0", VA = "0x8F56A0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000387")]
		[Address(RVA = "0x8F56A8", Offset = "0x8F56A8", VA = "0x8F56A8")]
		set
		{
		}
	}

	[Token(Token = "0x17000036")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6EED40", Offset = "0x6EED40")]
	public string[] plugins
	{
		[Token(Token = "0x6000388")]
		[Address(RVA = "0x8F56B0", Offset = "0x8F56B0", VA = "0x8F56B0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000389")]
		[Address(RVA = "0x8F56B8", Offset = "0x8F56B8", VA = "0x8F56B8")]
		set
		{
		}
	}

	[Token(Token = "0x17000037")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6EED78", Offset = "0x6EED78")]
	public bool suppressRoomEvents
	{
		[Token(Token = "0x600038A")]
		[Address(RVA = "0x8F56C0", Offset = "0x8F56C0", VA = "0x8F56C0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000038")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6EEDB0", Offset = "0x6EEDB0")]
	public bool publishUserId
	{
		[Token(Token = "0x600038B")]
		[Address(RVA = "0x8F56C8", Offset = "0x8F56C8", VA = "0x8F56C8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600038C")]
		[Address(RVA = "0x8F56D0", Offset = "0x8F56D0", VA = "0x8F56D0")]
		set
		{
		}
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0x8F56DC", Offset = "0x8F56DC", VA = "0x8F56DC")]
	public RoomOptions()
	{
	}
}
[Token(Token = "0x20000C9")]
public class RaiseEventOptions
{
	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly RaiseEventOptions Default;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public EventCaching CachingOption;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public byte InterestGroup;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int[] TargetActors;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ReceiverGroup Receivers;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public byte SequenceChannel;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool ForwardToWebhook;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	public bool Encrypt;

	[Token(Token = "0x600038E")]
	[Address(RVA = "0x950E04", Offset = "0x950E04", VA = "0x950E04")]
	public void Reset()
	{
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0x950830", Offset = "0x950830", VA = "0x950830")]
	public RaiseEventOptions()
	{
	}
}
[Token(Token = "0x20000CA")]
public enum LobbyType : byte
{
	[Token(Token = "0x40004BC")]
	Default = 0,
	[Token(Token = "0x40004BD")]
	SqlLobby = 2,
	[Token(Token = "0x40004BE")]
	AsyncRandomLobby = 3
}
[Token(Token = "0x20000CB")]
public class TypedLobby
{
	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string Name;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LobbyType Type;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly TypedLobby Default;

	[Token(Token = "0x17000039")]
	public bool IsDefault
	{
		[Token(Token = "0x6000391")]
		[Address(RVA = "0xAB9AAC", Offset = "0xAB9AAC", VA = "0xAB9AAC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0xAB9AC8", Offset = "0xAB9AC8", VA = "0xAB9AC8")]
	public TypedLobby()
	{
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0xAB9B30", Offset = "0xAB9B30", VA = "0xAB9B30")]
	public TypedLobby(string name, LobbyType type)
	{
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0xAB9B6C", Offset = "0xAB9B6C", VA = "0xAB9B6C", Slot = "3")]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x20000CC")]
public class TypedLobbyInfo : TypedLobby
{
	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int PlayerCount;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int RoomCount;

	[Token(Token = "0x6000396")]
	[Address(RVA = "0xAB9C54", Offset = "0xAB9C54", VA = "0xAB9C54", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0xAB9DEC", Offset = "0xAB9DEC", VA = "0xAB9DEC")]
	public TypedLobbyInfo()
	{
	}
}
[Token(Token = "0x20000CD")]
public enum AuthModeOption
{
	[Token(Token = "0x40004C5")]
	Auth,
	[Token(Token = "0x40004C6")]
	AuthOnce,
	[Token(Token = "0x40004C7")]
	AuthOnceWss
}
[Token(Token = "0x20000CE")]
public enum CustomAuthenticationType : byte
{
	[Token(Token = "0x40004C9")]
	Custom = 0,
	[Token(Token = "0x40004CA")]
	Steam = 1,
	[Token(Token = "0x40004CB")]
	Facebook = 2,
	[Token(Token = "0x40004CC")]
	Oculus = 3,
	[Token(Token = "0x40004CD")]
	PlayStation = 4,
	[Token(Token = "0x40004CE")]
	Xbox = 5,
	[Token(Token = "0x40004CF")]
	None = byte.MaxValue
}
[Token(Token = "0x20000CF")]
public class AuthenticationValues
{
	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private CustomAuthenticationType authType;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E3438", Offset = "0x6E3438")]
	private string <AuthGetParameters>k__BackingField;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E3448", Offset = "0x6E3448")]
	private object <AuthPostData>k__BackingField;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E3458", Offset = "0x6E3458")]
	private string <Token>k__BackingField;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E3468", Offset = "0x6E3468")]
	private string <UserId>k__BackingField;

	[Token(Token = "0x1700003A")]
	public CustomAuthenticationType AuthType
	{
		[Token(Token = "0x6000398")]
		[Address(RVA = "0x9AA9F8", Offset = "0x9AA9F8", VA = "0x9AA9F8")]
		get
		{
			return default(CustomAuthenticationType);
		}
		[Token(Token = "0x6000399")]
		[Address(RVA = "0x9AAA00", Offset = "0x9AAA00", VA = "0x9AAA00")]
		set
		{
		}
	}

	[Token(Token = "0x1700003B")]
	public string AuthGetParameters
	{
		[Token(Token = "0x600039A")]
		[Address(RVA = "0x9AAA08", Offset = "0x9AAA08", VA = "0x9AAA08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EAC98", Offset = "0x6EAC98")]
		get
		{
			return null;
		}
		[Token(Token = "0x600039B")]
		[Address(RVA = "0x9AAA10", Offset = "0x9AAA10", VA = "0x9AAA10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EACA8", Offset = "0x6EACA8")]
		set
		{
		}
	}

	[Token(Token = "0x1700003C")]
	public object AuthPostData
	{
		[Token(Token = "0x600039C")]
		[Address(RVA = "0x9AAA18", Offset = "0x9AAA18", VA = "0x9AAA18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EACB8", Offset = "0x6EACB8")]
		get
		{
			return null;
		}
		[Token(Token = "0x600039D")]
		[Address(RVA = "0x9AAA20", Offset = "0x9AAA20", VA = "0x9AAA20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EACC8", Offset = "0x6EACC8")]
		private set
		{
		}
	}

	[Token(Token = "0x1700003D")]
	public string Token
	{
		[Token(Token = "0x600039E")]
		[Address(RVA = "0x9AAA28", Offset = "0x9AAA28", VA = "0x9AAA28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EACD8", Offset = "0x6EACD8")]
		get
		{
			return null;
		}
		[Token(Token = "0x600039F")]
		[Address(RVA = "0x9AAA30", Offset = "0x9AAA30", VA = "0x9AAA30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EACE8", Offset = "0x6EACE8")]
		set
		{
		}
	}

	[Token(Token = "0x1700003E")]
	public string UserId
	{
		[Token(Token = "0x60003A0")]
		[Address(RVA = "0x9AAA38", Offset = "0x9AAA38", VA = "0x9AAA38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EACF8", Offset = "0x6EACF8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003A1")]
		[Address(RVA = "0x9AAA40", Offset = "0x9AAA40", VA = "0x9AAA40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EAD08", Offset = "0x6EAD08")]
		set
		{
		}
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0x9AAA48", Offset = "0x9AAA48", VA = "0x9AAA48")]
	public AuthenticationValues()
	{
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0x9AAA58", Offset = "0x9AAA58", VA = "0x9AAA58")]
	public AuthenticationValues(string userId)
	{
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0x9AAA8C", Offset = "0x9AAA8C", VA = "0x9AAA8C", Slot = "4")]
	public virtual void SetAuthPostData(string stringData)
	{
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0x9AAACC", Offset = "0x9AAACC", VA = "0x9AAACC", Slot = "5")]
	public virtual void SetAuthPostData(byte[] byteData)
	{
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0x9AAAD4", Offset = "0x9AAAD4", VA = "0x9AAAD4", Slot = "6")]
	public virtual void SetAuthPostData(Dictionary<string, object> dictData)
	{
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0x9AAADC", Offset = "0x9AAADC", VA = "0x9AAADC", Slot = "7")]
	public virtual void AddAuthParameter(string key, string value)
	{
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0x9AAC90", Offset = "0x9AAC90", VA = "0x9AAC90", Slot = "3")]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x20000D0")]
public enum ClientState
{
	[Token(Token = "0x40004D6")]
	Uninitialized,
	[Token(Token = "0x40004D7")]
	PeerCreated,
	[Token(Token = "0x40004D8")]
	Queued,
	[Token(Token = "0x40004D9")]
	Authenticated,
	[Token(Token = "0x40004DA")]
	JoinedLobby,
	[Token(Token = "0x40004DB")]
	DisconnectingFromMasterserver,
	[Token(Token = "0x40004DC")]
	ConnectingToGameserver,
	[Token(Token = "0x40004DD")]
	ConnectedToGameserver,
	[Token(Token = "0x40004DE")]
	Joining,
	[Token(Token = "0x40004DF")]
	Joined,
	[Token(Token = "0x40004E0")]
	Leaving,
	[Token(Token = "0x40004E1")]
	DisconnectingFromGameserver,
	[Token(Token = "0x40004E2")]
	ConnectingToMasterserver,
	[Token(Token = "0x40004E3")]
	QueuedComingFromGameserver,
	[Token(Token = "0x40004E4")]
	Disconnecting,
	[Token(Token = "0x40004E5")]
	Disconnected,
	[Token(Token = "0x40004E6")]
	ConnectedToMaster,
	[Token(Token = "0x40004E7")]
	ConnectingToNameServer,
	[Token(Token = "0x40004E8")]
	ConnectedToNameServer,
	[Token(Token = "0x40004E9")]
	DisconnectingFromNameServer,
	[Token(Token = "0x40004EA")]
	Authenticating
}
[Token(Token = "0x20000D1")]
internal enum JoinType
{
	[Token(Token = "0x40004EC")]
	CreateRoom,
	[Token(Token = "0x40004ED")]
	JoinRoom,
	[Token(Token = "0x40004EE")]
	JoinRandomRoom,
	[Token(Token = "0x40004EF")]
	JoinOrCreateRoom
}
[Token(Token = "0x20000D2")]
public enum DisconnectCause
{
	[Token(Token = "0x40004F1")]
	DisconnectByServerUserLimit = 1042,
	[Token(Token = "0x40004F2")]
	ExceptionOnConnect = 1023,
	[Token(Token = "0x40004F3")]
	DisconnectByServerTimeout = 1041,
	[Token(Token = "0x40004F4")]
	DisconnectByServerLogic = 1043,
	[Token(Token = "0x40004F5")]
	Exception = 1026,
	[Token(Token = "0x40004F6")]
	InvalidAuthentication = 32767,
	[Token(Token = "0x40004F7")]
	MaxCcuReached = 32757,
	[Token(Token = "0x40004F8")]
	InvalidRegion = 32756,
	[Token(Token = "0x40004F9")]
	SecurityExceptionOnConnect = 1022,
	[Token(Token = "0x40004FA")]
	DisconnectByClientTimeout = 1040,
	[Token(Token = "0x40004FB")]
	InternalReceiveException = 1039,
	[Token(Token = "0x40004FC")]
	AuthenticationTicketExpired = 32753
}
[Token(Token = "0x20000D3")]
public enum ServerConnection
{
	[Token(Token = "0x40004FE")]
	MasterServer,
	[Token(Token = "0x40004FF")]
	GameServer,
	[Token(Token = "0x4000500")]
	NameServer
}
[Token(Token = "0x20000D4")]
internal class NetworkingPeer : LoadBalancingPeer, IPhotonPeerListener
{
	[Token(Token = "0x200039F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E19F4", Offset = "0x6E19F4")]
	private sealed class <>c__DisplayClass160_0
	{
		[Token(Token = "0x4001294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CloudRegionCode bestFromPrefs;

		[Token(Token = "0x60017E4")]
		[Address(RVA = "0x10E57C8", Offset = "0x10E57C8", VA = "0x10E57C8")]
		public <>c__DisplayClass160_0()
		{
		}

		[Token(Token = "0x60017E5")]
		[Address(RVA = "0x10E57D0", Offset = "0x10E57D0", VA = "0x10E57D0")]
		internal bool <OnOperationResponse>b__0(Region x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	protected internal string AppId;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E3478", Offset = "0x6E3478")]
	private AuthenticationValues <AuthValues>k__BackingField;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private string tokenCache;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public AuthModeOption AuthMode;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public EncryptionMode EncryptionMode;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E3488", Offset = "0x6E3488")]
	private bool <IsUsingNameServer>k__BackingField;

	[Token(Token = "0x4000507")]
	public const string NameServerHost = "ns.exitgames.com";

	[Token(Token = "0x4000508")]
	public const string NameServerHttp = "http://ns.exitgamescloud.com:80/photon/n";

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Dictionary<ConnectionProtocol, int> ProtocolToNameServerPort;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E3498", Offset = "0x6E3498")]
	private string <MasterServerAddress>k__BackingField;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E34A8", Offset = "0x6E34A8")]
	private string <GameServerAddress>k__BackingField;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E34B8", Offset = "0x6E34B8")]
	private ServerConnection <Server>k__BackingField;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E34C8", Offset = "0x6E34C8")]
	private ClientState <State>k__BackingField;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public bool IsInitialConnect;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x131")]
	public bool insideLobby;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E34D8", Offset = "0x6E34D8")]
	private TypedLobby <lobby>k__BackingField;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	protected internal List<TypedLobbyInfo> LobbyStatistics;

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Dictionary<string, RoomInfo> mGameList;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public RoomInfo[] mGameListCopy;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private string playername;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private bool mPlayernameHasToBeUpdated;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private Room currentRoom;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E34E8", Offset = "0x6E34E8")]
	private PhotonPlayer <LocalPlayer>k__BackingField;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E34F8", Offset = "0x6E34F8")]
	private int <PlayersOnMasterCount>k__BackingField;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E3508", Offset = "0x6E3508")]
	private int <PlayersInRoomsCount>k__BackingField;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E3518", Offset = "0x6E3518")]
	private int <RoomsCount>k__BackingField;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private JoinType lastJoinType;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	protected internal EnterRoomParams enterRoomParamsCache;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private bool didAuthenticate;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private string[] friendListRequested;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private int friendListTimestamp;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	private bool isFetchingFriendList;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E3528", Offset = "0x6E3528")]
	private List<Region> <AvailableRegions>k__BackingField;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E3538", Offset = "0x6E3538")]
	private CloudRegionCode <CloudRegion>k__BackingField;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public Dictionary<int, PhotonPlayer> mActors;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public PhotonPlayer[] mOtherPlayerListCopy;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public PhotonPlayer[] mPlayerListCopy;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public bool hasSwitchedMC;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private HashSet<byte> allowedReceivingGroups;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private HashSet<byte> blockSendingGroups;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	protected internal Dictionary<int, PhotonView> photonViewList;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private readonly PhotonStream readStream;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private readonly PhotonStream pStream;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private readonly Dictionary<int, ExitGames.Client.Photon.Hashtable> dataPerGroupReliable;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private readonly Dictionary<int, ExitGames.Client.Photon.Hashtable> dataPerGroupUnreliable;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	protected internal short currentLevelPrefix;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x212")]
	protected internal bool loadingLevelAndPausedNetwork;

	[Token(Token = "0x4000530")]
	protected internal const string CurrentSceneProperty = "curScn";

	[Token(Token = "0x4000531")]
	protected internal const string CurrentScenePropertyLoadAsync = "curScnLa";

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool UsePrefabCache;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	internal IPunPrefabPool ObjectPool;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Dictionary<string, GameObject> PrefabCache;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private Dictionary<Type, List<MethodInfo>> monoRPCMethodsCache;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private readonly Dictionary<string, int> rpcShortcuts;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly string OnPhotonInstantiateString;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private string cachedServerAddress;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private string cachedApplicationName;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	private ServerConnection cachedServerType;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	private AsyncOperation _AsyncLevelLoadingOperation;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	private bool _isReconnecting;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	private Dictionary<int, object[]> tempInstantiationData;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static int ObjectsInOneUpdate;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	private RaiseEventOptions options;

	[Token(Token = "0x4000540")]
	public const int SyncViewId = 0;

	[Token(Token = "0x4000541")]
	public const int SyncCompressed = 1;

	[Token(Token = "0x4000542")]
	public const int SyncNullValues = 2;

	[Token(Token = "0x4000543")]
	public const int SyncFirstValue = 3;

	[Token(Token = "0x1700003F")]
	protected internal string AppVersion
	{
		[Token(Token = "0x60003A9")]
		[Address(RVA = "0x8DFFD4", Offset = "0x8DFFD4", VA = "0x8DFFD4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000040")]
	public AuthenticationValues AuthValues
	{
		[Token(Token = "0x60003AA")]
		[Address(RVA = "0x8E0094", Offset = "0x8E0094", VA = "0x8E0094")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EAD18", Offset = "0x6EAD18")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003AB")]
		[Address(RVA = "0x8E009C", Offset = "0x8E009C", VA = "0x8E009C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EAD28", Offset = "0x6EAD28")]
		set
		{
		}
	}

	[Token(Token = "0x17000041")]
	private string TokenForInit
	{
		[Token(Token = "0x60003AC")]
		[Address(RVA = "0x8E00A4", Offset = "0x8E00A4", VA = "0x8E00A4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000042")]
	public bool IsUsingNameServer
	{
		[Token(Token = "0x60003AD")]
		[Address(RVA = "0x8E00C4", Offset = "0x8E00C4", VA = "0x8E00C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EAD38", Offset = "0x6EAD38")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003AE")]
		[Address(RVA = "0x8E00CC", Offset = "0x8E00CC", VA = "0x8E00CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EAD48", Offset = "0x6EAD48")]
		protected internal set
		{
		}
	}

	[Token(Token = "0x17000043")]
	public string NameServerAddress
	{
		[Token(Token = "0x60003AF")]
		[Address(RVA = "0x8E00D8", Offset = "0x8E00D8", VA = "0x8E00D8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000044")]
	public string MasterServerAddress
	{
		[Token(Token = "0x60003B0")]
		[Address(RVA = "0x8E0280", Offset = "0x8E0280", VA = "0x8E0280")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EAD58", Offset = "0x6EAD58")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003B1")]
		[Address(RVA = "0x8E0288", Offset = "0x8E0288", VA = "0x8E0288")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EAD68", Offset = "0x6EAD68")]
		protected internal set
		{
		}
	}

	[Token(Token = "0x17000045")]
	public string GameServerAddress
	{
		[Token(Token = "0x60003B2")]
		[Address(RVA = "0x8E0290", Offset = "0x8E0290", VA = "0x8E0290")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EAD78", Offset = "0x6EAD78")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003B3")]
		[Address(RVA = "0x8E0298", Offset = "0x8E0298", VA = "0x8E0298")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EAD88", Offset = "0x6EAD88")]
		protected internal set
		{
		}
	}

	[Token(Token = "0x17000046")]
	protected internal ServerConnection Server
	{
		[Token(Token = "0x60003B4")]
		[Address(RVA = "0x8E02A0", Offset = "0x8E02A0", VA = "0x8E02A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EAD98", Offset = "0x6EAD98")]
		get
		{
			return default(ServerConnection);
		}
		[Token(Token = "0x60003B5")]
		[Address(RVA = "0x8E02A8", Offset = "0x8E02A8", VA = "0x8E02A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EADA8", Offset = "0x6EADA8")]
		private set
		{
		}
	}

	[Token(Token = "0x17000047")]
	public ClientState State
	{
		[Token(Token = "0x60003B6")]
		[Address(RVA = "0x8E02B0", Offset = "0x8E02B0", VA = "0x8E02B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EADB8", Offset = "0x6EADB8")]
		get
		{
			return default(ClientState);
		}
		[Token(Token = "0x60003B7")]
		[Address(RVA = "0x8E02B8", Offset = "0x8E02B8", VA = "0x8E02B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EADC8", Offset = "0x6EADC8")]
		internal set
		{
		}
	}

	[Token(Token = "0x17000048")]
	public TypedLobby lobby
	{
		[Token(Token = "0x60003B8")]
		[Address(RVA = "0x8E02C0", Offset = "0x8E02C0", VA = "0x8E02C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EADD8", Offset = "0x6EADD8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003B9")]
		[Address(RVA = "0x8E02C8", Offset = "0x8E02C8", VA = "0x8E02C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EADE8", Offset = "0x6EADE8")]
		set
		{
		}
	}

	[Token(Token = "0x17000049")]
	private bool requestLobbyStatistics
	{
		[Token(Token = "0x60003BA")]
		[Address(RVA = "0x8E02D0", Offset = "0x8E02D0", VA = "0x8E02D0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700004A")]
	public string PlayerName
	{
		[Token(Token = "0x60003BB")]
		[Address(RVA = "0x8E0350", Offset = "0x8E0350", VA = "0x8E0350")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003BC")]
		[Address(RVA = "0x8E0358", Offset = "0x8E0358", VA = "0x8E0358")]
		set
		{
		}
	}

	[Token(Token = "0x1700004B")]
	public Room CurrentRoom
	{
		[Token(Token = "0x60003BD")]
		[Address(RVA = "0x8E03DC", Offset = "0x8E03DC", VA = "0x8E03DC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003BE")]
		[Address(RVA = "0x8E04F4", Offset = "0x8E04F4", VA = "0x8E04F4")]
		private set
		{
		}
	}

	[Token(Token = "0x1700004C")]
	public PhotonPlayer LocalPlayer
	{
		[Token(Token = "0x60003BF")]
		[Address(RVA = "0x8E04FC", Offset = "0x8E04FC", VA = "0x8E04FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EADF8", Offset = "0x6EADF8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003C0")]
		[Address(RVA = "0x8E0504", Offset = "0x8E0504", VA = "0x8E0504")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EAE08", Offset = "0x6EAE08")]
		internal set
		{
		}
	}

	[Token(Token = "0x1700004D")]
	public int PlayersOnMasterCount
	{
		[Token(Token = "0x60003C1")]
		[Address(RVA = "0x8E050C", Offset = "0x8E050C", VA = "0x8E050C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EAE18", Offset = "0x6EAE18")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60003C2")]
		[Address(RVA = "0x8E0514", Offset = "0x8E0514", VA = "0x8E0514")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EAE28", Offset = "0x6EAE28")]
		internal set
		{
		}
	}

	[Token(Token = "0x1700004E")]
	public int PlayersInRoomsCount
	{
		[Token(Token = "0x60003C3")]
		[Address(RVA = "0x8E051C", Offset = "0x8E051C", VA = "0x8E051C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EAE38", Offset = "0x6EAE38")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60003C4")]
		[Address(RVA = "0x8E0524", Offset = "0x8E0524", VA = "0x8E0524")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EAE48", Offset = "0x6EAE48")]
		internal set
		{
		}
	}

	[Token(Token = "0x1700004F")]
	public int RoomsCount
	{
		[Token(Token = "0x60003C5")]
		[Address(RVA = "0x8E052C", Offset = "0x8E052C", VA = "0x8E052C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EAE58", Offset = "0x6EAE58")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60003C6")]
		[Address(RVA = "0x8E0534", Offset = "0x8E0534", VA = "0x8E0534")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EAE68", Offset = "0x6EAE68")]
		internal set
		{
		}
	}

	[Token(Token = "0x17000050")]
	protected internal int FriendListAge
	{
		[Token(Token = "0x60003C7")]
		[Address(RVA = "0x8E053C", Offset = "0x8E053C", VA = "0x8E053C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000051")]
	public bool IsAuthorizeSecretAvailable
	{
		[Token(Token = "0x60003C8")]
		[Address(RVA = "0x8E0580", Offset = "0x8E0580", VA = "0x8E0580")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000052")]
	public List<Region> AvailableRegions
	{
		[Token(Token = "0x60003C9")]
		[Address(RVA = "0x8E05AC", Offset = "0x8E05AC", VA = "0x8E05AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EAE78", Offset = "0x6EAE78")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003CA")]
		[Address(RVA = "0x8E05B4", Offset = "0x8E05B4", VA = "0x8E05B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EAE88", Offset = "0x6EAE88")]
		protected internal set
		{
		}
	}

	[Token(Token = "0x17000053")]
	public CloudRegionCode CloudRegion
	{
		[Token(Token = "0x60003CB")]
		[Address(RVA = "0x8E05BC", Offset = "0x8E05BC", VA = "0x8E05BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EAE98", Offset = "0x6EAE98")]
		get
		{
			return default(CloudRegionCode);
		}
		[Token(Token = "0x60003CC")]
		[Address(RVA = "0x8E05C4", Offset = "0x8E05C4", VA = "0x8E05C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EAEA8", Offset = "0x6EAEA8")]
		protected internal set
		{
		}
	}

	[Token(Token = "0x17000054")]
	public int mMasterClientId
	{
		[Token(Token = "0x60003CD")]
		[Address(RVA = "0x8E05CC", Offset = "0x8E05CC", VA = "0x8E05CC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60003CE")]
		[Address(RVA = "0x8E06B0", Offset = "0x8E06B0", VA = "0x8E06B0")]
		private set
		{
		}
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0x8E06C8", Offset = "0x8E06C8", VA = "0x8E06C8")]
	public NetworkingPeer(string playername, ConnectionProtocol connectionProtocol)
	{
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0x8E00DC", Offset = "0x8E00DC", VA = "0x8E00DC")]
	private string GetNameServerAddress()
	{
		return null;
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0x8E0C24", Offset = "0x8E0C24", VA = "0x8E0C24", Slot = "6")]
	public override bool Connect(string serverAddress, string applicationName)
	{
		return default(bool);
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0x8E0C98", Offset = "0x8E0C98", VA = "0x8E0C98")]
	public bool ReconnectToMaster()
	{
		return default(bool);
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0x8E0F54", Offset = "0x8E0F54", VA = "0x8E0F54")]
	public bool ReconnectAndRejoin()
	{
		return default(bool);
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0x8E0D50", Offset = "0x8E0D50", VA = "0x8E0D50")]
	public bool Connect(string serverAddress, ServerConnection type)
	{
		return default(bool);
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0x8E15B4", Offset = "0x8E15B4", VA = "0x8E15B4")]
	private bool Reconnect()
	{
		return default(bool);
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0x8E16B0", Offset = "0x8E16B0", VA = "0x8E16B0")]
	public bool ConnectToNameServer()
	{
		return default(bool);
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0x8E17F0", Offset = "0x8E17F0", VA = "0x8E17F0")]
	public bool ConnectToRegionMaster(CloudRegionCode region)
	{
		return default(bool);
	}

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0x8E1040", Offset = "0x8E1040", VA = "0x8E1040")]
	protected internal void SetupProtocol(ServerConnection serverType)
	{
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0x8E1ACC", Offset = "0x8E1ACC", VA = "0x8E1ACC", Slot = "8")]
	public override void Disconnect()
	{
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0x8E194C", Offset = "0x8E194C", VA = "0x8E194C")]
	private bool CallAuthenticate()
	{
		return default(bool);
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0x8E1BE4", Offset = "0x8E1BE4", VA = "0x8E1BE4")]
	private void DisconnectToReconnect()
	{
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0x8E1C20", Offset = "0x8E1C20", VA = "0x8E1C20")]
	public bool GetRegions()
	{
		return default(bool);
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0x8E1C70", Offset = "0x8E1C70", VA = "0x8E1C70", Slot = "25")]
	public override bool OpFindFriends(string[] friendsToFind)
	{
		return default(bool);
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0x8E1C94", Offset = "0x8E1C94", VA = "0x8E1C94")]
	public bool OpCreateGame(EnterRoomParams enterRoomParams)
	{
		return default(bool);
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0x8E1DFC", Offset = "0x8E1DFC", VA = "0x8E1DFC", Slot = "21")]
	public override bool OpJoinRoom(EnterRoomParams opParams)
	{
		return default(bool);
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0x8E1E40", Offset = "0x8E1E40", VA = "0x8E1E40", Slot = "22")]
	public override bool OpJoinRandomRoom(OpJoinRandomRoomParams opJoinRandomRoomParams)
	{
		return default(bool);
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0x8E1EE4", Offset = "0x8E1EE4", VA = "0x8E1EE4", Slot = "29")]
	public override bool OpRaiseEvent(byte eventCode, object customEventContent, bool sendReliable, RaiseEventOptions raiseEventOptions)
	{
		return default(bool);
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0x8E1FEC", Offset = "0x8E1FEC", VA = "0x8E1FEC")]
	private void ReadoutProperties(ExitGames.Client.Photon.Hashtable gameProperties, ExitGames.Client.Photon.Hashtable pActorProperties, int targetActorNr)
	{
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0x8E2600", Offset = "0x8E2600", VA = "0x8E2600")]
	private ExitGames.Client.Photon.Hashtable ReadoutPropertiesForActorNr(ExitGames.Client.Photon.Hashtable actorProperties, int actorNr)
	{
		return null;
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0x8E2C98", Offset = "0x8E2C98", VA = "0x8E2C98")]
	public void ChangeLocalID(int newID)
	{
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0x8E2F74", Offset = "0x8E2F74", VA = "0x8E2F74")]
	private void LeftLobbyCleanup()
	{
	}

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0x8E30C0", Offset = "0x8E30C0", VA = "0x8E30C0")]
	private void LeftRoomCleanup()
	{
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0x8E33B0", Offset = "0x8E33B0", VA = "0x8E33B0")]
	protected internal void LocalCleanupAnythingInstantiated(bool destroyInstantiatedGameObjects)
	{
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0x8E3AAC", Offset = "0x8E3AAC", VA = "0x8E3AAC")]
	private void GameEnteredOnGameServer(OperationResponse operationResponse)
	{
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0x8E0B08", Offset = "0x8E0B08", VA = "0x8E0B08")]
	private void AddNewPlayer(int ID, PhotonPlayer player)
	{
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0x8E4568", Offset = "0x8E4568", VA = "0x8E4568")]
	private void RemovePlayer(int ID, PhotonPlayer player)
	{
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0x8E2E18", Offset = "0x8E2E18", VA = "0x8E2E18")]
	private void RebuildPlayerListCopies()
	{
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0x8E45F8", Offset = "0x8E45F8", VA = "0x8E45F8")]
	private void ResetPhotonViewsOnSerialize()
	{
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0x8E46FC", Offset = "0x8E46FC", VA = "0x8E46FC")]
	private void HandleEventLeave(int actorID, EventData evLeave)
	{
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0x8E4360", Offset = "0x8E4360", VA = "0x8E4360")]
	private void CheckMasterClient(int leavingPlayerId)
	{
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0x8E4D74", Offset = "0x8E4D74", VA = "0x8E4D74")]
	protected internal void UpdateMasterClient()
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0x8E528C", Offset = "0x8E528C", VA = "0x8E528C")]
	private static int ReturnLowestPlayerId(PhotonPlayer[] players, int playerIdToIgnore)
	{
		return default(int);
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0x8E52F0", Offset = "0x8E52F0", VA = "0x8E52F0")]
	protected internal bool SetMasterClient(int playerId, bool sync)
	{
		return default(bool);
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0x8E54D8", Offset = "0x8E54D8", VA = "0x8E54D8")]
	public bool SetMasterClient(int nextMasterId)
	{
		return default(bool);
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0x8E2588", Offset = "0x8E2588", VA = "0x8E2588")]
	protected internal PhotonPlayer GetPlayerWithId(int number)
	{
		return null;
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0x8E03FC", Offset = "0x8E03FC", VA = "0x8E03FC")]
	private void SendPlayerName()
	{
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0x8E1CF8", Offset = "0x8E1CF8", VA = "0x8E1CF8")]
	private ExitGames.Client.Photon.Hashtable GetLocalActorProperties()
	{
		return null;
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0x8E5634", Offset = "0x8E5634", VA = "0x8E5634", Slot = "31")]
	public void DebugReturn(DebugLevel level, string message)
	{
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0x8E57B4", Offset = "0x8E57B4", VA = "0x8E57B4", Slot = "32")]
	public void OnOperationResponse(OperationResponse operationResponse)
	{
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0x8E86D8", Offset = "0x8E86D8", VA = "0x8E86D8", Slot = "33")]
	public void OnStatusChanged(StatusCode statusCode)
	{
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0x8E9640", Offset = "0x8E9640", VA = "0x8E9640", Slot = "34")]
	public void OnEvent(EventData photonEvent)
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0x8EE5BC", Offset = "0x8EE5BC", VA = "0x8EE5BC")]
	public void OnMessage(object messages)
	{
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0x8E83D4", Offset = "0x8E83D4", VA = "0x8E83D4")]
	private void SetupEncryption(Dictionary<byte, object> encryptionData)
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0x8E4234", Offset = "0x8E4234", VA = "0x8E4234")]
	protected internal void UpdatedActorList(int[] actorsInRoom)
	{
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0x8EE5C0", Offset = "0x8EE5C0", VA = "0x8EE5C0")]
	private void SendVacantViewIds()
	{
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0x8E26F0", Offset = "0x8E26F0", VA = "0x8E26F0")]
	public static void SendMonoMessage(PhotonNetworkingMessage methodString, params object[] parameters)
	{
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0x8EB954", Offset = "0x8EB954", VA = "0x8EB954")]
	protected internal void ExecuteRpc(ExitGames.Client.Photon.Hashtable rpcData, int senderID = 0)
	{
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0x8EE9D0", Offset = "0x8EE9D0", VA = "0x8EE9D0")]
	private bool CheckTypeMatch(ParameterInfo[] methodParameters, Type[] callParameterTypes)
	{
		return default(bool);
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0x8EEB94", Offset = "0x8EEB94", VA = "0x8EEB94")]
	internal ExitGames.Client.Photon.Hashtable SendInstantiate(string prefabName, Vector3 position, Quaternion rotation, byte group, int[] viewIDs, object[] data, bool isGlobalObject)
	{
		return null;
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0x8ED96C", Offset = "0x8ED96C", VA = "0x8ED96C")]
	internal GameObject DoInstantiate(ExitGames.Client.Photon.Hashtable evData, PhotonPlayer photonPlayer, GameObject resourceGameObject)
	{
		return null;
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0x8EEFD8", Offset = "0x8EEFD8", VA = "0x8EEFD8")]
	private void StoreInstantiationData(int instantiationId, object[] instantiationData)
	{
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0x8EF0B0", Offset = "0x8EF0B0", VA = "0x8EF0B0")]
	public object[] FetchInstantiationData(int instantiationId)
	{
		return null;
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0x8EF048", Offset = "0x8EF048", VA = "0x8EF048")]
	private void RemoveInstantiationData(int instantiationId)
	{
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0x8E4E64", Offset = "0x8E4E64", VA = "0x8E4E64")]
	public void DestroyPlayerObjects(int playerId, bool localOnly)
	{
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0x8EE584", Offset = "0x8EE584", VA = "0x8EE584")]
	public void DestroyAll(bool localOnly)
	{
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0x8E3670", Offset = "0x8E3670", VA = "0x8E3670")]
	protected internal void RemoveInstantiatedGO(GameObject go, bool localOnly)
	{
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0x8EF520", Offset = "0x8EF520", VA = "0x8EF520")]
	private void ServerCleanInstantiateAndDestroy(int instantiateId, int creatorId, bool isRuntimeInstantiated)
	{
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0x8EF2CC", Offset = "0x8EF2CC", VA = "0x8EF2CC")]
	private void SendDestroyOfPlayer(int actorNr)
	{
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0x8EF444", Offset = "0x8EF444", VA = "0x8EF444")]
	private void SendDestroyOfAll()
	{
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0x8EF134", Offset = "0x8EF134", VA = "0x8EF134")]
	private void OpRemoveFromServerInstantiationsOfPlayer(int actorNr)
	{
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0x8EF908", Offset = "0x8EF908", VA = "0x8EF908")]
	protected internal void RequestOwnership(int viewID, int fromOwner)
	{
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0x8EFBE0", Offset = "0x8EFBE0", VA = "0x8EFBE0")]
	protected internal void TransferOwnership(int viewID, int playerID)
	{
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0x8EF780", Offset = "0x8EF780", VA = "0x8EF780")]
	public bool LocalCleanPhotonView(PhotonView view)
	{
		return default(bool);
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0x8EE804", Offset = "0x8EE804", VA = "0x8EE804")]
	public PhotonView GetPhotonView(int viewID)
	{
		return null;
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0x8EFEB8", Offset = "0x8EFEB8", VA = "0x8EFEB8")]
	public void RegisterPhotonView(PhotonView netView)
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0x8EF200", Offset = "0x8EF200", VA = "0x8EF200")]
	public void OpCleanRpcBuffer(int actorNumber)
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0x8F011C", Offset = "0x8F011C", VA = "0x8F011C")]
	public void OpRemoveCompleteCacheOfPlayer(int actorNumber)
	{
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0x8EF3B0", Offset = "0x8EF3B0", VA = "0x8EF3B0")]
	public void OpRemoveCompleteCache()
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0x8F01E8", Offset = "0x8F01E8", VA = "0x8F01E8")]
	private void RemoveCacheOfLeftPlayers()
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0x8F0308", Offset = "0x8F0308", VA = "0x8F0308")]
	public void CleanRpcBufferIfMine(PhotonView view)
	{
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0x8EF7F4", Offset = "0x8EF7F4", VA = "0x8EF7F4")]
	public void OpCleanRpcBuffer(PhotonView view)
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0x8F04F0", Offset = "0x8F04F0", VA = "0x8F04F0")]
	public void RemoveRPCsInGroup(int group)
	{
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0x8F0618", Offset = "0x8F0618", VA = "0x8F0618")]
	public void SetLevelPrefix(short prefix)
	{
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0x8F0620", Offset = "0x8F0620", VA = "0x8F0620")]
	internal void RPC(PhotonView view, string methodName, PhotonTargets target, PhotonPlayer player, bool encrypt, params object[] parameters)
	{
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0x8F1070", Offset = "0x8F1070", VA = "0x8F1070")]
	public void SetInterestGroups(byte[] disableGroups, byte[] enableGroups)
	{
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0x8F132C", Offset = "0x8F132C", VA = "0x8F132C")]
	public void SetSendingEnabled(byte group, bool enabled)
	{
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0x8F13BC", Offset = "0x8F13BC", VA = "0x8F13BC")]
	public void SetSendingEnabled(byte[] disableGroups, byte[] enableGroups)
	{
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0x8F14C4", Offset = "0x8F14C4", VA = "0x8F14C4")]
	public void NewSceneLoaded()
	{
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0x8F17A4", Offset = "0x8F17A4", VA = "0x8F17A4")]
	public void RunViewUpdate()
	{
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0x8F24C8", Offset = "0x8F24C8", VA = "0x8F24C8")]
	private object[] OnSerializeWrite(PhotonView view)
	{
		return null;
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0x8ED2A8", Offset = "0x8ED2A8", VA = "0x8ED2A8")]
	private void OnSerializeRead(object[] data, PhotonPlayer sender, int networkTime, short correctPrefix)
	{
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0x8F27F4", Offset = "0x8F27F4", VA = "0x8F27F4")]
	private object[] DeltaCompressionWrite(object[] previousContent, object[] currentContent)
	{
		return null;
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0x8F2AAC", Offset = "0x8F2AAC", VA = "0x8F2AAC")]
	private object[] DeltaCompressionRead(object[] lastOnSerializeDataReceived, object[] incomingData)
	{
		return null;
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0x8F273C", Offset = "0x8F273C", VA = "0x8F273C")]
	private bool AlmostEquals(object[] lastData, object[] currentContent)
	{
		return default(bool);
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0x8F2C58", Offset = "0x8F2C58", VA = "0x8F2C58")]
	private bool AlmostEquals(object one, object two)
	{
		return default(bool);
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0x8F3050", Offset = "0x8F3050", VA = "0x8F3050")]
	protected internal static bool GetMethod(UnityEngine.MonoBehaviour monob, string methodType, out MethodInfo mi)
	{
		return default(bool);
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0x8E2920", Offset = "0x8E2920", VA = "0x8E2920")]
	protected internal void LoadLevelIfSynced()
	{
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0x8F31B8", Offset = "0x8F31B8", VA = "0x8F31B8")]
	protected internal void SetLevelInPropsIfSynced(object levelId, bool asyncLoading = false)
	{
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0x8F35B4", Offset = "0x8F35B4", VA = "0x8F35B4")]
	public void SetApp(string appId, string gameVersion)
	{
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0x8F36AC", Offset = "0x8F36AC", VA = "0x8F36AC")]
	public bool WebRpc(string uriPath, object parameters)
	{
		return default(bool);
	}
}
[Token(Token = "0x20000D5")]
public interface IPunObservable
{
	[Token(Token = "0x600042C")]
	void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info);
}
[Token(Token = "0x20000D6")]
public interface IPunCallbacks
{
	[Token(Token = "0x600042D")]
	void OnConnectedToPhoton();

	[Token(Token = "0x600042E")]
	void OnLeftRoom();

	[Token(Token = "0x600042F")]
	void OnMasterClientSwitched(PhotonPlayer newMasterClient);

	[Token(Token = "0x6000430")]
	void OnPhotonCreateRoomFailed(object[] codeAndMsg);

	[Token(Token = "0x6000431")]
	void OnPhotonJoinRoomFailed(object[] codeAndMsg);

	[Token(Token = "0x6000432")]
	void OnCreatedRoom();

	[Token(Token = "0x6000433")]
	void OnJoinedLobby();

	[Token(Token = "0x6000434")]
	void OnLeftLobby();

	[Token(Token = "0x6000435")]
	void OnFailedToConnectToPhoton(DisconnectCause cause);

	[Token(Token = "0x6000436")]
	void OnConnectionFail(DisconnectCause cause);

	[Token(Token = "0x6000437")]
	void OnDisconnectedFromPhoton();

	[Token(Token = "0x6000438")]
	void OnPhotonInstantiate(PhotonMessageInfo info);

	[Token(Token = "0x6000439")]
	void OnReceivedRoomListUpdate();

	[Token(Token = "0x600043A")]
	void OnJoinedRoom();

	[Token(Token = "0x600043B")]
	void OnPhotonPlayerConnected(PhotonPlayer newPlayer);

	[Token(Token = "0x600043C")]
	void OnPhotonPlayerDisconnected(PhotonPlayer otherPlayer);

	[Token(Token = "0x600043D")]
	void OnPhotonRandomJoinFailed(object[] codeAndMsg);

	[Token(Token = "0x600043E")]
	void OnConnectedToMaster();

	[Token(Token = "0x600043F")]
	void OnPhotonMaxCccuReached();

	[Token(Token = "0x6000440")]
	void OnPhotonCustomRoomPropertiesChanged(ExitGames.Client.Photon.Hashtable propertiesThatChanged);

	[Token(Token = "0x6000441")]
	void OnPhotonPlayerPropertiesChanged(object[] playerAndUpdatedProps);

	[Token(Token = "0x6000442")]
	void OnUpdatedFriendList();

	[Token(Token = "0x6000443")]
	void OnCustomAuthenticationFailed(string debugMessage);

	[Token(Token = "0x6000444")]
	void OnCustomAuthenticationResponse(Dictionary<string, object> data);

	[Token(Token = "0x6000445")]
	void OnWebRpcResponse(OperationResponse response);

	[Token(Token = "0x6000446")]
	void OnOwnershipRequest(object[] viewAndPlayer);

	[Token(Token = "0x6000447")]
	void OnLobbyStatisticsUpdate();

	[Token(Token = "0x6000448")]
	void OnPhotonPlayerActivityChanged(PhotonPlayer otherPlayer);

	[Token(Token = "0x6000449")]
	void OnOwnershipTransfered(object[] viewAndPlayers);
}
[Token(Token = "0x20000D7")]
public interface IPunPrefabPool
{
	[Token(Token = "0x600044A")]
	GameObject Instantiate(string prefabId, Vector3 position, Quaternion rotation);

	[Token(Token = "0x600044B")]
	void Destroy(GameObject gameObject);
}
[Token(Token = "0x20000D8")]
public struct PhotonMessageInfo
{
	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private readonly int timeInt;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public readonly PhotonPlayer sender;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly PhotonView photonView;

	[Token(Token = "0x17000055")]
	public double timestamp
	{
		[Token(Token = "0x600044D")]
		[Address(RVA = "0x772834", Offset = "0x772834", VA = "0x772834")]
		get
		{
			return default(double);
		}
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0x772828", Offset = "0x772828", VA = "0x772828")]
	public PhotonMessageInfo(PhotonPlayer player, int timestamp, PhotonView view)
	{
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0x77284C", Offset = "0x77284C", VA = "0x77284C", Slot = "3")]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x20000D9")]
internal class PunEvent
{
	[Token(Token = "0x4000547")]
	public const byte RPC = 200;

	[Token(Token = "0x4000548")]
	public const byte SendSerialize = 201;

	[Token(Token = "0x4000549")]
	public const byte Instantiation = 202;

	[Token(Token = "0x400054A")]
	public const byte CloseConnection = 203;

	[Token(Token = "0x400054B")]
	public const byte Destroy = 204;

	[Token(Token = "0x400054C")]
	public const byte RemoveCachedRPCs = 205;

	[Token(Token = "0x400054D")]
	public const byte SendSerializeReliable = 206;

	[Token(Token = "0x400054E")]
	public const byte DestroyPlayer = 207;

	[Token(Token = "0x400054F")]
	public const byte AssignMaster = 208;

	[Token(Token = "0x4000550")]
	public const byte OwnershipRequest = 209;

	[Token(Token = "0x4000551")]
	public const byte OwnershipTransfer = 210;

	[Token(Token = "0x4000552")]
	public const byte VacantViewIds = 211;

	[Token(Token = "0x600044F")]
	[Address(RVA = "0x94F7FC", Offset = "0x94F7FC", VA = "0x94F7FC")]
	public PunEvent()
	{
	}
}
[Token(Token = "0x20000DA")]
public class PhotonStream
{
	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool write;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Queue<object> writeData;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private object[] readData;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	internal byte currentItem;

	[Token(Token = "0x17000056")]
	public bool isWriting
	{
		[Token(Token = "0x6000453")]
		[Address(RVA = "0x94039C", Offset = "0x94039C", VA = "0x94039C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000057")]
	public bool isReading
	{
		[Token(Token = "0x6000454")]
		[Address(RVA = "0x9403A4", Offset = "0x9403A4", VA = "0x9403A4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000058")]
	public int Count
	{
		[Token(Token = "0x6000455")]
		[Address(RVA = "0x9403B4", Offset = "0x9403B4", VA = "0x9403B4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0x940298", Offset = "0x940298", VA = "0x940298")]
	public PhotonStream(bool write, object[] incomingData)
	{
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0x940334", Offset = "0x940334", VA = "0x940334")]
	public void SetReadStream(object[] incomingData, byte pos = 0)
	{
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0x940344", Offset = "0x940344", VA = "0x940344")]
	internal void ResetWriteStream()
	{
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0x93EAB0", Offset = "0x93EAB0", VA = "0x93EAB0")]
	public object ReceiveNext()
	{
		return null;
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0x94041C", Offset = "0x94041C", VA = "0x94041C")]
	public object PeekNext()
	{
		return null;
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0x93EA00", Offset = "0x93EA00", VA = "0x93EA00")]
	public void SendNext(object obj)
	{
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0x9404D0", Offset = "0x9404D0", VA = "0x9404D0")]
	public object[] ToArray()
	{
		return null;
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0x940540", Offset = "0x940540", VA = "0x940540")]
	public void Serialize(ref bool myBool)
	{
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0x940654", Offset = "0x940654", VA = "0x940654")]
	public void Serialize(ref int myInt)
	{
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0x940760", Offset = "0x940760", VA = "0x940760")]
	public void Serialize(ref string value)
	{
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0x940858", Offset = "0x940858", VA = "0x940858")]
	public void Serialize(ref char value)
	{
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0x940964", Offset = "0x940964", VA = "0x940964")]
	public void Serialize(ref short value)
	{
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0x940A70", Offset = "0x940A70", VA = "0x940A70")]
	public void Serialize(ref float obj)
	{
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0x940B7C", Offset = "0x940B7C", VA = "0x940B7C")]
	public void Serialize(ref PhotonPlayer obj)
	{
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0x940CAC", Offset = "0x940CAC", VA = "0x940CAC")]
	public void Serialize(ref Vector3 obj)
	{
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0x940DD0", Offset = "0x940DD0", VA = "0x940DD0")]
	public void Serialize(ref Vector2 obj)
	{
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0x940EDC", Offset = "0x940EDC", VA = "0x940EDC")]
	public void Serialize(ref Quaternion obj)
	{
	}
}
[Token(Token = "0x20000DB")]
public class SceneManagerHelper
{
	[Token(Token = "0x17000059")]
	public static string ActiveSceneName
	{
		[Token(Token = "0x6000464")]
		[Address(RVA = "0x8F6FB4", Offset = "0x8F6FB4", VA = "0x8F6FB4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005A")]
	public static int ActiveSceneBuildIndex
	{
		[Token(Token = "0x6000465")]
		[Address(RVA = "0x8F6FE4", Offset = "0x8F6FE4", VA = "0x8F6FE4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0x8F7014", Offset = "0x8F7014", VA = "0x8F7014")]
	public SceneManagerHelper()
	{
	}
}
[Token(Token = "0x20000DC")]
public class WebRpcResponse
{
	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E3548", Offset = "0x6E3548")]
	private string <Name>k__BackingField;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E3558", Offset = "0x6E3558")]
	private int <ReturnCode>k__BackingField;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E3568", Offset = "0x6E3568")]
	private string <DebugMessage>k__BackingField;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E3578", Offset = "0x6E3578")]
	private Dictionary<string, object> <Parameters>k__BackingField;

	[Token(Token = "0x1700005B")]
	public string Name
	{
		[Token(Token = "0x6000467")]
		[Address(RVA = "0xAC1534", Offset = "0xAC1534", VA = "0xAC1534")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EAEB8", Offset = "0x6EAEB8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000468")]
		[Address(RVA = "0xAC153C", Offset = "0xAC153C", VA = "0xAC153C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EAEC8", Offset = "0x6EAEC8")]
		private set
		{
		}
	}

	[Token(Token = "0x1700005C")]
	public int ReturnCode
	{
		[Token(Token = "0x6000469")]
		[Address(RVA = "0xAC1544", Offset = "0xAC1544", VA = "0xAC1544")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EAED8", Offset = "0x6EAED8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600046A")]
		[Address(RVA = "0xAC154C", Offset = "0xAC154C", VA = "0xAC154C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EAEE8", Offset = "0x6EAEE8")]
		private set
		{
		}
	}

	[Token(Token = "0x1700005D")]
	public string DebugMessage
	{
		[Token(Token = "0x600046B")]
		[Address(RVA = "0xAC1554", Offset = "0xAC1554", VA = "0xAC1554")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EAEF8", Offset = "0x6EAEF8")]
		get
		{
			return null;
		}
		[Token(Token = "0x600046C")]
		[Address(RVA = "0xAC155C", Offset = "0xAC155C", VA = "0xAC155C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EAF08", Offset = "0x6EAF08")]
		private set
		{
		}
	}

	[Token(Token = "0x1700005E")]
	public Dictionary<string, object> Parameters
	{
		[Token(Token = "0x600046D")]
		[Address(RVA = "0xAC1564", Offset = "0xAC1564", VA = "0xAC1564")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EAF18", Offset = "0x6EAF18")]
		get
		{
			return null;
		}
		[Token(Token = "0x600046E")]
		[Address(RVA = "0xAC156C", Offset = "0xAC156C", VA = "0xAC156C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EAF28", Offset = "0x6EAF28")]
		private set
		{
		}
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0xAC1574", Offset = "0xAC1574", VA = "0xAC1574")]
	public WebRpcResponse(OperationResponse response)
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0xAC1710", Offset = "0xAC1710", VA = "0xAC1710")]
	public string ToStringFull()
	{
		return null;
	}
}
[Token(Token = "0x20000DD")]
internal class PhotonHandler : UnityEngine.MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20003A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E1A04", Offset = "0x6E1A04")]
	private sealed class <>c
	{
		[Token(Token = "0x4001295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static UnityAction<Scene, LoadSceneMode> <>9__10_0;

		[Token(Token = "0x60017E7")]
		[Address(RVA = "0xA2C7E8", Offset = "0xA2C7E8", VA = "0xA2C7E8")]
		public <>c()
		{
		}

		[Token(Token = "0x60017E8")]
		[Address(RVA = "0xA2C7F0", Offset = "0xA2C7F0", VA = "0xA2C7F0")]
		internal void <Start>b__10_0(Scene scene, LoadSceneMode loadingMode)
		{
		}
	}

	[Token(Token = "0x20003A1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E1A14", Offset = "0x6E1A14")]
	private sealed class <PingAvailableRegionsCoroutine>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool connectToBest;

		[Token(Token = "0x400129A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PhotonPingManager <pingManager>5__2;

		[Token(Token = "0x17000242")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60017EC")]
			[Address(RVA = "0xA2D138", Offset = "0xA2D138", VA = "0xA2D138", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000243")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017EE")]
			[Address(RVA = "0xA2D1A0", Offset = "0xA2D1A0", VA = "0xA2D1A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017E9")]
		[Address(RVA = "0xA2C74C", Offset = "0xA2C74C", VA = "0xA2C74C")]
		[DebuggerHidden]
		public <PingAvailableRegionsCoroutine>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x60017EA")]
		[Address(RVA = "0xA2C890", Offset = "0xA2C890", VA = "0xA2C890", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60017EB")]
		[Address(RVA = "0xA2C894", Offset = "0xA2C894", VA = "0xA2C894", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017ED")]
		[Address(RVA = "0xA2D140", Offset = "0xA2D140", VA = "0xA2D140", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PhotonHandler SP;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int updateInterval;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int updateIntervalOnSerialize;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int nextSendTickCount;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int nextSendTickCountOnSerialize;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool sendThreadShouldRun;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Stopwatch timerToStopConnectionInBackground;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected internal static bool AppQuits;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected internal static Type PingImplementation;

	[Token(Token = "0x4000564")]
	private const string PlayerPrefsKey = "PUNCloudBestRegion";

	[Token(Token = "0x1700005F")]
	internal static CloudRegionCode BestRegionCodeInPreferences
	{
		[Token(Token = "0x600047C")]
		[Address(RVA = "0xA2C504", Offset = "0xA2C504", VA = "0xA2C504")]
		get
		{
			return default(CloudRegionCode);
		}
		[Token(Token = "0x600047D")]
		[Address(RVA = "0xA2C588", Offset = "0xA2C588", VA = "0xA2C588")]
		set
		{
		}
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0xA2B1A8", Offset = "0xA2B1A8", VA = "0xA2B1A8")]
	protected void Awake()
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0xA2B5F0", Offset = "0xA2B5F0", VA = "0xA2B5F0")]
	protected void Start()
	{
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0xA2B6CC", Offset = "0xA2B6CC", VA = "0xA2B6CC")]
	protected void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0xA2B934", Offset = "0xA2B934", VA = "0xA2B934")]
	protected void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0xA2BACC", Offset = "0xA2BACC", VA = "0xA2BACC")]
	protected void OnDestroy()
	{
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0xA2BB28", Offset = "0xA2BB28", VA = "0xA2BB28")]
	protected void Update()
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0xA2C088", Offset = "0xA2C088", VA = "0xA2C088")]
	protected void OnJoinedRoom()
	{
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0xA2C0FC", Offset = "0xA2C0FC", VA = "0xA2C0FC")]
	protected void OnCreatedRoom()
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0xA2B4E4", Offset = "0xA2B4E4", VA = "0xA2B4E4")]
	public static void StartFallbackSendAckThread()
	{
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0xA2B75C", Offset = "0xA2B75C", VA = "0xA2B75C")]
	public static void StopFallbackSendAckThread()
	{
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0xA2C184", Offset = "0xA2C184", VA = "0xA2C184")]
	public static bool FallbackSendAckThread()
	{
		return default(bool);
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0xA2C654", Offset = "0xA2C654", VA = "0xA2C654")]
	protected internal static void PingAvailableRegionsAndConnectToBest()
	{
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0xA2C6D8", Offset = "0xA2C6D8", VA = "0xA2C6D8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6EAF38", Offset = "0x6EAF38")]
	internal IEnumerator PingAvailableRegionsCoroutine(bool connectToBest)
	{
		return null;
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0xA2C778", Offset = "0xA2C778", VA = "0xA2C778")]
	public PhotonHandler()
	{
	}
}
[Token(Token = "0x20000DE")]
public class PhotonLagSimulationGui : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rect WindowRect;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int WindowId;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool Visible;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E3588", Offset = "0x6E3588")]
	private PhotonPeer <Peer>k__BackingField;

	[Token(Token = "0x17000060")]
	public PhotonPeer Peer
	{
		[Token(Token = "0x6000482")]
		[Address(RVA = "0xA2DB1C", Offset = "0xA2DB1C", VA = "0xA2DB1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EAF9C", Offset = "0x6EAF9C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000483")]
		[Address(RVA = "0xA2DB24", Offset = "0xA2DB24", VA = "0xA2DB24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EAFAC", Offset = "0x6EAFAC")]
		set
		{
		}
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0xA2DB2C", Offset = "0xA2DB2C", VA = "0xA2DB2C")]
	public void Start()
	{
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0xA2DB9C", Offset = "0xA2DB9C", VA = "0xA2DB9C")]
	public void OnGUI()
	{
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0xA2DD14", Offset = "0xA2DD14", VA = "0xA2DD14")]
	private void NetSimHasNoPeerWindow(int windowId)
	{
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0xA2DDEC", Offset = "0xA2DDEC", VA = "0xA2DDEC")]
	private void NetSimWindow(int windowId)
	{
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0xA2E5F8", Offset = "0xA2E5F8", VA = "0xA2E5F8")]
	public PhotonLagSimulationGui()
	{
	}
}
[Token(Token = "0x20000DF")]
public static class PhotonNetwork
{
	[Token(Token = "0x20003A2")]
	public delegate void EventCallback(byte eventCode, object content, int senderId);

	[Serializable]
	[Token(Token = "0x20003A3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E1A24", Offset = "0x6E1A24")]
	private sealed class <>c
	{
		[Token(Token = "0x400129B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x60017F4")]
		[Address(RVA = "0x93A0F0", Offset = "0x93A0F0", VA = "0x93A0F0")]
		public <>c()
		{
		}

		[Token(Token = "0x60017F5")]
		[Address(RVA = "0x93A0F8", Offset = "0x93A0F8", VA = "0x93A0F8")]
		internal int <.cctor>b__153_0()
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000569")]
	public const string versionPUN = "1.91";

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E3598", Offset = "0x6E3598")]
	private static string <gameVersion>k__BackingField;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	internal static readonly PhotonHandler photonMono;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal static NetworkingPeer networkingPeer;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly int MAX_VIEW_IDS;

	[Token(Token = "0x400056E")]
	internal const string serverSettingsAssetFile = "PhotonServerSettings";

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static ServerSettings PhotonServerSettings;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static bool InstantiateInRoomOnly;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public static PhotonLogLevel logLevel;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E35A8", Offset = "0x6E35A8")]
	private static List<FriendInfo> <Friends>k__BackingField;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static float precisionForVectorSynchronization;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public static float precisionForQuaternionSynchronization;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static float precisionForFloatSynchronization;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public static bool UseRpcMonoBehaviourCache;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	public static bool UsePrefabCache;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static Dictionary<string, GameObject> PrefabCache;

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static HashSet<GameObject> SendMonoMessageTargets;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static Type SendMonoMessageTargetType;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static bool StartRpcsAsCoroutine;

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private static bool isOfflineMode;

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static Room offlineModeRoom;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6E35B8", Offset = "0x6E35B8")]
	public static int maxConnections;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private static bool _mAutomaticallySyncScene;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
	private static bool m_autoCleanUpPlayerObjects;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static int sendInterval;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private static int sendIntervalOnSerialize;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static bool m_isMessageQueueRunning;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private static bool UsePreciseTimer;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static Stopwatch startupStopwatch;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static float BackgroundTimeout;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E35F0", Offset = "0x6E35F0")]
	private static bool <UseAlternativeUdpPorts>k__BackingField;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	internal static int lastUsedViewSubId;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	internal static int lastUsedViewSubIdStatic;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	internal static List<int> manuallyAllocatedViewIds;

	[Token(Token = "0x17000061")]
	public static string gameVersion
	{
		[Token(Token = "0x6000489")]
		[Address(RVA = "0xA2EE70", Offset = "0xA2EE70", VA = "0xA2EE70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EAFBC", Offset = "0x6EAFBC")]
		get
		{
			return null;
		}
		[Token(Token = "0x600048A")]
		[Address(RVA = "0xA2EED8", Offset = "0xA2EED8", VA = "0xA2EED8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EAFCC", Offset = "0x6EAFCC")]
		set
		{
		}
	}

	[Token(Token = "0x17000062")]
	public static string ServerAddress
	{
		[Token(Token = "0x600048B")]
		[Address(RVA = "0xA2EF44", Offset = "0xA2EF44", VA = "0xA2EF44")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000063")]
	public static CloudRegionCode CloudRegion
	{
		[Token(Token = "0x600048C")]
		[Address(RVA = "0xA2EFF8", Offset = "0xA2EFF8", VA = "0xA2EFF8")]
		get
		{
			return default(CloudRegionCode);
		}
	}

	[Token(Token = "0x17000064")]
	public static bool connected
	{
		[Token(Token = "0x600048D")]
		[Address(RVA = "0xA26DC8", Offset = "0xA26DC8", VA = "0xA26DC8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000065")]
	public static bool connecting
	{
		[Token(Token = "0x600048E")]
		[Address(RVA = "0xA2F0DC", Offset = "0xA2F0DC", VA = "0xA2F0DC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000066")]
	public static bool connectedAndReady
	{
		[Token(Token = "0x600048F")]
		[Address(RVA = "0xA2F1C0", Offset = "0xA2F1C0", VA = "0xA2F1C0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000067")]
	public static ConnectionState connectionState
	{
		[Token(Token = "0x6000490")]
		[Address(RVA = "0xA2F2EC", Offset = "0xA2F2EC", VA = "0xA2F2EC")]
		get
		{
			return default(ConnectionState);
		}
	}

	[Token(Token = "0x17000068")]
	public static ClientState connectionStateDetailed
	{
		[Token(Token = "0x6000491")]
		[Address(RVA = "0xA2BF4C", Offset = "0xA2BF4C", VA = "0xA2BF4C")]
		get
		{
			return default(ClientState);
		}
	}

	[Token(Token = "0x17000069")]
	public static ServerConnection Server
	{
		[Token(Token = "0x6000492")]
		[Address(RVA = "0xA2D098", Offset = "0xA2D098", VA = "0xA2D098")]
		get
		{
			return default(ServerConnection);
		}
	}

	[Token(Token = "0x1700006A")]
	public static AuthenticationValues AuthValues
	{
		[Token(Token = "0x6000493")]
		[Address(RVA = "0xA2F418", Offset = "0xA2F418", VA = "0xA2F418")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000494")]
		[Address(RVA = "0xA2F4B8", Offset = "0xA2F4B8", VA = "0xA2F4B8")]
		set
		{
		}
	}

	[Token(Token = "0x1700006B")]
	public static Room room
	{
		[Token(Token = "0x6000495")]
		[Address(RVA = "0xA26FFC", Offset = "0xA26FFC", VA = "0xA26FFC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700006C")]
	public static PhotonPlayer player
	{
		[Token(Token = "0x6000496")]
		[Address(RVA = "0xA2DA6C", Offset = "0xA2DA6C", VA = "0xA2DA6C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700006D")]
	public static PhotonPlayer masterClient
	{
		[Token(Token = "0x6000497")]
		[Address(RVA = "0xA2A440", Offset = "0xA2A440", VA = "0xA2A440")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700006E")]
	public static string playerName
	{
		[Token(Token = "0x6000498")]
		[Address(RVA = "0xA2F554", Offset = "0xA2F554", VA = "0xA2F554")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000499")]
		[Address(RVA = "0xA2F5C8", Offset = "0xA2F5C8", VA = "0xA2F5C8")]
		set
		{
		}
	}

	[Token(Token = "0x1700006F")]
	public static PhotonPlayer[] playerList
	{
		[Token(Token = "0x600049A")]
		[Address(RVA = "0xA28D28", Offset = "0xA28D28", VA = "0xA28D28")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000070")]
	public static PhotonPlayer[] otherPlayers
	{
		[Token(Token = "0x600049B")]
		[Address(RVA = "0xA2F644", Offset = "0xA2F644", VA = "0xA2F644")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000071")]
	public static List<FriendInfo> Friends
	{
		[Token(Token = "0x600049C")]
		[Address(RVA = "0xA2F6F4", Offset = "0xA2F6F4", VA = "0xA2F6F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EAFDC", Offset = "0x6EAFDC")]
		get
		{
			return null;
		}
		[Token(Token = "0x600049D")]
		[Address(RVA = "0xA2F75C", Offset = "0xA2F75C", VA = "0xA2F75C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EAFEC", Offset = "0x6EAFEC")]
		internal set
		{
		}
	}

	[Token(Token = "0x17000072")]
	public static int FriendsListAge
	{
		[Token(Token = "0x600049E")]
		[Address(RVA = "0xA2F7C8", Offset = "0xA2F7C8", VA = "0xA2F7C8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000073")]
	public static IPunPrefabPool PrefabPool
	{
		[Token(Token = "0x600049F")]
		[Address(RVA = "0xA2F874", Offset = "0xA2F874", VA = "0xA2F874")]
		get
		{
			return null;
		}
		[Token(Token = "0x60004A0")]
		[Address(RVA = "0xA2F8E8", Offset = "0xA2F8E8", VA = "0xA2F8E8")]
		set
		{
		}
	}

	[Token(Token = "0x17000074")]
	public static bool offlineMode
	{
		[Token(Token = "0x60004A1")]
		[Address(RVA = "0xA2F960", Offset = "0xA2F960", VA = "0xA2F960")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004A2")]
		[Address(RVA = "0xA2F9C8", Offset = "0xA2F9C8", VA = "0xA2F9C8")]
		set
		{
		}
	}

	[Token(Token = "0x17000075")]
	public static bool automaticallySyncScene
	{
		[Token(Token = "0x60004A3")]
		[Address(RVA = "0xA2FC78", Offset = "0xA2FC78", VA = "0xA2FC78")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004A4")]
		[Address(RVA = "0xA2FCE0", Offset = "0xA2FCE0", VA = "0xA2FCE0")]
		set
		{
		}
	}

	[Token(Token = "0x17000076")]
	public static bool autoCleanUpPlayerObjects
	{
		[Token(Token = "0x60004A5")]
		[Address(RVA = "0xA2FDB4", Offset = "0xA2FDB4", VA = "0xA2FDB4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004A6")]
		[Address(RVA = "0xA2FE1C", Offset = "0xA2FE1C", VA = "0xA2FE1C")]
		set
		{
		}
	}

	[Token(Token = "0x17000077")]
	public static bool autoJoinLobby
	{
		[Token(Token = "0x60004A7")]
		[Address(RVA = "0xA2FEE8", Offset = "0xA2FEE8", VA = "0xA2FEE8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004A8")]
		[Address(RVA = "0xA2FF5C", Offset = "0xA2FF5C", VA = "0xA2FF5C")]
		set
		{
		}
	}

	[Token(Token = "0x17000078")]
	public static bool EnableLobbyStatistics
	{
		[Token(Token = "0x60004A9")]
		[Address(RVA = "0xA2FFD8", Offset = "0xA2FFD8", VA = "0xA2FFD8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004AA")]
		[Address(RVA = "0xA3004C", Offset = "0xA3004C", VA = "0xA3004C")]
		set
		{
		}
	}

	[Token(Token = "0x17000079")]
	public static List<TypedLobbyInfo> LobbyStatistics
	{
		[Token(Token = "0x60004AB")]
		[Address(RVA = "0xA300C8", Offset = "0xA300C8", VA = "0xA300C8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60004AC")]
		[Address(RVA = "0xA3013C", Offset = "0xA3013C", VA = "0xA3013C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700007A")]
	public static bool insideLobby
	{
		[Token(Token = "0x60004AD")]
		[Address(RVA = "0xA301B4", Offset = "0xA301B4", VA = "0xA301B4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700007B")]
	public static TypedLobby lobby
	{
		[Token(Token = "0x60004AE")]
		[Address(RVA = "0xA30228", Offset = "0xA30228", VA = "0xA30228")]
		get
		{
			return null;
		}
		[Token(Token = "0x60004AF")]
		[Address(RVA = "0xA3029C", Offset = "0xA3029C", VA = "0xA3029C")]
		set
		{
		}
	}

	[Token(Token = "0x1700007C")]
	public static int sendRate
	{
		[Token(Token = "0x60004B0")]
		[Address(RVA = "0xA2B404", Offset = "0xA2B404", VA = "0xA2B404")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60004B1")]
		[Address(RVA = "0xA30314", Offset = "0xA30314", VA = "0xA30314")]
		set
		{
		}
	}

	[Token(Token = "0x1700007D")]
	public static int sendRateOnSerialize
	{
		[Token(Token = "0x60004B2")]
		[Address(RVA = "0xA2B474", Offset = "0xA2B474", VA = "0xA2B474")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60004B3")]
		[Address(RVA = "0xA30458", Offset = "0xA30458", VA = "0xA30458")]
		set
		{
		}
	}

	[Token(Token = "0x1700007E")]
	public static bool isMessageQueueRunning
	{
		[Token(Token = "0x60004B4")]
		[Address(RVA = "0xA305B8", Offset = "0xA305B8", VA = "0xA305B8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004B5")]
		[Address(RVA = "0xA30620", Offset = "0xA30620", VA = "0xA30620")]
		set
		{
		}
	}

	[Token(Token = "0x1700007F")]
	public static int unreliableCommandsLimit
	{
		[Token(Token = "0x60004B6")]
		[Address(RVA = "0xA306D4", Offset = "0xA306D4", VA = "0xA306D4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60004B7")]
		[Address(RVA = "0xA30748", Offset = "0xA30748", VA = "0xA30748")]
		set
		{
		}
	}

	[Token(Token = "0x17000080")]
	public static double time
	{
		[Token(Token = "0x60004B8")]
		[Address(RVA = "0xA307C0", Offset = "0xA307C0", VA = "0xA307C0")]
		get
		{
			return default(double);
		}
	}

	[Token(Token = "0x17000081")]
	public static int ServerTimestamp
	{
		[Token(Token = "0x60004B9")]
		[Address(RVA = "0xA30830", Offset = "0xA30830", VA = "0xA30830")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000082")]
	public static bool isMasterClient
	{
		[Token(Token = "0x60004BA")]
		[Address(RVA = "0xA2A0AC", Offset = "0xA2A0AC", VA = "0xA2A0AC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000083")]
	public static bool inRoom
	{
		[Token(Token = "0x60004BB")]
		[Address(RVA = "0xA26F94", Offset = "0xA26F94", VA = "0xA26F94")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000084")]
	public static bool isNonMasterClientInRoom
	{
		[Token(Token = "0x60004BC")]
		[Address(RVA = "0xA309CC", Offset = "0xA309CC", VA = "0xA309CC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000085")]
	public static int countOfPlayersOnMaster
	{
		[Token(Token = "0x60004BD")]
		[Address(RVA = "0xA30A5C", Offset = "0xA30A5C", VA = "0xA30A5C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000086")]
	public static int countOfPlayersInRooms
	{
		[Token(Token = "0x60004BE")]
		[Address(RVA = "0xA30AD0", Offset = "0xA30AD0", VA = "0xA30AD0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000087")]
	public static int countOfPlayers
	{
		[Token(Token = "0x60004BF")]
		[Address(RVA = "0xA30B44", Offset = "0xA30B44", VA = "0xA30B44")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000088")]
	public static int countOfRooms
	{
		[Token(Token = "0x60004C0")]
		[Address(RVA = "0xA30BC0", Offset = "0xA30BC0", VA = "0xA30BC0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000089")]
	public static bool NetworkStatisticsEnabled
	{
		[Token(Token = "0x60004C1")]
		[Address(RVA = "0xA30C34", Offset = "0xA30C34", VA = "0xA30C34")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004C2")]
		[Address(RVA = "0xA30CA8", Offset = "0xA30CA8", VA = "0xA30CA8")]
		set
		{
		}
	}

	[Token(Token = "0x1700008A")]
	public static int ResentReliableCommands
	{
		[Token(Token = "0x60004C3")]
		[Address(RVA = "0xA30D24", Offset = "0xA30D24", VA = "0xA30D24")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700008B")]
	public static bool CrcCheckEnabled
	{
		[Token(Token = "0x60004C4")]
		[Address(RVA = "0xA30D98", Offset = "0xA30D98", VA = "0xA30D98")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004C5")]
		[Address(RVA = "0xA30E0C", Offset = "0xA30E0C", VA = "0xA30E0C")]
		set
		{
		}
	}

	[Token(Token = "0x1700008C")]
	public static int PacketLossByCrcCheck
	{
		[Token(Token = "0x60004C6")]
		[Address(RVA = "0xA30F70", Offset = "0xA30F70", VA = "0xA30F70")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700008D")]
	public static int MaxResendsBeforeDisconnect
	{
		[Token(Token = "0x60004C7")]
		[Address(RVA = "0xA30FE4", Offset = "0xA30FE4", VA = "0xA30FE4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60004C8")]
		[Address(RVA = "0xA31058", Offset = "0xA31058", VA = "0xA31058")]
		set
		{
		}
	}

	[Token(Token = "0x1700008E")]
	public static int QuickResends
	{
		[Token(Token = "0x60004C9")]
		[Address(RVA = "0xA310E8", Offset = "0xA310E8", VA = "0xA310E8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60004CA")]
		[Address(RVA = "0xA31164", Offset = "0xA31164", VA = "0xA31164")]
		set
		{
		}
	}

	[Token(Token = "0x1700008F")]
	public static bool UseAlternativeUdpPorts
	{
		[Token(Token = "0x60004CB")]
		[Address(RVA = "0xA311F0", Offset = "0xA311F0", VA = "0xA311F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EAFFC", Offset = "0x6EAFFC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004CC")]
		[Address(RVA = "0xA31258", Offset = "0xA31258", VA = "0xA31258")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EB00C", Offset = "0x6EB00C")]
		set
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public static event EventCallback OnEventCall
	{
		[Token(Token = "0x60004CD")]
		[Address(RVA = "0xA2D238", Offset = "0xA2D238", VA = "0xA2D238")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EB01C", Offset = "0x6EB01C")]
		add
		{
		}
		[Token(Token = "0x60004CE")]
		[Address(RVA = "0xA2D3B8", Offset = "0xA2D3B8", VA = "0xA2D3B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EB02C", Offset = "0x6EB02C")]
		remove
		{
		}
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0xA312C8", Offset = "0xA312C8", VA = "0xA312C8")]
	static PhotonNetwork()
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0xA31758", Offset = "0xA31758", VA = "0xA31758")]
	public static void SwitchToProtocol(ConnectionProtocol cp)
	{
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0xA317D0", Offset = "0xA317D0", VA = "0xA317D0")]
	public static bool ConnectUsingSettings(string gameVersion)
	{
		return default(bool);
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0xA32058", Offset = "0xA32058", VA = "0xA32058")]
	public static bool ConnectToMaster(string masterServerAddress, int port, string appID, string gameVersion)
	{
		return default(bool);
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0xA323F4", Offset = "0xA323F4", VA = "0xA323F4")]
	public static bool Reconnect()
	{
		return default(bool);
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0xA32770", Offset = "0xA32770", VA = "0xA32770")]
	public static bool ReconnectAndRejoin()
	{
		return default(bool);
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0xA31DCC", Offset = "0xA31DCC", VA = "0xA31DCC")]
	public static bool ConnectToBestCloudServer(string gameVersion)
	{
		return default(bool);
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0xA32B1C", Offset = "0xA32B1C", VA = "0xA32B1C")]
	public static bool ConnectToRegion(CloudRegionCode region, string gameVersion)
	{
		return default(bool);
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0xA32E40", Offset = "0xA32E40", VA = "0xA32E40")]
	public static void OverrideBestCloudServer(CloudRegionCode region)
	{
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0xA32EA4", Offset = "0xA32EA4", VA = "0xA32EA4")]
	public static void RefreshCloudServerRating()
	{
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0xA32F10", Offset = "0xA32F10", VA = "0xA32F10")]
	public static void NetworkStatisticsReset()
	{
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0xA32F84", Offset = "0xA32F84", VA = "0xA32F84")]
	public static string NetworkStatisticsToString()
	{
		return null;
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0xA33098", Offset = "0xA33098", VA = "0xA33098")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6EB03C", Offset = "0x6EB03C")]
	public static void InitializeSecurity()
	{
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0xA3309C", Offset = "0xA3309C", VA = "0xA3309C")]
	private static bool VerifyCanUseNetwork()
	{
		return default(bool);
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0xA2B7C4", Offset = "0xA2B7C4", VA = "0xA2B7C4")]
	public static void Disconnect()
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0xA33140", Offset = "0xA33140", VA = "0xA33140")]
	public static bool FindFriends(string[] friendsToFind)
	{
		return default(bool);
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0xA3321C", Offset = "0xA3321C", VA = "0xA3321C")]
	public static bool CreateRoom(string roomName)
	{
		return default(bool);
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0xA33534", Offset = "0xA33534", VA = "0xA33534")]
	public static bool CreateRoom(string roomName, RoomOptions roomOptions, TypedLobby typedLobby)
	{
		return default(bool);
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0xA3328C", Offset = "0xA3328C", VA = "0xA3328C")]
	public static bool CreateRoom(string roomName, RoomOptions roomOptions, TypedLobby typedLobby, string[] expectedUsers)
	{
		return default(bool);
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0xA33830", Offset = "0xA33830", VA = "0xA33830")]
	public static bool JoinRoom(string roomName)
	{
		return default(bool);
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0xA33898", Offset = "0xA33898", VA = "0xA33898")]
	public static bool JoinRoom(string roomName, string[] expectedUsers)
	{
		return default(bool);
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0xA33B08", Offset = "0xA33B08", VA = "0xA33B08")]
	public static bool JoinOrCreateRoom(string roomName, RoomOptions roomOptions, TypedLobby typedLobby)
	{
		return default(bool);
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0xA33B88", Offset = "0xA33B88", VA = "0xA33B88")]
	public static bool JoinOrCreateRoom(string roomName, RoomOptions roomOptions, TypedLobby typedLobby, string[] expectedUsers)
	{
		return default(bool);
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0xA33E8C", Offset = "0xA33E8C", VA = "0xA33E8C")]
	public static bool JoinRandomRoom()
	{
		return default(bool);
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0xA341D4", Offset = "0xA341D4", VA = "0xA341D4")]
	public static bool JoinRandomRoom(ExitGames.Client.Photon.Hashtable expectedCustomRoomProperties, byte expectedMaxPlayers)
	{
		return default(bool);
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0xA33F00", Offset = "0xA33F00", VA = "0xA33F00")]
	public static bool JoinRandomRoom(ExitGames.Client.Photon.Hashtable expectedCustomRoomProperties, byte expectedMaxPlayers, MatchmakingMode matchingType, TypedLobby typedLobby, string sqlLobbyFilter, [Optional] string[] expectedUsers)
	{
		return default(bool);
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0xA34258", Offset = "0xA34258", VA = "0xA34258")]
	public static bool ReJoinRoom(string roomName)
	{
		return default(bool);
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0xA335B4", Offset = "0xA335B4", VA = "0xA335B4")]
	private static void EnterOfflineRoom(string roomName, RoomOptions roomOptions, bool createdRoom)
	{
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0xA3447C", Offset = "0xA3447C", VA = "0xA3447C")]
	public static bool JoinLobby()
	{
		return default(bool);
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0xA344DC", Offset = "0xA344DC", VA = "0xA344DC")]
	public static bool JoinLobby(TypedLobby typedLobby)
	{
		return default(bool);
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0xA34610", Offset = "0xA34610", VA = "0xA34610")]
	public static bool LeaveLobby()
	{
		return default(bool);
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0xA346DC", Offset = "0xA346DC", VA = "0xA346DC")]
	public static bool LeaveRoom(bool becomeInactive = true)
	{
		return default(bool);
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0xA349BC", Offset = "0xA349BC", VA = "0xA349BC")]
	public static bool GetCustomRoomList(TypedLobby typedLobby, string sqlLobbyFilter)
	{
		return default(bool);
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0xA34A50", Offset = "0xA34A50", VA = "0xA34A50")]
	public static RoomInfo[] GetRoomList()
	{
		return null;
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0xA34B60", Offset = "0xA34B60", VA = "0xA34B60")]
	public static void SetPlayerCustomProperties(ExitGames.Client.Photon.Hashtable customProperties)
	{
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0xA34DB0", Offset = "0xA34DB0", VA = "0xA34DB0")]
	public static void RemovePlayerCustomProperties(string[] customPropertiesToDelete)
	{
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0xA2D624", Offset = "0xA2D624", VA = "0xA2D624")]
	public static bool RaiseEvent(byte eventCode, object eventContent, bool sendReliable, RaiseEventOptions options)
	{
		return default(bool);
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0xA2D584", Offset = "0xA2D584", VA = "0xA2D584")]
	public static int AllocateViewID()
	{
		return default(int);
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0xA352B0", Offset = "0xA352B0", VA = "0xA352B0")]
	public static int AllocateSceneViewID()
	{
		return default(int);
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0xA34F58", Offset = "0xA34F58", VA = "0xA34F58")]
	private static int AllocateViewID(int ownerId)
	{
		return default(int);
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0xA353A4", Offset = "0xA353A4", VA = "0xA353A4")]
	private static int[] AllocateSceneViewIDs(int countOfNewViews)
	{
		return null;
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0xA3547C", Offset = "0xA3547C", VA = "0xA3547C")]
	public static void UnAllocateViewID(int viewID)
	{
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0xA355F4", Offset = "0xA355F4", VA = "0xA355F4")]
	public static GameObject Instantiate(string prefabName, Vector3 position, Quaternion rotation, byte group)
	{
		return null;
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0xA356C4", Offset = "0xA356C4", VA = "0xA356C4")]
	public static GameObject Instantiate(string prefabName, Vector3 position, Quaternion rotation, byte group, object[] data)
	{
		return null;
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0xA35C8C", Offset = "0xA35C8C", VA = "0xA35C8C")]
	public static GameObject InstantiateSceneObject(string prefabName, Vector3 position, Quaternion rotation, byte group, object[] data)
	{
		return null;
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0xA36308", Offset = "0xA36308", VA = "0xA36308")]
	public static int GetPing()
	{
		return default(int);
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0xA3637C", Offset = "0xA3637C", VA = "0xA3637C")]
	public static void FetchServerTimestamp()
	{
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0xA36428", Offset = "0xA36428", VA = "0xA36428")]
	public static void SendOutgoingCommands()
	{
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0xA364C8", Offset = "0xA364C8", VA = "0xA364C8")]
	public static bool CloseConnection(PhotonPlayer kickPlayer)
	{
		return default(bool);
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0xA3667C", Offset = "0xA3667C", VA = "0xA3667C")]
	public static bool SetMasterClient(PhotonPlayer masterClientPlayer)
	{
		return default(bool);
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0xA369BC", Offset = "0xA369BC", VA = "0xA369BC")]
	public static void Destroy(PhotonView targetView)
	{
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0xA36ACC", Offset = "0xA36ACC", VA = "0xA36ACC")]
	public static void Destroy(GameObject targetGo)
	{
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0xA36B58", Offset = "0xA36B58", VA = "0xA36B58")]
	public static void DestroyPlayerObjects(PhotonPlayer targetPlayer)
	{
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0xA36C1C", Offset = "0xA36C1C", VA = "0xA36C1C")]
	public static void DestroyPlayerObjects(int targetPlayerId)
	{
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0xA36DA8", Offset = "0xA36DA8", VA = "0xA36DA8")]
	public static void DestroyAll()
	{
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0xA36E7C", Offset = "0xA36E7C", VA = "0xA36E7C")]
	public static void RemoveRPCs(PhotonPlayer targetPlayer)
	{
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0xA36F8C", Offset = "0xA36F8C", VA = "0xA36F8C")]
	public static void RemoveRPCs(PhotonView targetPhotonView)
	{
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0xA37034", Offset = "0xA37034", VA = "0xA37034")]
	public static void RemoveRPCsInGroup(int targetGroup)
	{
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0xA370DC", Offset = "0xA370DC", VA = "0xA370DC")]
	internal static void RPC(PhotonView view, string methodName, PhotonTargets target, bool encrypt, params object[] parameters)
	{
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0xA37360", Offset = "0xA37360", VA = "0xA37360")]
	internal static void RPC(PhotonView view, string methodName, PhotonPlayer targetPlayer, bool encrpyt, params object[] parameters)
	{
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0xA37590", Offset = "0xA37590", VA = "0xA37590")]
	public static void CacheSendMonoMessageTargets(Type type)
	{
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0xA37660", Offset = "0xA37660", VA = "0xA37660")]
	public static HashSet<GameObject> FindGameObjectsWithComponent(Type type)
	{
		return null;
	}

	[Token(Token = "0x600050D")]
	[Address(RVA = "0xA377E4", Offset = "0xA377E4", VA = "0xA377E4")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6EB074", Offset = "0x6EB074")]
	public static void SetReceivingEnabled(int group, bool enabled)
	{
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0xA37888", Offset = "0xA37888", VA = "0xA37888")]
	public static void SetInterestGroups(byte group, bool enabled)
	{
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0xA379A8", Offset = "0xA379A8", VA = "0xA379A8")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6EB0AC", Offset = "0x6EB0AC")]
	public static void SetReceivingEnabled(int[] enableGroups, int[] disableGroups)
	{
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0xA37AD4", Offset = "0xA37AD4", VA = "0xA37AD4")]
	public static void SetInterestGroups(byte[] disableGroups, byte[] enableGroups)
	{
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0xA37B90", Offset = "0xA37B90", VA = "0xA37B90")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6EB0E4", Offset = "0x6EB0E4")]
	public static void SetSendingEnabled(int group, bool enabled)
	{
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0xA37C04", Offset = "0xA37C04", VA = "0xA37C04")]
	public static void SetSendingEnabled(byte group, bool enabled)
	{
	}

	[Token(Token = "0x6000513")]
	[Address(RVA = "0xA37CC0", Offset = "0xA37CC0", VA = "0xA37CC0")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6EB11C", Offset = "0x6EB11C")]
	public static void SetSendingEnabled(int[] enableGroups, int[] disableGroups)
	{
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0xA37DA4", Offset = "0xA37DA4", VA = "0xA37DA4")]
	public static void SetSendingEnabled(byte[] disableGroups, byte[] enableGroups)
	{
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0xA37E60", Offset = "0xA37E60", VA = "0xA37E60")]
	public static void SetLevelPrefix(short prefix)
	{
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0xA37EF8", Offset = "0xA37EF8", VA = "0xA37EF8")]
	public static void LoadLevel(int levelNumber)
	{
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0xA38044", Offset = "0xA38044", VA = "0xA38044")]
	public static AsyncOperation LoadLevelAsync(int levelNumber)
	{
		return null;
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0xA38194", Offset = "0xA38194", VA = "0xA38194")]
	public static void LoadLevel(string levelName)
	{
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0xA382C0", Offset = "0xA382C0", VA = "0xA382C0")]
	public static AsyncOperation LoadLevelAsync(string levelName)
	{
		return null;
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0xA383F0", Offset = "0xA383F0", VA = "0xA383F0")]
	public static bool WebRpc(string name, object parameters)
	{
		return default(bool);
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0xA3847C", Offset = "0xA3847C", VA = "0xA3847C")]
	public static bool CallEvent(byte eventCode, object content, int senderId)
	{
		return default(bool);
	}
}
[Token(Token = "0x20000E0")]
public class PhotonPlayer : IComparable<PhotonPlayer>, IComparable<int>, IEquatable<PhotonPlayer>, IEquatable<int>
{
	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int actorID;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string nameField;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E3610", Offset = "0x6E3610")]
	private string <UserId>k__BackingField;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public readonly bool IsLocal;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E3620", Offset = "0x6E3620")]
	private bool <IsInactive>k__BackingField;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E3630", Offset = "0x6E3630")]
	private ExitGames.Client.Photon.Hashtable <CustomProperties>k__BackingField;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public object TagObject;

	[Token(Token = "0x17000090")]
	public int ID
	{
		[Token(Token = "0x600051C")]
		[Address(RVA = "0x93D61C", Offset = "0x93D61C", VA = "0x93D61C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000091")]
	public string NickName
	{
		[Token(Token = "0x600051D")]
		[Address(RVA = "0x93D624", Offset = "0x93D624", VA = "0x93D624")]
		get
		{
			return null;
		}
		[Token(Token = "0x600051E")]
		[Address(RVA = "0x93D62C", Offset = "0x93D62C", VA = "0x93D62C")]
		set
		{
		}
	}

	[Token(Token = "0x17000092")]
	public string UserId
	{
		[Token(Token = "0x600051F")]
		[Address(RVA = "0x93D728", Offset = "0x93D728", VA = "0x93D728")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EB154", Offset = "0x6EB154")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000520")]
		[Address(RVA = "0x93D730", Offset = "0x93D730", VA = "0x93D730")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EB164", Offset = "0x6EB164")]
		internal set
		{
		}
	}

	[Token(Token = "0x17000093")]
	public bool IsMasterClient
	{
		[Token(Token = "0x6000521")]
		[Address(RVA = "0x93D738", Offset = "0x93D738", VA = "0x93D738")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000094")]
	public bool IsInactive
	{
		[Token(Token = "0x6000522")]
		[Address(RVA = "0x93D7C0", Offset = "0x93D7C0", VA = "0x93D7C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EB174", Offset = "0x6EB174")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000523")]
		[Address(RVA = "0x93D7C8", Offset = "0x93D7C8", VA = "0x93D7C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EB184", Offset = "0x6EB184")]
		set
		{
		}
	}

	[Token(Token = "0x17000095")]
	public ExitGames.Client.Photon.Hashtable CustomProperties
	{
		[Token(Token = "0x6000524")]
		[Address(RVA = "0x93D7D4", Offset = "0x93D7D4", VA = "0x93D7D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EB194", Offset = "0x6EB194")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000525")]
		[Address(RVA = "0x93D7DC", Offset = "0x93D7DC", VA = "0x93D7DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EB1A4", Offset = "0x6EB1A4")]
		internal set
		{
		}
	}

	[Token(Token = "0x17000096")]
	public ExitGames.Client.Photon.Hashtable AllProperties
	{
		[Token(Token = "0x6000526")]
		[Address(RVA = "0x93D7E4", Offset = "0x93D7E4", VA = "0x93D7E4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000097")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6EEDE8", Offset = "0x6EEDE8")]
	public string name
	{
		[Token(Token = "0x6000539")]
		[Address(RVA = "0x93E7C8", Offset = "0x93E7C8", VA = "0x93E7C8")]
		get
		{
			return null;
		}
		[Token(Token = "0x600053A")]
		[Address(RVA = "0x93E7D0", Offset = "0x93E7D0", VA = "0x93E7D0")]
		set
		{
		}
	}

	[Token(Token = "0x17000098")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6EEE20", Offset = "0x6EEE20")]
	public string userId
	{
		[Token(Token = "0x600053B")]
		[Address(RVA = "0x93E7D4", Offset = "0x93E7D4", VA = "0x93E7D4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600053C")]
		[Address(RVA = "0x93E7DC", Offset = "0x93E7DC", VA = "0x93E7DC")]
		internal set
		{
		}
	}

	[Token(Token = "0x17000099")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6EEE58", Offset = "0x6EEE58")]
	public bool isLocal
	{
		[Token(Token = "0x600053D")]
		[Address(RVA = "0x93E7E4", Offset = "0x93E7E4", VA = "0x93E7E4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700009A")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6EEE90", Offset = "0x6EEE90")]
	public bool isMasterClient
	{
		[Token(Token = "0x600053E")]
		[Address(RVA = "0x93E7EC", Offset = "0x93E7EC", VA = "0x93E7EC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700009B")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6EEEC8", Offset = "0x6EEEC8")]
	public bool isInactive
	{
		[Token(Token = "0x600053F")]
		[Address(RVA = "0x93E7F0", Offset = "0x93E7F0", VA = "0x93E7F0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000540")]
		[Address(RVA = "0x93E7F8", Offset = "0x93E7F8", VA = "0x93E7F8")]
		set
		{
		}
	}

	[Token(Token = "0x1700009C")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6EEF00", Offset = "0x6EEF00")]
	public ExitGames.Client.Photon.Hashtable customProperties
	{
		[Token(Token = "0x6000541")]
		[Address(RVA = "0x93E804", Offset = "0x93E804", VA = "0x93E804")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000542")]
		[Address(RVA = "0x93E80C", Offset = "0x93E80C", VA = "0x93E80C")]
		internal set
		{
		}
	}

	[Token(Token = "0x1700009D")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6EEF38", Offset = "0x6EEF38")]
	public ExitGames.Client.Photon.Hashtable allProperties
	{
		[Token(Token = "0x6000543")]
		[Address(RVA = "0x93E814", Offset = "0x93E814", VA = "0x93E814")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0x93D8B8", Offset = "0x93D8B8", VA = "0x93D8B8")]
	public PhotonPlayer(bool isLocal, int actorID, string name)
	{
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0x93D968", Offset = "0x93D968", VA = "0x93D968")]
	protected internal PhotonPlayer(bool isLocal, int actorID, ExitGames.Client.Photon.Hashtable properties)
	{
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0x93DC50", Offset = "0x93DC50", VA = "0x93DC50", Slot = "0")]
	public override bool Equals(object p)
	{
		return default(bool);
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0x93DD14", Offset = "0x93DD14", VA = "0x93DD14", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0x93DD1C", Offset = "0x93DD1C", VA = "0x93DD1C")]
	internal void InternalChangeLocalID(int newID)
	{
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0x93DA1C", Offset = "0x93DA1C", VA = "0x93DA1C")]
	internal void InternalCacheProperties(ExitGames.Client.Photon.Hashtable properties)
	{
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0x93DDB4", Offset = "0x93DDB4", VA = "0x93DDB4")]
	public void SetCustomProperties(ExitGames.Client.Photon.Hashtable propertiesToSet, [Optional] ExitGames.Client.Photon.Hashtable expectedValues, bool webForward = false)
	{
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0x93E074", Offset = "0x93E074", VA = "0x93E074")]
	public static PhotonPlayer Find(int ID)
	{
		return null;
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0x93E128", Offset = "0x93E128", VA = "0x93E128")]
	public PhotonPlayer Get(int id)
	{
		return null;
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0x93E130", Offset = "0x93E130", VA = "0x93E130")]
	public PhotonPlayer GetNext()
	{
		return null;
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0x93E360", Offset = "0x93E360", VA = "0x93E360")]
	public PhotonPlayer GetNextFor(PhotonPlayer currentPlayer)
	{
		return null;
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0x93E138", Offset = "0x93E138", VA = "0x93E138")]
	public PhotonPlayer GetNextFor(int currentPlayerId)
	{
		return null;
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0x93E374", Offset = "0x93E374", VA = "0x93E374", Slot = "4")]
	public int CompareTo(PhotonPlayer other)
	{
		return default(int);
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0x93E3D0", Offset = "0x93E3D0", VA = "0x93E3D0", Slot = "5")]
	public int CompareTo(int other)
	{
		return default(int);
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0x93E410", Offset = "0x93E410", VA = "0x93E410", Slot = "6")]
	public bool Equals(PhotonPlayer other)
	{
		return default(bool);
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0x93E470", Offset = "0x93E470", VA = "0x93E470", Slot = "7")]
	public bool Equals(int other)
	{
		return default(bool);
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0x93E4B4", Offset = "0x93E4B4", VA = "0x93E4B4", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0x93E610", Offset = "0x93E610", VA = "0x93E610")]
	public string ToStringFull()
	{
		return null;
	}
}
[Token(Token = "0x20000E1")]
public class PhotonStatsGui : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool statsWindowOn;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool statsOn;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool healthStatsVisible;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool trafficStatsOn;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool buttonsOn;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Rect statsRect;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int WindowId;

	[Token(Token = "0x6000544")]
	[Address(RVA = "0x93ED84", Offset = "0x93ED84", VA = "0x93ED84")]
	public void Start()
	{
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0x93EDE8", Offset = "0x93EDE8", VA = "0x93EDE8")]
	public void Update()
	{
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0x93EE38", Offset = "0x93EE38", VA = "0x93EE38")]
	public void OnGUI()
	{
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0x93F01C", Offset = "0x93F01C", VA = "0x93F01C")]
	public void TrafficStatsWindow(int windowID)
	{
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0x940224", Offset = "0x940224", VA = "0x940224")]
	public PhotonStatsGui()
	{
	}
}
[Token(Token = "0x20000E2")]
public class PhotonStreamQueue
{
	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int m_SampleRate;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int m_SampleCount;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int m_ObjectsPerSample;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float m_LastSampleTime;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int m_LastFrameCount;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int m_NextObjectIndex;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<object> m_Objects;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool m_IsWriting;

	[Token(Token = "0x6000549")]
	[Address(RVA = "0x940FF0", Offset = "0x940FF0", VA = "0x940FF0")]
	public PhotonStreamQueue(int sampleRate)
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0x941084", Offset = "0x941084", VA = "0x941084")]
	private void BeginWritePackage()
	{
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0x9413D8", Offset = "0x9413D8", VA = "0x9413D8")]
	public void Reset()
	{
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0x941440", Offset = "0x941440", VA = "0x941440")]
	public void SendNext(object obj)
	{
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0x9414E8", Offset = "0x9414E8", VA = "0x9414E8")]
	public bool HasQueuedObjects()
	{
		return default(bool);
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0x9414F8", Offset = "0x9414F8", VA = "0x9414F8")]
	public object ReceiveNext()
	{
		return null;
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0x9415A0", Offset = "0x9415A0", VA = "0x9415A0")]
	public void Serialize(PhotonStream stream)
	{
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0x9416C8", Offset = "0x9416C8", VA = "0x9416C8")]
	public void Deserialize(PhotonStream stream)
	{
	}
}
[Token(Token = "0x20000E3")]
public enum ViewSynchronization
{
	[Token(Token = "0x40005A3")]
	Off,
	[Token(Token = "0x40005A4")]
	ReliableDeltaCompressed,
	[Token(Token = "0x40005A5")]
	Unreliable,
	[Token(Token = "0x40005A6")]
	UnreliableOnChange
}
[Token(Token = "0x20000E4")]
public enum OnSerializeTransform
{
	[Token(Token = "0x40005A8")]
	OnlyPosition,
	[Token(Token = "0x40005A9")]
	OnlyRotation,
	[Token(Token = "0x40005AA")]
	OnlyScale,
	[Token(Token = "0x40005AB")]
	PositionAndRotation,
	[Token(Token = "0x40005AC")]
	All
}
[Token(Token = "0x20000E5")]
public enum OnSerializeRigidBody
{
	[Token(Token = "0x40005AE")]
	OnlyVelocity,
	[Token(Token = "0x40005AF")]
	OnlyAngularVelocity,
	[Token(Token = "0x40005B0")]
	All
}
[Token(Token = "0x20000E6")]
public enum OwnershipOption
{
	[Token(Token = "0x40005B2")]
	Fixed,
	[Token(Token = "0x40005B3")]
	Takeover,
	[Token(Token = "0x40005B4")]
	Request
}
[Token(Token = "0x20000E7")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6E0814", Offset = "0x6E0814")]
public class PhotonView : Photon.MonoBehaviour
{
	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int ownerId;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public byte group;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	protected internal bool mixedModeIsReliable;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	public bool OwnerShipWasTransfered;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int prefixBackup;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	internal object[] instantiationDataField;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected internal object[] lastOnSerializeDataSent;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected internal object[] lastOnSerializeDataReceived;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ViewSynchronization synchronization;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public OnSerializeTransform onSerializeTransformOption;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public OnSerializeRigidBody onSerializeRigidBodyOption;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public OwnershipOption ownershipTransfer;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<Component> ObservedComponents;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Dictionary<Component, MethodInfo> m_OnSerializeMethodInfos;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private int viewIdField;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int instantiationId;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int currentMasterID;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	protected internal bool didAwake;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
	[SerializeField]
	protected internal bool isRuntimeInstantiated;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x76")]
	protected internal bool removedFromLocalViewList;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	internal UnityEngine.MonoBehaviour[] RpcMonoBehaviours;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private MethodInfo OnSerializeMethodInfo;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool failedToFindOnSerialize;

	[Token(Token = "0x1700009E")]
	public int prefix
	{
		[Token(Token = "0x6000551")]
		[Address(RVA = "0x943C80", Offset = "0x943C80", VA = "0x943C80")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000552")]
		[Address(RVA = "0x943D34", Offset = "0x943D34", VA = "0x943D34")]
		set
		{
		}
	}

	[Token(Token = "0x1700009F")]
	public object[] instantiationData
	{
		[Token(Token = "0x6000553")]
		[Address(RVA = "0x943D3C", Offset = "0x943D3C", VA = "0x943D3C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000554")]
		[Address(RVA = "0x943DD0", Offset = "0x943DD0", VA = "0x943DD0")]
		set
		{
		}
	}

	[Token(Token = "0x170000A0")]
	public int viewID
	{
		[Token(Token = "0x6000555")]
		[Address(RVA = "0x943DD8", Offset = "0x943DD8", VA = "0x943DD8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000556")]
		[Address(RVA = "0x943DE0", Offset = "0x943DE0", VA = "0x943DE0")]
		set
		{
		}
	}

	[Token(Token = "0x170000A1")]
	public bool isSceneView
	{
		[Token(Token = "0x6000557")]
		[Address(RVA = "0x943ECC", Offset = "0x943ECC", VA = "0x943ECC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000A2")]
	public PhotonPlayer owner
	{
		[Token(Token = "0x6000558")]
		[Address(RVA = "0x943F5C", Offset = "0x943F5C", VA = "0x943F5C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000A3")]
	public int OwnerActorNr
	{
		[Token(Token = "0x6000559")]
		[Address(RVA = "0x943F64", Offset = "0x943F64", VA = "0x943F64")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000A4")]
	public bool isOwnerActive
	{
		[Token(Token = "0x600055A")]
		[Address(RVA = "0x943F6C", Offset = "0x943F6C", VA = "0x943F6C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000A5")]
	public int CreatorActorNr
	{
		[Token(Token = "0x600055B")]
		[Address(RVA = "0x943EE8", Offset = "0x943EE8", VA = "0x943EE8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000A6")]
	public bool isMine
	{
		[Token(Token = "0x600055C")]
		[Address(RVA = "0x9421F8", Offset = "0x9421F8", VA = "0x9421F8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0x944010", Offset = "0x944010", VA = "0x944010")]
	protected internal void Awake()
	{
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0x9440C0", Offset = "0x9440C0", VA = "0x9440C0")]
	public void RequestOwnership()
	{
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0x944140", Offset = "0x944140", VA = "0x944140")]
	public void TransferOwnership(PhotonPlayer newOwner)
	{
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0x944158", Offset = "0x944158", VA = "0x944158")]
	public void TransferOwnership(int newOwnerId)
	{
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0x9441EC", Offset = "0x9441EC", VA = "0x9441EC")]
	public void OnMasterClientSwitched(PhotonPlayer newMasterClient)
	{
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0x944254", Offset = "0x944254", VA = "0x944254")]
	protected internal void OnDestroy()
	{
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0x9443D0", Offset = "0x9443D0", VA = "0x9443D0")]
	public void SerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0x944930", Offset = "0x944930", VA = "0x944930")]
	public void DeserializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0x944A00", Offset = "0x944A00", VA = "0x944A00")]
	protected internal void DeserializeComponent(Component component, PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0x9444A0", Offset = "0x9444A0", VA = "0x9444A0")]
	protected internal void SerializeComponent(Component component, PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0x945020", Offset = "0x945020", VA = "0x945020")]
	protected internal void ExecuteComponentOnSerialize(Component component, PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0x9453B8", Offset = "0x9453B8", VA = "0x9453B8")]
	public void RefreshRpcMonoBehaviourCache()
	{
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0x945410", Offset = "0x945410", VA = "0x945410")]
	public void RPC(string methodName, PhotonTargets target, params object[] parameters)
	{
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0x9454A4", Offset = "0x9454A4", VA = "0x9454A4")]
	public void RpcSecure(string methodName, PhotonTargets target, bool encrypt, params object[] parameters)
	{
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0x94553C", Offset = "0x94553C", VA = "0x94553C")]
	public void RPC(string methodName, PhotonPlayer targetPlayer, params object[] parameters)
	{
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0x9455D0", Offset = "0x9455D0", VA = "0x9455D0")]
	public void RpcSecure(string methodName, PhotonPlayer targetPlayer, bool encrypt, params object[] parameters)
	{
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0x945668", Offset = "0x945668", VA = "0x945668")]
	public static PhotonView Get(Component component)
	{
		return null;
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0x9456C0", Offset = "0x9456C0", VA = "0x9456C0")]
	public static PhotonView Get(GameObject gameObj)
	{
		return null;
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0x945718", Offset = "0x945718", VA = "0x945718")]
	public static PhotonView Find(int viewID)
	{
		return null;
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0x945794", Offset = "0x945794", VA = "0x945794", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0x9459B8", Offset = "0x9459B8", VA = "0x9459B8")]
	public PhotonView()
	{
	}
}
[Token(Token = "0x20000E8")]
public class PhotonPingManager
{
	[Token(Token = "0x20003A4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E1A34", Offset = "0x6E1A34")]
	private sealed class <PingSocket>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400129C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400129D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400129E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Region region;

		[Token(Token = "0x400129F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PhotonPingManager <>4__this;

		[Token(Token = "0x40012A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private PhotonPing <ping>5__2;

		[Token(Token = "0x40012A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <rttSum>5__3;

		[Token(Token = "0x40012A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int <replyCount>5__4;

		[Token(Token = "0x40012A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string <regionAddress>5__5;

		[Token(Token = "0x40012A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int <i>5__6;

		[Token(Token = "0x40012A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool <overtime>5__7;

		[Token(Token = "0x40012A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Stopwatch <sw>5__8;

		[Token(Token = "0x17000244")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60017F9")]
			[Address(RVA = "0x93D5AC", Offset = "0x93D5AC", VA = "0x93D5AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000245")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017FB")]
			[Address(RVA = "0x93D614", Offset = "0x93D614", VA = "0x93D614", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017F6")]
		[Address(RVA = "0x93C974", Offset = "0x93C974", VA = "0x93C974")]
		[DebuggerHidden]
		public <PingSocket>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x60017F7")]
		[Address(RVA = "0x93CC90", Offset = "0x93CC90", VA = "0x93CC90", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60017F8")]
		[Address(RVA = "0x93CC94", Offset = "0x93CC94", VA = "0x93CC94", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017FA")]
		[Address(RVA = "0x93D5B4", Offset = "0x93D5B4", VA = "0x93D5B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool UseNative;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int Attempts;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static bool IgnoreInitialAttempt;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int MaxMilliseconsPerPing;

	[Token(Token = "0x40005D0")]
	private const string wssProtocolString = "wss://";

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int PingsRunning;

	[Token(Token = "0x170000A7")]
	public Region BestRegion
	{
		[Token(Token = "0x6000572")]
		[Address(RVA = "0x93C740", Offset = "0x93C740", VA = "0x93C740")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000A8")]
	public bool Done
	{
		[Token(Token = "0x6000573")]
		[Address(RVA = "0x93C8E8", Offset = "0x93C8E8", VA = "0x93C8E8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0x93C8F8", Offset = "0x93C8F8", VA = "0x93C8F8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6EB1B4", Offset = "0x6EB1B4")]
	public IEnumerator PingSocket(Region region)
	{
		return null;
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0x93C9A0", Offset = "0x93C9A0", VA = "0x93C9A0")]
	public static string ResolveHost(string hostName)
	{
		return null;
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0x93CC14", Offset = "0x93CC14", VA = "0x93CC14")]
	public PhotonPingManager()
	{
	}
}
[Token(Token = "0x20000E9")]
public class PunRPC : Attribute
{
	[Token(Token = "0x6000578")]
	[Address(RVA = "0x94F80C", Offset = "0x94F80C", VA = "0x94F80C")]
	public PunRPC()
	{
	}
}
[Token(Token = "0x20000EA")]
public class Room : RoomInfo
{
	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E3660", Offset = "0x6E3660")]
	private string[] <PropertiesListedInLobby>k__BackingField;

	[Token(Token = "0x170000A9")]
	public new string Name
	{
		[Token(Token = "0x6000579")]
		[Address(RVA = "0x952FE8", Offset = "0x952FE8", VA = "0x952FE8")]
		get
		{
			return null;
		}
		[Token(Token = "0x600057A")]
		[Address(RVA = "0x952FF0", Offset = "0x952FF0", VA = "0x952FF0")]
		internal set
		{
		}
	}

	[Token(Token = "0x170000AA")]
	public new bool IsOpen
	{
		[Token(Token = "0x600057B")]
		[Address(RVA = "0x952FF8", Offset = "0x952FF8", VA = "0x952FF8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600057C")]
		[Address(RVA = "0x93A874", Offset = "0x93A874", VA = "0x93A874")]
		set
		{
		}
	}

	[Token(Token = "0x170000AB")]
	public new bool IsVisible
	{
		[Token(Token = "0x600057D")]
		[Address(RVA = "0x953000", Offset = "0x953000", VA = "0x953000")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600057E")]
		[Address(RVA = "0x93AA70", Offset = "0x93AA70", VA = "0x93AA70")]
		set
		{
		}
	}

	[Token(Token = "0x170000AC")]
	public string[] PropertiesListedInLobby
	{
		[Token(Token = "0x600057F")]
		[Address(RVA = "0x953008", Offset = "0x953008", VA = "0x953008")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EB218", Offset = "0x6EB218")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000580")]
		[Address(RVA = "0x953010", Offset = "0x953010", VA = "0x953010")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EB228", Offset = "0x6EB228")]
		private set
		{
		}
	}

	[Token(Token = "0x170000AD")]
	public bool AutoCleanUp
	{
		[Token(Token = "0x6000581")]
		[Address(RVA = "0x953018", Offset = "0x953018", VA = "0x953018")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000AE")]
	public new int MaxPlayers
	{
		[Token(Token = "0x6000582")]
		[Address(RVA = "0x953020", Offset = "0x953020", VA = "0x953020")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000583")]
		[Address(RVA = "0x953028", Offset = "0x953028", VA = "0x953028")]
		set
		{
		}
	}

	[Token(Token = "0x170000AF")]
	public new int PlayerCount
	{
		[Token(Token = "0x6000584")]
		[Address(RVA = "0x950304", Offset = "0x950304", VA = "0x950304")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000B0")]
	public string[] ExpectedUsers
	{
		[Token(Token = "0x6000585")]
		[Address(RVA = "0x953298", Offset = "0x953298", VA = "0x953298")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B1")]
	public int PlayerTtl
	{
		[Token(Token = "0x6000586")]
		[Address(RVA = "0x9532A0", Offset = "0x9532A0", VA = "0x9532A0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000587")]
		[Address(RVA = "0x9532A8", Offset = "0x9532A8", VA = "0x9532A8")]
		set
		{
		}
	}

	[Token(Token = "0x170000B2")]
	public int EmptyRoomTtl
	{
		[Token(Token = "0x6000588")]
		[Address(RVA = "0x953438", Offset = "0x953438", VA = "0x953438")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000589")]
		[Address(RVA = "0x953440", Offset = "0x953440", VA = "0x953440")]
		set
		{
		}
	}

	[Token(Token = "0x170000B3")]
	protected internal int MasterClientId
	{
		[Token(Token = "0x600058A")]
		[Address(RVA = "0x9535D0", Offset = "0x9535D0", VA = "0x9535D0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600058B")]
		[Address(RVA = "0x9535D8", Offset = "0x9535D8", VA = "0x9535D8")]
		set
		{
		}
	}

	[Token(Token = "0x170000B4")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6EEF70", Offset = "0x6EEF70")]
	public new string name
	{
		[Token(Token = "0x6000593")]
		[Address(RVA = "0x953E54", Offset = "0x953E54", VA = "0x953E54")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000594")]
		[Address(RVA = "0x953E5C", Offset = "0x953E5C", VA = "0x953E5C")]
		internal set
		{
		}
	}

	[Token(Token = "0x170000B5")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6EEFA8", Offset = "0x6EEFA8")]
	public new bool open
	{
		[Token(Token = "0x6000595")]
		[Address(RVA = "0x953E64", Offset = "0x953E64", VA = "0x953E64")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000596")]
		[Address(RVA = "0x953E6C", Offset = "0x953E6C", VA = "0x953E6C")]
		set
		{
		}
	}

	[Token(Token = "0x170000B6")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6EEFE0", Offset = "0x6EEFE0")]
	public new bool visible
	{
		[Token(Token = "0x6000597")]
		[Address(RVA = "0x953E74", Offset = "0x953E74", VA = "0x953E74")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000598")]
		[Address(RVA = "0x953E7C", Offset = "0x953E7C", VA = "0x953E7C")]
		set
		{
		}
	}

	[Token(Token = "0x170000B7")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6EF018", Offset = "0x6EF018")]
	public string[] propertiesListedInLobby
	{
		[Token(Token = "0x6000599")]
		[Address(RVA = "0x953E84", Offset = "0x953E84", VA = "0x953E84")]
		get
		{
			return null;
		}
		[Token(Token = "0x600059A")]
		[Address(RVA = "0x953E8C", Offset = "0x953E8C", VA = "0x953E8C")]
		private set
		{
		}
	}

	[Token(Token = "0x170000B8")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6EF050", Offset = "0x6EF050")]
	public bool autoCleanUp
	{
		[Token(Token = "0x600059B")]
		[Address(RVA = "0x953E94", Offset = "0x953E94", VA = "0x953E94")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000B9")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6EF088", Offset = "0x6EF088")]
	public new int maxPlayers
	{
		[Token(Token = "0x600059C")]
		[Address(RVA = "0x953E9C", Offset = "0x953E9C", VA = "0x953E9C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600059D")]
		[Address(RVA = "0x953EA4", Offset = "0x953EA4", VA = "0x953EA4")]
		set
		{
		}
	}

	[Token(Token = "0x170000BA")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6EF0C0", Offset = "0x6EF0C0")]
	public new int playerCount
	{
		[Token(Token = "0x600059E")]
		[Address(RVA = "0x953EA8", Offset = "0x953EA8", VA = "0x953EA8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000BB")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6EF0F8", Offset = "0x6EF0F8")]
	public string[] expectedUsers
	{
		[Token(Token = "0x600059F")]
		[Address(RVA = "0x953EAC", Offset = "0x953EAC", VA = "0x953EAC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000BC")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6EF130", Offset = "0x6EF130")]
	protected internal int masterClientId
	{
		[Token(Token = "0x60005A0")]
		[Address(RVA = "0x953EB4", Offset = "0x953EB4", VA = "0x953EB4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60005A1")]
		[Address(RVA = "0x953EBC", Offset = "0x953EBC", VA = "0x953EBC")]
		set
		{
		}
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0x9535E0", Offset = "0x9535E0", VA = "0x9535E0")]
	internal Room(string roomName, RoomOptions options)
	{
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0x93B3E8", Offset = "0x93B3E8", VA = "0x93B3E8")]
	public void SetCustomProperties(ExitGames.Client.Photon.Hashtable propertiesToSet, [Optional] ExitGames.Client.Photon.Hashtable expectedValues, bool webForward = false)
	{
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0x9536A0", Offset = "0x9536A0", VA = "0x9536A0")]
	public void SetPropertiesListedInLobby(string[] propsListedInLobby)
	{
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0x953790", Offset = "0x953790", VA = "0x953790")]
	public void ClearExpectedUsers()
	{
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0x9538D8", Offset = "0x9538D8", VA = "0x9538D8")]
	public void SetExpectedUsers(string[] expectedUsers)
	{
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0x953A08", Offset = "0x953A08", VA = "0x953A08", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0x953C00", Offset = "0x953C00", VA = "0x953C00")]
	public new string ToStringFull()
	{
		return null;
	}
}
[Token(Token = "0x20000EB")]
public class RoomInfo
{
	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E3670", Offset = "0x6E3670")]
	private bool <removedFromList>k__BackingField;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ExitGames.Client.Photon.Hashtable customPropertiesField;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected byte maxPlayersField;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	protected int emptyRoomTtlField;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected int playerTtlField;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected string[] expectedUsersField;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected bool openField;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	protected bool visibleField;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	protected bool autoCleanUpField;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected string nameField;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected internal int masterClientIdField;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E3680", Offset = "0x6E3680")]
	private bool <serverSideMasterClient>k__BackingField;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E3690", Offset = "0x6E3690")]
	private int <PlayerCount>k__BackingField;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E36A0", Offset = "0x6E36A0")]
	private bool <IsLocalClientInside>k__BackingField;

	[Token(Token = "0x170000BD")]
	public bool removedFromList
	{
		[Token(Token = "0x60005A2")]
		[Address(RVA = "0x8F4920", Offset = "0x8F4920", VA = "0x8F4920")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EB238", Offset = "0x6EB238")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005A3")]
		[Address(RVA = "0x8F4928", Offset = "0x8F4928", VA = "0x8F4928")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EB248", Offset = "0x6EB248")]
		internal set
		{
		}
	}

	[Token(Token = "0x170000BE")]
	protected internal bool serverSideMasterClient
	{
		[Token(Token = "0x60005A4")]
		[Address(RVA = "0x8F4934", Offset = "0x8F4934", VA = "0x8F4934")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EB258", Offset = "0x6EB258")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005A5")]
		[Address(RVA = "0x8F493C", Offset = "0x8F493C", VA = "0x8F493C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EB268", Offset = "0x6EB268")]
		private set
		{
		}
	}

	[Token(Token = "0x170000BF")]
	public ExitGames.Client.Photon.Hashtable CustomProperties
	{
		[Token(Token = "0x60005A6")]
		[Address(RVA = "0x8F4948", Offset = "0x8F4948", VA = "0x8F4948")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000C0")]
	public string Name
	{
		[Token(Token = "0x60005A7")]
		[Address(RVA = "0x8F4950", Offset = "0x8F4950", VA = "0x8F4950")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000C1")]
	public int PlayerCount
	{
		[Token(Token = "0x60005A8")]
		[Address(RVA = "0x8F4958", Offset = "0x8F4958", VA = "0x8F4958")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EB278", Offset = "0x6EB278")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60005A9")]
		[Address(RVA = "0x8F4960", Offset = "0x8F4960", VA = "0x8F4960")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EB288", Offset = "0x6EB288")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C2")]
	public bool IsLocalClientInside
	{
		[Token(Token = "0x60005AA")]
		[Address(RVA = "0x8F4968", Offset = "0x8F4968", VA = "0x8F4968")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EB298", Offset = "0x6EB298")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005AB")]
		[Address(RVA = "0x8F4970", Offset = "0x8F4970", VA = "0x8F4970")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EB2A8", Offset = "0x6EB2A8")]
		set
		{
		}
	}

	[Token(Token = "0x170000C3")]
	public byte MaxPlayers
	{
		[Token(Token = "0x60005AC")]
		[Address(RVA = "0x8F497C", Offset = "0x8F497C", VA = "0x8F497C")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170000C4")]
	public bool IsOpen
	{
		[Token(Token = "0x60005AD")]
		[Address(RVA = "0x8F4984", Offset = "0x8F4984", VA = "0x8F4984")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000C5")]
	public bool IsVisible
	{
		[Token(Token = "0x60005AE")]
		[Address(RVA = "0x8F498C", Offset = "0x8F498C", VA = "0x8F498C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000C6")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6EF168", Offset = "0x6EF168")]
	public ExitGames.Client.Photon.Hashtable customProperties
	{
		[Token(Token = "0x60005B5")]
		[Address(RVA = "0x8F558C", Offset = "0x8F558C", VA = "0x8F558C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000C7")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6EF1A0", Offset = "0x6EF1A0")]
	public string name
	{
		[Token(Token = "0x60005B6")]
		[Address(RVA = "0x8F5594", Offset = "0x8F5594", VA = "0x8F5594")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000C8")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6EF1D8", Offset = "0x6EF1D8")]
	public int playerCount
	{
		[Token(Token = "0x60005B7")]
		[Address(RVA = "0x8F559C", Offset = "0x8F559C", VA = "0x8F559C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60005B8")]
		[Address(RVA = "0x8F55A4", Offset = "0x8F55A4", VA = "0x8F55A4")]
		set
		{
		}
	}

	[Token(Token = "0x170000C9")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6EF210", Offset = "0x6EF210")]
	public bool isLocalClientInside
	{
		[Token(Token = "0x60005B9")]
		[Address(RVA = "0x8F55AC", Offset = "0x8F55AC", VA = "0x8F55AC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005BA")]
		[Address(RVA = "0x8F55B4", Offset = "0x8F55B4", VA = "0x8F55B4")]
		set
		{
		}
	}

	[Token(Token = "0x170000CA")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6EF248", Offset = "0x6EF248")]
	public byte maxPlayers
	{
		[Token(Token = "0x60005BB")]
		[Address(RVA = "0x8F55C0", Offset = "0x8F55C0", VA = "0x8F55C0")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170000CB")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6EF280", Offset = "0x6EF280")]
	public bool open
	{
		[Token(Token = "0x60005BC")]
		[Address(RVA = "0x8F55C8", Offset = "0x8F55C8", VA = "0x8F55C8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000CC")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6EF2B8", Offset = "0x6EF2B8")]
	public bool visible
	{
		[Token(Token = "0x60005BD")]
		[Address(RVA = "0x8F55D0", Offset = "0x8F55D0", VA = "0x8F55D0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0x8F4994", Offset = "0x8F4994", VA = "0x8F4994")]
	protected internal RoomInfo(string roomName, ExitGames.Client.Photon.Hashtable properties)
	{
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0x8F5074", Offset = "0x8F5074", VA = "0x8F5074", Slot = "0")]
	public override bool Equals(object other)
	{
		return default(bool);
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0x8F5128", Offset = "0x8F5128", VA = "0x8F5128", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0x8F5148", Offset = "0x8F5148", VA = "0x8F5148", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0x8F533C", Offset = "0x8F533C", VA = "0x8F533C")]
	public string ToStringFull()
	{
		return null;
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0x8F4A9C", Offset = "0x8F4A9C", VA = "0x8F4A9C")]
	protected internal void InternalCacheProperties(ExitGames.Client.Photon.Hashtable propertiesToCache)
	{
	}
}
[Token(Token = "0x20000EC")]
public class Region
{
	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public CloudRegionCode Code;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string Cluster;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string HostAndPort;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int Ping;

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0x951074", Offset = "0x951074", VA = "0x951074")]
	public Region(CloudRegionCode code)
	{
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0x951110", Offset = "0x951110", VA = "0x951110")]
	public Region(CloudRegionCode code, string regionCodeString, string address)
	{
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0x951150", Offset = "0x951150", VA = "0x951150")]
	public static CloudRegionCode Parse(string codeAsString)
	{
		return default(CloudRegionCode);
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0x9512F4", Offset = "0x9512F4", VA = "0x9512F4")]
	internal static CloudRegionFlag ParseFlag(CloudRegionCode region)
	{
		return default(CloudRegionFlag);
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0x9514C4", Offset = "0x9514C4", VA = "0x9514C4")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6EB2B8", Offset = "0x6EB2B8")]
	internal static CloudRegionFlag ParseFlag(string codeAsString)
	{
		return default(CloudRegionFlag);
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0x951634", Offset = "0x951634", VA = "0x951634", Slot = "3")]
	public override string ToString()
	{
		return null;
	}
}
[Serializable]
[Token(Token = "0x20000ED")]
public class ServerSettings : ScriptableObject
{
	[Token(Token = "0x20003A5")]
	public enum HostingOption
	{
		[Token(Token = "0x40012A8")]
		NotSet,
		[Token(Token = "0x40012A9")]
		PhotonCloud,
		[Token(Token = "0x40012AA")]
		SelfHosted,
		[Token(Token = "0x40012AB")]
		OfflineMode,
		[Token(Token = "0x40012AC")]
		BestRegion
	}

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string AppID;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string VoiceAppID;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string ChatAppID;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public HostingOption HostType;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public CloudRegionCode PreferredRegion;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public CloudRegionFlag EnabledRegions;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public ConnectionProtocol Protocol;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string ServerAddress;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int ServerPort;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int VoiceServerPort;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool JoinLobby;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool EnableLobbyStatistics;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public PhotonLogLevel PunLogging;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public DebugLevel NetworkLogging;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool RunInBackground;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<string> RpcList;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[HideInInspector]
	public bool DisableAutoOpenWizard;

	[Token(Token = "0x170000CD")]
	public static CloudRegionCode BestRegionCodeInPreferences
	{
		[Token(Token = "0x60005C9")]
		[Address(RVA = "0x8F97F0", Offset = "0x8F97F0", VA = "0x8F97F0")]
		get
		{
			return default(CloudRegionCode);
		}
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0x8F9660", Offset = "0x8F9660", VA = "0x8F9660")]
	public void UseCloudBestRegion(string cloudAppid)
	{
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0x8F9670", Offset = "0x8F9670", VA = "0x8F9670")]
	public void UseCloud(string cloudAppid)
	{
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0x8F9680", Offset = "0x8F9680", VA = "0x8F9680")]
	public void UseCloud(string cloudAppid, CloudRegionCode code)
	{
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0x8F9690", Offset = "0x8F9690", VA = "0x8F9690")]
	public void UseMyServer(string serverAddress, int serverPort, string application)
	{
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0x8F971C", Offset = "0x8F971C", VA = "0x8F971C")]
	public static bool IsAppId(string val)
	{
		return default(bool);
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0x8F9850", Offset = "0x8F9850", VA = "0x8F9850")]
	public static void ResetBestRegionCodeInPreferences()
	{
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0x8F98B4", Offset = "0x8F98B4", VA = "0x8F98B4", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0x8F9A18", Offset = "0x8F9A18", VA = "0x8F9A18")]
	public ServerSettings()
	{
	}
}
[Token(Token = "0x20000EE")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6E084C", Offset = "0x6E084C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6E084C", Offset = "0x6E084C")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6E084C", Offset = "0x6E084C")]
public class PhotonAnimatorView : UnityEngine.MonoBehaviour, IPunObservable
{
	[Token(Token = "0x20003A6")]
	public enum ParameterType
	{
		[Token(Token = "0x40012AE")]
		Float = 1,
		[Token(Token = "0x40012AF")]
		Int = 3,
		[Token(Token = "0x40012B0")]
		Bool = 4,
		[Token(Token = "0x40012B1")]
		Trigger = 9
	}

	[Token(Token = "0x20003A7")]
	public enum SynchronizeType
	{
		[Token(Token = "0x40012B3")]
		Disabled,
		[Token(Token = "0x40012B4")]
		Discrete,
		[Token(Token = "0x40012B5")]
		Continuous
	}

	[Serializable]
	[Token(Token = "0x20003A8")]
	public class SynchronizedParameter
	{
		[Token(Token = "0x40012B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ParameterType Type;

		[Token(Token = "0x40012B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public SynchronizeType SynchronizeType;

		[Token(Token = "0x40012B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Name;

		[Token(Token = "0x60017FC")]
		[Address(RVA = "0xA27E1C", Offset = "0xA27E1C", VA = "0xA27E1C")]
		public SynchronizedParameter()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20003A9")]
	public class SynchronizedLayer
	{
		[Token(Token = "0x40012B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SynchronizeType SynchronizeType;

		[Token(Token = "0x40012BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int LayerIndex;

		[Token(Token = "0x60017FD")]
		[Address(RVA = "0xA27C8C", Offset = "0xA27C8C", VA = "0xA27C8C")]
		public SynchronizedLayer()
		{
		}
	}

	[Token(Token = "0x20003AA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E1A44", Offset = "0x6E1A44")]
	private sealed class <>c__DisplayClass18_0
	{
		[Token(Token = "0x40012BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int layerIndex;

		[Token(Token = "0x60017FE")]
		[Address(RVA = "0xA277F4", Offset = "0xA277F4", VA = "0xA277F4")]
		public <>c__DisplayClass18_0()
		{
		}

		[Token(Token = "0x60017FF")]
		[Address(RVA = "0xA28940", Offset = "0xA28940", VA = "0xA28940")]
		internal bool <DoesLayerSynchronizeTypeExist>b__0(SynchronizedLayer item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20003AB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E1A54", Offset = "0x6E1A54")]
	private sealed class <>c__DisplayClass19_0
	{
		[Token(Token = "0x40012BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x6001800")]
		[Address(RVA = "0xA278CC", Offset = "0xA278CC", VA = "0xA278CC")]
		public <>c__DisplayClass19_0()
		{
		}

		[Token(Token = "0x6001801")]
		[Address(RVA = "0xA28964", Offset = "0xA28964", VA = "0xA28964")]
		internal bool <DoesParameterSynchronizeTypeExist>b__0(SynchronizedParameter item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20003AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E1A64", Offset = "0x6E1A64")]
	private sealed class <>c__DisplayClass22_0
	{
		[Token(Token = "0x40012BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int layerIndex;

		[Token(Token = "0x6001802")]
		[Address(RVA = "0xA279F0", Offset = "0xA279F0", VA = "0xA279F0")]
		public <>c__DisplayClass22_0()
		{
		}

		[Token(Token = "0x6001803")]
		[Address(RVA = "0xA28988", Offset = "0xA28988", VA = "0xA28988")]
		internal bool <GetLayerSynchronizeType>b__0(SynchronizedLayer item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20003AD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E1A74", Offset = "0x6E1A74")]
	private sealed class <>c__DisplayClass23_0
	{
		[Token(Token = "0x40012BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x6001804")]
		[Address(RVA = "0xA27B04", Offset = "0xA27B04", VA = "0xA27B04")]
		public <>c__DisplayClass23_0()
		{
		}

		[Token(Token = "0x6001805")]
		[Address(RVA = "0xA289AC", Offset = "0xA289AC", VA = "0xA289AC")]
		internal bool <GetParameterSynchronizeType>b__0(SynchronizedParameter item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20003AE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E1A84", Offset = "0x6E1A84")]
	private sealed class <>c__DisplayClass24_0
	{
		[Token(Token = "0x40012BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int layerIndex;

		[Token(Token = "0x6001806")]
		[Address(RVA = "0xA27C84", Offset = "0xA27C84", VA = "0xA27C84")]
		public <>c__DisplayClass24_0()
		{
		}

		[Token(Token = "0x6001807")]
		[Address(RVA = "0xA289D0", Offset = "0xA289D0", VA = "0xA289D0")]
		internal bool <SetLayerSynchronized>b__0(SynchronizedLayer item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20003AF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E1A94", Offset = "0x6E1A94")]
	private sealed class <>c__DisplayClass25_0
	{
		[Token(Token = "0x40012C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x6001808")]
		[Address(RVA = "0xA27E14", Offset = "0xA27E14", VA = "0xA27E14")]
		public <>c__DisplayClass25_0()
		{
		}

		[Token(Token = "0x6001809")]
		[Address(RVA = "0xA289F4", Offset = "0xA289F4", VA = "0xA289F4")]
		internal bool <SetParameterSynchronized>b__0(SynchronizedParameter item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator m_Animator;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PhotonStreamQueue m_StreamQueue;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	[SerializeField]
	private bool ShowLayerWeightsInspector;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[HideInInspector]
	[SerializeField]
	private bool ShowParameterInspector;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	[SerializeField]
	private List<SynchronizedParameter> m_SynchronizeParameters;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	[SerializeField]
	private List<SynchronizedLayer> m_SynchronizeLayers;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 m_ReceiverPosition;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float m_LastDeserializeTime;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool m_WasSynchronizeTypeChanged;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private PhotonView m_PhotonView;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<string> m_raisedDiscreteTriggersCache;

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0xA26BEC", Offset = "0xA26BEC", VA = "0xA26BEC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0xA26C80", Offset = "0xA26C80", VA = "0xA26C80")]
	private void Update()
	{
	}

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0xA27368", Offset = "0xA27368", VA = "0xA27368")]
	public void CacheDiscreteTriggers()
	{
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0xA27724", Offset = "0xA27724", VA = "0xA27724")]
	public bool DoesLayerSynchronizeTypeExist(int layerIndex)
	{
		return default(bool);
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0xA277FC", Offset = "0xA277FC", VA = "0xA277FC")]
	public bool DoesParameterSynchronizeTypeExist(string name)
	{
		return default(bool);
	}

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0xA278D4", Offset = "0xA278D4", VA = "0xA278D4")]
	public List<SynchronizedLayer> GetSynchronizedLayers()
	{
		return null;
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0xA278DC", Offset = "0xA278DC", VA = "0xA278DC")]
	public List<SynchronizedParameter> GetSynchronizedParameters()
	{
		return null;
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0xA278E4", Offset = "0xA278E4", VA = "0xA278E4")]
	public SynchronizeType GetLayerSynchronizeType(int layerIndex)
	{
		return default(SynchronizeType);
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0xA279F8", Offset = "0xA279F8", VA = "0xA279F8")]
	public SynchronizeType GetParameterSynchronizeType(string name)
	{
		return default(SynchronizeType);
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0xA27B0C", Offset = "0xA27B0C", VA = "0xA27B0C")]
	public void SetLayerSynchronized(int layerIndex, SynchronizeType synchronizeType)
	{
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0xA27C94", Offset = "0xA27C94", VA = "0xA27C94")]
	public void SetParameterSynchronized(string name, ParameterType type, SynchronizeType synchronizeType)
	{
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0xA270C8", Offset = "0xA270C8", VA = "0xA270C8")]
	private void SerializeDataContinuously()
	{
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0xA27460", Offset = "0xA27460", VA = "0xA27460")]
	private void DeserializeDataContinuously()
	{
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0xA27E24", Offset = "0xA27E24", VA = "0xA27E24")]
	private void SerializeDataDiscretly(PhotonStream stream)
	{
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0xA280AC", Offset = "0xA280AC", VA = "0xA280AC")]
	private void DeserializeDataDiscretly(PhotonStream stream)
	{
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0xA28438", Offset = "0xA28438", VA = "0xA28438")]
	private void SerializeSynchronizationTypeState(PhotonStream stream)
	{
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0xA285B4", Offset = "0xA285B4", VA = "0xA285B4")]
	private void DeserializeSynchronizationTypeState(PhotonStream stream)
	{
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0xA28730", Offset = "0xA28730", VA = "0xA28730", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0xA28870", Offset = "0xA28870", VA = "0xA28870")]
	public PhotonAnimatorView()
	{
	}
}
[Token(Token = "0x20000EF")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6E08FC", Offset = "0x6E08FC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6E08FC", Offset = "0x6E08FC")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6E08FC", Offset = "0x6E08FC")]
public class PhotonRigidbody2DView : UnityEngine.MonoBehaviour, IPunObservable
{
	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool m_SynchronizeVelocity;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[SerializeField]
	private bool m_SynchronizeAngularVelocity;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody2D m_Body;

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0x93E818", Offset = "0x93E818", VA = "0x93E818")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0x93E870", Offset = "0x93E870", VA = "0x93E870", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0x93EB6C", Offset = "0x93EB6C", VA = "0x93EB6C")]
	public PhotonRigidbody2DView()
	{
	}
}
[Token(Token = "0x20000F0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6E09AC", Offset = "0x6E09AC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6E09AC", Offset = "0x6E09AC")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6E09AC", Offset = "0x6E09AC")]
public class PhotonRigidbodyView : UnityEngine.MonoBehaviour, IPunObservable
{
	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool m_SynchronizeVelocity;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[SerializeField]
	private bool m_SynchronizeAngularVelocity;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody m_Body;

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0x93EB7C", Offset = "0x93EB7C", VA = "0x93EB7C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0x93EBD4", Offset = "0x93EBD4", VA = "0x93EBD4", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0x93ED74", Offset = "0x93ED74", VA = "0x93ED74")]
	public PhotonRigidbodyView()
	{
	}
}
[Token(Token = "0x20000F1")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6E0A5C", Offset = "0x6E0A5C")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6E0A5C", Offset = "0x6E0A5C")]
public class PhotonTransformView : UnityEngine.MonoBehaviour, IPunObservable
{
	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public PhotonTransformViewPositionModel m_PositionModel;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public PhotonTransformViewRotationModel m_RotationModel;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public PhotonTransformViewScaleModel m_ScaleModel;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PhotonTransformViewPositionControl m_PositionControl;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PhotonTransformViewRotationControl m_RotationControl;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private PhotonTransformViewScaleControl m_ScaleControl;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private PhotonView m_PhotonView;

	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool m_ReceivedNetworkUpdate;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool m_firstTake;

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0x941ED0", Offset = "0x941ED0", VA = "0x941ED0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0x942114", Offset = "0x942114", VA = "0x942114")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0x942120", Offset = "0x942120", VA = "0x942120")]
	private void Update()
	{
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0x9422C4", Offset = "0x9422C4", VA = "0x9422C4")]
	private void UpdatePosition()
	{
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0x942358", Offset = "0x942358", VA = "0x942358")]
	private void UpdateRotation()
	{
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0x9423EC", Offset = "0x9423EC", VA = "0x9423EC")]
	private void UpdateScale()
	{
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0x942AE8", Offset = "0x942AE8", VA = "0x942AE8")]
	public void SetSynchronizedValues(Vector3 speed, float turnSpeed)
	{
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0x942B14", Offset = "0x942B14", VA = "0x942B14", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0x942FE0", Offset = "0x942FE0", VA = "0x942FE0")]
	private void DoDrawEstimatedPositionError()
	{
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0x943300", Offset = "0x943300", VA = "0x943300")]
	public PhotonTransformView()
	{
	}
}
[Token(Token = "0x20000F2")]
public class PhotonTransformViewPositionControl
{
	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private PhotonTransformViewPositionModel m_Model;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float m_CurrentSpeed;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private double m_LastSerializeTime;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 m_SynchronizedSpeed;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float m_SynchronizedTurnSpeed;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 m_NetworkPosition;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Queue<Vector3> m_OldNetworkPositions;

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool m_UpdatedPositionAfterOnSerialize;

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0x941FA0", Offset = "0x941FA0", VA = "0x941FA0")]
	public PhotonTransformViewPositionControl(PhotonTransformViewPositionModel model)
	{
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0x943624", Offset = "0x943624", VA = "0x943624")]
	private Vector3 GetOldestStoredNetworkPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0x942B08", Offset = "0x942B08", VA = "0x942B08")]
	public void SetSynchronizedValues(Vector3 speed, float turnSpeed)
	{
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0x942480", Offset = "0x942480", VA = "0x942480")]
	public Vector3 UpdatePosition(Vector3 currentPosition)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0x94399C", Offset = "0x94399C", VA = "0x94399C")]
	public Vector3 GetNetworkPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0x943698", Offset = "0x943698", VA = "0x943698")]
	public Vector3 GetExtrapolatedPositionOffset()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0x942CF0", Offset = "0x942CF0", VA = "0x942CF0")]
	public void OnPhotonSerializeView(Vector3 currentPosition, PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0x9439A8", Offset = "0x9439A8", VA = "0x9439A8")]
	private void SerializeData(Vector3 currentPosition, PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0x943AC0", Offset = "0x943AC0", VA = "0x943AC0")]
	private void DeserializeData(PhotonStream stream, PhotonMessageInfo info)
	{
	}
}
[Serializable]
[Token(Token = "0x20000F3")]
public class PhotonTransformViewPositionModel
{
	[Token(Token = "0x20003B0")]
	public enum InterpolateOptions
	{
		[Token(Token = "0x40012C2")]
		Disabled,
		[Token(Token = "0x40012C3")]
		FixedSpeed,
		[Token(Token = "0x40012C4")]
		EstimatedSpeed,
		[Token(Token = "0x40012C5")]
		SynchronizeValues,
		[Token(Token = "0x40012C6")]
		Lerp
	}

	[Token(Token = "0x20003B1")]
	public enum ExtrapolateOptions
	{
		[Token(Token = "0x40012C8")]
		Disabled,
		[Token(Token = "0x40012C9")]
		SynchronizeValues,
		[Token(Token = "0x40012CA")]
		EstimateSpeedAndTurn,
		[Token(Token = "0x40012CB")]
		FixedSpeed
	}

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool SynchronizeEnabled;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool TeleportEnabled;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float TeleportIfDistanceGreaterThan;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InterpolateOptions InterpolateOption;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float InterpolateMoveTowardsSpeed;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float InterpolateLerpSpeed;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float InterpolateMoveTowardsAcceleration;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float InterpolateMoveTowardsDeceleration;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve InterpolateSpeedCurve;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ExtrapolateOptions ExtrapolateOption;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float ExtrapolateSpeed;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool ExtrapolateIncludingRoundTripTime;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int ExtrapolateNumberOfStoredPositions;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool DrawErrorGizmo;

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0x9433C0", Offset = "0x9433C0", VA = "0x9433C0")]
	public PhotonTransformViewPositionModel()
	{
	}
}
[Token(Token = "0x20000F4")]
public class PhotonTransformViewRotationControl
{
	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private PhotonTransformViewRotationModel m_Model;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Quaternion m_NetworkRotation;

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0x94205C", Offset = "0x94205C", VA = "0x94205C")]
	public PhotonTransformViewRotationControl(PhotonTransformViewRotationModel model)
	{
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0x943C68", Offset = "0x943C68", VA = "0x943C68")]
	public Quaternion GetNetworkRotation()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0x94280C", Offset = "0x94280C", VA = "0x94280C")]
	public Quaternion GetRotation(Quaternion currentRotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0x942DD0", Offset = "0x942DD0", VA = "0x942DD0")]
	public void OnPhotonSerializeView(Quaternion currentRotation, PhotonStream stream, PhotonMessageInfo info)
	{
	}
}
[Serializable]
[Token(Token = "0x20000F5")]
public class PhotonTransformViewRotationModel
{
	[Token(Token = "0x20003B2")]
	public enum InterpolateOptions
	{
		[Token(Token = "0x40012CD")]
		Disabled,
		[Token(Token = "0x40012CE")]
		RotateTowards,
		[Token(Token = "0x40012CF")]
		Lerp
	}

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool SynchronizeEnabled;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public InterpolateOptions InterpolateOption;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float InterpolateRotateTowardsSpeed;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float InterpolateLerpSpeed;

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0x9435F8", Offset = "0x9435F8", VA = "0x9435F8")]
	public PhotonTransformViewRotationModel()
	{
	}
}
[Token(Token = "0x20000F6")]
public class PhotonTransformViewScaleControl
{
	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private PhotonTransformViewScaleModel m_Model;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 m_NetworkScale;

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0x942088", Offset = "0x942088", VA = "0x942088")]
	public PhotonTransformViewScaleControl(PhotonTransformViewScaleModel model)
	{
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0x943C74", Offset = "0x943C74", VA = "0x943C74")]
	public Vector3 GetNetworkScale()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0x942994", Offset = "0x942994", VA = "0x942994")]
	public Vector3 GetScale(Vector3 currentScale)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0x942ED8", Offset = "0x942ED8", VA = "0x942ED8")]
	public void OnPhotonSerializeView(Vector3 currentScale, PhotonStream stream, PhotonMessageInfo info)
	{
	}
}
[Serializable]
[Token(Token = "0x20000F7")]
public class PhotonTransformViewScaleModel
{
	[Token(Token = "0x20003B3")]
	public enum InterpolateOptions
	{
		[Token(Token = "0x40012D1")]
		Disabled,
		[Token(Token = "0x40012D2")]
		MoveTowards,
		[Token(Token = "0x40012D3")]
		Lerp
	}

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool SynchronizeEnabled;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public InterpolateOptions InterpolateOption;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float InterpolateMoveTowardsSpeed;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float InterpolateLerpSpeed;

	[Token(Token = "0x6000603")]
	[Address(RVA = "0x943614", Offset = "0x943614", VA = "0x943614")]
	public PhotonTransformViewScaleModel()
	{
	}
}
[Token(Token = "0x20000F8")]
public class ConnectAndJoinRandom : Photon.MonoBehaviour
{
	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool AutoConnect;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public byte Version;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	private bool ConnectInUpdate;

	[Token(Token = "0x6000604")]
	[Address(RVA = "0x9C02E0", Offset = "0x9C02E0", VA = "0x9C02E0", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0x9C0344", Offset = "0x9C0344", VA = "0x9C0344", Slot = "5")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0x9C048C", Offset = "0x9C048C", VA = "0x9C048C", Slot = "6")]
	public virtual void OnConnectedToMaster()
	{
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0x9C0520", Offset = "0x9C0520", VA = "0x9C0520", Slot = "7")]
	public virtual void OnJoinedLobby()
	{
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0x9C05B4", Offset = "0x9C05B4", VA = "0x9C05B4", Slot = "8")]
	public virtual void OnPhotonRandomJoinFailed()
	{
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0x9C0680", Offset = "0x9C0680", VA = "0x9C0680", Slot = "9")]
	public virtual void OnFailedToConnectToPhoton(DisconnectCause cause)
	{
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0x9C0730", Offset = "0x9C0730", VA = "0x9C0730")]
	public void OnJoinedRoom()
	{
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0x9C079C", Offset = "0x9C079C", VA = "0x9C079C")]
	public ConnectAndJoinRandom()
	{
	}
}
[Token(Token = "0x20000F9")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x6E0AE4", Offset = "0x6E0AE4")]
public class CullArea : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000635")]
	private const int MAX_NUMBER_OF_ALLOWED_CELLS = 250;

	[Token(Token = "0x4000636")]
	public const int MAX_NUMBER_OF_SUBDIVISIONS = 3;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly byte FIRST_GROUP_ID;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public readonly int[] SUBDIVISION_FIRST_LEVEL_ORDER;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public readonly int[] SUBDIVISION_SECOND_LEVEL_ORDER;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public readonly int[] SUBDIVISION_THIRD_LEVEL_ORDER;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector2 Center;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector2 Size;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector2[] Subdivisions;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int NumberOfSubdivisions;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E3810", Offset = "0x6E3810")]
	private int <CellCount>k__BackingField;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E3820", Offset = "0x6E3820")]
	private CellTree <CellTree>k__BackingField;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E3830", Offset = "0x6E3830")]
	private Dictionary<int, GameObject> <Map>k__BackingField;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool YIsUpAxis;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	public bool RecreateCellHierarchy;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
	private byte idCounter;

	[Token(Token = "0x170000CE")]
	public int CellCount
	{
		[Token(Token = "0x600060C")]
		[Address(RVA = "0x96F7EC", Offset = "0x96F7EC", VA = "0x96F7EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EB2C8", Offset = "0x6EB2C8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600060D")]
		[Address(RVA = "0x96F7F4", Offset = "0x96F7F4", VA = "0x96F7F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EB2D8", Offset = "0x6EB2D8")]
		private set
		{
		}
	}

	[Token(Token = "0x170000CF")]
	public CellTree CellTree
	{
		[Token(Token = "0x600060E")]
		[Address(RVA = "0x96F7FC", Offset = "0x96F7FC", VA = "0x96F7FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EB2E8", Offset = "0x6EB2E8")]
		get
		{
			return null;
		}
		[Token(Token = "0x600060F")]
		[Address(RVA = "0x96F804", Offset = "0x96F804", VA = "0x96F804")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EB2F8", Offset = "0x6EB2F8")]
		private set
		{
		}
	}

	[Token(Token = "0x170000D0")]
	public Dictionary<int, GameObject> Map
	{
		[Token(Token = "0x6000610")]
		[Address(RVA = "0x96F80C", Offset = "0x96F80C", VA = "0x96F80C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EB308", Offset = "0x6EB308")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000611")]
		[Address(RVA = "0x96F814", Offset = "0x96F814", VA = "0x96F814")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EB318", Offset = "0x6EB318")]
		private set
		{
		}
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0x96F81C", Offset = "0x96F81C", VA = "0x96F81C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0x96FDA4", Offset = "0x96FDA4", VA = "0x96FDA4")]
	public void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0x96F828", Offset = "0x96F828", VA = "0x96F828")]
	private void CreateCellHierarchy()
	{
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0x96FECC", Offset = "0x96FECC", VA = "0x96FECC")]
	private void CreateChildCells(CellTreeNode parent, int cellLevelInHierarchy)
	{
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0x96FE00", Offset = "0x96FE00", VA = "0x96FE00")]
	private void DrawCells()
	{
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0x96FE28", Offset = "0x96FE28", VA = "0x96FE28")]
	private bool IsCellCountAllowed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0x970274", Offset = "0x970274", VA = "0x970274")]
	public List<byte> GetActiveCells(Vector3 position)
	{
		return null;
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0x97032C", Offset = "0x97032C", VA = "0x97032C")]
	public CullArea()
	{
	}
}
[Token(Token = "0x20000FA")]
public class CellTree
{
	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E3840", Offset = "0x6E3840")]
	private CellTreeNode <RootNode>k__BackingField;

	[Token(Token = "0x170000D1")]
	public CellTreeNode RootNode
	{
		[Token(Token = "0x600061A")]
		[Address(RVA = "0x9B3110", Offset = "0x9B3110", VA = "0x9B3110")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EB328", Offset = "0x6EB328")]
		get
		{
			return null;
		}
		[Token(Token = "0x600061B")]
		[Address(RVA = "0x9B3118", Offset = "0x9B3118", VA = "0x9B3118")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EB338", Offset = "0x6EB338")]
		private set
		{
		}
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0x9B3120", Offset = "0x9B3120", VA = "0x9B3120")]
	public CellTree()
	{
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0x9B3128", Offset = "0x9B3128", VA = "0x9B3128")]
	public CellTree(CellTreeNode root)
	{
	}
}
[Token(Token = "0x20000FB")]
public class CellTreeNode
{
	[Token(Token = "0x20003B4")]
	public enum ENodeType
	{
		[Token(Token = "0x40012D5")]
		Root,
		[Token(Token = "0x40012D6")]
		Node,
		[Token(Token = "0x40012D7")]
		Leaf
	}

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public byte Id;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector3 Center;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 Size;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 TopLeft;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 BottomRight;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public ENodeType NodeType;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public CellTreeNode Parent;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<CellTreeNode> Childs;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float maxDistance;

	[Token(Token = "0x600061E")]
	[Address(RVA = "0x9B3154", Offset = "0x9B3154", VA = "0x9B3154")]
	public CellTreeNode()
	{
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0x9B315C", Offset = "0x9B315C", VA = "0x9B315C")]
	public CellTreeNode(byte id, ENodeType nodeType, CellTreeNode parent)
	{
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0x9B31A0", Offset = "0x9B31A0", VA = "0x9B31A0")]
	public void AddChild(CellTreeNode child)
	{
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0x9B323C", Offset = "0x9B323C", VA = "0x9B323C")]
	public void Draw()
	{
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0x9B3240", Offset = "0x9B3240", VA = "0x9B3240")]
	public void GetActiveCells(List<byte> activeCells, bool yIsUpAxis, Vector3 position)
	{
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0x9B3520", Offset = "0x9B3520", VA = "0x9B3520")]
	public bool IsPointInsideCell(bool yIsUpAxis, Vector3 point)
	{
		return default(bool);
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0x9B3418", Offset = "0x9B3418", VA = "0x9B3418")]
	public bool IsPointNearCell(bool yIsUpAxis, Vector3 point)
	{
		return default(bool);
	}
}
[Token(Token = "0x20000FC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6E0B1C", Offset = "0x6E0B1C")]
public class InRoomChat : Photon.MonoBehaviour
{
	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Rect GuiRect;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool IsVisible;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool AlignBottom;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<string> messages;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string inputLine;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector2 scrollPos;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string ChatRPC;

	[Token(Token = "0x6000625")]
	[Address(RVA = "0x9586B8", Offset = "0x9586B8", VA = "0x9586B8")]
	public void Start()
	{
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0x958708", Offset = "0x958708", VA = "0x958708")]
	public void OnGUI()
	{
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0x958D84", Offset = "0x958D84", VA = "0x958D84")]
	[PunRPC]
	public void Chat(string newLine, PhotonMessageInfo mi)
	{
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0x958E8C", Offset = "0x958E8C", VA = "0x958E8C")]
	public void AddLine(string newLine)
	{
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0x958EF4", Offset = "0x958EF4", VA = "0x958EF4")]
	public InRoomChat()
	{
	}
}
[Token(Token = "0x20000FD")]
public class InputToEvent : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject lastGo;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Vector3 inputHitPos;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool DetectPointedAtGameObject;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E3850", Offset = "0x6E3850")]
	private static GameObject <goPointedAt>k__BackingField;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector2 pressedPosition;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector2 currentPos;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool Dragging;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera m_Camera;

	[Token(Token = "0x170000D2")]
	public static GameObject goPointedAt
	{
		[Token(Token = "0x600062B")]
		[Address(RVA = "0x95E674", Offset = "0x95E674", VA = "0x95E674")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EB358", Offset = "0x6EB358")]
		get
		{
			return null;
		}
		[Token(Token = "0x600062C")]
		[Address(RVA = "0x95E6C4", Offset = "0x95E6C4", VA = "0x95E6C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EB368", Offset = "0x6EB368")]
		private set
		{
		}
	}

	[Token(Token = "0x170000D3")]
	public Vector2 DragVector
	{
		[Token(Token = "0x600062D")]
		[Address(RVA = "0x95E718", Offset = "0x95E718", VA = "0x95E718")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0x95E7E4", Offset = "0x95E7E4", VA = "0x95E7E4")]
	private void Start()
	{
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0x95E83C", Offset = "0x95E83C", VA = "0x95E83C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0x95ECB0", Offset = "0x95ECB0", VA = "0x95ECB0")]
	private void Press(Vector2 screenPos)
	{
	}

	[Token(Token = "0x6000631")]
	[Address(RVA = "0x95ED88", Offset = "0x95ED88", VA = "0x95ED88")]
	private void Release(Vector2 screenPos)
	{
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0x95EB8C", Offset = "0x95EB8C", VA = "0x95EB8C")]
	private GameObject RaycastObject(Vector2 screenPos)
	{
		return null;
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0x95EED8", Offset = "0x95EED8", VA = "0x95EED8")]
	public InputToEvent()
	{
	}
}
[Token(Token = "0x20000FE")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6E0B80", Offset = "0x6E0B80")]
public class ManualPhotonViewAllocator : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Prefab;

	[Token(Token = "0x6000634")]
	[Address(RVA = "0x8D5334", Offset = "0x8D5334", VA = "0x8D5334")]
	public void AllocateManualPhotonView()
	{
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0x8D5504", Offset = "0x8D5504", VA = "0x8D5504")]
	[PunRPC]
	public void InstantiateRpc(int viewID)
	{
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0x8D56F0", Offset = "0x8D56F0", VA = "0x8D56F0")]
	public ManualPhotonViewAllocator()
	{
	}
}
[Token(Token = "0x20000FF")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6E0BE4", Offset = "0x6E0BE4")]
public class MoveByKeys : Photon.MonoBehaviour
{
	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float JumpForce;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float JumpTimeout;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool isSprite;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float jumpingTime;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody body;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Rigidbody2D body2d;

	[Token(Token = "0x6000637")]
	[Address(RVA = "0x8DC0D0", Offset = "0x8DC0D0", VA = "0x8DC0D0")]
	public void Start()
	{
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0x8DC194", Offset = "0x8DC194", VA = "0x8DC194")]
	public void FixedUpdate()
	{
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0x8DC604", Offset = "0x8DC604", VA = "0x8DC604")]
	public MoveByKeys()
	{
	}
}
[Token(Token = "0x2000100")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6E0C48", Offset = "0x6E0C48")]
public class NetworkCullingHandler : UnityEngine.MonoBehaviour, IPunObservable
{
	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int orderIndex;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CullArea cullArea;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<byte> previousActiveCells;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<byte> activeCells;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PhotonView pView;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 lastPosition;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 currentPosition;

	[Token(Token = "0x600063A")]
	[Address(RVA = "0x8DF38C", Offset = "0x8DF38C", VA = "0x8DF38C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0x8DF500", Offset = "0x8DF500", VA = "0x8DF500")]
	private void Start()
	{
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0x8DF608", Offset = "0x8DF608", VA = "0x8DF608")]
	private void Update()
	{
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0x8DFA88", Offset = "0x8DFA88", VA = "0x8DFA88")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0x8DF728", Offset = "0x8DF728", VA = "0x8DF728")]
	private bool HaveActiveCellsChanged()
	{
		return default(bool);
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0x8DF8A4", Offset = "0x8DF8A4", VA = "0x8DF8A4")]
	private void UpdateInterestGroups()
	{
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0x8DFE50", Offset = "0x8DFE50", VA = "0x8DFE50", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0x8DFFCC", Offset = "0x8DFFCC", VA = "0x8DFFCC")]
	public NetworkCullingHandler()
	{
	}
}
[Token(Token = "0x2000101")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6E0CAC", Offset = "0x6E0CAC")]
public class OnClickDestroy : Photon.MonoBehaviour
{
	[Token(Token = "0x20003B5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E1AA4", Offset = "0x6E1AA4")]
	private sealed class <DestroyRpc>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OnClickDestroy <>4__this;

		[Token(Token = "0x17000246")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600180D")]
			[Address(RVA = "0xA41E8C", Offset = "0xA41E8C", VA = "0xA41E8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000247")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600180F")]
			[Address(RVA = "0xA41EF4", Offset = "0xA41EF4", VA = "0xA41EF4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600180A")]
		[Address(RVA = "0xA41D34", Offset = "0xA41D34", VA = "0xA41D34")]
		[DebuggerHidden]
		public <DestroyRpc>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x600180B")]
		[Address(RVA = "0xA41D68", Offset = "0xA41D68", VA = "0xA41D68", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600180C")]
		[Address(RVA = "0xA41D6C", Offset = "0xA41D6C", VA = "0xA41D6C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600180E")]
		[Address(RVA = "0xA41E94", Offset = "0xA41E94", VA = "0xA41E94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool DestroyByRpc;

	[Token(Token = "0x6000642")]
	[Address(RVA = "0xA41B6C", Offset = "0xA41B6C", VA = "0xA41B6C")]
	public void OnClick()
	{
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0xA41CC4", Offset = "0xA41CC4", VA = "0xA41CC4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6EB388", Offset = "0x6EB388")]
	[PunRPC]
	public IEnumerator DestroyRpc()
	{
		return null;
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0xA41D60", Offset = "0xA41D60", VA = "0xA41D60")]
	public OnClickDestroy()
	{
	}
}
[Token(Token = "0x2000102")]
public class OnClickInstantiate : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Prefab;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int InstantiateType;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string[] InstantiateTypeNames;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool showGui;

	[Token(Token = "0x6000645")]
	[Address(RVA = "0xA41EFC", Offset = "0xA41EFC", VA = "0xA41EFC")]
	private void OnClick()
	{
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0xA421CC", Offset = "0xA421CC", VA = "0xA421CC")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0xA42320", Offset = "0xA42320", VA = "0xA42320")]
	public OnClickInstantiate()
	{
	}
}
[Token(Token = "0x2000103")]
public class OnJoinedInstantiatePlayers : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float PositionOffset;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject playerPrefab;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject avatarPrefab;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int aiPlayers;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E3860", Offset = "0x6E3860")]
	[SerializeField]
	private GameObject[] sceneObjects;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject[] localSceneObjects;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static OnJoinedInstantiatePlayers instance;

	[Token(Token = "0x6000648")]
	[Address(RVA = "0xA4267C", Offset = "0xA4267C", VA = "0xA4267C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0xA42730", Offset = "0xA42730", VA = "0xA42730")]
	public void OnJoinedRoom()
	{
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0xA42844", Offset = "0xA42844", VA = "0xA42844")]
	private void OnLeftRoom()
	{
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0xA42948", Offset = "0xA42948", VA = "0xA42948")]
	private void CreateLocalPlayer1()
	{
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0xA42734", Offset = "0xA42734", VA = "0xA42734")]
	public void RefreshLocalPlayers()
	{
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0xA42CA4", Offset = "0xA42CA4", VA = "0xA42CA4")]
	public void OnCreatedRoom()
	{
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0xA42FA0", Offset = "0xA42FA0", VA = "0xA42FA0")]
	public OnJoinedInstantiatePlayers()
	{
	}
}
[Token(Token = "0x2000104")]
public class OnStartDelete : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x600064F")]
	[Address(RVA = "0xA42FB8", Offset = "0xA42FB8", VA = "0xA42FB8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0xA43034", Offset = "0xA43034", VA = "0xA43034")]
	public OnStartDelete()
	{
	}
}
[Token(Token = "0x2000105")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6E0D10", Offset = "0x6E0D10")]
public class PickupItem : Photon.MonoBehaviour, IPunObservable
{
	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float SecondsBeforeRespawn;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool PickupOnTrigger;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool PickupIsMine;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEngine.MonoBehaviour OnPickedUpCall;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool SentPickup;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public double TimeOfRespawn;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static HashSet<PickupItem> DisabledPickupItems;

	[Token(Token = "0x170000D4")]
	public int ViewID
	{
		[Token(Token = "0x6000651")]
		[Address(RVA = "0x945A4C", Offset = "0x945A4C", VA = "0x945A4C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0x945A70", Offset = "0x945A70", VA = "0x945A70")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0x945C5C", Offset = "0x945C5C", VA = "0x945C5C", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0x945B3C", Offset = "0x945B3C", VA = "0x945B3C")]
	public void Pickup()
	{
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0x945DAC", Offset = "0x945DAC", VA = "0x945DAC")]
	public void Drop()
	{
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0x945EC4", Offset = "0x945EC4", VA = "0x945EC4")]
	public void Drop(Vector3 newPosition)
	{
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0x945FE8", Offset = "0x945FE8", VA = "0x945FE8")]
	[PunRPC]
	public void PunPickup(PhotonMessageInfo msgInfo)
	{
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0x9463CC", Offset = "0x9463CC", VA = "0x9463CC")]
	internal void PickedUp(float timeUntilRespawn)
	{
	}

	[Token(Token = "0x6000659")]
	[Address(RVA = "0x9464E4", Offset = "0x9464E4", VA = "0x9464E4")]
	[PunRPC]
	internal void PunRespawn(Vector3 pos)
	{
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0x9465AC", Offset = "0x9465AC", VA = "0x9465AC")]
	[PunRPC]
	internal void PunRespawn()
	{
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0x9466A8", Offset = "0x9466A8", VA = "0x9466A8")]
	public PickupItem()
	{
	}
}
[Token(Token = "0x2000106")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6E0D74", Offset = "0x6E0D74")]
public class PickupItemSimple : Photon.MonoBehaviour
{
	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float SecondsBeforeRespawn;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool PickupOnCollide;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool SentPickup;

	[Token(Token = "0x600065D")]
	[Address(RVA = "0x94672C", Offset = "0x94672C", VA = "0x94672C")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0x9467F8", Offset = "0x9467F8", VA = "0x9467F8")]
	public void Pickup()
	{
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0x946918", Offset = "0x946918", VA = "0x946918")]
	[PunRPC]
	public void PunPickupSimple(PhotonMessageInfo msgInfo)
	{
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0x946ABC", Offset = "0x946ABC", VA = "0x946ABC")]
	public void RespawnAfter()
	{
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0x946B6C", Offset = "0x946B6C", VA = "0x946B6C")]
	public PickupItemSimple()
	{
	}
}
[Token(Token = "0x2000107")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6E0DD8", Offset = "0x6E0DD8")]
public class PickupItemSyncer : Photon.MonoBehaviour
{
	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool IsWaitingForPickupInit;

	[Token(Token = "0x4000684")]
	private const float TimeDeltaToIgnore = 0.2f;

	[Token(Token = "0x6000662")]
	[Address(RVA = "0x946B7C", Offset = "0x946B7C", VA = "0x946B7C")]
	public void OnPhotonPlayerConnected(PhotonPlayer newPlayer)
	{
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0x94738C", Offset = "0x94738C", VA = "0x94738C")]
	public void OnJoinedRoom()
	{
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0x9475B8", Offset = "0x9475B8", VA = "0x9475B8")]
	public void AskForPickupItemSpawnTimes()
	{
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0x947834", Offset = "0x947834", VA = "0x947834")]
	[PunRPC]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6EB43C", Offset = "0x6EB43C")]
	public void RequestForPickupTimes(PhotonMessageInfo msgInfo)
	{
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0x947864", Offset = "0x947864", VA = "0x947864")]
	[PunRPC]
	public void RequestForPickupItems(PhotonMessageInfo msgInfo)
	{
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0x946C0C", Offset = "0x946C0C", VA = "0x946C0C")]
	private void SendPickedUpItems(PhotonPlayer targetPlayer)
	{
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0x9478FC", Offset = "0x9478FC", VA = "0x9478FC")]
	[PunRPC]
	public void PickupItemInit(double timeBase, float[] inactivePickupsAndTimes)
	{
	}

	[Token(Token = "0x6000669")]
	[Address(RVA = "0x947C84", Offset = "0x947C84", VA = "0x947C84")]
	public PickupItemSyncer()
	{
	}
}
[Token(Token = "0x2000108")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6E0E3C", Offset = "0x6E0E3C")]
public class PointedAtGameObjectInfo : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x600066A")]
	[Address(RVA = "0x94E104", Offset = "0x94E104", VA = "0x94E104")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0x94E3BC", Offset = "0x94E3BC", VA = "0x94E3BC")]
	public PointedAtGameObjectInfo()
	{
	}
}
[Token(Token = "0x2000109")]
public class PunPlayerScores : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000685")]
	public const string PlayerScoreProp = "score";

	[Token(Token = "0x4000686")]
	public const string PlayerLivesProp = "lives";

	[Token(Token = "0x4000687")]
	public const string PlayerIndexProp = "index";

	[Token(Token = "0x4000688")]
	public const string PlayerRankProp = "rank";

	[Token(Token = "0x4000689")]
	public const string PlayerAliveProp = "alive";

	[Token(Token = "0x600066C")]
	[Address(RVA = "0x94F804", Offset = "0x94F804", VA = "0x94F804")]
	public PunPlayerScores()
	{
	}
}
[Token(Token = "0x200010A")]
public static class ScoreExtensions
{
	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ExitGames.Client.Photon.Hashtable score;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int current;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static object scoreObject;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static ExitGames.Client.Photon.Hashtable lives;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static object livesObject;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static int[] rankIndexes;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static ExitGames.Client.Photon.Hashtable index;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static object indexObject;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static ExitGames.Client.Photon.Hashtable rank;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static object rankObject;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static object playerRankIndex;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static ExitGames.Client.Photon.Hashtable aliveHash;

	[Token(Token = "0x600066D")]
	[Address(RVA = "0x8F7424", Offset = "0x8F7424", VA = "0x8F7424")]
	public static void SetScore(this PhotonPlayer player, int newScore)
	{
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0x8F7C38", Offset = "0x8F7C38", VA = "0x8F7C38")]
	public static void AddScore(this PhotonPlayer player, int scoreToAddToCurrent)
	{
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0x8F7D88", Offset = "0x8F7D88", VA = "0x8F7D88")]
	public static int GetScore(this PhotonPlayer player)
	{
		return default(int);
	}

	[Token(Token = "0x6000670")]
	[Address(RVA = "0x8F7E84", Offset = "0x8F7E84", VA = "0x8F7E84")]
	public static void SetLives(this PhotonPlayer player, int newLives)
	{
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0x8F7F64", Offset = "0x8F7F64", VA = "0x8F7F64")]
	public static void AddLives(this PhotonPlayer player, int livesToAddToCurrent)
	{
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0x8F80B0", Offset = "0x8F80B0", VA = "0x8F80B0")]
	public static int GetLives(this PhotonPlayer player)
	{
		return default(int);
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0x8F7508", Offset = "0x8F7508", VA = "0x8F7508")]
	public static void UpdateIndexAndRank()
	{
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0x8F81AC", Offset = "0x8F81AC", VA = "0x8F81AC")]
	private static void SetIndex(this PhotonPlayer player, int newIndex)
	{
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0x8F836C", Offset = "0x8F836C", VA = "0x8F836C")]
	public static int GetIndex(this PhotonPlayer player)
	{
		return default(int);
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0x8F828C", Offset = "0x8F828C", VA = "0x8F828C")]
	private static void SetRank(this PhotonPlayer player, int newRank)
	{
	}

	[Token(Token = "0x6000677")]
	[Address(RVA = "0x8F8468", Offset = "0x8F8468", VA = "0x8F8468")]
	public static int GetRank(this PhotonPlayer player)
	{
		return default(int);
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0x8F8564", Offset = "0x8F8564", VA = "0x8F8564")]
	public static PhotonPlayer GetPlayerFromRankIndex(int rankIndex)
	{
		return null;
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0x8F874C", Offset = "0x8F874C", VA = "0x8F874C")]
	public static bool GetAlive(this PhotonPlayer player)
	{
		return default(bool);
	}

	[Token(Token = "0x600067A")]
	[Address(RVA = "0x8F8810", Offset = "0x8F8810", VA = "0x8F8810")]
	public static void SetAlive(this PhotonPlayer player, bool alive)
	{
	}
}
[Token(Token = "0x200010B")]
public class PunTeams : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20003B6")]
	public enum Team : byte
	{
		[Token(Token = "0x40012DC")]
		none,
		[Token(Token = "0x40012DD")]
		red,
		[Token(Token = "0x40012DE")]
		blue
	}

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<Team, List<PhotonPlayer>> PlayersPerTeam;

	[Token(Token = "0x4000697")]
	public const string TeamPlayerProp = "team";

	[Token(Token = "0x600067C")]
	[Address(RVA = "0x94F814", Offset = "0x94F814", VA = "0x94F814")]
	public void Start()
	{
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0x94FB60", Offset = "0x94FB60", VA = "0x94FB60")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x600067E")]
	[Address(RVA = "0x94FBD4", Offset = "0x94FBD4", VA = "0x94FBD4")]
	public void OnJoinedRoom()
	{
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0x94FFB0", Offset = "0x94FFB0", VA = "0x94FFB0")]
	public void OnLeftRoom()
	{
	}

	[Token(Token = "0x6000680")]
	[Address(RVA = "0x94FFB4", Offset = "0x94FFB4", VA = "0x94FFB4")]
	public void OnPhotonPlayerPropertiesChanged(object[] playerAndUpdatedProps)
	{
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0x94FFB8", Offset = "0x94FFB8", VA = "0x94FFB8")]
	public void OnPhotonPlayerDisconnected(PhotonPlayer otherPlayer)
	{
	}

	[Token(Token = "0x6000682")]
	[Address(RVA = "0x94FFBC", Offset = "0x94FFBC", VA = "0x94FFBC")]
	public void OnPhotonPlayerConnected(PhotonPlayer newPlayer)
	{
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0x94FBD8", Offset = "0x94FBD8", VA = "0x94FBD8")]
	public void UpdateTeams()
	{
	}

	[Token(Token = "0x6000684")]
	[Address(RVA = "0x94FFC0", Offset = "0x94FFC0", VA = "0x94FFC0")]
	public PunTeams()
	{
	}
}
[Token(Token = "0x200010C")]
public static class TeamExtensions
{
	[Token(Token = "0x6000685")]
	[Address(RVA = "0x9036D8", Offset = "0x9036D8", VA = "0x9036D8")]
	public static PunTeams.Team GetTeam(this PhotonPlayer player)
	{
		return default(PunTeams.Team);
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0x903794", Offset = "0x903794", VA = "0x903794")]
	public static void SetTeam(this PhotonPlayer player, PunTeams.Team team)
	{
	}
}
[Token(Token = "0x200010D")]
public class PunTurnManager : PunBehaviour
{
	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float TurnDuration;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IPunTurnManagerCallbacks TurnManagerListener;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly HashSet<PhotonPlayer> finishedPlayers;

	[Token(Token = "0x400069B")]
	public const byte TurnManagerEventOffset = 0;

	[Token(Token = "0x400069C")]
	public const byte EvMove = 1;

	[Token(Token = "0x400069D")]
	public const byte EvFinalMove = 2;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _isOverCallProcessed;

	[Token(Token = "0x170000D5")]
	public int Turn
	{
		[Token(Token = "0x6000687")]
		[Address(RVA = "0x94FFC8", Offset = "0x94FFC8", VA = "0x94FFC8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000688")]
		[Address(RVA = "0x95005C", Offset = "0x95005C", VA = "0x95005C")]
		private set
		{
		}
	}

	[Token(Token = "0x170000D6")]
	public float ElapsedTimeInTurn
	{
		[Token(Token = "0x6000689")]
		[Address(RVA = "0x95010C", Offset = "0x95010C", VA = "0x95010C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000D7")]
	public float RemainingSecondsInTurn
	{
		[Token(Token = "0x600068A")]
		[Address(RVA = "0x9501C4", Offset = "0x9501C4", VA = "0x9501C4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000D8")]
	public bool IsCompletedByAll
	{
		[Token(Token = "0x600068B")]
		[Address(RVA = "0x950244", Offset = "0x950244", VA = "0x950244")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000D9")]
	public bool IsFinishedByMe
	{
		[Token(Token = "0x600068C")]
		[Address(RVA = "0x950398", Offset = "0x950398", VA = "0x950398")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000DA")]
	public bool IsOver
	{
		[Token(Token = "0x600068D")]
		[Address(RVA = "0x950420", Offset = "0x950420", VA = "0x950420")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600068E")]
	[Address(RVA = "0x95043C", Offset = "0x95043C", VA = "0x95043C")]
	private void Start()
	{
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0x9504D0", Offset = "0x9504D0", VA = "0x9504D0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0x9505C8", Offset = "0x9505C8", VA = "0x9505C8")]
	public void BeginTurn()
	{
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0x9505F0", Offset = "0x9505F0", VA = "0x9505F0")]
	public void SendMove(object move, bool finished)
	{
	}

	[Token(Token = "0x6000692")]
	[Address(RVA = "0x950BC0", Offset = "0x950BC0", VA = "0x950BC0")]
	public bool GetPlayerFinishedTurn(PhotonPlayer player)
	{
		return default(bool);
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0x950838", Offset = "0x950838", VA = "0x950838")]
	public void OnEvent(byte eventCode, object content, int senderId)
	{
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0x950C3C", Offset = "0x950C3C", VA = "0x950C3C", Slot = "52")]
	public override void OnPhotonCustomRoomPropertiesChanged(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
	{
	}

	[Token(Token = "0x6000695")]
	[Address(RVA = "0x950D58", Offset = "0x950D58", VA = "0x950D58")]
	public PunTurnManager()
	{
	}
}
[Token(Token = "0x200010E")]
public interface IPunTurnManagerCallbacks
{
	[Token(Token = "0x6000696")]
	void OnTurnBegins(int turn);

	[Token(Token = "0x6000697")]
	void OnTurnCompleted(int turn);

	[Token(Token = "0x6000698")]
	void OnPlayerMove(PhotonPlayer player, int turn, object move);

	[Token(Token = "0x6000699")]
	void OnPlayerFinished(PhotonPlayer player, int turn, object move);

	[Token(Token = "0x600069A")]
	void OnTurnTimeEnds(int turn);
}
[Token(Token = "0x200010F")]
public static class TurnExtensions
{
	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string TurnPropKey;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string TurnStartPropKey;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly string FinishedTurnPropKey;

	[Token(Token = "0x600069B")]
	[Address(RVA = "0xAB93D4", Offset = "0xAB93D4", VA = "0xAB93D4")]
	public static void SetTurn(this Room room, int turn, bool setStartTime = false)
	{
	}

	[Token(Token = "0x600069C")]
	[Address(RVA = "0xAB9550", Offset = "0xAB9550", VA = "0xAB9550")]
	public static int GetTurn(this RoomInfo room)
	{
		return default(int);
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0xAB965C", Offset = "0xAB965C", VA = "0xAB965C")]
	public static int GetTurnStart(this RoomInfo room)
	{
		return default(int);
	}

	[Token(Token = "0x600069E")]
	[Address(RVA = "0xAB9768", Offset = "0xAB9768", VA = "0xAB9768")]
	public static int GetFinishedTurn(this PhotonPlayer player)
	{
		return default(int);
	}

	[Token(Token = "0x600069F")]
	[Address(RVA = "0xAB98D4", Offset = "0xAB98D4", VA = "0xAB98D4")]
	public static void SetFinishedTurn(this PhotonPlayer player, int turn)
	{
	}
}
[Token(Token = "0x2000110")]
public class QuitOnEscapeOrBack : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x60006A1")]
	[Address(RVA = "0x950DD0", Offset = "0x950DD0", VA = "0x950DD0")]
	private void Update()
	{
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0x950DFC", Offset = "0x950DFC", VA = "0x950DFC")]
	public QuitOnEscapeOrBack()
	{
	}
}
[Token(Token = "0x2000111")]
public class ShowStatusWhenConnecting : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GUISkin Skin;

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0x8FB0E8", Offset = "0x8FB0E8", VA = "0x8FB0E8")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0x8FB458", Offset = "0x8FB458", VA = "0x8FB458")]
	private string GetConnectingDots()
	{
		return null;
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0x8FB528", Offset = "0x8FB528", VA = "0x8FB528")]
	public ShowStatusWhenConnecting()
	{
	}
}
[Token(Token = "0x2000112")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6E0ED0", Offset = "0x6E0ED0")]
public class SmoothSyncMovement : Photon.MonoBehaviour, IPunObservable
{
	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float SmoothingDelay;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 correctPlayerPos;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Quaternion correctPlayerRot;

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0x8FBDE4", Offset = "0x8FBDE4", VA = "0x8FBDE4")]
	public void Awake()
	{
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0x8FBF78", Offset = "0x8FBF78", VA = "0x8FBF78", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0x8FC0F0", Offset = "0x8FC0F0", VA = "0x8FC0F0")]
	public void Update()
	{
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0x8FC2DC", Offset = "0x8FC2DC", VA = "0x8FC2DC")]
	public SmoothSyncMovement()
	{
	}
}
[Token(Token = "0x2000113")]
public class SupportLogger : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool LogTrafficStats;

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0x90102C", Offset = "0x90102C", VA = "0x90102C")]
	public void Start()
	{
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0x901130", Offset = "0x901130", VA = "0x901130")]
	public SupportLogger()
	{
	}
}
[Token(Token = "0x2000114")]
public class SupportLogging : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool LogTrafficStats;

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0x901140", Offset = "0x901140", VA = "0x901140")]
	public void Start()
	{
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0x9011B0", Offset = "0x9011B0", VA = "0x9011B0")]
	protected void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0x9012A8", Offset = "0x9012A8", VA = "0x9012A8")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0x9012B0", Offset = "0x9012B0", VA = "0x9012B0")]
	public void LogStats()
	{
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0x901378", Offset = "0x901378", VA = "0x901378")]
	private void LogBasics()
	{
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0x90159C", Offset = "0x90159C", VA = "0x90159C")]
	public void OnConnectedToPhoton()
	{
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0x901650", Offset = "0x901650", VA = "0x901650")]
	public void OnFailedToConnectToPhoton(DisconnectCause cause)
	{
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0x901710", Offset = "0x901710", VA = "0x901710")]
	public void OnJoinedLobby()
	{
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0x9017CC", Offset = "0x9017CC", VA = "0x9017CC")]
	public void OnJoinedRoom()
	{
	}

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0x9019D0", Offset = "0x9019D0", VA = "0x9019D0")]
	public void OnCreatedRoom()
	{
	}

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0x901BD4", Offset = "0x901BD4", VA = "0x901BD4")]
	public void OnLeftRoom()
	{
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0x901C40", Offset = "0x901C40", VA = "0x901C40")]
	public void OnDisconnectedFromPhoton()
	{
	}

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0x901CAC", Offset = "0x901CAC", VA = "0x901CAC")]
	public SupportLogging()
	{
	}
}
[Token(Token = "0x2000115")]
public class PlayMusicTrack : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool play;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[SerializeField]
	private bool randomizeTrack;

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0x947C8C", Offset = "0x947C8C", VA = "0x947C8C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0x947D48", Offset = "0x947D48", VA = "0x947D48")]
	public PlayMusicTrack()
	{
	}
}
[Token(Token = "0x2000116")]
public class ProgressUpdate : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Image normalImage;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Image expertImage;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Image pickupsImage;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Image humanImage;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Color wipColor;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Color doneColor;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private TextMeshProUGUI textMeshProUGUI;

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0x94F060", Offset = "0x94F060", VA = "0x94F060")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0x94F7F4", Offset = "0x94F7F4", VA = "0x94F7F4")]
	public ProgressUpdate()
	{
	}
}
[Token(Token = "0x2000117")]
public class ReleaseRenderTexture : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x60006BD")]
	[Address(RVA = "0x951864", Offset = "0x951864", VA = "0x951864")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0x95191C", Offset = "0x95191C", VA = "0x95191C")]
	public ReleaseRenderTexture()
	{
	}
}
[Token(Token = "0x2000118")]
public class RenderExverything : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x60006BF")]
	[Address(RVA = "0x95247C", Offset = "0x95247C", VA = "0x95247C")]
	private void OnPreCull()
	{
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0x952628", Offset = "0x952628", VA = "0x952628")]
	public RenderExverything()
	{
	}
}
[Token(Token = "0x2000119")]
public class ReplaceTransparentShaderTrigger : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Material replacementMaterial;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material originalMaterial;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshRenderer meshRenderer;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string playerString;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool playerInside;

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0x952AD4", Offset = "0x952AD4", VA = "0x952AD4")]
	private void Start()
	{
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0x952B2C", Offset = "0x952B2C", VA = "0x952B2C")]
	public void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0x952B70", Offset = "0x952B70", VA = "0x952B70")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0x952BB0", Offset = "0x952BB0", VA = "0x952BB0")]
	public ReplaceTransparentShaderTrigger()
	{
	}
}
[Token(Token = "0x200011A")]
public class DestroyAllEnemies : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x60006C5")]
	[Address(RVA = "0x976F90", Offset = "0x976F90", VA = "0x976F90")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0x9770F4", Offset = "0x9770F4", VA = "0x9770F4")]
	public DestroyAllEnemies()
	{
	}
}
[Token(Token = "0x200011B")]
public class LoadStageIfAllAIDead : Photon.MonoBehaviour
{
	[Token(Token = "0x60006C7")]
	[Address(RVA = "0x96AC9C", Offset = "0x96AC9C", VA = "0x96AC9C")]
	private void Update()
	{
	}

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0x96AE08", Offset = "0x96AE08", VA = "0x96AE08")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x6EB5D8", Offset = "0x6EB5D8")]
	public void Load9()
	{
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0x96AE7C", Offset = "0x96AE7C", VA = "0x96AE7C")]
	public LoadStageIfAllAIDead()
	{
	}
}
[Token(Token = "0x200011C")]
[ExecuteAlways]
public class MatchSectionPointY : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x60006CA")]
	[Address(RVA = "0x8D79F0", Offset = "0x8D79F0", VA = "0x8D79F0")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0x8D7AD4", Offset = "0x8D7AD4", VA = "0x8D7AD4")]
	public MatchSectionPointY()
	{
	}
}
[Token(Token = "0x200011D")]
public class TimelineAnnimationController : Photon.MonoBehaviour
{
	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PlayableDirector playableDirector;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int cacheTime;

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0x90B758", Offset = "0x90B758", VA = "0x90B758")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0x90B7B0", Offset = "0x90B7B0", VA = "0x90B7B0")]
	private void Update()
	{
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0x90B9B4", Offset = "0x90B9B4", VA = "0x90B9B4")]
	public TimelineAnnimationController()
	{
	}
}
[Token(Token = "0x200011E")]
public class moon : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Texture2D moonImage;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Texture2D marsImage;

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0xAC5104", Offset = "0xAC5104", VA = "0xAC5104")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0xAC5164", Offset = "0xAC5164", VA = "0xAC5164")]
	private void SetImage()
	{
	}

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0xAC520C", Offset = "0xAC520C", VA = "0xAC520C")]
	public moon()
	{
	}
}
[Token(Token = "0x200011F")]
public class Score : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6E396C", Offset = "0x6E396C")]
	[SerializeField]
	private int stage;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int score;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TextMeshProUGUI proUGUI;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isEnabled;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool dayCompleted;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	private bool nightCompleted;

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0x8F701C", Offset = "0x8F701C", VA = "0x8F701C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0x8F71F4", Offset = "0x8F71F4", VA = "0x8F71F4")]
	private void Update()
	{
	}

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0x8F7414", Offset = "0x8F7414", VA = "0x8F7414")]
	public Score()
	{
	}
}
[Token(Token = "0x2000120")]
public class LeaderBoardSample : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20003B7")]
	private enum gameState
	{
		[Token(Token = "0x40012E0")]
		waiting,
		[Token(Token = "0x40012E1")]
		running,
		[Token(Token = "0x40012E2")]
		enterscore,
		[Token(Token = "0x40012E3")]
		leaderboard
	}

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float startTime;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float timeLeft;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int totalScore;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string playerName;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string code;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private gameState gs;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private dreamloLeaderBoard dl;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private dreamloPromoCode pc;

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0x963598", Offset = "0x963598", VA = "0x963598")]
	private void Start()
	{
	}

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0x9635D8", Offset = "0x9635D8", VA = "0x9635D8")]
	private void Update()
	{
	}

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0x963690", Offset = "0x963690", VA = "0x963690")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0x964708", Offset = "0x964708", VA = "0x964708")]
	public LeaderBoardSample()
	{
	}
}
[Token(Token = "0x2000121")]
public class dreamloLeaderBoard : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20003B8")]
	public struct Score
	{
		[Token(Token = "0x40012E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string playerName;

		[Token(Token = "0x40012E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int score;

		[Token(Token = "0x40012E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int seconds;

		[Token(Token = "0x40012E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string shortText;

		[Token(Token = "0x40012E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string dateString;
	}

	[Token(Token = "0x20003B9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E1AB4", Offset = "0x6E1AB4")]
	private sealed class <AddScoreWithPipe>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string playerName;

		[Token(Token = "0x40012EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public dreamloLeaderBoard <>4__this;

		[Token(Token = "0x40012ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int totalScore;

		[Token(Token = "0x40012EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private WWW <www>5__2;

		[Token(Token = "0x17000248")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001813")]
			[Address(RVA = "0xAC3D48", Offset = "0xAC3D48", VA = "0xAC3D48", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000249")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001815")]
			[Address(RVA = "0xAC3DB0", Offset = "0xAC3DB0", VA = "0xAC3DB0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001810")]
		[Address(RVA = "0xAC31CC", Offset = "0xAC31CC", VA = "0xAC31CC")]
		[DebuggerHidden]
		public <AddScoreWithPipe>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6001811")]
		[Address(RVA = "0xAC3AF4", Offset = "0xAC3AF4", VA = "0xAC3AF4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001812")]
		[Address(RVA = "0xAC3AF8", Offset = "0xAC3AF8", VA = "0xAC3AF8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001814")]
		[Address(RVA = "0xAC3D50", Offset = "0xAC3D50", VA = "0xAC3D50", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003BA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E1AC4", Offset = "0x6E1AC4")]
	private sealed class <AddScoreWithPipe>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string playerName;

		[Token(Token = "0x40012F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public dreamloLeaderBoard <>4__this;

		[Token(Token = "0x40012F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int totalScore;

		[Token(Token = "0x40012F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int totalSeconds;

		[Token(Token = "0x40012F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private WWW <www>5__2;

		[Token(Token = "0x1700024A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001819")]
			[Address(RVA = "0xAC4070", Offset = "0xAC4070", VA = "0xAC4070", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600181B")]
			[Address(RVA = "0xAC40D8", Offset = "0xAC40D8", VA = "0xAC40D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001816")]
		[Address(RVA = "0xAC31F8", Offset = "0xAC31F8", VA = "0xAC31F8")]
		[DebuggerHidden]
		public <AddScoreWithPipe>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6001817")]
		[Address(RVA = "0xAC3DB8", Offset = "0xAC3DB8", VA = "0xAC3DB8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001818")]
		[Address(RVA = "0xAC3DBC", Offset = "0xAC3DBC", VA = "0xAC3DBC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600181A")]
		[Address(RVA = "0xAC4078", Offset = "0xAC4078", VA = "0xAC4078", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003BB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E1AD4", Offset = "0x6E1AD4")]
	private sealed class <AddScoreWithPipe>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string playerName;

		[Token(Token = "0x40012F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public dreamloLeaderBoard <>4__this;

		[Token(Token = "0x40012FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string shortText;

		[Token(Token = "0x40012FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int totalScore;

		[Token(Token = "0x40012FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int totalSeconds;

		[Token(Token = "0x40012FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private WWW <www>5__2;

		[Token(Token = "0x1700024C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600181F")]
			[Address(RVA = "0xAC43FC", Offset = "0xAC43FC", VA = "0xAC43FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001821")]
			[Address(RVA = "0xAC4464", Offset = "0xAC4464", VA = "0xAC4464", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600181C")]
		[Address(RVA = "0xAC3224", Offset = "0xAC3224", VA = "0xAC3224")]
		[DebuggerHidden]
		public <AddScoreWithPipe>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x600181D")]
		[Address(RVA = "0xAC40E0", Offset = "0xAC40E0", VA = "0xAC40E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600181E")]
		[Address(RVA = "0xAC40E4", Offset = "0xAC40E4", VA = "0xAC40E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001820")]
		[Address(RVA = "0xAC4404", Offset = "0xAC4404", VA = "0xAC4404", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003BC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E1AE4", Offset = "0x6E1AE4")]
	private sealed class <GetScores>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public dreamloLeaderBoard <>4__this;

		[Token(Token = "0x4001301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WWW <www>5__2;

		[Token(Token = "0x1700024E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001825")]
			[Address(RVA = "0xAC4574", Offset = "0xAC4574", VA = "0xAC4574", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001827")]
			[Address(RVA = "0xAC45DC", Offset = "0xAC45DC", VA = "0xAC45DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001822")]
		[Address(RVA = "0xAC32C0", Offset = "0xAC32C0", VA = "0xAC32C0")]
		[DebuggerHidden]
		public <GetScores>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6001823")]
		[Address(RVA = "0xAC446C", Offset = "0xAC446C", VA = "0xAC446C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001824")]
		[Address(RVA = "0xAC4470", Offset = "0xAC4470", VA = "0xAC4470", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001826")]
		[Address(RVA = "0xAC457C", Offset = "0xAC457C", VA = "0xAC457C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003BD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E1AF4", Offset = "0x6E1AF4")]
	private sealed class <GetSingleScore>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public dreamloLeaderBoard <>4__this;

		[Token(Token = "0x4001305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string playerName;

		[Token(Token = "0x4001306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WWW <www>5__2;

		[Token(Token = "0x17000250")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600182B")]
			[Address(RVA = "0xAC4704", Offset = "0xAC4704", VA = "0xAC4704", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000251")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600182D")]
			[Address(RVA = "0xAC476C", Offset = "0xAC476C", VA = "0xAC476C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001828")]
		[Address(RVA = "0xAC3368", Offset = "0xAC3368", VA = "0xAC3368")]
		[DebuggerHidden]
		public <GetSingleScore>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6001829")]
		[Address(RVA = "0xAC45E4", Offset = "0xAC45E4", VA = "0xAC45E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600182A")]
		[Address(RVA = "0xAC45E8", Offset = "0xAC45E8", VA = "0xAC45E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600182C")]
		[Address(RVA = "0xAC470C", Offset = "0xAC470C", VA = "0xAC470C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20003BE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E1B04", Offset = "0x6E1B04")]
	private sealed class <>c
	{
		[Token(Token = "0x4001307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<Score> <>9__21_0;

		[Token(Token = "0x4001309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Comparison<Score> <>9__22_0;

		[Token(Token = "0x600182F")]
		[Address(RVA = "0xAC3AC8", Offset = "0xAC3AC8", VA = "0xAC3AC8")]
		public <>c()
		{
		}

		[Token(Token = "0x6001830")]
		[Address(RVA = "0xAC3AD0", Offset = "0xAC3AD0", VA = "0xAC3AD0")]
		internal int <ToListLowToHigh>b__21_0(Score x, Score y)
		{
			return default(int);
		}

		[Token(Token = "0x6001831")]
		[Address(RVA = "0xAC3AE4", Offset = "0xAC3AE4", VA = "0xAC3AE4")]
		internal int <ToListHighToLow>b__22_0(Score x, Score y)
		{
			return default(int);
		}
	}

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string dreamloWebserviceURL;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string privateCode;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string publicCode;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string highScores;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private DateTime _lastRequest;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int _requestTotal;

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0xAC2C68", Offset = "0xAC2C68", VA = "0xAC2C68")]
	private void Start()
	{
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0xAC2CB8", Offset = "0xAC2CB8", VA = "0xAC2CB8")]
	public static dreamloLeaderBoard GetSceneDreamloLeaderboard()
	{
		return null;
	}

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0xAC2D9C", Offset = "0xAC2D9C", VA = "0xAC2D9C")]
	public static double DateDiffInSeconds(DateTime now, DateTime olderdate)
	{
		return default(double);
	}

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0xAC2DD4", Offset = "0xAC2DD4", VA = "0xAC2DD4")]
	private bool TooManyRequests()
	{
		return default(bool);
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0xAC2EDC", Offset = "0xAC2EDC", VA = "0xAC2EDC")]
	public void AddScore(string playerName, int totalScore)
	{
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0xAC2FC0", Offset = "0xAC2FC0", VA = "0xAC2FC0")]
	public void AddScore(string playerName, int totalScore, int totalSeconds)
	{
	}

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0xAC30B8", Offset = "0xAC30B8", VA = "0xAC30B8")]
	public void AddScore(string playerName, int totalScore, int totalSeconds, string shortText)
	{
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0xAC2F3C", Offset = "0xAC2F3C", VA = "0xAC2F3C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6EB610", Offset = "0x6EB610")]
	private IEnumerator AddScoreWithPipe(string playerName, int totalScore)
	{
		return null;
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0xAC3028", Offset = "0xAC3028", VA = "0xAC3028")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6EB674", Offset = "0x6EB674")]
	private IEnumerator AddScoreWithPipe(string playerName, int totalScore, int totalSeconds)
	{
		return null;
	}

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0xAC3134", Offset = "0xAC3134", VA = "0xAC3134")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6EB6D8", Offset = "0x6EB6D8")]
	private IEnumerator AddScoreWithPipe(string playerName, int totalScore, int totalSeconds, string shortText)
	{
		return null;
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0xAC3250", Offset = "0xAC3250", VA = "0xAC3250")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6EB73C", Offset = "0x6EB73C")]
	private IEnumerator GetScores()
	{
		return null;
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0xAC32EC", Offset = "0xAC32EC", VA = "0xAC32EC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6EB7A0", Offset = "0x6EB7A0")]
	private IEnumerator GetSingleScore(string playerName)
	{
		return null;
	}

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0xAC3394", Offset = "0xAC3394", VA = "0xAC3394")]
	public void LoadScores()
	{
	}

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0xAC33D8", Offset = "0xAC33D8", VA = "0xAC33D8")]
	public string[] ToStringArray()
	{
		return null;
	}

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0xAC3498", Offset = "0xAC3498", VA = "0xAC3498")]
	public List<Score> ToListLowToHigh()
	{
		return null;
	}

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0xAC37C4", Offset = "0xAC37C4", VA = "0xAC37C4")]
	public List<Score> ToListHighToLow()
	{
		return null;
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0xAC35EC", Offset = "0xAC35EC", VA = "0xAC35EC")]
	public Score[] ToScoreArray()
	{
		return null;
	}

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0xAC3948", Offset = "0xAC3948", VA = "0xAC3948")]
	private string Clean(string s)
	{
		return null;
	}

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0xAC3918", Offset = "0xAC3918", VA = "0xAC3918")]
	private int CheckInt(string s)
	{
		return default(int);
	}

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0xAC39CC", Offset = "0xAC39CC", VA = "0xAC39CC")]
	public dreamloLeaderBoard()
	{
	}
}
[Token(Token = "0x2000122")]
public class dreamloPromoCode : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20003BF")]
	public enum State
	{
		[Token(Token = "0x400130B")]
		None,
		[Token(Token = "0x400130C")]
		WaitingForResponse,
		[Token(Token = "0x400130D")]
		ERROR,
		[Token(Token = "0x400130E")]
		OK
	}

	[Token(Token = "0x20003C0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E1B14", Offset = "0x6E1B14")]
	private sealed class <WebService>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400130F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public dreamloPromoCode <>4__this;

		[Token(Token = "0x4001312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string URL;

		[Token(Token = "0x4001313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WWW <www>5__2;

		[Token(Token = "0x17000252")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001835")]
			[Address(RVA = "0xAC4C6C", Offset = "0xAC4C6C", VA = "0xAC4C6C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000253")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001837")]
			[Address(RVA = "0xAC4CD4", Offset = "0xAC4CD4", VA = "0xAC4CD4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001832")]
		[Address(RVA = "0xAC49B4", Offset = "0xAC49B4", VA = "0xAC49B4")]
		[DebuggerHidden]
		public <WebService>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6001833")]
		[Address(RVA = "0xAC4A4C", Offset = "0xAC4A4C", VA = "0xAC4A4C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001834")]
		[Address(RVA = "0xAC4A50", Offset = "0xAC4A50", VA = "0xAC4A50", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001836")]
		[Address(RVA = "0xAC4C74", Offset = "0xAC4C74", VA = "0xAC4C74", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string dreamloWebserviceURL;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string publicCode;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string value;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string error;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public State state;

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0xAC4774", Offset = "0xAC4774", VA = "0xAC4774")]
	public static dreamloPromoCode GetSceneDreamloPromoCode()
	{
		return null;
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0xAC4858", Offset = "0xAC4858", VA = "0xAC4858")]
	public void RedeemCode(string code)
	{
	}

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0xAC4938", Offset = "0xAC4938", VA = "0xAC4938")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6EB804", Offset = "0x6EB804")]
	private IEnumerator WebService(string URL)
	{
		return null;
	}

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0xAC49E0", Offset = "0xAC49E0", VA = "0xAC49E0")]
	public dreamloPromoCode()
	{
	}
}
[Token(Token = "0x2000123")]
public class AimIcon : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Canvas canvas;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform rectTransform;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool Player1;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Sprite noAimSprite;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Sprite aimSprite;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 maxSize;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 idleSize;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 aimOffset;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private IInputProxy playerInput;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Image retacle;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool hasTarget;

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0x9AA1A4", Offset = "0x9AA1A4", VA = "0x9AA1A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0x9AA268", Offset = "0x9AA268", VA = "0x9AA268")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0x9AA5B0", Offset = "0x9AA5B0", VA = "0x9AA5B0")]
	private void LerpSize(Vector3 size)
	{
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0x9AA69C", Offset = "0x9AA69C", VA = "0x9AA69C")]
	public AimIcon()
	{
	}
}
[Token(Token = "0x2000124")]
public class CharacterLegsAnimator : UnityEngine.MonoBehaviour, ICharacterBase
{
	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float normalSpeed;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float fireSpeed;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int maxHealth;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private int maxHealthAi;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform mountPoint;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Animator animator;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int magnitudeStr;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int aliveStr;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int fireStr;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private bool setFire;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CharacterControl characterControl;

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Destructible destructible;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Renderer myRenderer;

	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Collider thisCollider;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private bool explodeOnDie;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[SerializeField]
	private GameSetup.AgentType agentType;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private AudioClip hitAudio;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private AudioClip alertAudio;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private AudioClip dieAudio;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float time;

	[Token(Token = "0x170000DB")]
	public int GetMaxHealthAI
	{
		[Token(Token = "0x60006F5")]
		[Address(RVA = "0x9BBAA8", Offset = "0x9BBAA8", VA = "0x9BBAA8", Slot = "11")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000DC")]
	public AudioClip GetHitAudio
	{
		[Token(Token = "0x60006F6")]
		[Address(RVA = "0x9BBAB0", Offset = "0x9BBAB0", VA = "0x9BBAB0", Slot = "13")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000DD")]
	public AudioClip GetAlertAudio
	{
		[Token(Token = "0x60006F7")]
		[Address(RVA = "0x9BBAB8", Offset = "0x9BBAB8", VA = "0x9BBAB8", Slot = "14")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000DE")]
	public AudioClip GetDieAudio
	{
		[Token(Token = "0x60006F8")]
		[Address(RVA = "0x9BBAC0", Offset = "0x9BBAC0", VA = "0x9BBAC0", Slot = "15")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000DF")]
	public bool GetExplodeOnDie
	{
		[Token(Token = "0x60006F9")]
		[Address(RVA = "0x9BBAC8", Offset = "0x9BBAC8", VA = "0x9BBAC8", Slot = "12")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000E0")]
	public GameSetup.AgentType GetAgentType
	{
		[Token(Token = "0x60006FA")]
		[Address(RVA = "0x9BBAD0", Offset = "0x9BBAD0", VA = "0x9BBAD0", Slot = "4")]
		get
		{
			return default(GameSetup.AgentType);
		}
	}

	[Token(Token = "0x170000E1")]
	public Transform GetTransform
	{
		[Token(Token = "0x60006FB")]
		[Address(RVA = "0x9BBAD8", Offset = "0x9BBAD8", VA = "0x9BBAD8", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000E2")]
	public GameObject GetGameObject
	{
		[Token(Token = "0x60006FC")]
		[Address(RVA = "0x9BBAE0", Offset = "0x9BBAE0", VA = "0x9BBAE0", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000E3")]
	public float GetNormalSpeed
	{
		[Token(Token = "0x60006FD")]
		[Address(RVA = "0x9BBAE8", Offset = "0x9BBAE8", VA = "0x9BBAE8", Slot = "5")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000E4")]
	public float GetFireSpeed
	{
		[Token(Token = "0x60006FE")]
		[Address(RVA = "0x9BBAF0", Offset = "0x9BBAF0", VA = "0x9BBAF0", Slot = "6")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000E5")]
	public Transform GetMount
	{
		[Token(Token = "0x60006FF")]
		[Address(RVA = "0x9BBAF8", Offset = "0x9BBAF8", VA = "0x9BBAF8", Slot = "9")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000E6")]
	public int GetMaxHealth
	{
		[Token(Token = "0x6000700")]
		[Address(RVA = "0x9BBB00", Offset = "0x9BBB00", VA = "0x9BBB00", Slot = "10")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0x9BBB08", Offset = "0x9BBB08", VA = "0x9BBB08")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0x9BBD40", Offset = "0x9BBD40", VA = "0x9BBD40")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0x9BBDBC", Offset = "0x9BBDBC", VA = "0x9BBDBC")]
	private void OnLevelUnloaded(Scene arg0)
	{
	}

	[Token(Token = "0x6000704")]
	[Address(RVA = "0x9BBEA0", Offset = "0x9BBEA0", VA = "0x9BBEA0")]
	public void Update()
	{
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0x9BC0D8", Offset = "0x9BC0D8", VA = "0x9BC0D8")]
	public CharacterLegsAnimator()
	{
	}
}
[Token(Token = "0x2000125")]
public class CharacterSetup : Photon.MonoBehaviour
{
	[Token(Token = "0x20003C1")]
	public enum Legs
	{
		[Token(Token = "0x4001315")]
		Soldier,
		[Token(Token = "0x4001316")]
		Tank_Med,
		[Token(Token = "0x4001317")]
		Tank_Hvy,
		[Token(Token = "0x4001318")]
		Biped_Med,
		[Token(Token = "0x4001319")]
		Biped_Hvy,
		[Token(Token = "0x400131A")]
		Quadped_Med,
		[Token(Token = "0x400131B")]
		Qaudped_Hvy,
		[Token(Token = "0x400131C")]
		QaudpedTrans_Med,
		[Token(Token = "0x400131D")]
		QuadrTrans_Hvy,
		[Token(Token = "0x400131E")]
		Stationary_Turret
	}

	[Token(Token = "0x20003C2")]
	public enum Tops
	{
		[Token(Token = "0x4001320")]
		RocketMortar,
		[Token(Token = "0x4001321")]
		VulcanCQC,
		[Token(Token = "0x4001322")]
		FlameThrower,
		[Token(Token = "0x4001323")]
		Laser,
		[Token(Token = "0x4001324")]
		Spread,
		[Token(Token = "0x4001325")]
		Canon
	}

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string RPC_SetupAI;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string RPC_SetupPlayer;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string RPC_EnableCharacter;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string RPC_DisableCharacter;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string RPC_ResetCharacter;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CharacterControl characterControl;

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject Soldier;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject Tank_Med;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject Tank_Hvy;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject Biped_Med;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject Biped_Hvy;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject Quadped_Med;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject Qaudped_Hvy;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject QaudpedTrans_Med;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject QuadrTrans_Hvy;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject Stationary_Turret;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject RocketMortar;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject LaserBarrier;

	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject VulcanCQC;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject LaserSpin;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject SpreadShield;

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject CanonShield;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public ICharacterBase iCharacterBase;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public CharacterTopAnimator characterTopAnimator;

	[Token(Token = "0x6000706")]
	[Address(RVA = "0x9BD57C", Offset = "0x9BD57C", VA = "0x9BD57C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0x9B7C64", Offset = "0x9B7C64", VA = "0x9B7C64")]
	public void SetupControl(CharacterControl.ControlType control)
	{
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0x9BD6B4", Offset = "0x9BD6B4", VA = "0x9BD6B4")]
	private void RegisterPlayer()
	{
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0x9BD5D4", Offset = "0x9BD5D4", VA = "0x9BD5D4")]
	private void RegisterEnemies()
	{
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0x9BD794", Offset = "0x9BD794", VA = "0x9BD794")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0x9B7E60", Offset = "0x9B7E60", VA = "0x9B7E60")]
	public void SetupInput(CharacterControl.InputType input)
	{
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0x9BCAEC", Offset = "0x9BCAEC", VA = "0x9BCAEC")]
	public GameObject GetLegGameObject(Legs legCode)
	{
		return null;
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0x9BD904", Offset = "0x9BD904", VA = "0x9BD904")]
	public GameObject GetTopCode(Tops topCode)
	{
		return null;
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0x9B5EA8", Offset = "0x9B5EA8", VA = "0x9B5EA8")]
	public void SetupBaseAndTop(Legs newLeg, Tops newTop)
	{
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0x9BD960", Offset = "0x9BD960", VA = "0x9BD960")]
	public CharacterSetup()
	{
	}
}
[Token(Token = "0x2000126")]
public class CharacterSoldierAnimator : UnityEngine.MonoBehaviour, ICharacterBase
{
	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float normalSpeed;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float fireSpeed;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int maxHealth;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private int maxHealthAi;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform weapon;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform mountPoint;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject dust;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Animator animator;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int magnitudeStr;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int aliveStr;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int horizonalStr;

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int verticalStr;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int fireStr;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int swimStr;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool isAiming;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject laser;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Quaternion weaponStartRotation;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private CharacterControl characterControl;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Destructible destructible;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Renderer myRenderer;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Collider thisCollider;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private bool largeAgent;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[SerializeField]
	private GameSetup.AgentType agentType;

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private bool explodeOnDie;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private AudioClip hitAudio;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private AudioClip alertAudio;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private AudioClip dieAudio;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool swimming;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float time;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Vector3 adjustedDirection;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private Vector3 rotation;

	[Token(Token = "0x170000E7")]
	public AudioClip GetHitAudio
	{
		[Token(Token = "0x6000711")]
		[Address(RVA = "0x9BDA18", Offset = "0x9BDA18", VA = "0x9BDA18", Slot = "13")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000E8")]
	public AudioClip GetAlertAudio
	{
		[Token(Token = "0x6000712")]
		[Address(RVA = "0x9BDA20", Offset = "0x9BDA20", VA = "0x9BDA20", Slot = "14")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000E9")]
	public AudioClip GetDieAudio
	{
		[Token(Token = "0x6000713")]
		[Address(RVA = "0x9BDA28", Offset = "0x9BDA28", VA = "0x9BDA28", Slot = "15")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000EA")]
	public bool GetExplodeOnDie
	{
		[Token(Token = "0x6000714")]
		[Address(RVA = "0x9BDA30", Offset = "0x9BDA30", VA = "0x9BDA30", Slot = "12")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000EB")]
	public GameSetup.AgentType GetAgentType
	{
		[Token(Token = "0x6000715")]
		[Address(RVA = "0x9BDA38", Offset = "0x9BDA38", VA = "0x9BDA38", Slot = "4")]
		get
		{
			return default(GameSetup.AgentType);
		}
	}

	[Token(Token = "0x170000EC")]
	public Transform GetTransform
	{
		[Token(Token = "0x6000716")]
		[Address(RVA = "0x9BDA40", Offset = "0x9BDA40", VA = "0x9BDA40", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000ED")]
	public GameObject GetGameObject
	{
		[Token(Token = "0x6000717")]
		[Address(RVA = "0x9BDA48", Offset = "0x9BDA48", VA = "0x9BDA48", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000EE")]
	public float GetNormalSpeed
	{
		[Token(Token = "0x6000718")]
		[Address(RVA = "0x9BDA50", Offset = "0x9BDA50", VA = "0x9BDA50", Slot = "5")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000EF")]
	public float GetFireSpeed
	{
		[Token(Token = "0x6000719")]
		[Address(RVA = "0x9BDA58", Offset = "0x9BDA58", VA = "0x9BDA58", Slot = "6")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000F0")]
	public Transform GetMount
	{
		[Token(Token = "0x600071A")]
		[Address(RVA = "0x9BDA60", Offset = "0x9BDA60", VA = "0x9BDA60", Slot = "9")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000F1")]
	public int GetMaxHealth
	{
		[Token(Token = "0x600071B")]
		[Address(RVA = "0x9BDA68", Offset = "0x9BDA68", VA = "0x9BDA68", Slot = "10")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000F2")]
	public int GetMaxHealthAI
	{
		[Token(Token = "0x600071C")]
		[Address(RVA = "0x9BDA70", Offset = "0x9BDA70", VA = "0x9BDA70", Slot = "11")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0x9BDA78", Offset = "0x9BDA78", VA = "0x9BDA78")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600071E")]
	[Address(RVA = "0x9BDDE4", Offset = "0x9BDDE4", VA = "0x9BDDE4")]
	private void OnLevelUnloaded(Scene arg0)
	{
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0x9BDEC8", Offset = "0x9BDEC8", VA = "0x9BDEC8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000720")]
	[Address(RVA = "0x9BDCCC", Offset = "0x9BDCCC", VA = "0x9BDCCC")]
	private void InitAnimator()
	{
	}

	[Token(Token = "0x6000721")]
	[Address(RVA = "0x9BDF44", Offset = "0x9BDF44", VA = "0x9BDF44")]
	public void Update()
	{
	}

	[Token(Token = "0x6000722")]
	[Address(RVA = "0x9BE574", Offset = "0x9BE574", VA = "0x9BE574")]
	public CharacterSoldierAnimator()
	{
	}
}
[Token(Token = "0x2000127")]
public class CharacterTankAnimator : UnityEngine.MonoBehaviour, ICharacterBase
{
	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float normalSpeed;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float fireSpeed;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int maxHealth;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private int maxHealthAi;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform mountPoint;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CharacterControl characterControl;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Destructible destructible;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Collider thisCollider;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private bool largeAgent;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private GameSetup.AgentType agentType;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private bool explodeOnDie;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private AudioClip hitAudio;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private AudioClip alertAudio;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private AudioClip dieAudio;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Bumper bumper;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float time;

	[Token(Token = "0x170000F3")]
	public int GetMaxHealthAI
	{
		[Token(Token = "0x6000723")]
		[Address(RVA = "0x9BE990", Offset = "0x9BE990", VA = "0x9BE990", Slot = "11")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000F4")]
	public AudioClip GetHitAudio
	{
		[Token(Token = "0x6000724")]
		[Address(RVA = "0x9BE998", Offset = "0x9BE998", VA = "0x9BE998", Slot = "13")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000F5")]
	public AudioClip GetAlertAudio
	{
		[Token(Token = "0x6000725")]
		[Address(RVA = "0x9BE9A0", Offset = "0x9BE9A0", VA = "0x9BE9A0", Slot = "14")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000F6")]
	public AudioClip GetDieAudio
	{
		[Token(Token = "0x6000726")]
		[Address(RVA = "0x9BE9A8", Offset = "0x9BE9A8", VA = "0x9BE9A8", Slot = "15")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000F7")]
	public bool GetExplodeOnDie
	{
		[Token(Token = "0x6000727")]
		[Address(RVA = "0x9BE9B0", Offset = "0x9BE9B0", VA = "0x9BE9B0", Slot = "12")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000F8")]
	public GameSetup.AgentType GetAgentType
	{
		[Token(Token = "0x6000728")]
		[Address(RVA = "0x9BE9B8", Offset = "0x9BE9B8", VA = "0x9BE9B8", Slot = "4")]
		get
		{
			return default(GameSetup.AgentType);
		}
	}

	[Token(Token = "0x170000F9")]
	public Transform GetTransform
	{
		[Token(Token = "0x6000729")]
		[Address(RVA = "0x9BE9C0", Offset = "0x9BE9C0", VA = "0x9BE9C0", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000FA")]
	public GameObject GetGameObject
	{
		[Token(Token = "0x600072A")]
		[Address(RVA = "0x9BE9C8", Offset = "0x9BE9C8", VA = "0x9BE9C8", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000FB")]
	public float GetNormalSpeed
	{
		[Token(Token = "0x600072B")]
		[Address(RVA = "0x9BE9D0", Offset = "0x9BE9D0", VA = "0x9BE9D0", Slot = "5")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000FC")]
	public float GetFireSpeed
	{
		[Token(Token = "0x600072C")]
		[Address(RVA = "0x9BE9D8", Offset = "0x9BE9D8", VA = "0x9BE9D8", Slot = "6")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000FD")]
	public Transform GetMount
	{
		[Token(Token = "0x600072D")]
		[Address(RVA = "0x9BE9E0", Offset = "0x9BE9E0", VA = "0x9BE9E0", Slot = "9")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000FE")]
	public int GetMaxHealth
	{
		[Token(Token = "0x600072E")]
		[Address(RVA = "0x9BE9E8", Offset = "0x9BE9E8", VA = "0x9BE9E8", Slot = "10")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x600072F")]
	[Address(RVA = "0x9BE9F0", Offset = "0x9BE9F0", VA = "0x9BE9F0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000730")]
	[Address(RVA = "0x9BEBD4", Offset = "0x9BEBD4", VA = "0x9BEBD4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000731")]
	[Address(RVA = "0x9BEC64", Offset = "0x9BEC64", VA = "0x9BEC64")]
	private void OnLevelUnloaded(Scene arg0)
	{
	}

	[Token(Token = "0x6000732")]
	[Address(RVA = "0x9BED48", Offset = "0x9BED48", VA = "0x9BED48")]
	public void Update()
	{
	}

	[Token(Token = "0x6000733")]
	[Address(RVA = "0x9BEF20", Offset = "0x9BEF20", VA = "0x9BEF20")]
	public CharacterTankAnimator()
	{
	}
}
[Token(Token = "0x2000128")]
public class CharacterTopAnimator : UnityEngine.MonoBehaviour, IManagedUpdated
{
	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterControl characterControl;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float time;

	[Token(Token = "0x6000734")]
	[Address(RVA = "0x9BEF3C", Offset = "0x9BEF3C", VA = "0x9BEF3C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000735")]
	[Address(RVA = "0x9BF074", Offset = "0x9BF074", VA = "0x9BF074")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000736")]
	[Address(RVA = "0x9BF0D8", Offset = "0x9BF0D8", VA = "0x9BF0D8", Slot = "4")]
	public void ManageUpdate()
	{
	}

	[Token(Token = "0x6000737")]
	[Address(RVA = "0x9BF27C", Offset = "0x9BF27C", VA = "0x9BF27C")]
	public CharacterTopAnimator()
	{
	}
}
[Token(Token = "0x2000129")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6E0F44", Offset = "0x6E0F44")]
public class Destructible : PunBehaviour, IManagedLateFixedUpdated
{
	[Token(Token = "0x20003C3")]
	public delegate void LocalTakeHitHandler();

	[Token(Token = "0x20003C4")]
	public delegate void GlobalTakeHitHandler(float barLength, Destructible fromDestructible, float maxLength, Vector3 position);

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int health;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int maxHealth;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool alive;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool hidden;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool pickupOnKilled;

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	public bool explodeOnKilled;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material[] materials;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Renderer[] renderers;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string RPC_SetHealthRPC;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool HitColorChuu;

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Destructible destructibleParent;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material hitMaterial;

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public CharacterControl characterControl;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject[] spawnOnDestroyed;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Transform spawnPosition;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject destroyOnDestroyed;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string PlayerStr;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static float lastDeadTime;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float lastHitTime;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int incomingHits;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private MaterialPropertyBlock materialPropertyBlock;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int _InstanceColor;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private bool spawn;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private string HitRPCString;

	[Token(Token = "0x170000FF")]
	public int GetHealth
	{
		[Token(Token = "0x600073E")]
		[Address(RVA = "0x97759C", Offset = "0x97759C", VA = "0x97759C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000100")]
	public int GetMaxHealth
	{
		[Token(Token = "0x600073F")]
		[Address(RVA = "0x9775A4", Offset = "0x9775A4", VA = "0x9775A4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1400000F")]
	public event LocalTakeHitHandler TakeHit
	{
		[Token(Token = "0x6000738")]
		[Address(RVA = "0x9770FC", Offset = "0x9770FC", VA = "0x9770FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EB868", Offset = "0x6EB868")]
		add
		{
		}
		[Token(Token = "0x6000739")]
		[Address(RVA = "0x9771A0", Offset = "0x9771A0", VA = "0x9771A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EB878", Offset = "0x6EB878")]
		remove
		{
		}
	}

	[Token(Token = "0x14000010")]
	public static event GlobalTakeHitHandler TakeHitGlobal
	{
		[Token(Token = "0x600073A")]
		[Address(RVA = "0x977244", Offset = "0x977244", VA = "0x977244")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EB888", Offset = "0x6EB888")]
		add
		{
		}
		[Token(Token = "0x600073B")]
		[Address(RVA = "0x977334", Offset = "0x977334", VA = "0x977334")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EB898", Offset = "0x6EB898")]
		remove
		{
		}
	}

	[Token(Token = "0x600073C")]
	[Address(RVA = "0x977424", Offset = "0x977424", VA = "0x977424")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600073D")]
	[Address(RVA = "0x977538", Offset = "0x977538", VA = "0x977538")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000740")]
	[Address(RVA = "0x9775AC", Offset = "0x9775AC", VA = "0x9775AC")]
	public Vector3 GetAimOffset()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000741")]
	[Address(RVA = "0x977754", Offset = "0x977754", VA = "0x977754")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000742")]
	[Address(RVA = "0x977880", Offset = "0x977880", VA = "0x977880")]
	private void Start()
	{
	}

	[Token(Token = "0x6000743")]
	[Address(RVA = "0x9778F8", Offset = "0x9778F8", VA = "0x9778F8")]
	public void InitRenderers()
	{
	}

	[Token(Token = "0x6000744")]
	[Address(RVA = "0x977AB8", Offset = "0x977AB8", VA = "0x977AB8")]
	[PunRPC]
	public void HitRPC(int hitPower)
	{
	}

	[Token(Token = "0x6000745")]
	[Address(RVA = "0x978740", Offset = "0x978740", VA = "0x978740")]
	[PunRPC]
	public void UpdateScores()
	{
	}

	[Token(Token = "0x6000746")]
	[Address(RVA = "0x978E74", Offset = "0x978E74", VA = "0x978E74")]
	public void SetMaxHealth(int newMaxHealth)
	{
	}

	[Token(Token = "0x6000747")]
	[Address(RVA = "0x978E84", Offset = "0x978E84", VA = "0x978E84", Slot = "62")]
	public void ManageLateFixedUpdate()
	{
	}

	[Token(Token = "0x6000748")]
	[Address(RVA = "0x979088", Offset = "0x979088", VA = "0x979088")]
	private void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000749")]
	[Address(RVA = "0x97921C", Offset = "0x97921C", VA = "0x97921C")]
	public Destructible()
	{
	}
}
[Token(Token = "0x200012A")]
public class GamePlayUISelector : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject singlePlayerTouch;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject gearVR;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject oculusQuest;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject nintendoSwitch;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Material skyBoxMaterial;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Material skyBoxRiftMaterial;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string colorString;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float exposureStandard;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float exposure;

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Texture defaultSkyBox;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Texture defaultRiftSkyBox;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Texture defaultLightMapTexture;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GamePlayUISelector instance;

	[Token(Token = "0x600074B")]
	[Address(RVA = "0x9850E8", Offset = "0x9850E8", VA = "0x9850E8")]
	private void Start()
	{
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0x985428", Offset = "0x985428", VA = "0x985428")]
	public void SetSkyBox(Texture texture)
	{
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0x9856F0", Offset = "0x9856F0", VA = "0x9856F0")]
	private void HideAll()
	{
	}

	[Token(Token = "0x600074E")]
	[Address(RVA = "0x9851A0", Offset = "0x9851A0", VA = "0x9851A0")]
	public void SwitchUI(int localPlayers)
	{
	}

	[Token(Token = "0x600074F")]
	[Address(RVA = "0x985860", Offset = "0x985860", VA = "0x985860")]
	public GamePlayUISelector()
	{
	}
}
[Token(Token = "0x200012B")]
public static class GameSetup
{
	[Token(Token = "0x20003C5")]
	public enum LocalPlayers
	{
		[Token(Token = "0x4001327")]
		One,
		[Token(Token = "0x4001328")]
		Two
	}

	[Token(Token = "0x20003C6")]
	public enum Platform
	{
		[Token(Token = "0x400132A")]
		touch,
		[Token(Token = "0x400132B")]
		GearVR,
		[Token(Token = "0x400132C")]
		OculusQuest,
		[Token(Token = "0x400132D")]
		nintendoSwitch,
		[Token(Token = "0x400132E")]
		Rift
	}

	[Token(Token = "0x20003C7")]
	public enum AgentType
	{
		[Token(Token = "0x4001330")]
		AgentHumanoid,
		[Token(Token = "0x4001331")]
		AgentMech,
		[Token(Token = "0x4001332")]
		AgentTank,
		[Token(Token = "0x4001333")]
		AgentTurret
	}

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool coop;

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool tabletAspect;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static Platform platform;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static LocalPlayers localPlayers;

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int networkPlayers;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Vector3 raycastOffset;

	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static float timeOut;

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static int playerPowerMultiplier;

	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public static int startingLives;

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static float aiSpawnRadius;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public static Color envColor;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public static Color lightColor;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public static float envlightBoost;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static float lightBoost;

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public static float skyBoxTint;

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static List<PlayerControl> playerControls;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static List<LightTint> lightTints;

	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static List<Destructible> destructibles;

	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static List<Destructible> players;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static List<ObjectiveOverviewTMP> objectiveOverviewTMPs;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static List<ObjectveTextInGame> objectveTextInGames;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static List<AIControl> aiControls;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static bool debugMode;

	[Token(Token = "0x6000750")]
	[Address(RVA = "0x9858CC", Offset = "0x9858CC", VA = "0x9858CC")]
	public static int GetAgentID(AgentType agentType)
	{
		return default(int);
	}

	[Token(Token = "0x6000751")]
	[Address(RVA = "0x9858F0", Offset = "0x9858F0", VA = "0x9858F0")]
	public static Vector3 RandomOffset(float range)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000752")]
	[Address(RVA = "0x9859B4", Offset = "0x9859B4", VA = "0x9859B4")]
	public static bool RandomBool()
	{
		return default(bool);
	}

	[Token(Token = "0x6000753")]
	[Address(RVA = "0x9859D8", Offset = "0x9859D8", VA = "0x9859D8")]
	public static Vector3 Round(Vector3 vector3, int decimalPlaces)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000754")]
	[Address(RVA = "0x978B74", Offset = "0x978B74", VA = "0x978B74")]
	public static PlayerControl ClosestPlayerController(Vector3 myPosition, PlayerControl localPlayerControl)
	{
		return null;
	}

	[Token(Token = "0x6000755")]
	[Address(RVA = "0x985C08", Offset = "0x985C08", VA = "0x985C08")]
	public static void SetEnV(Color envColorN, Color lightsColorN, float lightBoostN, float envLightBoostN)
	{
	}

	[Token(Token = "0x6000756")]
	[Address(RVA = "0x985DC8", Offset = "0x985DC8", VA = "0x985DC8")]
	private static void UpdateSpotLights(Color newLightColor)
	{
	}
}
[Token(Token = "0x200012C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6E0FA8", Offset = "0x6E0FA8")]
public class ParticleSpawnerBaseClass : PunBehaviour, IProjectile
{
	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem.EmitParams ep;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private ParticleSystem ps;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public AudioClip[] startSound;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public AudioClip[] hitSound;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public AudioClip[] destructibleHitSound;

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public LayerMask destructibleLayerMask;

	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public bool childHitCollision;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public int frameSkipLoadBalance;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private bool justHit;

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDD")]
	private bool justFired;

	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int arraySize;

	[Token(Token = "0x6000758")]
	[Address(RVA = "0xA2611C", Offset = "0xA2611C", VA = "0xA2611C")]
	private void Init()
	{
	}

	[Token(Token = "0x6000759")]
	[Address(RVA = "0xA26184", Offset = "0xA26184", VA = "0xA26184", Slot = "63")]
	public void Fire(Vector3 origin, Vector3 direction)
	{
	}

	[Token(Token = "0x600075A")]
	[Address(RVA = "0xA263D0", Offset = "0xA263D0", VA = "0xA263D0", Slot = "62")]
	public void Fire(Vector3[] origin, Vector3[] direction, int arraySize)
	{
	}

	[Token(Token = "0x600075B")]
	[Address(RVA = "0xA26670", Offset = "0xA26670", VA = "0xA26670")]
	public void OnParticleCollision(GameObject other)
	{
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0xA25FD0", Offset = "0xA25FD0", VA = "0xA25FD0")]
	public void ChildParticleCollision(GameObject other)
	{
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0xA26848", Offset = "0xA26848", VA = "0xA26848")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0xA268A4", Offset = "0xA268A4", VA = "0xA268A4", Slot = "65")]
	public virtual void Hit(GameObject hitObject)
	{
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0xA26910", Offset = "0xA26910", VA = "0xA26910")]
	public ParticleSpawnerBaseClass()
	{
	}
}
[Token(Token = "0x200012D")]
public class RendererCuller : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<culledRenderObject> renderersInScene;

	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float loadBlancing;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int currentRenderer;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float cullingDistance;

	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static float CullingDistance;

	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static bool thirtyFps;

	[Token(Token = "0x6000761")]
	[Address(RVA = "0x952630", Offset = "0x952630", VA = "0x952630")]
	private void Start()
	{
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0x952834", Offset = "0x952834", VA = "0x952834")]
	public static void Set30Fps(bool thirty)
	{
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0x9526A4", Offset = "0x9526A4", VA = "0x9526A4")]
	public static void UpdateFrameTarget()
	{
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0x9528A8", Offset = "0x9528A8", VA = "0x9528A8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0x952A38", Offset = "0x952A38", VA = "0x952A38")]
	public RendererCuller()
	{
	}
}
[Token(Token = "0x200012E")]
public class ScoreTableDebug : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Text text;

	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float lastCheckTime;

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float interval;

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string output;

	[Token(Token = "0x6000767")]
	[Address(RVA = "0x8F89EC", Offset = "0x8F89EC", VA = "0x8F89EC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0x8F8A60", Offset = "0x8F8A60", VA = "0x8F8A60")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0x8F8AD4", Offset = "0x8F8AD4", VA = "0x8F8AD4")]
	private void HandleLog(string logString, string stackTrace, LogType type)
	{
	}

	[Token(Token = "0x600076A")]
	[Address(RVA = "0x8F8ADC", Offset = "0x8F8ADC", VA = "0x8F8ADC")]
	private void Update()
	{
	}

	[Token(Token = "0x600076B")]
	[Address(RVA = "0x8F9650", Offset = "0x8F9650", VA = "0x8F9650")]
	public ScoreTableDebug()
	{
	}
}
[Token(Token = "0x200012F")]
public class SetAliveWhenFinishedAnimator : StateMachineBehaviour
{
	[Token(Token = "0x600076C")]
	[Address(RVA = "0x8F9ABC", Offset = "0x8F9ABC", VA = "0x8F9ABC")]
	public SetAliveWhenFinishedAnimator()
	{
	}
}
[Token(Token = "0x2000130")]
public class Bumper : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float lastEnabled;

	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CharacterControl characterControl;

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private CharacterSoldierAnimator soldierAnimator;

	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private LocalDestructible localDestructible;

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool active;

	[Token(Token = "0x600076D")]
	[Address(RVA = "0x9AD588", Offset = "0x9AD588", VA = "0x9AD588")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600076E")]
	[Address(RVA = "0x9AD7D8", Offset = "0x9AD7D8", VA = "0x9AD7D8")]
	public Bumper()
	{
	}
}
[Token(Token = "0x2000131")]
public class ButtonEnableWhenLevelLoaded : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x600076F")]
	[Address(RVA = "0x9AD7E0", Offset = "0x9AD7E0", VA = "0x9AD7E0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000770")]
	[Address(RVA = "0x9AD89C", Offset = "0x9AD89C", VA = "0x9AD89C")]
	public ButtonEnableWhenLevelLoaded()
	{
	}
}
[Token(Token = "0x2000132")]
public class ButtonSelectOnEnable : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6000771")]
	[Address(RVA = "0x9AD8A4", Offset = "0x9AD8A4", VA = "0x9AD8A4")]
	public void SelectButon()
	{
	}

	[Token(Token = "0x6000772")]
	[Address(RVA = "0x9ADC34", Offset = "0x9ADC34", VA = "0x9ADC34")]
	public ButtonSelectOnEnable()
	{
	}
}
[Token(Token = "0x2000133")]
[ExecuteInEditMode]
public class CameraLayerCullingConfig : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float[] distances;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool cullSphere;

	[Token(Token = "0x6000773")]
	[Address(RVA = "0x9AF6DC", Offset = "0x9AF6DC", VA = "0x9AF6DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000774")]
	[Address(RVA = "0x9AF6E0", Offset = "0x9AF6E0", VA = "0x9AF6E0")]
	private void UpdateLayers()
	{
	}

	[Token(Token = "0x6000775")]
	[Address(RVA = "0x9AF7AC", Offset = "0x9AF7AC", VA = "0x9AF7AC")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000776")]
	[Address(RVA = "0x9AF7B0", Offset = "0x9AF7B0", VA = "0x9AF7B0")]
	public CameraLayerCullingConfig()
	{
	}
}
[Token(Token = "0x2000134")]
public class CampaignManager : Photon.MonoBehaviour
{
	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] trackedObjects;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool[] objectStates;

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string lastMessage;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 spawnPosition;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 objectivePosition;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CampaignManager Instance;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static float lastObjectiveUpdate;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool humanOnly;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Language language;

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private LocalDestructible[] localDestructibles;

	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private CampaignTrigger[] campaignTriggers;

	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ChangeCharacterTrigger[] changeCharacterTriggers;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int lastStageId;

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public int lastObjectiveId;

	[Token(Token = "0x6000777")]
	[Address(RVA = "0x9AF810", Offset = "0x9AF810", VA = "0x9AF810")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000778")]
	[Address(RVA = "0x9AFB88", Offset = "0x9AFB88", VA = "0x9AFB88")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000779")]
	[Address(RVA = "0x9AF8C0", Offset = "0x9AF8C0", VA = "0x9AF8C0")]
	private void FindTriggers()
	{
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0x9AFC04", Offset = "0x9AFC04", VA = "0x9AFC04")]
	private void OnPhotonPlayerConnected(PhotonPlayer newPlayer)
	{
	}

	[Token(Token = "0x600077B")]
	[Address(RVA = "0x9B009C", Offset = "0x9B009C", VA = "0x9B009C")]
	private void OnLevelLoaded(Scene scene, LoadSceneMode mode)
	{
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0x9B01C4", Offset = "0x9B01C4", VA = "0x9B01C4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x6EB8C8", Offset = "0x6EB8C8")]
	public void UpdateObjects()
	{
	}

	[Token(Token = "0x600077D")]
	[Address(RVA = "0x9B04E4", Offset = "0x9B04E4", VA = "0x9B04E4")]
	[PunRPC]
	private void UpdateObjectsRPC(bool[] newObjectStatus)
	{
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0x9B0368", Offset = "0x9B0368", VA = "0x9B0368")]
	private void UpdateObjectVisibility()
	{
	}

	[Token(Token = "0x600077F")]
	[Address(RVA = "0x9B0530", Offset = "0x9B0530", VA = "0x9B0530")]
	public void UpdateMessage(int stageId, int messageId, int unlockStage, int unlockChar, int unlockWeap, bool temporaryTrigger)
	{
	}

	[Token(Token = "0x6000780")]
	[Address(RVA = "0x9B07AC", Offset = "0x9B07AC", VA = "0x9B07AC")]
	public void ResetToLastMessage()
	{
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0x9B09AC", Offset = "0x9B09AC", VA = "0x9B09AC")]
	[PunRPC]
	private void UpdateMessageRPC(int stageId, int messageId, int unlockStage, int unlockChar, int unlockWeap)
	{
	}

	[Token(Token = "0x6000782")]
	[Address(RVA = "0x9B0E40", Offset = "0x9B0E40", VA = "0x9B0E40")]
	public void UpdateSpawnPosition(Vector3 newPosition)
	{
	}

	[Token(Token = "0x6000783")]
	[Address(RVA = "0x9B0FCC", Offset = "0x9B0FCC", VA = "0x9B0FCC")]
	[PunRPC]
	private void UpdateSpawnRPC(Vector3 newPosition)
	{
	}

	[Token(Token = "0x6000784")]
	[Address(RVA = "0x9B113C", Offset = "0x9B113C", VA = "0x9B113C")]
	public void UpdateObjectivePosition(Vector3 newPosition)
	{
	}

	[Token(Token = "0x6000785")]
	[Address(RVA = "0x9B1298", Offset = "0x9B1298", VA = "0x9B1298")]
	[PunRPC]
	private void UpdateObjectiveRPC(Vector3 newPosition)
	{
	}

	[Token(Token = "0x6000786")]
	[Address(RVA = "0x9B1334", Offset = "0x9B1334", VA = "0x9B1334")]
	public CampaignManager()
	{
	}
}
[Token(Token = "0x2000135")]
public class CampaignTrigger : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject[] enableOnTriggerObjects;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject[] disableOnTriggerObjects;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool explosionOnDisable;

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[SerializeField]
	private bool updateSpawnPositionOnTrigger;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform updateObjectivePositionOnTrigger;

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6E3DAC", Offset = "0x6E3DAC")]
	[SerializeField]
	private int stagetext;

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6E3DEC", Offset = "0x6E3DEC")]
	[SerializeField]
	private int objectivetext;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x6E3E2C", Offset = "0x6E3E2C")]
	public string english;

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private int unlockStageOnTrigger;

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private int unlockcharacterOnTrigger;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private int unlockWeaponOnTrigger;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private bool doNotShowIfUnlocked;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	[SerializeField]
	private bool levelComplete;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	[SerializeField]
	private bool pauseOnTrigger;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private AudioClip triggerEnterSound;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private AudioClip triggerSound;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private AudioClip triggerExitSound;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private bool hackingSound;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SerializeField]
	private float activateTime;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private VideoClip videoClip;

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private VideoClip videoClipHard;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private bool temporaryTrigger;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float currentActivateTime;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float ObjectiveFill;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string playerString;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private Animation linkAnimationOnDisableEnable;

	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private Language language;

	[Token(Token = "0x6000788")]
	[Address(RVA = "0x9B1398", Offset = "0x9B1398", VA = "0x9B1398")]
	private void Start()
	{
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0x9B16B0", Offset = "0x9B16B0", VA = "0x9B16B0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600078A")]
	[Address(RVA = "0x9B19D8", Offset = "0x9B19D8", VA = "0x9B19D8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600078B")]
	[Address(RVA = "0x9B1B60", Offset = "0x9B1B60", VA = "0x9B1B60")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x600078C")]
	[Address(RVA = "0x9B22B8", Offset = "0x9B22B8", VA = "0x9B22B8")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600078D")]
	[Address(RVA = "0x9B23F4", Offset = "0x9B23F4", VA = "0x9B23F4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600078E")]
	[Address(RVA = "0x9B1C88", Offset = "0x9B1C88", VA = "0x9B1C88")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x6EB940", Offset = "0x6EB940")]
	public void ActivateThisTrigger()
	{
	}

	[Token(Token = "0x600078F")]
	[Address(RVA = "0x9B2534", Offset = "0x9B2534", VA = "0x9B2534")]
	private void ShowPauseMenu()
	{
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0x9B2594", Offset = "0x9B2594", VA = "0x9B2594")]
	public CampaignTrigger()
	{
	}
}
[Token(Token = "0x2000136")]
public class CharacterButtonUnlock : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6E3F44", Offset = "0x6E3F44")]
	[SerializeField]
	private int character;

	[Token(Token = "0x6000792")]
	[Address(RVA = "0x9B3D6C", Offset = "0x9B3D6C", VA = "0x9B3D6C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0x9B3F2C", Offset = "0x9B3F2C", VA = "0x9B3F2C")]
	public CharacterButtonUnlock()
	{
	}
}
[Token(Token = "0x2000137")]
public class CharacterDetailsTMP : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TextMeshProUGUI tmp;

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string baseText;

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string topText;

	[Token(Token = "0x6000794")]
	[Address(RVA = "0x9BB890", Offset = "0x9BB890", VA = "0x9BB890")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000795")]
	[Address(RVA = "0x9BB8E8", Offset = "0x9BB8E8", VA = "0x9BB8E8")]
	public void updateBase(string description)
	{
	}

	[Token(Token = "0x6000796")]
	[Address(RVA = "0x9BB99C", Offset = "0x9BB99C", VA = "0x9BB99C")]
	public void updateTop(string description)
	{
	}

	[Token(Token = "0x6000797")]
	[Address(RVA = "0x9BBA50", Offset = "0x9BBA50", VA = "0x9BBA50")]
	public CharacterDetailsTMP()
	{
	}
}
[Token(Token = "0x2000138")]
public class CharacterMapIndicator : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20003C8")]
	public enum IndicatorStatus
	{
		[Token(Token = "0x4001335")]
		Player,
		[Token(Token = "0x4001336")]
		Enemy,
		[Token(Token = "0x4001337")]
		Friendly,
		[Token(Token = "0x4001338")]
		AIIdle,
		[Token(Token = "0x4001339")]
		AIAlert
	}

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SpriteRenderer thisRenderer;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Color playerColor;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Color enemyColor;

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static Color friendlyColor;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static Color aiIdleColor;

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static Color aiAlertColor;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static CharacterMapIndicator instance;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Sprite aiSprite;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Sprite playerSprite;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SpriteRenderer spriteRenderer;

	[Token(Token = "0x6000798")]
	[Address(RVA = "0x9BC180", Offset = "0x9BC180", VA = "0x9BC180")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0x9B9224", Offset = "0x9B9224", VA = "0x9B9224")]
	public void UpdateIndicator(Quaternion rotation, IndicatorStatus status)
	{
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0x9BC1D8", Offset = "0x9BC1D8", VA = "0x9BC1D8")]
	public void Update()
	{
	}

	[Token(Token = "0x600079B")]
	[Address(RVA = "0x9BC3B8", Offset = "0x9BC3B8", VA = "0x9BC3B8")]
	public CharacterMapIndicator()
	{
	}
}
[Token(Token = "0x2000139")]
public class CharacterMaterial : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Material playerMaterial;

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Material enemyMaterial;

	[Token(Token = "0x600079D")]
	[Address(RVA = "0x9B679C", Offset = "0x9B679C", VA = "0x9B679C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x6EB978", Offset = "0x6EB978")]
	public void PlayerMaterial()
	{
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0x9B6800", Offset = "0x9B6800", VA = "0x9B6800")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x6EB9B0", Offset = "0x6EB9B0")]
	public void EnemyMaterial()
	{
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0x9BC4A0", Offset = "0x9BC4A0", VA = "0x9BC4A0")]
	public CharacterMaterial()
	{
	}
}
[Token(Token = "0x200013A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6E101C", Offset = "0x6E101C")]
public class CharacterMoveSound : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterControl characterControl;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSource audioSource;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioClip normalMoveSound;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioClip fireMoveSound;

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AudioClip waterMoveSound;

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private AudioClip waterFireSound;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private bool soundDelay;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Renderer myRenderer;

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0x9BC4A8", Offset = "0x9BC4A8", VA = "0x9BC4A8")]
	private void Update()
	{
	}

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0x9BC79C", Offset = "0x9BC79C", VA = "0x9BC79C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0x9BC874", Offset = "0x9BC874", VA = "0x9BC874")]
	public CharacterMoveSound()
	{
	}
}
[Token(Token = "0x200013B")]
public class CharacterSelection : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CharacterSetup.Legs currentLegs;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static CharacterSetup.Tops currentTops;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CharacterControl characterControl;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool player1;

	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float currentSpeed;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float currentShields;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private CustomButton defaultLegs;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private CustomButton defaultTop;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float enabledTime;

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0x9BC884", Offset = "0x9BC884", VA = "0x9BC884")]
	public void SelectLegs(int legReference)
	{
	}

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0x9BCB68", Offset = "0x9BCB68", VA = "0x9BCB68")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0x9BCBEC", Offset = "0x9BCBEC", VA = "0x9BCBEC")]
	public void ResetToDefault()
	{
	}

	[Token(Token = "0x60007A6")]
	[Address(RVA = "0x9BCC70", Offset = "0x9BCC70", VA = "0x9BCC70")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007A7")]
	[Address(RVA = "0x9BCD64", Offset = "0x9BCD64", VA = "0x9BCD64")]
	private void OnLevelLoaded(Scene scene, LoadSceneMode mode)
	{
	}

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0x9BCDDC", Offset = "0x9BCDDC", VA = "0x9BCDDC")]
	public void SelectTop(int topReference)
	{
	}

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0x9BCEC8", Offset = "0x9BCEC8", VA = "0x9BCEC8")]
	public void PlayerReady()
	{
	}

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0x9BD408", Offset = "0x9BD408", VA = "0x9BD408")]
	public void PlayerDisable()
	{
	}

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0x9BD438", Offset = "0x9BD438", VA = "0x9BD438")]
	private void Update()
	{
	}

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0x9BD56C", Offset = "0x9BD56C", VA = "0x9BD56C")]
	public CharacterSelection()
	{
	}
}
[Token(Token = "0x200013C")]
public class CharacterStationary : UnityEngine.MonoBehaviour, ICharacterBase
{
	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float normalSpeed;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float fireSpeed;

	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int maxHealth;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private int maxHealthAi;

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform mountPoint;

	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool largeAgent;

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private GameSetup.AgentType agentType;

	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CharacterControl characterControl;

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Destructible destructible;

	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Collider thisCollider;

	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private bool explodeOnDie;

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private AudioClip hitAudio;

	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private AudioClip alertAudio;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private AudioClip dieAudio;

	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float time;

	[Token(Token = "0x17000101")]
	public int GetMaxHealthAI
	{
		[Token(Token = "0x60007AD")]
		[Address(RVA = "0x9BE664", Offset = "0x9BE664", VA = "0x9BE664", Slot = "11")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000102")]
	public AudioClip GetHitAudio
	{
		[Token(Token = "0x60007AE")]
		[Address(RVA = "0x9BE66C", Offset = "0x9BE66C", VA = "0x9BE66C", Slot = "13")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000103")]
	public AudioClip GetAlertAudio
	{
		[Token(Token = "0x60007AF")]
		[Address(RVA = "0x9BE674", Offset = "0x9BE674", VA = "0x9BE674", Slot = "14")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000104")]
	public AudioClip GetDieAudio
	{
		[Token(Token = "0x60007B0")]
		[Address(RVA = "0x9BE67C", Offset = "0x9BE67C", VA = "0x9BE67C", Slot = "15")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000105")]
	public bool GetExplodeOnDie
	{
		[Token(Token = "0x60007B1")]
		[Address(RVA = "0x9BE684", Offset = "0x9BE684", VA = "0x9BE684", Slot = "12")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000106")]
	public GameSetup.AgentType GetAgentType
	{
		[Token(Token = "0x60007B2")]
		[Address(RVA = "0x9BE68C", Offset = "0x9BE68C", VA = "0x9BE68C", Slot = "4")]
		get
		{
			return default(GameSetup.AgentType);
		}
	}

	[Token(Token = "0x17000107")]
	public Transform GetTransform
	{
		[Token(Token = "0x60007B3")]
		[Address(RVA = "0x9BE694", Offset = "0x9BE694", VA = "0x9BE694", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000108")]
	public GameObject GetGameObject
	{
		[Token(Token = "0x60007B4")]
		[Address(RVA = "0x9BE69C", Offset = "0x9BE69C", VA = "0x9BE69C", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000109")]
	public float GetNormalSpeed
	{
		[Token(Token = "0x60007B5")]
		[Address(RVA = "0x9BE6A4", Offset = "0x9BE6A4", VA = "0x9BE6A4", Slot = "5")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700010A")]
	public float GetFireSpeed
	{
		[Token(Token = "0x60007B6")]
		[Address(RVA = "0x9BE6AC", Offset = "0x9BE6AC", VA = "0x9BE6AC", Slot = "6")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700010B")]
	public Transform GetMount
	{
		[Token(Token = "0x60007B7")]
		[Address(RVA = "0x9BE6B4", Offset = "0x9BE6B4", VA = "0x9BE6B4", Slot = "9")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700010C")]
	public int GetMaxHealth
	{
		[Token(Token = "0x60007B8")]
		[Address(RVA = "0x9BE6BC", Offset = "0x9BE6BC", VA = "0x9BE6BC", Slot = "10")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0x9BE6C4", Offset = "0x9BE6C4", VA = "0x9BE6C4")]
	public void Update()
	{
	}

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0x9BE7D0", Offset = "0x9BE7D0", VA = "0x9BE7D0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0x9BE974", Offset = "0x9BE974", VA = "0x9BE974")]
	public CharacterStationary()
	{
	}
}
[Token(Token = "0x200013D")]
public class AIControl : UnityEngine.MonoBehaviour, IController
{
	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float checkSensorInterval;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float lastSensorCheckTime;

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float coolDownTime;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float flankDistance;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float sensorDistance;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float alertSensorDistance;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool playerInRange;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool playerVisible;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	private bool FireandMove;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 lastSpottedPosition;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private CharacterControl currentTarget;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public CharacterControl characterControl;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 randomDirection;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float resetAlertModeTime;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private CharacterControlParams ccp;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int randomCounter;

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0x9A8590", Offset = "0x9A8590", VA = "0x9A8590")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007BD")]
	[Address(RVA = "0x9A86A4", Offset = "0x9A86A4", VA = "0x9A86A4", Slot = "6")]
	public void RespawnInit()
	{
	}

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0x9A86F4", Offset = "0x9A86F4", VA = "0x9A86F4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0x9A8798", Offset = "0x9A8798", VA = "0x9A8798")]
	private void AlertMode()
	{
	}

	[Token(Token = "0x60007C0")]
	[Address(RVA = "0x9A8A48", Offset = "0x9A8A48", VA = "0x9A8A48", Slot = "4")]
	public CharacterControlParams UpdateController(NavMeshAgent navMeshAgent)
	{
		return null;
	}

	[Token(Token = "0x60007C1")]
	[Address(RVA = "0x9A945C", Offset = "0x9A945C", VA = "0x9A945C", Slot = "5")]
	public void ControllerMovement(NavMeshAgent navMeshAgent, CharacterControlParams ccp, float moveSpeed)
	{
	}

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0x9A97EC", Offset = "0x9A97EC", VA = "0x9A97EC")]
	private CharacterControl checkPlayerInRange()
	{
		return null;
	}

	[Token(Token = "0x60007C3")]
	private void ShuffleArray<T>(T[] array)
	{
	}

	[Token(Token = "0x60007C4")]
	[Address(RVA = "0x9A9F00", Offset = "0x9A9F00", VA = "0x9A9F00")]
	public bool CheckPlayerInRange()
	{
		return default(bool);
	}

	[Token(Token = "0x60007C5")]
	[Address(RVA = "0x9A9F50", Offset = "0x9A9F50", VA = "0x9A9F50")]
	public Vector3 GetPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60007C6")]
	[Address(RVA = "0x9A9F74", Offset = "0x9A9F74", VA = "0x9A9F74")]
	private void Start()
	{
	}

	[Token(Token = "0x60007C7")]
	[Address(RVA = "0x9A9FF8", Offset = "0x9A9FF8", VA = "0x9A9FF8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0x9AA07C", Offset = "0x9AA07C", VA = "0x9AA07C")]
	public AIControl()
	{
	}
}
[Token(Token = "0x200013E")]
public class CameraFollowPlayer : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform target;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Transform PlayerCameraRig;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float cameraMoveSpeed;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float rotationSpeed;

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Canvas moveControls;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Canvas rotateControls;

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Canvas playerStats;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject playerAim;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 playerStatusOffset;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public CharacterControl characterControl;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static CameraFollowPlayer playerCameraFollow;

	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform UIPosition;

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MenuController menuController;

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool autoRotate;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 autoRotateDir;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float touchPressedTime;

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform overridePosition;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static bool gamePadConnected;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Vector3 startOffset;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float offset;

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0x9ADC3C", Offset = "0x9ADC3C", VA = "0x9ADC3C")]
	private void Start()
	{
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0x9ADD48", Offset = "0x9ADD48", VA = "0x9ADD48")]
	public void DisableCharacter()
	{
	}

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0x9ADDD8", Offset = "0x9ADDD8", VA = "0x9ADDD8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0x9ADEB0", Offset = "0x9ADEB0", VA = "0x9ADEB0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0x9AF004", Offset = "0x9AF004", VA = "0x9AF004")]
	public void QuestRifInput()
	{
	}

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0x9AF5D4", Offset = "0x9AF5D4", VA = "0x9AF5D4")]
	public void SetRotation(Quaternion rotation)
	{
	}

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0x9AF638", Offset = "0x9AF638", VA = "0x9AF638")]
	public CameraFollowPlayer()
	{
	}
}
[Token(Token = "0x200013F")]
public class CharacterControlParams
{
	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 moveDirection;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 lookDirection;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool firing;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool alert;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public ButtonState special;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool reload;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 targetPosition;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float maxSpeed;

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0x9AA0FC", Offset = "0x9AA0FC", VA = "0x9AA0FC")]
	public CharacterControlParams()
	{
	}
}
[Token(Token = "0x2000140")]
public class CharacterControl : PunBehaviour, IManagedUpdated, IManagedLateUpdated
{
	[Token(Token = "0x20003C9")]
	public enum ControlType
	{
		[Token(Token = "0x400133B")]
		none,
		[Token(Token = "0x400133C")]
		AI,
		[Token(Token = "0x400133D")]
		Player
	}

	[Token(Token = "0x20003CA")]
	public enum InputType
	{
		[Token(Token = "0x400133F")]
		none,
		[Token(Token = "0x4001340")]
		GearVR,
		[Token(Token = "0x4001341")]
		Oculus,
		[Token(Token = "0x4001342")]
		Player1Touch,
		[Token(Token = "0x4001343")]
		nintendoSwitch
	}

	[Token(Token = "0x20003CB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E1B24", Offset = "0x6E1B24")]
	private sealed class <DropCharacterAnim>d__58 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CharacterControl <>4__this;

		[Token(Token = "0x4001347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <overGround>5__2;

		[Token(Token = "0x17000254")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001843")]
			[Address(RVA = "0x9BB44C", Offset = "0x9BB44C", VA = "0x9BB44C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000255")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001845")]
			[Address(RVA = "0x9BB4B4", Offset = "0x9BB4B4", VA = "0x9BB4B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001840")]
		[Address(RVA = "0x9B752C", Offset = "0x9B752C", VA = "0x9B752C")]
		[DebuggerHidden]
		public <DropCharacterAnim>d__58(int <>1__state)
		{
		}

		[Token(Token = "0x6001841")]
		[Address(RVA = "0x9BAFCC", Offset = "0x9BAFCC", VA = "0x9BAFCC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001842")]
		[Address(RVA = "0x9BAFD0", Offset = "0x9BAFD0", VA = "0x9BAFD0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001844")]
		[Address(RVA = "0x9BB454", Offset = "0x9BB454", VA = "0x9BB454", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E1B34", Offset = "0x6E1B34")]
	private sealed class <DestroyLegsAnimation>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400134A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CharacterControl <>4__this;

		[Token(Token = "0x17000256")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001849")]
			[Address(RVA = "0x9BAF5C", Offset = "0x9BAF5C", VA = "0x9BAF5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000257")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600184B")]
			[Address(RVA = "0x9BAFC4", Offset = "0x9BAFC4", VA = "0x9BAFC4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001846")]
		[Address(RVA = "0x9B8924", Offset = "0x9B8924", VA = "0x9B8924")]
		[DebuggerHidden]
		public <DestroyLegsAnimation>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x6001847")]
		[Address(RVA = "0x9BAB7C", Offset = "0x9BAB7C", VA = "0x9BAB7C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001848")]
		[Address(RVA = "0x9BAB80", Offset = "0x9BAB80", VA = "0x9BAB80", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600184A")]
		[Address(RVA = "0x9BAF64", Offset = "0x9BAF64", VA = "0x9BAF64", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003CD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E1B44", Offset = "0x6E1B44")]
	private sealed class <EndStageAnimation>d__65 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400134B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400134C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400134D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CharacterControl <>4__this;

		[Token(Token = "0x17000258")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600184F")]
			[Address(RVA = "0x9BB820", Offset = "0x9BB820", VA = "0x9BB820", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000259")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001851")]
			[Address(RVA = "0x9BB888", Offset = "0x9BB888", VA = "0x9BB888", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600184C")]
		[Address(RVA = "0x9B89C0", Offset = "0x9B89C0", VA = "0x9B89C0")]
		[DebuggerHidden]
		public <EndStageAnimation>d__65(int <>1__state)
		{
		}

		[Token(Token = "0x600184D")]
		[Address(RVA = "0x9BB4BC", Offset = "0x9BB4BC", VA = "0x9BB4BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600184E")]
		[Address(RVA = "0x9BB4C0", Offset = "0x9BB4C0", VA = "0x9BB4C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001850")]
		[Address(RVA = "0x9BB828", Offset = "0x9BB828", VA = "0x9BB828", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Mesh fatCollider;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Mesh smallCollider;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float lastfireTime;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ControlType controlType;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public InputType inputType;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public CharacterControlParams ccp;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private IController controllerProxy;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IWeapon[] weapons;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ISpecial special;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float normalSpeed;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float fireSpeed;

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool isUsingSpecial;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	private float rotateSpeed;

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private LayerMask groundLayerMask;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[SerializeField]
	private LayerMask spawnLayerMask;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public LayerMask hitLayerMask;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public NavMeshAgent navMeshAgent;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[HideInInspector]
	public Quaternion baseRotation;

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[HideInInspector]
	public Quaternion topRotation;

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float magnitude;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private Vector3 previousPosition;

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Quaternion groundRotation;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float checkGroundInterval;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float lastGroundCheck;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Destructible destructible;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[HideInInspector]
	public Collider thisCollider;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int currentWeapon;

	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	[HideInInspector]
	public Vector3 startPositon;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public CharacterSetup.Legs currentBase;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private CharacterSetup.Tops currentTop;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private IEnumerator dropAnimCoroutine;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject shield;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public CharacterMapIndicator indicator;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private CharacterMapIndicator.IndicatorStatus indicatorStatus;

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public GameObject playerName;

	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private PhotonTransformView photonTransformView;

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public float viewerRange;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	public bool specialView;

	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject dropPod;

	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private AudioSource feedbackAudio;

	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private string PlayerStr;

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private bool player;

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private string RemoteUseSpecialStr;

	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private string ChangeCharRPCStr;

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private RaycastHit groundHit;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	public bool inWater;

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public CharacterSetup characterSetup;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public float character_Size;

	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private aimLaser[] aimLasers;

	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private float explodeShake;

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	private float explodeAMp;

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private Vector3 moveVelocity;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	private float angularVelocity;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private float speed;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	private Vector3 previousDirection;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private CameraShakeInstance shakeInstance;

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0x9B52EC", Offset = "0x9B52EC", VA = "0x9B52EC")]
	public void ChangeCharacterTriggerNow(CharacterSetup.Legs baseID, CharacterSetup.Tops topID, float size)
	{
	}

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0x9B54A8", Offset = "0x9B54A8", VA = "0x9B54A8")]
	[PunRPC]
	private void ChangeCharRPC(CharacterSetup.Legs baseID, CharacterSetup.Tops topID, float size)
	{
	}

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0x9AC74C", Offset = "0x9AC74C", VA = "0x9AC74C")]
	public void EnableCharacter(CharacterSetup.Legs baseID, CharacterSetup.Tops topID, Vector3 position, Quaternion rotation, float size)
	{
	}

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0x9ACA1C", Offset = "0x9ACA1C", VA = "0x9ACA1C")]
	public void DisableCharacter(bool disableDropPod)
	{
	}

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0x9B6864", Offset = "0x9B6864", VA = "0x9B6864")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0x9B6A08", Offset = "0x9B6A08", VA = "0x9B6A08", Slot = "34")]
	public override void OnLeftRoom()
	{
	}

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0x9B6A84", Offset = "0x9B6A84", VA = "0x9B6A84")]
	private void Init()
	{
	}

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0x9B74BC", Offset = "0x9B74BC", VA = "0x9B74BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6EB9F8", Offset = "0x6EB9F8")]
	private IEnumerator DropCharacterAnim()
	{
		return null;
	}

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0x9B7558", Offset = "0x9B7558", VA = "0x9B7558")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0x9B7600", Offset = "0x9B7600", VA = "0x9B7600")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0x9B76A8", Offset = "0x9B76A8", VA = "0x9B76A8", Slot = "62")]
	public void ManageUpdate()
	{
	}

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0x9B88B4", Offset = "0x9B88B4", VA = "0x9B88B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6EBA5C", Offset = "0x6EBA5C")]
	private IEnumerator DestroyLegsAnimation()
	{
		return null;
	}

	[Token(Token = "0x60007DE")]
	[Address(RVA = "0x9B8950", Offset = "0x9B8950", VA = "0x9B8950")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6EBAC0", Offset = "0x6EBAC0")]
	private IEnumerator EndStageAnimation()
	{
		return null;
	}

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0x9B89EC", Offset = "0x9B89EC", VA = "0x9B89EC", Slot = "63")]
	public void ManageLateUpdate()
	{
	}

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0x9B9714", Offset = "0x9B9714", VA = "0x9B9714")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0x9B8018", Offset = "0x9B8018", VA = "0x9B8018")]
	private void ControllerUpdate()
	{
	}

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0x9B80E0", Offset = "0x9B80E0", VA = "0x9B80E0")]
	private void MovementUpdate()
	{
	}

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0x9B8414", Offset = "0x9B8414", VA = "0x9B8414")]
	private void DirectionUpdate()
	{
	}

	[Token(Token = "0x60007E4")]
	[Address(RVA = "0x9B9798", Offset = "0x9B9798", VA = "0x9B9798")]
	private void FiringUpdate()
	{
	}

	[Token(Token = "0x60007E5")]
	[Address(RVA = "0x9B8240", Offset = "0x9B8240", VA = "0x9B8240")]
	private void SpecialUpdate()
	{
	}

	[Token(Token = "0x60007E6")]
	[Address(RVA = "0x9BA124", Offset = "0x9BA124", VA = "0x9BA124")]
	[PunRPC]
	private void RemoteUseSpecial(Vector3 origin, Vector3 direction, Vector3 targetPosition)
	{
	}

	[Token(Token = "0x60007E7")]
	[Address(RVA = "0x9BA2E4", Offset = "0x9BA2E4", VA = "0x9BA2E4")]
	[PunRPC]
	private void SpecialRefillRPC()
	{
	}

	[Token(Token = "0x60007E8")]
	[Address(RVA = "0x9B9EDC", Offset = "0x9B9EDC", VA = "0x9B9EDC")]
	private Quaternion GetGroundQuaternion()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60007E9")]
	[Address(RVA = "0x9BA3D4", Offset = "0x9BA3D4", VA = "0x9BA3D4")]
	private void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0x9BA88C", Offset = "0x9BA88C", VA = "0x9BA88C")]
	public void HitAudio()
	{
	}

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0x9A8888", Offset = "0x9A8888", VA = "0x9A8888")]
	public void AlertAudio()
	{
	}

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0x9B86F4", Offset = "0x9B86F4", VA = "0x9B86F4")]
	public void DieAudio()
	{
	}

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0x9BAA4C", Offset = "0x9BAA4C", VA = "0x9BAA4C")]
	public CharacterControl()
	{
	}
}
[Token(Token = "0x2000141")]
public class PlayerControl : UnityEngine.MonoBehaviour, IController
{
	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public IInputProxy inputProxy;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public CharacterControl characterControl;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Transform LocalPlayerTransform;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Transform LocalAvatarTransform;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static IInputProxy LocalPlayerInput;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 movementLerp;

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CharacterControlParams ccp;

	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static bool optionalAimMode;

	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public static bool optionalFireMode;

	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 movementCache;

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0x948134", Offset = "0x948134", VA = "0x948134")]
	public static void SetFireMode(bool optionFireBool)
	{
	}

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0x94827C", Offset = "0x94827C", VA = "0x94827C")]
	public static void UpdateOptionalFireMode()
	{
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0x948398", Offset = "0x948398", VA = "0x948398")]
	public static void SetAimMode(bool optionAimBool)
	{
	}

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0x94840C", Offset = "0x94840C", VA = "0x94840C")]
	public static void UpdateOptionalAimMode()
	{
	}

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0x948504", Offset = "0x948504", VA = "0x948504")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0x94855C", Offset = "0x94855C", VA = "0x94855C", Slot = "6")]
	public void RespawnInit()
	{
	}

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0x9485F8", Offset = "0x9485F8", VA = "0x9485F8")]
	private void Start()
	{
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0x94867C", Offset = "0x94867C", VA = "0x94867C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0x948700", Offset = "0x948700", VA = "0x948700")]
	private void Init()
	{
	}

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0x9487B0", Offset = "0x9487B0", VA = "0x9487B0", Slot = "4")]
	public CharacterControlParams UpdateController(NavMeshAgent navMeshAgent)
	{
		return null;
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0x948B88", Offset = "0x948B88", VA = "0x948B88", Slot = "5")]
	public void ControllerMovement(NavMeshAgent navMeshAgent, CharacterControlParams ccp, float moveSpeed)
	{
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0x948D60", Offset = "0x948D60", VA = "0x948D60")]
	public PlayerControl()
	{
	}
}
[Token(Token = "0x2000142")]
public class CopyRectTransform : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Canvas parentCanvas;

	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform parentRectTransform;

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Canvas canvas;

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RectTransform rectTransform;

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0x96EA58", Offset = "0x96EA58", VA = "0x96EA58")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0x96EAC8", Offset = "0x96EAC8", VA = "0x96EAC8")]
	private void Update()
	{
	}

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0x96EB78", Offset = "0x96EB78", VA = "0x96EB78")]
	public CopyRectTransform()
	{
	}
}
[Token(Token = "0x2000143")]
public class CountDownToEvent : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int countDownTime;

	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private UnityEvent countDownFinishedEvent;

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool startGame;

	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TextMeshProUGUI tmp;

	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int currentTime;

	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int random;

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0x96EB80", Offset = "0x96EB80", VA = "0x96EB80")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0x96EBD8", Offset = "0x96EBD8", VA = "0x96EBD8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000800")]
	[Address(RVA = "0x96EC54", Offset = "0x96EC54", VA = "0x96EC54")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000801")]
	[Address(RVA = "0x96ECA8", Offset = "0x96ECA8", VA = "0x96ECA8")]
	private void CountDownStart()
	{
	}

	[Token(Token = "0x6000802")]
	[Address(RVA = "0x96F3E8", Offset = "0x96F3E8", VA = "0x96F3E8")]
	private void CountDown(int i)
	{
	}

	[Token(Token = "0x6000803")]
	[Address(RVA = "0x96F510", Offset = "0x96F510", VA = "0x96F510")]
	public CountDownToEvent()
	{
	}
}
[Token(Token = "0x2000144")]
public class CustomButton : UnityEngine.MonoBehaviour, IPointerUpHandler, IEventSystemHandler, IPointerDownHandler, IPointerClickHandler, IPointerEnterHandler, IPointerExitHandler, IDeselectHandler, ISelectHandler
{
	[Token(Token = "0x20003CE")]
	public enum ButtonState
	{
		[Token(Token = "0x400134F")]
		normal,
		[Token(Token = "0x4001350")]
		highlighted,
		[Token(Token = "0x4001351")]
		pressed,
		[Token(Token = "0x4001352")]
		locked
	}

	[Token(Token = "0x20003CF")]
	public delegate void DeselectOthers(Transform parent);

	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Image border;

	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Image lockedImage;

	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MaskableGraphic image;

	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Color borderNormal;

	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Color borderHighlighted;

	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static Color borderSelected;

	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static Color imageNormal;

	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static Color imageDark;

	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static Color imageSelected;

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool mouseOver;

	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool selected;

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEvent invokeEvent;

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ButtonState buttonState;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool locked;

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	public bool donotSelectOnClick;

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
	public bool tintOnHightlight;

	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static CustomButton legsButton;

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static CustomButton topButton;

	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
	[SerializeField]
	private bool selectCurrentLegs;

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private bool selectCurrentTops;

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	[SerializeField]
	private bool darkDisabled;

	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ImageExpandEnable imageExpandEnable;

	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Selectable selectable;

	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static DeselectOthers deselectOthersDelegate;

	[Token(Token = "0x6000804")]
	[Address(RVA = "0x970440", Offset = "0x970440", VA = "0x970440")]
	private void Init()
	{
	}

	[Token(Token = "0x6000805")]
	[Address(RVA = "0x970598", Offset = "0x970598", VA = "0x970598")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x6EBB44", Offset = "0x6EBB44")]
	public void DebugUnlock()
	{
	}

	[Token(Token = "0x6000806")]
	[Address(RVA = "0x970A60", Offset = "0x970A60", VA = "0x970A60")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000807")]
	[Address(RVA = "0x970CA4", Offset = "0x970CA4", VA = "0x970CA4")]
	public void SelectButton()
	{
	}

	[Token(Token = "0x6000808")]
	[Address(RVA = "0x970E50", Offset = "0x970E50", VA = "0x970E50")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000809")]
	[Address(RVA = "0x970F28", Offset = "0x970F28", VA = "0x970F28")]
	private void DeselectButton(Transform parentTransform)
	{
	}

	[Token(Token = "0x600080A")]
	[Address(RVA = "0x9705D8", Offset = "0x9705D8", VA = "0x9705D8")]
	public void ChangeState(ButtonState newButtonState)
	{
	}

	[Token(Token = "0x600080B")]
	[Address(RVA = "0x971058", Offset = "0x971058", VA = "0x971058", Slot = "9")]
	public void OnDeselect(BaseEventData eventData)
	{
	}

	[Token(Token = "0x600080C")]
	[Address(RVA = "0x971080", Offset = "0x971080", VA = "0x971080", Slot = "10")]
	public void OnSelect(BaseEventData eventData)
	{
	}

	[Token(Token = "0x600080D")]
	[Address(RVA = "0x970CA8", Offset = "0x970CA8", VA = "0x970CA8")]
	public void Click()
	{
	}

	[Token(Token = "0x600080E")]
	[Address(RVA = "0x9714AC", Offset = "0x9714AC", VA = "0x9714AC", Slot = "4")]
	public void OnPointerUp(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600080F")]
	[Address(RVA = "0x9714D8", Offset = "0x9714D8", VA = "0x9714D8", Slot = "5")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000810")]
	[Address(RVA = "0x9714F0", Offset = "0x9714F0", VA = "0x9714F0", Slot = "6")]
	public void OnPointerClick(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000811")]
	[Address(RVA = "0x9714F4", Offset = "0x9714F4", VA = "0x9714F4", Slot = "7")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000812")]
	[Address(RVA = "0x971584", Offset = "0x971584", VA = "0x971584", Slot = "8")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000813")]
	[Address(RVA = "0x9715AC", Offset = "0x9715AC", VA = "0x9715AC")]
	public CustomButton()
	{
	}
}
[Token(Token = "0x2000145")]
public class DebugPhoton : UnityEngine.MonoBehaviour, IManagedUpdated
{
	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Text text;

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private MenuController menuController;

	[Token(Token = "0x6000815")]
	[Address(RVA = "0x972E78", Offset = "0x972E78", VA = "0x972E78")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000816")]
	[Address(RVA = "0x972ED0", Offset = "0x972ED0", VA = "0x972ED0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000817")]
	[Address(RVA = "0x972F34", Offset = "0x972F34", VA = "0x972F34")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000818")]
	[Address(RVA = "0x972F98", Offset = "0x972F98", VA = "0x972F98", Slot = "4")]
	public void ManageUpdate()
	{
	}

	[Token(Token = "0x6000819")]
	[Address(RVA = "0x973B04", Offset = "0x973B04", VA = "0x973B04")]
	public DebugPhoton()
	{
	}
}
[Token(Token = "0x2000146")]
public class DebugText : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string output;

	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string stack;

	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Text text;

	[Token(Token = "0x600081A")]
	[Address(RVA = "0x973B0C", Offset = "0x973B0C", VA = "0x973B0C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600081B")]
	[Address(RVA = "0x973B98", Offset = "0x973B98", VA = "0x973B98")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600081C")]
	[Address(RVA = "0x973C0C", Offset = "0x973C0C", VA = "0x973C0C")]
	private void HandleLog(string logString, string stackTrace, LogType type)
	{
	}

	[Token(Token = "0x600081D")]
	[Address(RVA = "0x973C38", Offset = "0x973C38", VA = "0x973C38")]
	public DebugText()
	{
	}
}
[Token(Token = "0x2000147")]
public class DeleteMeshRendererOnStart : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x600081E")]
	[Address(RVA = "0x976D24", Offset = "0x976D24", VA = "0x976D24")]
	private void Start()
	{
	}

	[Token(Token = "0x600081F")]
	[Address(RVA = "0x976D88", Offset = "0x976D88", VA = "0x976D88")]
	public DeleteMeshRendererOnStart()
	{
	}
}
[Token(Token = "0x2000148")]
public class DestructibleFlashRenderer : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6000820")]
	[Address(RVA = "0x979440", Offset = "0x979440", VA = "0x979440")]
	public DestructibleFlashRenderer()
	{
	}
}
[Token(Token = "0x2000149")]
public class DontDestroyOnLoadInRoom : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6000821")]
	[Address(RVA = "0x9795C8", Offset = "0x9795C8", VA = "0x9795C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0x979644", Offset = "0x979644", VA = "0x979644")]
	public void OnLeftRoom()
	{
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0x9796C0", Offset = "0x9796C0", VA = "0x9796C0")]
	public DontDestroyOnLoadInRoom()
	{
	}
}
[Token(Token = "0x200014A")]
public class DropPodsTMP : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string title;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TextMeshProUGUI tmp;

	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string lives0;

	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string lives1;

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string lives2;

	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string lives3;

	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string lives4;

	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string lives5;

	[Token(Token = "0x6000824")]
	[Address(RVA = "0x9796C8", Offset = "0x9796C8", VA = "0x9796C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0x979720", Offset = "0x979720", VA = "0x979720")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0x979890", Offset = "0x979890", VA = "0x979890")]
	public static string ConvertIntToLives(int i)
	{
		return null;
	}

	[Token(Token = "0x6000827")]
	[Address(RVA = "0x979A18", Offset = "0x979A18", VA = "0x979A18")]
	public static string GetPlayerRankString(PhotonPlayer player)
	{
		return null;
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0x979AE8", Offset = "0x979AE8", VA = "0x979AE8")]
	private void OnPhotonCustomRoomPropertiesChanged(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
	{
	}

	[Token(Token = "0x6000829")]
	[Address(RVA = "0x979724", Offset = "0x979724", VA = "0x979724")]
	private void UpdateLivesText()
	{
	}

	[Token(Token = "0x600082A")]
	[Address(RVA = "0x979AEC", Offset = "0x979AEC", VA = "0x979AEC")]
	public DropPodsTMP()
	{
	}
}
[Token(Token = "0x200014B")]
public class EnableFromMode : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool EnableInCampaignMode;

	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[SerializeField]
	private bool EnableInCoOpMode;

	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[SerializeField]
	private bool EnableInVersusMode;

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[SerializeField]
	private bool EnableInWaveMode;

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private bool masterOnly;

	[Token(Token = "0x600082C")]
	[Address(RVA = "0x97B174", Offset = "0x97B174", VA = "0x97B174")]
	private void Awake()
	{
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0x97B258", Offset = "0x97B258", VA = "0x97B258")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600082E")]
	[Address(RVA = "0x97B25C", Offset = "0x97B25C", VA = "0x97B25C")]
	private void OnEnableParent()
	{
	}

	[Token(Token = "0x600082F")]
	[Address(RVA = "0x97B420", Offset = "0x97B420", VA = "0x97B420")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0x97B504", Offset = "0x97B504", VA = "0x97B504")]
	public EnableFromMode()
	{
	}
}
[Token(Token = "0x200014C")]
public class EndGameObjectiveUpdate : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LanguageString campaignMissionFailed;

	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private LanguageString VersusLost;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private LanguageString VersusWon;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private LanguageString Waiting;

	[Token(Token = "0x6000831")]
	[Address(RVA = "0x97B94C", Offset = "0x97B94C", VA = "0x97B94C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000832")]
	[Address(RVA = "0x97B9A4", Offset = "0x97B9A4", VA = "0x97B9A4")]
	private void UpdateText()
	{
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0x97C074", Offset = "0x97C074", VA = "0x97C074")]
	public EndGameObjectiveUpdate()
	{
	}
}
[Token(Token = "0x200014D")]
public class GameObjectExpandEnable : UnityEngine.MonoBehaviour, IManagedUpdated
{
	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Vector3 targetSize;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float speed;

	[Token(Token = "0x6000834")]
	[Address(RVA = "0x984D68", Offset = "0x984D68", VA = "0x984D68")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0x984E3C", Offset = "0x984E3C", VA = "0x984E3C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000836")]
	[Address(RVA = "0x984EA0", Offset = "0x984EA0", VA = "0x984EA0", Slot = "4")]
	public void ManageUpdate()
	{
	}

	[Token(Token = "0x6000837")]
	[Address(RVA = "0x984FA0", Offset = "0x984FA0", VA = "0x984FA0")]
	public GameObjectExpandEnable()
	{
	}
}
[Token(Token = "0x200014E")]
public class GearVRCrossHair : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SpriteRenderer sprite;

	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Sprite noAimSprite;

	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Sprite aimSprite;

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LayerMask destructibleLayer;

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public LayerMask otherLayers;

	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GearVRCrossHair instance;

	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform highLight;

	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private SpriteRenderer highlightRenderer;

	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject gazeRenderer;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public OVRInputModule ovrInputModule;

	[Token(Token = "0x6000838")]
	[Address(RVA = "0x986800", Offset = "0x986800", VA = "0x986800")]
	private void Start()
	{
	}

	[Token(Token = "0x6000839")]
	[Address(RVA = "0x98686C", Offset = "0x98686C", VA = "0x98686C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0x98688C", Offset = "0x98688C", VA = "0x98688C")]
	private void Update()
	{
	}

	[Token(Token = "0x600083B")]
	[Address(RVA = "0x986990", Offset = "0x986990", VA = "0x986990")]
	public void UpdatePosition(Vector3 lookPoint, bool enemyVisibleLock, bool enemyVisible)
	{
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0x986C1C", Offset = "0x986C1C", VA = "0x986C1C")]
	public GearVRCrossHair()
	{
	}
}
[Token(Token = "0x200014F")]
public class GearVRLaser : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private OVRInputModule ovrInputModule;

	[Token(Token = "0x600083D")]
	[Address(RVA = "0x954EC4", Offset = "0x954EC4", VA = "0x954EC4")]
	private void Start()
	{
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0x954F1C", Offset = "0x954F1C", VA = "0x954F1C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600083F")]
	[Address(RVA = "0x954FC8", Offset = "0x954FC8", VA = "0x954FC8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000840")]
	[Address(RVA = "0x9550B0", Offset = "0x9550B0", VA = "0x9550B0")]
	public GearVRLaser()
	{
	}
}
[Token(Token = "0x2000150")]
public class GearVRRemotePosition : UnityEngine.MonoBehaviour, IManagedUpdated
{
	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SpriteRenderer reload;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private SpriteRenderer special;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private MeshRenderer reloadText;

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private MeshRenderer specialText;

	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private SpriteRenderer left;

	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private SpriteRenderer right;

	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private MeshRenderer touchToMove;

	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private MeshRenderer pushforMenu;

	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Color Orange;

	[Token(Token = "0x6000841")]
	[Address(RVA = "0x9550B8", Offset = "0x9550B8", VA = "0x9550B8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000842")]
	[Address(RVA = "0x95511C", Offset = "0x95511C", VA = "0x95511C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0x955180", Offset = "0x955180", VA = "0x955180", Slot = "4")]
	public void ManageUpdate()
	{
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0x955988", Offset = "0x955988", VA = "0x955988")]
	public GearVRRemotePosition()
	{
	}
}
[Token(Token = "0x2000151")]
public class HealthPickup : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float despawnDelay;

	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Collider triggerCollider;

	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int health;

	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float enableTime;

	[Token(Token = "0x6000846")]
	[Address(RVA = "0x9562C4", Offset = "0x9562C4", VA = "0x9562C4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000847")]
	[Address(RVA = "0x956390", Offset = "0x956390", VA = "0x956390")]
	private void Update()
	{
	}

	[Token(Token = "0x6000848")]
	[Address(RVA = "0x9564F4", Offset = "0x9564F4", VA = "0x9564F4")]
	private void EnableCollider()
	{
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0x956478", Offset = "0x956478", VA = "0x956478")]
	private void DespawnMe()
	{
	}

	[Token(Token = "0x600084A")]
	[Address(RVA = "0x956514", Offset = "0x956514", VA = "0x956514")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600084B")]
	[Address(RVA = "0x956768", Offset = "0x956768", VA = "0x956768")]
	public HealthPickup()
	{
	}
}
[Token(Token = "0x2000152")]
public class HitCounter : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Canvas canvas;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static HitCounter instance;

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float lastShowTime;

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float showTimeDelay;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private CameraFollowPlayer cameraFollowPlayer;

	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 offset;

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Image image;

	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Image imageBG;

	[Token(Token = "0x600084D")]
	[Address(RVA = "0x9567FC", Offset = "0x9567FC", VA = "0x9567FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600084E")]
	[Address(RVA = "0x9568DC", Offset = "0x9568DC", VA = "0x9568DC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0x956970", Offset = "0x956970", VA = "0x956970")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0x956A04", Offset = "0x956A04", VA = "0x956A04")]
	public void TakeGlobalHitDelegate(float barLength, Destructible fromDestructible, float maxLength, Vector3 position)
	{
	}

	[Token(Token = "0x6000851")]
	[Address(RVA = "0x956C00", Offset = "0x956C00", VA = "0x956C00")]
	private void Update()
	{
	}

	[Token(Token = "0x6000852")]
	[Address(RVA = "0x956C64", Offset = "0x956C64", VA = "0x956C64")]
	public HitCounter()
	{
	}
}
[Token(Token = "0x2000153")]
public class HomingRocketImpact : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6000853")]
	[Address(RVA = "0x956CD0", Offset = "0x956CD0", VA = "0x956CD0")]
	public HomingRocketImpact()
	{
	}
}
[Token(Token = "0x2000154")]
public class ImageExpandEnable : UnityEngine.MonoBehaviour, IPointerUpHandler, IEventSystemHandler, IPointerEnterHandler, IPointerExitHandler
{
	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 originalScale;

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform rectTransform;

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool reExpandWhenTouched;

	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private Color touchColor;

	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private bool changeColorOnTouch;

	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Color defaultColor;

	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Image imageRenderer;

	[Token(Token = "0x6000854")]
	[Address(RVA = "0x958184", Offset = "0x958184", VA = "0x958184")]
	private void Init()
	{
	}

	[Token(Token = "0x6000855")]
	[Address(RVA = "0x9581F4", Offset = "0x9581F4", VA = "0x9581F4", Slot = "4")]
	public void OnPointerUp(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000856")]
	[Address(RVA = "0x958204", Offset = "0x958204", VA = "0x958204")]
	private void Start()
	{
	}

	[Token(Token = "0x6000857")]
	[Address(RVA = "0x957FF0", Offset = "0x957FF0", VA = "0x957FF0")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000858")]
	[Address(RVA = "0x9582B8", Offset = "0x9582B8", VA = "0x9582B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000859")]
	[Address(RVA = "0x958424", Offset = "0x958424", VA = "0x958424", Slot = "5")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600085A")]
	[Address(RVA = "0x9584D0", Offset = "0x9584D0", VA = "0x9584D0", Slot = "6")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600085B")]
	[Address(RVA = "0x95857C", Offset = "0x95857C", VA = "0x95857C")]
	public ImageExpandEnable()
	{
	}
}
[Token(Token = "0x2000155")]
public class InitGame : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool initCompleted;

	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject error;

	[Token(Token = "0x600085C")]
	[Address(RVA = "0x959040", Offset = "0x959040", VA = "0x959040")]
	private void Awake()
	{
	}

	[Token(Token = "0x600085D")]
	[Address(RVA = "0x959228", Offset = "0x959228", VA = "0x959228")]
	public InitGame()
	{
	}
}
[Token(Token = "0x2000156")]
public class InputGearVR : UnityEngine.MonoBehaviour, IInputProxy
{
	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool player1;

	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private LayerMask hitLayerMask;

	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool enemyVisible;

	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool enemyVisibleLock;

	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static Vector3 lookPoint;

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static bool aimActive;

	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CharacterControl characterControl;

	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static float lastStickPressed;

	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static float touchReverseDeadzone;

	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool triggerHeld;

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 movementPhysical;

	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 physicalLookDirection;

	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private RaycastHit hit;

	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float distance;

	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Collider hitObject;

	[Token(Token = "0x600085F")]
	[Address(RVA = "0x959234", Offset = "0x959234", VA = "0x959234")]
	private void Start()
	{
	}

	[Token(Token = "0x6000860")]
	[Address(RVA = "0x95929C", Offset = "0x95929C", VA = "0x95929C", Slot = "10")]
	public Destructible GetCurrentTarget()
	{
		return null;
	}

	[Token(Token = "0x6000861")]
	[Address(RVA = "0x9592A4", Offset = "0x9592A4", VA = "0x9592A4", Slot = "12")]
	public bool GetCurentTargetVisible()
	{
		return default(bool);
	}

	[Token(Token = "0x6000862")]
	[Address(RVA = "0x95930C", Offset = "0x95930C", VA = "0x95930C", Slot = "7")]
	public ButtonState Fire()
	{
		return default(ButtonState);
	}

	[Token(Token = "0x6000863")]
	[Address(RVA = "0x959478", Offset = "0x959478", VA = "0x959478", Slot = "8")]
	public ButtonState Special()
	{
		return default(ButtonState);
	}

	[Token(Token = "0x6000864")]
	[Address(RVA = "0x959820", Offset = "0x959820", VA = "0x959820", Slot = "9")]
	public ButtonState Reload()
	{
		return default(ButtonState);
	}

	[Token(Token = "0x6000865")]
	[Address(RVA = "0x9599EC", Offset = "0x9599EC", VA = "0x9599EC", Slot = "4")]
	public Vector3 Movement()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000866")]
	[Address(RVA = "0x959E40", Offset = "0x959E40", VA = "0x959E40", Slot = "5")]
	public Vector3 Rotation()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000867")]
	[Address(RVA = "0x959EA0", Offset = "0x959EA0", VA = "0x959EA0", Slot = "6")]
	public Vector3 Direction()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000868")]
	[Address(RVA = "0x95AB70", Offset = "0x95AB70", VA = "0x95AB70", Slot = "11")]
	public Vector3 GetTargetPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000869")]
	[Address(RVA = "0x95ABDC", Offset = "0x95ABDC", VA = "0x95ABDC")]
	public InputGearVR()
	{
	}
}
[Token(Token = "0x2000157")]
public class InputRift : UnityEngine.MonoBehaviour, IInputProxy
{
	[Token(Token = "0x20003D0")]
	public enum VibrationForce
	{
		[Token(Token = "0x4001354")]
		Light,
		[Token(Token = "0x4001355")]
		Medium,
		[Token(Token = "0x4001356")]
		Hard
	}

	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool player1;

	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private LayerMask hitLayerMask;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool enemyVisible;

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool enemyVisibleLock;

	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static Vector3 lookPoint;

	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static bool aimActive;

	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CharacterControl characterControl;

	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static float lastStickPressed;

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static float touchReverseDeadzone;

	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRHapticsClip clipLight;

	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OVRHapticsClip clipMedium;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OVRHapticsClip clipHard;

	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool triggerHeld;

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 movementPhysical;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 physicalLookDirection;

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private RaycastHit hit;

	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float distance;

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Collider hitObject;

	[Token(Token = "0x600086B")]
	[Address(RVA = "0x95ACB4", Offset = "0x95ACB4", VA = "0x95ACB4")]
	private void InitializeOVRHaptics()
	{
	}

	[Token(Token = "0x600086C")]
	[Address(RVA = "0x95AE8C", Offset = "0x95AE8C", VA = "0x95AE8C")]
	public void Vibrate(VibrationForce vibrationForce, OVRHaptics.OVRHapticsChannel channel)
	{
	}

	[Token(Token = "0x600086D")]
	[Address(RVA = "0x95AEE4", Offset = "0x95AEE4", VA = "0x95AEE4")]
	private void Start()
	{
	}

	[Token(Token = "0x600086E")]
	[Address(RVA = "0x95AF54", Offset = "0x95AF54", VA = "0x95AF54", Slot = "10")]
	public Destructible GetCurrentTarget()
	{
		return null;
	}

	[Token(Token = "0x600086F")]
	[Address(RVA = "0x95AF5C", Offset = "0x95AF5C", VA = "0x95AF5C", Slot = "12")]
	public bool GetCurentTargetVisible()
	{
		return default(bool);
	}

	[Token(Token = "0x6000870")]
	[Address(RVA = "0x95AFC4", Offset = "0x95AFC4", VA = "0x95AFC4", Slot = "7")]
	public ButtonState Fire()
	{
		return default(ButtonState);
	}

	[Token(Token = "0x6000871")]
	[Address(RVA = "0x95B1C8", Offset = "0x95B1C8", VA = "0x95B1C8", Slot = "8")]
	public ButtonState Special()
	{
		return default(ButtonState);
	}

	[Token(Token = "0x6000872")]
	[Address(RVA = "0x95B610", Offset = "0x95B610", VA = "0x95B610", Slot = "9")]
	public ButtonState Reload()
	{
		return default(ButtonState);
	}

	[Token(Token = "0x6000873")]
	[Address(RVA = "0x95B814", Offset = "0x95B814", VA = "0x95B814", Slot = "4")]
	public Vector3 Movement()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000874")]
	[Address(RVA = "0x95BA18", Offset = "0x95BA18", VA = "0x95BA18", Slot = "5")]
	public Vector3 Rotation()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000875")]
	[Address(RVA = "0x95BA78", Offset = "0x95BA78", VA = "0x95BA78", Slot = "6")]
	public Vector3 Direction()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000876")]
	[Address(RVA = "0x95C748", Offset = "0x95C748", VA = "0x95C748", Slot = "11")]
	public Vector3 GetTargetPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000877")]
	[Address(RVA = "0x95C7B4", Offset = "0x95C7B4", VA = "0x95C7B4")]
	public InputRift()
	{
	}
}
[Token(Token = "0x2000158")]
public class InputSwitch : UnityEngine.MonoBehaviour, IInputProxy
{
	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string SpecialButton;

	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string FireButton;

	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string ReloadButton;

	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string MovementLeftRight;

	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string MovementUpDown;

	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string RotationLeftRight;

	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string RotationUpDown;

	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float lastDestructibleListUpdateTime;

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float DestructibleListUpdateInterval;

	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Destructible closestDestructible;

	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool closestDestructibleVisible;

	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private LayerMask hitLayerMask;

	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 lookPoint;

	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private CharacterControl characterControl;

	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform overrideTarget;

	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool gameControllerActive;

	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool autoMode;

	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private string StartAndroid;

	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool pushed;

	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 movementPhysical;

	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private NavMeshAgent navMeshAgent;

	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float lastRetreatTime;

	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float timeCounter;

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 rotationPhysical;

	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Vector3 physicalLookDirection;

	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Vector3 manualAimPosition;

	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private float manualAimDistance;

	[Token(Token = "0x6000879")]
	[Address(RVA = "0x95C88C", Offset = "0x95C88C", VA = "0x95C88C")]
	private void Start()
	{
	}

	[Token(Token = "0x600087A")]
	[Address(RVA = "0x95C92C", Offset = "0x95C92C", VA = "0x95C92C", Slot = "10")]
	public Destructible GetCurrentTarget()
	{
		return null;
	}

	[Token(Token = "0x600087B")]
	[Address(RVA = "0x95C934", Offset = "0x95C934", VA = "0x95C934", Slot = "12")]
	public bool GetCurentTargetVisible()
	{
		return default(bool);
	}

	[Token(Token = "0x600087C")]
	[Address(RVA = "0x95C93C", Offset = "0x95C93C", VA = "0x95C93C")]
	private void FindClosestTarget()
	{
	}

	[Token(Token = "0x600087D")]
	[Address(RVA = "0x95D018", Offset = "0x95D018", VA = "0x95D018", Slot = "7")]
	public ButtonState Fire()
	{
		return default(ButtonState);
	}

	[Token(Token = "0x600087E")]
	[Address(RVA = "0x95D840", Offset = "0x95D840", VA = "0x95D840", Slot = "8")]
	public ButtonState Special()
	{
		return default(ButtonState);
	}

	[Token(Token = "0x600087F")]
	[Address(RVA = "0x95D8D0", Offset = "0x95D8D0", VA = "0x95D8D0", Slot = "9")]
	public ButtonState Reload()
	{
		return default(ButtonState);
	}

	[Token(Token = "0x6000880")]
	[Address(RVA = "0x95D970", Offset = "0x95D970", VA = "0x95D970", Slot = "4")]
	public Vector3 Movement()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000881")]
	[Address(RVA = "0x95D77C", Offset = "0x95D77C", VA = "0x95D77C", Slot = "5")]
	public Vector3 Rotation()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000882")]
	[Address(RVA = "0x95DFE0", Offset = "0x95DFE0", VA = "0x95DFE0", Slot = "6")]
	public Vector3 Direction()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000883")]
	[Address(RVA = "0x95E54C", Offset = "0x95E54C", VA = "0x95E54C", Slot = "11")]
	public Vector3 GetTargetPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000884")]
	[Address(RVA = "0x95E558", Offset = "0x95E558", VA = "0x95E558")]
	public InputSwitch()
	{
	}
}
[Token(Token = "0x2000159")]
public class InputTouchBase : UnityEngine.MonoBehaviour, IInputProxy
{
	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string FireButton;

	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string SpecialButton;

	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string MovementLeftRight;

	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string MovementUpDown;

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string RotationLeftRight;

	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string RotationUpDown;

	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string ReloadButton;

	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float lastDestructibleListUpdateTime;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float DestructibleListUpdateInterval;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Destructible closestDestructible;

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool closestDestructibleVisible;

	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private LayerMask hitLayerMask;

	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 lookPoint;

	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private CharacterControl characterControl;

	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform overrideTarget;

	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool gameControllerActive;

	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool autoMode;

	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private string Oculus_GearVR_RIndexTrigger;

	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private string Oculus_GearVR_LIndexTrigger;

	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private string StartAndroid;

	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool pushed;

	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private Vector3 movementPhysical;

	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private NavMeshAgent navMeshAgent;

	[Token(Token = "0x4000913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float lastRetreatTime;

	[Token(Token = "0x4000914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float timeCounter;

	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Vector3 rotationPhysical;

	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private Vector3 physicalLookDirection;

	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Vector3 manualAimPosition;

	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float manualAimDistance;

	[Token(Token = "0x6000886")]
	[Address(RVA = "0x95EF58", Offset = "0x95EF58", VA = "0x95EF58")]
	private void Start()
	{
	}

	[Token(Token = "0x6000887")]
	[Address(RVA = "0x95EFF8", Offset = "0x95EFF8", VA = "0x95EFF8", Slot = "10")]
	public Destructible GetCurrentTarget()
	{
		return null;
	}

	[Token(Token = "0x6000888")]
	[Address(RVA = "0x95F000", Offset = "0x95F000", VA = "0x95F000", Slot = "12")]
	public bool GetCurentTargetVisible()
	{
		return default(bool);
	}

	[Token(Token = "0x6000889")]
	[Address(RVA = "0x95F008", Offset = "0x95F008", VA = "0x95F008")]
	private void FindClosestTarget()
	{
	}

	[Token(Token = "0x600088A")]
	[Address(RVA = "0x95F6E4", Offset = "0x95F6E4", VA = "0x95F6E4", Slot = "7")]
	public ButtonState Fire()
	{
		return default(ButtonState);
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0x95FFEC", Offset = "0x95FFEC", VA = "0x95FFEC", Slot = "8")]
	public ButtonState Special()
	{
		return default(ButtonState);
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0x960090", Offset = "0x960090", VA = "0x960090", Slot = "9")]
	public ButtonState Reload()
	{
		return default(ButtonState);
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0x960130", Offset = "0x960130", VA = "0x960130", Slot = "4")]
	public Vector3 Movement()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600088E")]
	[Address(RVA = "0x95FF28", Offset = "0x95FF28", VA = "0x95FF28", Slot = "5")]
	public Vector3 Rotation()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0x96079C", Offset = "0x96079C", VA = "0x96079C", Slot = "6")]
	public Vector3 Direction()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0x960D2C", Offset = "0x960D2C", VA = "0x960D2C", Slot = "11")]
	public Vector3 GetTargetPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000891")]
	[Address(RVA = "0x960D38", Offset = "0x960D38", VA = "0x960D38")]
	public InputTouchBase()
	{
	}
}
[Token(Token = "0x200015A")]
public class InputTouchPlayer1 : InputTouchBase, IInputProxy
{
	[Token(Token = "0x6000893")]
	[Address(RVA = "0x960E04", Offset = "0x960E04", VA = "0x960E04")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0x960EB4", Offset = "0x960EB4", VA = "0x960EB4")]
	public InputTouchPlayer1()
	{
	}
}
[Token(Token = "0x200015B")]
public interface ICharacterBase
{
	[Token(Token = "0x1700010D")]
	GameSetup.AgentType GetAgentType
	{
		[Token(Token = "0x6000895")]
		get;
	}

	[Token(Token = "0x1700010E")]
	float GetNormalSpeed
	{
		[Token(Token = "0x6000896")]
		get;
	}

	[Token(Token = "0x1700010F")]
	float GetFireSpeed
	{
		[Token(Token = "0x6000897")]
		get;
	}

	[Token(Token = "0x17000110")]
	Transform GetTransform
	{
		[Token(Token = "0x6000898")]
		get;
	}

	[Token(Token = "0x17000111")]
	GameObject GetGameObject
	{
		[Token(Token = "0x6000899")]
		get;
	}

	[Token(Token = "0x17000112")]
	Transform GetMount
	{
		[Token(Token = "0x600089A")]
		get;
	}

	[Token(Token = "0x17000113")]
	int GetMaxHealth
	{
		[Token(Token = "0x600089B")]
		get;
	}

	[Token(Token = "0x17000114")]
	int GetMaxHealthAI
	{
		[Token(Token = "0x600089C")]
		get;
	}

	[Token(Token = "0x17000115")]
	bool GetExplodeOnDie
	{
		[Token(Token = "0x600089D")]
		get;
	}

	[Token(Token = "0x17000116")]
	AudioClip GetHitAudio
	{
		[Token(Token = "0x600089E")]
		get;
	}

	[Token(Token = "0x17000117")]
	AudioClip GetAlertAudio
	{
		[Token(Token = "0x600089F")]
		get;
	}

	[Token(Token = "0x17000118")]
	AudioClip GetDieAudio
	{
		[Token(Token = "0x60008A0")]
		get;
	}
}
[Token(Token = "0x200015C")]
public interface IController
{
	[Token(Token = "0x60008A1")]
	CharacterControlParams UpdateController(NavMeshAgent navMeshAgent);

	[Token(Token = "0x60008A2")]
	void ControllerMovement(NavMeshAgent navMeshAgent, CharacterControlParams ccp, float speed);

	[Token(Token = "0x60008A3")]
	void RespawnInit();
}
[Token(Token = "0x200015D")]
public enum ButtonState
{
	[Token(Token = "0x400091A")]
	pressed,
	[Token(Token = "0x400091B")]
	held,
	[Token(Token = "0x400091C")]
	released,
	[Token(Token = "0x400091D")]
	idle
}
[Token(Token = "0x200015E")]
public interface IInputProxy
{
	[Token(Token = "0x60008A4")]
	Vector3 Movement();

	[Token(Token = "0x60008A5")]
	Vector3 Rotation();

	[Token(Token = "0x60008A6")]
	Vector3 Direction();

	[Token(Token = "0x60008A7")]
	ButtonState Fire();

	[Token(Token = "0x60008A8")]
	ButtonState Special();

	[Token(Token = "0x60008A9")]
	ButtonState Reload();

	[Token(Token = "0x60008AA")]
	Destructible GetCurrentTarget();

	[Token(Token = "0x60008AB")]
	Vector3 GetTargetPosition();

	[Token(Token = "0x60008AC")]
	bool GetCurentTargetVisible();
}
[Token(Token = "0x200015F")]
public interface IManagedLateFixedUpdated
{
	[Token(Token = "0x60008AD")]
	void ManageLateFixedUpdate();
}
[Token(Token = "0x2000160")]
public interface IManagedLateUpdated
{
	[Token(Token = "0x60008AE")]
	void ManageLateUpdate();
}
[Token(Token = "0x2000161")]
public interface IManagedUpdated
{
	[Token(Token = "0x60008AF")]
	void ManageUpdate();
}
[Token(Token = "0x2000162")]
public interface IProjectile
{
	[Token(Token = "0x60008B0")]
	void Fire(Vector3[] origin, Vector3[] direction, int arraySize);

	[Token(Token = "0x60008B1")]
	void Fire(Vector3 origin, Vector3 direction);

	[Token(Token = "0x60008B2")]
	void Hit(GameObject hitObject);
}
[Token(Token = "0x2000163")]
public interface ISpecial
{
	[Token(Token = "0x17000119")]
	float GetAmount
	{
		[Token(Token = "0x60008B3")]
		get;
	}

	[Token(Token = "0x1700011A")]
	float GetMaxAmount
	{
		[Token(Token = "0x60008B4")]
		get;
	}

	[Token(Token = "0x60008B5")]
	void ReloadSpecial();

	[Token(Token = "0x60008B6")]
	void Init();

	[Token(Token = "0x60008B7")]
	bool UseSpecial(Vector3 origin, Vector3 direction, Vector3 targetPosition);
}
[Token(Token = "0x2000164")]
public class WeaponParams
{
	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float fireInterval;

	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float reloadTime;

	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float ammo;

	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float maxAmmo;

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0xAC02C8", Offset = "0xAC02C8", VA = "0xAC02C8")]
	public WeaponParams()
	{
	}
}
[Token(Token = "0x2000165")]
public interface IWeapon
{
	[Token(Token = "0x1700011B")]
	float GetAmmo
	{
		[Token(Token = "0x60008BA")]
		get;
	}

	[Token(Token = "0x1700011C")]
	int SetHandicap
	{
		[Token(Token = "0x60008BB")]
		set;
	}

	[Token(Token = "0x1700011D")]
	float GetMaxAmmo
	{
		[Token(Token = "0x60008BC")]
		get;
	}

	[Token(Token = "0x60008B9")]
	WeaponParams GetParams();

	[Token(Token = "0x60008BD")]
	bool GetReloading();

	[Token(Token = "0x60008BE")]
	Vector3 GetPosition();

	[Token(Token = "0x60008BF")]
	void ReloadWeapon();

	[Token(Token = "0x60008C0")]
	bool FireWeapon(Vector3 origin, Vector3 direction);
}
[Token(Token = "0x2000166")]
public class IntroPause : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool intro;

	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool fadeIn;

	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshProUGUI continueText;

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0x960F7C", Offset = "0x960F7C", VA = "0x960F7C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0x961034", Offset = "0x961034", VA = "0x961034")]
	private void FadeIn()
	{
	}

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0x9610A0", Offset = "0x9610A0", VA = "0x9610A0")]
	private void Update()
	{
	}

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0x961320", Offset = "0x961320", VA = "0x961320")]
	public IntroPause()
	{
	}
}
[Token(Token = "0x2000167")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x6E1080", Offset = "0x6E1080")]
public class Language : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x20003D1")]
	public class Stage
	{
		[Token(Token = "0x4001357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x4001358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LangString[] strings;

		[Token(Token = "0x6001856")]
		[Address(RVA = "0x961868", Offset = "0x961868", VA = "0x961868")]
		public Stage()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20003D2")]
	public class LangString
	{
		[Token(Token = "0x4001359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x6E9CF4", Offset = "0x6E9CF4")]
		public string english;

		[Token(Token = "0x400135A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x6E9D0C", Offset = "0x6E9D0C")]
		public string japanese;

		[Token(Token = "0x400135B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x6E9D24", Offset = "0x6E9D24")]
		public string french;

		[Token(Token = "0x400135C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x6E9D3C", Offset = "0x6E9D3C")]
		public string german;

		[Token(Token = "0x400135D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x6E9D54", Offset = "0x6E9D54")]
		public string spanish;

		[Token(Token = "0x400135E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x6E9D6C", Offset = "0x6E9D6C")]
		public string italian;

		[Token(Token = "0x400135F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x6E9D84", Offset = "0x6E9D84")]
		public string netherlands;

		[Token(Token = "0x4001360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x6E9D9C", Offset = "0x6E9D9C")]
		public string portugese;

		[Token(Token = "0x4001361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x6E9DB4", Offset = "0x6E9DB4")]
		public string russia;

		[Token(Token = "0x4001362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x6E9DCC", Offset = "0x6E9DCC")]
		public string taiwan;

		[Token(Token = "0x4001363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x6E9DE4", Offset = "0x6E9DE4")]
		public string chinese;

		[Token(Token = "0x4001364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x6E9DFC", Offset = "0x6E9DFC")]
		public string korean;

		[Token(Token = "0x6001857")]
		[Address(RVA = "0x9617FC", Offset = "0x9617FC", VA = "0x9617FC")]
		public LangString()
		{
		}
	}

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Stage[] stages;

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0x96137C", Offset = "0x96137C", VA = "0x96137C")]
	public string GetMessage(int stageId, int messageId)
	{
		return null;
	}

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0x9617F4", Offset = "0x9617F4", VA = "0x9617F4")]
	public Language()
	{
	}
}
[Token(Token = "0x2000168")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x6E10BC", Offset = "0x6E10BC")]
public class LanguageLevelSelect : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x20003D3")]
	public class LangString
	{
		[Token(Token = "0x4001365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x6E9E14", Offset = "0x6E9E14")]
		public string english;

		[Token(Token = "0x4001366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x6E9E2C", Offset = "0x6E9E2C")]
		public string japanese;

		[Token(Token = "0x4001367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x6E9E44", Offset = "0x6E9E44")]
		public string french;

		[Token(Token = "0x4001368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x6E9E5C", Offset = "0x6E9E5C")]
		public string german;

		[Token(Token = "0x4001369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x6E9E74", Offset = "0x6E9E74")]
		public string spanish;

		[Token(Token = "0x400136A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x6E9E8C", Offset = "0x6E9E8C")]
		public string italian;

		[Token(Token = "0x400136B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x6E9EA4", Offset = "0x6E9EA4")]
		public string netherlands;

		[Token(Token = "0x400136C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x6E9EBC", Offset = "0x6E9EBC")]
		public string portugese;

		[Token(Token = "0x400136D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x6E9ED4", Offset = "0x6E9ED4")]
		public string russia;

		[Token(Token = "0x400136E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x6E9EEC", Offset = "0x6E9EEC")]
		public string taiwan;

		[Token(Token = "0x400136F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x6E9F04", Offset = "0x6E9F04")]
		public string chinese;

		[Token(Token = "0x4001370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x6E9F1C", Offset = "0x6E9F1C")]
		public string korean;

		[Token(Token = "0x6001858")]
		[Address(RVA = "0x961E70", Offset = "0x961E70", VA = "0x961E70")]
		public LangString()
		{
		}
	}

	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LangString[] dayText;

	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private LangString[] nightText;

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0x9618C0", Offset = "0x9618C0", VA = "0x9618C0")]
	public string GetDay(int index)
	{
		return null;
	}

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0x961B94", Offset = "0x961B94", VA = "0x961B94")]
	public string GetNight(int index)
	{
		return null;
	}

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0x961E68", Offset = "0x961E68", VA = "0x961E68")]
	public LanguageLevelSelect()
	{
	}
}
[Token(Token = "0x2000169")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x6E10F8", Offset = "0x6E10F8")]
public class LanguageString : ScriptableObject
{
	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x6E44E4", Offset = "0x6E44E4")]
	[SerializeField]
	private string english;

	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x6E4524", Offset = "0x6E4524")]
	[SerializeField]
	private string japanese;

	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x6E4564", Offset = "0x6E4564")]
	[SerializeField]
	private string french;

	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x6E45A4", Offset = "0x6E45A4")]
	[SerializeField]
	private string german;

	[Token(Token = "0x400092D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x6E45E4", Offset = "0x6E45E4")]
	[SerializeField]
	private string spanish;

	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x6E4624", Offset = "0x6E4624")]
	[SerializeField]
	private string italian;

	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x6E4664", Offset = "0x6E4664")]
	[SerializeField]
	private string netherlands;

	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x6E46A4", Offset = "0x6E46A4")]
	[SerializeField]
	private string portugese;

	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x6E46E4", Offset = "0x6E46E4")]
	[SerializeField]
	private string russia;

	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x6E4724", Offset = "0x6E4724")]
	[SerializeField]
	private string taiwan;

	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x6E4764", Offset = "0x6E4764")]
	[SerializeField]
	private string chinese;

	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x6E47A4", Offset = "0x6E47A4")]
	[SerializeField]
	private string korean;

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0x961EDC", Offset = "0x961EDC", VA = "0x961EDC")]
	public string GetMessage()
	{
		return null;
	}

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0x961FF4", Offset = "0x961FF4", VA = "0x961FF4")]
	public LanguageString()
	{
	}
}
[Token(Token = "0x200016A")]
public class LevelSelect : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int currentLevel;

	[Token(Token = "0x4000936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private CustomButton changeDayButton;

	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private CustomButton startButton;

	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject progress;

	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject startText;

	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private PhotonMenuFunctions photonMenuFunctions;

	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private CustomButton[] buttons;

	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Sprite[] daySprites;

	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Sprite[] nightSprites;

	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private TextMeshProUGUI missionTextMeshPro;

	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private TextMeshProUGUI iconsTextMeshPro;

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Vector3[] shipRotations;

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private float[] earthRotationsDay;

	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private float[] earthRotationsNight;

	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private int[] unlockSprite;

	[Token(Token = "0x4000944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private bool[] unlockLegOrTop;

	[Token(Token = "0x4000945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private int[] unlockID;

	[Token(Token = "0x4000946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static bool day;

	[Token(Token = "0x4000947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private LanguageLevelSelect languageLevelSelect;

	[Token(Token = "0x60008CD")]
	[Address(RVA = "0x96686C", Offset = "0x96686C", VA = "0x96686C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0x966A9C", Offset = "0x966A9C", VA = "0x966A9C")]
	public void ToggleDayNight()
	{
	}

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0x966D80", Offset = "0x966D80", VA = "0x966D80")]
	private void UpdateMissionText()
	{
	}

	[Token(Token = "0x60008D0")]
	[Address(RVA = "0x966B14", Offset = "0x966B14", VA = "0x966B14")]
	public void ChangeDayNight(bool mode)
	{
	}

	[Token(Token = "0x60008D1")]
	[Address(RVA = "0x967810", Offset = "0x967810", VA = "0x967810")]
	public void StartLevel()
	{
	}

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0x9678F0", Offset = "0x9678F0", VA = "0x9678F0")]
	public void ChangeLevel(int i)
	{
	}

	[Token(Token = "0x60008D3")]
	[Address(RVA = "0x967694", Offset = "0x967694", VA = "0x967694")]
	private void UpdateRotation()
	{
	}

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0x967DAC", Offset = "0x967DAC", VA = "0x967DAC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60008D5")]
	[Address(RVA = "0x967E50", Offset = "0x967E50", VA = "0x967E50")]
	public LevelSelect()
	{
	}
}
[Token(Token = "0x200016B")]
public class LightTint : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SpriteRenderer spriteRenderer;

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0x967EB8", Offset = "0x967EB8", VA = "0x967EB8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60008D8")]
	[Address(RVA = "0x96801C", Offset = "0x96801C", VA = "0x96801C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0x967F44", Offset = "0x967F44", VA = "0x967F44")]
	public void UpdateLight()
	{
	}

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0x9680A0", Offset = "0x9680A0", VA = "0x9680A0")]
	public LightTint()
	{
	}
}
[Token(Token = "0x200016C")]
public class LocalDestructible : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E48F4", Offset = "0x6E48F4")]
	[SerializeField]
	private CampaignTrigger campaignTrigger;

	[Token(Token = "0x400094A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float health;

	[Token(Token = "0x400094B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private Vector3 hitIndicatorOffset;

	[Token(Token = "0x400094C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float startingHealth;

	[Token(Token = "0x400094D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool explodeOnDestroy;

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0x96AE84", Offset = "0x96AE84", VA = "0x96AE84")]
	private void Start()
	{
	}

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0x9628D4", Offset = "0x9628D4", VA = "0x9628D4")]
	public void Hit(float power)
	{
	}

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0x96B048", Offset = "0x96B048", VA = "0x96B048")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0x96B134", Offset = "0x96B134", VA = "0x96B134")]
	public LocalDestructible()
	{
	}
}
[Token(Token = "0x200016D")]
public class ManagedUpdate : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400094E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4970", Offset = "0x6E4970")]
	private static ManagedUpdate <Instance>k__BackingField;

	[Token(Token = "0x400094F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<IManagedUpdated> _managedUpdates;

	[Token(Token = "0x4000950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<IManagedLateUpdated> _managedLateUpdates;

	[Token(Token = "0x4000951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<IManagedLateFixedUpdated> _managedLateFixedUpdates;

	[Token(Token = "0x4000952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool fixedUpdateSkip;

	[Token(Token = "0x4000953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
	public static bool updateSkip;

	[Token(Token = "0x4000954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int lateFixedUpdateCounter;

	[Token(Token = "0x4000955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int loadBalancing;

	[Token(Token = "0x1700011E")]
	public static ManagedUpdate Instance
	{
		[Token(Token = "0x60008DF")]
		[Address(RVA = "0x8D4BE4", Offset = "0x8D4BE4", VA = "0x8D4BE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EBB7C", Offset = "0x6EBB7C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60008E0")]
		[Address(RVA = "0x8D4C34", Offset = "0x8D4C34", VA = "0x8D4C34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EBB8C", Offset = "0x6EBB8C")]
		private set
		{
		}
	}

	[Token(Token = "0x60008E1")]
	[Address(RVA = "0x8D4C88", Offset = "0x8D4C88", VA = "0x8D4C88")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008E2")]
	[Address(RVA = "0x8D4CDC", Offset = "0x8D4CDC", VA = "0x8D4CDC")]
	private void Update()
	{
	}

	[Token(Token = "0x60008E3")]
	[Address(RVA = "0x8D4DF0", Offset = "0x8D4DF0", VA = "0x8D4DF0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60008E4")]
	[Address(RVA = "0x8D4EE8", Offset = "0x8D4EE8", VA = "0x8D4EE8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60008E5")]
	[Address(RVA = "0x8D4FFC", Offset = "0x8D4FFC", VA = "0x8D4FFC")]
	public void Register(IManagedUpdated script)
	{
	}

	[Token(Token = "0x60008E6")]
	[Address(RVA = "0x8D5064", Offset = "0x8D5064", VA = "0x8D5064")]
	public void Unregister(IManagedUpdated script)
	{
	}

	[Token(Token = "0x60008E7")]
	[Address(RVA = "0x8D50CC", Offset = "0x8D50CC", VA = "0x8D50CC")]
	public void RegisterLate(IManagedLateUpdated script)
	{
	}

	[Token(Token = "0x60008E8")]
	[Address(RVA = "0x8D5134", Offset = "0x8D5134", VA = "0x8D5134")]
	public void UnregisterLate(IManagedLateUpdated script)
	{
	}

	[Token(Token = "0x60008E9")]
	[Address(RVA = "0x8D519C", Offset = "0x8D519C", VA = "0x8D519C")]
	public void RegisterFixed(IManagedLateFixedUpdated script)
	{
	}

	[Token(Token = "0x60008EA")]
	[Address(RVA = "0x8D5204", Offset = "0x8D5204", VA = "0x8D5204")]
	public void UnregisterFixed(IManagedLateFixedUpdated script)
	{
	}

	[Token(Token = "0x60008EB")]
	[Address(RVA = "0x8D526C", Offset = "0x8D526C", VA = "0x8D526C")]
	public ManagedUpdate()
	{
	}
}
[Token(Token = "0x200016E")]
[ExecuteInEditMode]
public class Map_Camera : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20003D4")]
	public enum Zoom
	{
		[Token(Token = "0x4001372")]
		full,
		[Token(Token = "0x4001373")]
		player,
		[Token(Token = "0x4001374")]
		objective,
		[Token(Token = "0x4001375")]
		free
	}

	[Token(Token = "0x4000956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera mapCamera;

	[Token(Token = "0x4000957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private LayerMask MapObjectives;

	[Token(Token = "0x4000958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LayerMask defaultMask;

	[Token(Token = "0x4000959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RenderTexture bgTexture;

	[Token(Token = "0x400095A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Zoom zoomModeDebug;

	[Token(Token = "0x400095B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Zoom zoomMode;

	[Token(Token = "0x400095C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RenderTexture objectiveTexture;

	[Token(Token = "0x400095D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Map_Camera instance;

	[Token(Token = "0x400095E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 startPosition;

	[Token(Token = "0x400095F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float startSize;

	[Token(Token = "0x4000960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float lastRefreshTime;

	[Token(Token = "0x4000961")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static bool bgRendered;

	[Token(Token = "0x4000962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private MeshRenderer BackGroundQuad;

	[Token(Token = "0x4000963")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Quaternion startRotation;

	[Token(Token = "0x4000964")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private float bleedArea;

	[Token(Token = "0x4000965")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float lastObjectViewTime;

	[Token(Token = "0x4000966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float panSpeed;

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0x8D6218", Offset = "0x8D6218", VA = "0x8D6218")]
	public void MoveZoomPosition(Vector2 move)
	{
	}

	[Token(Token = "0x60008ED")]
	[Address(RVA = "0x8D677C", Offset = "0x8D677C", VA = "0x8D677C")]
	public void SetPositionOverride(Vector2 pos)
	{
	}

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0x8D67F8", Offset = "0x8D67F8", VA = "0x8D67F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008EF")]
	[Address(RVA = "0x8D6938", Offset = "0x8D6938", VA = "0x8D6938")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x6EBB9C", Offset = "0x6EBB9C")]
	public void EnableMapCamera()
	{
	}

	[Token(Token = "0x60008F0")]
	[Address(RVA = "0x8D69A8", Offset = "0x8D69A8", VA = "0x8D69A8")]
	public void RefreshBGTexture()
	{
	}

	[Token(Token = "0x60008F1")]
	[Address(RVA = "0x8D6708", Offset = "0x8D6708", VA = "0x8D6708")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x6EBBD4", Offset = "0x6EBBD4")]
	public void SetZoomModeFull()
	{
	}

	[Token(Token = "0x60008F2")]
	[Address(RVA = "0x8D5CC0", Offset = "0x8D5CC0", VA = "0x8D5CC0")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x6EBC0C", Offset = "0x6EBC0C")]
	public void SetZoomModePlayer()
	{
	}

	[Token(Token = "0x60008F3")]
	[Address(RVA = "0x8D668C", Offset = "0x8D668C", VA = "0x8D668C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x6EBC44", Offset = "0x6EBC44")]
	public void SetZoomModeObjective()
	{
	}

	[Token(Token = "0x60008F4")]
	[Address(RVA = "0x8D5FE0", Offset = "0x8D5FE0", VA = "0x8D5FE0")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x6EBC7C", Offset = "0x6EBC7C")]
	public void SetZoomModeFree()
	{
	}

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0x8D6BAC", Offset = "0x8D6BAC", VA = "0x8D6BAC")]
	private void OnPreCull()
	{
	}

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0x8D6DE4", Offset = "0x8D6DE4", VA = "0x8D6DE4")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0x8D6EF4", Offset = "0x8D6EF4", VA = "0x8D6EF4")]
	private void Update()
	{
	}

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0x8D7628", Offset = "0x8D7628", VA = "0x8D7628")]
	public Map_Camera()
	{
	}
}
[Token(Token = "0x200016F")]
public class MatchSectionPoint : UnityEngine.MonoBehaviour, IManagedLateUpdated
{
	[Token(Token = "0x4000967")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Vector3 offSet;

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0x8D77DC", Offset = "0x8D77DC", VA = "0x8D77DC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0x8D783C", Offset = "0x8D783C", VA = "0x8D783C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0x8D789C", Offset = "0x8D789C", VA = "0x8D789C", Slot = "4")]
	public void ManageLateUpdate()
	{
	}

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0x8D7978", Offset = "0x8D7978", VA = "0x8D7978")]
	public MatchSectionPoint()
	{
	}
}
[Token(Token = "0x2000170")]
[ExecuteInEditMode]
public class MatchTransformPosition : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000968")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform parent;

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0x8D7ADC", Offset = "0x8D7ADC", VA = "0x8D7ADC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0x8D7BA4", Offset = "0x8D7BA4", VA = "0x8D7BA4")]
	public MatchTransformPosition()
	{
	}
}
[Token(Token = "0x2000171")]
public class MatchWaterLevel : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000969")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float offset;

	[Token(Token = "0x6000900")]
	[Address(RVA = "0x8D7BAC", Offset = "0x8D7BAC", VA = "0x8D7BAC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000901")]
	[Address(RVA = "0x8D7CE4", Offset = "0x8D7CE4", VA = "0x8D7CE4")]
	public MatchWaterLevel()
	{
	}
}
[Token(Token = "0x2000172")]
public class MenuController : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20003D5")]
	public enum MenuState
	{
		[Token(Token = "0x4001377")]
		None,
		[Token(Token = "0x4001378")]
		Intro,
		[Token(Token = "0x4001379")]
		Main,
		[Token(Token = "0x400137A")]
		Options,
		[Token(Token = "0x400137B")]
		CampaignSelect,
		[Token(Token = "0x400137C")]
		CampaignIntro,
		[Token(Token = "0x400137D")]
		PlayerSelect,
		[Token(Token = "0x400137E")]
		GamePlay,
		[Token(Token = "0x400137F")]
		Pause,
		[Token(Token = "0x4001380")]
		StartGame,
		[Token(Token = "0x4001381")]
		EndGame,
		[Token(Token = "0x4001382")]
		Loading,
		[Token(Token = "0x4001383")]
		Scores,
		[Token(Token = "0x4001384")]
		Connecting,
		[Token(Token = "0x4001385")]
		ConfirmQuit,
		[Token(Token = "0x4001386")]
		ConfirmSpawnIap,
		[Token(Token = "0x4001387")]
		ConfirmDrop,
		[Token(Token = "0x4001388")]
		ConfirmAppQuit
	}

	[Token(Token = "0x20003D6")]
	public delegate void OnMenuChange();

	[Token(Token = "0x400096A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Canvas Intro;

	[Token(Token = "0x400096B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Canvas Main;

	[Token(Token = "0x400096C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Canvas Options;

	[Token(Token = "0x400096D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Canvas CampaignSelect;

	[Token(Token = "0x400096E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Canvas CampaignIntro;

	[Token(Token = "0x400096F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Canvas PlayerSelect;

	[Token(Token = "0x4000970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Canvas GamePlay;

	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Canvas Pause;

	[Token(Token = "0x4000972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Canvas StartGame;

	[Token(Token = "0x4000973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Canvas EndGame;

	[Token(Token = "0x4000974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Canvas Loading;

	[Token(Token = "0x4000975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Canvas Scores;

	[Token(Token = "0x4000976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Canvas Connecting;

	[Token(Token = "0x4000977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Canvas ConfirmQuit;

	[Token(Token = "0x4000978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Canvas ConfirmAppQuit;

	[Token(Token = "0x4000979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private Canvas ConfirmSpawnIap;

	[Token(Token = "0x400097A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private Canvas ConfirmDrop;

	[Token(Token = "0x400097B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private Transform AvatarPositions;

	[Token(Token = "0x400097C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector3 avatarVisibleSize;

	[Token(Token = "0x400097D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private Vector3 avatarInvisibleSize;

	[Token(Token = "0x400097E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public MenuState menuState;

	[Token(Token = "0x400097F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MenuController instance;

	[Token(Token = "0x4000980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private CharacterControl characterControl;

	[Token(Token = "0x4000981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Transform currentTransform;

	[Token(Token = "0x4000982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static float worldCanvasScale;

	[Token(Token = "0x4000983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Canvas currentCanvas;

	[Token(Token = "0x4000984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public OnMenuChange menuChanged;

	[Token(Token = "0x4000985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public bool showOptions;

	[Token(Token = "0x4000986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE9")]
	public bool showConfirmQuit;

	[Token(Token = "0x4000987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEA")]
	public bool showConfirmAppQuit;

	[Token(Token = "0x4000988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEB")]
	public bool showConfirmDrop;

	[Token(Token = "0x4000989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public bool showScoreTable;

	[Token(Token = "0x400098A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xED")]
	public bool showConfirmSpawnIap;

	[Token(Token = "0x400098B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEE")]
	public bool showintroMovie;

	[Token(Token = "0x400098C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private UnityAdsIntegration unityAdsIntegration;

	[Token(Token = "0x400098D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static bool adWatched;

	[Token(Token = "0x6000902")]
	[Address(RVA = "0x8D7DF8", Offset = "0x8D7DF8", VA = "0x8D7DF8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000903")]
	[Address(RVA = "0x8D7F4C", Offset = "0x8D7F4C", VA = "0x8D7F4C")]
	public void ShowOptions(bool show)
	{
	}

	[Token(Token = "0x6000904")]
	[Address(RVA = "0x8D7F58", Offset = "0x8D7F58", VA = "0x8D7F58")]
	public void DisablePlayer()
	{
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0x8D80AC", Offset = "0x8D80AC", VA = "0x8D80AC")]
	public void ShowCampaignIntro(bool show)
	{
	}

	[Token(Token = "0x6000906")]
	[Address(RVA = "0x8D80B8", Offset = "0x8D80B8", VA = "0x8D80B8")]
	public void ShowConfirmQuit(bool show)
	{
	}

	[Token(Token = "0x6000907")]
	[Address(RVA = "0x8D80C4", Offset = "0x8D80C4", VA = "0x8D80C4")]
	public void ShowConfirmSpawnIap(bool show)
	{
	}

	[Token(Token = "0x6000908")]
	[Address(RVA = "0x8D81DC", Offset = "0x8D81DC", VA = "0x8D81DC")]
	public void ShowScoreTable(bool show)
	{
	}

	[Token(Token = "0x6000909")]
	[Address(RVA = "0x8D826C", Offset = "0x8D826C", VA = "0x8D826C")]
	public void ShowConfirmAppQuit(bool show)
	{
	}

	[Token(Token = "0x600090A")]
	[Address(RVA = "0x8D8278", Offset = "0x8D8278", VA = "0x8D8278")]
	public void ShowConfirmDropt(bool show)
	{
	}

	[Token(Token = "0x600090B")]
	[Address(RVA = "0x8D8284", Offset = "0x8D8284", VA = "0x8D8284")]
	public void UpdateMenus()
	{
	}

	[Token(Token = "0x600090C")]
	[Address(RVA = "0x8DABD4", Offset = "0x8DABD4", VA = "0x8DABD4")]
	public void QuitApplication()
	{
	}

	[Token(Token = "0x600090D")]
	[Address(RVA = "0x8D8898", Offset = "0x8D8898", VA = "0x8D8898")]
	private void UpdatePositionRotation()
	{
	}

	[Token(Token = "0x600090E")]
	[Address(RVA = "0x8D8ACC", Offset = "0x8D8ACC", VA = "0x8D8ACC")]
	private void UpdateVisibility(MenuState newMenuState)
	{
	}

	[Token(Token = "0x600090F")]
	[Address(RVA = "0x8DAE54", Offset = "0x8DAE54", VA = "0x8DAE54")]
	public MenuController()
	{
	}
}
[Token(Token = "0x2000173")]
public class OVRMoveArrow : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400098E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SpriteRenderer sprite;

	[Token(Token = "0x400098F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 oculusTouchDirection;

	[Token(Token = "0x4000990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 directionToPlayer;

	[Token(Token = "0x4000991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 moveDirection;

	[Token(Token = "0x4000992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Vector3 moveDir;

	[Token(Token = "0x4000993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static float magnitude;

	[Token(Token = "0x4000994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private float sensitivity;

	[Token(Token = "0x4000995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Vector3 offSet;

	[Token(Token = "0x4000996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private OVRInputModule ovrInputModule;

	[Token(Token = "0x6000911")]
	[Address(RVA = "0x90F980", Offset = "0x90F980", VA = "0x90F980")]
	private void Update()
	{
	}

	[Token(Token = "0x6000912")]
	[Address(RVA = "0x90FE8C", Offset = "0x90FE8C", VA = "0x90FE8C")]
	public OVRMoveArrow()
	{
	}
}
[Token(Token = "0x2000174")]
public class ObjectiveOverviewTMP : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20003D7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E1B54", Offset = "0x6E1B54")]
	private sealed class <UpdateText>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400138A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400138B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectiveOverviewTMP <>4__this;

		[Token(Token = "0x400138C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <totalVisibleCharacters>5__2;

		[Token(Token = "0x1700025A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001860")]
			[Address(RVA = "0x915864", Offset = "0x915864", VA = "0x915864", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001862")]
			[Address(RVA = "0x9158CC", Offset = "0x9158CC", VA = "0x9158CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600185D")]
		[Address(RVA = "0x915668", Offset = "0x915668", VA = "0x915668")]
		[DebuggerHidden]
		public <UpdateText>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x600185E")]
		[Address(RVA = "0x9156F8", Offset = "0x9156F8", VA = "0x9156F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600185F")]
		[Address(RVA = "0x9156FC", Offset = "0x9156FC", VA = "0x9156FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001861")]
		[Address(RVA = "0x91586C", Offset = "0x91586C", VA = "0x91586C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TextMeshProUGUI m_textMeshPro;

	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSource audioSource;

	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string objectiveText;

	[Token(Token = "0x400099A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int counter;

	[Token(Token = "0x400099B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int visibleCount;

	[Token(Token = "0x400099C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float hideDelay;

	[Token(Token = "0x6000914")]
	[Address(RVA = "0x915004", Offset = "0x915004", VA = "0x915004")]
	private void Init()
	{
	}

	[Token(Token = "0x6000915")]
	[Address(RVA = "0x915074", Offset = "0x915074", VA = "0x915074")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000916")]
	[Address(RVA = "0x9151A4", Offset = "0x9151A4", VA = "0x9151A4")]
	private void Hide()
	{
	}

	[Token(Token = "0x6000917")]
	[Address(RVA = "0x9151C4", Offset = "0x9151C4", VA = "0x9151C4")]
	public static void StaticUpdateObjective(string text)
	{
	}

	[Token(Token = "0x6000918")]
	[Address(RVA = "0x91535C", Offset = "0x91535C", VA = "0x91535C")]
	public void UpdateOverView()
	{
	}

	[Token(Token = "0x6000919")]
	[Address(RVA = "0x9155C4", Offset = "0x9155C4", VA = "0x9155C4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600091A")]
	[Address(RVA = "0x915554", Offset = "0x915554", VA = "0x915554")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6EBCB4", Offset = "0x6EBCB4")]
	private IEnumerator UpdateText()
	{
		return null;
	}

	[Token(Token = "0x600091B")]
	[Address(RVA = "0x915694", Offset = "0x915694", VA = "0x915694")]
	public ObjectiveOverviewTMP()
	{
	}
}
[Token(Token = "0x2000175")]
public class ObjectveTextInGame : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20003D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E1B64", Offset = "0x6E1B64")]
	private sealed class <UpdateTextTele>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400138D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400138E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400138F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectveTextInGame <>4__this;

		[Token(Token = "0x4001390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <totalVisibleCharacters>5__2;

		[Token(Token = "0x4001391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <counter>5__3;

		[Token(Token = "0x1700025C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001866")]
			[Address(RVA = "0x915E04", Offset = "0x915E04", VA = "0x915E04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001868")]
			[Address(RVA = "0x915E6C", Offset = "0x915E6C", VA = "0x915E6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001863")]
		[Address(RVA = "0x915C78", Offset = "0x915C78", VA = "0x915C78")]
		[DebuggerHidden]
		public <UpdateTextTele>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6001864")]
		[Address(RVA = "0x915CAC", Offset = "0x915CAC", VA = "0x915CAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001865")]
		[Address(RVA = "0x915CB0", Offset = "0x915CB0", VA = "0x915CB0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001867")]
		[Address(RVA = "0x915E0C", Offset = "0x915E0C", VA = "0x915E0C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400099D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TextMeshProUGUI tmp;

	[Token(Token = "0x600091D")]
	[Address(RVA = "0x915A8C", Offset = "0x915A8C", VA = "0x915A8C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600091E")]
	[Address(RVA = "0x915474", Offset = "0x915474", VA = "0x915474")]
	public void UpdateText()
	{
	}

	[Token(Token = "0x600091F")]
	[Address(RVA = "0x915BE0", Offset = "0x915BE0", VA = "0x915BE0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000920")]
	[Address(RVA = "0x915B70", Offset = "0x915B70", VA = "0x915B70")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6EBD18", Offset = "0x6EBD18")]
	private IEnumerator UpdateTextTele()
	{
		return null;
	}

	[Token(Token = "0x6000921")]
	[Address(RVA = "0x915CA4", Offset = "0x915CA4", VA = "0x915CA4")]
	public ObjectveTextInGame()
	{
	}
}
[Token(Token = "0x2000176")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6E1154", Offset = "0x6E1154")]
public class OculusInvitation : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400099E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool haveInvitation;

	[Token(Token = "0x400099F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string AvatarID;

	[Token(Token = "0x40009A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static bool initialized;

	[Token(Token = "0x40009A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static OculusInvitation instance;

	[Token(Token = "0x40009A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string playerName;

	[Token(Token = "0x40009A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static bool EntitlementConfirmed;

	[Token(Token = "0x40009A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TMP_InputField inputField;

	[Token(Token = "0x40009A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject vrKeyboard;

	[Token(Token = "0x40009A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int random;

	[Token(Token = "0x40009A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float counter;

	[Token(Token = "0x6000922")]
	[Address(RVA = "0xA3ACA0", Offset = "0xA3ACA0", VA = "0xA3ACA0")]
	public void UseInvitation(string invitation)
	{
	}

	[Token(Token = "0x6000923")]
	[Address(RVA = "0xA3AD80", Offset = "0xA3AD80", VA = "0xA3AD80")]
	public void InvitationFailed()
	{
	}

	[Token(Token = "0x6000924")]
	[Address(RVA = "0xA3AE1C", Offset = "0xA3AE1C", VA = "0xA3AE1C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000925")]
	[Address(RVA = "0xA3B024", Offset = "0xA3B024", VA = "0xA3B024")]
	private void EntitlementCallback(Message msg)
	{
	}

	[Token(Token = "0x6000926")]
	[Address(RVA = "0xA3B24C", Offset = "0xA3B24C", VA = "0xA3B24C")]
	private void GetLoggedInUserCallback(Message msg)
	{
	}

	[Token(Token = "0x6000927")]
	[Address(RVA = "0xA3B6F0", Offset = "0xA3B6F0", VA = "0xA3B6F0")]
	public void inputFieldValidate(string newName)
	{
	}

	[Token(Token = "0x6000928")]
	[Address(RVA = "0xA3B43C", Offset = "0xA3B43C", VA = "0xA3B43C")]
	private string ValidateNameString(string newName)
	{
		return null;
	}

	[Token(Token = "0x6000929")]
	[Address(RVA = "0xA3B538", Offset = "0xA3B538", VA = "0xA3B538")]
	public void UpdateNickName()
	{
	}

	[Token(Token = "0x600092A")]
	[Address(RVA = "0xA3B77C", Offset = "0xA3B77C", VA = "0xA3B77C")]
	private void Update()
	{
	}

	[Token(Token = "0x600092B")]
	[Address(RVA = "0xA3B8EC", Offset = "0xA3B8EC", VA = "0xA3B8EC")]
	public OculusInvitation()
	{
	}
}
[Token(Token = "0x2000177")]
public class OnEnableDelegate : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20003D9")]
	public delegate void OnEnableEvent();

	[Token(Token = "0x40009A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OnEnableEvent onEnableDelegate;

	[Token(Token = "0x600092D")]
	[Address(RVA = "0xA42410", Offset = "0xA42410", VA = "0xA42410")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600092E")]
	[Address(RVA = "0xA4262C", Offset = "0xA4262C", VA = "0xA4262C")]
	public OnEnableDelegate()
	{
	}
}
[Token(Token = "0x2000178")]
public class OverlayTouch : UnityEngine.MonoBehaviour, IManagedUpdated
{
	[Token(Token = "0x40009A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject overlayObject;

	[Token(Token = "0x40009AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string buttonName;

	[Token(Token = "0x600092F")]
	[Address(RVA = "0xA4304C", Offset = "0xA4304C", VA = "0xA4304C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000930")]
	[Address(RVA = "0xA430B0", Offset = "0xA430B0", VA = "0xA430B0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000931")]
	[Address(RVA = "0xA43114", Offset = "0xA43114", VA = "0xA43114", Slot = "4")]
	public void ManageUpdate()
	{
	}

	[Token(Token = "0x6000932")]
	[Address(RVA = "0xA43154", Offset = "0xA43154", VA = "0xA43154")]
	public OverlayTouch()
	{
	}
}
[Token(Token = "0x2000179")]
public class OvrQualitySettings : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40009AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static OvrQualitySettings instance;

	[Token(Token = "0x40009AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool IsOculusGoOrQuest;

	[Token(Token = "0x6000933")]
	[Address(RVA = "0xA25C3C", Offset = "0xA25C3C", VA = "0xA25C3C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000934")]
	[Address(RVA = "0xA25DB0", Offset = "0xA25DB0", VA = "0xA25DB0")]
	public void HighQuality()
	{
	}

	[Token(Token = "0x6000935")]
	[Address(RVA = "0xA25E50", Offset = "0xA25E50", VA = "0xA25E50")]
	public void MedQuality()
	{
	}

	[Token(Token = "0x6000936")]
	[Address(RVA = "0xA25EF0", Offset = "0xA25EF0", VA = "0xA25EF0")]
	public void LowQuality()
	{
	}

	[Token(Token = "0x6000937")]
	[Address(RVA = "0xA25F90", Offset = "0xA25F90", VA = "0xA25F90")]
	public OvrQualitySettings()
	{
	}
}
[Token(Token = "0x200017A")]
public class ParticleCollisionChild : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40009AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ParticleSpawnerBaseClass particleParent;

	[Token(Token = "0x6000939")]
	[Address(RVA = "0xA25FB8", Offset = "0xA25FB8", VA = "0xA25FB8")]
	public void OnParticleCollision(GameObject other)
	{
	}

	[Token(Token = "0x600093A")]
	[Address(RVA = "0xA26114", Offset = "0xA26114", VA = "0xA26114")]
	public ParticleCollisionChild()
	{
	}
}
[Token(Token = "0x200017B")]
public class PhotonAvatarView : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20003DA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E1B74", Offset = "0x6E1B74")]
	private sealed class <LocalInit>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PhotonAvatarView <>4__this;

		[Token(Token = "0x1700025E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001870")]
			[Address(RVA = "0xA29B5C", Offset = "0xA29B5C", VA = "0xA29B5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001872")]
			[Address(RVA = "0xA29BC4", Offset = "0xA29BC4", VA = "0xA29BC4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600186D")]
		[Address(RVA = "0xA28DD8", Offset = "0xA28DD8", VA = "0xA28DD8")]
		[DebuggerHidden]
		public <LocalInit>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x600186E")]
		[Address(RVA = "0xA296E8", Offset = "0xA296E8", VA = "0xA296E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600186F")]
		[Address(RVA = "0xA296EC", Offset = "0xA296EC", VA = "0xA296EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001871")]
		[Address(RVA = "0xA29B64", Offset = "0xA29B64", VA = "0xA29B64", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PhotonView photonView;

	[Token(Token = "0x40009AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OvrAvatar ovrAvatar;

	[Token(Token = "0x40009B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OvrAvatarRemoteDriver remoteDriver;

	[Token(Token = "0x40009B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<byte[]> packetData;

	[Token(Token = "0x40009B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int position;

	[Token(Token = "0x40009B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int localSequence;

	[Token(Token = "0x600093B")]
	[Address(RVA = "0xA28A18", Offset = "0xA28A18", VA = "0xA28A18")]
	private void Start()
	{
	}

	[Token(Token = "0x600093C")]
	[Address(RVA = "0xA28AB4", Offset = "0xA28AB4", VA = "0xA28AB4")]
	private string GetRandomAvatarID()
	{
		return null;
	}

	[Token(Token = "0x600093D")]
	[Address(RVA = "0xA28BF4", Offset = "0xA28BF4", VA = "0xA28BF4")]
	private void OnPhotonPlayerPropertiesChanged(object[] playerAndUpdatedProps)
	{
	}

	[Token(Token = "0x600093E")]
	[Address(RVA = "0xA28D20", Offset = "0xA28D20", VA = "0xA28D20")]
	private void OnPhotonPlayerConnected(PhotonPlayer newPlayer)
	{
	}

	[Token(Token = "0x600093F")]
	[Address(RVA = "0xA28D24", Offset = "0xA28D24", VA = "0xA28D24")]
	private void OnPhotonPlayerDisconnected(PhotonPlayer otherPlayer)
	{
	}

	[Token(Token = "0x6000940")]
	[Address(RVA = "0xA28BF8", Offset = "0xA28BF8", VA = "0xA28BF8")]
	private void UpdatePlayerInfo()
	{
	}

	[Token(Token = "0x6000941")]
	[Address(RVA = "0xA28A44", Offset = "0xA28A44", VA = "0xA28A44")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6EBD7C", Offset = "0x6EBD7C")]
	private IEnumerator LocalInit()
	{
		return null;
	}

	[Token(Token = "0x6000942")]
	[Address(RVA = "0xA28E04", Offset = "0xA28E04", VA = "0xA28E04")]
	[PunRPC]
	private void InitAvatarRPC(string newID)
	{
	}

	[Token(Token = "0x6000943")]
	[Address(RVA = "0xA28EF0", Offset = "0xA28EF0", VA = "0xA28EF0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000944")]
	[Address(RVA = "0xA28FD0", Offset = "0xA28FD0", VA = "0xA28FD0")]
	public void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x6000945")]
	[Address(RVA = "0xA29284", Offset = "0xA29284", VA = "0xA29284")]
	private void DeserializeAndQueuePacketData(byte[] data)
	{
	}

	[Token(Token = "0x6000946")]
	[Address(RVA = "0xA294C8", Offset = "0xA294C8", VA = "0xA294C8")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000947")]
	[Address(RVA = "0xA296E0", Offset = "0xA296E0", VA = "0xA296E0")]
	public PhotonAvatarView()
	{
	}
}
[Token(Token = "0x200017C")]
public class PhotonGameManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40009B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int time;

	[Token(Token = "0x40009B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int gameStarted;

	[Token(Token = "0x40009B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool Paused;

	[Token(Token = "0x40009B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
	public static bool Pausedp2;

	[Token(Token = "0x40009B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ExitGames.Client.Photon.Hashtable property;

	[Token(Token = "0x40009B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static float versusGameTime;

	[Token(Token = "0x40009BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string ti;

	[Token(Token = "0x40009BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string st;

	[Token(Token = "0x40009BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static PhotonGameManager instance;

	[Token(Token = "0x6000948")]
	[Address(RVA = "0xA29BCC", Offset = "0xA29BCC", VA = "0xA29BCC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000949")]
	[Address(RVA = "0xA29D34", Offset = "0xA29D34", VA = "0xA29D34")]
	private void UpdateStats()
	{
	}

	[Token(Token = "0x600094A")]
	[Address(RVA = "0xA2A1A4", Offset = "0xA2A1A4", VA = "0xA2A1A4")]
	public int CheckAnyOneAlive()
	{
		return default(int);
	}

	[Token(Token = "0x600094B")]
	[Address(RVA = "0xA2A584", Offset = "0xA2A584", VA = "0xA2A584")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600094C")]
	[Address(RVA = "0xA2A600", Offset = "0xA2A600", VA = "0xA2A600")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600094D")]
	[Address(RVA = "0xA2A67C", Offset = "0xA2A67C", VA = "0xA2A67C")]
	private void OnLevelLoaded(Scene scene, LoadSceneMode mode)
	{
	}

	[Token(Token = "0x600094E")]
	[Address(RVA = "0xA2A98C", Offset = "0xA2A98C", VA = "0xA2A98C")]
	public void ResetPlayer(PhotonPlayer player)
	{
	}

	[Token(Token = "0x600094F")]
	[Address(RVA = "0xA2AC54", Offset = "0xA2AC54", VA = "0xA2AC54")]
	public void InitGame()
	{
	}

	[Token(Token = "0x6000950")]
	[Address(RVA = "0xA2AD48", Offset = "0xA2AD48", VA = "0xA2AD48")]
	public void StartGame()
	{
	}

	[Token(Token = "0x6000951")]
	[Address(RVA = "0xA2A438", Offset = "0xA2A438", VA = "0xA2A438")]
	public void EndGame()
	{
	}

	[Token(Token = "0x6000952")]
	[Address(RVA = "0xA2AE3C", Offset = "0xA2AE3C", VA = "0xA2AE3C")]
	private void OnCreatedRoom()
	{
	}

	[Token(Token = "0x6000953")]
	[Address(RVA = "0xA2A844", Offset = "0xA2A844", VA = "0xA2A844")]
	private void StartStopGame(int startedState)
	{
	}

	[Token(Token = "0x6000954")]
	[Address(RVA = "0xA2AEF4", Offset = "0xA2AEF4", VA = "0xA2AEF4")]
	private void OnPhotonCustomRoomPropertiesChanged(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
	{
	}

	[Token(Token = "0x6000955")]
	[Address(RVA = "0xA2AAC4", Offset = "0xA2AAC4", VA = "0xA2AAC4")]
	public void CheckServerProperties(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
	{
	}

	[Token(Token = "0x6000956")]
	[Address(RVA = "0xA2AEF8", Offset = "0xA2AEF8", VA = "0xA2AEF8")]
	private void OnPhotonPlayerConnected(PhotonPlayer newPlayer)
	{
	}

	[Token(Token = "0x6000957")]
	[Address(RVA = "0xA2B048", Offset = "0xA2B048", VA = "0xA2B048")]
	private void OnPhotonPlayerDisconnected(PhotonPlayer newPlayer)
	{
	}

	[Token(Token = "0x6000958")]
	[Address(RVA = "0xA2B0DC", Offset = "0xA2B0DC", VA = "0xA2B0DC")]
	public PhotonGameManager()
	{
	}
}
[Token(Token = "0x200017D")]
public class PhotonInstantiateAvatar : Photon.MonoBehaviour
{
	[Token(Token = "0x40009BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public readonly byte InstantiateVrAvatarEventCode;

	[Token(Token = "0x600095A")]
	[Address(RVA = "0xA2D1A8", Offset = "0xA2D1A8", VA = "0xA2D1A8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600095B")]
	[Address(RVA = "0xA2D328", Offset = "0xA2D328", VA = "0xA2D328")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600095C")]
	[Address(RVA = "0xA2D4A8", Offset = "0xA2D4A8", VA = "0xA2D4A8")]
	public void OnJoinedRoom()
	{
	}

	[Token(Token = "0x600095D")]
	[Address(RVA = "0xA2D748", Offset = "0xA2D748", VA = "0xA2D748")]
	private void OnEvent(byte eventcode, object content, int senderid)
	{
	}

	[Token(Token = "0x600095E")]
	[Address(RVA = "0xA2DB0C", Offset = "0xA2DB0C", VA = "0xA2DB0C")]
	public PhotonInstantiateAvatar()
	{
	}
}
[Token(Token = "0x200017E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6E11B8", Offset = "0x6E11B8")]
public class PhotonMenuFunctions : Photon.MonoBehaviour
{
	[Token(Token = "0x40009BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PhotonNetworkManager pnm;

	[Token(Token = "0x40009BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PhotonMenuFunctions instance;

	[Token(Token = "0x600095F")]
	[Address(RVA = "0xA2E668", Offset = "0xA2E668", VA = "0xA2E668")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000960")]
	[Address(RVA = "0xA2E6D4", Offset = "0xA2E6D4", VA = "0xA2E6D4")]
	public void TutorialGame()
	{
	}

	[Token(Token = "0x6000961")]
	[Address(RVA = "0xA2E778", Offset = "0xA2E778", VA = "0xA2E778")]
	public void SinglePlayerGame()
	{
	}

	[Token(Token = "0x6000962")]
	[Address(RVA = "0xA2E864", Offset = "0xA2E864", VA = "0xA2E864")]
	public void OnlineCoOp()
	{
	}

	[Token(Token = "0x6000963")]
	[Address(RVA = "0xA2E8E8", Offset = "0xA2E8E8", VA = "0xA2E8E8")]
	public void LocalCoOp()
	{
	}

	[Token(Token = "0x6000964")]
	[Address(RVA = "0xA2E970", Offset = "0xA2E970", VA = "0xA2E970")]
	public void OnlineVersus()
	{
	}

	[Token(Token = "0x6000965")]
	[Address(RVA = "0xA2EA1C", Offset = "0xA2EA1C", VA = "0xA2EA1C")]
	public void OnlineWave()
	{
	}

	[Token(Token = "0x6000966")]
	[Address(RVA = "0xA2EAC8", Offset = "0xA2EAC8", VA = "0xA2EAC8")]
	public void NextGame()
	{
	}

	[Token(Token = "0x6000967")]
	[Address(RVA = "0xA2EB40", Offset = "0xA2EB40", VA = "0xA2EB40")]
	public void ExitGame()
	{
	}

	[Token(Token = "0x6000968")]
	[Address(RVA = "0xA2EB5C", Offset = "0xA2EB5C", VA = "0xA2EB5C")]
	public void ChangeMap(int map)
	{
	}

	[Token(Token = "0x6000969")]
	[Address(RVA = "0xA2EBF4", Offset = "0xA2EBF4", VA = "0xA2EBF4")]
	public void PauseUI(bool state)
	{
	}

	[Token(Token = "0x600096A")]
	[Address(RVA = "0xA2ED40", Offset = "0xA2ED40", VA = "0xA2ED40")]
	public void PauseUIp2(bool state)
	{
	}

	[Token(Token = "0x600096B")]
	[Address(RVA = "0xA2EDB0", Offset = "0xA2EDB0", VA = "0xA2EDB0")]
	public PhotonMenuFunctions()
	{
	}
}
[Token(Token = "0x200017F")]
public class PhotonNetworkManager : Photon.MonoBehaviour
{
	[Token(Token = "0x20003DB")]
	public enum GameMode
	{
		[Token(Token = "0x4001396")]
		campaign,
		[Token(Token = "0x4001397")]
		versus,
		[Token(Token = "0x4001398")]
		wave
	}

	[Token(Token = "0x40009C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6E4BD0", Offset = "0x6E4BD0")]
	public int maxPlayers;

	[Token(Token = "0x40009C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool localOfflineMode;

	[Token(Token = "0x40009C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int map;

	[Token(Token = "0x40009C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool dayMode;

	[Token(Token = "0x40009C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameMode gm;

	[Token(Token = "0x40009C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string roomName;

	[Token(Token = "0x40009C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PhotonNetworkManager instance;

	[Token(Token = "0x40009C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private object propValue;

	[Token(Token = "0x600096C")]
	[Address(RVA = "0x93A4E8", Offset = "0x93A4E8", VA = "0x93A4E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600096D")]
	[Address(RVA = "0x93A5FC", Offset = "0x93A5FC", VA = "0x93A5FC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600096E")]
	[Address(RVA = "0x93A600", Offset = "0x93A600", VA = "0x93A600")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600096F")]
	[Address(RVA = "0x93A604", Offset = "0x93A604", VA = "0x93A604")]
	private void Start()
	{
	}

	[Token(Token = "0x6000970")]
	[Address(RVA = "0x93A608", Offset = "0x93A608", VA = "0x93A608")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000971")]
	[Address(RVA = "0x93A60C", Offset = "0x93A60C", VA = "0x93A60C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x6EBDF0", Offset = "0x6EBDF0")]
	public void SetMasterClient()
	{
	}

	[Token(Token = "0x6000972")]
	[Address(RVA = "0x93A6CC", Offset = "0x93A6CC", VA = "0x93A6CC")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x6EBE28", Offset = "0x6EBE28")]
	public void CheckMasterClient()
	{
	}

	[Token(Token = "0x6000973")]
	[Address(RVA = "0x93A77C", Offset = "0x93A77C", VA = "0x93A77C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x6EBE60", Offset = "0x6EBE60")]
	public void HideRoom()
	{
	}

	[Token(Token = "0x6000974")]
	[Address(RVA = "0x93AC6C", Offset = "0x93AC6C", VA = "0x93AC6C")]
	public void EndGameconnect()
	{
	}

	[Token(Token = "0x6000975")]
	[Address(RVA = "0x93AFF8", Offset = "0x93AFF8", VA = "0x93AFF8")]
	public void StartGameConnect(string invitationRoomName)
	{
	}

	[Token(Token = "0x6000976")]
	[Address(RVA = "0x93B1A4", Offset = "0x93B1A4", VA = "0x93B1A4")]
	public bool ChangeServerMap(int newMap)
	{
		return default(bool);
	}

	[Token(Token = "0x6000977")]
	[Address(RVA = "0x93B6FC", Offset = "0x93B6FC", VA = "0x93B6FC")]
	public bool ChangeServerGameMode(GameMode newGameMode)
	{
		return default(bool);
	}

	[Token(Token = "0x6000978")]
	[Address(RVA = "0x93B000", Offset = "0x93B000", VA = "0x93B000")]
	private void ConnectToPhoton()
	{
	}

	[Token(Token = "0x6000979")]
	[Address(RVA = "0x93B840", Offset = "0x93B840", VA = "0x93B840")]
	private void OnConnectedToMaster()
	{
	}

	[Token(Token = "0x600097A")]
	[Address(RVA = "0x93B874", Offset = "0x93B874", VA = "0x93B874")]
	private bool CheckCurrentRoomValid()
	{
		return default(bool);
	}

	[Token(Token = "0x600097B")]
	[Address(RVA = "0x93BA58", Offset = "0x93BA58", VA = "0x93BA58")]
	private void ConnectToRoom()
	{
	}

	[Token(Token = "0x600097C")]
	[Address(RVA = "0x93BC58", Offset = "0x93BC58", VA = "0x93BC58")]
	private void OnPhotonJoinRoomFailed()
	{
	}

	[Token(Token = "0x600097D")]
	[Address(RVA = "0x93BCC0", Offset = "0x93BCC0", VA = "0x93BCC0")]
	private void CreateRoom()
	{
	}

	[Token(Token = "0x600097E")]
	[Address(RVA = "0x93BFF8", Offset = "0x93BFF8", VA = "0x93BFF8")]
	private void OnPhotonRandomJoinFailed(object[] codeAndMsg)
	{
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0x93BFFC", Offset = "0x93BFFC", VA = "0x93BFFC")]
	private void OnConnectedToPhoton()
	{
	}

	[Token(Token = "0x6000980")]
	[Address(RVA = "0x93C000", Offset = "0x93C000", VA = "0x93C000")]
	private void OnConnectionFail(DisconnectCause cause)
	{
	}

	[Token(Token = "0x6000981")]
	[Address(RVA = "0x93C004", Offset = "0x93C004", VA = "0x93C004")]
	private void OnCreatedRoom()
	{
	}

	[Token(Token = "0x6000982")]
	[Address(RVA = "0x93C00C", Offset = "0x93C00C", VA = "0x93C00C")]
	private void OnCustomAuthenticationFailed(string DebugMessage)
	{
	}

	[Token(Token = "0x6000983")]
	[Address(RVA = "0x93C010", Offset = "0x93C010", VA = "0x93C010")]
	private void OnCustomAuthenticationResponse(Dictionary<string, object> data)
	{
	}

	[Token(Token = "0x6000984")]
	[Address(RVA = "0x93C014", Offset = "0x93C014", VA = "0x93C014")]
	private void OnDisconnectedFromPhoton()
	{
	}

	[Token(Token = "0x6000985")]
	[Address(RVA = "0x93C018", Offset = "0x93C018", VA = "0x93C018")]
	private void OnFailedToConnectToPhoton(DisconnectCause cause)
	{
	}

	[Token(Token = "0x6000986")]
	[Address(RVA = "0x93C07C", Offset = "0x93C07C", VA = "0x93C07C")]
	private void OnJoinedLobby()
	{
	}

	[Token(Token = "0x6000987")]
	[Address(RVA = "0x93C080", Offset = "0x93C080", VA = "0x93C080")]
	private void OnJoinedRoom()
	{
	}

	[Token(Token = "0x6000988")]
	[Address(RVA = "0x93C350", Offset = "0x93C350", VA = "0x93C350")]
	private void OnLeftLobby()
	{
	}

	[Token(Token = "0x6000989")]
	[Address(RVA = "0x93C354", Offset = "0x93C354", VA = "0x93C354")]
	private void OnLeftRoom()
	{
	}

	[Token(Token = "0x600098A")]
	[Address(RVA = "0x93C358", Offset = "0x93C358", VA = "0x93C358")]
	private void OnLobbyStatisticsUpdate()
	{
	}

	[Token(Token = "0x600098B")]
	[Address(RVA = "0x93C35C", Offset = "0x93C35C", VA = "0x93C35C")]
	private void OnMasterClientSwitched(PhotonPlayer newMasterClient)
	{
	}

	[Token(Token = "0x600098C")]
	[Address(RVA = "0x93C364", Offset = "0x93C364", VA = "0x93C364")]
	private void OnOwnershipRequest(object[] viewAndPlayer)
	{
	}

	[Token(Token = "0x600098D")]
	[Address(RVA = "0x93C368", Offset = "0x93C368", VA = "0x93C368")]
	private void OnOwnershipTransfered(object[] viewAndPlayers)
	{
	}

	[Token(Token = "0x600098E")]
	[Address(RVA = "0x93C36C", Offset = "0x93C36C", VA = "0x93C36C")]
	private void OnPhotonCreateRoomFailed(object[] codeAndMsg)
	{
	}

	[Token(Token = "0x600098F")]
	[Address(RVA = "0x93C370", Offset = "0x93C370", VA = "0x93C370")]
	private void OnPhotonCustomRoomPropertiesChanged(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
	{
	}

	[Token(Token = "0x6000990")]
	[Address(RVA = "0x93C694", Offset = "0x93C694", VA = "0x93C694")]
	private void OnPhotonInstantiate(PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000991")]
	[Address(RVA = "0x93C698", Offset = "0x93C698", VA = "0x93C698")]
	private void OnPhotonJoinRoomFailed(object[] codeAndMsg)
	{
	}

	[Token(Token = "0x6000992")]
	[Address(RVA = "0x93C69C", Offset = "0x93C69C", VA = "0x93C69C")]
	private void OnPhotonMaxCccuReached()
	{
	}

	[Token(Token = "0x6000993")]
	[Address(RVA = "0x93C714", Offset = "0x93C714", VA = "0x93C714")]
	private void OnPhotonPlayerActivityChanged(PhotonPlayer otherPlayer)
	{
	}

	[Token(Token = "0x6000994")]
	[Address(RVA = "0x93C718", Offset = "0x93C718", VA = "0x93C718")]
	private void OnPhotonPlayerConnected(PhotonPlayer newPlayer)
	{
	}

	[Token(Token = "0x6000995")]
	[Address(RVA = "0x93C71C", Offset = "0x93C71C", VA = "0x93C71C")]
	private void OnPhotonPlayerDisconnected(PhotonPlayer otherPlayer)
	{
	}

	[Token(Token = "0x6000996")]
	[Address(RVA = "0x93C720", Offset = "0x93C720", VA = "0x93C720")]
	private void OnPhotonPlayerPropertiesChanged(object[] playerAndUpdatedProps)
	{
	}

	[Token(Token = "0x6000997")]
	[Address(RVA = "0x93C724", Offset = "0x93C724", VA = "0x93C724")]
	private void OnReceivedRoomListUpdate()
	{
	}

	[Token(Token = "0x6000998")]
	[Address(RVA = "0x93C728", Offset = "0x93C728", VA = "0x93C728")]
	private void OnUpdatedFriendList()
	{
	}

	[Token(Token = "0x6000999")]
	[Address(RVA = "0x93C72C", Offset = "0x93C72C", VA = "0x93C72C")]
	private void OnWebRpcResponse(OperationResponse response)
	{
	}

	[Token(Token = "0x600099A")]
	[Address(RVA = "0x93C730", Offset = "0x93C730", VA = "0x93C730")]
	public PhotonNetworkManager()
	{
	}
}
[Token(Token = "0x2000180")]
public class PhotonSyncedPlayerList : Photon.MonoBehaviour
{
	[Token(Token = "0x40009C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int[] playerIdList;

	[Token(Token = "0x40009C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int localPlayerIndex;

	[Token(Token = "0x40009CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PhotonSyncedPlayerList instance;

	[Token(Token = "0x40009CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform[] tablePositions;

	[Token(Token = "0x40009CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private int defaultPosition;

	[Token(Token = "0x40009CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture[] avatarTextures;

	[Token(Token = "0x600099B")]
	[Address(RVA = "0x941810", Offset = "0x941810", VA = "0x941810")]
	private void Start()
	{
	}

	[Token(Token = "0x600099C")]
	[Address(RVA = "0x941888", Offset = "0x941888", VA = "0x941888")]
	public void OnJoinedRoom()
	{
	}

	[Token(Token = "0x600099D")]
	[Address(RVA = "0x941AA4", Offset = "0x941AA4", VA = "0x941AA4")]
	private void OnPhotonPlayerConnected(PhotonPlayer other)
	{
	}

	[Token(Token = "0x600099E")]
	[Address(RVA = "0x941B10", Offset = "0x941B10", VA = "0x941B10")]
	private void OnPhotonPlayerDisconnected(PhotonPlayer other)
	{
	}

	[Token(Token = "0x600099F")]
	[Address(RVA = "0x94188C", Offset = "0x94188C", VA = "0x94188C")]
	private void UpdatePlayerList()
	{
	}

	[Token(Token = "0x60009A0")]
	[Address(RVA = "0x941B7C", Offset = "0x941B7C", VA = "0x941B7C")]
	private void OnPhotonCustomRoomPropertiesChanged(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
	{
	}

	[Token(Token = "0x60009A1")]
	[Address(RVA = "0x941CF0", Offset = "0x941CF0", VA = "0x941CF0")]
	public int SetAvatarPositionRotation(Transform avatarTransform, int ID)
	{
		return default(int);
	}

	[Token(Token = "0x60009A2")]
	[Address(RVA = "0x941EC0", Offset = "0x941EC0", VA = "0x941EC0")]
	public PhotonSyncedPlayerList()
	{
	}
}
[Token(Token = "0x2000181")]
public class Player1AimCamera : UnityEngine.MonoBehaviour, IManagedUpdated
{
	[Token(Token = "0x40009CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Camera instance;

	[Token(Token = "0x40009CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Camera parentCamera;

	[Token(Token = "0x40009D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Vector2 autoAimXy;

	[Token(Token = "0x40009D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Vector2 autoAimWh;

	[Token(Token = "0x40009D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Vector2 manualAimXy;

	[Token(Token = "0x40009D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Vector2 manualAimWh;

	[Token(Token = "0x60009A3")]
	[Address(RVA = "0x947D58", Offset = "0x947D58", VA = "0x947D58")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009A4")]
	[Address(RVA = "0x947E08", Offset = "0x947E08", VA = "0x947E08")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60009A5")]
	[Address(RVA = "0x947E6C", Offset = "0x947E6C", VA = "0x947E6C", Slot = "4")]
	public void ManageUpdate()
	{
	}

	[Token(Token = "0x60009A6")]
	[Address(RVA = "0x947FDC", Offset = "0x947FDC", VA = "0x947FDC")]
	public Player1AimCamera()
	{
	}
}
[Token(Token = "0x2000182")]
public class Player1Camera : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40009D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Camera instance;

	[Token(Token = "0x60009A7")]
	[Address(RVA = "0x947FE4", Offset = "0x947FE4", VA = "0x947FE4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009A8")]
	[Address(RVA = "0x94804C", Offset = "0x94804C", VA = "0x94804C")]
	public Player1Camera()
	{
	}
}
[Token(Token = "0x2000183")]
public class Player2AimCamera : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40009D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Camera instance;

	[Token(Token = "0x60009A9")]
	[Address(RVA = "0x948054", Offset = "0x948054", VA = "0x948054")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009AA")]
	[Address(RVA = "0x9480BC", Offset = "0x9480BC", VA = "0x9480BC")]
	public Player2AimCamera()
	{
	}
}
[Token(Token = "0x2000184")]
public class Player2Camera : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40009D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Camera instance;

	[Token(Token = "0x60009AB")]
	[Address(RVA = "0x9480C4", Offset = "0x9480C4", VA = "0x9480C4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009AC")]
	[Address(RVA = "0x94812C", Offset = "0x94812C", VA = "0x94812C")]
	public Player2Camera()
	{
	}
}
[Token(Token = "0x2000185")]
public class PlayerList : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40009D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private playerHolder[] playerHolder;

	[Token(Token = "0x40009D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Image[] imageHolders;

	[Token(Token = "0x40009D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Sprite[] playerSprites;

	[Token(Token = "0x60009AD")]
	[Address(RVA = "0x948D6C", Offset = "0x948D6C", VA = "0x948D6C")]
	private void OnPhotonPlayerPropertiesChanged(object[] playerAndUpdatedProps)
	{
	}

	[Token(Token = "0x60009AE")]
	[Address(RVA = "0x94910C", Offset = "0x94910C", VA = "0x94910C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009AF")]
	[Address(RVA = "0x948D70", Offset = "0x948D70", VA = "0x948D70")]
	private void UpdatePlayerInfo()
	{
	}

	[Token(Token = "0x60009B0")]
	[Address(RVA = "0x949110", Offset = "0x949110", VA = "0x949110")]
	public PlayerList()
	{
	}
}
[Token(Token = "0x2000186")]
public class PlayerNameCharacter : UnityEngine.MonoBehaviour, IManagedUpdated
{
	[Token(Token = "0x40009DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro tmp;

	[Token(Token = "0x40009DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PhotonView photonView;

	[Token(Token = "0x60009B1")]
	[Address(RVA = "0x949118", Offset = "0x949118", VA = "0x949118")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009B2")]
	[Address(RVA = "0x949340", Offset = "0x949340", VA = "0x949340")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60009B3")]
	[Address(RVA = "0x9493A4", Offset = "0x9493A4", VA = "0x9493A4", Slot = "4")]
	public void ManageUpdate()
	{
	}

	[Token(Token = "0x60009B4")]
	[Address(RVA = "0x949434", Offset = "0x949434", VA = "0x949434")]
	public PlayerNameCharacter()
	{
	}
}
[Token(Token = "0x2000187")]
public class PlayerPrefSettings : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40009DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool[] stagesUnlocked;

	[Token(Token = "0x40009DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool[] stagesDayCleared;

	[Token(Token = "0x40009DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool[] stagesNightCleared;

	[Token(Token = "0x40009DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool[] stagesHumanCleared;

	[Token(Token = "0x40009E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool[] charactersUnlocked;

	[Token(Token = "0x40009E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool[] weaponsUnlocked;

	[Token(Token = "0x40009E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int[] campaignScores;

	[Token(Token = "0x40009E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string StagesUnlockedSTR;

	[Token(Token = "0x40009E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string StagesDayClearedSTR;

	[Token(Token = "0x40009E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string StagesNightClearedSTR;

	[Token(Token = "0x40009E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string StagesHumanClearedSTR;

	[Token(Token = "0x40009E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string CharactersUnlockedSTR;

	[Token(Token = "0x40009E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string WeaponsUnlockedSTR;

	[Token(Token = "0x40009E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string CampaignScoresSTR;

	[Token(Token = "0x40009EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static PlayerPrefSettings instance;

	[Token(Token = "0x40009EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private dreamloLeaderBoard campaignLeaderBoard;

	[Token(Token = "0x40009EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private TextMeshProUGUI campaignTmpBoard;

	[Token(Token = "0x40009ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<dreamloLeaderBoard.Score> campaingScoreList;

	[Token(Token = "0x40009EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private dreamloLeaderBoard versusLeaderBoard;

	[Token(Token = "0x40009EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private TextMeshProUGUI versusTmpBoard;

	[Token(Token = "0x40009F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<dreamloLeaderBoard.Score> versusScoreList;

	[Token(Token = "0x40009F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private dreamloLeaderBoard waveLeaderBoard;

	[Token(Token = "0x40009F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private TextMeshProUGUI waveTmpBoard;

	[Token(Token = "0x40009F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private List<dreamloLeaderBoard.Score> waveScoreList;

	[Token(Token = "0x60009B5")]
	[Address(RVA = "0x94943C", Offset = "0x94943C", VA = "0x94943C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x6EBE98", Offset = "0x6EBE98")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60009B6")]
	[Address(RVA = "0x949708", Offset = "0x949708", VA = "0x949708")]
	public void RefreshScores()
	{
	}

	[Token(Token = "0x60009B7")]
	[Address(RVA = "0x9497AC", Offset = "0x9497AC", VA = "0x9497AC")]
	public void DisplayScores()
	{
	}

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0x949880", Offset = "0x949880", VA = "0x949880")]
	private void DisplayScores(ref List<dreamloLeaderBoard.Score> scoreList, TextMeshProUGUI textMeshPro, string title)
	{
	}

	[Token(Token = "0x60009B9")]
	[Address(RVA = "0x949BAC", Offset = "0x949BAC", VA = "0x949BAC")]
	public void updateCampaignLeaderBoard()
	{
	}

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0x949C90", Offset = "0x949C90", VA = "0x949C90")]
	public void updateVersusLeaderBoard(int score)
	{
	}

	[Token(Token = "0x60009BB")]
	[Address(RVA = "0x949D20", Offset = "0x949D20", VA = "0x949D20")]
	public void updateWaveLeaderBoard(int score)
	{
	}

	[Token(Token = "0x60009BC")]
	[Address(RVA = "0x949DB0", Offset = "0x949DB0", VA = "0x949DB0")]
	private void Start()
	{
	}

	[Token(Token = "0x60009BD")]
	[Address(RVA = "0x949E10", Offset = "0x949E10", VA = "0x949E10")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60009BE")]
	[Address(RVA = "0x93AE6C", Offset = "0x93AE6C", VA = "0x93AE6C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x6EBED0", Offset = "0x6EBED0")]
	public void SaveSettings()
	{
	}

	[Token(Token = "0x60009BF")]
	[Address(RVA = "0x94A004", Offset = "0x94A004", VA = "0x94A004")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x6EBF08", Offset = "0x6EBF08")]
	public void ResetSettings()
	{
	}

	[Token(Token = "0x60009C0")]
	[Address(RVA = "0x94A0D8", Offset = "0x94A0D8", VA = "0x94A0D8")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x6EBF40", Offset = "0x6EBF40")]
	public void EnableEverything()
	{
	}

	[Token(Token = "0x60009C1")]
	[Address(RVA = "0x94A36C", Offset = "0x94A36C", VA = "0x94A36C")]
	public void DebugMode()
	{
	}

	[Token(Token = "0x60009C2")]
	[Address(RVA = "0x94A3DC", Offset = "0x94A3DC", VA = "0x94A3DC")]
	public PlayerPrefSettings()
	{
	}
}
[Token(Token = "0x2000188")]
public class PlayerPrefsX
{
	[Token(Token = "0x20003DC")]
	private enum ArrayType
	{
		[Token(Token = "0x400139A")]
		Float,
		[Token(Token = "0x400139B")]
		Int32,
		[Token(Token = "0x400139C")]
		Bool,
		[Token(Token = "0x400139D")]
		String,
		[Token(Token = "0x400139E")]
		Vector2,
		[Token(Token = "0x400139F")]
		Vector3,
		[Token(Token = "0x40013A0")]
		Quaternion,
		[Token(Token = "0x40013A1")]
		Color
	}

	[Token(Token = "0x40009F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int endianDiff1;

	[Token(Token = "0x40009F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int endianDiff2;

	[Token(Token = "0x40009F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int idx;

	[Token(Token = "0x40009F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static byte[] byteBlock;

	[Token(Token = "0x60009C4")]
	[Address(RVA = "0x9481A8", Offset = "0x9481A8", VA = "0x9481A8")]
	public static bool SetBool(string name, bool value)
	{
		return default(bool);
	}

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0x94A4BC", Offset = "0x94A4BC", VA = "0x94A4BC")]
	public static bool GetBool(string name)
	{
		return default(bool);
	}

	[Token(Token = "0x60009C6")]
	[Address(RVA = "0x948374", Offset = "0x948374", VA = "0x948374")]
	public static bool GetBool(string name, bool defaultValue)
	{
		return default(bool);
	}

	[Token(Token = "0x60009C7")]
	[Address(RVA = "0x94A4DC", Offset = "0x94A4DC", VA = "0x94A4DC")]
	public static long GetLong(string key, long defaultValue)
	{
		return default(long);
	}

	[Token(Token = "0x60009C8")]
	[Address(RVA = "0x94A594", Offset = "0x94A594", VA = "0x94A594")]
	public static long GetLong(string key)
	{
		return default(long);
	}

	[Token(Token = "0x60009C9")]
	[Address(RVA = "0x94A584", Offset = "0x94A584", VA = "0x94A584")]
	private static void SplitLong(long input, out int lowBits, out int highBits)
	{
	}

	[Token(Token = "0x60009CA")]
	[Address(RVA = "0x94A624", Offset = "0x94A624", VA = "0x94A624")]
	public static void SetLong(string key, long value)
	{
	}

	[Token(Token = "0x60009CB")]
	[Address(RVA = "0x94A6B8", Offset = "0x94A6B8", VA = "0x94A6B8")]
	public static bool SetVector2(string key, Vector2 vector)
	{
		return default(bool);
	}

	[Token(Token = "0x60009CC")]
	[Address(RVA = "0x94A7F0", Offset = "0x94A7F0", VA = "0x94A7F0")]
	private static Vector2 GetVector2(string key)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60009CD")]
	[Address(RVA = "0x94A978", Offset = "0x94A978", VA = "0x94A978")]
	public static Vector2 GetVector2(string key, Vector2 defaultValue)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60009CE")]
	[Address(RVA = "0x94A9C8", Offset = "0x94A9C8", VA = "0x94A9C8")]
	public static bool SetVector3(string key, Vector3 vector)
	{
		return default(bool);
	}

	[Token(Token = "0x60009CF")]
	[Address(RVA = "0x94AA78", Offset = "0x94AA78", VA = "0x94AA78")]
	public static Vector3 GetVector3(string key)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0x94AB34", Offset = "0x94AB34", VA = "0x94AB34")]
	public static Vector3 GetVector3(string key, Vector3 defaultValue)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009D1")]
	[Address(RVA = "0x94AB98", Offset = "0x94AB98", VA = "0x94AB98")]
	public static bool SetQuaternion(string key, Quaternion vector)
	{
		return default(bool);
	}

	[Token(Token = "0x60009D2")]
	[Address(RVA = "0x94AC58", Offset = "0x94AC58", VA = "0x94AC58")]
	public static Quaternion GetQuaternion(string key)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60009D3")]
	[Address(RVA = "0x94AD10", Offset = "0x94AD10", VA = "0x94AD10")]
	public static Quaternion GetQuaternion(string key, Quaternion defaultValue)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60009D4")]
	[Address(RVA = "0x94AD80", Offset = "0x94AD80", VA = "0x94AD80")]
	public static bool SetColor(string key, Color color)
	{
		return default(bool);
	}

	[Token(Token = "0x60009D5")]
	[Address(RVA = "0x94AE40", Offset = "0x94AE40", VA = "0x94AE40")]
	public static Color GetColor(string key)
	{
		return default(Color);
	}

	[Token(Token = "0x60009D6")]
	[Address(RVA = "0x94AEAC", Offset = "0x94AEAC", VA = "0x94AEAC")]
	public static Color GetColor(string key, Color defaultValue)
	{
		return default(Color);
	}

	[Token(Token = "0x60009D7")]
	[Address(RVA = "0x949E14", Offset = "0x949E14", VA = "0x949E14")]
	public static bool SetBoolArray(string key, bool[] boolArray)
	{
		return default(bool);
	}

	[Token(Token = "0x60009D8")]
	[Address(RVA = "0x94B184", Offset = "0x94B184", VA = "0x94B184")]
	public static bool[] GetBoolArray(string key)
	{
		return null;
	}

	[Token(Token = "0x60009D9")]
	[Address(RVA = "0x94956C", Offset = "0x94956C", VA = "0x94956C")]
	public static bool[] GetBoolArray(string key, bool defaultValue, int defaultSize)
	{
		return null;
	}

	[Token(Token = "0x60009DA")]
	[Address(RVA = "0x94B3F4", Offset = "0x94B3F4", VA = "0x94B3F4")]
	public static bool SetStringArray(string key, string[] stringArray)
	{
		return default(bool);
	}

	[Token(Token = "0x60009DB")]
	[Address(RVA = "0x94B6B0", Offset = "0x94B6B0", VA = "0x94B6B0")]
	public static string[] GetStringArray(string key)
	{
		return null;
	}

	[Token(Token = "0x60009DC")]
	[Address(RVA = "0x94B938", Offset = "0x94B938", VA = "0x94B938")]
	public static string[] GetStringArray(string key, string defaultValue, int defaultSize)
	{
		return null;
	}

	[Token(Token = "0x60009DD")]
	[Address(RVA = "0x949F64", Offset = "0x949F64", VA = "0x949F64")]
	public static bool SetIntArray(string key, int[] intArray)
	{
		return default(bool);
	}

	[Token(Token = "0x60009DE")]
	[Address(RVA = "0x94A750", Offset = "0x94A750", VA = "0x94A750")]
	public static bool SetFloatArray(string key, float[] floatArray)
	{
		return default(bool);
	}

	[Token(Token = "0x60009DF")]
	[Address(RVA = "0x94BA3C", Offset = "0x94BA3C", VA = "0x94BA3C")]
	public static bool SetVector2Array(string key, Vector2[] vector2Array)
	{
		return default(bool);
	}

	[Token(Token = "0x60009E0")]
	[Address(RVA = "0x94BADC", Offset = "0x94BADC", VA = "0x94BADC")]
	public static bool SetVector3Array(string key, Vector3[] vector3Array)
	{
		return default(bool);
	}

	[Token(Token = "0x60009E1")]
	[Address(RVA = "0x94BB7C", Offset = "0x94BB7C", VA = "0x94BB7C")]
	public static bool SetQuaternionArray(string key, Quaternion[] quaternionArray)
	{
		return default(bool);
	}

	[Token(Token = "0x60009E2")]
	[Address(RVA = "0x94BC1C", Offset = "0x94BC1C", VA = "0x94BC1C")]
	public static bool SetColorArray(string key, Color[] colorArray)
	{
		return default(bool);
	}

	[Token(Token = "0x60009E3")]
	private static bool SetValue<T>(string key, T array, ArrayType arrayType, int vectorNumber, Action<T, byte[], int> convert) where T : IList
	{
		return default(bool);
	}

	[Token(Token = "0x60009E4")]
	[Address(RVA = "0x94BCBC", Offset = "0x94BCBC", VA = "0x94BCBC")]
	private static void ConvertFromInt(int[] array, byte[] bytes, int i)
	{
	}

	[Token(Token = "0x60009E5")]
	[Address(RVA = "0x94BCF4", Offset = "0x94BCF4", VA = "0x94BCF4")]
	private static void ConvertFromFloat(float[] array, byte[] bytes, int i)
	{
	}

	[Token(Token = "0x60009E6")]
	[Address(RVA = "0x94BDC0", Offset = "0x94BDC0", VA = "0x94BDC0")]
	private static void ConvertFromVector2(Vector2[] array, byte[] bytes, int i)
	{
	}

	[Token(Token = "0x60009E7")]
	[Address(RVA = "0x94BE38", Offset = "0x94BE38", VA = "0x94BE38")]
	private static void ConvertFromVector3(Vector3[] array, byte[] bytes, int i)
	{
	}

	[Token(Token = "0x60009E8")]
	[Address(RVA = "0x94BED8", Offset = "0x94BED8", VA = "0x94BED8")]
	private static void ConvertFromQuaternion(Quaternion[] array, byte[] bytes, int i)
	{
	}

	[Token(Token = "0x60009E9")]
	[Address(RVA = "0x94BF8C", Offset = "0x94BF8C", VA = "0x94BF8C")]
	private static void ConvertFromColor(Color[] array, byte[] bytes, int i)
	{
	}

	[Token(Token = "0x60009EA")]
	[Address(RVA = "0x94C040", Offset = "0x94C040", VA = "0x94C040")]
	public static int[] GetIntArray(string key)
	{
		return null;
	}

	[Token(Token = "0x60009EB")]
	[Address(RVA = "0x94963C", Offset = "0x94963C", VA = "0x94963C")]
	public static int[] GetIntArray(string key, int defaultValue, int defaultSize)
	{
		return null;
	}

	[Token(Token = "0x60009EC")]
	[Address(RVA = "0x94A89C", Offset = "0x94A89C", VA = "0x94A89C")]
	public static float[] GetFloatArray(string key)
	{
		return null;
	}

	[Token(Token = "0x60009ED")]
	[Address(RVA = "0x94C11C", Offset = "0x94C11C", VA = "0x94C11C")]
	public static float[] GetFloatArray(string key, float defaultValue, int defaultSize)
	{
		return null;
	}

	[Token(Token = "0x60009EE")]
	[Address(RVA = "0x94C1F4", Offset = "0x94C1F4", VA = "0x94C1F4")]
	public static Vector2[] GetVector2Array(string key)
	{
		return null;
	}

	[Token(Token = "0x60009EF")]
	[Address(RVA = "0x94C2D0", Offset = "0x94C2D0", VA = "0x94C2D0")]
	public static Vector2[] GetVector2Array(string key, Vector2 defaultValue, int defaultSize)
	{
		return null;
	}

	[Token(Token = "0x60009F0")]
	[Address(RVA = "0x94C3B0", Offset = "0x94C3B0", VA = "0x94C3B0")]
	public static Vector3[] GetVector3Array(string key)
	{
		return null;
	}

	[Token(Token = "0x60009F1")]
	[Address(RVA = "0x94C48C", Offset = "0x94C48C", VA = "0x94C48C")]
	public static Vector3[] GetVector3Array(string key, Vector3 defaultValue, int defaultSize)
	{
		return null;
	}

	[Token(Token = "0x60009F2")]
	[Address(RVA = "0x94C57C", Offset = "0x94C57C", VA = "0x94C57C")]
	public static Quaternion[] GetQuaternionArray(string key)
	{
		return null;
	}

	[Token(Token = "0x60009F3")]
	[Address(RVA = "0x94C658", Offset = "0x94C658", VA = "0x94C658")]
	public static Quaternion[] GetQuaternionArray(string key, Quaternion defaultValue, int defaultSize)
	{
		return null;
	}

	[Token(Token = "0x60009F4")]
	[Address(RVA = "0x94C750", Offset = "0x94C750", VA = "0x94C750")]
	public static Color[] GetColorArray(string key)
	{
		return null;
	}

	[Token(Token = "0x60009F5")]
	[Address(RVA = "0x94C82C", Offset = "0x94C82C", VA = "0x94C82C")]
	public static Color[] GetColorArray(string key, Color defaultValue, int defaultSize)
	{
		return null;
	}

	[Token(Token = "0x60009F6")]
	private static void GetValue<T>(string key, T list, ArrayType arrayType, int vectorNumber, Action<T, byte[]> convert) where T : IList
	{
	}

	[Token(Token = "0x60009F7")]
	[Address(RVA = "0x94C924", Offset = "0x94C924", VA = "0x94C924")]
	private static void ConvertToInt(List<int> list, byte[] bytes)
	{
	}

	[Token(Token = "0x60009F8")]
	[Address(RVA = "0x94C994", Offset = "0x94C994", VA = "0x94C994")]
	private static void ConvertToFloat(List<float> list, byte[] bytes)
	{
	}

	[Token(Token = "0x60009F9")]
	[Address(RVA = "0x94CA88", Offset = "0x94CA88", VA = "0x94CA88")]
	private static void ConvertToVector2(List<Vector2> list, byte[] bytes)
	{
	}

	[Token(Token = "0x60009FA")]
	[Address(RVA = "0x94CB30", Offset = "0x94CB30", VA = "0x94CB30")]
	private static void ConvertToVector3(List<Vector3> list, byte[] bytes)
	{
	}

	[Token(Token = "0x60009FB")]
	[Address(RVA = "0x94CBF0", Offset = "0x94CBF0", VA = "0x94CBF0")]
	private static void ConvertToQuaternion(List<Quaternion> list, byte[] bytes)
	{
	}

	[Token(Token = "0x60009FC")]
	[Address(RVA = "0x94CCC4", Offset = "0x94CCC4", VA = "0x94CCC4")]
	private static void ConvertToColor(List<Color> list, byte[] bytes)
	{
	}

	[Token(Token = "0x60009FD")]
	[Address(RVA = "0x94CD98", Offset = "0x94CD98", VA = "0x94CD98")]
	public static void ShowArrayType(string key)
	{
	}

	[Token(Token = "0x60009FE")]
	[Address(RVA = "0x94AF1C", Offset = "0x94AF1C", VA = "0x94AF1C")]
	private static void Initialize()
	{
	}

	[Token(Token = "0x60009FF")]
	[Address(RVA = "0x94B080", Offset = "0x94B080", VA = "0x94B080")]
	private static bool SaveBytes(string key, byte[] bytes)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A00")]
	[Address(RVA = "0x94BD30", Offset = "0x94BD30", VA = "0x94BD30")]
	private static void ConvertFloatToBytes(float f, byte[] bytes)
	{
	}

	[Token(Token = "0x6000A01")]
	[Address(RVA = "0x94CA00", Offset = "0x94CA00", VA = "0x94CA00")]
	private static float ConvertBytesToFloat(byte[] bytes)
	{
		return default(float);
	}

	[Token(Token = "0x6000A02")]
	[Address(RVA = "0x94AFF0", Offset = "0x94AFF0", VA = "0x94AFF0")]
	private static void ConvertInt32ToBytes(int i, byte[] bytes)
	{
	}

	[Token(Token = "0x6000A03")]
	[Address(RVA = "0x94B36C", Offset = "0x94B36C", VA = "0x94B36C")]
	private static int ConvertBytesToInt32(byte[] bytes)
	{
		return default(int);
	}

	[Token(Token = "0x6000A04")]
	[Address(RVA = "0x94CEE4", Offset = "0x94CEE4", VA = "0x94CEE4")]
	private static void ConvertTo4Bytes(byte[] bytes)
	{
	}

	[Token(Token = "0x6000A05")]
	[Address(RVA = "0x94D074", Offset = "0x94D074", VA = "0x94D074")]
	private static void ConvertFrom4Bytes(byte[] bytes)
	{
	}

	[Token(Token = "0x6000A06")]
	[Address(RVA = "0x94D204", Offset = "0x94D204", VA = "0x94D204")]
	public PlayerPrefsX()
	{
	}
}
[Token(Token = "0x2000189")]
public class PlayerSelectionShieldValue : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40009F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private CharacterSelection cs;

	[Token(Token = "0x40009F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Image image;

	[Token(Token = "0x6000A07")]
	[Address(RVA = "0x94D20C", Offset = "0x94D20C", VA = "0x94D20C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A08")]
	[Address(RVA = "0x94D264", Offset = "0x94D264", VA = "0x94D264")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A09")]
	[Address(RVA = "0x94D324", Offset = "0x94D324", VA = "0x94D324")]
	public PlayerSelectionShieldValue()
	{
	}
}
[Token(Token = "0x200018A")]
public class PlayerSelectionSpeedValue : UnityEngine.MonoBehaviour, IManagedUpdated
{
	[Token(Token = "0x40009FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private CharacterSelection cs;

	[Token(Token = "0x40009FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Image image;

	[Token(Token = "0x6000A0A")]
	[Address(RVA = "0x94D32C", Offset = "0x94D32C", VA = "0x94D32C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A0B")]
	[Address(RVA = "0x94D384", Offset = "0x94D384", VA = "0x94D384")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A0C")]
	[Address(RVA = "0x94D3E8", Offset = "0x94D3E8", VA = "0x94D3E8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A0D")]
	[Address(RVA = "0x94D44C", Offset = "0x94D44C", VA = "0x94D44C", Slot = "4")]
	public void ManageUpdate()
	{
	}

	[Token(Token = "0x6000A0E")]
	[Address(RVA = "0x94D508", Offset = "0x94D508", VA = "0x94D508")]
	public PlayerSelectionSpeedValue()
	{
	}
}
[Token(Token = "0x200018B")]
public class PlayerUIAmmoValue : UnityEngine.MonoBehaviour, IManagedLateUpdated
{
	[Token(Token = "0x40009FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Image image;

	[Token(Token = "0x40009FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private CameraFollowPlayer cameraFollowPlayer;

	[Token(Token = "0x6000A0F")]
	[Address(RVA = "0x94D8F4", Offset = "0x94D8F4", VA = "0x94D8F4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A10")]
	[Address(RVA = "0x94D994", Offset = "0x94D994", VA = "0x94D994")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A11")]
	[Address(RVA = "0x94D9F8", Offset = "0x94D9F8", VA = "0x94D9F8", Slot = "4")]
	public void ManageLateUpdate()
	{
	}

	[Token(Token = "0x6000A12")]
	[Address(RVA = "0x94DC58", Offset = "0x94DC58", VA = "0x94DC58")]
	public PlayerUIAmmoValue()
	{
	}
}
[Token(Token = "0x200018C")]
public class PlayerUIHealthValue : UnityEngine.MonoBehaviour, IManagedLateUpdated
{
	[Token(Token = "0x40009FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Image image;

	[Token(Token = "0x40009FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private CameraFollowPlayer cameraFollowPlayer;

	[Token(Token = "0x6000A13")]
	[Address(RVA = "0x94DC60", Offset = "0x94DC60", VA = "0x94DC60")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A14")]
	[Address(RVA = "0x94DD00", Offset = "0x94DD00", VA = "0x94DD00")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A15")]
	[Address(RVA = "0x94DD64", Offset = "0x94DD64", VA = "0x94DD64", Slot = "4")]
	public void ManageLateUpdate()
	{
	}

	[Token(Token = "0x6000A16")]
	[Address(RVA = "0x94DE28", Offset = "0x94DE28", VA = "0x94DE28")]
	public PlayerUIHealthValue()
	{
	}
}
[Token(Token = "0x200018D")]
public class PlayerUISpecialValue : UnityEngine.MonoBehaviour, IManagedLateUpdated
{
	[Token(Token = "0x4000A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Image image;

	[Token(Token = "0x4000A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private CameraFollowPlayer cameraFollowPlayer;

	[Token(Token = "0x6000A17")]
	[Address(RVA = "0x94DE30", Offset = "0x94DE30", VA = "0x94DE30")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A18")]
	[Address(RVA = "0x94DED0", Offset = "0x94DED0", VA = "0x94DED0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A19")]
	[Address(RVA = "0x94DF34", Offset = "0x94DF34", VA = "0x94DF34", Slot = "4")]
	public void ManageLateUpdate()
	{
	}

	[Token(Token = "0x6000A1A")]
	[Address(RVA = "0x94E0FC", Offset = "0x94E0FC", VA = "0x94E0FC")]
	public PlayerUISpecialValue()
	{
	}
}
[Token(Token = "0x200018E")]
public class PostProcessorCamera : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader shader;

	[Token(Token = "0x4000A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PostProcessorCamera instance;

	[Token(Token = "0x4000A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Camera pPcamera;

	[Token(Token = "0x6000A1B")]
	[Address(RVA = "0x94E5C4", Offset = "0x94E5C4", VA = "0x94E5C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A1C")]
	[Address(RVA = "0x94E670", Offset = "0x94E670", VA = "0x94E670")]
	private void OnPreCull()
	{
	}

	[Token(Token = "0x6000A1D")]
	[Address(RVA = "0x94E758", Offset = "0x94E758", VA = "0x94E758")]
	public PostProcessorCamera()
	{
	}
}
[Token(Token = "0x200018F")]
public class PrivateRoomSetup : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int Pin1;

	[Token(Token = "0x4000A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int Pin2;

	[Token(Token = "0x4000A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int Pin3;

	[Token(Token = "0x4000A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int Pin4;

	[Token(Token = "0x4000A09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string Pin;

	[Token(Token = "0x4000A0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool privateMode;

	[Token(Token = "0x4000A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private CustomButton publicButton;

	[Token(Token = "0x4000A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private CustomButton privateButton;

	[Token(Token = "0x4000A0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E4D48", Offset = "0x6E4D48")]
	[SerializeField]
	private Transform pinButtonsGroup;

	[Token(Token = "0x4000A0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Transform pinGroupPublicModeParent;

	[Token(Token = "0x4000A0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Transform pinGroupPrivateModeParent;

	[Token(Token = "0x4000A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private CustomButton button1;

	[Token(Token = "0x4000A11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private TextMeshProUGUI text1;

	[Token(Token = "0x4000A12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private CustomButton button2;

	[Token(Token = "0x4000A13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private TextMeshProUGUI text2;

	[Token(Token = "0x4000A14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private CustomButton button3;

	[Token(Token = "0x4000A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private TextMeshProUGUI text3;

	[Token(Token = "0x4000A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private CustomButton button4;

	[Token(Token = "0x4000A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private TextMeshProUGUI text4;

	[Token(Token = "0x4000A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float clickTime;

	[Token(Token = "0x6000A1E")]
	[Address(RVA = "0x94E760", Offset = "0x94E760", VA = "0x94E760")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A1F")]
	[Address(RVA = "0x94EBC0", Offset = "0x94EBC0", VA = "0x94EBC0")]
	public void Change1()
	{
	}

	[Token(Token = "0x6000A20")]
	[Address(RVA = "0x94EC68", Offset = "0x94EC68", VA = "0x94EC68")]
	public void Change2()
	{
	}

	[Token(Token = "0x6000A21")]
	[Address(RVA = "0x94ED10", Offset = "0x94ED10", VA = "0x94ED10")]
	public void Change3()
	{
	}

	[Token(Token = "0x6000A22")]
	[Address(RVA = "0x94EDB8", Offset = "0x94EDB8", VA = "0x94EDB8")]
	public void Change4()
	{
	}

	[Token(Token = "0x6000A23")]
	[Address(RVA = "0x94E864", Offset = "0x94E864", VA = "0x94E864")]
	private void UpdateButtons()
	{
	}

	[Token(Token = "0x6000A24")]
	[Address(RVA = "0x94EE60", Offset = "0x94EE60", VA = "0x94EE60")]
	public void PrivateMode(bool isPrivate)
	{
	}

	[Token(Token = "0x6000A25")]
	[Address(RVA = "0x94EFB8", Offset = "0x94EFB8", VA = "0x94EFB8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A26")]
	[Address(RVA = "0x94F054", Offset = "0x94F054", VA = "0x94F054")]
	public PrivateRoomSetup()
	{
	}
}
[Token(Token = "0x2000190")]
public class RaycastChooser : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRRaycaster ovrRaycaster;

	[Token(Token = "0x4000A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GraphicRaycaster graphicsRaycaster;

	[Token(Token = "0x6000A28")]
	[Address(RVA = "0x950F5C", Offset = "0x950F5C", VA = "0x950F5C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A29")]
	[Address(RVA = "0x95106C", Offset = "0x95106C", VA = "0x95106C")]
	public RaycastChooser()
	{
	}
}
[Token(Token = "0x2000191")]
public class RegisterForPunCallbacks : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6000A2A")]
	[Address(RVA = "0x9516C0", Offset = "0x9516C0", VA = "0x9516C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A2B")]
	[Address(RVA = "0x9517C8", Offset = "0x9517C8", VA = "0x9517C8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A2C")]
	[Address(RVA = "0x95185C", Offset = "0x95185C", VA = "0x95185C")]
	public RegisterForPunCallbacks()
	{
	}
}
[Token(Token = "0x2000192")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6E121C", Offset = "0x6E121C")]
public class SceneLoader : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20003DD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E1B84", Offset = "0x6E1B84")]
	private sealed class <LoadLevel>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AsyncOperation <asyncLoad>5__2;

		[Token(Token = "0x17000260")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001876")]
			[Address(RVA = "0x8F6F44", Offset = "0x8F6F44", VA = "0x8F6F44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000261")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001878")]
			[Address(RVA = "0x8F6FAC", Offset = "0x8F6FAC", VA = "0x8F6FAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001873")]
		[Address(RVA = "0x8F696C", Offset = "0x8F696C", VA = "0x8F696C")]
		[DebuggerHidden]
		public <LoadLevel>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6001874")]
		[Address(RVA = "0x8F69A4", Offset = "0x8F69A4", VA = "0x8F69A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001875")]
		[Address(RVA = "0x8F69A8", Offset = "0x8F69A8", VA = "0x8F69A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001877")]
		[Address(RVA = "0x8F6F4C", Offset = "0x8F6F4C", VA = "0x8F6F4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool loading;

	[Token(Token = "0x4000A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static float loadingStatus;

	[Token(Token = "0x6000A2D")]
	[Address(RVA = "0x8F682C", Offset = "0x8F682C", VA = "0x8F682C")]
	private void OnPhotonCustomRoomPropertiesChanged(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
	{
	}

	[Token(Token = "0x6000A2E")]
	[Address(RVA = "0x8F68FC", Offset = "0x8F68FC", VA = "0x8F68FC")]
	private void OnJoinedRoom()
	{
	}

	[Token(Token = "0x6000A2F")]
	[Address(RVA = "0x8F6900", Offset = "0x8F6900", VA = "0x8F6900")]
	private void OnLeaveRoom()
	{
	}

	[Token(Token = "0x6000A30")]
	[Address(RVA = "0x8F6904", Offset = "0x8F6904", VA = "0x8F6904")]
	private void OnConnectedToMaster()
	{
	}

	[Token(Token = "0x6000A31")]
	[Address(RVA = "0x8F6908", Offset = "0x8F6908", VA = "0x8F6908")]
	private void OnDisconnectedFromPhoton()
	{
	}

	[Token(Token = "0x6000A32")]
	[Address(RVA = "0x8F6830", Offset = "0x8F6830", VA = "0x8F6830")]
	private void RefreshScene()
	{
	}

	[Token(Token = "0x6000A33")]
	[Address(RVA = "0x8F690C", Offset = "0x8F690C", VA = "0x8F690C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6EBF78", Offset = "0x6EBF78")]
	private IEnumerator LoadLevel()
	{
		return null;
	}

	[Token(Token = "0x6000A34")]
	[Address(RVA = "0x8F6998", Offset = "0x8F6998", VA = "0x8F6998")]
	public SceneLoader()
	{
	}
}
[Token(Token = "0x2000193")]
public class SetCameraLeader : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6000A36")]
	[Address(RVA = "0x8F9AC4", Offset = "0x8F9AC4", VA = "0x8F9AC4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A37")]
	[Address(RVA = "0x8F9B20", Offset = "0x8F9B20", VA = "0x8F9B20")]
	private void UpdateCheckTarget()
	{
	}

	[Token(Token = "0x6000A38")]
	[Address(RVA = "0x8F9C94", Offset = "0x8F9C94", VA = "0x8F9C94")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A39")]
	[Address(RVA = "0x8F9D24", Offset = "0x8F9D24", VA = "0x8F9D24")]
	public SetCameraLeader()
	{
	}
}
[Token(Token = "0x2000194")]
public class SetHologramPosition : UnityEngine.MonoBehaviour, IManagedUpdated
{
	[Token(Token = "0x20003DE")]
	public enum HologramState
	{
		[Token(Token = "0x40013A6")]
		visible,
		[Token(Token = "0x40013A7")]
		invisible,
		[Token(Token = "0x40013A8")]
		transparent,
		[Token(Token = "0x40013A9")]
		specialTransparent
	}

	[Token(Token = "0x4000A1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform SectionPoint;

	[Token(Token = "0x4000A1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float radius;

	[Token(Token = "0x4000A1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6E4E54", Offset = "0x6E4E54")]
	[SerializeField]
	private float rimSize;

	[Token(Token = "0x4000A20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float pauseRadius;

	[Token(Token = "0x4000A21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6E4EA8", Offset = "0x6E4EA8")]
	[SerializeField]
	private float pauseRimSize;

	[Token(Token = "0x4000A22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lerpedRadius;

	[Token(Token = "0x4000A23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float lerpedRim;

	[Token(Token = "0x4000A24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Color ColorNormal;

	[Token(Token = "0x4000A25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Color ColorHit;

	[Token(Token = "0x4000A26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Color ColorSpecial;

	[Token(Token = "0x4000A27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Color ColorFade;

	[Token(Token = "0x4000A28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private float offSet;

	[Token(Token = "0x4000A29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private CameraFollowPlayer cameraFollowPlayer;

	[Token(Token = "0x4000A2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Vector3 playerSectionPoint;

	[Token(Token = "0x4000A2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private string ResetColorStr;

	[Token(Token = "0x4000A2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private HologramState hologramState;

	[Token(Token = "0x4000A2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private MenuController menuController;

	[Token(Token = "0x4000A2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private string _Radius;

	[Token(Token = "0x4000A2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string _MaxRadius;

	[Token(Token = "0x4000A30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private string _ColorFade;

	[Token(Token = "0x4000A31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private string _SectionPoint;

	[Token(Token = "0x4000A32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float lastHit;

	[Token(Token = "0x6000A3A")]
	[Address(RVA = "0x8F9D2C", Offset = "0x8F9D2C", VA = "0x8F9D2C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A3B")]
	[Address(RVA = "0x8F9E84", Offset = "0x8F9E84", VA = "0x8F9E84")]
	private void TakeGlobalHitDelegate(float barLength, Destructible fromDestructible, float maxLenghth, Vector3 position)
	{
	}

	[Token(Token = "0x6000A3C")]
	[Address(RVA = "0x8FA020", Offset = "0x8FA020", VA = "0x8FA020", Slot = "4")]
	public void ManageUpdate()
	{
	}

	[Token(Token = "0x6000A3D")]
	[Address(RVA = "0x8FA328", Offset = "0x8FA328", VA = "0x8FA328")]
	private void MenuChanged()
	{
	}

	[Token(Token = "0x6000A3E")]
	[Address(RVA = "0x8FA4B8", Offset = "0x8FA4B8", VA = "0x8FA4B8")]
	private void OnPreRender()
	{
	}

	[Token(Token = "0x6000A3F")]
	[Address(RVA = "0x8FA5CC", Offset = "0x8FA5CC", VA = "0x8FA5CC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A40")]
	[Address(RVA = "0x8FA7F8", Offset = "0x8FA7F8", VA = "0x8FA7F8")]
	public SetHologramPosition()
	{
	}
}
[Token(Token = "0x2000195")]
public class SetImage : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6000A41")]
	[Address(RVA = "0x8FA944", Offset = "0x8FA944", VA = "0x8FA944")]
	public void ChangeImage(Sprite newImage)
	{
	}

	[Token(Token = "0x6000A42")]
	[Address(RVA = "0x8FAA40", Offset = "0x8FAA40", VA = "0x8FAA40")]
	public void ClearImage()
	{
	}

	[Token(Token = "0x6000A43")]
	[Address(RVA = "0x8FAAC0", Offset = "0x8FAAC0", VA = "0x8FAAC0")]
	public SetImage()
	{
	}
}
[Token(Token = "0x2000196")]
public class SetNavMeshAgentType : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000A33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int type;

	[Token(Token = "0x6000A44")]
	[Address(RVA = "0x8FAAC8", Offset = "0x8FAAC8", VA = "0x8FAAC8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A45")]
	[Address(RVA = "0x8FAB30", Offset = "0x8FAB30", VA = "0x8FAB30")]
	public SetNavMeshAgentType()
	{
	}
}
[Token(Token = "0x2000197")]
public class ShieldDisableDelay : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float delay;

	[Token(Token = "0x4000A35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float lastInvokeTime;

	[Token(Token = "0x6000A46")]
	[Address(RVA = "0x8FAB38", Offset = "0x8FAB38", VA = "0x8FAB38")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A47")]
	[Address(RVA = "0x8FAB68", Offset = "0x8FAB68", VA = "0x8FAB68")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A48")]
	[Address(RVA = "0x8FABC0", Offset = "0x8FABC0", VA = "0x8FABC0")]
	public ShieldDisableDelay()
	{
	}
}
[Token(Token = "0x2000198")]
public class SocialName : Photon.MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20003DF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E1B94", Offset = "0x6E1B94")]
	private sealed class <>c
	{
		[Token(Token = "0x40013AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40013AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<bool> <>9__0_0;

		[Token(Token = "0x600187A")]
		[Address(RVA = "0x8FC550", Offset = "0x8FC550", VA = "0x8FC550")]
		public <>c()
		{
		}

		[Token(Token = "0x600187B")]
		[Address(RVA = "0x8FC558", Offset = "0x8FC558", VA = "0x8FC558")]
		internal void <Start>b__0_0(bool success)
		{
		}
	}

	[Token(Token = "0x6000A49")]
	[Address(RVA = "0x8FC38C", Offset = "0x8FC38C", VA = "0x8FC38C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A4A")]
	[Address(RVA = "0x8FC4E4", Offset = "0x8FC4E4", VA = "0x8FC4E4")]
	public SocialName()
	{
	}
}
[Token(Token = "0x2000199")]
public class SoundMixer : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000A36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioMixerSnapshot snapshotMenus;

	[Token(Token = "0x4000A37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioMixerSnapshot snapshotGameplay;

	[Token(Token = "0x4000A38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AudioMixerSnapshot currentSnapshot;

	[Token(Token = "0x4000A39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AudioMixerSnapshot newSnapshot;

	[Token(Token = "0x4000A3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioMixer audioMixer;

	[Token(Token = "0x4000A3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SoundMixer instance;

	[Token(Token = "0x6000A4B")]
	[Address(RVA = "0x8FCCD4", Offset = "0x8FCCD4", VA = "0x8FCCD4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A4C")]
	[Address(RVA = "0x8FCD3C", Offset = "0x8FCD3C", VA = "0x8FCD3C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0x8FCE90", Offset = "0x8FCE90", VA = "0x8FCE90")]
	public SoundMixer()
	{
	}
}
[Token(Token = "0x200019A")]
public class SpawnBox : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000A3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LayerMask groundLayerMask;

	[Token(Token = "0x4000A3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioClip audioClip;

	[Token(Token = "0x4000A3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 pos;

	[Token(Token = "0x4000A3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Quaternion rot;

	[Token(Token = "0x6000A4E")]
	[Address(RVA = "0x8FD790", Offset = "0x8FD790", VA = "0x8FD790")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A4F")]
	[Address(RVA = "0x8FD81C", Offset = "0x8FD81C", VA = "0x8FD81C")]
	private void GetGroundQuaternion()
	{
	}

	[Token(Token = "0x6000A50")]
	[Address(RVA = "0x8FDB20", Offset = "0x8FDB20", VA = "0x8FDB20")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000A51")]
	[Address(RVA = "0x8FDB60", Offset = "0x8FDB60", VA = "0x8FDB60")]
	public SpawnBox()
	{
	}
}
[Token(Token = "0x200019B")]
public class BotSpawn : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20003E0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E1BA4", Offset = "0x6E1BA4")]
	private sealed class <EnableBot>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BotSpawn <>4__this;

		[Token(Token = "0x40013AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CharacterSetup.Legs legs;

		[Token(Token = "0x40013B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public CharacterSetup.Tops top;

		[Token(Token = "0x40013B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 position;

		[Token(Token = "0x40013B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int <i>5__2;

		[Token(Token = "0x17000262")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600187F")]
			[Address(RVA = "0x9ACA40", Offset = "0x9ACA40", VA = "0x9ACA40", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000263")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001881")]
			[Address(RVA = "0x9ACAA8", Offset = "0x9ACAA8", VA = "0x9ACAA8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600187C")]
		[Address(RVA = "0x9ABB98", Offset = "0x9ABB98", VA = "0x9ABB98")]
		[DebuggerHidden]
		public <EnableBot>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x600187D")]
		[Address(RVA = "0x9AC024", Offset = "0x9AC024", VA = "0x9AC024", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600187E")]
		[Address(RVA = "0x9AC028", Offset = "0x9AC028", VA = "0x9AC028", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001880")]
		[Address(RVA = "0x9ACA48", Offset = "0x9ACA48", VA = "0x9ACA48", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public CharacterControl bot;

	[Token(Token = "0x4000A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private CharacterSetup.Legs legs;

	[Token(Token = "0x4000A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private CharacterSetup.Tops top;

	[Token(Token = "0x4000A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string Playerstr;

	[Token(Token = "0x4000A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool readyToUse;

	[Token(Token = "0x4000A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SphereCollider sphereCollider;

	[Token(Token = "0x4000A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private bool interiorSpawn;

	[Token(Token = "0x6000A52")]
	[Address(RVA = "0x9AB87C", Offset = "0x9AB87C", VA = "0x9AB87C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A53")]
	[Address(RVA = "0x9AB974", Offset = "0x9AB974", VA = "0x9AB974")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000A54")]
	[Address(RVA = "0x9ABAF0", Offset = "0x9ABAF0", VA = "0x9ABAF0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6EBFDC", Offset = "0x6EBFDC")]
	private IEnumerator EnableBot(Vector3 position, CharacterSetup.Legs legs, CharacterSetup.Tops top)
	{
		return null;
	}

	[Token(Token = "0x6000A55")]
	[Address(RVA = "0x9ABBC4", Offset = "0x9ABBC4", VA = "0x9ABBC4")]
	private bool CheckVisibleToPlayers(Transform location)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A56")]
	[Address(RVA = "0x9ABD60", Offset = "0x9ABD60", VA = "0x9ABD60")]
	public static float CheckDistanceToClosestPlayers(Transform location)
	{
		return default(float);
	}

	[Token(Token = "0x6000A57")]
	[Address(RVA = "0x9ABEF8", Offset = "0x9ABEF8", VA = "0x9ABEF8")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000A58")]
	[Address(RVA = "0x9ABFC4", Offset = "0x9ABFC4", VA = "0x9ABFC4")]
	public BotSpawn()
	{
	}
}
[Token(Token = "0x200019C")]
public class CanonParticleSpawner : ParticleSpawnerBaseClass, IProjectile, IManagedLateFixedUpdated
{
	[Token(Token = "0x4000A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private int hitPower;

	[Token(Token = "0x4000A48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CanonParticleSpawner instance;

	[Token(Token = "0x4000A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private LocalDestructible l;

	[Token(Token = "0x4000A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Destructible d;

	[Token(Token = "0x4000A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private bool fireArrayUpdate;

	[Token(Token = "0x4000A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Vector3[] originArray;

	[Token(Token = "0x4000A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Vector3[] directionArray;

	[Token(Token = "0x4000A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private int currentIndex;

	[Token(Token = "0x4000A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private string FireRPCString;

	[Token(Token = "0x6000A59")]
	[Address(RVA = "0x9B2BA4", Offset = "0x9B2BA4", VA = "0x9B2BA4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0x9B2C30", Offset = "0x9B2C30", VA = "0x9B2C30")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A5B")]
	[Address(RVA = "0x9B2C94", Offset = "0x9B2C94", VA = "0x9B2C94")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A5C")]
	[Address(RVA = "0x9B2CF8", Offset = "0x9B2CF8", VA = "0x9B2CF8", Slot = "65")]
	public override void Hit(GameObject hitObject)
	{
	}

	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0x9B2824", Offset = "0x9B2824", VA = "0x9B2824")]
	public void AddToFireArray(Vector3 origin, Vector3 direction)
	{
	}

	[Token(Token = "0x6000A5E")]
	[Address(RVA = "0x9B2E4C", Offset = "0x9B2E4C", VA = "0x9B2E4C", Slot = "66")]
	public void ManageLateFixedUpdate()
	{
	}

	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0x9B2FCC", Offset = "0x9B2FCC", VA = "0x9B2FCC")]
	[PunRPC]
	private void FireRPC(Vector3[] origin, Vector3[] direction, int arraySize)
	{
	}

	[Token(Token = "0x6000A60")]
	[Address(RVA = "0x9B3058", Offset = "0x9B3058", VA = "0x9B3058")]
	public CanonParticleSpawner()
	{
	}
}
[Token(Token = "0x200019D")]
public class ExplosionParticleSpawner : ParticleSpawnerBaseClass, IProjectile
{
	[Token(Token = "0x20003E1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E1BB4", Offset = "0x6E1BB4")]
	private sealed class <ExplodeDelayCo>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ExplosionParticleSpawner <>4__this;

		[Token(Token = "0x40013B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 position;

		[Token(Token = "0x17000264")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001885")]
			[Address(RVA = "0x9827A8", Offset = "0x9827A8", VA = "0x9827A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000265")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001887")]
			[Address(RVA = "0x982810", Offset = "0x982810", VA = "0x982810", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001882")]
		[Address(RVA = "0x98251C", Offset = "0x98251C", VA = "0x98251C")]
		[DebuggerHidden]
		public <ExplodeDelayCo>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6001883")]
		[Address(RVA = "0x982650", Offset = "0x982650", VA = "0x982650", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001884")]
		[Address(RVA = "0x982654", Offset = "0x982654", VA = "0x982654", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001886")]
		[Address(RVA = "0x9827B0", Offset = "0x9827B0", VA = "0x9827B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ExplosionParticleSpawner instance;

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0x9823EC", Offset = "0x9823EC", VA = "0x9823EC")]
	public void ExplodeDelay(Vector3 position)
	{
	}

	[Token(Token = "0x6000A62")]
	[Address(RVA = "0x982488", Offset = "0x982488", VA = "0x982488")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6ED050", Offset = "0x6ED050")]
	private IEnumerator ExplodeDelayCo(Vector3 position)
	{
		return null;
	}

	[Token(Token = "0x6000A63")]
	[Address(RVA = "0x982548", Offset = "0x982548", VA = "0x982548")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A64")]
	[Address(RVA = "0x9825E4", Offset = "0x9825E4", VA = "0x9825E4", Slot = "65")]
	public override void Hit(GameObject hitObject)
	{
	}

	[Token(Token = "0x6000A65")]
	[Address(RVA = "0x9825E8", Offset = "0x9825E8", VA = "0x9825E8")]
	public ExplosionParticleSpawner()
	{
	}
}
[Token(Token = "0x200019E")]
public class FlameParticleSpawner : ParticleSpawnerBaseClass, IProjectile, IManagedLateFixedUpdated
{
	[Token(Token = "0x4000A51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private int hitPower;

	[Token(Token = "0x4000A52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static FlameParticleSpawner instance;

	[Token(Token = "0x4000A53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private LocalDestructible l;

	[Token(Token = "0x4000A54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Destructible d;

	[Token(Token = "0x4000A55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private bool fireArrayUpdate;

	[Token(Token = "0x4000A56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Vector3[] originArray;

	[Token(Token = "0x4000A57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Vector3[] directionArray;

	[Token(Token = "0x4000A58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private int currentIndex;

	[Token(Token = "0x4000A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private string FireRPCString;

	[Token(Token = "0x6000A66")]
	[Address(RVA = "0x9846EC", Offset = "0x9846EC", VA = "0x9846EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A67")]
	[Address(RVA = "0x984778", Offset = "0x984778", VA = "0x984778")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A68")]
	[Address(RVA = "0x9847DC", Offset = "0x9847DC", VA = "0x9847DC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A69")]
	[Address(RVA = "0x984840", Offset = "0x984840", VA = "0x984840", Slot = "65")]
	public override void Hit(GameObject hitObject)
	{
	}

	[Token(Token = "0x6000A6A")]
	[Address(RVA = "0x98436C", Offset = "0x98436C", VA = "0x98436C")]
	public void AddToFireArray(Vector3 origin, Vector3 direction)
	{
	}

	[Token(Token = "0x6000A6B")]
	[Address(RVA = "0x984994", Offset = "0x984994", VA = "0x984994", Slot = "66")]
	public void ManageLateFixedUpdate()
	{
	}

	[Token(Token = "0x6000A6C")]
	[Address(RVA = "0x984B14", Offset = "0x984B14", VA = "0x984B14")]
	[PunRPC]
	private void FireRPC(Vector3[] origin, Vector3[] direction, int arraySize)
	{
	}

	[Token(Token = "0x6000A6D")]
	[Address(RVA = "0x984BA0", Offset = "0x984BA0", VA = "0x984BA0")]
	public FlameParticleSpawner()
	{
	}
}
[Token(Token = "0x200019F")]
public class LaserParticleSpawner : ParticleSpawnerBaseClass, IProjectile, IManagedLateFixedUpdated
{
	[Token(Token = "0x4000A5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private int hitPower;

	[Token(Token = "0x4000A5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LaserParticleSpawner instance;

	[Token(Token = "0x4000A5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private LocalDestructible l;

	[Token(Token = "0x4000A5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Destructible d;

	[Token(Token = "0x4000A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private bool fireArrayUpdate;

	[Token(Token = "0x4000A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Vector3[] originArray;

	[Token(Token = "0x4000A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Vector3[] directionArray;

	[Token(Token = "0x4000A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private int currentIndex;

	[Token(Token = "0x4000A62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private string FireRPCString;

	[Token(Token = "0x6000A6E")]
	[Address(RVA = "0x962630", Offset = "0x962630", VA = "0x962630")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A6F")]
	[Address(RVA = "0x9626BC", Offset = "0x9626BC", VA = "0x9626BC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A70")]
	[Address(RVA = "0x962720", Offset = "0x962720", VA = "0x962720")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A71")]
	[Address(RVA = "0x962784", Offset = "0x962784", VA = "0x962784", Slot = "65")]
	public override void Hit(GameObject hitObject)
	{
	}

	[Token(Token = "0x6000A72")]
	[Address(RVA = "0x962238", Offset = "0x962238", VA = "0x962238")]
	public void AddToFireArray(Vector3 origin, Vector3 direction)
	{
	}

	[Token(Token = "0x6000A73")]
	[Address(RVA = "0x962D18", Offset = "0x962D18", VA = "0x962D18", Slot = "66")]
	public void ManageLateFixedUpdate()
	{
	}

	[Token(Token = "0x6000A74")]
	[Address(RVA = "0x962E98", Offset = "0x962E98", VA = "0x962E98")]
	[PunRPC]
	private void FireRPC(Vector3[] origin, Vector3[] direction, int arraySize)
	{
	}

	[Token(Token = "0x6000A75")]
	[Address(RVA = "0x962F24", Offset = "0x962F24", VA = "0x962F24")]
	public LaserParticleSpawner()
	{
	}
}
[Token(Token = "0x20001A0")]
public class MiniVulcanParticleSpawner : ParticleSpawnerBaseClass, IProjectile, IManagedLateFixedUpdated
{
	[Token(Token = "0x4000A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private int hitPower;

	[Token(Token = "0x4000A64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MiniVulcanParticleSpawner instance;

	[Token(Token = "0x4000A65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private LocalDestructible l;

	[Token(Token = "0x4000A66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Destructible d;

	[Token(Token = "0x4000A67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private bool fireArrayUpdate;

	[Token(Token = "0x4000A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Vector3[] originArray;

	[Token(Token = "0x4000A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Vector3[] directionArray;

	[Token(Token = "0x4000A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private int currentIndex;

	[Token(Token = "0x4000A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private string FireRPCString;

	[Token(Token = "0x6000A76")]
	[Address(RVA = "0x8DAFAC", Offset = "0x8DAFAC", VA = "0x8DAFAC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A77")]
	[Address(RVA = "0x8DB038", Offset = "0x8DB038", VA = "0x8DB038")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A78")]
	[Address(RVA = "0x8DB098", Offset = "0x8DB098", VA = "0x8DB098")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A79")]
	[Address(RVA = "0x8DB0F8", Offset = "0x8DB0F8", VA = "0x8DB0F8", Slot = "65")]
	public override void Hit(GameObject hitObject)
	{
	}

	[Token(Token = "0x6000A7A")]
	[Address(RVA = "0x8DB24C", Offset = "0x8DB24C", VA = "0x8DB24C")]
	public void AddToFireArray(Vector3 origin, Vector3 direction)
	{
	}

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0x8DB3D4", Offset = "0x8DB3D4", VA = "0x8DB3D4", Slot = "66")]
	public void ManageLateFixedUpdate()
	{
	}

	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0x8DB554", Offset = "0x8DB554", VA = "0x8DB554")]
	[PunRPC]
	private void FireRPC(Vector3[] origin, Vector3[] direction, int arraySize)
	{
	}

	[Token(Token = "0x6000A7D")]
	[Address(RVA = "0x8DB5E0", Offset = "0x8DB5E0", VA = "0x8DB5E0")]
	public MiniVulcanParticleSpawner()
	{
	}
}
[Token(Token = "0x20001A1")]
public class MissileParticleSpawner : ParticleSpawnerBaseClass, IProjectile, IManagedLateFixedUpdated
{
	[Token(Token = "0x4000A6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private int hitPower;

	[Token(Token = "0x4000A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MissileParticleSpawner instance;

	[Token(Token = "0x4000A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private LocalDestructible l;

	[Token(Token = "0x4000A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Destructible d;

	[Token(Token = "0x4000A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private bool fireArrayUpdate;

	[Token(Token = "0x4000A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Vector3[] originArray;

	[Token(Token = "0x4000A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Vector3[] directionArray;

	[Token(Token = "0x4000A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private int currentIndex;

	[Token(Token = "0x4000A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private string FireRPCString;

	[Token(Token = "0x6000A7E")]
	[Address(RVA = "0x8DBB6C", Offset = "0x8DBB6C", VA = "0x8DBB6C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A7F")]
	[Address(RVA = "0x8DBBF8", Offset = "0x8DBBF8", VA = "0x8DBBF8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A80")]
	[Address(RVA = "0x8DBC58", Offset = "0x8DBC58", VA = "0x8DBC58")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A81")]
	[Address(RVA = "0x8DBCB8", Offset = "0x8DBCB8", VA = "0x8DBCB8", Slot = "65")]
	public override void Hit(GameObject hitObject)
	{
	}

	[Token(Token = "0x6000A82")]
	[Address(RVA = "0x8DB7DC", Offset = "0x8DB7DC", VA = "0x8DB7DC")]
	public void AddToFireArray(Vector3 origin, Vector3 direction)
	{
	}

	[Token(Token = "0x6000A83")]
	[Address(RVA = "0x8DBE0C", Offset = "0x8DBE0C", VA = "0x8DBE0C", Slot = "66")]
	public void ManageLateFixedUpdate()
	{
	}

	[Token(Token = "0x6000A84")]
	[Address(RVA = "0x8DBF8C", Offset = "0x8DBF8C", VA = "0x8DBF8C")]
	[PunRPC]
	private void FireRPC(Vector3[] origin, Vector3[] direction, int arraySize)
	{
	}

	[Token(Token = "0x6000A85")]
	[Address(RVA = "0x8DC018", Offset = "0x8DC018", VA = "0x8DC018")]
	public MissileParticleSpawner()
	{
	}
}
[Token(Token = "0x20001A2")]
public class MusicController : UnityEngine.MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20003E2")]
	public class Track
	{
		[Token(Token = "0x40013B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioClip introClip;

		[Token(Token = "0x40013B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip mainClip;

		[Token(Token = "0x40013B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip outroClip;

		[Token(Token = "0x6001888")]
		[Address(RVA = "0x8DE868", Offset = "0x8DE868", VA = "0x8DE868")]
		public Track()
		{
		}
	}

	[Token(Token = "0x20003E3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E1BC4", Offset = "0x6E1BC4")]
	private sealed class <trackPlayer>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MusicController <>4__this;

		[Token(Token = "0x17000266")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600188C")]
			[Address(RVA = "0x8DE7F8", Offset = "0x8DE7F8", VA = "0x8DE7F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000267")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600188E")]
			[Address(RVA = "0x8DE860", Offset = "0x8DE860", VA = "0x8DE860", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001889")]
		[Address(RVA = "0x8DE4E8", Offset = "0x8DE4E8", VA = "0x8DE4E8")]
		[DebuggerHidden]
		public <trackPlayer>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x600188A")]
		[Address(RVA = "0x8DE608", Offset = "0x8DE608", VA = "0x8DE608", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600188B")]
		[Address(RVA = "0x8DE60C", Offset = "0x8DE60C", VA = "0x8DE60C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600188D")]
		[Address(RVA = "0x8DE800", Offset = "0x8DE800", VA = "0x8DE800", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool playing;

	[Token(Token = "0x4000A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool routineRunning;

	[Token(Token = "0x4000A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int currentTrack;

	[Token(Token = "0x4000A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int newTrack;

	[Token(Token = "0x4000A79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MusicController instance;

	[Token(Token = "0x4000A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool musicDisabled;

	[Token(Token = "0x4000A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioMixerGroup musicGroup;

	[Token(Token = "0x4000A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioMixerGroup fxGroup;

	[Token(Token = "0x4000A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static string musicVolume;

	[Token(Token = "0x4000A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static float minMusicVolume;

	[Token(Token = "0x4000A7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private static float maxMusicVolume;

	[Token(Token = "0x4000A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static string fxVolume;

	[Token(Token = "0x4000A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static string voiceVolume;

	[Token(Token = "0x4000A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static string menuVolume;

	[Token(Token = "0x4000A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static float minFxVolume;

	[Token(Token = "0x4000A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static float maxFxVolume;

	[Token(Token = "0x4000A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static float minVoiceVolume;

	[Token(Token = "0x4000A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private static float maxVoiceVolume;

	[Token(Token = "0x4000A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioSource audioSource;

	[Token(Token = "0x4000A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static int MusicVolume;

	[Token(Token = "0x4000A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public static int FxVolume;

	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Track[] tracks;

	[Token(Token = "0x6000A86")]
	[Address(RVA = "0x8DDC20", Offset = "0x8DDC20", VA = "0x8DDC20")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A87")]
	[Address(RVA = "0x8DE18C", Offset = "0x8DE18C", VA = "0x8DE18C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x6ED0F4", Offset = "0x6ED0F4")]
	public static void IncreaseMusicVolume()
	{
	}

	[Token(Token = "0x6000A88")]
	[Address(RVA = "0x8DDD28", Offset = "0x8DDD28", VA = "0x8DDD28")]
	private static void UpdateMusicVolume()
	{
	}

	[Token(Token = "0x6000A89")]
	[Address(RVA = "0x8DE25C", Offset = "0x8DE25C", VA = "0x8DE25C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x6ED12C", Offset = "0x6ED12C")]
	public static void IncreaseFxVolume()
	{
	}

	[Token(Token = "0x6000A8A")]
	[Address(RVA = "0x8DDEBC", Offset = "0x8DDEBC", VA = "0x8DDEBC")]
	private static void UpdateFxVolume()
	{
	}

	[Token(Token = "0x6000A8B")]
	[Address(RVA = "0x8DE344", Offset = "0x8DE344", VA = "0x8DE344")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A8C")]
	[Address(RVA = "0x8DE424", Offset = "0x8DE424", VA = "0x8DE424")]
	public void RandomTrack()
	{
	}

	[Token(Token = "0x6000A8D")]
	[Address(RVA = "0x8DE478", Offset = "0x8DE478", VA = "0x8DE478")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6ED164", Offset = "0x6ED164")]
	private IEnumerator trackPlayer()
	{
		return null;
	}

	[Token(Token = "0x6000A8E")]
	[Address(RVA = "0x8DE514", Offset = "0x8DE514", VA = "0x8DE514")]
	public MusicController()
	{
	}
}
[Token(Token = "0x20001A3")]
public class PlayerSpawn : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PlayerSpawn instance;

	[Token(Token = "0x4000A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] spawnPoints;

	[Token(Token = "0x6000A90")]
	[Address(RVA = "0x94D510", Offset = "0x94D510", VA = "0x94D510")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A91")]
	[Address(RVA = "0x94D7D0", Offset = "0x94D7D0", VA = "0x94D7D0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A92")]
	[Address(RVA = "0x94D8EC", Offset = "0x94D8EC", VA = "0x94D8EC")]
	public PlayerSpawn()
	{
	}
}
[Token(Token = "0x20001A4")]
public class SmokeParticleSpawner : ParticleSpawnerBaseClass, IProjectile
{
	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SmokeParticleSpawner instance;

	[Token(Token = "0x6000A93")]
	[Address(RVA = "0x8FBCDC", Offset = "0x8FBCDC", VA = "0x8FBCDC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A94")]
	[Address(RVA = "0x8FBD78", Offset = "0x8FBD78", VA = "0x8FBD78", Slot = "65")]
	public override void Hit(GameObject hitObject)
	{
	}

	[Token(Token = "0x6000A95")]
	[Address(RVA = "0x8FBD7C", Offset = "0x8FBD7C", VA = "0x8FBD7C")]
	public SmokeParticleSpawner()
	{
	}
}
[Token(Token = "0x20001A5")]
public class SoundPool : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioMixerGroup fxGroup;

	[Token(Token = "0x4000A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioMixerGroup menuGroup;

	[Token(Token = "0x4000A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SoundPool instance;

	[Token(Token = "0x4000A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject audioPrefab;

	[Token(Token = "0x4000A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private int poolSize;

	[Token(Token = "0x4000A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioSource[] audioSources;

	[Token(Token = "0x4000A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform[] transforms;

	[Token(Token = "0x4000A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float lastVOTime;

	[Token(Token = "0x4000A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int current;

	[Token(Token = "0x4000A97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AudioSource menuAudioSource;

	[Token(Token = "0x4000A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private AudioClip highlightSound;

	[Token(Token = "0x4000A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private AudioClip selectSound;

	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private AudioClip objectiveSound;

	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private AudioClip specialActivateSound;

	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private AudioClip specialDeactivateSound;

	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private AudioClip reloadSound;

	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private AudioClip repairSound;

	[Token(Token = "0x4000A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private AudioClip abilityFull;

	[Token(Token = "0x4000AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private AudioClip unitDestroyed;

	[Token(Token = "0x4000AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private AudioClip unitReady;

	[Token(Token = "0x4000AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private AudioClip selectArea;

	[Token(Token = "0x4000AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private AudioClip areaSelected;

	[Token(Token = "0x4000AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private AudioClip selectUnit;

	[Token(Token = "0x4000AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private AudioClip unitSelected;

	[Token(Token = "0x4000AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private AudioClip countDown1;

	[Token(Token = "0x4000AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private AudioClip countDown2;

	[Token(Token = "0x4000AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private AudioClip countDown3;

	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private AudioClip countDown4;

	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private AudioClip countDown5;

	[Token(Token = "0x4000AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private AudioClip doorClip;

	[Token(Token = "0x4000AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private AudioClip hackingSound;

	[Token(Token = "0x6000A96")]
	[Address(RVA = "0x8FCE98", Offset = "0x8FCE98", VA = "0x8FCE98")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A97")]
	[Address(RVA = "0x8FD0BC", Offset = "0x8FD0BC", VA = "0x8FD0BC")]
	public void DoorOpen(Vector3 position)
	{
	}

	[Token(Token = "0x6000A98")]
	[Address(RVA = "0x8FD2C0", Offset = "0x8FD2C0", VA = "0x8FD2C0")]
	public void CountDown1()
	{
	}

	[Token(Token = "0x6000A99")]
	[Address(RVA = "0x8FD304", Offset = "0x8FD304", VA = "0x8FD304")]
	public void CountDown2()
	{
	}

	[Token(Token = "0x6000A9A")]
	[Address(RVA = "0x8FD348", Offset = "0x8FD348", VA = "0x8FD348")]
	public void CountDown3()
	{
	}

	[Token(Token = "0x6000A9B")]
	[Address(RVA = "0x8FD38C", Offset = "0x8FD38C", VA = "0x8FD38C")]
	public void CountDown4()
	{
	}

	[Token(Token = "0x6000A9C")]
	[Address(RVA = "0x8FD3D0", Offset = "0x8FD3D0", VA = "0x8FD3D0")]
	public void CountDown5()
	{
	}

	[Token(Token = "0x6000A9D")]
	[Address(RVA = "0x8FBC54", Offset = "0x8FBC54", VA = "0x8FBC54")]
	public void MenuHighlight()
	{
	}

	[Token(Token = "0x6000A9E")]
	[Address(RVA = "0x8FD414", Offset = "0x8FD414", VA = "0x8FD414")]
	public void UnitDestroyed()
	{
	}

	[Token(Token = "0x6000A9F")]
	[Address(RVA = "0x8FD458", Offset = "0x8FD458", VA = "0x8FD458")]
	public void UnitReady()
	{
	}

	[Token(Token = "0x6000AA0")]
	[Address(RVA = "0x8FD49C", Offset = "0x8FD49C", VA = "0x8FD49C")]
	public void SelectArea()
	{
	}

	[Token(Token = "0x6000AA1")]
	[Address(RVA = "0x8FD4E0", Offset = "0x8FD4E0", VA = "0x8FD4E0")]
	public void AreaSelected()
	{
	}

	[Token(Token = "0x6000AA2")]
	[Address(RVA = "0x8FD524", Offset = "0x8FD524", VA = "0x8FD524")]
	public void SelectUnit()
	{
	}

	[Token(Token = "0x6000AA3")]
	[Address(RVA = "0x8FD568", Offset = "0x8FD568", VA = "0x8FD568")]
	public void UnitSelected()
	{
	}

	[Token(Token = "0x6000AA4")]
	[Address(RVA = "0x8FBC94", Offset = "0x8FBC94", VA = "0x8FBC94")]
	public void MenuSelect()
	{
	}

	[Token(Token = "0x6000AA5")]
	[Address(RVA = "0x8FD5AC", Offset = "0x8FD5AC", VA = "0x8FD5AC")]
	public void MenuObjective()
	{
	}

	[Token(Token = "0x6000AA6")]
	[Address(RVA = "0x8FD5EC", Offset = "0x8FD5EC", VA = "0x8FD5EC")]
	public void AbilityFull()
	{
	}

	[Token(Token = "0x6000AA7")]
	[Address(RVA = "0x8FB064", Offset = "0x8FB064", VA = "0x8FB064")]
	public void SpecialActivate()
	{
	}

	[Token(Token = "0x6000AA8")]
	[Address(RVA = "0x8FADD4", Offset = "0x8FADD4", VA = "0x8FADD4")]
	public void SpecialDeactivate()
	{
	}

	[Token(Token = "0x6000AA9")]
	[Address(RVA = "0x8FD668", Offset = "0x8FD668", VA = "0x8FD668")]
	public void ReloadWeapon()
	{
	}

	[Token(Token = "0x6000AAA")]
	[Address(RVA = "0x8FD6E4", Offset = "0x8FD6E4", VA = "0x8FD6E4")]
	public void Repair()
	{
	}

	[Token(Token = "0x6000AAB")]
	[Address(RVA = "0x8FD728", Offset = "0x8FD728", VA = "0x8FD728")]
	public void Hacking()
	{
	}

	[Token(Token = "0x6000AAC")]
	[Address(RVA = "0x8FD0CC", Offset = "0x8FD0CC", VA = "0x8FD0CC")]
	public void SpawnSound(Vector3 position, AudioClip audioClip, bool spacialSound, bool menuSound)
	{
	}

	[Token(Token = "0x6000AAD")]
	[Address(RVA = "0x8FD788", Offset = "0x8FD788", VA = "0x8FD788")]
	public SoundPool()
	{
	}
}
[Token(Token = "0x20001A6")]
public class SpreadParticleSpawner : ParticleSpawnerBaseClass, IProjectile, IManagedLateFixedUpdated
{
	[Token(Token = "0x4000AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private int hitPower;

	[Token(Token = "0x4000AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SpreadParticleSpawner instance;

	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private LocalDestructible l;

	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Destructible d;

	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private bool fireArrayUpdate;

	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Vector3[] originArray;

	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Vector3[] directionArray;

	[Token(Token = "0x4000AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private int currentIndex;

	[Token(Token = "0x4000AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private string FireRPCString;

	[Token(Token = "0x6000AAE")]
	[Address(RVA = "0x8FF108", Offset = "0x8FF108", VA = "0x8FF108")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AAF")]
	[Address(RVA = "0x8FF194", Offset = "0x8FF194", VA = "0x8FF194")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AB0")]
	[Address(RVA = "0x8FF1F8", Offset = "0x8FF1F8", VA = "0x8FF1F8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000AB1")]
	[Address(RVA = "0x8FF25C", Offset = "0x8FF25C", VA = "0x8FF25C", Slot = "65")]
	public override void Hit(GameObject hitObject)
	{
	}

	[Token(Token = "0x6000AB2")]
	[Address(RVA = "0x8FED88", Offset = "0x8FED88", VA = "0x8FED88")]
	public void AddToFireArray(Vector3 origin, Vector3 direction)
	{
	}

	[Token(Token = "0x6000AB3")]
	[Address(RVA = "0x8FF3B0", Offset = "0x8FF3B0", VA = "0x8FF3B0", Slot = "66")]
	public void ManageLateFixedUpdate()
	{
	}

	[Token(Token = "0x6000AB4")]
	[Address(RVA = "0x8FF530", Offset = "0x8FF530", VA = "0x8FF530")]
	[PunRPC]
	private void FireRPC(Vector3[] origin, Vector3[] direction, int arraySize)
	{
	}

	[Token(Token = "0x6000AB5")]
	[Address(RVA = "0x8FF5BC", Offset = "0x8FF5BC", VA = "0x8FF5BC")]
	public SpreadParticleSpawner()
	{
	}
}
[Token(Token = "0x20001A7")]
public class TimeBombParticleSpawner : ParticleSpawnerBaseClass, IProjectile
{
	[Token(Token = "0x20003E4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E1BD4", Offset = "0x6E1BD4")]
	private sealed class <DelayedFire>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 origin;

		[Token(Token = "0x40013C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TimeBombParticleSpawner <>4__this;

		[Token(Token = "0x17000268")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001892")]
			[Address(RVA = "0x90B6E8", Offset = "0x90B6E8", VA = "0x90B6E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000269")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001894")]
			[Address(RVA = "0x90B750", Offset = "0x90B750", VA = "0x90B750", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600188F")]
		[Address(RVA = "0x90AEA0", Offset = "0x90AEA0", VA = "0x90AEA0")]
		[DebuggerHidden]
		public <DelayedFire>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6001890")]
		[Address(RVA = "0x90AF58", Offset = "0x90AF58", VA = "0x90AF58", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001891")]
		[Address(RVA = "0x90AF5C", Offset = "0x90AF5C", VA = "0x90AF5C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001893")]
		[Address(RVA = "0x90B6F0", Offset = "0x90B6F0", VA = "0x90B6F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private int hitPower;

	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private ParticleSystem mineParticle;

	[Token(Token = "0x4000AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private AudioClip countdownSound;

	[Token(Token = "0x4000AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static TimeBombParticleSpawner instance;

	[Token(Token = "0x4000ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private ParticleSystem.EmitParams epLocal;

	[Token(Token = "0x4000ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private WaitForSeconds waitFor3Seconds;

	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private Vector3 lastForward;

	[Token(Token = "0x4000ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	[SerializeField]
	private LayerMask sphereCastLayerMask;

	[Token(Token = "0x6000AB6")]
	[Address(RVA = "0x90AA98", Offset = "0x90AA98", VA = "0x90AA98")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AB7")]
	[Address(RVA = "0x90AB80", Offset = "0x90AB80", VA = "0x90AB80", Slot = "65")]
	public override void Hit(GameObject hitObject)
	{
	}

	[Token(Token = "0x6000AB8")]
	[Address(RVA = "0x90ACD0", Offset = "0x90ACD0", VA = "0x90ACD0")]
	[PunRPC]
	private void FireRPC(Vector3 origin, Vector3 direction, Transform target)
	{
	}

	[Token(Token = "0x6000AB9")]
	[Address(RVA = "0x90AE0C", Offset = "0x90AE0C", VA = "0x90AE0C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6ED1E8", Offset = "0x6ED1E8")]
	private IEnumerator DelayedFire(Vector3 origin)
	{
		return null;
	}

	[Token(Token = "0x6000ABA")]
	[Address(RVA = "0x90AECC", Offset = "0x90AECC", VA = "0x90AECC")]
	public TimeBombParticleSpawner()
	{
	}
}
[Token(Token = "0x20001A8")]
public class VulcanParticleSpawner : ParticleSpawnerBaseClass, IProjectile, IManagedLateFixedUpdated
{
	[Token(Token = "0x4000ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private int hitPower;

	[Token(Token = "0x4000ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static VulcanParticleSpawner instance;

	[Token(Token = "0x4000AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private LocalDestructible l;

	[Token(Token = "0x4000AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Destructible d;

	[Token(Token = "0x4000AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private bool fireArrayUpdate;

	[Token(Token = "0x4000AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Vector3[] originArray;

	[Token(Token = "0x4000AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Vector3[] directionArray;

	[Token(Token = "0x4000AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private int currentIndex;

	[Token(Token = "0x4000AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private string FireRPCString;

	[Token(Token = "0x6000ABB")]
	[Address(RVA = "0xAC02D0", Offset = "0xAC02D0", VA = "0xAC02D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000ABC")]
	[Address(RVA = "0xAC035C", Offset = "0xAC035C", VA = "0xAC035C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000ABD")]
	[Address(RVA = "0xAC03C0", Offset = "0xAC03C0", VA = "0xAC03C0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000ABE")]
	[Address(RVA = "0xAC0424", Offset = "0xAC0424", VA = "0xAC0424", Slot = "65")]
	public override void Hit(GameObject hitObject)
	{
	}

	[Token(Token = "0x6000ABF")]
	[Address(RVA = "0xABFF48", Offset = "0xABFF48", VA = "0xABFF48")]
	public void AddToFireArray(Vector3 origin, Vector3 direction)
	{
	}

	[Token(Token = "0x6000AC0")]
	[Address(RVA = "0xAC0578", Offset = "0xAC0578", VA = "0xAC0578", Slot = "66")]
	public void ManageLateFixedUpdate()
	{
	}

	[Token(Token = "0x6000AC1")]
	[Address(RVA = "0xAC06F8", Offset = "0xAC06F8", VA = "0xAC06F8")]
	[PunRPC]
	private void FireRPC(Vector3[] origin, Vector3[] direction, int arraySize)
	{
	}

	[Token(Token = "0x6000AC2")]
	[Address(RVA = "0xAC0784", Offset = "0xAC0784", VA = "0xAC0784")]
	public VulcanParticleSpawner()
	{
	}
}
[Token(Token = "0x20001A9")]
public class SpecialPickup : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float despawnDelay;

	[Token(Token = "0x4000AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Collider triggerCollider;

	[Token(Token = "0x4000AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float enableTime;

	[Token(Token = "0x6000AC3")]
	[Address(RVA = "0x8FDB68", Offset = "0x8FDB68", VA = "0x8FDB68")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AC4")]
	[Address(RVA = "0x8FDC34", Offset = "0x8FDC34", VA = "0x8FDC34")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AC5")]
	[Address(RVA = "0x8FDD98", Offset = "0x8FDD98", VA = "0x8FDD98")]
	private void EnableCollider()
	{
	}

	[Token(Token = "0x6000AC6")]
	[Address(RVA = "0x8FDD1C", Offset = "0x8FDD1C", VA = "0x8FDD1C")]
	private void DespawnMe()
	{
	}

	[Token(Token = "0x6000AC7")]
	[Address(RVA = "0x8FDDB8", Offset = "0x8FDDB8", VA = "0x8FDDB8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000AC8")]
	[Address(RVA = "0x8FE020", Offset = "0x8FE020", VA = "0x8FE020")]
	public SpecialPickup()
	{
	}
}
[Token(Token = "0x20001AA")]
public class Cloak : UnityEngine.MonoBehaviour, ISpecial, IManagedUpdated
{
	[Token(Token = "0x4000ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float currentAmount;

	[Token(Token = "0x4000ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float MaxAmount;

	[Token(Token = "0x4000ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Renderer[] modelRenderer;

	[Token(Token = "0x4000ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Material cloakMaterial;

	[Token(Token = "0x4000ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Material cloakRemoteMaterial;

	[Token(Token = "0x4000ACF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject flare;

	[Token(Token = "0x4000AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private SpriteRenderer shadowProjector;

	[Token(Token = "0x4000AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private SpriteRenderer lightProjector;

	[Token(Token = "0x4000AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private PlayerNameCharacter playerNameCharacter;

	[Token(Token = "0x4000AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material[] sharedMaterials;

	[Token(Token = "0x4000AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private CharacterControl characterControl;

	[Token(Token = "0x1700011F")]
	public float GetAmount
	{
		[Token(Token = "0x6000ACE")]
		[Address(RVA = "0x9BFDEC", Offset = "0x9BFDEC", VA = "0x9BFDEC", Slot = "4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000120")]
	public float GetMaxAmount
	{
		[Token(Token = "0x6000ACF")]
		[Address(RVA = "0x9BFDF4", Offset = "0x9BFDF4", VA = "0x9BFDF4", Slot = "5")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000ACA")]
	[Address(RVA = "0x9BFA68", Offset = "0x9BFA68", VA = "0x9BFA68")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000ACB")]
	[Address(RVA = "0x9BFACC", Offset = "0x9BFACC", VA = "0x9BFACC", Slot = "7")]
	public void Init()
	{
	}

	[Token(Token = "0x6000ACC")]
	[Address(RVA = "0x9BFAD0", Offset = "0x9BFAD0", VA = "0x9BFAD0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000ACD")]
	[Address(RVA = "0x9BFD14", Offset = "0x9BFD14", VA = "0x9BFD14")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000AD0")]
	[Address(RVA = "0x9BFDFC", Offset = "0x9BFDFC", VA = "0x9BFDFC", Slot = "6")]
	public void ReloadSpecial()
	{
	}

	[Token(Token = "0x6000AD1")]
	[Address(RVA = "0x9BFE08", Offset = "0x9BFE08", VA = "0x9BFE08", Slot = "8")]
	public bool UseSpecial(Vector3 origin, Vector3 direction, Vector3 targetPosition)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AD2")]
	[Address(RVA = "0x9BFED0", Offset = "0x9BFED0", VA = "0x9BFED0", Slot = "9")]
	public void ManageUpdate()
	{
	}

	[Token(Token = "0x6000AD3")]
	[Address(RVA = "0x9C02D8", Offset = "0x9C02D8", VA = "0x9C02D8")]
	public Cloak()
	{
	}
}
[Token(Token = "0x20001AB")]
public class HomingRockets : UnityEngine.MonoBehaviour, ISpecial, IManagedUpdated
{
	[Token(Token = "0x4000AD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float currentAmount;

	[Token(Token = "0x4000AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float MaxAmount;

	[Token(Token = "0x4000AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip[] startSound;

	[Token(Token = "0x4000AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip[] hitSound;

	[Token(Token = "0x4000AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip[] destructibleHitSound;

	[Token(Token = "0x4000ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform[] launchPositions;

	[Token(Token = "0x4000ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ParticleSystem myParticleSystem;

	[Token(Token = "0x4000ADC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ParticleSystem.Particle[] particleArray;

	[Token(Token = "0x4000ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<ParticleCollisionEvent> collisionEvents;

	[Token(Token = "0x4000ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ParticleSystem.EmitParams ep;

	[Token(Token = "0x4000ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Vector3 currentTarget;

	[Token(Token = "0x4000AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	[SerializeField]
	private int hitPower;

	[Token(Token = "0x4000AE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private string HitRPC;

	[Token(Token = "0x4000AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	private LayerMask destructibleLayerMask;

	[Token(Token = "0x4000AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private CharacterControl characterControl;

	[Token(Token = "0x4000AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[SerializeField]
	private float hitRange;

	[Token(Token = "0x4000AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private SpriteRenderer aimPoint;

	[Token(Token = "0x4000AE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Quaternion aimPointRotation;

	[Token(Token = "0x4000AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Vector3 hitOffset;

	[Token(Token = "0x4000AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private bool initialised;

	[Token(Token = "0x17000121")]
	public float GetAmount
	{
		[Token(Token = "0x6000AD7")]
		[Address(RVA = "0x956F20", Offset = "0x956F20", VA = "0x956F20", Slot = "4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000122")]
	public float GetMaxAmount
	{
		[Token(Token = "0x6000AD8")]
		[Address(RVA = "0x956F28", Offset = "0x956F28", VA = "0x956F28", Slot = "5")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000AD4")]
	[Address(RVA = "0x956CD8", Offset = "0x956CD8", VA = "0x956CD8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AD5")]
	[Address(RVA = "0x956D90", Offset = "0x956D90", VA = "0x956D90", Slot = "7")]
	public void Init()
	{
	}

	[Token(Token = "0x6000AD6")]
	[Address(RVA = "0x956EB4", Offset = "0x956EB4", VA = "0x956EB4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000AD9")]
	[Address(RVA = "0x956F30", Offset = "0x956F30", VA = "0x956F30", Slot = "6")]
	public void ReloadSpecial()
	{
	}

	[Token(Token = "0x6000ADA")]
	[Address(RVA = "0x956F3C", Offset = "0x956F3C", VA = "0x956F3C", Slot = "8")]
	public bool UseSpecial(Vector3 origin, Vector3 direction, Vector3 targetPosition)
	{
		return default(bool);
	}

	[Token(Token = "0x6000ADB")]
	[Address(RVA = "0x9572AC", Offset = "0x9572AC", VA = "0x9572AC")]
	public void OnParticleCollision(GameObject other)
	{
	}

	[Token(Token = "0x6000ADC")]
	[Address(RVA = "0x957218", Offset = "0x957218", VA = "0x957218")]
	public void MakeSound(Vector3 position, AudioClip audioClip)
	{
	}

	[Token(Token = "0x6000ADD")]
	[Address(RVA = "0x957588", Offset = "0x957588", VA = "0x957588")]
	private void Hit(GameObject hitObject)
	{
	}

	[Token(Token = "0x6000ADE")]
	[Address(RVA = "0x95772C", Offset = "0x95772C", VA = "0x95772C", Slot = "9")]
	public void ManageUpdate()
	{
	}

	[Token(Token = "0x6000ADF")]
	[Address(RVA = "0x957B98", Offset = "0x957B98", VA = "0x957B98")]
	public HomingRockets()
	{
	}
}
[Token(Token = "0x20001AC")]
public class ShieldSpecial : UnityEngine.MonoBehaviour, ISpecial, IManagedUpdated
{
	[Token(Token = "0x4000AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float currentAmount;

	[Token(Token = "0x4000AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float MaxAmount;

	[Token(Token = "0x4000AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject shield;

	[Token(Token = "0x4000AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private CharacterControl characterControl;

	[Token(Token = "0x17000123")]
	public float GetAmount
	{
		[Token(Token = "0x6000AE3")]
		[Address(RVA = "0x8FACF4", Offset = "0x8FACF4", VA = "0x8FACF4", Slot = "4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000124")]
	public float GetMaxAmount
	{
		[Token(Token = "0x6000AE4")]
		[Address(RVA = "0x8FACFC", Offset = "0x8FACFC", VA = "0x8FACFC", Slot = "5")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000AE0")]
	[Address(RVA = "0x8FABD0", Offset = "0x8FABD0", VA = "0x8FABD0", Slot = "7")]
	public void Init()
	{
	}

	[Token(Token = "0x6000AE1")]
	[Address(RVA = "0x8FABD4", Offset = "0x8FABD4", VA = "0x8FABD4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AE2")]
	[Address(RVA = "0x8FAC88", Offset = "0x8FAC88", VA = "0x8FAC88")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000AE5")]
	[Address(RVA = "0x8FAD04", Offset = "0x8FAD04", VA = "0x8FAD04", Slot = "6")]
	public void ReloadSpecial()
	{
	}

	[Token(Token = "0x6000AE6")]
	[Address(RVA = "0x8FAD10", Offset = "0x8FAD10", VA = "0x8FAD10", Slot = "8")]
	public bool UseSpecial(Vector3 origin, Vector3 direction, Vector3 targetPosition)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AE7")]
	[Address(RVA = "0x8FAE50", Offset = "0x8FAE50", VA = "0x8FAE50", Slot = "9")]
	public void ManageUpdate()
	{
	}

	[Token(Token = "0x6000AE8")]
	[Address(RVA = "0x8FB0E0", Offset = "0x8FB0E0", VA = "0x8FB0E0")]
	public ShieldSpecial()
	{
	}
}
[Token(Token = "0x20001AD")]
public class TimeBomb : UnityEngine.MonoBehaviour, ISpecial, IManagedLateUpdated
{
	[Token(Token = "0x4000AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float currentAmount;

	[Token(Token = "0x4000AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float MaxAmount;

	[Token(Token = "0x4000AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CharacterControl characterControl;

	[Token(Token = "0x4000AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string FireRPC;

	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject overlay;

	[Token(Token = "0x17000125")]
	public float GetAmount
	{
		[Token(Token = "0x6000AEC")]
		[Address(RVA = "0x90A69C", Offset = "0x90A69C", VA = "0x90A69C", Slot = "4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000126")]
	public float GetMaxAmount
	{
		[Token(Token = "0x6000AED")]
		[Address(RVA = "0x90A6A4", Offset = "0x90A6A4", VA = "0x90A6A4", Slot = "5")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000AE9")]
	[Address(RVA = "0x90A580", Offset = "0x90A580", VA = "0x90A580", Slot = "7")]
	public void Init()
	{
	}

	[Token(Token = "0x6000AEA")]
	[Address(RVA = "0x90A584", Offset = "0x90A584", VA = "0x90A584")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AEB")]
	[Address(RVA = "0x90A638", Offset = "0x90A638", VA = "0x90A638")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000AEE")]
	[Address(RVA = "0x90A6AC", Offset = "0x90A6AC", VA = "0x90A6AC", Slot = "6")]
	public void ReloadSpecial()
	{
	}

	[Token(Token = "0x6000AEF")]
	[Address(RVA = "0x90A6B8", Offset = "0x90A6B8", VA = "0x90A6B8", Slot = "8")]
	public bool UseSpecial(Vector3 origin, Vector3 direction, Vector3 targetPosition)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AF0")]
	[Address(RVA = "0x90A93C", Offset = "0x90A93C", VA = "0x90A93C", Slot = "9")]
	public void ManageLateUpdate()
	{
	}

	[Token(Token = "0x6000AF1")]
	[Address(RVA = "0x90AA40", Offset = "0x90AA40", VA = "0x90AA40")]
	public TimeBomb()
	{
	}
}
[Token(Token = "0x20001AE")]
public class SpriteExpandSize : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float maxSize;

	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float speed;

	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float size;

	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SpriteRenderer spriteRenderer;

	[Token(Token = "0x6000AF2")]
	[Address(RVA = "0x8FF674", Offset = "0x8FF674", VA = "0x8FF674")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AF3")]
	[Address(RVA = "0x8FF6CC", Offset = "0x8FF6CC", VA = "0x8FF6CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AF4")]
	[Address(RVA = "0x8FF7D4", Offset = "0x8FF7D4", VA = "0x8FF7D4")]
	public SpriteExpandSize()
	{
	}
}
[Token(Token = "0x20001AF")]
public class StageButtonUnlock : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6E53AC", Offset = "0x6E53AC")]
	[SerializeField]
	private int stage;

	[Token(Token = "0x6000AF5")]
	[Address(RVA = "0x8FF90C", Offset = "0x8FF90C", VA = "0x8FF90C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AF6")]
	[Address(RVA = "0x8FFA2C", Offset = "0x8FFA2C", VA = "0x8FFA2C")]
	public StageButtonUnlock()
	{
	}
}
[Token(Token = "0x20001B0")]
public class StageLighting : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E53EC", Offset = "0x6E53EC")]
	[SerializeField]
	private Color envColor;

	[Token(Token = "0x4000AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float envLightBoost;

	[Token(Token = "0x4000AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private Color lightsColor;

	[Token(Token = "0x4000AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float lightBoost;

	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Texture nightSkybox;

	[Token(Token = "0x4000AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Texture nightSkyboxRift;

	[Token(Token = "0x4000AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Texture nightLightMapRift;

	[Token(Token = "0x4000AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E5498", Offset = "0x6E5498")]
	[SerializeField]
	private Color envColorN;

	[Token(Token = "0x4000AFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private float envLightBoostN;

	[Token(Token = "0x4000B00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[SerializeField]
	private Color lightsColorN;

	[Token(Token = "0x4000B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[SerializeField]
	private float lightBoostN;

	[Token(Token = "0x4000B02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private bool debugNightMode;

	[Token(Token = "0x4000B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	[SerializeField]
	private bool city;

	[Token(Token = "0x4000B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Texture daySkybox;

	[Token(Token = "0x4000B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private Texture daySkyboxRift;

	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private Texture dayLightMapRift;

	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private bool lowPassSoundFilter;

	[Token(Token = "0x4000B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static StageLighting instance;

	[Token(Token = "0x6000AF7")]
	[Address(RVA = "0x8FFA34", Offset = "0x8FFA34", VA = "0x8FFA34")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AF8")]
	[Address(RVA = "0x8FFEF4", Offset = "0x8FFEF4", VA = "0x8FFEF4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000AF9")]
	[Address(RVA = "0x8FFADC", Offset = "0x8FFADC", VA = "0x8FFADC")]
	public void SetEnv()
	{
	}

	[Token(Token = "0x6000AFA")]
	[Address(RVA = "0x8FFF6C", Offset = "0x8FFF6C", VA = "0x8FFF6C")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000AFB")]
	[Address(RVA = "0x8FFF70", Offset = "0x8FFF70", VA = "0x8FFF70")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000AFC")]
	[Address(RVA = "0x8FFFD0", Offset = "0x8FFFD0", VA = "0x8FFFD0")]
	public StageLighting()
	{
	}
}
[Token(Token = "0x20001B1")]
public class StageObjectiveUpdate : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6E5574", Offset = "0x6E5574")]
	[SerializeField]
	private int stage;

	[Token(Token = "0x4000B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6E55B4", Offset = "0x6E55B4")]
	[SerializeField]
	private int day;

	[Token(Token = "0x4000B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6E55F4", Offset = "0x6E55F4")]
	[SerializeField]
	private int night;

	[Token(Token = "0x4000B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x6E5634", Offset = "0x6E5634")]
	public string dayEnglish;

	[Token(Token = "0x4000B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x6E564C", Offset = "0x6E564C")]
	public string nightEnglish;

	[Token(Token = "0x4000B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private bool displayObjectiveText;

	[Token(Token = "0x4000B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private CampaignTrigger firstObjective;

	[Token(Token = "0x4000B10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private VideoClip videoClip;

	[Token(Token = "0x4000B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Language language;

	[Token(Token = "0x6000AFD")]
	[Address(RVA = "0x900048", Offset = "0x900048", VA = "0x900048")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AFE")]
	[Address(RVA = "0x900148", Offset = "0x900148", VA = "0x900148")]
	private void UpdateText()
	{
	}

	[Token(Token = "0x6000AFF")]
	[Address(RVA = "0x90038C", Offset = "0x90038C", VA = "0x90038C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000B00")]
	[Address(RVA = "0x900400", Offset = "0x900400", VA = "0x900400")]
	public StageObjectiveUpdate()
	{
	}
}
[Token(Token = "0x20001B2")]
public class StartGameObjectiveUpdate : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x6E56A4", Offset = "0x6E56A4")]
	private string campaignWaitingForMaster;

	[Token(Token = "0x4000B13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x6E56E4", Offset = "0x6E56E4")]
	private string versusWaitingForGameStart;

	[Token(Token = "0x4000B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x6E5724", Offset = "0x6E5724")]
	private string waveWaitingForGameStart;

	[Token(Token = "0x4000B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private LanguageString campaignString;

	[Token(Token = "0x4000B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private LanguageString versusString;

	[Token(Token = "0x4000B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private LanguageString surivalString;

	[Token(Token = "0x6000B01")]
	[Address(RVA = "0x900458", Offset = "0x900458", VA = "0x900458")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B02")]
	[Address(RVA = "0x900560", Offset = "0x900560", VA = "0x900560")]
	public StartGameObjectiveUpdate()
	{
	}
}
[Token(Token = "0x20001B3")]
public class SwitchLanguage : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20003E5")]
	public enum Lang
	{
		[Token(Token = "0x40013C2")]
		EN,
		[Token(Token = "0x40013C3")]
		JP,
		[Token(Token = "0x40013C4")]
		FR,
		[Token(Token = "0x40013C5")]
		GE,
		[Token(Token = "0x40013C6")]
		ES,
		[Token(Token = "0x40013C7")]
		IT,
		[Token(Token = "0x40013C8")]
		NL,
		[Token(Token = "0x40013C9")]
		PO,
		[Token(Token = "0x40013CA")]
		RU,
		[Token(Token = "0x40013CB")]
		TW,
		[Token(Token = "0x40013CC")]
		CN,
		[Token(Token = "0x40013CD")]
		KO
	}

	[Token(Token = "0x4000B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Lang lang;

	[Token(Token = "0x6000B03")]
	[Address(RVA = "0x901CB4", Offset = "0x901CB4", VA = "0x901CB4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B04")]
	[Address(RVA = "0x901FB8", Offset = "0x901FB8", VA = "0x901FB8")]
	public SwitchLanguage()
	{
	}
}
[Token(Token = "0x20001B4")]
public class SyncImage : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Image parentImage;

	[Token(Token = "0x6000B06")]
	[Address(RVA = "0x901FC4", Offset = "0x901FC4", VA = "0x901FC4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B07")]
	[Address(RVA = "0x902030", Offset = "0x902030", VA = "0x902030")]
	public SyncImage()
	{
	}
}
[Token(Token = "0x20001B5")]
public class TMP_Lang : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string japaneseText;

	[Token(Token = "0x4000B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LanguageString stringFile;

	[Token(Token = "0x6000B08")]
	[Address(RVA = "0x9021AC", Offset = "0x9021AC", VA = "0x9021AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B09")]
	[Address(RVA = "0x90222C", Offset = "0x90222C", VA = "0x90222C")]
	public TMP_Lang()
	{
	}
}
[Token(Token = "0x20001B6")]
public class TMPfps : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000B1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TMP_Text tmpText;

	[Token(Token = "0x4000B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private DateTime _lastTime;

	[Token(Token = "0x4000B1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int _framesRendered;

	[Token(Token = "0x4000B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _fps;

	[Token(Token = "0x4000B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastUnderLimit;

	[Token(Token = "0x4000B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool showFPS;

	[Token(Token = "0x4000B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool OculusQuest;

	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool showLayers;

	[Token(Token = "0x4000B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float highfps;

	[Token(Token = "0x4000B25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float medfps;

	[Token(Token = "0x4000B26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	public static bool thirtyFpsMode;

	[Token(Token = "0x4000B27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Renderer tmp_renderer;

	[Token(Token = "0x4000B28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform positionTransform;

	[Token(Token = "0x4000B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int triCount;

	[Token(Token = "0x4000B2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int vertCount;

	[Token(Token = "0x17000127")]
	private bool IsOculusQuest
	{
		[Token(Token = "0x6000B0B")]
		[Address(RVA = "0x902544", Offset = "0x902544", VA = "0x902544")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000B0A")]
	[Address(RVA = "0x902284", Offset = "0x902284", VA = "0x902284")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B0C")]
	[Address(RVA = "0x902598", Offset = "0x902598", VA = "0x902598")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000B0D")]
	[Address(RVA = "0x903658", Offset = "0x903658", VA = "0x903658")]
	public TMPfps()
	{
	}
}
[Token(Token = "0x20001B7")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6E1280", Offset = "0x6E1280")]
public class Teleport : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20003E6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E1BE4", Offset = "0x6E1BE4")]
	private sealed class <TeleportPlayer>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CharacterControl characterControl;

		[Token(Token = "0x40013D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Teleport <>4__this;

		[Token(Token = "0x40013D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <counter>5__2;

		[Token(Token = "0x1700026A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001898")]
			[Address(RVA = "0x904020", Offset = "0x904020", VA = "0x904020", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600189A")]
			[Address(RVA = "0x904088", Offset = "0x904088", VA = "0x904088", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001895")]
		[Address(RVA = "0x903BD0", Offset = "0x903BD0", VA = "0x903BD0")]
		[DebuggerHidden]
		public <TeleportPlayer>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6001896")]
		[Address(RVA = "0x903C88", Offset = "0x903C88", VA = "0x903C88", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001897")]
		[Address(RVA = "0x903C8C", Offset = "0x903C8C", VA = "0x903C8C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001899")]
		[Address(RVA = "0x904028", Offset = "0x904028", VA = "0x904028", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool allowSpawnPositonUpdate;

	[Token(Token = "0x4000B2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool disableSpawnPositonUpdate;

	[Token(Token = "0x4000B2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform target;

	[Token(Token = "0x4000B2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool exitTrigger;

	[Token(Token = "0x4000B2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static List<CharacterControl> characterControls;

	[Token(Token = "0x6000B0F")]
	[Address(RVA = "0x903938", Offset = "0x903938", VA = "0x903938")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B10")]
	[Address(RVA = "0x9039C4", Offset = "0x9039C4", VA = "0x9039C4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B11")]
	[Address(RVA = "0x903A30", Offset = "0x903A30", VA = "0x903A30")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000B12")]
	[Address(RVA = "0x903B54", Offset = "0x903B54", VA = "0x903B54")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6ED25C", Offset = "0x6ED25C")]
	private IEnumerator TeleportPlayer(CharacterControl characterControl)
	{
		return null;
	}

	[Token(Token = "0x6000B13")]
	[Address(RVA = "0x903BFC", Offset = "0x903BFC", VA = "0x903BFC")]
	public Teleport()
	{
	}
}
[Token(Token = "0x20001B8")]
public class TestEvent : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent unityEvent;

	[Token(Token = "0x6000B15")]
	[Address(RVA = "0x908258", Offset = "0x908258", VA = "0x908258")]
	public void RunEvent()
	{
	}

	[Token(Token = "0x6000B16")]
	[Address(RVA = "0x908274", Offset = "0x908274", VA = "0x908274")]
	public TestEvent()
	{
	}
}
[Token(Token = "0x20001B9")]
[ExecuteInEditMode]
public class DebugGameSetup : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameSetup.Platform platform;

	[Token(Token = "0x4000B32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private bool DebugMode;

	[Token(Token = "0x4000B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[SerializeField]
	private bool inAppPurchase;

	[Token(Token = "0x4000B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject touchObjects;

	[Token(Token = "0x4000B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject gearVRObjects;

	[Token(Token = "0x4000B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject oculusObjects;

	[Token(Token = "0x4000B37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject switchObjects;

	[Token(Token = "0x4000B38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Material shadowMaterial;

	[Token(Token = "0x4000B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Color oculusColorTint;

	[Token(Token = "0x4000B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Color iOSColorTint;

	[Token(Token = "0x6000B17")]
	[Address(RVA = "0x972A50", Offset = "0x972A50", VA = "0x972A50")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B18")]
	[Address(RVA = "0x972E70", Offset = "0x972E70", VA = "0x972E70")]
	public DebugGameSetup()
	{
	}
}
[Token(Token = "0x20001BA")]
[ExecuteInEditMode]
public class EventTester : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent unityEvent;

	[Token(Token = "0x6000B19")]
	[Address(RVA = "0x97C09C", Offset = "0x97C09C", VA = "0x97C09C")]
	public void TestEvent()
	{
	}

	[Token(Token = "0x6000B1A")]
	[Address(RVA = "0x97C0B0", Offset = "0x97C0B0", VA = "0x97C0B0")]
	public EventTester()
	{
	}
}
[Token(Token = "0x20001BB")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6E1304", Offset = "0x6E1304")]
public class ParticleSpawnerTester : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform origin;

	[Token(Token = "0x4000B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 direction;

	[Token(Token = "0x4000B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IProjectile projectile;

	[Token(Token = "0x6000B1B")]
	[Address(RVA = "0xA2697C", Offset = "0xA2697C", VA = "0xA2697C")]
	public void Test()
	{
	}

	[Token(Token = "0x6000B1C")]
	[Address(RVA = "0xA26AD8", Offset = "0xA26AD8", VA = "0xA26AD8")]
	public ParticleSpawnerTester()
	{
	}
}
[Token(Token = "0x20001BC")]
public class TouchDynamicCamera : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MenuController menuController;

	[Token(Token = "0x4000B40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private CameraFollowPlayer cameraFollowPlayer;

	[Token(Token = "0x4000B41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float introFov;

	[Token(Token = "0x4000B42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E58B4", Offset = "0x6E58B4")]
	[SerializeField]
	private Vector3 menuRotation;

	[Token(Token = "0x4000B43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float menuFov;

	[Token(Token = "0x4000B44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E5910", Offset = "0x6E5910")]
	[SerializeField]
	private Vector3 pauseRotation;

	[Token(Token = "0x4000B45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float pauseFov;

	[Token(Token = "0x4000B46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E596C", Offset = "0x6E596C")]
	[SerializeField]
	private Vector3 pauseDownRotation;

	[Token(Token = "0x4000B47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private float pauseDownFov;

	[Token(Token = "0x4000B48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E59C8", Offset = "0x6E59C8")]
	[SerializeField]
	private Vector3 fireRotation;

	[Token(Token = "0x4000B49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private float fireFov;

	[Token(Token = "0x4000B4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E5A24", Offset = "0x6E5A24")]
	[SerializeField]
	private Vector3 walkingRotation;

	[Token(Token = "0x4000B4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private float walkingFov;

	[Token(Token = "0x4000B4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E5A80", Offset = "0x6E5A80")]
	[SerializeField]
	private Vector3 zoomRotation;

	[Token(Token = "0x4000B4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private float zoomFov;

	[Token(Token = "0x4000B4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Quaternion targetRotation;

	[Token(Token = "0x4000B4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float targetFov;

	[Token(Token = "0x4000B50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private CharacterControl characterControl;

	[Token(Token = "0x4000B51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float addedFovForNonTablet;

	[Token(Token = "0x4000B52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public AimIcon aimIcon;

	[Token(Token = "0x4000B53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool deadMode;

	[Token(Token = "0x4000B54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[SerializeField]
	private Vector3 rotationRate;

	[Token(Token = "0x4000B55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private float rotateFactor;

	[Token(Token = "0x4000B56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[SerializeField]
	private Vector3 rotationRateLerped;

	[Token(Token = "0x4000B57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private Vector3 offsetOrientation;

	[Token(Token = "0x4000B58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Camera thisCamera;

	[Token(Token = "0x4000B59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float tiltShiftOffset;

	[Token(Token = "0x4000B5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private TiltShift tiltShift;

	[Token(Token = "0x4000B5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private float tiltshiftDown;

	[Token(Token = "0x4000B5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	[SerializeField]
	private float tiltshiftUp;

	[Token(Token = "0x4000B5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static bool lookDown;

	[Token(Token = "0x6000B1D")]
	[Address(RVA = "0x90BB90", Offset = "0x90BB90", VA = "0x90BB90")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0x90BC48", Offset = "0x90BC48", VA = "0x90BC48")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B1F")]
	[Address(RVA = "0x90BD00", Offset = "0x90BD00", VA = "0x90BD00")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B20")]
	[Address(RVA = "0x90BDAC", Offset = "0x90BDAC", VA = "0x90BDAC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000B21")]
	[Address(RVA = "0x90C578", Offset = "0x90C578", VA = "0x90C578")]
	private void ChangeMenu()
	{
	}

	[Token(Token = "0x6000B22")]
	[Address(RVA = "0x90C9C4", Offset = "0x90C9C4", VA = "0x90C9C4")]
	private void DeadMode()
	{
	}

	[Token(Token = "0x6000B23")]
	[Address(RVA = "0x90CA40", Offset = "0x90CA40", VA = "0x90CA40")]
	private void DeadModeDelay()
	{
	}

	[Token(Token = "0x6000B24")]
	[Address(RVA = "0x90C61C", Offset = "0x90C61C", VA = "0x90C61C")]
	private void PauseMode()
	{
	}

	[Token(Token = "0x6000B25")]
	[Address(RVA = "0x90CB40", Offset = "0x90CB40", VA = "0x90CB40")]
	public void LookUpDown()
	{
	}

	[Token(Token = "0x6000B26")]
	[Address(RVA = "0x90C754", Offset = "0x90C754", VA = "0x90C754")]
	private void IntroMode()
	{
	}

	[Token(Token = "0x6000B27")]
	[Address(RVA = "0x90C88C", Offset = "0x90C88C", VA = "0x90C88C")]
	private void MenuMode()
	{
	}

	[Token(Token = "0x6000B28")]
	[Address(RVA = "0x90C308", Offset = "0x90C308", VA = "0x90C308")]
	private void GamePlayFiringMode()
	{
	}

	[Token(Token = "0x6000B29")]
	[Address(RVA = "0x90C440", Offset = "0x90C440", VA = "0x90C440")]
	private void GamePlayWalkingMode()
	{
	}

	[Token(Token = "0x6000B2A")]
	[Address(RVA = "0x90CCC0", Offset = "0x90CCC0", VA = "0x90CCC0")]
	public TouchDynamicCamera()
	{
	}
}
[Token(Token = "0x20001BD")]
public class TouchPlayerInfo : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000B5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TextMeshProUGUI tmp;

	[Token(Token = "0x4000B5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string header;

	[Token(Token = "0x6000B2C")]
	[Address(RVA = "0xAB8744", Offset = "0xAB8744", VA = "0xAB8744")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B2D")]
	[Address(RVA = "0xAB879C", Offset = "0xAB879C", VA = "0xAB879C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B2E")]
	[Address(RVA = "0xAB9078", Offset = "0xAB9078", VA = "0xAB9078")]
	private void OnPhotonCustomRoomPropertiesChanged(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
	{
	}

	[Token(Token = "0x6000B2F")]
	[Address(RVA = "0xAB87D4", Offset = "0xAB87D4", VA = "0xAB87D4")]
	private void UpdatePlayerInfo()
	{
	}

	[Token(Token = "0x6000B30")]
	[Address(RVA = "0xAB907C", Offset = "0xAB907C", VA = "0xAB907C")]
	public TouchPlayerInfo()
	{
	}
}
[Token(Token = "0x20001BE")]
public class VRControlButtons : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000B60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool rotateLeft;

	[Token(Token = "0x4000B61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool rotateRight;

	[Token(Token = "0x4000B62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	public static bool reload;

	[Token(Token = "0x4000B63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CustomButton customButton;

	[Token(Token = "0x6000B31")]
	[Address(RVA = "0xABDCAC", Offset = "0xABDCAC", VA = "0xABDCAC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B32")]
	[Address(RVA = "0xABDDB0", Offset = "0xABDDB0", VA = "0xABDDB0")]
	public void RotateLeft()
	{
	}

	[Token(Token = "0x6000B33")]
	[Address(RVA = "0xABDE78", Offset = "0xABDE78", VA = "0xABDE78")]
	public void RotateRight()
	{
	}

	[Token(Token = "0x6000B34")]
	[Address(RVA = "0xABDF40", Offset = "0xABDF40", VA = "0xABDF40")]
	public void Reload()
	{
	}

	[Token(Token = "0x6000B35")]
	[Address(RVA = "0xABE008", Offset = "0xABE008", VA = "0xABE008")]
	public VRControlButtons()
	{
	}
}
[Token(Token = "0x20001BF")]
public class WaterBobAnimate : UnityEngine.MonoBehaviour, IManagedUpdated
{
	[Token(Token = "0x4000B64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 position;

	[Token(Token = "0x4000B65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6E5B4C", Offset = "0x6E5B4C")]
	[SerializeField]
	private float amount;

	[Token(Token = "0x4000B66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float offset;

	[Token(Token = "0x6000B37")]
	[Address(RVA = "0xAC083C", Offset = "0xAC083C", VA = "0xAC083C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B38")]
	[Address(RVA = "0xAC0930", Offset = "0xAC0930", VA = "0xAC0930")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B39")]
	[Address(RVA = "0xAC0994", Offset = "0xAC0994", VA = "0xAC0994", Slot = "4")]
	public void ManageUpdate()
	{
	}

	[Token(Token = "0x6000B3A")]
	[Address(RVA = "0xAC0A8C", Offset = "0xAC0A8C", VA = "0xAC0A8C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B3B")]
	[Address(RVA = "0xAC0ACC", Offset = "0xAC0ACC", VA = "0xAC0ACC")]
	public WaterBobAnimate()
	{
	}
}
[Token(Token = "0x20001C0")]
[ExecuteInEditMode]
public class WaterLevel : UnityEngine.MonoBehaviour, IManagedUpdated
{
	[Token(Token = "0x4000B67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string _WaterLevel;

	[Token(Token = "0x4000B68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string _WaterXSpeed;

	[Token(Token = "0x4000B69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string _WaterYSpeed;

	[Token(Token = "0x4000B6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float waterLevel;

	[Token(Token = "0x4000B6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static WaterLevel instance;

	[Token(Token = "0x4000B6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool alwaysLarge;

	[Token(Token = "0x4000B6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 position;

	[Token(Token = "0x4000B6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6E5B9C", Offset = "0x6E5B9C")]
	[SerializeField]
	private float amount;

	[Token(Token = "0x4000B6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float offset;

	[Token(Token = "0x4000B70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float _WaterX;

	[Token(Token = "0x4000B71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private float _WaterY;

	[Token(Token = "0x6000B3C")]
	[Address(RVA = "0xAC0ADC", Offset = "0xAC0ADC", VA = "0xAC0ADC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0xAC0D84", Offset = "0xAC0D84", VA = "0xAC0D84")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B3E")]
	[Address(RVA = "0xAC0E2C", Offset = "0xAC0E2C", VA = "0xAC0E2C")]
	public void ResetSize()
	{
	}

	[Token(Token = "0x6000B3F")]
	[Address(RVA = "0xAC0BB8", Offset = "0xAC0BB8", VA = "0xAC0BB8", Slot = "4")]
	public void ManageUpdate()
	{
	}

	[Token(Token = "0x6000B40")]
	[Address(RVA = "0xAC0EF0", Offset = "0xAC0EF0", VA = "0xAC0EF0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B41")]
	[Address(RVA = "0xAC0F48", Offset = "0xAC0F48", VA = "0xAC0F48")]
	public WaterLevel()
	{
	}
}
[Token(Token = "0x20001C1")]
public class WaterSoundFX : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000B72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioSource waterSound;

	[Token(Token = "0x4000B73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioSource citySound;

	[Token(Token = "0x4000B74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioSource forestSound;

	[Token(Token = "0x4000B75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private CameraFollowPlayer cameraFollowPlayer;

	[Token(Token = "0x4000B76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool city;

	[Token(Token = "0x4000B77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float transitionSpeed;

	[Token(Token = "0x4000B78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6E5C4C", Offset = "0x6E5C4C")]
	private float cityMaxVolume;

	[Token(Token = "0x4000B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6E5C8C", Offset = "0x6E5C8C")]
	private float forestMaxVolume;

	[Token(Token = "0x4000B7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static WaterSoundFX instance;

	[Token(Token = "0x6000B42")]
	[Address(RVA = "0xAC0FD4", Offset = "0xAC0FD4", VA = "0xAC0FD4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B43")]
	[Address(RVA = "0xAC1028", Offset = "0xAC1028", VA = "0xAC1028")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B44")]
	[Address(RVA = "0xAC1378", Offset = "0xAC1378", VA = "0xAC1378")]
	public WaterSoundFX()
	{
	}
}
[Token(Token = "0x20001C2")]
public class WeaponsButtonUnlock : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000B7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6E5CCC", Offset = "0x6E5CCC")]
	[SerializeField]
	private int weapon;

	[Token(Token = "0x6000B45")]
	[Address(RVA = "0xAC1390", Offset = "0xAC1390", VA = "0xAC1390")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B46")]
	[Address(RVA = "0xAC152C", Offset = "0xAC152C", VA = "0xAC152C")]
	public WeaponsButtonUnlock()
	{
	}
}
[Token(Token = "0x20001C3")]
public class avatarTextureUi : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int index;

	[Token(Token = "0x4000B7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RawImage rawImage;

	[Token(Token = "0x6000B47")]
	[Address(RVA = "0xAC2348", Offset = "0xAC2348", VA = "0xAC2348")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B48")]
	[Address(RVA = "0xAC23A0", Offset = "0xAC23A0", VA = "0xAC23A0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B49")]
	[Address(RVA = "0xAC248C", Offset = "0xAC248C", VA = "0xAC248C")]
	public avatarTextureUi()
	{
	}
}
[Token(Token = "0x20001C4")]
public class culledRenderObject : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000B7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float extent;

	[Token(Token = "0x4000B7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 center;

	[Token(Token = "0x4000B80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool moveObject;

	[Token(Token = "0x4000B81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Renderer[] renderersToCheck;

	[Token(Token = "0x4000B82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool visible;

	[Token(Token = "0x6000B4A")]
	[Address(RVA = "0xAC279C", Offset = "0xAC279C", VA = "0xAC279C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B4B")]
	[Address(RVA = "0xAC296C", Offset = "0xAC296C", VA = "0xAC296C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000B4C")]
	[Address(RVA = "0xAC29F0", Offset = "0xAC29F0", VA = "0xAC29F0")]
	public void OverrideVisible(bool isVisible)
	{
	}

	[Token(Token = "0x6000B4D")]
	[Address(RVA = "0xAC2A6C", Offset = "0xAC2A6C", VA = "0xAC2A6C")]
	public void UpdateVisibility(float distance)
	{
	}

	[Token(Token = "0x6000B4E")]
	[Address(RVA = "0xAC2C08", Offset = "0xAC2C08", VA = "0xAC2C08")]
	public culledRenderObject()
	{
	}
}
[Token(Token = "0x20001C5")]
public class ovrBackButtonEvent : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private UnityEvent eventToRun;

	[Token(Token = "0x4000B84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool activateLooseFocus;

	[Token(Token = "0x6000B4F")]
	[Address(RVA = "0xAC6184", Offset = "0xAC6184", VA = "0xAC6184")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B50")]
	[Address(RVA = "0xAC62B8", Offset = "0xAC62B8", VA = "0xAC62B8")]
	public ovrBackButtonEvent()
	{
	}
}
[Token(Token = "0x20001C6")]
public class playerHolder : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Image playerImage;

	[Token(Token = "0x4000B86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TextMeshProUGUI tmp;

	[Token(Token = "0x6000B51")]
	[Address(RVA = "0xAC62C0", Offset = "0xAC62C0", VA = "0xAC62C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B52")]
	[Address(RVA = "0xAC6350", Offset = "0xAC6350", VA = "0xAC6350")]
	public void UpdateDetails(string name, int score, int lives)
	{
	}

	[Token(Token = "0x6000B53")]
	[Address(RVA = "0xAC6908", Offset = "0xAC6908", VA = "0xAC6908")]
	public playerHolder()
	{
	}
}
[Token(Token = "0x20001C7")]
public class Canon : UnityEngine.MonoBehaviour, IWeapon
{
	[Token(Token = "0x4000B87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string weaponName;

	[Token(Token = "0x4000B88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float fireInterval;

	[Token(Token = "0x4000B89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float reloadTime;

	[Token(Token = "0x4000B8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float ammo;

	[Token(Token = "0x4000B8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip reloadSound;

	[Token(Token = "0x4000B8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float maxAmmo;

	[Token(Token = "0x4000B8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string ReloadStr;

	[Token(Token = "0x4000B8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool reloading;

	[Token(Token = "0x4000B8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float lastFireTime;

	[Token(Token = "0x4000B90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private SpriteRenderer muzzle;

	[Token(Token = "0x4000B91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string HideMuzzleStr;

	[Token(Token = "0x4000B92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int handicap;

	[Token(Token = "0x4000B93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private WeaponParams wp;

	[Token(Token = "0x17000128")]
	public float GetAmmo
	{
		[Token(Token = "0x6000B54")]
		[Address(RVA = "0x9B2654", Offset = "0x9B2654", VA = "0x9B2654", Slot = "5")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000129")]
	public float GetMaxAmmo
	{
		[Token(Token = "0x6000B55")]
		[Address(RVA = "0x9B265C", Offset = "0x9B265C", VA = "0x9B265C", Slot = "7")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700012A")]
	public int SetHandicap
	{
		[Token(Token = "0x6000B56")]
		[Address(RVA = "0x9B2664", Offset = "0x9B2664", VA = "0x9B2664", Slot = "6")]
		set
		{
		}
	}

	[Token(Token = "0x6000B57")]
	[Address(RVA = "0x9B266C", Offset = "0x9B266C", VA = "0x9B266C", Slot = "10")]
	public void ReloadWeapon()
	{
	}

	[Token(Token = "0x6000B58")]
	[Address(RVA = "0x9B2714", Offset = "0x9B2714", VA = "0x9B2714", Slot = "11")]
	public bool FireWeapon(Vector3 origin, Vector3 direction)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B59")]
	[Address(RVA = "0x9B29AC", Offset = "0x9B29AC", VA = "0x9B29AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B5A")]
	[Address(RVA = "0x9B2A24", Offset = "0x9B2A24", VA = "0x9B2A24")]
	private void HideMuzzle()
	{
	}

	[Token(Token = "0x6000B5B")]
	[Address(RVA = "0x9B2A44", Offset = "0x9B2A44", VA = "0x9B2A44")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B5C")]
	[Address(RVA = "0x9B2A70", Offset = "0x9B2A70", VA = "0x9B2A70")]
	private void Reload()
	{
	}

	[Token(Token = "0x6000B5D")]
	[Address(RVA = "0x9B2A80", Offset = "0x9B2A80", VA = "0x9B2A80", Slot = "4")]
	public WeaponParams GetParams()
	{
		return null;
	}

	[Token(Token = "0x6000B5E")]
	[Address(RVA = "0x9B2AE8", Offset = "0x9B2AE8", VA = "0x9B2AE8", Slot = "9")]
	public Vector3 GetPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000B5F")]
	[Address(RVA = "0x9B2B0C", Offset = "0x9B2B0C", VA = "0x9B2B0C", Slot = "8")]
	public bool GetReloading()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B60")]
	[Address(RVA = "0x9B2B14", Offset = "0x9B2B14", VA = "0x9B2B14")]
	public Canon()
	{
	}
}
[Token(Token = "0x20001C8")]
public class Flame : UnityEngine.MonoBehaviour, IWeapon
{
	[Token(Token = "0x4000B94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string weaponName;

	[Token(Token = "0x4000B95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float fireInterval;

	[Token(Token = "0x4000B96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float reloadTime;

	[Token(Token = "0x4000B97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float ammo;

	[Token(Token = "0x4000B98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float maxAmmo;

	[Token(Token = "0x4000B99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string ReloadStr;

	[Token(Token = "0x4000B9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool reloading;

	[Token(Token = "0x4000B9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float lastFireTime;

	[Token(Token = "0x4000B9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private SpriteRenderer muzzle;

	[Token(Token = "0x4000B9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string HideMuzzleStr;

	[Token(Token = "0x4000B9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int handicap;

	[Token(Token = "0x4000B9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private WeaponParams wp;

	[Token(Token = "0x1700012B")]
	public float GetAmmo
	{
		[Token(Token = "0x6000B61")]
		[Address(RVA = "0x984228", Offset = "0x984228", VA = "0x984228", Slot = "5")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700012C")]
	public float GetMaxAmmo
	{
		[Token(Token = "0x6000B62")]
		[Address(RVA = "0x984230", Offset = "0x984230", VA = "0x984230", Slot = "7")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700012D")]
	public int SetHandicap
	{
		[Token(Token = "0x6000B63")]
		[Address(RVA = "0x984238", Offset = "0x984238", VA = "0x984238", Slot = "6")]
		set
		{
		}
	}

	[Token(Token = "0x6000B64")]
	[Address(RVA = "0x984240", Offset = "0x984240", VA = "0x984240", Slot = "10")]
	public void ReloadWeapon()
	{
	}

	[Token(Token = "0x6000B65")]
	[Address(RVA = "0x98425C", Offset = "0x98425C", VA = "0x98425C", Slot = "11")]
	public bool FireWeapon(Vector3 origin, Vector3 direction)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B66")]
	[Address(RVA = "0x9844F4", Offset = "0x9844F4", VA = "0x9844F4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B67")]
	[Address(RVA = "0x98456C", Offset = "0x98456C", VA = "0x98456C")]
	private void HideMuzzle()
	{
	}

	[Token(Token = "0x6000B68")]
	[Address(RVA = "0x98458C", Offset = "0x98458C", VA = "0x98458C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B69")]
	[Address(RVA = "0x9845B8", Offset = "0x9845B8", VA = "0x9845B8")]
	private void Reload()
	{
	}

	[Token(Token = "0x6000B6A")]
	[Address(RVA = "0x9845C8", Offset = "0x9845C8", VA = "0x9845C8", Slot = "4")]
	public WeaponParams GetParams()
	{
		return null;
	}

	[Token(Token = "0x6000B6B")]
	[Address(RVA = "0x984630", Offset = "0x984630", VA = "0x984630", Slot = "9")]
	public Vector3 GetPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000B6C")]
	[Address(RVA = "0x984654", Offset = "0x984654", VA = "0x984654", Slot = "8")]
	public bool GetReloading()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B6D")]
	[Address(RVA = "0x98465C", Offset = "0x98465C", VA = "0x98465C")]
	public Flame()
	{
	}
}
[Token(Token = "0x20001C9")]
public class Laser : UnityEngine.MonoBehaviour, IWeapon
{
	[Token(Token = "0x4000BA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string weaponName;

	[Token(Token = "0x4000BA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float fireInterval;

	[Token(Token = "0x4000BA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float reloadTime;

	[Token(Token = "0x4000BA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float reloadTime2;

	[Token(Token = "0x4000BA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float ammo;

	[Token(Token = "0x4000BA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float reloadSpeed;

	[Token(Token = "0x4000BA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip overheatSoundd;

	[Token(Token = "0x4000BA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float maxAmmo;

	[Token(Token = "0x4000BA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string ReloadStr;

	[Token(Token = "0x4000BA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool reloading;

	[Token(Token = "0x4000BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float lastFireTime;

	[Token(Token = "0x4000BAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private SpriteRenderer muzzle;

	[Token(Token = "0x4000BAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string HideMuzzleStr;

	[Token(Token = "0x4000BAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int handicap;

	[Token(Token = "0x4000BAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private WeaponParams wp;

	[Token(Token = "0x1700012E")]
	public float GetAmmo
	{
		[Token(Token = "0x6000B6E")]
		[Address(RVA = "0x962060", Offset = "0x962060", VA = "0x962060", Slot = "5")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700012F")]
	public float GetMaxAmmo
	{
		[Token(Token = "0x6000B6F")]
		[Address(RVA = "0x962068", Offset = "0x962068", VA = "0x962068", Slot = "7")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000130")]
	public int SetHandicap
	{
		[Token(Token = "0x6000B70")]
		[Address(RVA = "0x962070", Offset = "0x962070", VA = "0x962070", Slot = "6")]
		set
		{
		}
	}

	[Token(Token = "0x6000B71")]
	[Address(RVA = "0x962078", Offset = "0x962078", VA = "0x962078", Slot = "10")]
	public void ReloadWeapon()
	{
	}

	[Token(Token = "0x6000B72")]
	[Address(RVA = "0x962128", Offset = "0x962128", VA = "0x962128", Slot = "11")]
	public bool FireWeapon(Vector3 origin, Vector3 direction)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B73")]
	[Address(RVA = "0x9623C0", Offset = "0x9623C0", VA = "0x9623C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B74")]
	[Address(RVA = "0x9624A8", Offset = "0x9624A8", VA = "0x9624A8")]
	private void HideMuzzle()
	{
	}

	[Token(Token = "0x6000B75")]
	[Address(RVA = "0x9624C8", Offset = "0x9624C8", VA = "0x9624C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B76")]
	[Address(RVA = "0x9624F4", Offset = "0x9624F4", VA = "0x9624F4")]
	private void Reload()
	{
	}

	[Token(Token = "0x6000B77")]
	[Address(RVA = "0x962504", Offset = "0x962504", VA = "0x962504", Slot = "4")]
	public WeaponParams GetParams()
	{
		return null;
	}

	[Token(Token = "0x6000B78")]
	[Address(RVA = "0x96256C", Offset = "0x96256C", VA = "0x96256C", Slot = "9")]
	public Vector3 GetPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000B79")]
	[Address(RVA = "0x962590", Offset = "0x962590", VA = "0x962590", Slot = "8")]
	public bool GetReloading()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B7A")]
	[Address(RVA = "0x962598", Offset = "0x962598", VA = "0x962598")]
	public Laser()
	{
	}
}
[Token(Token = "0x20001CA")]
public class MissileLauncher : UnityEngine.MonoBehaviour, IWeapon
{
	[Token(Token = "0x4000BAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string weaponName;

	[Token(Token = "0x4000BB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float fireInterval;

	[Token(Token = "0x4000BB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float reloadTime;

	[Token(Token = "0x4000BB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float ammo;

	[Token(Token = "0x4000BB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float maxAmmo;

	[Token(Token = "0x4000BB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string FireRPC;

	[Token(Token = "0x4000BB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string ReloadStr;

	[Token(Token = "0x4000BB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool reloading;

	[Token(Token = "0x4000BB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float lastFireTime;

	[Token(Token = "0x4000BB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private SpriteRenderer muzzle;

	[Token(Token = "0x4000BB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string HideMuzzleStr;

	[Token(Token = "0x4000BBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int handicap;

	[Token(Token = "0x4000BBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private WeaponParams wp;

	[Token(Token = "0x17000131")]
	public float GetAmmo
	{
		[Token(Token = "0x6000B7B")]
		[Address(RVA = "0x8DB698", Offset = "0x8DB698", VA = "0x8DB698", Slot = "5")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000132")]
	public float GetMaxAmmo
	{
		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0x8DB6A0", Offset = "0x8DB6A0", VA = "0x8DB6A0", Slot = "7")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000133")]
	public int SetHandicap
	{
		[Token(Token = "0x6000B7D")]
		[Address(RVA = "0x8DB6A8", Offset = "0x8DB6A8", VA = "0x8DB6A8", Slot = "6")]
		set
		{
		}
	}

	[Token(Token = "0x6000B7E")]
	[Address(RVA = "0x8DB6B0", Offset = "0x8DB6B0", VA = "0x8DB6B0", Slot = "10")]
	public void ReloadWeapon()
	{
	}

	[Token(Token = "0x6000B7F")]
	[Address(RVA = "0x8DB6CC", Offset = "0x8DB6CC", VA = "0x8DB6CC", Slot = "11")]
	public bool FireWeapon(Vector3 origin, Vector3 direction)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B80")]
	[Address(RVA = "0x8DB964", Offset = "0x8DB964", VA = "0x8DB964")]
	private void HideMuzzle()
	{
	}

	[Token(Token = "0x6000B81")]
	[Address(RVA = "0x8DB984", Offset = "0x8DB984", VA = "0x8DB984")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B82")]
	[Address(RVA = "0x8DB9B0", Offset = "0x8DB9B0", VA = "0x8DB9B0")]
	private void Reload()
	{
	}

	[Token(Token = "0x6000B83")]
	[Address(RVA = "0x8DB9C0", Offset = "0x8DB9C0", VA = "0x8DB9C0", Slot = "4")]
	public WeaponParams GetParams()
	{
		return null;
	}

	[Token(Token = "0x6000B84")]
	[Address(RVA = "0x8DBA28", Offset = "0x8DBA28", VA = "0x8DBA28")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B85")]
	[Address(RVA = "0x8DBAA0", Offset = "0x8DBAA0", VA = "0x8DBAA0", Slot = "9")]
	public Vector3 GetPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000B86")]
	[Address(RVA = "0x8DBAC4", Offset = "0x8DBAC4", VA = "0x8DBAC4", Slot = "8")]
	public bool GetReloading()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B87")]
	[Address(RVA = "0x8DBACC", Offset = "0x8DBACC", VA = "0x8DBACC")]
	public MissileLauncher()
	{
	}
}
[Token(Token = "0x20001CB")]
public class SoldierVulcan : UnityEngine.MonoBehaviour, IWeapon
{
	[Token(Token = "0x4000BBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string weaponName;

	[Token(Token = "0x4000BBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float fireInterval;

	[Token(Token = "0x4000BBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float reloadTime;

	[Token(Token = "0x4000BBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float ammo;

	[Token(Token = "0x4000BC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float maxAmmo;

	[Token(Token = "0x4000BC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string FireRPC;

	[Token(Token = "0x4000BC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string ReloadStr;

	[Token(Token = "0x4000BC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool reloading;

	[Token(Token = "0x4000BC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float lastFireTime;

	[Token(Token = "0x4000BC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private SpriteRenderer muzzle;

	[Token(Token = "0x4000BC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string HideMuzzleStr;

	[Token(Token = "0x4000BC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int handicap;

	[Token(Token = "0x4000BC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private WeaponParams wp;

	[Token(Token = "0x17000134")]
	public float GetAmmo
	{
		[Token(Token = "0x6000B88")]
		[Address(RVA = "0x8FC984", Offset = "0x8FC984", VA = "0x8FC984", Slot = "5")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000135")]
	public float GetMaxAmmo
	{
		[Token(Token = "0x6000B89")]
		[Address(RVA = "0x8FC98C", Offset = "0x8FC98C", VA = "0x8FC98C", Slot = "7")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000136")]
	public int SetHandicap
	{
		[Token(Token = "0x6000B8A")]
		[Address(RVA = "0x8FC994", Offset = "0x8FC994", VA = "0x8FC994", Slot = "6")]
		set
		{
		}
	}

	[Token(Token = "0x6000B8B")]
	[Address(RVA = "0x8FC99C", Offset = "0x8FC99C", VA = "0x8FC99C", Slot = "10")]
	public void ReloadWeapon()
	{
	}

	[Token(Token = "0x6000B8C")]
	[Address(RVA = "0x8FC9B8", Offset = "0x8FC9B8", VA = "0x8FC9B8", Slot = "11")]
	public bool FireWeapon(Vector3 origin, Vector3 direction)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B8D")]
	[Address(RVA = "0x8FCACC", Offset = "0x8FCACC", VA = "0x8FCACC")]
	private void HideMuzzle()
	{
	}

	[Token(Token = "0x6000B8E")]
	[Address(RVA = "0x8FCAEC", Offset = "0x8FCAEC", VA = "0x8FCAEC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B8F")]
	[Address(RVA = "0x8FCB64", Offset = "0x8FCB64", VA = "0x8FCB64")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B90")]
	[Address(RVA = "0x8FCB90", Offset = "0x8FCB90", VA = "0x8FCB90")]
	private void Reload()
	{
	}

	[Token(Token = "0x6000B91")]
	[Address(RVA = "0x8FCBA0", Offset = "0x8FCBA0", VA = "0x8FCBA0", Slot = "4")]
	public WeaponParams GetParams()
	{
		return null;
	}

	[Token(Token = "0x6000B92")]
	[Address(RVA = "0x8FCC08", Offset = "0x8FCC08", VA = "0x8FCC08", Slot = "9")]
	public Vector3 GetPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000B93")]
	[Address(RVA = "0x8FCC2C", Offset = "0x8FCC2C", VA = "0x8FCC2C", Slot = "8")]
	public bool GetReloading()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B94")]
	[Address(RVA = "0x8FCC34", Offset = "0x8FCC34", VA = "0x8FCC34")]
	public SoldierVulcan()
	{
	}
}
[Token(Token = "0x20001CC")]
public class Spread : UnityEngine.MonoBehaviour, IWeapon
{
	[Token(Token = "0x4000BC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string weaponName;

	[Token(Token = "0x4000BCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float fireInterval;

	[Token(Token = "0x4000BCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float reloadTime;

	[Token(Token = "0x4000BCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float ammo;

	[Token(Token = "0x4000BCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float maxAmmo;

	[Token(Token = "0x4000BCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string ReloadStr;

	[Token(Token = "0x4000BCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool reloading;

	[Token(Token = "0x4000BD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float lastFireTime;

	[Token(Token = "0x4000BD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private SpriteRenderer muzzle;

	[Token(Token = "0x4000BD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string HideMuzzleStr;

	[Token(Token = "0x4000BD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int handicap;

	[Token(Token = "0x4000BD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private WeaponParams wp;

	[Token(Token = "0x17000137")]
	public float GetAmmo
	{
		[Token(Token = "0x6000B95")]
		[Address(RVA = "0x8FEC44", Offset = "0x8FEC44", VA = "0x8FEC44", Slot = "5")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000138")]
	public float GetMaxAmmo
	{
		[Token(Token = "0x6000B96")]
		[Address(RVA = "0x8FEC4C", Offset = "0x8FEC4C", VA = "0x8FEC4C", Slot = "7")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000139")]
	public int SetHandicap
	{
		[Token(Token = "0x6000B97")]
		[Address(RVA = "0x8FEC54", Offset = "0x8FEC54", VA = "0x8FEC54", Slot = "6")]
		set
		{
		}
	}

	[Token(Token = "0x6000B98")]
	[Address(RVA = "0x8FEC5C", Offset = "0x8FEC5C", VA = "0x8FEC5C", Slot = "10")]
	public void ReloadWeapon()
	{
	}

	[Token(Token = "0x6000B99")]
	[Address(RVA = "0x8FEC78", Offset = "0x8FEC78", VA = "0x8FEC78", Slot = "11")]
	public bool FireWeapon(Vector3 origin, Vector3 direction)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B9A")]
	[Address(RVA = "0x8FEF10", Offset = "0x8FEF10", VA = "0x8FEF10")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B9B")]
	[Address(RVA = "0x8FEF88", Offset = "0x8FEF88", VA = "0x8FEF88")]
	private void HideMuzzle()
	{
	}

	[Token(Token = "0x6000B9C")]
	[Address(RVA = "0x8FEFA8", Offset = "0x8FEFA8", VA = "0x8FEFA8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B9D")]
	[Address(RVA = "0x8FEFD4", Offset = "0x8FEFD4", VA = "0x8FEFD4")]
	private void Reload()
	{
	}

	[Token(Token = "0x6000B9E")]
	[Address(RVA = "0x8FEFE4", Offset = "0x8FEFE4", VA = "0x8FEFE4", Slot = "4")]
	public WeaponParams GetParams()
	{
		return null;
	}

	[Token(Token = "0x6000B9F")]
	[Address(RVA = "0x8FF04C", Offset = "0x8FF04C", VA = "0x8FF04C", Slot = "9")]
	public Vector3 GetPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000BA0")]
	[Address(RVA = "0x8FF070", Offset = "0x8FF070", VA = "0x8FF070", Slot = "8")]
	public bool GetReloading()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BA1")]
	[Address(RVA = "0x8FF078", Offset = "0x8FF078", VA = "0x8FF078")]
	public Spread()
	{
	}
}
[Token(Token = "0x20001CD")]
public class Vulcan : UnityEngine.MonoBehaviour, IWeapon
{
	[Token(Token = "0x4000BD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string weaponName;

	[Token(Token = "0x4000BD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float fireInterval;

	[Token(Token = "0x4000BD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float reloadTime;

	[Token(Token = "0x4000BD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float ammo;

	[Token(Token = "0x4000BD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float maxAmmo;

	[Token(Token = "0x4000BDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string ReloadStr;

	[Token(Token = "0x4000BDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool reloading;

	[Token(Token = "0x4000BDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float lastFireTime;

	[Token(Token = "0x4000BDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private SpriteRenderer muzzle;

	[Token(Token = "0x4000BDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string HideMuzzleStr;

	[Token(Token = "0x4000BDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int handicap;

	[Token(Token = "0x4000BE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private WeaponParams wp;

	[Token(Token = "0x1700013A")]
	public float GetAmmo
	{
		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0xABFE04", Offset = "0xABFE04", VA = "0xABFE04", Slot = "5")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700013B")]
	public float GetMaxAmmo
	{
		[Token(Token = "0x6000BA3")]
		[Address(RVA = "0xABFE0C", Offset = "0xABFE0C", VA = "0xABFE0C", Slot = "7")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700013C")]
	public int SetHandicap
	{
		[Token(Token = "0x6000BA4")]
		[Address(RVA = "0xABFE14", Offset = "0xABFE14", VA = "0xABFE14", Slot = "6")]
		set
		{
		}
	}

	[Token(Token = "0x6000BA5")]
	[Address(RVA = "0xABFE1C", Offset = "0xABFE1C", VA = "0xABFE1C", Slot = "10")]
	public void ReloadWeapon()
	{
	}

	[Token(Token = "0x6000BA6")]
	[Address(RVA = "0xABFE38", Offset = "0xABFE38", VA = "0xABFE38", Slot = "11")]
	public bool FireWeapon(Vector3 origin, Vector3 direction)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BA7")]
	[Address(RVA = "0xAC00D0", Offset = "0xAC00D0", VA = "0xAC00D0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BA8")]
	[Address(RVA = "0xAC0148", Offset = "0xAC0148", VA = "0xAC0148")]
	private void HideMuzzle()
	{
	}

	[Token(Token = "0x6000BA9")]
	[Address(RVA = "0xAC0168", Offset = "0xAC0168", VA = "0xAC0168")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BAA")]
	[Address(RVA = "0xAC0194", Offset = "0xAC0194", VA = "0xAC0194")]
	private void Reload()
	{
	}

	[Token(Token = "0x6000BAB")]
	[Address(RVA = "0xAC01A4", Offset = "0xAC01A4", VA = "0xAC01A4", Slot = "4")]
	public WeaponParams GetParams()
	{
		return null;
	}

	[Token(Token = "0x6000BAC")]
	[Address(RVA = "0xAC020C", Offset = "0xAC020C", VA = "0xAC020C", Slot = "9")]
	public Vector3 GetPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000BAD")]
	[Address(RVA = "0xAC0230", Offset = "0xAC0230", VA = "0xAC0230", Slot = "8")]
	public bool GetReloading()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BAE")]
	[Address(RVA = "0xAC0238", Offset = "0xAC0238", VA = "0xAC0238")]
	public Vulcan()
	{
	}
}
[Token(Token = "0x20001CE")]
public class SkipTimer : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000BE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Image[] image;

	[Token(Token = "0x4000BE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private UnityEvent unityEvent;

	[Token(Token = "0x4000BE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject[] skip;

	[Token(Token = "0x6000BAF")]
	[Address(RVA = "0x8FB940", Offset = "0x8FB940", VA = "0x8FB940")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BB0")]
	[Address(RVA = "0x8FB9B0", Offset = "0x8FB9B0", VA = "0x8FB9B0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BB1")]
	[Address(RVA = "0x8FBCD4", Offset = "0x8FBCD4", VA = "0x8FBCD4")]
	public SkipTimer()
	{
	}
}
[Token(Token = "0x20001CF")]
public class SpriteSineAlpha : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000BE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SpriteRenderer spriteRenderer;

	[Token(Token = "0x4000BE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Color color;

	[Token(Token = "0x6000BB2")]
	[Address(RVA = "0x8FF7E8", Offset = "0x8FF7E8", VA = "0x8FF7E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BB3")]
	[Address(RVA = "0x8FF840", Offset = "0x8FF840", VA = "0x8FF840")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BB4")]
	[Address(RVA = "0x8FF904", Offset = "0x8FF904", VA = "0x8FF904")]
	public SpriteSineAlpha()
	{
	}
}
[Token(Token = "0x20001D0")]
public class TMPSineAlpha : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000BE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TMP_Text tMP_Text;

	[Token(Token = "0x4000BE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Color color;

	[Token(Token = "0x4000BE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float hideAfterSeconds;

	[Token(Token = "0x4000BE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float enableTIme;

	[Token(Token = "0x6000BB5")]
	[Address(RVA = "0x902038", Offset = "0x902038", VA = "0x902038")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BB6")]
	[Address(RVA = "0x90209C", Offset = "0x90209C", VA = "0x90209C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BB7")]
	[Address(RVA = "0x902178", Offset = "0x902178", VA = "0x902178")]
	public TMPSineAlpha()
	{
	}
}
[Token(Token = "0x20001D1")]
public class TestShake : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000BEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public float magnitude;

	[Token(Token = "0x4000BEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float roughness;

	[Token(Token = "0x4000BEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float fadeInTime;

	[Token(Token = "0x4000BED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float fadeOutTime;

	[Token(Token = "0x6000BB8")]
	[Address(RVA = "0x90827C", Offset = "0x90827C", VA = "0x90827C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x6ED2C0", Offset = "0x6ED2C0")]
	public void Shake()
	{
	}

	[Token(Token = "0x6000BB9")]
	[Address(RVA = "0x908360", Offset = "0x908360", VA = "0x908360")]
	public TestShake()
	{
	}
}
[Token(Token = "0x20001D2")]
public class TouchAimMode : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000BEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject autoFire;

	[Token(Token = "0x4000BEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private SimpleJoystick simpleJoystick;

	[Token(Token = "0x6000BBA")]
	[Address(RVA = "0x90B9BC", Offset = "0x90B9BC", VA = "0x90B9BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BBB")]
	[Address(RVA = "0x90BB80", Offset = "0x90BB80", VA = "0x90BB80")]
	public TouchAimMode()
	{
	}
}
[Token(Token = "0x20001D3")]
public class TouchControllerSelection : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000BF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject selectObject;

	[Token(Token = "0x6000BBC")]
	[Address(RVA = "0x90BB88", Offset = "0x90BB88", VA = "0x90BB88")]
	public TouchControllerSelection()
	{
	}
}
[Token(Token = "0x20001D4")]
public class TrialCounter : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000BF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMeshPro textMeshPro;

	[Token(Token = "0x4000BF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float timeLimit;

	[Token(Token = "0x6000BBD")]
	[Address(RVA = "0xAB9084", Offset = "0xAB9084", VA = "0xAB9084")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BBE")]
	[Address(RVA = "0xAB9118", Offset = "0xAB9118", VA = "0xAB9118")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000BBF")]
	[Address(RVA = "0xAB918C", Offset = "0xAB918C", VA = "0xAB918C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BC0")]
	[Address(RVA = "0xAB91E4", Offset = "0xAB91E4", VA = "0xAB91E4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BC1")]
	[Address(RVA = "0xAB93A0", Offset = "0xAB93A0", VA = "0xAB93A0")]
	public TrialCounter()
	{
	}
}
[Token(Token = "0x20001D5")]
public class TriggerParent : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000BF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ReplaceTransparentShaderTrigger parent;

	[Token(Token = "0x6000BC2")]
	[Address(RVA = "0xAB93B0", Offset = "0xAB93B0", VA = "0xAB93B0")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000BC3")]
	[Address(RVA = "0xAB93CC", Offset = "0xAB93CC", VA = "0xAB93CC")]
	public TriggerParent()
	{
	}
}
[Token(Token = "0x20001D6")]
public class UnityAdsIntegration : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000BF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string gameId;

	[Token(Token = "0x6000BC4")]
	[Address(RVA = "0xAB9E50", Offset = "0xAB9E50", VA = "0xAB9E50")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x6ED2F8", Offset = "0x6ED2F8")]
	public void ShowBannerAd()
	{
	}

	[Token(Token = "0x6000BC5")]
	[Address(RVA = "0xAB9E54", Offset = "0xAB9E54", VA = "0xAB9E54")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x6ED330", Offset = "0x6ED330")]
	public void HideBannerAd()
	{
	}

	[Token(Token = "0x6000BC6")]
	[Address(RVA = "0xAB9E58", Offset = "0xAB9E58", VA = "0xAB9E58")]
	public UnityAdsIntegration()
	{
	}
}
[Token(Token = "0x20001D7")]
public class UnityEventOnenable : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000BF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private UnityEvent unityEvent;

	[Token(Token = "0x6000BC7")]
	[Address(RVA = "0xABDC5C", Offset = "0xABDC5C", VA = "0xABDC5C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BC8")]
	[Address(RVA = "0xABDCA4", Offset = "0xABDCA4", VA = "0xABDCA4")]
	public UnityEventOnenable()
	{
	}
}
[Token(Token = "0x20001D8")]
public class Roll_Tank_Tracks : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000BF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float scrollSpeed;

	[Token(Token = "0x4000BF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 oldPosition;

	[Token(Token = "0x4000BF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 newPosition;

	[Token(Token = "0x4000BF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float distance;

	[Token(Token = "0x4000BFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float offset;

	[Token(Token = "0x4000BFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Renderer rend;

	[Token(Token = "0x6000BC9")]
	[Address(RVA = "0x952C08", Offset = "0x952C08", VA = "0x952C08")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BCA")]
	[Address(RVA = "0x952C98", Offset = "0x952C98", VA = "0x952C98")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BCB")]
	[Address(RVA = "0x952E48", Offset = "0x952E48", VA = "0x952E48")]
	public Roll_Tank_Tracks()
	{
	}
}
[Token(Token = "0x20001D9")]
public class Roll_Wheels : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000BFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float wheelDiameter;

	[Token(Token = "0x4000BFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float wheelLength;

	[Token(Token = "0x4000BFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 oldPosition;

	[Token(Token = "0x4000BFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 newPosition;

	[Token(Token = "0x4000C00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float distance;

	[Token(Token = "0x6000BCC")]
	[Address(RVA = "0x952E58", Offset = "0x952E58", VA = "0x952E58")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BCD")]
	[Address(RVA = "0x952EC0", Offset = "0x952EC0", VA = "0x952EC0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BCE")]
	[Address(RVA = "0x952FD8", Offset = "0x952FD8", VA = "0x952FD8")]
	public Roll_Wheels()
	{
	}
}
[Token(Token = "0x20001DA")]
public class RunTimeCombineAndRelease : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000C01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SimpleMeshCombine simpleMeshCombine;

	[Token(Token = "0x4000C02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float combineTime;

	[Token(Token = "0x4000C03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float releaseTime;

	[Token(Token = "0x6000BCF")]
	[Address(RVA = "0x8F57B8", Offset = "0x8F57B8", VA = "0x8F57B8")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000BD0")]
	[Address(RVA = "0x8F5810", Offset = "0x8F5810", VA = "0x8F5810")]
	public void Start()
	{
	}

	[Token(Token = "0x6000BD1")]
	[Address(RVA = "0x8F58F8", Offset = "0x8F58F8", VA = "0x8F58F8")]
	public void Combine()
	{
	}

	[Token(Token = "0x6000BD2")]
	[Address(RVA = "0x8F65B4", Offset = "0x8F65B4", VA = "0x8F65B4")]
	public void Release()
	{
	}

	[Token(Token = "0x6000BD3")]
	[Address(RVA = "0x8F6818", Offset = "0x8F6818", VA = "0x8F6818")]
	public RunTimeCombineAndRelease()
	{
	}
}
[Token(Token = "0x20001DB")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6E1378", Offset = "0x6E1378")]
public class SimpleMeshCombine : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000C04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] combinedGameOjects;

	[Token(Token = "0x4000C05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject combined;

	[Token(Token = "0x4000C06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string meshName;

	[Token(Token = "0x4000C07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool _canGenerateLightmapUV;

	[Token(Token = "0x4000C08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int vCount;

	[Token(Token = "0x4000C09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool generateLightmapUV;

	[Token(Token = "0x4000C0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject copyTarget;

	[Token(Token = "0x4000C0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool destroyOldColliders;

	[Token(Token = "0x4000C0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool keepStructure;

	[Token(Token = "0x6000BD4")]
	[Address(RVA = "0x8F66CC", Offset = "0x8F66CC", VA = "0x8F66CC")]
	public void EnableRenderers(bool e)
	{
	}

	[Token(Token = "0x6000BD5")]
	[Address(RVA = "0x8FB530", Offset = "0x8FB530", VA = "0x8FB530")]
	public MeshFilter[] FindEnabledMeshes()
	{
		return null;
	}

	[Token(Token = "0x6000BD6")]
	[Address(RVA = "0x8F5978", Offset = "0x8F5978", VA = "0x8F5978")]
	public void CombineMeshes()
	{
	}

	[Token(Token = "0x6000BD7")]
	[Address(RVA = "0x8FB798", Offset = "0x8FB798", VA = "0x8FB798")]
	public int Contains(ArrayList l, Material n)
	{
		return default(int);
	}

	[Token(Token = "0x6000BD8")]
	[Address(RVA = "0x8FB8D8", Offset = "0x8FB8D8", VA = "0x8FB8D8")]
	public SimpleMeshCombine()
	{
	}
}
[Token(Token = "0x20001DC")]
public class SimpleMeshCombineMaster : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000C0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool generateLightmapUV;

	[Token(Token = "0x6000BD9")]
	[Address(RVA = "0x8FB938", Offset = "0x8FB938", VA = "0x8FB938")]
	public SimpleMeshCombineMaster()
	{
	}
}
[Token(Token = "0x20001DD")]
public class VideoPlayerFrameJump : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000C0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6E607C", Offset = "0x6E607C")]
	[SerializeField]
	private float start;

	[Token(Token = "0x6000BDA")]
	[Address(RVA = "0xABF468", Offset = "0xABF468", VA = "0xABF468")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BDB")]
	[Address(RVA = "0xABF538", Offset = "0xABF538", VA = "0xABF538")]
	public VideoPlayerFrameJump()
	{
	}
}
[Token(Token = "0x20001DE")]
public class VirtualTouchStickSettings : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000C0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string moveRange;

	[Token(Token = "0x4000C10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string lookRange;

	[Token(Token = "0x4000C11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SimpleJoystick leftStick;

	[Token(Token = "0x4000C12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SimpleJoystick rightStick;

	[Token(Token = "0x4000C13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int MoveRange;

	[Token(Token = "0x4000C14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static int LookRange;

	[Token(Token = "0x4000C15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static int range;

	[Token(Token = "0x4000C16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static VirtualTouchStickSettings instance;

	[Token(Token = "0x6000BDC")]
	[Address(RVA = "0xABF540", Offset = "0xABF540", VA = "0xABF540")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BDD")]
	[Address(RVA = "0xABFBB8", Offset = "0xABFBB8", VA = "0xABFBB8")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x6ED368", Offset = "0x6ED368")]
	public static void IncreaseMoveRange()
	{
	}

	[Token(Token = "0x6000BDE")]
	[Address(RVA = "0xABFC90", Offset = "0xABFC90", VA = "0xABFC90")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x6ED3A0", Offset = "0x6ED3A0")]
	public static void IncreaseLookRange()
	{
	}

	[Token(Token = "0x6000BDF")]
	[Address(RVA = "0xABF5B0", Offset = "0xABF5B0", VA = "0xABF5B0")]
	private static void UpdateMoveDistance()
	{
	}

	[Token(Token = "0x6000BE0")]
	[Address(RVA = "0xABF8B4", Offset = "0xABF8B4", VA = "0xABF8B4")]
	private static void UpdateLookDistance()
	{
	}

	[Token(Token = "0x6000BE1")]
	[Address(RVA = "0xABFD68", Offset = "0xABFD68", VA = "0xABFD68")]
	public VirtualTouchStickSettings()
	{
	}
}
[Token(Token = "0x20001DF")]
public class aimLaser : UnityEngine.MonoBehaviour, IManagedLateFixedUpdated, IManagedLateUpdated
{
	[Token(Token = "0x4000C17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LayerMask layerMask;

	[Token(Token = "0x4000C18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x4000C19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RaycastHit hit;

	[Token(Token = "0x4000C1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3[] positions;

	[Token(Token = "0x4000C1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float maxDistance;

	[Token(Token = "0x4000C1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float currentrDistance;

	[Token(Token = "0x4000C1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private ICharacterBase characterBase;

	[Token(Token = "0x6000BE3")]
	[Address(RVA = "0xAC18A0", Offset = "0xAC18A0", VA = "0xAC18A0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BE4")]
	[Address(RVA = "0xAC199C", Offset = "0xAC199C", VA = "0xAC199C")]
	public void SetColor(Color color)
	{
	}

	[Token(Token = "0x6000BE5")]
	[Address(RVA = "0xAC1A88", Offset = "0xAC1A88", VA = "0xAC1A88")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000BE6")]
	[Address(RVA = "0xAC1B30", Offset = "0xAC1B30", VA = "0xAC1B30", Slot = "5")]
	public void ManageLateUpdate()
	{
	}

	[Token(Token = "0x6000BE7")]
	[Address(RVA = "0xAC1CA0", Offset = "0xAC1CA0", VA = "0xAC1CA0", Slot = "4")]
	public void ManageLateFixedUpdate()
	{
	}

	[Token(Token = "0x6000BE8")]
	[Address(RVA = "0xAC1EEC", Offset = "0xAC1EEC", VA = "0xAC1EEC")]
	public aimLaser()
	{
	}
}
[Token(Token = "0x20001E0")]
public class fpsOptions : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000C1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private CustomButton thirtyButton;

	[Token(Token = "0x4000C1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private CustomButton sixtyButton;

	[Token(Token = "0x4000C20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject questHelp;

	[Token(Token = "0x4000C21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject switchHelp;

	[Token(Token = "0x4000C22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject goHelp;

	[Token(Token = "0x4000C23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject riftHelp;

	[Token(Token = "0x6000BEA")]
	[Address(RVA = "0xAC4CDC", Offset = "0xAC4CDC", VA = "0xAC4CDC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BEB")]
	[Address(RVA = "0xAC4F40", Offset = "0xAC4F40", VA = "0xAC4F40")]
	public void SwitchFps(bool thirty)
	{
	}

	[Token(Token = "0x6000BEC")]
	[Address(RVA = "0xAC4E84", Offset = "0xAC4E84", VA = "0xAC4E84")]
	private void UpdateLocked()
	{
	}

	[Token(Token = "0x6000BED")]
	[Address(RVA = "0xAC4FBC", Offset = "0xAC4FBC", VA = "0xAC4FBC")]
	public fpsOptions()
	{
	}
}
[Token(Token = "0x20001E1")]
public class loadingBar : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000C24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Image image;

	[Token(Token = "0x6000BEE")]
	[Address(RVA = "0xAC4FC4", Offset = "0xAC4FC4", VA = "0xAC4FC4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BEF")]
	[Address(RVA = "0xAC501C", Offset = "0xAC501C", VA = "0xAC501C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BF0")]
	[Address(RVA = "0xAC509C", Offset = "0xAC509C", VA = "0xAC509C")]
	public loadingBar()
	{
	}
}
[Token(Token = "0x20001E2")]
public class lockRotation : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000C25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform copyYRotation;

	[Token(Token = "0x4000C26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 eulerRotation;

	[Token(Token = "0x6000BF1")]
	[Address(RVA = "0xAC50A4", Offset = "0xAC50A4", VA = "0xAC50A4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000BF2")]
	[Address(RVA = "0xAC50FC", Offset = "0xAC50FC", VA = "0xAC50FC")]
	public lockRotation()
	{
	}
}
[Token(Token = "0x20001E3")]
public class rotateTransform : UnityEngine.MonoBehaviour, IManagedUpdated
{
	[Token(Token = "0x4000C27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6E614C", Offset = "0x6E614C")]
	private float amount;

	[Token(Token = "0x4000C28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 rotateAround;

	[Token(Token = "0x6000BF3")]
	[Address(RVA = "0xAC6910", Offset = "0xAC6910", VA = "0xAC6910")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BF4")]
	[Address(RVA = "0xAC6974", Offset = "0xAC6974", VA = "0xAC6974")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000BF5")]
	[Address(RVA = "0xAC69D8", Offset = "0xAC69D8", VA = "0xAC69D8", Slot = "4")]
	public void ManageUpdate()
	{
	}

	[Token(Token = "0x6000BF6")]
	[Address(RVA = "0xAC6A40", Offset = "0xAC6A40", VA = "0xAC6A40")]
	public rotateTransform()
	{
	}
}
[Token(Token = "0x20001E4")]
public class selectEventTrigger : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000C29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MapZoom mapZoom;

	[Token(Token = "0x4000C2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private UnityEvent unityEvent;

	[Token(Token = "0x4000C2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject touchIcon;

	[Token(Token = "0x6000BF7")]
	[Address(RVA = "0xAC6AA8", Offset = "0xAC6AA8", VA = "0xAC6AA8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BF8")]
	[Address(RVA = "0xAC6B0C", Offset = "0xAC6B0C", VA = "0xAC6B0C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BF9")]
	[Address(RVA = "0xAC6D94", Offset = "0xAC6D94", VA = "0xAC6D94")]
	public selectEventTrigger()
	{
	}
}
[Token(Token = "0x20001E5")]
public class switchTouchAutoMode : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6000BFA")]
	[Address(RVA = "0xAC70A4", Offset = "0xAC70A4", VA = "0xAC70A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BFB")]
	[Address(RVA = "0xAC7120", Offset = "0xAC7120", VA = "0xAC7120")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x6ED3D8", Offset = "0x6ED3D8")]
	public void SwitchAutopMode()
	{
	}

	[Token(Token = "0x6000BFC")]
	[Address(RVA = "0xAC7190", Offset = "0xAC7190", VA = "0xAC7190")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BFD")]
	[Address(RVA = "0xAC724C", Offset = "0xAC724C", VA = "0xAC724C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BFE")]
	[Address(RVA = "0xAC72F8", Offset = "0xAC72F8", VA = "0xAC72F8")]
	public switchTouchAutoMode()
	{
	}
}
[Token(Token = "0x20001E6")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6E13B0", Offset = "0x6E13B0")]
public class tmpTeletype : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20003E7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E1BF4", Offset = "0x6E1BF4")]
	private sealed class <UpdateText>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public tmpTeletype <>4__this;

		[Token(Token = "0x40013D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <totalVisibleCharacters>5__2;

		[Token(Token = "0x1700026C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600189E")]
			[Address(RVA = "0xAC7604", Offset = "0xAC7604", VA = "0xAC7604", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018A0")]
			[Address(RVA = "0xAC766C", Offset = "0xAC766C", VA = "0xAC766C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600189B")]
		[Address(RVA = "0xAC745C", Offset = "0xAC745C", VA = "0xAC745C")]
		[DebuggerHidden]
		public <UpdateText>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600189C")]
		[Address(RVA = "0xAC7490", Offset = "0xAC7490", VA = "0xAC7490", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600189D")]
		[Address(RVA = "0xAC7494", Offset = "0xAC7494", VA = "0xAC7494", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600189F")]
		[Address(RVA = "0xAC760C", Offset = "0xAC760C", VA = "0xAC760C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TextMeshProUGUI m_textMeshPro;

	[Token(Token = "0x4000C2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSource audioSource;

	[Token(Token = "0x4000C2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int counter;

	[Token(Token = "0x4000C2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int visibleCount;

	[Token(Token = "0x6000BFF")]
	[Address(RVA = "0xAC7300", Offset = "0xAC7300", VA = "0xAC7300")]
	private void Init()
	{
	}

	[Token(Token = "0x6000C00")]
	[Address(RVA = "0xAC7370", Offset = "0xAC7370", VA = "0xAC7370")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C01")]
	[Address(RVA = "0xAC73CC", Offset = "0xAC73CC", VA = "0xAC73CC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C02")]
	[Address(RVA = "0xAC73EC", Offset = "0xAC73EC", VA = "0xAC73EC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6ED410", Offset = "0x6ED410")]
	private IEnumerator UpdateText()
	{
		return null;
	}

	[Token(Token = "0x6000C03")]
	[Address(RVA = "0xAC7488", Offset = "0xAC7488", VA = "0xAC7488")]
	public tmpTeletype()
	{
	}
}
[Token(Token = "0x20001E7")]
public class triggerOverrideAim : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6000C04")]
	[Address(RVA = "0xAC7674", Offset = "0xAC7674", VA = "0xAC7674")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C05")]
	[Address(RVA = "0xAC769C", Offset = "0xAC769C", VA = "0xAC769C")]
	public triggerOverrideAim()
	{
	}
}
namespace VRKeyboard.Utils
{
	[Token(Token = "0x20001E8")]
	public class GazeRaycaster : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x20003E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E1C04", Offset = "0x6E1C04")]
		private sealed class <FillCircle>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GazeRaycaster <>4__this;

			[Token(Token = "0x40013DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform target;

			[Token(Token = "0x40013DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <timer>5__2;

			[Token(Token = "0x1700026E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60018A4")]
				[Address(RVA = "0xABE670", Offset = "0xABE670", VA = "0xABE670", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700026F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018A6")]
				[Address(RVA = "0xABE6D8", Offset = "0xABE6D8", VA = "0xABE6D8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018A1")]
			[Address(RVA = "0xABE42C", Offset = "0xABE42C", VA = "0xABE42C")]
			[DebuggerHidden]
			public <FillCircle>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x60018A2")]
			[Address(RVA = "0xABE4B8", Offset = "0xABE4B8", VA = "0xABE4B8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018A3")]
			[Address(RVA = "0xABE4BC", Offset = "0xABE4BC", VA = "0xABE4BC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018A5")]
			[Address(RVA = "0xABE678", Offset = "0xABE678", VA = "0xABE678", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float delayInSeconds;

		[Token(Token = "0x4000C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float loadingTime;

		[Token(Token = "0x4000C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image circle;

		[Token(Token = "0x4000C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string lastTargetName;

		[Token(Token = "0x4000C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Coroutine gazeControl;

		[Token(Token = "0x6000C06")]
		[Address(RVA = "0xABE08C", Offset = "0xABE08C", VA = "0xABE08C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000C07")]
		[Address(RVA = "0xABE2D4", Offset = "0xABE2D4", VA = "0xABE2D4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6ED474", Offset = "0x6ED474")]
		private IEnumerator FillCircle(Transform target)
		{
			return null;
		}

		[Token(Token = "0x6000C08")]
		[Address(RVA = "0xABE350", Offset = "0xABE350", VA = "0xABE350")]
		private void ResetGazer()
		{
		}

		[Token(Token = "0x6000C09")]
		[Address(RVA = "0xABE458", Offset = "0xABE458", VA = "0xABE458")]
		public GazeRaycaster()
		{
		}
	}
	[Token(Token = "0x20001E9")]
	public class KeyboardManager : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E61C4", Offset = "0x6E61C4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E61C4", Offset = "0x6E61C4")]
		public bool isUppercase;

		[Token(Token = "0x4000C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int maxInputLength;

		[Token(Token = "0x4000C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E6224", Offset = "0x6E6224")]
		public TMP_InputField inputField;

		[Token(Token = "0x4000C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E625C", Offset = "0x6E625C")]
		public Transform keys;

		[Token(Token = "0x4000C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Key[] keyList;

		[Token(Token = "0x4000C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool capslockFlag;

		[Token(Token = "0x1700013D")]
		private string Input
		{
			[Token(Token = "0x6000C0A")]
			[Address(RVA = "0xABED50", Offset = "0xABED50", VA = "0xABED50")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C0B")]
			[Address(RVA = "0xABED6C", Offset = "0xABED6C", VA = "0xABED6C")]
			set
			{
			}
		}

		[Token(Token = "0x6000C0C")]
		[Address(RVA = "0xABED88", Offset = "0xABED88", VA = "0xABED88")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C0D")]
		[Address(RVA = "0xABEDE8", Offset = "0xABEDE8", VA = "0xABEDE8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C0E")]
		[Address(RVA = "0xABEFD0", Offset = "0xABEFD0", VA = "0xABEFD0")]
		public void Backspace()
		{
		}

		[Token(Token = "0x6000C0F")]
		[Address(RVA = "0xABF078", Offset = "0xABF078", VA = "0xABF078")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000C10")]
		[Address(RVA = "0xABEEC4", Offset = "0xABEEC4", VA = "0xABEEC4")]
		public void CapsLock()
		{
		}

		[Token(Token = "0x6000C11")]
		[Address(RVA = "0xABF0D4", Offset = "0xABF0D4", VA = "0xABF0D4")]
		public void Shift()
		{
		}

		[Token(Token = "0x6000C12")]
		[Address(RVA = "0xABF1C8", Offset = "0xABF1C8", VA = "0xABF1C8")]
		public void GenerateInput(string s)
		{
		}

		[Token(Token = "0x6000C13")]
		[Address(RVA = "0xABF294", Offset = "0xABF294", VA = "0xABF294")]
		public KeyboardManager()
		{
		}
	}
	[Token(Token = "0x20001EA")]
	public class Alphabet : Key
	{
		[Token(Token = "0x6000C14")]
		[Address(RVA = "0xABE014", Offset = "0xABE014", VA = "0xABE014", Slot = "5")]
		public override void CapsLock(bool isUppercase)
		{
		}

		[Token(Token = "0x6000C15")]
		[Address(RVA = "0xABE07C", Offset = "0xABE07C", VA = "0xABE07C")]
		public Alphabet()
		{
		}
	}
	[Token(Token = "0x20001EB")]
	public class Key : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x20003E9")]
		public delegate void OnKeyClickedHandler(string key);

		[Token(Token = "0x4000C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Text key;

		[Token(Token = "0x14000011")]
		public event OnKeyClickedHandler OnKeyClicked
		{
			[Token(Token = "0x6000C16")]
			[Address(RVA = "0xABE6E0", Offset = "0xABE6E0", VA = "0xABE6E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ED4D8", Offset = "0x6ED4D8")]
			add
			{
			}
			[Token(Token = "0x6000C17")]
			[Address(RVA = "0xABE784", Offset = "0xABE784", VA = "0xABE784")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ED4E8", Offset = "0x6ED4E8")]
			remove
			{
			}
		}

		[Token(Token = "0x6000C18")]
		[Address(RVA = "0xABE828", Offset = "0xABE828", VA = "0xABE828", Slot = "4")]
		public virtual void Awake()
		{
		}

		[Token(Token = "0x6000C19")]
		[Address(RVA = "0xABE908", Offset = "0xABE908", VA = "0xABE908", Slot = "5")]
		public virtual void CapsLock(bool isUppercase)
		{
		}

		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0xABE90C", Offset = "0xABE90C", VA = "0xABE90C", Slot = "6")]
		public virtual void ShiftKey()
		{
		}

		[Token(Token = "0x6000C1B")]
		[Address(RVA = "0xABE084", Offset = "0xABE084", VA = "0xABE084")]
		public Key()
		{
		}

		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0xABE910", Offset = "0xABE910", VA = "0xABE910")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ED4F8", Offset = "0x6ED4F8")]
		private void <Awake>b__5_0()
		{
		}
	}
	[Token(Token = "0x20001EC")]
	public class Number : Key
	{
		[Token(Token = "0x6000C1D")]
		[Address(RVA = "0xABF29C", Offset = "0xABF29C", VA = "0xABF29C")]
		public Number()
		{
		}
	}
	[Token(Token = "0x20001ED")]
	public class Shift : Key
	{
		[Token(Token = "0x4000C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Text subscript;

		[Token(Token = "0x6000C1E")]
		[Address(RVA = "0xABF2A4", Offset = "0xABF2A4", VA = "0xABF2A4", Slot = "4")]
		public override void Awake()
		{
		}

		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0xABF32C", Offset = "0xABF32C", VA = "0xABF32C", Slot = "6")]
		public override void ShiftKey()
		{
		}

		[Token(Token = "0x6000C20")]
		[Address(RVA = "0xABF3C4", Offset = "0xABF3C4", VA = "0xABF3C4")]
		public Shift()
		{
		}
	}
	[Token(Token = "0x20001EE")]
	public class Symbol : Key
	{
		[Token(Token = "0x6000C21")]
		[Address(RVA = "0xABF3CC", Offset = "0xABF3CC", VA = "0xABF3CC")]
		public Symbol()
		{
		}
	}
}
namespace LunarCatsStudio.SuperCombiner
{
	[Token(Token = "0x20001EF")]
	public class MeshCombiner
	{
		[Token(Token = "0x4000C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int _maxVerticesCount;

		[Token(Token = "0x4000C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string _sessionName;

		[Token(Token = "0x4000C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, BlendShapeFrame> blendShapes;

		[Token(Token = "0x4000C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int _vertexOffset;

		[Token(Token = "0x4000C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool _generateUv2;

		[Token(Token = "0x4000C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CombinedResult _combinedResult;

		[Token(Token = "0x1700013E")]
		public CombinedResult CombinedResult
		{
			[Token(Token = "0x6000C22")]
			[Address(RVA = "0xD12B38", Offset = "0xD12B38", VA = "0xD12B38")]
			set
			{
			}
		}

		[Token(Token = "0x6000C23")]
		[Address(RVA = "0xD12B40", Offset = "0xD12B40", VA = "0xD12B40")]
		public void SetParameters(int maxVertices_p, string sessionName_p, bool generateUv2_p)
		{
		}

		[Token(Token = "0x6000C24")]
		[Address(RVA = "0xD12B54", Offset = "0xD12B54", VA = "0xD12B54")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000C25")]
		[Address(RVA = "0xD12BB4", Offset = "0xD12BB4", VA = "0xD12BB4")]
		public List<GameObject> CombineToMeshes(List<MeshRenderer> meshRenderers, List<SkinnedMeshRenderer> skinnedMeshRenderers, Transform parent, int combinedIndex)
		{
			return null;
		}

		[Token(Token = "0x6000C26")]
		[Address(RVA = "0xD13F60", Offset = "0xD13F60", VA = "0xD13F60")]
		public List<GameObject> CombineToSkinnedMeshes(List<MeshRenderer> meshRenderers, List<SkinnedMeshRenderer> skinnedMeshRenderers, Transform parent, int combinedIndex)
		{
			return null;
		}

		[Token(Token = "0x6000C27")]
		[Address(RVA = "0xD1632C", Offset = "0xD1632C", VA = "0xD1632C")]
		private void AssignParametersToSkinnedMesh(SkinnedMeshRenderer skin, List<Transform> bones, List<BoneWeight> boneWeights, List<Matrix4x4> bindposes)
		{
		}

		[Token(Token = "0x6000C28")]
		[Address(RVA = "0xD154BC", Offset = "0xD154BC", VA = "0xD154BC")]
		private void CopyAnimator(Animator anim, GameObject target)
		{
		}

		[Token(Token = "0x6000C29")]
		[Address(RVA = "0xD153D8", Offset = "0xD153D8", VA = "0xD153D8")]
		private Transform FindTransformForAnimator(Transform[] children, Transform[] rootBones, Animator anim)
		{
			return null;
		}

		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0xD15208", Offset = "0xD15208", VA = "0xD15208")]
		private void GetOrignialToNewBonesCorrespondancy(Transform rootBone, Transform newRootBone, Dictionary<int, Transform> originToNewBoneMap)
		{
		}

		[Token(Token = "0x6000C2B")]
		[Address(RVA = "0xD14CC0", Offset = "0xD14CC0", VA = "0xD14CC0")]
		private Transform[] FindRootBone(Dictionary<int, Transform> bones)
		{
			return null;
		}

		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0xD14FF4", Offset = "0xD14FF4", VA = "0xD14FF4")]
		private GameObject InstantiateCopy(GameObject original)
		{
			return null;
		}

		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0xD13A70", Offset = "0xD13A70", VA = "0xD13A70")]
		private CombineInstanceID CreateCombinedInstances(Mesh mesh, Material[] sharedMaterials, int instanceID, string name, Matrix4x4 matrix, int combinedIndex)
		{
			return null;
		}

		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0xD15BB4", Offset = "0xD15BB4", VA = "0xD15BB4")]
		private GameObject CreateCombinedSkinnedMeshGameObject(CombineInstanceID instances, Transform parent, int number, int combinedIndex)
		{
			return null;
		}

		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0xD13434", Offset = "0xD13434", VA = "0xD13434")]
		public GameObject CreateCombinedMeshGameObject(CombineInstanceID instances, Transform parent, int number, int combinedIndex)
		{
			return null;
		}

		[Token(Token = "0x6000C30")]
		[Address(RVA = "0xD16534", Offset = "0xD16534", VA = "0xD16534")]
		public bool GenerateUV(Mesh targetMesh, int[] textureIndex, float[] scaleFactors, string objectName, int combinedIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C31")]
		[Address(RVA = "0xD1568C", Offset = "0xD1568C", VA = "0xD1568C")]
		public Mesh copyMesh(Mesh mesh, string id = "")
		{
			return null;
		}

		[Token(Token = "0x6000C32")]
		[Address(RVA = "0xD17214", Offset = "0xD17214", VA = "0xD17214")]
		private void CopyNewMeshesByCombine(Mesh original, Mesh destination)
		{
		}

		[Token(Token = "0x6000C33")]
		[Address(RVA = "0xD17398", Offset = "0xD17398", VA = "0xD17398")]
		public MeshCombiner()
		{
		}
	}
	[Token(Token = "0x20001F0")]
	public class SuperCombiner : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x20003EA")]
		public enum CombineStatesList
		{
			[Token(Token = "0x40013DD")]
			Uncombined,
			[Token(Token = "0x40013DE")]
			Combining,
			[Token(Token = "0x40013DF")]
			CombinedMaterials,
			[Token(Token = "0x40013E0")]
			Combined
		}

		[Token(Token = "0x4000C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CombineStatesList _combiningState;

		[Token(Token = "0x4000C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<TexturePacker> _texturePackers;

		[Token(Token = "0x4000C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MeshCombiner _meshCombiner;

		[Token(Token = "0x4000C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string _sessionName;

		[Token(Token = "0x4000C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool _combineAtRuntime;

		[Token(Token = "0x4000C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int _textureAtlasSize;

		[Token(Token = "0x4000C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<string> _customTextureProperies;

		[Token(Token = "0x4000C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float _tilingFactor;

		[Token(Token = "0x4000C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int _atlasPadding;

		[Token(Token = "0x4000C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool _combineMaterials;

		[Token(Token = "0x4000C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool _forceUVTo0_1;

		[Token(Token = "0x4000C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		public bool _multipleMaterialsMode;

		[Token(Token = "0x4000C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<Material> multiMaterials0;

		[Token(Token = "0x4000C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<Material> multiMaterials1;

		[Token(Token = "0x4000C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<Material> multiMaterials2;

		[Token(Token = "0x4000C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<Material> multiMaterials3;

		[Token(Token = "0x4000C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public List<Material> multiMaterials4;

		[Token(Token = "0x4000C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public List<Material> multiMaterials5;

		[Token(Token = "0x4000C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public List<Material> multiMaterials6;

		[Token(Token = "0x4000C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public List<Material> multiMaterials7;

		[Token(Token = "0x4000C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public List<Material> multiMaterials8;

		[Token(Token = "0x4000C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public List<Material> multiMaterials9;

		[Token(Token = "0x4000C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public List<Material> multiMaterials10;

		[Token(Token = "0x4000C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public List<Material> multiMaterialsAllOthers;

		[Token(Token = "0x4000C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public bool _combineMeshes;

		[Token(Token = "0x4000C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
		public bool _manageLodLevel;

		[Token(Token = "0x4000C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public int _managedLodLevel;

		[Token(Token = "0x4000C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public bool _generateUv2;

		[Token(Token = "0x4000C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public int _meshOutput;

		[Token(Token = "0x4000C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public int _maxVerticesCount;

		[Token(Token = "0x4000C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public GameObject _targetGameObject;

		[Token(Token = "0x4000C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public List<List<Material>> _multiMaterialsList;

		[Token(Token = "0x4000C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public int _multiMaterialsCount;

		[Token(Token = "0x4000C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private List<List<MaterialToCombine>> _materialsToCombine;

		[Token(Token = "0x4000C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public bool _savePrefabs;

		[Token(Token = "0x4000C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
		public bool _saveMeshObj;

		[Token(Token = "0x4000C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF2")]
		public bool _saveMeshFbx;

		[Token(Token = "0x4000C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF3")]
		public bool _saveMaterials;

		[Token(Token = "0x4000C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public bool _saveTextures;

		[Token(Token = "0x4000C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public string _folderDestination;

		[Token(Token = "0x4000C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public List<MeshRenderer> _meshList;

		[Token(Token = "0x4000C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public List<SkinnedMeshRenderer> _skinnedMeshList;

		[Token(Token = "0x4000C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public Dictionary<int, string> _uniqueCombinedMeshId;

		[Token(Token = "0x4000C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public Dictionary<int, string> _copyMeshId;

		[Token(Token = "0x4000C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public List<GameObject> _toSavePrefabList;

		[Token(Token = "0x4000C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public List<MeshRenderer> _toSaveObjectList;

		[Token(Token = "0x4000C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public List<Mesh> _toSaveMeshList;

		[Token(Token = "0x4000C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public List<SkinnedMeshRenderer> _toSaveSkinnedObjectList;

		[Token(Token = "0x4000C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public GameObject _targetParentForCombinedGameObjects;

		[Token(Token = "0x4000C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private DateTime _timeStart;

		[Token(Token = "0x4000C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public CombinedResult _combinedResult;

		[Token(Token = "0x4000C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public SuperCombinerSettings _scSettings;

		[Token(Token = "0x1700013F")]
		public string versionNumber
		{
			[Token(Token = "0x6000C34")]
			[Address(RVA = "0xD18F30", Offset = "0xD18F30", VA = "0xD18F30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C35")]
		[Address(RVA = "0xD18F78", Offset = "0xD18F78", VA = "0xD18F78")]
		private SuperCombiner()
		{
		}

		[Token(Token = "0x6000C36")]
		[Address(RVA = "0xD19324", Offset = "0xD19324", VA = "0xD19324")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C37")]
		[Address(RVA = "0xD19424", Offset = "0xD19424", VA = "0xD19424")]
		public void FindMeshesToCombine()
		{
		}

		[Token(Token = "0x6000C38")]
		[Address(RVA = "0xD19334", Offset = "0xD19334", VA = "0xD19334")]
		public void CombineChildren()
		{
		}

		[Token(Token = "0x6000C39")]
		[Address(RVA = "0xD19C8C", Offset = "0xD19C8C", VA = "0xD19C8C")]
		public bool CombineMaterials(List<MeshRenderer> meshesToCombine, List<SkinnedMeshRenderer> skinnedMeshesToCombine)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0xD1D528", Offset = "0xD1D528", VA = "0xD1D528")]
		public void SetTargetParentForCombinedGameObject()
		{
		}

		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0xD1D66C", Offset = "0xD1D66C", VA = "0xD1D66C")]
		public void CombineMeshes(List<MeshRenderer> meshesToCombine, List<SkinnedMeshRenderer> skinnedMeshesToCombine, Transform parent)
		{
		}

		[Token(Token = "0x6000C3C")]
		[Address(RVA = "0xD1E8F8", Offset = "0xD1E8F8", VA = "0xD1E8F8")]
		private List<MeshRendererAndOriginalMaterials> GetMeshRenderersByCombineIndex(List<MeshRenderer> meshRenderers, List<SkinnedMeshRenderer> skinnedMeshRenderers, Transform parent)
		{
			return null;
		}

		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0xD19AA8", Offset = "0xD19AA8", VA = "0xD19AA8")]
		public void Combine(List<MeshRenderer> meshesToCombine, List<SkinnedMeshRenderer> skinnedMeshesToCombine)
		{
		}

		[Token(Token = "0x6000C3E")]
		[Address(RVA = "0xD1A8C0", Offset = "0xD1A8C0", VA = "0xD1A8C0")]
		public void InitializeMultipleMaterialElements()
		{
		}

		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0xD1F954", Offset = "0xD1F954", VA = "0xD1F954")]
		private void CopyGameObjectsHierarchy(Transform parent)
		{
		}

		[Token(Token = "0x6000C40")]
		[Address(RVA = "0xD20564", Offset = "0xD20564", VA = "0xD20564")]
		private void GenerateUVs(Mesh mesh, Material[] originalMaterials, string objectName, int combinedIndex)
		{
		}

		[Token(Token = "0x6000C41")]
		[Address(RVA = "0xD20DB8", Offset = "0xD20DB8", VA = "0xD20DB8")]
		private void EnableRenderers(List<MeshRenderer> meshes, List<SkinnedMeshRenderer> skinnedMeshes)
		{
		}

		[Token(Token = "0x6000C42")]
		[Address(RVA = "0xD206C8", Offset = "0xD206C8", VA = "0xD206C8")]
		private void DisableRenderers(List<MeshRenderer> meshes, List<SkinnedMeshRenderer> skinnedMeshes)
		{
		}

		[Token(Token = "0x6000C43")]
		[Address(RVA = "0xD1FAD4", Offset = "0xD1FAD4", VA = "0xD1FAD4")]
		private List<GameObject> GenerateTransformedGameObjects(Transform parent, List<MeshRenderer> originalMeshRenderer)
		{
			return null;
		}

		[Token(Token = "0x6000C44")]
		[Address(RVA = "0xD20020", Offset = "0xD20020", VA = "0xD20020")]
		private List<GameObject> GenerateTransformedGameObjects(Transform parent, List<SkinnedMeshRenderer> originalSkinnedMeshRenderer)
		{
			return null;
		}

		[Token(Token = "0x6000C45")]
		[Address(RVA = "0xD209E8", Offset = "0xD209E8", VA = "0xD209E8")]
		private GameObject InstantiateCopy(GameObject original, bool deleteChidren = true)
		{
			return null;
		}

		[Token(Token = "0x6000C46")]
		[Address(RVA = "0xD2102C", Offset = "0xD2102C", VA = "0xD2102C")]
		private List<MeshCollider> FindEnabledMeshColliders(Transform parent)
		{
			return null;
		}

		[Token(Token = "0x6000C47")]
		[Address(RVA = "0xD19470", Offset = "0xD19470", VA = "0xD19470")]
		private List<MeshRenderer> FindEnabledMeshes(Transform parent)
		{
			return null;
		}

		[Token(Token = "0x6000C48")]
		[Address(RVA = "0xD19934", Offset = "0xD19934", VA = "0xD19934")]
		private List<SkinnedMeshRenderer> FindEnabledSkinnedMeshes(Transform parent)
		{
			return null;
		}

		[Token(Token = "0x6000C49")]
		[Address(RVA = "0xD1AA74", Offset = "0xD1AA74", VA = "0xD1AA74")]
		private List<MaterialToCombine> FindEnabledMaterials(List<MeshRenderer> meshes, List<SkinnedMeshRenderer> skinnedMeshes)
		{
			return null;
		}

		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0xD21178", Offset = "0xD21178", VA = "0xD21178")]
		private Rect getUVBounds(Vector2[] uvs)
		{
			return default(Rect);
		}

		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0xD21334", Offset = "0xD21334", VA = "0xD21334")]
		private Rect getMaxRect(Rect uv1, Rect uv2)
		{
			return default(Rect);
		}

		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0xD1E424", Offset = "0xD1E424", VA = "0xD1E424")]
		public void UnCombine()
		{
		}

		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0xD214A0", Offset = "0xD214A0", VA = "0xD214A0")]
		private List<Transform> GetFirstLevelChildren(Transform parent)
		{
			return null;
		}

		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0xD21588", Offset = "0xD21588", VA = "0xD21588")]
		public void Save()
		{
		}

		[Token(Token = "0x6000C4F")]
		[Address(RVA = "0xD2158C", Offset = "0xD2158C", VA = "0xD2158C")]
		private void createSuperCombinerSettings()
		{
		}
	}
	[Token(Token = "0x20001F1")]
	public class TexturePacker
	{
		[Token(Token = "0x4000C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Material _copyedMaterials;

		[Token(Token = "0x4000C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material _copyedToSaveMaterials;

		[Token(Token = "0x4000C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, List<Texture2D>> _texturesForAtlas;

		[Token(Token = "0x4000C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Dictionary<string, Texture2D> _packedTextures;

		[Token(Token = "0x4000C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int _combinedIndex;

		[Token(Token = "0x4000C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Dictionary<string, string> TexturePropertyNames;

		[Token(Token = "0x4000C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool hasEmission;

		[Token(Token = "0x4000C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color emissionColor;

		[Token(Token = "0x4000C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<string> customProperties;

		[Token(Token = "0x4000C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<int, TextureImportSettings> importedTextures;

		[Token(Token = "0x4000C82")]
		private const int NO_TEXTURE_COLOR_SIZE = 256;

		[Token(Token = "0x4000C83")]
		private const int MAX_TEXTURE_SIZE = 16384;

		[Token(Token = "0x4000C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private CombinedResult combinedResult;

		[Token(Token = "0x17000140")]
		public int CombinedIndex
		{
			[Token(Token = "0x6000C50")]
			[Address(RVA = "0xD21E44", Offset = "0xD21E44", VA = "0xD21E44")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000C51")]
			[Address(RVA = "0xD21E4C", Offset = "0xD21E4C", VA = "0xD21E4C")]
			set
			{
			}
		}

		[Token(Token = "0x17000141")]
		public CombinedResult CombinedResult
		{
			[Token(Token = "0x6000C52")]
			[Address(RVA = "0xD21E54", Offset = "0xD21E54", VA = "0xD21E54")]
			set
			{
			}
		}

		[Token(Token = "0x6000C53")]
		[Address(RVA = "0xD1B130", Offset = "0xD1B130", VA = "0xD1B130")]
		public TexturePacker()
		{
		}

		[Token(Token = "0x6000C54")]
		[Address(RVA = "0xD1B500", Offset = "0xD1B500", VA = "0xD1B500")]
		public void SetCustomPropertyNames(List<string> list)
		{
		}

		[Token(Token = "0x6000C55")]
		[Address(RVA = "0xD21E5C", Offset = "0xD21E5C", VA = "0xD21E5C")]
		public Material GetCombinedMaterialToSave()
		{
			return null;
		}

		[Token(Token = "0x6000C56")]
		[Address(RVA = "0xD21E64", Offset = "0xD21E64", VA = "0xD21E64")]
		public void GenerateCopyedMaterialToSave()
		{
		}

		[Token(Token = "0x6000C57")]
		[Address(RVA = "0xD21ED4", Offset = "0xD21ED4", VA = "0xD21ED4")]
		public void SetCopiedMaterial(Material mat)
		{
		}

		[Token(Token = "0x6000C58")]
		[Address(RVA = "0xD21EDC", Offset = "0xD21EDC", VA = "0xD21EDC")]
		public void ClearTextures()
		{
		}

		[Token(Token = "0x6000C59")]
		[Address(RVA = "0xD22160", Offset = "0xD22160", VA = "0xD22160")]
		private Vector3 GetTextureSizeInAtlas(Vector2 inputTextureSize, float scaleX, float scaleY, string materialName)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0xD224B8", Offset = "0xD224B8", VA = "0xD224B8")]
		private Texture2D CopyTexture(Texture2D texture, Rect materialUVBounds, Rect meshUVBounds, Material mat, Vector3 textureInAtlasSize, Vector2 targetTextureSize, bool isMainTexture)
		{
			return null;
		}

		[Token(Token = "0x6000C5B")]
		[Address(RVA = "0xD2363C", Offset = "0xD2363C", VA = "0xD2363C")]
		private Vector2 checkTexturesSize(Material mat, bool alignToSmallest)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000C5C")]
		[Address(RVA = "0xD1B6E8", Offset = "0xD1B6E8", VA = "0xD1B6E8")]
		public void SetTextures(Material mat, bool combineMaterials, Rect materialUVBounds, Rect meshUVBounds, float tilingFactor)
		{
		}

		[Token(Token = "0x6000C5D")]
		[Address(RVA = "0xD234B8", Offset = "0xD234B8", VA = "0xD234B8")]
		private string GetStringTextureSize(float width, float height)
		{
			return null;
		}

		[Token(Token = "0x6000C5E")]
		[Address(RVA = "0xD233A0", Offset = "0xD233A0", VA = "0xD233A0")]
		private Texture2D CreateColoredTexture2D(int width, int height, Color color)
		{
			return null;
		}

		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0xD232E8", Offset = "0xD232E8", VA = "0xD232E8")]
		private TextureImportSettings CheckTextureImportSettings(Texture2D texture)
		{
			return default(TextureImportSettings);
		}

		[Token(Token = "0x6000C60")]
		[Address(RVA = "0xD23C30", Offset = "0xD23C30", VA = "0xD23C30")]
		private void CheckTexturesConformity()
		{
		}

		[Token(Token = "0x6000C61")]
		[Address(RVA = "0xD1CF04", Offset = "0xD1CF04", VA = "0xD1CF04")]
		public void PackTextures(int textureAtlasSize, int atlasPadding, bool combineMaterials, string name)
		{
		}

		[Token(Token = "0x6000C62")]
		[Address(RVA = "0xD2432C", Offset = "0xD2432C", VA = "0xD2432C")]
		public void SaveTextures(string folder, string name)
		{
		}

		[Token(Token = "0x6000C63")]
		[Address(RVA = "0xD24330", Offset = "0xD24330", VA = "0xD24330")]
		public string GetTextureFilePathName(string folder, string sessionName, string textureName, int displayedIndex)
		{
			return null;
		}
	}
	[Token(Token = "0x20001F2")]
	public class BlendShapeFrame
	{
		[Token(Token = "0x4000C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string _shapeName;

		[Token(Token = "0x4000C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float _frameWeight;

		[Token(Token = "0x4000C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3[] _deltaVertices;

		[Token(Token = "0x4000C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3[] _deltaNormals;

		[Token(Token = "0x4000C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3[] _deltaTangents;

		[Token(Token = "0x4000C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int _vertexOffset;

		[Token(Token = "0x6000C64")]
		[Address(RVA = "0xD0FE70", Offset = "0xD0FE70", VA = "0xD0FE70")]
		public BlendShapeFrame(string shapeName_p, float frameWeight_p, Vector3[] deltaVertices_p, Vector3[] deltaNormals_p, Vector3[] deltaTangents_p, int offset)
		{
		}
	}
	[Token(Token = "0x20001F3")]
	public class CombineInstanceID
	{
		[Token(Token = "0x4000C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<CombineInstance> _combineInstances;

		[Token(Token = "0x4000C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<int> _instancesID;

		[Token(Token = "0x4000C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<string> _names;

		[Token(Token = "0x6000C65")]
		[Address(RVA = "0xD0FED8", Offset = "0xD0FED8", VA = "0xD0FED8")]
		public void AddCombineInstance(int subMeshIndex, Mesh mesh, Matrix4x4 matrix, int instanceID, string name)
		{
		}

		[Token(Token = "0x6000C66")]
		[Address(RVA = "0xD10028", Offset = "0xD10028", VA = "0xD10028")]
		public void AddRange(CombineInstanceID instances)
		{
		}

		[Token(Token = "0x6000C67")]
		[Address(RVA = "0xD100CC", Offset = "0xD100CC", VA = "0xD100CC")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000C68")]
		[Address(RVA = "0xD10154", Offset = "0xD10154", VA = "0xD10154")]
		public int Count()
		{
			return default(int);
		}

		[Token(Token = "0x6000C69")]
		[Address(RVA = "0xD101A4", Offset = "0xD101A4", VA = "0xD101A4")]
		public CombineInstanceID()
		{
		}
	}
	[Token(Token = "0x20001F4")]
	public class CombinedMeshModification : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E62A4", Offset = "0x6E62A4")]
		public CombinedResult _combinedResult;

		[Token(Token = "0x4000C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E62DC", Offset = "0x6E62DC")]
		public MeshFilter _meshFilter;

		[Token(Token = "0x4000C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CombinedResult _currentCombinedResult;

		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0xD10380", Offset = "0xD10380", VA = "0xD10380")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0xD103FC", Offset = "0xD103FC", VA = "0xD103FC")]
		public void RemoveFromCombined(GameObject gameObject)
		{
		}

		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0xD10434", Offset = "0xD10434", VA = "0xD10434")]
		public void RemoveFromCombined(int instanceID)
		{
		}

		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0xD11318", Offset = "0xD11318", VA = "0xD11318")]
		public CombinedMeshModification()
		{
		}
	}
	[Token(Token = "0x20001F5")]
	public class CombinedResult : ScriptableObject
	{
		[Token(Token = "0x4000C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool _showCombinedMaterials;

		[Token(Token = "0x4000C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool _showCombinedMeshes;

		[Token(Token = "0x4000C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool _showLogs;

		[Token(Token = "0x4000C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string _logs;

		[Token(Token = "0x4000C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<CombinedMaterial> _combinedMaterials;

		[Token(Token = "0x4000C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<Dictionary<int, MaterialToCombine>> _originalMaterialList;

		[Token(Token = "0x4000C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Dictionary<int, int> _originalReferenceMaterial;

		[Token(Token = "0x4000C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<List<GameObject>> _combinedGameObjectFromMeshList;

		[Token(Token = "0x4000C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<List<GameObject>> _combinedGameObjectFromSkinnedMeshList;

		[Token(Token = "0x4000C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<MeshCombined> _meshResults;

		[Token(Token = "0x4000C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int _materialCombinedCount;

		[Token(Token = "0x4000C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int _combinedMaterialCount;

		[Token(Token = "0x4000C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int _meshesCombinedCount;

		[Token(Token = "0x4000C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int _skinnedMeshesCombinedCount;

		[Token(Token = "0x4000C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int _totalVertexCount;

		[Token(Token = "0x4000CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int _subMeshCount;

		[Token(Token = "0x4000CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public TimeSpan _duration;

		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0xD11320", Offset = "0xD11320", VA = "0xD11320")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0xD11468", Offset = "0xD11468", VA = "0xD11468")]
		public void SetCombinedMaterial(Material mat, int combinedIndex, bool isOriginal)
		{
		}

		[Token(Token = "0x6000C70")]
		[Address(RVA = "0xD11614", Offset = "0xD11614", VA = "0xD11614")]
		public void AddNewCombinedMaterial()
		{
		}

		[Token(Token = "0x6000C71")]
		[Address(RVA = "0xD1168C", Offset = "0xD1168C", VA = "0xD1168C")]
		public void AddMaterialToCombine(MaterialToCombine mat, int combinedIndex)
		{
		}

		[Token(Token = "0x6000C72")]
		[Address(RVA = "0xD117D4", Offset = "0xD117D4", VA = "0xD117D4")]
		public void AddCombinedMesh(Mesh combinedMesh, CombineInstanceID combineInstanceID, int combinedIndex)
		{
		}

		[Token(Token = "0x6000C73")]
		[Address(RVA = "0xD11B90", Offset = "0xD11B90", VA = "0xD11B90")]
		public int FindCorrespondingMaterialIndex(Material matToFind, int combinedIndex)
		{
			return default(int);
		}

		[Token(Token = "0x6000C74")]
		[Address(RVA = "0xD11E0C", Offset = "0xD11E0C", VA = "0xD11E0C")]
		public Material GetCombinedMaterial(Material sourceMaterial)
		{
			return null;
		}

		[Token(Token = "0x6000C75")]
		[Address(RVA = "0xD11F84", Offset = "0xD11F84", VA = "0xD11F84")]
		public int GetCombinedIndex(Material sourceMaterial)
		{
			return default(int);
		}

		[Token(Token = "0x6000C76")]
		[Address(RVA = "0xD120D0", Offset = "0xD120D0", VA = "0xD120D0")]
		public int GetCombinedIndexCount()
		{
			return default(int);
		}

		[Token(Token = "0x6000C77")]
		[Address(RVA = "0xD12120", Offset = "0xD12120", VA = "0xD12120")]
		public CombinedResult()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001F6")]
	public class CombineInstanceIndexes
	{
		[Token(Token = "0x4000CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int firstVertexIndex;

		[Token(Token = "0x4000CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int vertexCount;

		[Token(Token = "0x4000CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int firstTriangleIndex;

		[Token(Token = "0x4000CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int triangleCount;

		[Token(Token = "0x4000CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool showCombinedInstanceIndex;

		[Token(Token = "0x6000C78")]
		[Address(RVA = "0xD10264", Offset = "0xD10264", VA = "0xD10264")]
		public CombineInstanceIndexes(Mesh mesh, int vertexIndex, int trianglesIndex)
		{
		}

		[Token(Token = "0x6000C79")]
		[Address(RVA = "0xD102CC", Offset = "0xD102CC", VA = "0xD102CC")]
		public void MoveIndexes(int vertexOffset_p, int triangleOffset_p)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001F7")]
	public class CombinedMaterial
	{
		[Token(Token = "0x4000CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Material material;

		[Token(Token = "0x4000CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Rect[] uvs;

		[Token(Token = "0x4000CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Rect[] uvs2;

		[Token(Token = "0x4000CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<float> scaleFactors;

		[Token(Token = "0x4000CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<Rect> meshUVBounds;

		[Token(Token = "0x4000CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool isOriginalMaterial;

		[Token(Token = "0x4000CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int displayedIndex;

		[Token(Token = "0x4000CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool showCombinedMaterial;

		[Token(Token = "0x4000CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool showUVs;

		[Token(Token = "0x4000CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		public bool showMeshUVBounds;

		[Token(Token = "0x6000C7A")]
		[Address(RVA = "0xD102E8", Offset = "0xD102E8", VA = "0xD102E8")]
		public CombinedMaterial()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001F8")]
	public class MeshCombined
	{
		[Token(Token = "0x4000CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<string> names;

		[Token(Token = "0x4000CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<int> instanceIds;

		[Token(Token = "0x4000CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<CombineInstanceIndexes> indexes;

		[Token(Token = "0x4000CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool showMeshCombined;

		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0xD10A54", Offset = "0xD10A54", VA = "0xD10A54")]
		public Mesh RemoveMesh(int instanceID, Mesh mesh)
		{
			return null;
		}

		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0xD11AD0", Offset = "0xD11AD0", VA = "0xD11AD0")]
		public MeshCombined()
		{
		}
	}
	[Token(Token = "0x20001F9")]
	public class DefaultColoredTexture
	{
		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0xD12250", Offset = "0xD12250", VA = "0xD12250")]
		public static Color GetDefaultTextureColor(string textureProperty)
		{
			return default(Color);
		}

		[Token(Token = "0x6000C7E")]
		[Address(RVA = "0xD123DC", Offset = "0xD123DC", VA = "0xD123DC")]
		public DefaultColoredTexture()
		{
		}
	}
	[Token(Token = "0x20001FA")]
	public class Logger
	{
		[Token(Token = "0x20003EB")]
		public enum LogLevel
		{
			[Token(Token = "0x40013E2")]
			LOG_DEBUG,
			[Token(Token = "0x40013E3")]
			LOG_WARNING,
			[Token(Token = "0x40013E4")]
			LOG_ERROR
		}

		[Token(Token = "0x4000CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string _logs;

		[Token(Token = "0x4000CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Logger _instance;

		[Token(Token = "0x4000CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static bool _display;

		[Token(Token = "0x17000142")]
		public static Logger Instance
		{
			[Token(Token = "0x6000C7F")]
			[Address(RVA = "0xD10788", Offset = "0xD10788", VA = "0xD10788")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000143")]
		public static bool Display
		{
			[Token(Token = "0x6000C80")]
			[Address(RVA = "0xD12674", Offset = "0xD12674", VA = "0xD12674")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C81")]
			[Address(RVA = "0xD126DC", Offset = "0xD126DC", VA = "0xD126DC")]
			set
			{
			}
		}

		[Token(Token = "0x6000C82")]
		[Address(RVA = "0xD10848", Offset = "0xD10848", VA = "0xD10848")]
		public void AddLog(string tag, string log, LogLevel level = LogLevel.LOG_DEBUG, bool display = true)
		{
		}

		[Token(Token = "0x6000C83")]
		[Address(RVA = "0xD1274C", Offset = "0xD1274C", VA = "0xD1274C")]
		public void ClearLogs()
		{
		}

		[Token(Token = "0x6000C84")]
		[Address(RVA = "0xD1279C", Offset = "0xD1279C", VA = "0xD1279C")]
		public string GetLogs()
		{
			return null;
		}

		[Token(Token = "0x6000C85")]
		[Address(RVA = "0xD1261C", Offset = "0xD1261C", VA = "0xD1261C")]
		public Logger()
		{
		}
	}
	[Token(Token = "0x20001FB")]
	public class MaterialToCombine
	{
		[Token(Token = "0x4000CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Material _material;

		[Token(Token = "0x4000CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Rect _uvBounds;

		[Token(Token = "0x4000CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int _combinedIndex;

		[Token(Token = "0x4000CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int _index;

		[Token(Token = "0x6000C87")]
		[Address(RVA = "0xD129C0", Offset = "0xD129C0", VA = "0xD129C0")]
		public Rect GetScaledAndOffsetedUVBounds()
		{
			return default(Rect);
		}

		[Token(Token = "0x6000C88")]
		[Address(RVA = "0xD12B30", Offset = "0xD12B30", VA = "0xD12B30")]
		public MaterialToCombine()
		{
		}
	}
	[Token(Token = "0x20001FC")]
	public enum MeshOutput
	{
		[Token(Token = "0x4000CBD")]
		Mesh,
		[Token(Token = "0x4000CBE")]
		SkinnedMesh
	}
	[Token(Token = "0x20001FD")]
	internal class MeshRendererAndOriginalMaterials
	{
		[Token(Token = "0x4000CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<MeshRenderer> _meshRenderers;

		[Token(Token = "0x4000CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<SkinnedMeshRenderer> _skinnedMeshRenderers;

		[Token(Token = "0x4000CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Material[]> _originalMaterials;

		[Token(Token = "0x4000CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Material[]> _originalskinnedMeshMaterials;

		[Token(Token = "0x4000CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<GameObject> _splittedGameObject;

		[Token(Token = "0x6000C89")]
		[Address(RVA = "0xD17428", Offset = "0xD17428", VA = "0xD17428")]
		public MeshRendererAndOriginalMaterials()
		{
		}
	}
	[Token(Token = "0x20001FE")]
	public class ObjSaver
	{
		[Token(Token = "0x4000CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int _StartIndex;

		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0xD17614", Offset = "0xD17614", VA = "0xD17614")]
		public static void SaveObjFile(GameObject obj, bool makeSubmeshes, string floderPath)
		{
		}

		[Token(Token = "0x6000C8B")]
		[Address(RVA = "0xD17D4C", Offset = "0xD17D4C", VA = "0xD17D4C")]
		private static void WriteToFile(string s, string filename)
		{
		}

		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0xD17A2C", Offset = "0xD17A2C", VA = "0xD17A2C")]
		private static string processTransform(Transform t, bool makeSubmeshes)
		{
			return null;
		}

		[Token(Token = "0x6000C8D")]
		[Address(RVA = "0xD17E84", Offset = "0xD17E84", VA = "0xD17E84")]
		public static string MeshToString(Mesh m, Material[] mats, Transform t)
		{
			return null;
		}

		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0xD18578", Offset = "0xD18578", VA = "0xD18578")]
		public ObjSaver()
		{
		}
	}
	[Token(Token = "0x20001FF")]
	public class Saver
	{
		[Token(Token = "0x6000C90")]
		[Address(RVA = "0xD18584", Offset = "0xD18584", VA = "0xD18584")]
		public Saver()
		{
		}
	}
	[Token(Token = "0x2000200")]
	public class SubmeshSplitter
	{
		[Token(Token = "0x6000C91")]
		[Address(RVA = "0xD133A8", Offset = "0xD133A8", VA = "0xD133A8")]
		public static Mesh ExtractSubmesh(Mesh mesh, int index)
		{
			return null;
		}

		[Token(Token = "0x6000C92")]
		[Address(RVA = "0xD1880C", Offset = "0xD1880C", VA = "0xD1880C")]
		public static MeshRenderer SplitSubmeshes(MeshFilter meshFilter, int[] subMeshesIndex, int index)
		{
			return null;
		}

		[Token(Token = "0x6000C93")]
		[Address(RVA = "0xD18C84", Offset = "0xD18C84", VA = "0xD18C84")]
		public static SkinnedMeshRenderer SplitSubmeshes(SkinnedMeshRenderer skinnedMesh, int[] subMeshesIndex, int index)
		{
			return null;
		}

		[Token(Token = "0x6000C94")]
		[Address(RVA = "0xD1858C", Offset = "0xD1858C", VA = "0xD1858C")]
		private static Mesh CreateMeshFromSubmesh(Mesh mesh, int[] subMeshesIndex, int index)
		{
			return null;
		}

		[Token(Token = "0x6000C95")]
		[Address(RVA = "0xD18AC4", Offset = "0xD18AC4", VA = "0xD18AC4")]
		private static GameObject GenerateGameObject(Transform parent, bool skinnedMesh, string name_p, Mesh newMesh_p, Material[] mat)
		{
			return null;
		}

		[Token(Token = "0x6000C96")]
		[Address(RVA = "0xD18F28", Offset = "0xD18F28", VA = "0xD18F28")]
		public SubmeshSplitter()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000201")]
	public class GeneralSettings
	{
		[Token(Token = "0x4000CC5")]
		public const string DEFAULT_SESSION_NAME = "combinedSession";

		[Token(Token = "0x4000CC6")]
		public const string DEFAULT_VERSION_NUMBER = "UNKNOWN";

		[Token(Token = "0x4000CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string _version_number;

		[Token(Token = "0x4000CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string _session_name;

		[Token(Token = "0x4000CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _combine_at_runtime;

		[Token(Token = "0x4000CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject _target_game_object;

		[Token(Token = "0x17000144")]
		public string versionNumber
		{
			[Token(Token = "0x6000C97")]
			[Address(RVA = "0xD123E4", Offset = "0xD123E4", VA = "0xD123E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C98")]
			[Address(RVA = "0xD123EC", Offset = "0xD123EC", VA = "0xD123EC")]
			set
			{
			}
		}

		[Token(Token = "0x17000145")]
		public string sessionName
		{
			[Token(Token = "0x6000C99")]
			[Address(RVA = "0xD12470", Offset = "0xD12470", VA = "0xD12470")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C9A")]
			[Address(RVA = "0xD12478", Offset = "0xD12478", VA = "0xD12478")]
			set
			{
			}
		}

		[Token(Token = "0x17000146")]
		public bool combineAtRuntime
		{
			[Token(Token = "0x6000C9B")]
			[Address(RVA = "0xD124FC", Offset = "0xD124FC", VA = "0xD124FC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C9C")]
			[Address(RVA = "0xD12504", Offset = "0xD12504", VA = "0xD12504")]
			set
			{
			}
		}

		[Token(Token = "0x17000147")]
		public GameObject targetGameObject
		{
			[Token(Token = "0x6000C9D")]
			[Address(RVA = "0xD12524", Offset = "0xD12524", VA = "0xD12524")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C9E")]
			[Address(RVA = "0xD1252C", Offset = "0xD1252C", VA = "0xD1252C")]
			set
			{
			}
		}

		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0xD125B4", Offset = "0xD125B4", VA = "0xD125B4")]
		public GeneralSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000202")]
	public class TextureSettings
	{
		[Token(Token = "0x4000CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public List<int> textureAtlasSizesValues;

		[Token(Token = "0x4000CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<string> textureAtlasSizesLabels;

		[Token(Token = "0x4000CCD")]
		public const float MIN_TILING_FACTOR = 1f;

		[Token(Token = "0x4000CCE")]
		public const float MAX_TILING_FACTOR = 2f;

		[Token(Token = "0x4000CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int _atlas_size;

		[Token(Token = "0x4000CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6E6324", Offset = "0x6E6324")]
		private float _tiling_factor;

		[Token(Token = "0x4000CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int _padding;

		[Token(Token = "0x17000148")]
		public int atlasSize
		{
			[Token(Token = "0x6000CA0")]
			[Address(RVA = "0xD24EB8", Offset = "0xD24EB8", VA = "0xD24EB8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000CA1")]
			[Address(RVA = "0xD21A30", Offset = "0xD21A30", VA = "0xD21A30")]
			set
			{
			}
		}

		[Token(Token = "0x17000149")]
		public float tilingFactor
		{
			[Token(Token = "0x6000CA2")]
			[Address(RVA = "0xD24EC0", Offset = "0xD24EC0", VA = "0xD24EC0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000CA3")]
			[Address(RVA = "0xD21AC4", Offset = "0xD21AC4", VA = "0xD21AC4")]
			set
			{
			}
		}

		[Token(Token = "0x1700014A")]
		public int padding
		{
			[Token(Token = "0x6000CA4")]
			[Address(RVA = "0xD24EC8", Offset = "0xD24EC8", VA = "0xD24EC8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000CA5")]
			[Address(RVA = "0xD21AB0", Offset = "0xD21AB0", VA = "0xD21AB0")]
			set
			{
			}
		}

		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0xD21BA8", Offset = "0xD21BA8", VA = "0xD21BA8")]
		public TextureSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000203")]
	public class MaterialSettings
	{
		[Token(Token = "0x4000CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool _multipleMaterialsMode;

		[Token(Token = "0x4000CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Material> multiMaterials0;

		[Token(Token = "0x4000CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Material> multiMaterials1;

		[Token(Token = "0x4000CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Material> multiMaterials2;

		[Token(Token = "0x4000CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<Material> multiMaterials3;

		[Token(Token = "0x4000CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<Material> multiMaterials4;

		[Token(Token = "0x4000CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<Material> multiMaterials5;

		[Token(Token = "0x4000CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<Material> multiMaterials6;

		[Token(Token = "0x4000CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<Material> multiMaterials7;

		[Token(Token = "0x4000CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<Material> multiMaterials8;

		[Token(Token = "0x4000CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<Material> multiMaterials9;

		[Token(Token = "0x4000CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<Material> multiMaterials10;

		[Token(Token = "0x4000CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int _multiple_materials_count;

		[Token(Token = "0x4000CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public List<string> _customShaderProperties;

		[Token(Token = "0x1700014B")]
		public int multipleMaterialsCount
		{
			[Token(Token = "0x6000CA7")]
			[Address(RVA = "0xD127F8", Offset = "0xD127F8", VA = "0xD127F8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000CA8")]
			[Address(RVA = "0xD12800", Offset = "0xD12800", VA = "0xD12800")]
			set
			{
			}
		}

		[Token(Token = "0x1700014C")]
		public List<string> customShaderProperties
		{
			[Token(Token = "0x6000CA9")]
			[Address(RVA = "0xD12814", Offset = "0xD12814", VA = "0xD12814")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CAA")]
			[Address(RVA = "0xD1281C", Offset = "0xD1281C", VA = "0xD1281C")]
			set
			{
			}
		}

		[Token(Token = "0x1700014D")]
		public bool multipleMaterialsMode
		{
			[Token(Token = "0x6000CAB")]
			[Address(RVA = "0xD12830", Offset = "0xD12830", VA = "0xD12830")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000CAC")]
			[Address(RVA = "0xD12838", Offset = "0xD12838", VA = "0xD12838")]
			set
			{
			}
		}

		[Token(Token = "0x6000CAD")]
		[Address(RVA = "0xD12858", Offset = "0xD12858", VA = "0xD12858")]
		public MaterialSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000204")]
	public class MeshSettings
	{
		[Token(Token = "0x20003EC")]
		public enum MeshOutputType
		{
			[Token(Token = "0x40013E6")]
			Mesh,
			[Token(Token = "0x40013E7")]
			SkinnedMesh
		}

		[Token(Token = "0x4000CE0")]
		public const int MIN_MESHS = 0;

		[Token(Token = "0x4000CE1")]
		public const int MAX_MESHS = 65534;

		[Token(Token = "0x4000CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool _manage_lods;

		[Token(Token = "0x4000CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private int _managed_lod_level;

		[Token(Token = "0x4000CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _combine_meshs;

		[Token(Token = "0x4000CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _generate_uv2;

		[Token(Token = "0x4000CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private MeshOutputType _mesh_output;

		[Token(Token = "0x4000CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6E633C", Offset = "0x6E633C")]
		private int _max_vertices_count;

		[Token(Token = "0x1700014E")]
		public int managedLODLevel
		{
			[Token(Token = "0x6000CAE")]
			[Address(RVA = "0xD17530", Offset = "0xD17530", VA = "0xD17530")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000CAF")]
			[Address(RVA = "0xD17538", Offset = "0xD17538", VA = "0xD17538")]
			set
			{
			}
		}

		[Token(Token = "0x1700014F")]
		public bool manageLODs
		{
			[Token(Token = "0x6000CB0")]
			[Address(RVA = "0xD1754C", Offset = "0xD1754C", VA = "0xD1754C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000CB1")]
			[Address(RVA = "0xD17554", Offset = "0xD17554", VA = "0xD17554")]
			set
			{
			}
		}

		[Token(Token = "0x17000150")]
		public bool combineMeshs
		{
			[Token(Token = "0x6000CB2")]
			[Address(RVA = "0xD17574", Offset = "0xD17574", VA = "0xD17574")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000CB3")]
			[Address(RVA = "0xD1757C", Offset = "0xD1757C", VA = "0xD1757C")]
			set
			{
			}
		}

		[Token(Token = "0x17000151")]
		public bool generateUv2
		{
			[Token(Token = "0x6000CB4")]
			[Address(RVA = "0xD1759C", Offset = "0xD1759C", VA = "0xD1759C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000CB5")]
			[Address(RVA = "0xD175A4", Offset = "0xD175A4", VA = "0xD175A4")]
			set
			{
			}
		}

		[Token(Token = "0x17000152")]
		public MeshOutputType meshOutputType
		{
			[Token(Token = "0x6000CB6")]
			[Address(RVA = "0xD175C4", Offset = "0xD175C4", VA = "0xD175C4")]
			get
			{
				return default(MeshOutputType);
			}
			[Token(Token = "0x6000CB7")]
			[Address(RVA = "0xD175CC", Offset = "0xD175CC", VA = "0xD175CC")]
			set
			{
			}
		}

		[Token(Token = "0x17000153")]
		public int maxVerticesCount
		{
			[Token(Token = "0x6000CB8")]
			[Address(RVA = "0xD175E0", Offset = "0xD175E0", VA = "0xD175E0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000CB9")]
			[Address(RVA = "0xD175E8", Offset = "0xD175E8", VA = "0xD175E8")]
			set
			{
			}
		}

		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0xD175FC", Offset = "0xD175FC", VA = "0xD175FC")]
		public MeshSettings()
		{
		}
	}
	[Token(Token = "0x2000205")]
	public class SuperCombinerSettings : ScriptableObject
	{
		[Token(Token = "0x4000CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GeneralSettings _general_settings;

		[Token(Token = "0x4000CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextureSettings _texture_settings;

		[Token(Token = "0x4000CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MaterialSettings _material_settings;

		[Token(Token = "0x4000CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MeshSettings _mesh_settings;

		[Token(Token = "0x17000154")]
		public GeneralSettings generalSettings
		{
			[Token(Token = "0x6000CBC")]
			[Address(RVA = "0xD21DD4", Offset = "0xD21DD4", VA = "0xD21DD4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CBD")]
			[Address(RVA = "0xD21DDC", Offset = "0xD21DDC", VA = "0xD21DDC")]
			set
			{
			}
		}

		[Token(Token = "0x17000155")]
		public TextureSettings textureSettings
		{
			[Token(Token = "0x6000CBE")]
			[Address(RVA = "0xD21DF0", Offset = "0xD21DF0", VA = "0xD21DF0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CBF")]
			[Address(RVA = "0xD21DF8", Offset = "0xD21DF8", VA = "0xD21DF8")]
			set
			{
			}
		}

		[Token(Token = "0x17000156")]
		public MaterialSettings materialSettings
		{
			[Token(Token = "0x6000CC0")]
			[Address(RVA = "0xD21E0C", Offset = "0xD21E0C", VA = "0xD21E0C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CC1")]
			[Address(RVA = "0xD21E14", Offset = "0xD21E14", VA = "0xD21E14")]
			set
			{
			}
		}

		[Token(Token = "0x17000157")]
		public MeshSettings meshSettings
		{
			[Token(Token = "0x6000CC2")]
			[Address(RVA = "0xD21E28", Offset = "0xD21E28", VA = "0xD21E28")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CC3")]
			[Address(RVA = "0xD21E30", Offset = "0xD21E30", VA = "0xD21E30")]
			set
			{
			}
		}

		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0xD21AD8", Offset = "0xD21AD8", VA = "0xD21AD8")]
		public SuperCombinerSettings()
		{
		}
	}
	[Token(Token = "0x2000206")]
	public struct TextureImportSettings
	{
		[Token(Token = "0x4000CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool isReadable;

		[Token(Token = "0x4000CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public bool isNormal;
	}
	[Token(Token = "0x2000207")]
	public class TextureScale
	{
		[Token(Token = "0x20003ED")]
		public class ThreadData
		{
			[Token(Token = "0x40013E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int _start;

			[Token(Token = "0x40013E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int _end;

			[Token(Token = "0x60018AB")]
			[Address(RVA = "0xD24948", Offset = "0xD24948", VA = "0xD24948")]
			public ThreadData(int s, int e)
			{
			}
		}

		[Token(Token = "0x4000CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Color[] _texColors;

		[Token(Token = "0x4000CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Color[] _newColors;

		[Token(Token = "0x4000CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static int _w;

		[Token(Token = "0x4000CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static float _ratioX;

		[Token(Token = "0x4000CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static float _ratioY;

		[Token(Token = "0x4000CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static int _w2;

		[Token(Token = "0x4000CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static int _finishCount;

		[Token(Token = "0x4000CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Mutex _mutex;

		[Token(Token = "0x6000CC4")]
		[Address(RVA = "0xD24550", Offset = "0xD24550", VA = "0xD24550")]
		public static void Point(Texture2D tex, int newWidth, int newHeight)
		{
		}

		[Token(Token = "0x6000CC5")]
		[Address(RVA = "0xD234B0", Offset = "0xD234B0", VA = "0xD234B0")]
		public static void Bilinear(Texture2D tex, int newWidth, int newHeight)
		{
		}

		[Token(Token = "0x6000CC6")]
		[Address(RVA = "0xD24558", Offset = "0xD24558", VA = "0xD24558")]
		private static void ThreadedScale(Texture2D tex, int newWidth, int newHeight, bool useBilinear)
		{
		}

		[Token(Token = "0x6000CC7")]
		[Address(RVA = "0xD24980", Offset = "0xD24980", VA = "0xD24980")]
		public static void BilinearScale(object obj)
		{
		}

		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0xD24CB4", Offset = "0xD24CB4", VA = "0xD24CB4")]
		public static void PointScale(object obj)
		{
		}

		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0xD24E4C", Offset = "0xD24E4C", VA = "0xD24E4C")]
		private static Color ColorLerpUnclamped(Color c1, Color c2, float value)
		{
			return default(Color);
		}

		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0xD24EB0", Offset = "0xD24EB0", VA = "0xD24EB0")]
		public TextureScale()
		{
		}
	}
}
namespace EZCameraShake
{
	[Token(Token = "0x2000208")]
	public enum CameraShakeState
	{
		[Token(Token = "0x4000CF7")]
		FadingIn,
		[Token(Token = "0x4000CF8")]
		FadingOut,
		[Token(Token = "0x4000CF9")]
		Sustained,
		[Token(Token = "0x4000CFA")]
		Inactive
	}
	[Token(Token = "0x2000209")]
	public class CameraShakeInstance
	{
		[Token(Token = "0x4000CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float Magnitude;

		[Token(Token = "0x4000CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float Roughness;

		[Token(Token = "0x4000CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 PositionInfluence;

		[Token(Token = "0x4000CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 RotationInfluence;

		[Token(Token = "0x4000CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool DeleteOnInactive;

		[Token(Token = "0x4000D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float roughMod;

		[Token(Token = "0x4000D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float magnMod;

		[Token(Token = "0x4000D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float fadeOutDuration;

		[Token(Token = "0x4000D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float fadeInDuration;

		[Token(Token = "0x4000D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool sustain;

		[Token(Token = "0x4000D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float currentFadeTime;

		[Token(Token = "0x4000D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float tick;

		[Token(Token = "0x4000D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 amt;

		[Token(Token = "0x17000158")]
		public float ScaleRoughness
		{
			[Token(Token = "0x6000CD0")]
			[Address(RVA = "0x979EBC", Offset = "0x979EBC", VA = "0x979EBC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000CD1")]
			[Address(RVA = "0x979EC4", Offset = "0x979EC4", VA = "0x979EC4")]
			set
			{
			}
		}

		[Token(Token = "0x17000159")]
		public float ScaleMagnitude
		{
			[Token(Token = "0x6000CD2")]
			[Address(RVA = "0x979ECC", Offset = "0x979ECC", VA = "0x979ECC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000CD3")]
			[Address(RVA = "0x979ED4", Offset = "0x979ED4", VA = "0x979ED4")]
			set
			{
			}
		}

		[Token(Token = "0x1700015A")]
		public float NormalizedFadeTime
		{
			[Token(Token = "0x6000CD4")]
			[Address(RVA = "0x979EDC", Offset = "0x979EDC", VA = "0x979EDC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700015B")]
		private bool IsShaking
		{
			[Token(Token = "0x6000CD5")]
			[Address(RVA = "0x979EE4", Offset = "0x979EE4", VA = "0x979EE4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700015C")]
		private bool IsFadingOut
		{
			[Token(Token = "0x6000CD6")]
			[Address(RVA = "0x979F08", Offset = "0x979F08", VA = "0x979F08")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700015D")]
		private bool IsFadingIn
		{
			[Token(Token = "0x6000CD7")]
			[Address(RVA = "0x979F28", Offset = "0x979F28", VA = "0x979F28")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700015E")]
		public CameraShakeState CurrentState
		{
			[Token(Token = "0x6000CD8")]
			[Address(RVA = "0x979F58", Offset = "0x979F58", VA = "0x979F58")]
			get
			{
				return default(CameraShakeState);
			}
		}

		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0x979BB8", Offset = "0x979BB8", VA = "0x979BB8")]
		public CameraShakeInstance(float magnitude, float roughness, float fadeInTime, float fadeOutTime)
		{
		}

		[Token(Token = "0x6000CCC")]
		[Address(RVA = "0x979C48", Offset = "0x979C48", VA = "0x979C48")]
		public CameraShakeInstance(float magnitude, float roughness)
		{
		}

		[Token(Token = "0x6000CCD")]
		[Address(RVA = "0x979CAC", Offset = "0x979CAC", VA = "0x979CAC")]
		public Vector3 UpdateShake()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000CCE")]
		[Address(RVA = "0x979E7C", Offset = "0x979E7C", VA = "0x979E7C")]
		public void StartFadeOut(float fadeOutTime)
		{
		}

		[Token(Token = "0x6000CCF")]
		[Address(RVA = "0x979E98", Offset = "0x979E98", VA = "0x979E98")]
		public void StartFadeIn(float fadeInTime)
		{
		}
	}
	[Token(Token = "0x200020A")]
	public static class CameraShakePresets
	{
		[Token(Token = "0x1700015F")]
		public static CameraShakeInstance Bump
		{
			[Token(Token = "0x6000CD9")]
			[Address(RVA = "0x979FC4", Offset = "0x979FC4", VA = "0x979FC4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000160")]
		public static CameraShakeInstance Explosion
		{
			[Token(Token = "0x6000CDA")]
			[Address(RVA = "0x97A088", Offset = "0x97A088", VA = "0x97A088")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000161")]
		public static CameraShakeInstance Earthquake
		{
			[Token(Token = "0x6000CDB")]
			[Address(RVA = "0x97A16C", Offset = "0x97A16C", VA = "0x97A16C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000162")]
		public static CameraShakeInstance BadTrip
		{
			[Token(Token = "0x6000CDC")]
			[Address(RVA = "0x97A254", Offset = "0x97A254", VA = "0x97A254")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000163")]
		public static CameraShakeInstance HandheldCamera
		{
			[Token(Token = "0x6000CDD")]
			[Address(RVA = "0x97A33C", Offset = "0x97A33C", VA = "0x97A33C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000164")]
		public static CameraShakeInstance Vibration
		{
			[Token(Token = "0x6000CDE")]
			[Address(RVA = "0x97A414", Offset = "0x97A414", VA = "0x97A414")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000165")]
		public static CameraShakeInstance RoughDriving
		{
			[Token(Token = "0x6000CDF")]
			[Address(RVA = "0x97A4F4", Offset = "0x97A4F4", VA = "0x97A4F4")]
			get
			{
				return null;
			}
		}
	}
	[Token(Token = "0x200020B")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6E1414", Offset = "0x6E1414")]
	public class CameraShaker : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static CameraShaker Instance;

		[Token(Token = "0x4000D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<string, CameraShaker> instanceList;

		[Token(Token = "0x4000D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 DefaultPosInfluence;

		[Token(Token = "0x4000D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 DefaultRotInfluence;

		[Token(Token = "0x4000D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 posAddShake;

		[Token(Token = "0x4000D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 rotAddShake;

		[Token(Token = "0x4000D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<CameraShakeInstance> cameraShakeInstances;

		[Token(Token = "0x17000166")]
		public List<CameraShakeInstance> ShakeInstances
		{
			[Token(Token = "0x6000CEB")]
			[Address(RVA = "0x97AE10", Offset = "0x97AE10", VA = "0x97AE10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0x97A5A4", Offset = "0x97A5A4", VA = "0x97A5A4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000CE1")]
		[Address(RVA = "0x97A64C", Offset = "0x97A64C", VA = "0x97A64C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0x97A6C8", Offset = "0x97A6C8", VA = "0x97A6C8")]
		private void OnLevelLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0x97A720", Offset = "0x97A720", VA = "0x97A720")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0x97A7D0", Offset = "0x97A7D0", VA = "0x97A7D0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0x97A9F0", Offset = "0x97A9F0", VA = "0x97A9F0")]
		public static CameraShaker GetInstance(string name)
		{
			return null;
		}

		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0x97AAF0", Offset = "0x97AAF0", VA = "0x97AAF0")]
		public CameraShakeInstance Shake(CameraShakeInstance shake)
		{
			return null;
		}

		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0x978168", Offset = "0x978168", VA = "0x978168")]
		public CameraShakeInstance ShakeOnce(float magnitude, float roughness, float fadeInTime, float fadeOutTime)
		{
			return null;
		}

		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0x97AB60", Offset = "0x97AB60", VA = "0x97AB60")]
		public CameraShakeInstance ShakeOnce(float magnitude, float roughness, float fadeInTime, float fadeOutTime, Vector3 posInfluence, Vector3 rotInfluence)
		{
			return null;
		}

		[Token(Token = "0x6000CE9")]
		[Address(RVA = "0x97AC40", Offset = "0x97AC40", VA = "0x97AC40")]
		public CameraShakeInstance StartShake(float magnitude, float roughness, float fadeInTime)
		{
			return null;
		}

		[Token(Token = "0x6000CEA")]
		[Address(RVA = "0x97AD24", Offset = "0x97AD24", VA = "0x97AD24")]
		public CameraShakeInstance StartShake(float magnitude, float roughness, float fadeInTime, Vector3 posInfluence, Vector3 rotInfluence)
		{
			return null;
		}

		[Token(Token = "0x6000CEC")]
		[Address(RVA = "0x97AE80", Offset = "0x97AE80", VA = "0x97AE80")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000CED")]
		[Address(RVA = "0x97AF20", Offset = "0x97AF20", VA = "0x97AF20")]
		public CameraShaker()
		{
		}
	}
	[Token(Token = "0x200020C")]
	public class CameraUtilities
	{
		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0x97B074", Offset = "0x97B074", VA = "0x97B074")]
		public static Vector3 SmoothDampEuler(Vector3 current, Vector3 target, ref Vector3 velocity, float smoothTime)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0x97A9E0", Offset = "0x97A9E0", VA = "0x97A9E0")]
		public static Vector3 MultiplyVectors(Vector3 v, Vector3 w)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0x97B16C", Offset = "0x97B16C", VA = "0x97B16C")]
		public CameraUtilities()
		{
		}
	}
}
namespace Photon
{
	[Token(Token = "0x200020D")]
	public class MonoBehaviour : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PhotonView pvCache;

		[Token(Token = "0x17000167")]
		public PhotonView photonView
		{
			[Token(Token = "0x6000CF2")]
			[Address(RVA = "0xA26AE0", Offset = "0xA26AE0", VA = "0xA26AE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CF3")]
		[Address(RVA = "0xA26B70", Offset = "0xA26B70", VA = "0xA26B70")]
		public MonoBehaviour()
		{
		}
	}
	[Token(Token = "0x200020E")]
	public class PunBehaviour : MonoBehaviour, IPunCallbacks
	{
		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0xA26B78", Offset = "0xA26B78", VA = "0xA26B78", Slot = "33")]
		public virtual void OnConnectedToPhoton()
		{
		}

		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0xA26B7C", Offset = "0xA26B7C", VA = "0xA26B7C", Slot = "34")]
		public virtual void OnLeftRoom()
		{
		}

		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0xA26B80", Offset = "0xA26B80", VA = "0xA26B80", Slot = "35")]
		public virtual void OnMasterClientSwitched(PhotonPlayer newMasterClient)
		{
		}

		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0xA26B84", Offset = "0xA26B84", VA = "0xA26B84", Slot = "36")]
		public virtual void OnPhotonCreateRoomFailed(object[] codeAndMsg)
		{
		}

		[Token(Token = "0x6000CF8")]
		[Address(RVA = "0xA26B88", Offset = "0xA26B88", VA = "0xA26B88", Slot = "37")]
		public virtual void OnPhotonJoinRoomFailed(object[] codeAndMsg)
		{
		}

		[Token(Token = "0x6000CF9")]
		[Address(RVA = "0xA26B8C", Offset = "0xA26B8C", VA = "0xA26B8C", Slot = "38")]
		public virtual void OnCreatedRoom()
		{
		}

		[Token(Token = "0x6000CFA")]
		[Address(RVA = "0xA26B90", Offset = "0xA26B90", VA = "0xA26B90", Slot = "39")]
		public virtual void OnJoinedLobby()
		{
		}

		[Token(Token = "0x6000CFB")]
		[Address(RVA = "0xA26B94", Offset = "0xA26B94", VA = "0xA26B94", Slot = "40")]
		public virtual void OnLeftLobby()
		{
		}

		[Token(Token = "0x6000CFC")]
		[Address(RVA = "0xA26B98", Offset = "0xA26B98", VA = "0xA26B98", Slot = "41")]
		public virtual void OnFailedToConnectToPhoton(DisconnectCause cause)
		{
		}

		[Token(Token = "0x6000CFD")]
		[Address(RVA = "0xA26B9C", Offset = "0xA26B9C", VA = "0xA26B9C", Slot = "42")]
		public virtual void OnDisconnectedFromPhoton()
		{
		}

		[Token(Token = "0x6000CFE")]
		[Address(RVA = "0xA26BA0", Offset = "0xA26BA0", VA = "0xA26BA0", Slot = "43")]
		public virtual void OnConnectionFail(DisconnectCause cause)
		{
		}

		[Token(Token = "0x6000CFF")]
		[Address(RVA = "0xA26BA4", Offset = "0xA26BA4", VA = "0xA26BA4", Slot = "44")]
		public virtual void OnPhotonInstantiate(PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6000D00")]
		[Address(RVA = "0xA26BA8", Offset = "0xA26BA8", VA = "0xA26BA8", Slot = "45")]
		public virtual void OnReceivedRoomListUpdate()
		{
		}

		[Token(Token = "0x6000D01")]
		[Address(RVA = "0xA26BAC", Offset = "0xA26BAC", VA = "0xA26BAC", Slot = "46")]
		public virtual void OnJoinedRoom()
		{
		}

		[Token(Token = "0x6000D02")]
		[Address(RVA = "0xA26BB0", Offset = "0xA26BB0", VA = "0xA26BB0", Slot = "47")]
		public virtual void OnPhotonPlayerConnected(PhotonPlayer newPlayer)
		{
		}

		[Token(Token = "0x6000D03")]
		[Address(RVA = "0xA26BB4", Offset = "0xA26BB4", VA = "0xA26BB4", Slot = "48")]
		public virtual void OnPhotonPlayerDisconnected(PhotonPlayer otherPlayer)
		{
		}

		[Token(Token = "0x6000D04")]
		[Address(RVA = "0xA26BB8", Offset = "0xA26BB8", VA = "0xA26BB8", Slot = "49")]
		public virtual void OnPhotonRandomJoinFailed(object[] codeAndMsg)
		{
		}

		[Token(Token = "0x6000D05")]
		[Address(RVA = "0xA26BBC", Offset = "0xA26BBC", VA = "0xA26BBC", Slot = "50")]
		public virtual void OnConnectedToMaster()
		{
		}

		[Token(Token = "0x6000D06")]
		[Address(RVA = "0xA26BC0", Offset = "0xA26BC0", VA = "0xA26BC0", Slot = "51")]
		public virtual void OnPhotonMaxCccuReached()
		{
		}

		[Token(Token = "0x6000D07")]
		[Address(RVA = "0xA26BC4", Offset = "0xA26BC4", VA = "0xA26BC4", Slot = "52")]
		public virtual void OnPhotonCustomRoomPropertiesChanged(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
		{
		}

		[Token(Token = "0x6000D08")]
		[Address(RVA = "0xA26BC8", Offset = "0xA26BC8", VA = "0xA26BC8", Slot = "53")]
		public virtual void OnPhotonPlayerPropertiesChanged(object[] playerAndUpdatedProps)
		{
		}

		[Token(Token = "0x6000D09")]
		[Address(RVA = "0xA26BCC", Offset = "0xA26BCC", VA = "0xA26BCC", Slot = "54")]
		public virtual void OnUpdatedFriendList()
		{
		}

		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0xA26BD0", Offset = "0xA26BD0", VA = "0xA26BD0", Slot = "55")]
		public virtual void OnCustomAuthenticationFailed(string debugMessage)
		{
		}

		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0xA26BD4", Offset = "0xA26BD4", VA = "0xA26BD4", Slot = "56")]
		public virtual void OnCustomAuthenticationResponse(Dictionary<string, object> data)
		{
		}

		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0xA26BD8", Offset = "0xA26BD8", VA = "0xA26BD8", Slot = "57")]
		public virtual void OnWebRpcResponse(OperationResponse response)
		{
		}

		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0xA26BDC", Offset = "0xA26BDC", VA = "0xA26BDC", Slot = "58")]
		public virtual void OnOwnershipRequest(object[] viewAndPlayer)
		{
		}

		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0xA26BE0", Offset = "0xA26BE0", VA = "0xA26BE0", Slot = "59")]
		public virtual void OnLobbyStatisticsUpdate()
		{
		}

		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0xA26BE4", Offset = "0xA26BE4", VA = "0xA26BE4", Slot = "60")]
		public virtual void OnPhotonPlayerActivityChanged(PhotonPlayer otherPlayer)
		{
		}

		[Token(Token = "0x6000D10")]
		[Address(RVA = "0xA26BE8", Offset = "0xA26BE8", VA = "0xA26BE8", Slot = "61")]
		public virtual void OnOwnershipTransfered(object[] viewAndPlayers)
		{
		}

		[Token(Token = "0x6000D11")]
		[Address(RVA = "0xA26920", Offset = "0xA26920", VA = "0xA26920")]
		public PunBehaviour()
		{
		}
	}
}
namespace ExitGames.UtilityScripts
{
	[Token(Token = "0x200020F")]
	public class PlayerRoomIndexing : PunBehaviour
	{
		[Token(Token = "0x20003EE")]
		public delegate void RoomIndexingChanged();

		[Token(Token = "0x4000D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static PlayerRoomIndexing instance;

		[Token(Token = "0x4000D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RoomIndexingChanged OnRoomIndexingChanged;

		[Token(Token = "0x4000D12")]
		public const string RoomPlayerIndexedProp = "PlayerIndexes";

		[Token(Token = "0x4000D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int[] _playerIds;

		[Token(Token = "0x4000D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private object _indexes;

		[Token(Token = "0x4000D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<int, int> _indexesLUT;

		[Token(Token = "0x4000D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<bool> _indexesPool;

		[Token(Token = "0x4000D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private PhotonPlayer _p;

		[Token(Token = "0x17000168")]
		public int[] PlayerIds
		{
			[Token(Token = "0x6000D12")]
			[Address(RVA = "0x980E20", Offset = "0x980E20", VA = "0x980E20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D13")]
		[Address(RVA = "0x980E28", Offset = "0x980E28", VA = "0x980E28")]
		public void Awake()
		{
		}

		[Token(Token = "0x6000D14")]
		[Address(RVA = "0x981180", Offset = "0x981180", VA = "0x981180", Slot = "46")]
		public override void OnJoinedRoom()
		{
		}

		[Token(Token = "0x6000D15")]
		[Address(RVA = "0x9817EC", Offset = "0x9817EC", VA = "0x9817EC", Slot = "34")]
		public override void OnLeftRoom()
		{
		}

		[Token(Token = "0x6000D16")]
		[Address(RVA = "0x9817F0", Offset = "0x9817F0", VA = "0x9817F0", Slot = "47")]
		public override void OnPhotonPlayerConnected(PhotonPlayer newPlayer)
		{
		}

		[Token(Token = "0x6000D17")]
		[Address(RVA = "0x981880", Offset = "0x981880", VA = "0x981880", Slot = "48")]
		public override void OnPhotonPlayerDisconnected(PhotonPlayer otherPlayer)
		{
		}

		[Token(Token = "0x6000D18")]
		[Address(RVA = "0x981AAC", Offset = "0x981AAC", VA = "0x981AAC", Slot = "52")]
		public override void OnPhotonCustomRoomPropertiesChanged(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
		{
		}

		[Token(Token = "0x6000D19")]
		[Address(RVA = "0x981B38", Offset = "0x981B38", VA = "0x981B38", Slot = "35")]
		public override void OnMasterClientSwitched(PhotonPlayer newMasterClient)
		{
		}

		[Token(Token = "0x6000D1A")]
		[Address(RVA = "0x981BB8", Offset = "0x981BB8", VA = "0x981BB8")]
		public int GetRoomIndex(PhotonPlayer player)
		{
			return default(int);
		}

		[Token(Token = "0x6000D1B")]
		[Address(RVA = "0x980F3C", Offset = "0x980F3C", VA = "0x980F3C")]
		private void SanitizeIndexing(bool forceIndexing = false)
		{
		}

		[Token(Token = "0x6000D1C")]
		[Address(RVA = "0x98158C", Offset = "0x98158C", VA = "0x98158C")]
		private void RefreshData()
		{
		}

		[Token(Token = "0x6000D1D")]
		[Address(RVA = "0x981224", Offset = "0x981224", VA = "0x981224")]
		private void AssignIndex(PhotonPlayer player)
		{
		}

		[Token(Token = "0x6000D1E")]
		[Address(RVA = "0x981910", Offset = "0x981910", VA = "0x981910")]
		private void UnAssignIndex(PhotonPlayer player)
		{
		}

		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0x981E64", Offset = "0x981E64", VA = "0x981E64")]
		public PlayerRoomIndexing()
		{
		}
	}
	[Token(Token = "0x2000210")]
	public static class PlayerRoomIndexingExtensions
	{
		[Token(Token = "0x6000D20")]
		[Address(RVA = "0x981EB4", Offset = "0x981EB4", VA = "0x981EB4")]
		public static int GetRoomIndex(this PhotonPlayer player)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000211")]
	public class ButtonInsideScrollList : UnityEngine.MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler
	{
		[Token(Token = "0x4000D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ScrollRect scrollRect;

		[Token(Token = "0x6000D21")]
		[Address(RVA = "0x980C64", Offset = "0x980C64", VA = "0x980C64")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D22")]
		[Address(RVA = "0x980CBC", Offset = "0x980CBC", VA = "0x980CBC", Slot = "4")]
		private void UnityEngine.EventSystems.IPointerDownHandler.OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000D23")]
		[Address(RVA = "0x980D6C", Offset = "0x980D6C", VA = "0x980D6C", Slot = "5")]
		private void UnityEngine.EventSystems.IPointerUpHandler.OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000D24")]
		[Address(RVA = "0x980E18", Offset = "0x980E18", VA = "0x980E18")]
		public ButtonInsideScrollList()
		{
		}
	}
	[Token(Token = "0x2000212")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x6E145C", Offset = "0x6E145C")]
	public class TextButtonTransition : UnityEngine.MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4000D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Text _text;

		[Token(Token = "0x4000D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color NormalColor;

		[Token(Token = "0x4000D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color HoverColor;

		[Token(Token = "0x6000D25")]
		[Address(RVA = "0x981FA4", Offset = "0x981FA4", VA = "0x981FA4")]
		public void Awake()
		{
		}

		[Token(Token = "0x6000D26")]
		[Address(RVA = "0x981FFC", Offset = "0x981FFC", VA = "0x981FFC", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000D27")]
		[Address(RVA = "0x98202C", Offset = "0x98202C", VA = "0x98202C", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000D28")]
		[Address(RVA = "0x98205C", Offset = "0x98205C", VA = "0x98205C")]
		public TextButtonTransition()
		{
		}
	}
	[Token(Token = "0x2000213")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x6E14C0", Offset = "0x6E14C0")]
	public class TextToggleIsOnTransition : UnityEngine.MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4000D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle toggle;

		[Token(Token = "0x4000D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text _text;

		[Token(Token = "0x4000D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color NormalOnColor;

		[Token(Token = "0x4000D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color NormalOffColor;

		[Token(Token = "0x4000D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Color HoverOnColor;

		[Token(Token = "0x4000D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Color HoverOffColor;

		[Token(Token = "0x4000D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool isHover;

		[Token(Token = "0x6000D29")]
		[Address(RVA = "0x9820A0", Offset = "0x9820A0", VA = "0x9820A0")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6000D2A")]
		[Address(RVA = "0x98215C", Offset = "0x98215C", VA = "0x98215C")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6000D2B")]
		[Address(RVA = "0x982200", Offset = "0x982200", VA = "0x982200")]
		public void OnValueChanged(bool isOn)
		{
		}

		[Token(Token = "0x6000D2C")]
		[Address(RVA = "0x98229C", Offset = "0x98229C", VA = "0x98229C", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000D2D")]
		[Address(RVA = "0x982314", Offset = "0x982314", VA = "0x982314", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000D2E")]
		[Address(RVA = "0x982388", Offset = "0x982388", VA = "0x982388")]
		public TextToggleIsOnTransition()
		{
		}
	}
}
namespace ExitGames.Client.Photon.Chat
{
	[Token(Token = "0x2000214")]
	public class ChatChannel
	{
		[Token(Token = "0x4000D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Name;

		[Token(Token = "0x4000D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly List<string> Senders;

		[Token(Token = "0x4000D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly List<object> Messages;

		[Token(Token = "0x4000D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int MessageLimit;

		[Token(Token = "0x4000D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E6358", Offset = "0x6E6358")]
		private bool <IsPrivate>k__BackingField;

		[Token(Token = "0x17000169")]
		public bool IsPrivate
		{
			[Token(Token = "0x6000D2F")]
			[Address(RVA = "0x97C6D4", Offset = "0x97C6D4", VA = "0x97C6D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ED518", Offset = "0x6ED518")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D30")]
			[Address(RVA = "0x97C6DC", Offset = "0x97C6DC", VA = "0x97C6DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ED528", Offset = "0x6ED528")]
			protected internal set
			{
			}
		}

		[Token(Token = "0x1700016A")]
		public int MessageCount
		{
			[Token(Token = "0x6000D31")]
			[Address(RVA = "0x97C6E8", Offset = "0x97C6E8", VA = "0x97C6E8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000D32")]
		[Address(RVA = "0x97C738", Offset = "0x97C738", VA = "0x97C738")]
		public ChatChannel(string name)
		{
		}

		[Token(Token = "0x6000D33")]
		[Address(RVA = "0x97C7E4", Offset = "0x97C7E4", VA = "0x97C7E4")]
		public void Add(string sender, object message)
		{
		}

		[Token(Token = "0x6000D34")]
		[Address(RVA = "0x97C920", Offset = "0x97C920", VA = "0x97C920")]
		public void Add(string[] senders, object[] messages)
		{
		}

		[Token(Token = "0x6000D35")]
		[Address(RVA = "0x97C874", Offset = "0x97C874", VA = "0x97C874")]
		public void TruncateMessages()
		{
		}

		[Token(Token = "0x6000D36")]
		[Address(RVA = "0x97C9B0", Offset = "0x97C9B0", VA = "0x97C9B0")]
		public void ClearMessages()
		{
		}

		[Token(Token = "0x6000D37")]
		[Address(RVA = "0x97CA20", Offset = "0x97CA20", VA = "0x97CA20")]
		public string ToStringMessages()
		{
			return null;
		}
	}
	[Token(Token = "0x2000215")]
	public class ChatClient : IPhotonPeerListener
	{
		[Token(Token = "0x4000D28")]
		private const int FriendRequestListMax = 1024;

		[Token(Token = "0x4000D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E6368", Offset = "0x6E6368")]
		private string <NameServerAddress>k__BackingField;

		[Token(Token = "0x4000D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E6378", Offset = "0x6E6378")]
		private string <FrontendAddress>k__BackingField;

		[Token(Token = "0x4000D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string chatRegion;

		[Token(Token = "0x4000D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E6388", Offset = "0x6E6388")]
		private ChatState <State>k__BackingField;

		[Token(Token = "0x4000D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E6398", Offset = "0x6E6398")]
		private ChatDisconnectCause <DisconnectedCause>k__BackingField;

		[Token(Token = "0x4000D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E63A8", Offset = "0x6E63A8")]
		private string <AppVersion>k__BackingField;

		[Token(Token = "0x4000D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E63B8", Offset = "0x6E63B8")]
		private string <AppId>k__BackingField;

		[Token(Token = "0x4000D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E63C8", Offset = "0x6E63C8")]
		private AuthenticationValues <AuthValues>k__BackingField;

		[Token(Token = "0x4000D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int MessageLimit;

		[Token(Token = "0x4000D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public readonly Dictionary<string, ChatChannel> PublicChannels;

		[Token(Token = "0x4000D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public readonly Dictionary<string, ChatChannel> PrivateChannels;

		[Token(Token = "0x4000D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly HashSet<string> PublicChannelsUnsubscribing;

		[Token(Token = "0x4000D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private readonly IChatClientListener listener;

		[Token(Token = "0x4000D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public ChatPeer chatPeer;

		[Token(Token = "0x4000D37")]
		private const string ChatAppName = "chat";

		[Token(Token = "0x4000D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool didAuthenticate;

		[Token(Token = "0x4000D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int msDeltaForServiceCalls;

		[Token(Token = "0x4000D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int msTimestampOfLastServiceCall;

		[Token(Token = "0x4000D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E63D8", Offset = "0x6E63D8")]
		private bool <UseBackgroundWorkerForSending>k__BackingField;

		[Token(Token = "0x1700016B")]
		public string NameServerAddress
		{
			[Token(Token = "0x6000D38")]
			[Address(RVA = "0x97CB48", Offset = "0x97CB48", VA = "0x97CB48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ED538", Offset = "0x6ED538")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D39")]
			[Address(RVA = "0x97CB50", Offset = "0x97CB50", VA = "0x97CB50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ED548", Offset = "0x6ED548")]
			private set
			{
			}
		}

		[Token(Token = "0x1700016C")]
		public string FrontendAddress
		{
			[Token(Token = "0x6000D3A")]
			[Address(RVA = "0x97CB58", Offset = "0x97CB58", VA = "0x97CB58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ED558", Offset = "0x6ED558")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D3B")]
			[Address(RVA = "0x97CB60", Offset = "0x97CB60", VA = "0x97CB60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ED568", Offset = "0x6ED568")]
			private set
			{
			}
		}

		[Token(Token = "0x1700016D")]
		public string ChatRegion
		{
			[Token(Token = "0x6000D3C")]
			[Address(RVA = "0x97CB68", Offset = "0x97CB68", VA = "0x97CB68")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D3D")]
			[Address(RVA = "0x97CB70", Offset = "0x97CB70", VA = "0x97CB70")]
			set
			{
			}
		}

		[Token(Token = "0x1700016E")]
		public ChatState State
		{
			[Token(Token = "0x6000D3E")]
			[Address(RVA = "0x97CB78", Offset = "0x97CB78", VA = "0x97CB78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ED578", Offset = "0x6ED578")]
			get
			{
				return default(ChatState);
			}
			[Token(Token = "0x6000D3F")]
			[Address(RVA = "0x97CB80", Offset = "0x97CB80", VA = "0x97CB80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ED588", Offset = "0x6ED588")]
			private set
			{
			}
		}

		[Token(Token = "0x1700016F")]
		public ChatDisconnectCause DisconnectedCause
		{
			[Token(Token = "0x6000D40")]
			[Address(RVA = "0x97CB88", Offset = "0x97CB88", VA = "0x97CB88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ED598", Offset = "0x6ED598")]
			get
			{
				return default(ChatDisconnectCause);
			}
			[Token(Token = "0x6000D41")]
			[Address(RVA = "0x97CB90", Offset = "0x97CB90", VA = "0x97CB90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ED5A8", Offset = "0x6ED5A8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000170")]
		public bool CanChat
		{
			[Token(Token = "0x6000D42")]
			[Address(RVA = "0x97CB98", Offset = "0x97CB98", VA = "0x97CB98")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000171")]
		private bool HasPeer
		{
			[Token(Token = "0x6000D44")]
			[Address(RVA = "0x97CBBC", Offset = "0x97CBBC", VA = "0x97CBBC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000172")]
		public string AppVersion
		{
			[Token(Token = "0x6000D45")]
			[Address(RVA = "0x97CC7C", Offset = "0x97CC7C", VA = "0x97CC7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ED5B8", Offset = "0x6ED5B8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D46")]
			[Address(RVA = "0x97CC84", Offset = "0x97CC84", VA = "0x97CC84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ED5C8", Offset = "0x6ED5C8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000173")]
		public string AppId
		{
			[Token(Token = "0x6000D47")]
			[Address(RVA = "0x97CC8C", Offset = "0x97CC8C", VA = "0x97CC8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ED5D8", Offset = "0x6ED5D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D48")]
			[Address(RVA = "0x97CC94", Offset = "0x97CC94", VA = "0x97CC94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ED5E8", Offset = "0x6ED5E8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000174")]
		public AuthenticationValues AuthValues
		{
			[Token(Token = "0x6000D49")]
			[Address(RVA = "0x97CC9C", Offset = "0x97CC9C", VA = "0x97CC9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ED5F8", Offset = "0x6ED5F8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D4A")]
			[Address(RVA = "0x97CCA4", Offset = "0x97CCA4", VA = "0x97CCA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ED608", Offset = "0x6ED608")]
			set
			{
			}
		}

		[Token(Token = "0x17000175")]
		public string UserId
		{
			[Token(Token = "0x6000D4B")]
			[Address(RVA = "0x97CCAC", Offset = "0x97CCAC", VA = "0x97CCAC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D4C")]
			[Address(RVA = "0x97CCC4", Offset = "0x97CCC4", VA = "0x97CCC4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000176")]
		public bool UseBackgroundWorkerForSending
		{
			[Token(Token = "0x6000D4D")]
			[Address(RVA = "0x97CD4C", Offset = "0x97CD4C", VA = "0x97CD4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ED618", Offset = "0x6ED618")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D4E")]
			[Address(RVA = "0x97CD54", Offset = "0x97CD54", VA = "0x97CD54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ED628", Offset = "0x6ED628")]
			set
			{
			}
		}

		[Token(Token = "0x17000177")]
		public ConnectionProtocol TransportProtocol
		{
			[Token(Token = "0x6000D4F")]
			[Address(RVA = "0x97CD60", Offset = "0x97CD60", VA = "0x97CD60")]
			get
			{
				return default(ConnectionProtocol);
			}
			[Token(Token = "0x6000D50")]
			[Address(RVA = "0x97CD7C", Offset = "0x97CD7C", VA = "0x97CD7C")]
			set
			{
			}
		}

		[Token(Token = "0x17000178")]
		public Dictionary<ConnectionProtocol, Type> SocketImplementationConfig
		{
			[Token(Token = "0x6000D51")]
			[Address(RVA = "0x97CEF4", Offset = "0x97CEF4", VA = "0x97CEF4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000179")]
		public DebugLevel DebugOut
		{
			[Token(Token = "0x6000D6C")]
			[Address(RVA = "0x97D348", Offset = "0x97D348", VA = "0x97D348")]
			get
			{
				return default(DebugLevel);
			}
			[Token(Token = "0x6000D6B")]
			[Address(RVA = "0x97EACC", Offset = "0x97EACC", VA = "0x97EACC")]
			set
			{
			}
		}

		[Token(Token = "0x6000D43")]
		[Address(RVA = "0x97CBCC", Offset = "0x97CBCC", VA = "0x97CBCC")]
		public bool CanChatInChannel(string channelName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D52")]
		[Address(RVA = "0x97CF10", Offset = "0x97CF10", VA = "0x97CF10")]
		public ChatClient(IChatClientListener listener, ConnectionProtocol protocol = ConnectionProtocol.Udp)
		{
		}

		[Token(Token = "0x6000D53")]
		[Address(RVA = "0x97D098", Offset = "0x97D098", VA = "0x97D098")]
		public bool Connect(string appId, string appVersion, AuthenticationValues authValues)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D54")]
		[Address(RVA = "0x97D484", Offset = "0x97D484", VA = "0x97D484")]
		public void Service()
		{
		}

		[Token(Token = "0x6000D55")]
		[Address(RVA = "0x97D508", Offset = "0x97D508", VA = "0x97D508")]
		private bool SendOutgoingInBackground()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D56")]
		[Address(RVA = "0x97D548", Offset = "0x97D548", VA = "0x97D548")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6ED638", Offset = "0x6ED638")]
		public void SendAcksOnly()
		{
		}

		[Token(Token = "0x6000D57")]
		[Address(RVA = "0x97D564", Offset = "0x97D564", VA = "0x97D564")]
		public void Disconnect()
		{
		}

		[Token(Token = "0x6000D58")]
		[Address(RVA = "0x97D5B8", Offset = "0x97D5B8", VA = "0x97D5B8")]
		public void StopThread()
		{
		}

		[Token(Token = "0x6000D59")]
		[Address(RVA = "0x97D5D0", Offset = "0x97D5D0", VA = "0x97D5D0")]
		public bool Subscribe(string[] channels)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D5A")]
		[Address(RVA = "0x97D5D8", Offset = "0x97D5D8", VA = "0x97D5D8")]
		public bool Subscribe(string[] channels, int messagesFromHistory)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D5B")]
		[Address(RVA = "0x97D894", Offset = "0x97D894", VA = "0x97D894")]
		public bool Unsubscribe(string[] channels)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D5C")]
		[Address(RVA = "0x97DA9C", Offset = "0x97DA9C", VA = "0x97DA9C")]
		public bool PublishMessage(string channelName, object message, bool forwardAsWebhook = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D5D")]
		[Address(RVA = "0x97DD28", Offset = "0x97DD28", VA = "0x97DD28")]
		internal bool PublishMessageUnreliable(string channelName, object message, bool forwardAsWebhook = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D5E")]
		[Address(RVA = "0x97DAA8", Offset = "0x97DAA8", VA = "0x97DAA8")]
		private bool publishMessage(string channelName, object message, bool reliable, bool forwardAsWebhook = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D5F")]
		[Address(RVA = "0x97DD34", Offset = "0x97DD34", VA = "0x97DD34")]
		public bool SendPrivateMessage(string target, object message, bool forwardAsWebhook = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D60")]
		[Address(RVA = "0x97DD44", Offset = "0x97DD44", VA = "0x97DD44")]
		public bool SendPrivateMessage(string target, object message, bool encrypt, bool forwardAsWebhook)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D61")]
		[Address(RVA = "0x97DFD8", Offset = "0x97DFD8", VA = "0x97DFD8")]
		internal bool SendPrivateMessageUnreliable(string target, object message, bool encrypt, bool forwardAsWebhook = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D62")]
		[Address(RVA = "0x97DD54", Offset = "0x97DD54", VA = "0x97DD54")]
		private bool sendPrivateMessage(string target, object message, bool encrypt, bool reliable, bool forwardAsWebhook = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D63")]
		[Address(RVA = "0x97DFE8", Offset = "0x97DFE8", VA = "0x97DFE8")]
		private bool SetOnlineStatus(int status, object message, bool skipMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D64")]
		[Address(RVA = "0x97E1D4", Offset = "0x97E1D4", VA = "0x97E1D4")]
		public bool SetOnlineStatus(int status)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D65")]
		[Address(RVA = "0x97E1E0", Offset = "0x97E1E0", VA = "0x97E1E0")]
		public bool SetOnlineStatus(int status, object message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D66")]
		[Address(RVA = "0x97E1E8", Offset = "0x97E1E8", VA = "0x97E1E8")]
		public bool AddFriends(string[] friends)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D67")]
		[Address(RVA = "0x97E58C", Offset = "0x97E58C", VA = "0x97E58C")]
		public bool RemoveFriends(string[] friends)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D68")]
		[Address(RVA = "0x97E930", Offset = "0x97E930", VA = "0x97E930")]
		public string GetPrivateChannelNameByUser(string userName)
		{
			return null;
		}

		[Token(Token = "0x6000D69")]
		[Address(RVA = "0x97E9A4", Offset = "0x97E9A4", VA = "0x97E9A4")]
		public bool TryGetChannel(string channelName, bool isPrivate, out ChatChannel channel)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0x97EA2C", Offset = "0x97EA2C", VA = "0x97EA2C")]
		public bool TryGetChannel(string channelName, out ChatChannel channel)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0x97EAE8", Offset = "0x97EAE8", VA = "0x97EAE8", Slot = "4")]
		private void ExitGames.Client.Photon.IPhotonPeerListener.DebugReturn(DebugLevel level, string message)
		{
		}

		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0x97EBB0", Offset = "0x97EBB0", VA = "0x97EBB0", Slot = "7")]
		private void ExitGames.Client.Photon.IPhotonPeerListener.OnEvent(EventData eventData)
		{
		}

		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0x97F664", Offset = "0x97F664", VA = "0x97F664", Slot = "5")]
		private void ExitGames.Client.Photon.IPhotonPeerListener.OnOperationResponse(OperationResponse operationResponse)
		{
		}

		[Token(Token = "0x6000D70")]
		[Address(RVA = "0x97FDF8", Offset = "0x97FDF8", VA = "0x97FDF8", Slot = "6")]
		private void ExitGames.Client.Photon.IPhotonPeerListener.OnStatusChanged(StatusCode statusCode)
		{
		}

		[Token(Token = "0x6000D71")]
		[Address(RVA = "0x97D788", Offset = "0x97D788", VA = "0x97D788")]
		private bool SendChannelOperation(string[] channels, byte operation, int historyLength)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D72")]
		[Address(RVA = "0x97EEA4", Offset = "0x97EEA4", VA = "0x97EEA4")]
		private void HandlePrivateMessageEvent(EventData eventData)
		{
		}

		[Token(Token = "0x6000D73")]
		[Address(RVA = "0x97EBF8", Offset = "0x97EBF8", VA = "0x97EBF8")]
		private void HandleChatMessagesEvent(EventData eventData)
		{
		}

		[Token(Token = "0x6000D74")]
		[Address(RVA = "0x97F290", Offset = "0x97F290", VA = "0x97F290")]
		private void HandleSubscribeEvent(EventData eventData)
		{
		}

		[Token(Token = "0x6000D75")]
		[Address(RVA = "0x97F4D4", Offset = "0x97F4D4", VA = "0x97F4D4")]
		private void HandleUnsubscribeEvent(EventData eventData)
		{
		}

		[Token(Token = "0x6000D76")]
		[Address(RVA = "0x97F864", Offset = "0x97F864", VA = "0x97F864")]
		private void HandleAuthResponse(OperationResponse operationResponse)
		{
		}

		[Token(Token = "0x6000D77")]
		[Address(RVA = "0x97F0E8", Offset = "0x97F0E8", VA = "0x97F0E8")]
		private void HandleStatusUpdate(EventData eventData)
		{
		}

		[Token(Token = "0x6000D78")]
		[Address(RVA = "0x980690", Offset = "0x980690", VA = "0x980690")]
		private void ConnectToFrontEnd()
		{
		}

		[Token(Token = "0x6000D79")]
		[Address(RVA = "0x9804A4", Offset = "0x9804A4", VA = "0x9804A4")]
		private bool AuthenticateOnFrontEnd()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000216")]
	public enum ChatDisconnectCause
	{
		[Token(Token = "0x4000D3D")]
		None,
		[Token(Token = "0x4000D3E")]
		DisconnectByServerUserLimit,
		[Token(Token = "0x4000D3F")]
		ExceptionOnConnect,
		[Token(Token = "0x4000D40")]
		DisconnectByServer,
		[Token(Token = "0x4000D41")]
		TimeoutDisconnect,
		[Token(Token = "0x4000D42")]
		Exception,
		[Token(Token = "0x4000D43")]
		InvalidAuthentication,
		[Token(Token = "0x4000D44")]
		MaxCcuReached,
		[Token(Token = "0x4000D45")]
		InvalidRegion,
		[Token(Token = "0x4000D46")]
		OperationNotAllowedInCurrentState,
		[Token(Token = "0x4000D47")]
		CustomAuthenticationFailed
	}
	[Token(Token = "0x2000217")]
	public class ChatEventCode
	{
		[Token(Token = "0x4000D48")]
		public const byte ChatMessages = 0;

		[Token(Token = "0x4000D49")]
		public const byte Users = 1;

		[Token(Token = "0x4000D4A")]
		public const byte PrivateMessage = 2;

		[Token(Token = "0x4000D4B")]
		public const byte FriendsList = 3;

		[Token(Token = "0x4000D4C")]
		public const byte StatusUpdate = 4;

		[Token(Token = "0x4000D4D")]
		public const byte Subscribe = 5;

		[Token(Token = "0x4000D4E")]
		public const byte Unsubscribe = 6;

		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0x9807AC", Offset = "0x9807AC", VA = "0x9807AC")]
		public ChatEventCode()
		{
		}
	}
	[Token(Token = "0x2000218")]
	public class ChatOperationCode
	{
		[Token(Token = "0x4000D4F")]
		public const byte Authenticate = 230;

		[Token(Token = "0x4000D50")]
		public const byte Subscribe = 0;

		[Token(Token = "0x4000D51")]
		public const byte Unsubscribe = 1;

		[Token(Token = "0x4000D52")]
		public const byte Publish = 2;

		[Token(Token = "0x4000D53")]
		public const byte SendPrivate = 3;

		[Token(Token = "0x4000D54")]
		public const byte ChannelHistory = 4;

		[Token(Token = "0x4000D55")]
		public const byte UpdateStatus = 5;

		[Token(Token = "0x4000D56")]
		public const byte AddFriends = 6;

		[Token(Token = "0x4000D57")]
		public const byte RemoveFriends = 7;

		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0x9807B4", Offset = "0x9807B4", VA = "0x9807B4")]
		public ChatOperationCode()
		{
		}
	}
	[Token(Token = "0x2000219")]
	public class ChatParameterCode
	{
		[Token(Token = "0x4000D58")]
		public const byte Channels = 0;

		[Token(Token = "0x4000D59")]
		public const byte Channel = 1;

		[Token(Token = "0x4000D5A")]
		public const byte Messages = 2;

		[Token(Token = "0x4000D5B")]
		public const byte Message = 3;

		[Token(Token = "0x4000D5C")]
		public const byte Senders = 4;

		[Token(Token = "0x4000D5D")]
		public const byte Sender = 5;

		[Token(Token = "0x4000D5E")]
		public const byte ChannelUserCount = 6;

		[Token(Token = "0x4000D5F")]
		public const byte UserId = 225;

		[Token(Token = "0x4000D60")]
		public const byte MsgId = 8;

		[Token(Token = "0x4000D61")]
		public const byte MsgIds = 9;

		[Token(Token = "0x4000D62")]
		public const byte Secret = 221;

		[Token(Token = "0x4000D63")]
		public const byte SubscribeResults = 15;

		[Token(Token = "0x4000D64")]
		public const byte Status = 10;

		[Token(Token = "0x4000D65")]
		public const byte Friends = 11;

		[Token(Token = "0x4000D66")]
		public const byte SkipMessage = 12;

		[Token(Token = "0x4000D67")]
		public const byte HistoryLength = 14;

		[Token(Token = "0x4000D68")]
		public const byte WebFlags = 21;

		[Token(Token = "0x6000D7C")]
		[Address(RVA = "0x9807BC", Offset = "0x9807BC", VA = "0x9807BC")]
		public ChatParameterCode()
		{
		}
	}
	[Token(Token = "0x200021A")]
	public class ChatPeer : PhotonPeer
	{
		[Token(Token = "0x4000D69")]
		public const string NameServerHost = "ns.exitgames.com";

		[Token(Token = "0x4000D6A")]
		public const string NameServerHttp = "http://ns.exitgamescloud.com:80/photon/n";

		[Token(Token = "0x4000D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Dictionary<ConnectionProtocol, int> ProtocolToNameServerPort;

		[Token(Token = "0x1700017A")]
		public string NameServerAddress
		{
			[Token(Token = "0x6000D7D")]
			[Address(RVA = "0x97D364", Offset = "0x97D364", VA = "0x97D364")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017B")]
		internal virtual bool IsProtocolSecure
		{
			[Token(Token = "0x6000D7E")]
			[Address(RVA = "0x98093C", Offset = "0x98093C", VA = "0x98093C", Slot = "17")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000D7F")]
		[Address(RVA = "0x97D018", Offset = "0x97D018", VA = "0x97D018")]
		public ChatPeer(IPhotonPeerListener listener, ConnectionProtocol protocol)
		{
		}

		[Token(Token = "0x6000D80")]
		[Address(RVA = "0x980960", Offset = "0x980960", VA = "0x980960")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6ED670", Offset = "0x6ED670")]
		private void ConfigUnitySockets()
		{
		}

		[Token(Token = "0x6000D81")]
		[Address(RVA = "0x9807C4", Offset = "0x9807C4", VA = "0x9807C4")]
		private string GetNameServerAddress()
		{
			return null;
		}

		[Token(Token = "0x6000D82")]
		[Address(RVA = "0x97D368", Offset = "0x97D368", VA = "0x97D368")]
		public bool Connect()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D83")]
		[Address(RVA = "0x980248", Offset = "0x980248", VA = "0x980248")]
		public bool AuthenticateOnNameServer(string appId, string appVersion, string region, AuthenticationValues authValues)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200021B")]
	public enum CustomAuthenticationType : byte
	{
		[Token(Token = "0x4000D6D")]
		Custom = 0,
		[Token(Token = "0x4000D6E")]
		Steam = 1,
		[Token(Token = "0x4000D6F")]
		Facebook = 2,
		[Token(Token = "0x4000D70")]
		Oculus = 3,
		[Token(Token = "0x4000D71")]
		PlayStation = 4,
		[Token(Token = "0x4000D72")]
		Xbox = 5,
		[Token(Token = "0x4000D73")]
		None = byte.MaxValue
	}
	[Token(Token = "0x200021C")]
	public class AuthenticationValues
	{
		[Token(Token = "0x4000D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private CustomAuthenticationType authType;

		[Token(Token = "0x4000D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E63E8", Offset = "0x6E63E8")]
		private string <AuthGetParameters>k__BackingField;

		[Token(Token = "0x4000D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E63F8", Offset = "0x6E63F8")]
		private object <AuthPostData>k__BackingField;

		[Token(Token = "0x4000D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E6408", Offset = "0x6E6408")]
		private string <Token>k__BackingField;

		[Token(Token = "0x4000D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E6418", Offset = "0x6E6418")]
		private string <UserId>k__BackingField;

		[Token(Token = "0x1700017C")]
		public CustomAuthenticationType AuthType
		{
			[Token(Token = "0x6000D85")]
			[Address(RVA = "0x97C3B0", Offset = "0x97C3B0", VA = "0x97C3B0")]
			get
			{
				return default(CustomAuthenticationType);
			}
			[Token(Token = "0x6000D86")]
			[Address(RVA = "0x97C3B8", Offset = "0x97C3B8", VA = "0x97C3B8")]
			set
			{
			}
		}

		[Token(Token = "0x1700017D")]
		public string AuthGetParameters
		{
			[Token(Token = "0x6000D87")]
			[Address(RVA = "0x97C3C0", Offset = "0x97C3C0", VA = "0x97C3C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ED6A8", Offset = "0x6ED6A8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D88")]
			[Address(RVA = "0x97C3C8", Offset = "0x97C3C8", VA = "0x97C3C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ED6B8", Offset = "0x6ED6B8")]
			set
			{
			}
		}

		[Token(Token = "0x1700017E")]
		public object AuthPostData
		{
			[Token(Token = "0x6000D89")]
			[Address(RVA = "0x97C3D0", Offset = "0x97C3D0", VA = "0x97C3D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ED6C8", Offset = "0x6ED6C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D8A")]
			[Address(RVA = "0x97C3D8", Offset = "0x97C3D8", VA = "0x97C3D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ED6D8", Offset = "0x6ED6D8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700017F")]
		public string Token
		{
			[Token(Token = "0x6000D8B")]
			[Address(RVA = "0x97C3E0", Offset = "0x97C3E0", VA = "0x97C3E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ED6E8", Offset = "0x6ED6E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D8C")]
			[Address(RVA = "0x97C3E8", Offset = "0x97C3E8", VA = "0x97C3E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ED6F8", Offset = "0x6ED6F8")]
			set
			{
			}
		}

		[Token(Token = "0x17000180")]
		public string UserId
		{
			[Token(Token = "0x6000D8D")]
			[Address(RVA = "0x97C3F0", Offset = "0x97C3F0", VA = "0x97C3F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ED708", Offset = "0x6ED708")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D8E")]
			[Address(RVA = "0x97C3F8", Offset = "0x97C3F8", VA = "0x97C3F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ED718", Offset = "0x6ED718")]
			set
			{
			}
		}

		[Token(Token = "0x6000D8F")]
		[Address(RVA = "0x97C400", Offset = "0x97C400", VA = "0x97C400")]
		public AuthenticationValues()
		{
		}

		[Token(Token = "0x6000D90")]
		[Address(RVA = "0x97C410", Offset = "0x97C410", VA = "0x97C410")]
		public AuthenticationValues(string userId)
		{
		}

		[Token(Token = "0x6000D91")]
		[Address(RVA = "0x97C444", Offset = "0x97C444", VA = "0x97C444", Slot = "4")]
		public virtual void SetAuthPostData(string stringData)
		{
		}

		[Token(Token = "0x6000D92")]
		[Address(RVA = "0x97C484", Offset = "0x97C484", VA = "0x97C484", Slot = "5")]
		public virtual void SetAuthPostData(byte[] byteData)
		{
		}

		[Token(Token = "0x6000D93")]
		[Address(RVA = "0x97C48C", Offset = "0x97C48C", VA = "0x97C48C", Slot = "6")]
		public virtual void AddAuthParameter(string key, string value)
		{
		}

		[Token(Token = "0x6000D94")]
		[Address(RVA = "0x97C640", Offset = "0x97C640", VA = "0x97C640", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200021D")]
	public class ParameterCode
	{
		[Token(Token = "0x4000D79")]
		public const byte ApplicationId = 224;

		[Token(Token = "0x4000D7A")]
		public const byte Secret = 221;

		[Token(Token = "0x4000D7B")]
		public const byte AppVersion = 220;

		[Token(Token = "0x4000D7C")]
		public const byte ClientAuthenticationType = 217;

		[Token(Token = "0x4000D7D")]
		public const byte ClientAuthenticationParams = 216;

		[Token(Token = "0x4000D7E")]
		public const byte ClientAuthenticationData = 214;

		[Token(Token = "0x4000D7F")]
		public const byte Region = 210;

		[Token(Token = "0x4000D80")]
		public const byte Address = 230;

		[Token(Token = "0x4000D81")]
		public const byte UserId = 225;

		[Token(Token = "0x6000D95")]
		[Address(RVA = "0x980C5C", Offset = "0x980C5C", VA = "0x980C5C")]
		public ParameterCode()
		{
		}
	}
	[Token(Token = "0x200021E")]
	public class ErrorCode
	{
		[Token(Token = "0x4000D82")]
		public const int Ok = 0;

		[Token(Token = "0x4000D83")]
		public const int OperationNotAllowedInCurrentState = -3;

		[Token(Token = "0x4000D84")]
		public const int InvalidOperationCode = -2;

		[Token(Token = "0x4000D85")]
		public const int InternalServerError = -1;

		[Token(Token = "0x4000D86")]
		public const int InvalidAuthentication = 32767;

		[Token(Token = "0x4000D87")]
		public const int GameIdAlreadyExists = 32766;

		[Token(Token = "0x4000D88")]
		public const int GameFull = 32765;

		[Token(Token = "0x4000D89")]
		public const int GameClosed = 32764;

		[Token(Token = "0x4000D8A")]
		public const int ServerFull = 32762;

		[Token(Token = "0x4000D8B")]
		public const int UserBlocked = 32761;

		[Token(Token = "0x4000D8C")]
		public const int NoRandomMatchFound = 32760;

		[Token(Token = "0x4000D8D")]
		public const int GameDoesNotExist = 32758;

		[Token(Token = "0x4000D8E")]
		public const int MaxCcuReached = 32757;

		[Token(Token = "0x4000D8F")]
		public const int InvalidRegion = 32756;

		[Token(Token = "0x4000D90")]
		public const int CustomAuthenticationFailed = 32755;

		[Token(Token = "0x6000D96")]
		[Address(RVA = "0x980C54", Offset = "0x980C54", VA = "0x980C54")]
		public ErrorCode()
		{
		}
	}
	[Token(Token = "0x200021F")]
	public enum ChatState
	{
		[Token(Token = "0x4000D92")]
		Uninitialized,
		[Token(Token = "0x4000D93")]
		ConnectingToNameServer,
		[Token(Token = "0x4000D94")]
		ConnectedToNameServer,
		[Token(Token = "0x4000D95")]
		Authenticating,
		[Token(Token = "0x4000D96")]
		Authenticated,
		[Token(Token = "0x4000D97")]
		DisconnectingFromNameServer,
		[Token(Token = "0x4000D98")]
		ConnectingToFrontEnd,
		[Token(Token = "0x4000D99")]
		ConnectedToFrontEnd,
		[Token(Token = "0x4000D9A")]
		DisconnectingFromFrontEnd,
		[Token(Token = "0x4000D9B")]
		QueuedComingFromFrontEnd,
		[Token(Token = "0x4000D9C")]
		Disconnecting,
		[Token(Token = "0x4000D9D")]
		Disconnected
	}
	[Token(Token = "0x2000220")]
	public static class ChatUserStatus
	{
		[Token(Token = "0x4000D9E")]
		public const int Offline = 0;

		[Token(Token = "0x4000D9F")]
		public const int Invisible = 1;

		[Token(Token = "0x4000DA0")]
		public const int Online = 2;

		[Token(Token = "0x4000DA1")]
		public const int Away = 3;

		[Token(Token = "0x4000DA2")]
		public const int DND = 4;

		[Token(Token = "0x4000DA3")]
		public const int LFG = 5;

		[Token(Token = "0x4000DA4")]
		public const int Playing = 6;
	}
	[Token(Token = "0x2000221")]
	public interface IChatClientListener
	{
		[Token(Token = "0x6000D97")]
		void DebugReturn(DebugLevel level, string message);

		[Token(Token = "0x6000D98")]
		void OnDisconnected();

		[Token(Token = "0x6000D99")]
		void OnConnected();

		[Token(Token = "0x6000D9A")]
		void OnChatStateChange(ChatState state);

		[Token(Token = "0x6000D9B")]
		void OnGetMessages(string channelName, string[] senders, object[] messages);

		[Token(Token = "0x6000D9C")]
		void OnPrivateMessage(string sender, object message, string channelName);

		[Token(Token = "0x6000D9D")]
		void OnSubscribed(string[] channels, bool[] results);

		[Token(Token = "0x6000D9E")]
		void OnUnsubscribed(string[] channels);

		[Token(Token = "0x6000D9F")]
		void OnStatusUpdate(string user, int status, bool gotMessage, object message);
	}
}
namespace ExitGames.Client.DemoParticle
{
	[Token(Token = "0x2000222")]
	public class TimeKeeper
	{
		[Token(Token = "0x4000DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int lastExecutionTime;

		[Token(Token = "0x4000DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool shouldExecute;

		[Token(Token = "0x4000DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E6428", Offset = "0x6E6428")]
		private int <Interval>k__BackingField;

		[Token(Token = "0x4000DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E6438", Offset = "0x6E6438")]
		private bool <IsEnabled>k__BackingField;

		[Token(Token = "0x17000181")]
		public int Interval
		{
			[Token(Token = "0x6000DA0")]
			[Address(RVA = "0x97C0B8", Offset = "0x97C0B8", VA = "0x97C0B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ED728", Offset = "0x6ED728")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000DA1")]
			[Address(RVA = "0x97C0C0", Offset = "0x97C0C0", VA = "0x97C0C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ED738", Offset = "0x6ED738")]
			set
			{
			}
		}

		[Token(Token = "0x17000182")]
		public bool IsEnabled
		{
			[Token(Token = "0x6000DA2")]
			[Address(RVA = "0x97C0C8", Offset = "0x97C0C8", VA = "0x97C0C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ED748", Offset = "0x6ED748")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DA3")]
			[Address(RVA = "0x97C0D0", Offset = "0x97C0D0", VA = "0x97C0D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ED758", Offset = "0x6ED758")]
			set
			{
			}
		}

		[Token(Token = "0x17000183")]
		public bool ShouldExecute
		{
			[Token(Token = "0x6000DA4")]
			[Address(RVA = "0x97C0DC", Offset = "0x97C0DC", VA = "0x97C0DC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DA5")]
			[Address(RVA = "0x97C134", Offset = "0x97C134", VA = "0x97C134")]
			set
			{
			}
		}

		[Token(Token = "0x6000DA6")]
		[Address(RVA = "0x97C140", Offset = "0x97C140", VA = "0x97C140")]
		public TimeKeeper(int interval)
		{
		}

		[Token(Token = "0x6000DA7")]
		[Address(RVA = "0x97C184", Offset = "0x97C184", VA = "0x97C184")]
		public void Reset()
		{
		}
	}
}
namespace ExitGames.Client.GUI
{
	[Token(Token = "0x2000223")]
	public enum GizmoType
	{
		[Token(Token = "0x4000DAA")]
		WireSphere,
		[Token(Token = "0x4000DAB")]
		Sphere,
		[Token(Token = "0x4000DAC")]
		WireCube,
		[Token(Token = "0x4000DAD")]
		Cube
	}
	[Token(Token = "0x2000224")]
	public class GizmoTypeDrawer
	{
		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0x97C1B0", Offset = "0x97C1B0", VA = "0x97C1B0")]
		public static void Draw(Vector3 center, GizmoType type, Color color, float size)
		{
		}

		[Token(Token = "0x6000DA9")]
		[Address(RVA = "0x97C3A8", Offset = "0x97C3A8", VA = "0x97C3A8")]
		public GizmoTypeDrawer()
		{
		}
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x2000225")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4000DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x4000DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x4000DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x4000DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x4000DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x17000184")]
		public bool Highlight
		{
			[Token(Token = "0x6000DAA")]
			[Address(RVA = "0xA3B96C", Offset = "0xA3B96C", VA = "0xA3B96C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DAB")]
			[Address(RVA = "0xA3B974", Offset = "0xA3B974", VA = "0xA3B974")]
			set
			{
			}
		}

		[Token(Token = "0x6000DAC")]
		[Address(RVA = "0xA3B980", Offset = "0xA3B980", VA = "0xA3B980")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x6000DAD")]
		[Address(RVA = "0xA3BB4C", Offset = "0xA3BB4C", VA = "0xA3BB4C", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x6000DAE")]
		[Address(RVA = "0xA3BB74", Offset = "0xA3BB74", VA = "0xA3BB74", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6000DAF")]
		[Address(RVA = "0xA3BB9C", Offset = "0xA3BB9C", VA = "0xA3BB9C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0xA3BA4C", Offset = "0xA3BA4C", VA = "0xA3BA4C")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x6000DB1")]
		[Address(RVA = "0xA3BDF0", Offset = "0xA3BDF0", VA = "0xA3BDF0")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x2000226")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4000DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x4000DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x4000DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x4000DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x4000DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x4000DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x4000DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x17000185")]
		public bool InRange
		{
			[Token(Token = "0x6000DB3")]
			[Address(RVA = "0xA3BEDC", Offset = "0xA3BEDC", VA = "0xA3BEDC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DB4")]
			[Address(RVA = "0xA3BEE4", Offset = "0xA3BEE4", VA = "0xA3BEE4")]
			set
			{
			}
		}

		[Token(Token = "0x17000186")]
		public bool Targeted
		{
			[Token(Token = "0x6000DB5")]
			[Address(RVA = "0xA3C06C", Offset = "0xA3C06C", VA = "0xA3C06C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DB6")]
			[Address(RVA = "0xA3C074", Offset = "0xA3C074", VA = "0xA3C074")]
			set
			{
			}
		}

		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0xA3C080", Offset = "0xA3C080", VA = "0xA3C080", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0xA3BEF0", Offset = "0xA3BEF0", VA = "0xA3BEF0")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0xA3C24C", Offset = "0xA3C24C", VA = "0xA3C24C")]
		public void SetColor(Color focusColor)
		{
		}

		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0xA3C290", Offset = "0xA3C290", VA = "0xA3C290")]
		public void ClearColor()
		{
		}

		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0xA3C2EC", Offset = "0xA3C2EC", VA = "0xA3C2EC")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x2000227")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x6E1524", Offset = "0x6E1524")]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x4000DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[SerializeField]
		public Color m_focusColor;

		[Token(Token = "0x4000DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x4000DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x4000DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x4000DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x4000DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x4000DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x4000DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x4000DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x4000DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x4000DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x4000DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private GameObject m_player;

		[Token(Token = "0x4000DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x4000DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x4000DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		protected Collider m_targetCollider;

		[Token(Token = "0x17000187")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6000DBC")]
			[Address(RVA = "0xA3C2F4", Offset = "0xA3C2F4", VA = "0xA3C2F4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DBD")]
			[Address(RVA = "0xA3C2FC", Offset = "0xA3C2FC", VA = "0xA3C2FC")]
			set
			{
			}
		}

		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0xA3C318", Offset = "0xA3C318", VA = "0xA3C318", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0xA3C4A4", Offset = "0xA3C4A4", VA = "0xA3C4A4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0xA3CDF0", Offset = "0xA3CDF0", VA = "0xA3CDF0", Slot = "6")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0xA3D388", Offset = "0xA3D388", VA = "0xA3D388", Slot = "7")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0xA3D768", Offset = "0xA3D768", VA = "0xA3D768")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x6000DC3")]
		[Address(RVA = "0xA3C760", Offset = "0xA3C760", VA = "0xA3C760")]
		protected bool FindTarget(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DC4")]
		[Address(RVA = "0xA3D844", Offset = "0xA3D844", VA = "0xA3D844")]
		protected bool FindTargetWithSpherecast(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DC5")]
		[Address(RVA = "0xA3DC74", Offset = "0xA3DC74", VA = "0xA3DC74", Slot = "8")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x6000DC6")]
		[Address(RVA = "0xA3DC8C", Offset = "0xA3DC8C", VA = "0xA3DC8C", Slot = "9")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x6000DC7")]
		[Address(RVA = "0xA3DC94", Offset = "0xA3DC94", VA = "0xA3DC94")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x2000228")]
	public class GrabManager : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x4000DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x4000DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x6000DC8")]
		[Address(RVA = "0xA3DF30", Offset = "0xA3DF30", VA = "0xA3DF30")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x6000DC9")]
		[Address(RVA = "0xA3DFE0", Offset = "0xA3DFE0", VA = "0xA3DFE0")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x6000DCA")]
		[Address(RVA = "0xA3E08C", Offset = "0xA3E08C", VA = "0xA3E08C")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x2000229")]
	public class GrabbableCrosshair : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x20003EF")]
		public enum CrosshairState
		{
			[Token(Token = "0x40013EB")]
			Disabled,
			[Token(Token = "0x40013EC")]
			Enabled,
			[Token(Token = "0x40013ED")]
			Targeted
		}

		[Token(Token = "0x4000DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x4000DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x4000DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x4000DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x6000DCB")]
		[Address(RVA = "0xA3E094", Offset = "0xA3E094", VA = "0xA3E094")]
		private void Start()
		{
		}

		[Token(Token = "0x6000DCC")]
		[Address(RVA = "0xA3C1B0", Offset = "0xA3C1B0", VA = "0xA3C1B0")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x6000DCD")]
		[Address(RVA = "0xA3E0FC", Offset = "0xA3E0FC", VA = "0xA3E0FC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DCE")]
		[Address(RVA = "0xA3E144", Offset = "0xA3E144", VA = "0xA3E144")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x200022A")]
	public class PauseOnInputLoss : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x6000DCF")]
		[Address(RVA = "0xA3F7F8", Offset = "0xA3F7F8", VA = "0xA3F7F8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000DD0")]
		[Address(RVA = "0xA3F8C4", Offset = "0xA3F8C4", VA = "0xA3F8C4")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6000DD1")]
		[Address(RVA = "0xA3F8D0", Offset = "0xA3F8D0", VA = "0xA3F8D0")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6000DD2")]
		[Address(RVA = "0xA3F8DC", Offset = "0xA3F8DC", VA = "0xA3F8DC")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x200022B")]
	public class DistanceGrabberSample : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool museSpherecast;

		[Token(Token = "0x4000DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool allowGrabThroughWalls;

		[Token(Token = "0x4000DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DistanceGrabber[] m_grabbers;

		[Token(Token = "0x17000188")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6000DD3")]
			[Address(RVA = "0xA3DCB4", Offset = "0xA3DCB4", VA = "0xA3DCB4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DD4")]
			[Address(RVA = "0xA3DCBC", Offset = "0xA3DCBC", VA = "0xA3DCBC")]
			set
			{
			}
		}

		[Token(Token = "0x17000189")]
		public bool AllowGrabThroughWalls
		{
			[Token(Token = "0x6000DD5")]
			[Address(RVA = "0xA3DD44", Offset = "0xA3DD44", VA = "0xA3DD44")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DD6")]
			[Address(RVA = "0xA3DD4C", Offset = "0xA3DD4C", VA = "0xA3DD4C")]
			set
			{
			}
		}

		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0xA3DDB8", Offset = "0xA3DDB8", VA = "0xA3DDB8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000DD8")]
		[Address(RVA = "0xA3DF08", Offset = "0xA3DF08", VA = "0xA3DF08")]
		public void ToggleSphereCasting(Toggle t)
		{
		}

		[Token(Token = "0x6000DD9")]
		[Address(RVA = "0xA3DF18", Offset = "0xA3DF18", VA = "0xA3DF18")]
		public void ToggleGrabThroughWalls(Toggle t)
		{
		}

		[Token(Token = "0x6000DDA")]
		[Address(RVA = "0xA3DF28", Offset = "0xA3DF28", VA = "0xA3DF28")]
		public DistanceGrabberSample()
		{
		}
	}
	[Token(Token = "0x200022C")]
	public enum EUiDisplayType
	{
		[Token(Token = "0x4000DD4")]
		EUDT_WorldGeoQuad,
		[Token(Token = "0x4000DD5")]
		EUDT_OverlayQuad,
		[Token(Token = "0x4000DD6")]
		EUDT_None,
		[Token(Token = "0x4000DD7")]
		EUDT_MaxDislayTypes
	}
	[Token(Token = "0x200022D")]
	public class OVROverlaySample : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x20003F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E1C14", Offset = "0x6E1C14")]
		private sealed class <WaitforOVROverlay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x17000270")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60018B3")]
				[Address(RVA = "0xA3F788", Offset = "0xA3F788", VA = "0xA3F788", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000271")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018B5")]
				[Address(RVA = "0xA3F7F0", Offset = "0xA3F7F0", VA = "0xA3F7F0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018B0")]
			[Address(RVA = "0xA3EE04", Offset = "0xA3EE04", VA = "0xA3EE04")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x60018B1")]
			[Address(RVA = "0xA3F53C", Offset = "0xA3F53C", VA = "0xA3F53C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018B2")]
			[Address(RVA = "0xA3F540", Offset = "0xA3F540", VA = "0xA3F540", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018B4")]
			[Address(RVA = "0xA3F790", Offset = "0xA3F790", VA = "0xA3F790", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inMenu;

		[Token(Token = "0x4000DD9")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x4000DDA")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x4000DDB")]
		private const string noneID = "NoneID";

		[Token(Token = "0x4000DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Toggle applicationRadioButton;

		[Token(Token = "0x4000DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Toggle noneRadioButton;

		[Token(Token = "0x4000DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E6518", Offset = "0x6E6518")]
		public GameObject mainCamera;

		[Token(Token = "0x4000DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject uiCamera;

		[Token(Token = "0x4000DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject uiGeoParent;

		[Token(Token = "0x4000DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x4000DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x4000DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x4000DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x4000DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x4000DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E6550", Offset = "0x6E6550")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x4000DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x4000DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x4000DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x4000DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float cubeSpawnRadius;

		[Token(Token = "0x4000DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float heightBetweenItems;

		[Token(Token = "0x4000DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int numObjectsPerLevel;

		[Token(Token = "0x4000DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int numLevels;

		[Token(Token = "0x4000DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int numLoopsTrigger;

		[Token(Token = "0x4000DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x6000DDB")]
		[Address(RVA = "0xA3E14C", Offset = "0xA3E14C", VA = "0xA3E14C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000DDC")]
		[Address(RVA = "0xA3E92C", Offset = "0xA3E92C", VA = "0xA3E92C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DDD")]
		[Address(RVA = "0xA3EA6C", Offset = "0xA3EA6C", VA = "0xA3EA6C")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x6000DDE")]
		[Address(RVA = "0xA3EB94", Offset = "0xA3EB94", VA = "0xA3EB94")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x6000DDF")]
		[Address(RVA = "0xA3ECBC", Offset = "0xA3ECBC", VA = "0xA3ECBC")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x6000DE0")]
		[Address(RVA = "0xA3EA40", Offset = "0xA3EA40", VA = "0xA3EA40")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x6000DE1")]
		[Address(RVA = "0xA3ED94", Offset = "0xA3ED94", VA = "0xA3ED94")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6ED768", Offset = "0x6ED768")]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x6000DE2")]
		[Address(RVA = "0xA3EE30", Offset = "0xA3EE30", VA = "0xA3EE30")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0xA3E4B8", Offset = "0xA3E4B8", VA = "0xA3E4B8")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x6000DE4")]
		[Address(RVA = "0xA3EF58", Offset = "0xA3EF58", VA = "0xA3EF58")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x6000DE5")]
		[Address(RVA = "0xA3EE64", Offset = "0xA3EE64", VA = "0xA3EE64")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x6000DE6")]
		[Address(RVA = "0xA3F2F4", Offset = "0xA3F2F4", VA = "0xA3F2F4")]
		public void RadioPressed(string radioLabel, string group, Toggle t)
		{
		}

		[Token(Token = "0x6000DE7")]
		[Address(RVA = "0xA3F3D0", Offset = "0xA3F3D0", VA = "0xA3F3D0")]
		public OVROverlaySample()
		{
		}

		[Token(Token = "0x6000DE8")]
		[Address(RVA = "0xA3F44C", Offset = "0xA3F44C", VA = "0xA3F44C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ED7CC", Offset = "0x6ED7CC")]
		private void <Start>b__24_0(Toggle t)
		{
		}

		[Token(Token = "0x6000DE9")]
		[Address(RVA = "0xA3F49C", Offset = "0xA3F49C", VA = "0xA3F49C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ED7DC", Offset = "0x6ED7DC")]
		private void <Start>b__24_1(Toggle t)
		{
		}

		[Token(Token = "0x6000DEA")]
		[Address(RVA = "0xA3F4EC", Offset = "0xA3F4EC", VA = "0xA3F4EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ED7EC", Offset = "0x6ED7EC")]
		private void <Start>b__24_2(Toggle t)
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x200022E")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x6E1588", Offset = "0x6E1588")]
	public class Hand : UnityEngine.MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20003F1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E1C24", Offset = "0x6E1C24")]
		private sealed class <>c
		{
			[Token(Token = "0x40013F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40013F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__28_0;

			[Token(Token = "0x60018B7")]
			[Address(RVA = "0x9132CC", Offset = "0x9132CC", VA = "0x9132CC")]
			public <>c()
			{
			}

			[Token(Token = "0x60018B8")]
			[Address(RVA = "0x9132D4", Offset = "0x9132D4", VA = "0x9132D4")]
			internal bool <Start>b__28_0(Collider childCollider)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000DF0")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x4000DF1")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x4000DF2")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x4000DF3")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x4000DF4")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x4000DF5")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x4000DF6")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x4000DF7")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x4000DF8")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x4000DF9")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x4000DFA")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x4000DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4000DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4000DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x4000DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x4000DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x4000E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x4000E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x4000E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x4000E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x4000E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x4000E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x4000E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x4000E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x4000E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x4000E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x4000E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x4000E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x6000DEB")]
		[Address(RVA = "0x9125DC", Offset = "0x9125DC", VA = "0x9125DC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DEC")]
		[Address(RVA = "0x912634", Offset = "0x912634", VA = "0x912634")]
		private void Start()
		{
		}

		[Token(Token = "0x6000DED")]
		[Address(RVA = "0x912A3C", Offset = "0x912A3C", VA = "0x912A3C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DEE")]
		[Address(RVA = "0x912B48", Offset = "0x912B48", VA = "0x912B48")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x6000DEF")]
		[Address(RVA = "0x912E80", Offset = "0x912E80", VA = "0x912E80")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0x912FE8", Offset = "0x912FE8", VA = "0x912FE8")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6000DF1")]
		[Address(RVA = "0x913134", Offset = "0x913134", VA = "0x913134")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6000DF2")]
		[Address(RVA = "0x912BE4", Offset = "0x912BE4", VA = "0x912BE4")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6000DF3")]
		[Address(RVA = "0x912C84", Offset = "0x912C84", VA = "0x912C84")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x6000DF4")]
		[Address(RVA = "0x912890", Offset = "0x912890", VA = "0x912890")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x6000DF5")]
		[Address(RVA = "0x913250", Offset = "0x913250", VA = "0x913250")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x200022F")]
	public enum HandPoseId
	{
		[Token(Token = "0x4000E0D")]
		Default,
		[Token(Token = "0x4000E0E")]
		Generic,
		[Token(Token = "0x4000E0F")]
		PingPongBall,
		[Token(Token = "0x4000E10")]
		Controller
	}
	[Token(Token = "0x2000230")]
	public class HandPose : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x4000E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x4000E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x1700018A")]
		public bool AllowPointing
		{
			[Token(Token = "0x6000DF6")]
			[Address(RVA = "0x913300", Offset = "0x913300", VA = "0x913300")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700018B")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x6000DF7")]
			[Address(RVA = "0x913308", Offset = "0x913308", VA = "0x913308")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700018C")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x6000DF8")]
			[Address(RVA = "0x913310", Offset = "0x913310", VA = "0x913310")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x6000DF9")]
		[Address(RVA = "0x913318", Offset = "0x913318", VA = "0x913318")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x2000231")]
	public class TouchController : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4000E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4000E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x6000DFA")]
		[Address(RVA = "0x913320", Offset = "0x913320", VA = "0x913320")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DFB")]
		[Address(RVA = "0x913594", Offset = "0x913594", VA = "0x913594")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6000DFC")]
		[Address(RVA = "0x9135F0", Offset = "0x9135F0", VA = "0x9135F0")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6000DFD")]
		[Address(RVA = "0x913634", Offset = "0x913634", VA = "0x913634")]
		public TouchController()
		{
		}
	}
}
namespace Oculus.Spatializer.Propagation
{
	[Token(Token = "0x2000232")]
	public enum FaceType : uint
	{
		[Token(Token = "0x4000E18")]
		TRIANGLES,
		[Token(Token = "0x4000E19")]
		QUADS
	}
	[Token(Token = "0x2000233")]
	public enum MaterialProperty : uint
	{
		[Token(Token = "0x4000E1B")]
		ABSORPTION,
		[Token(Token = "0x4000E1C")]
		TRANSMISSION,
		[Token(Token = "0x4000E1D")]
		SCATTERING
	}
	[Token(Token = "0x2000234")]
	public struct MeshGroup
	{
		[Token(Token = "0x4000E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UIntPtr indexOffset;

		[Token(Token = "0x4000E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UIntPtr faceCount;

		[Token(Token = "0x4000E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FaceType faceType;

		[Token(Token = "0x4000E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public IntPtr material;
	}
}
namespace Oculus.Platform
{
	[Token(Token = "0x2000235")]
	public class AbuseReportOptions
	{
		[Token(Token = "0x4000E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x6000DFE")]
		[Address(RVA = "0x91BD24", Offset = "0x91BD24", VA = "0x91BD24")]
		public AbuseReportOptions()
		{
		}

		[Token(Token = "0x6000DFF")]
		[Address(RVA = "0x91BE0C", Offset = "0x91BE0C", VA = "0x91BE0C")]
		public void SetPreventPeopleChooser(bool value)
		{
		}

		[Token(Token = "0x6000E00")]
		[Address(RVA = "0x91BF14", Offset = "0x91BF14", VA = "0x91BF14")]
		public void SetReportType(AbuseReportType value)
		{
		}

		[Token(Token = "0x6000E01")]
		[Address(RVA = "0x91C01C", Offset = "0x91C01C", VA = "0x91C01C")]
		public static explicit operator IntPtr(AbuseReportOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000E02")]
		[Address(RVA = "0x91C06C", Offset = "0x91C06C", VA = "0x91C06C", Slot = "1")]
		~AbuseReportOptions()
		{
		}
	}
	[Token(Token = "0x2000236")]
	public enum AbuseReportType
	{
		[Token(Token = "0x4000E24")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E6608", Offset = "0x6E6608")]
		Unknown,
		[Token(Token = "0x4000E25")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E6640", Offset = "0x6E6640")]
		Object,
		[Token(Token = "0x4000E26")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E6678", Offset = "0x6E6678")]
		User
	}
	[Token(Token = "0x2000237")]
	public enum AchievementType
	{
		[Token(Token = "0x4000E28")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E66B0", Offset = "0x6E66B0")]
		Unknown,
		[Token(Token = "0x4000E29")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E66E8", Offset = "0x6E66E8")]
		Simple,
		[Token(Token = "0x4000E2A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E6720", Offset = "0x6E6720")]
		Bitfield,
		[Token(Token = "0x4000E2B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E6758", Offset = "0x6E6758")]
		Count
	}
	[Token(Token = "0x2000238")]
	public class AndroidPlatform
	{
		[Token(Token = "0x6000E03")]
		[Address(RVA = "0x91D2BC", Offset = "0x91D2BC", VA = "0x91D2BC")]
		public bool Initialize(string appId)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E04")]
		[Address(RVA = "0x91D408", Offset = "0x91D408", VA = "0x91D408")]
		public Request<PlatformInitialize> AsyncInitialize(string appId)
		{
			return null;
		}

		[Token(Token = "0x6000E05")]
		[Address(RVA = "0x91D588", Offset = "0x91D588", VA = "0x91D588")]
		public AndroidPlatform()
		{
		}
	}
	[Token(Token = "0x2000239")]
	public class ApplicationOptions
	{
		[Token(Token = "0x4000E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x6000E06")]
		[Address(RVA = "0x91DA38", Offset = "0x91DA38", VA = "0x91DA38")]
		public ApplicationOptions()
		{
		}

		[Token(Token = "0x6000E07")]
		[Address(RVA = "0x91DB20", Offset = "0x91DB20", VA = "0x91DB20")]
		public void SetDeeplinkMessage(string value)
		{
		}

		[Token(Token = "0x6000E08")]
		[Address(RVA = "0x91D858", Offset = "0x91D858", VA = "0x91D858")]
		public static explicit operator IntPtr(ApplicationOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000E09")]
		[Address(RVA = "0x91DC44", Offset = "0x91DC44", VA = "0x91DC44", Slot = "1")]
		~ApplicationOptions()
		{
		}
	}
	[Token(Token = "0x200023A")]
	public class CAPI
	{
		[Token(Token = "0x20003F2")]
		public struct ovrKeyValuePair
		{
			[Token(Token = "0x40013F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string key_;

			[Token(Token = "0x40013F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private KeyValuePairType valueType_;

			[Token(Token = "0x40013F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string stringValue_;

			[Token(Token = "0x40013F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int intValue_;

			[Token(Token = "0x40013F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public double doubleValue_;

			[Token(Token = "0x60018B9")]
			[Address(RVA = "0x77BFD8", Offset = "0x77BFD8", VA = "0x77BFD8")]
			public ovrKeyValuePair(string key, string value)
			{
			}

			[Token(Token = "0x60018BA")]
			[Address(RVA = "0x77BFF0", Offset = "0x77BFF0", VA = "0x77BFF0")]
			public ovrKeyValuePair(string key, int value)
			{
			}

			[Token(Token = "0x60018BB")]
			[Address(RVA = "0x77C00C", Offset = "0x77C00C", VA = "0x77C00C")]
			public ovrKeyValuePair(string key, double value)
			{
			}
		}

		[Token(Token = "0x20003F3")]
		public struct ovrMatchmakingCriterion
		{
			[Token(Token = "0x40013F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string key_;

			[Token(Token = "0x40013F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public MatchmakingCriterionImportance importance_;

			[Token(Token = "0x40013FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IntPtr parameterArray;

			[Token(Token = "0x40013FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public uint parameterArrayCount;

			[Token(Token = "0x60018BC")]
			[Address(RVA = "0x77C0D8", Offset = "0x77C0D8", VA = "0x77C0D8")]
			public ovrMatchmakingCriterion(string key, MatchmakingCriterionImportance importance)
			{
			}
		}

		[Token(Token = "0x20003F4")]
		public struct ovrMatchmakingCustomQueryData
		{
			[Token(Token = "0x40013FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IntPtr dataArray;

			[Token(Token = "0x40013FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public uint dataArrayCount;

			[Token(Token = "0x40013FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IntPtr criterionArray;

			[Token(Token = "0x40013FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public uint criterionArrayCount;
		}

		[Token(Token = "0x20003F5")]
		public struct OculusInitParams
		{
			[Token(Token = "0x4001400")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int sType;

			[Token(Token = "0x4001401")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string email;

			[Token(Token = "0x4001402")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string password;

			[Token(Token = "0x4001403")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ulong appId;

			[Token(Token = "0x4001404")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string uriPrefixOverride;
		}

		[Token(Token = "0x20003F6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6E1C34", Offset = "0x6E1C34")]
		public delegate void FilterCallback([In][Out] short[] pcmData, UIntPtr pcmDataLength, int frequency, int numChannels);

		[Token(Token = "0x4000E2D")]
		public const string DLL_NAME = "ovrplatformloader";

		[Token(Token = "0x4000E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static UTF8Encoding nativeStringEncoding;

		[Token(Token = "0x4000E2F")]
		public const int VoipFilterBufferSize = 480;

		[Token(Token = "0x6000E0A")]
		[Address(RVA = "0x91F32C", Offset = "0x91F32C", VA = "0x91F32C")]
		public static IntPtr ArrayOfStructsToIntPtr(Array ar)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000E0B")]
		[Address(RVA = "0x91F4EC", Offset = "0x91F4EC", VA = "0x91F4EC")]
		public static ovrKeyValuePair[] DictionaryToOVRKeyValuePairs(Dictionary<string, object> dict)
		{
			return null;
		}

		[Token(Token = "0x6000E0C")]
		[Address(RVA = "0x91F998", Offset = "0x91F998", VA = "0x91F998")]
		public static byte[] IntPtrToByteArray(IntPtr data, ulong size)
		{
			return null;
		}

		[Token(Token = "0x6000E0D")]
		[Address(RVA = "0x91FA54", Offset = "0x91FA54", VA = "0x91FA54")]
		public static Dictionary<string, string> DataStoreFromNative(IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x6000E0E")]
		[Address(RVA = "0x91FD5C", Offset = "0x91FD5C", VA = "0x91FD5C")]
		public static string StringFromNative(IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x6000E0F")]
		[Address(RVA = "0x91FE74", Offset = "0x91FE74", VA = "0x91FE74")]
		public static int GetNativeStringLengthNotIncludingNullTerminator(IntPtr pointer)
		{
			return default(int);
		}

		[Token(Token = "0x6000E10")]
		[Address(RVA = "0x91FF00", Offset = "0x91FF00", VA = "0x91FF00")]
		public static DateTime DateTimeFromNative(ulong seconds_since_the_one_true_epoch)
		{
			return default(DateTime);
		}

		[Token(Token = "0x6000E11")]
		[Address(RVA = "0x91FF70", Offset = "0x91FF70", VA = "0x91FF70")]
		public static byte[] BlobFromNative(uint size, IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x6000E12")]
		[Address(RVA = "0x920054", Offset = "0x920054", VA = "0x920054")]
		public static byte[] FiledataFromNative(uint size, IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x6000E13")]
		[Address(RVA = "0x9200F8", Offset = "0x9200F8", VA = "0x9200F8")]
		public static IntPtr StringToNative(string s)
		{
			return default(IntPtr);
		}

		[PreserveSig]
		[Token(Token = "0x6000E14")]
		[Address(RVA = "0x91D36C", Offset = "0x91D36C", VA = "0x91D36C")]
		public static extern bool ovr_UnityInitWrapper(string appId);

		[PreserveSig]
		[Token(Token = "0x6000E15")]
		[Address(RVA = "0x920268", Offset = "0x920268", VA = "0x920268")]
		public static extern void ovr_UnityInitGlobals(IntPtr loggingCB);

		[PreserveSig]
		[Token(Token = "0x6000E16")]
		[Address(RVA = "0x91D4F0", Offset = "0x91D4F0", VA = "0x91D4F0")]
		public static extern ulong ovr_UnityInitWrapperAsynchronous(string appId);

		[PreserveSig]
		[Token(Token = "0x6000E17")]
		[Address(RVA = "0x9202E8", Offset = "0x9202E8", VA = "0x9202E8")]
		public static extern bool ovr_UnityInitWrapperStandalone(string accessToken, IntPtr loggingCB);

		[PreserveSig]
		[Token(Token = "0x6000E18")]
		[Address(RVA = "0x920394", Offset = "0x920394", VA = "0x920394")]
		public static extern ulong ovr_Platform_InitializeStandaloneOculus(ref OculusInitParams init);

		[PreserveSig]
		[Token(Token = "0x6000E19")]
		[Address(RVA = "0x92046C", Offset = "0x92046C", VA = "0x92046C")]
		public static extern ulong ovr_PlatformInitializeWithAccessToken(ulong appId, string accessToken);

		[PreserveSig]
		[Token(Token = "0x6000E1A")]
		[Address(RVA = "0x920518", Offset = "0x920518", VA = "0x920518")]
		public static extern bool ovr_UnityInitWrapperWindows(string appId, IntPtr loggingCB);

		[PreserveSig]
		[Token(Token = "0x6000E1B")]
		[Address(RVA = "0x9205C4", Offset = "0x9205C4", VA = "0x9205C4")]
		public static extern ulong ovr_UnityInitWrapperWindowsAsynchronous(string appId, IntPtr loggingCB);

		[PreserveSig]
		[Token(Token = "0x6000E1C")]
		[Address(RVA = "0x92066C", Offset = "0x92066C", VA = "0x92066C")]
		public static extern bool ovr_SetDeveloperAccessToken(string accessToken);

		[Token(Token = "0x6000E1D")]
		[Address(RVA = "0x920708", Offset = "0x920708", VA = "0x920708")]
		public static string ovr_GetLoggedInUserLocale()
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000E1E")]
		[Address(RVA = "0x920768", Offset = "0x920768", VA = "0x920768")]
		private static extern IntPtr ovr_GetLoggedInUserLocale_Native();

		[PreserveSig]
		[Token(Token = "0x6000E1F")]
		[Address(RVA = "0x9207DC", Offset = "0x9207DC", VA = "0x9207DC")]
		public static extern IntPtr ovr_PopMessage();

		[PreserveSig]
		[Token(Token = "0x6000E20")]
		[Address(RVA = "0x920850", Offset = "0x920850", VA = "0x920850")]
		public static extern void ovr_FreeMessage(IntPtr message);

		[PreserveSig]
		[Token(Token = "0x6000E21")]
		[Address(RVA = "0x9208D0", Offset = "0x9208D0", VA = "0x9208D0")]
		public static extern uint ovr_NetworkingPeer_GetSendPolicy(IntPtr networkingPeer);

		[PreserveSig]
		[Token(Token = "0x6000E22")]
		[Address(RVA = "0x920950", Offset = "0x920950", VA = "0x920950")]
		public static extern IntPtr ovr_Voip_CreateEncoder();

		[PreserveSig]
		[Token(Token = "0x6000E23")]
		[Address(RVA = "0x9209C4", Offset = "0x9209C4", VA = "0x9209C4")]
		public static extern void ovr_Voip_DestroyEncoder(IntPtr encoder);

		[PreserveSig]
		[Token(Token = "0x6000E24")]
		[Address(RVA = "0x920A44", Offset = "0x920A44", VA = "0x920A44")]
		public static extern IntPtr ovr_Voip_CreateDecoder();

		[PreserveSig]
		[Token(Token = "0x6000E25")]
		[Address(RVA = "0x920AB8", Offset = "0x920AB8", VA = "0x920AB8")]
		public static extern void ovr_Voip_DestroyDecoder(IntPtr decoder);

		[PreserveSig]
		[Token(Token = "0x6000E26")]
		[Address(RVA = "0x920B38", Offset = "0x920B38", VA = "0x920B38")]
		public static extern void ovr_VoipDecoder_Decode(IntPtr obj, byte[] compressedData, ulong compressedSize);

		[PreserveSig]
		[Token(Token = "0x6000E27")]
		[Address(RVA = "0x920BD8", Offset = "0x920BD8", VA = "0x920BD8")]
		public static extern IntPtr ovr_Microphone_Create();

		[PreserveSig]
		[Token(Token = "0x6000E28")]
		[Address(RVA = "0x920C4C", Offset = "0x920C4C", VA = "0x920C4C")]
		public static extern void ovr_Microphone_Destroy(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000E29")]
		[Address(RVA = "0x920CCC", Offset = "0x920CCC", VA = "0x920CCC")]
		public static extern void ovr_Voip_SetSystemVoipPassthrough(bool passthrough);

		[PreserveSig]
		[Token(Token = "0x6000E2A")]
		[Address(RVA = "0x920D4C", Offset = "0x920D4C", VA = "0x920D4C")]
		public static extern void ovr_Voip_SetSystemVoipMicrophoneMuted(VoipMuteState muted);

		[PreserveSig]
		[Token(Token = "0x6000E2B")]
		[Address(RVA = "0x920DCC", Offset = "0x920DCC", VA = "0x920DCC")]
		public static extern void ovr_UnityResetTestPlatform();

		[PreserveSig]
		[Token(Token = "0x6000E2C")]
		[Address(RVA = "0x91D09C", Offset = "0x91D09C", VA = "0x91D09C")]
		public static extern ulong ovr_HTTP_GetWithMessageType(string url, int messageType);

		[PreserveSig]
		[Token(Token = "0x6000E2D")]
		[Address(RVA = "0x920E3C", Offset = "0x920E3C", VA = "0x920E3C")]
		public static extern void ovr_CrashApplication();

		[PreserveSig]
		[Token(Token = "0x6000E2E")]
		[Address(RVA = "0x920EAC", Offset = "0x920EAC", VA = "0x920EAC")]
		public static extern void ovr_Voip_SetMicrophoneFilterCallback(FilterCallback cb);

		[PreserveSig]
		[Token(Token = "0x6000E2F")]
		[Address(RVA = "0x920F30", Offset = "0x920F30", VA = "0x920F30")]
		public static extern void ovr_Voip_SetMicrophoneFilterCallbackWithFixedSizeBuffer(FilterCallback cb, UIntPtr bufferSizeElements);

		[Token(Token = "0x6000E30")]
		[Address(RVA = "0x920FC4", Offset = "0x920FC4", VA = "0x920FC4")]
		public static void LogNewEvent(string eventName, Dictionary<string, string> values)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000E31")]
		[Address(RVA = "0x9212C8", Offset = "0x9212C8", VA = "0x9212C8")]
		public static extern void ovr_Log_NewEvent(IntPtr eventName, IntPtr[] values, UIntPtr length);

		[PreserveSig]
		[Token(Token = "0x6000E32")]
		[Address(RVA = "0x91D9C4", Offset = "0x91D9C4", VA = "0x91D9C4")]
		public static extern IntPtr ovr_ApplicationLifecycle_GetLaunchDetails();

		[Token(Token = "0x6000E33")]
		[Address(RVA = "0x921368", Offset = "0x921368", VA = "0x921368")]
		public static ulong ovr_HTTP_StartTransfer(string url, ovrKeyValuePair[] headers)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000E34")]
		[Address(RVA = "0x92145C", Offset = "0x92145C", VA = "0x92145C")]
		private static extern ulong ovr_HTTP_StartTransfer_Native(IntPtr url, ovrKeyValuePair[] headers, UIntPtr numItems);

		[PreserveSig]
		[Token(Token = "0x6000E35")]
		[Address(RVA = "0x9215B8", Offset = "0x9215B8", VA = "0x9215B8")]
		public static extern bool ovr_HTTP_Write(ulong transferId, byte[] bytes, UIntPtr length);

		[PreserveSig]
		[Token(Token = "0x6000E36")]
		[Address(RVA = "0x921660", Offset = "0x921660", VA = "0x921660")]
		public static extern void ovr_HTTP_WriteEOM(ulong transferId);

		[Token(Token = "0x6000E37")]
		[Address(RVA = "0x9216DC", Offset = "0x9216DC", VA = "0x9216DC")]
		public static string ovr_Message_GetStringForJavascript(IntPtr message)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000E38")]
		[Address(RVA = "0x921744", Offset = "0x921744", VA = "0x921744")]
		private static extern IntPtr ovr_Message_GetStringForJavascript_Native(IntPtr message);

		[PreserveSig]
		[Token(Token = "0x6000E39")]
		[Address(RVA = "0x9217C4", Offset = "0x9217C4", VA = "0x9217C4")]
		public static extern void ovr_Net_Accept(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6000E3A")]
		[Address(RVA = "0x921844", Offset = "0x921844", VA = "0x921844")]
		public static extern bool ovr_Net_AcceptForCurrentRoom();

		[PreserveSig]
		[Token(Token = "0x6000E3B")]
		[Address(RVA = "0x9218C0", Offset = "0x9218C0", VA = "0x9218C0")]
		public static extern void ovr_Net_Close(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6000E3C")]
		[Address(RVA = "0x921940", Offset = "0x921940", VA = "0x921940")]
		public static extern void ovr_Net_CloseForCurrentRoom();

		[PreserveSig]
		[Token(Token = "0x6000E3D")]
		[Address(RVA = "0x9219B0", Offset = "0x9219B0", VA = "0x9219B0")]
		public static extern void ovr_Net_Connect(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6000E3E")]
		[Address(RVA = "0x921A30", Offset = "0x921A30", VA = "0x921A30")]
		public static extern bool ovr_Net_IsConnected(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6000E3F")]
		[Address(RVA = "0x921AB8", Offset = "0x921AB8", VA = "0x921AB8")]
		public static extern ulong ovr_Net_Ping(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6000E40")]
		[Address(RVA = "0x921B38", Offset = "0x921B38", VA = "0x921B38")]
		public static extern IntPtr ovr_Net_ReadPacket();

		[PreserveSig]
		[Token(Token = "0x6000E41")]
		[Address(RVA = "0x921BAC", Offset = "0x921BAC", VA = "0x921BAC")]
		public static extern bool ovr_Net_SendPacket(ulong userID, UIntPtr length, byte[] bytes, SendPolicy policy);

		[PreserveSig]
		[Token(Token = "0x6000E42")]
		[Address(RVA = "0x921C64", Offset = "0x921C64", VA = "0x921C64")]
		public static extern bool ovr_Net_SendPacketToCurrentRoom(UIntPtr length, byte[] bytes, SendPolicy policy);

		[PreserveSig]
		[Token(Token = "0x6000E43")]
		[Address(RVA = "0x921D0C", Offset = "0x921D0C", VA = "0x921D0C")]
		public static extern int ovr_Party_PluginGetSharedMemHandle();

		[PreserveSig]
		[Token(Token = "0x6000E44")]
		[Address(RVA = "0x921D80", Offset = "0x921D80", VA = "0x921D80")]
		public static extern VoipMuteState ovr_Party_PluginGetVoipMicrophoneMuted();

		[PreserveSig]
		[Token(Token = "0x6000E45")]
		[Address(RVA = "0x921DF4", Offset = "0x921DF4", VA = "0x921DF4")]
		public static extern bool ovr_Party_PluginGetVoipPassthrough();

		[PreserveSig]
		[Token(Token = "0x6000E46")]
		[Address(RVA = "0x921E70", Offset = "0x921E70", VA = "0x921E70")]
		public static extern SystemVoipStatus ovr_Party_PluginGetVoipStatus();

		[PreserveSig]
		[Token(Token = "0x6000E47")]
		[Address(RVA = "0x921EE4", Offset = "0x921EE4", VA = "0x921EE4")]
		public static extern void ovr_Voip_Accept(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000E48")]
		[Address(RVA = "0x921F64", Offset = "0x921F64", VA = "0x921F64")]
		public static extern VoipDtxState ovr_Voip_GetIsConnectionUsingDtx(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6000E49")]
		[Address(RVA = "0x921FE4", Offset = "0x921FE4", VA = "0x921FE4")]
		public static extern VoipBitrate ovr_Voip_GetLocalBitrate(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6000E4A")]
		[Address(RVA = "0x922064", Offset = "0x922064", VA = "0x922064")]
		public static extern UIntPtr ovr_Voip_GetOutputBufferMaxSize();

		[PreserveSig]
		[Token(Token = "0x6000E4B")]
		[Address(RVA = "0x9220D8", Offset = "0x9220D8", VA = "0x9220D8")]
		public static extern UIntPtr ovr_Voip_GetPCM(ulong senderID, short[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x6000E4C")]
		[Address(RVA = "0x922178", Offset = "0x922178", VA = "0x922178")]
		public static extern UIntPtr ovr_Voip_GetPCMFloat(ulong senderID, float[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x6000E4D")]
		[Address(RVA = "0x922218", Offset = "0x922218", VA = "0x922218")]
		public static extern UIntPtr ovr_Voip_GetPCMSize(ulong senderID);

		[PreserveSig]
		[Token(Token = "0x6000E4E")]
		[Address(RVA = "0x922298", Offset = "0x922298", VA = "0x922298")]
		public static extern UIntPtr ovr_Voip_GetPCMWithTimestamp(ulong senderID, short[] outputBuffer, UIntPtr outputBufferNumElements, uint[] timestamp);

		[PreserveSig]
		[Token(Token = "0x6000E4F")]
		[Address(RVA = "0x922350", Offset = "0x922350", VA = "0x922350")]
		public static extern UIntPtr ovr_Voip_GetPCMWithTimestampFloat(ulong senderID, float[] outputBuffer, UIntPtr outputBufferNumElements, uint[] timestamp);

		[PreserveSig]
		[Token(Token = "0x6000E50")]
		[Address(RVA = "0x922408", Offset = "0x922408", VA = "0x922408")]
		public static extern VoipBitrate ovr_Voip_GetRemoteBitrate(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6000E51")]
		[Address(RVA = "0x922488", Offset = "0x922488", VA = "0x922488")]
		public static extern uint ovr_Voip_GetSyncTimestamp(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000E52")]
		[Address(RVA = "0x922508", Offset = "0x922508", VA = "0x922508")]
		public static extern long ovr_Voip_GetSyncTimestampDifference(uint lhs, uint rhs);

		[PreserveSig]
		[Token(Token = "0x6000E53")]
		[Address(RVA = "0x922598", Offset = "0x922598", VA = "0x922598")]
		public static extern VoipMuteState ovr_Voip_GetSystemVoipMicrophoneMuted();

		[PreserveSig]
		[Token(Token = "0x6000E54")]
		[Address(RVA = "0x92260C", Offset = "0x92260C", VA = "0x92260C")]
		public static extern SystemVoipStatus ovr_Voip_GetSystemVoipStatus();

		[PreserveSig]
		[Token(Token = "0x6000E55")]
		[Address(RVA = "0x922680", Offset = "0x922680", VA = "0x922680")]
		public static extern void ovr_Voip_SetMicrophoneMuted(VoipMuteState state);

		[PreserveSig]
		[Token(Token = "0x6000E56")]
		[Address(RVA = "0x922700", Offset = "0x922700", VA = "0x922700")]
		public static extern void ovr_Voip_SetNewConnectionOptions(IntPtr voipOptions);

		[PreserveSig]
		[Token(Token = "0x6000E57")]
		[Address(RVA = "0x922780", Offset = "0x922780", VA = "0x922780")]
		public static extern void ovr_Voip_SetOutputSampleRate(VoipSampleRate rate);

		[PreserveSig]
		[Token(Token = "0x6000E58")]
		[Address(RVA = "0x922800", Offset = "0x922800", VA = "0x922800")]
		public static extern void ovr_Voip_Start(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000E59")]
		[Address(RVA = "0x922880", Offset = "0x922880", VA = "0x922880")]
		public static extern void ovr_Voip_Stop(ulong userID);

		[Token(Token = "0x6000E5A")]
		[Address(RVA = "0x91C2C0", Offset = "0x91C2C0", VA = "0x91C2C0")]
		public static ulong ovr_Achievements_AddCount(string name, ulong count)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000E5B")]
		[Address(RVA = "0x922900", Offset = "0x922900", VA = "0x922900")]
		private static extern ulong ovr_Achievements_AddCount_Native(IntPtr name, ulong count);

		[Token(Token = "0x6000E5C")]
		[Address(RVA = "0x91C498", Offset = "0x91C498", VA = "0x91C498")]
		public static ulong ovr_Achievements_AddFields(string name, string fields)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000E5D")]
		[Address(RVA = "0x922990", Offset = "0x922990", VA = "0x922990")]
		private static extern ulong ovr_Achievements_AddFields_Native(IntPtr name, IntPtr fields);

		[PreserveSig]
		[Token(Token = "0x6000E5E")]
		[Address(RVA = "0x91C674", Offset = "0x91C674", VA = "0x91C674")]
		public static extern ulong ovr_Achievements_GetAllDefinitions();

		[PreserveSig]
		[Token(Token = "0x6000E5F")]
		[Address(RVA = "0x91C7F0", Offset = "0x91C7F0", VA = "0x91C7F0")]
		public static extern ulong ovr_Achievements_GetAllProgress();

		[PreserveSig]
		[Token(Token = "0x6000E60")]
		[Address(RVA = "0x91C990", Offset = "0x91C990", VA = "0x91C990")]
		public static extern ulong ovr_Achievements_GetDefinitionsByName(string[] names, int count);

		[PreserveSig]
		[Token(Token = "0x6000E61")]
		[Address(RVA = "0x91CC10", Offset = "0x91CC10", VA = "0x91CC10")]
		public static extern ulong ovr_Achievements_GetProgressByName(string[] names, int count);

		[Token(Token = "0x6000E62")]
		[Address(RVA = "0x91CE7C", Offset = "0x91CE7C", VA = "0x91CE7C")]
		public static ulong ovr_Achievements_Unlock(string name)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000E63")]
		[Address(RVA = "0x922A20", Offset = "0x922A20", VA = "0x922A20")]
		private static extern ulong ovr_Achievements_Unlock_Native(IntPtr name);

		[PreserveSig]
		[Token(Token = "0x6000E64")]
		[Address(RVA = "0x922AA0", Offset = "0x922AA0", VA = "0x922AA0")]
		public static extern ulong ovr_Application_ExecuteCoordinatedLaunch(ulong appID, ulong roomID);

		[PreserveSig]
		[Token(Token = "0x6000E65")]
		[Address(RVA = "0x922B30", Offset = "0x922B30", VA = "0x922B30")]
		public static extern ulong ovr_Application_GetInstalledApplications();

		[PreserveSig]
		[Token(Token = "0x6000E66")]
		[Address(RVA = "0x91D698", Offset = "0x91D698", VA = "0x91D698")]
		public static extern ulong ovr_Application_GetVersion();

		[PreserveSig]
		[Token(Token = "0x6000E67")]
		[Address(RVA = "0x91D8A8", Offset = "0x91D8A8", VA = "0x91D8A8")]
		public static extern ulong ovr_Application_LaunchOtherApp(ulong appID, IntPtr deeplink_options);

		[PreserveSig]
		[Token(Token = "0x6000E68")]
		[Address(RVA = "0x922BA4", Offset = "0x922BA4", VA = "0x922BA4")]
		public static extern ulong ovr_ApplicationLifecycle_GetRegisteredPIDs();

		[PreserveSig]
		[Token(Token = "0x6000E69")]
		[Address(RVA = "0x922C18", Offset = "0x922C18", VA = "0x922C18")]
		public static extern ulong ovr_ApplicationLifecycle_GetSessionKey();

		[Token(Token = "0x6000E6A")]
		[Address(RVA = "0x922C8C", Offset = "0x922C8C", VA = "0x922C8C")]
		public static ulong ovr_ApplicationLifecycle_RegisterSessionKey(string sessionKey)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000E6B")]
		[Address(RVA = "0x922D34", Offset = "0x922D34", VA = "0x922D34")]
		private static extern ulong ovr_ApplicationLifecycle_RegisterSessionKey_Native(IntPtr sessionKey);

		[PreserveSig]
		[Token(Token = "0x6000E6C")]
		[Address(RVA = "0x91DE90", Offset = "0x91DE90", VA = "0x91DE90")]
		public static extern ulong ovr_AssetFile_Delete(ulong assetFileID);

		[PreserveSig]
		[Token(Token = "0x6000E6D")]
		[Address(RVA = "0x91E028", Offset = "0x91E028", VA = "0x91E028")]
		public static extern ulong ovr_AssetFile_DeleteById(ulong assetFileID);

		[Token(Token = "0x6000E6E")]
		[Address(RVA = "0x91E1C0", Offset = "0x91E1C0", VA = "0x91E1C0")]
		public static ulong ovr_AssetFile_DeleteByName(string assetFileName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000E6F")]
		[Address(RVA = "0x922DB4", Offset = "0x922DB4", VA = "0x922DB4")]
		private static extern ulong ovr_AssetFile_DeleteByName_Native(IntPtr assetFileName);

		[PreserveSig]
		[Token(Token = "0x6000E70")]
		[Address(RVA = "0x91E380", Offset = "0x91E380", VA = "0x91E380")]
		public static extern ulong ovr_AssetFile_Download(ulong assetFileID);

		[PreserveSig]
		[Token(Token = "0x6000E71")]
		[Address(RVA = "0x91E518", Offset = "0x91E518", VA = "0x91E518")]
		public static extern ulong ovr_AssetFile_DownloadById(ulong assetFileID);

		[Token(Token = "0x6000E72")]
		[Address(RVA = "0x91E6B0", Offset = "0x91E6B0", VA = "0x91E6B0")]
		public static ulong ovr_AssetFile_DownloadByName(string assetFileName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000E73")]
		[Address(RVA = "0x922E34", Offset = "0x922E34", VA = "0x922E34")]
		private static extern ulong ovr_AssetFile_DownloadByName_Native(IntPtr assetFileName);

		[PreserveSig]
		[Token(Token = "0x6000E74")]
		[Address(RVA = "0x91E870", Offset = "0x91E870", VA = "0x91E870")]
		public static extern ulong ovr_AssetFile_DownloadCancel(ulong assetFileID);

		[PreserveSig]
		[Token(Token = "0x6000E75")]
		[Address(RVA = "0x91EA08", Offset = "0x91EA08", VA = "0x91EA08")]
		public static extern ulong ovr_AssetFile_DownloadCancelById(ulong assetFileID);

		[Token(Token = "0x6000E76")]
		[Address(RVA = "0x91EBA0", Offset = "0x91EBA0", VA = "0x91EBA0")]
		public static ulong ovr_AssetFile_DownloadCancelByName(string assetFileName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000E77")]
		[Address(RVA = "0x922EB4", Offset = "0x922EB4", VA = "0x922EB4")]
		private static extern ulong ovr_AssetFile_DownloadCancelByName_Native(IntPtr assetFileName);

		[PreserveSig]
		[Token(Token = "0x6000E78")]
		[Address(RVA = "0x91ED50", Offset = "0x91ED50", VA = "0x91ED50")]
		public static extern ulong ovr_AssetFile_GetList();

		[PreserveSig]
		[Token(Token = "0x6000E79")]
		[Address(RVA = "0x91EEDC", Offset = "0x91EEDC", VA = "0x91EEDC")]
		public static extern ulong ovr_AssetFile_Status(ulong assetFileID);

		[PreserveSig]
		[Token(Token = "0x6000E7A")]
		[Address(RVA = "0x91F074", Offset = "0x91F074", VA = "0x91F074")]
		public static extern ulong ovr_AssetFile_StatusById(ulong assetFileID);

		[Token(Token = "0x6000E7B")]
		[Address(RVA = "0x91F20C", Offset = "0x91F20C", VA = "0x91F20C")]
		public static ulong ovr_AssetFile_StatusByName(string assetFileName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000E7C")]
		[Address(RVA = "0x922F34", Offset = "0x922F34", VA = "0x922F34")]
		private static extern ulong ovr_AssetFile_StatusByName_Native(IntPtr assetFileName);

		[Token(Token = "0x6000E7D")]
		[Address(RVA = "0x922FB4", Offset = "0x922FB4", VA = "0x922FB4")]
		public static ulong ovr_Avatar_UpdateMetaData(string avatarMetaData, string imageFilePath)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000E7E")]
		[Address(RVA = "0x923088", Offset = "0x923088", VA = "0x923088")]
		private static extern ulong ovr_Avatar_UpdateMetaData_Native(IntPtr avatarMetaData, IntPtr imageFilePath);

		[PreserveSig]
		[Token(Token = "0x6000E7F")]
		[Address(RVA = "0x923118", Offset = "0x923118", VA = "0x923118")]
		public static extern ulong ovr_Cal_FinalizeApplication(ulong groupingObject, ulong[] userIDs, int numUserIDs, ulong finalized_application_ID);

		[PreserveSig]
		[Token(Token = "0x6000E80")]
		[Address(RVA = "0x9231C8", Offset = "0x9231C8", VA = "0x9231C8")]
		public static extern ulong ovr_Cal_GetSuggestedApplications(ulong groupingObject, ulong[] userIDs, int numUserIDs);

		[PreserveSig]
		[Token(Token = "0x6000E81")]
		[Address(RVA = "0x923268", Offset = "0x923268", VA = "0x923268")]
		public static extern ulong ovr_Cal_ProposeApplication(ulong groupingObject, ulong[] userIDs, int numUserIDs, ulong proposed_application_ID);

		[Token(Token = "0x6000E82")]
		[Address(RVA = "0x923318", Offset = "0x923318", VA = "0x923318")]
		public static ulong ovr_CloudStorage_Delete(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000E83")]
		[Address(RVA = "0x9233EC", Offset = "0x9233EC", VA = "0x9233EC")]
		private static extern ulong ovr_CloudStorage_Delete_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x6000E84")]
		[Address(RVA = "0x92347C", Offset = "0x92347C", VA = "0x92347C")]
		public static ulong ovr_CloudStorage_Load(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000E85")]
		[Address(RVA = "0x923550", Offset = "0x923550", VA = "0x923550")]
		private static extern ulong ovr_CloudStorage_Load_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x6000E86")]
		[Address(RVA = "0x9235E0", Offset = "0x9235E0", VA = "0x9235E0")]
		public static ulong ovr_CloudStorage_LoadBucketMetadata(string bucket)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000E87")]
		[Address(RVA = "0x923688", Offset = "0x923688", VA = "0x923688")]
		private static extern ulong ovr_CloudStorage_LoadBucketMetadata_Native(IntPtr bucket);

		[Token(Token = "0x6000E88")]
		[Address(RVA = "0x923708", Offset = "0x923708", VA = "0x923708")]
		public static ulong ovr_CloudStorage_LoadConflictMetadata(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000E89")]
		[Address(RVA = "0x9237DC", Offset = "0x9237DC", VA = "0x9237DC")]
		private static extern ulong ovr_CloudStorage_LoadConflictMetadata_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x6000E8A")]
		[Address(RVA = "0x92386C", Offset = "0x92386C", VA = "0x92386C")]
		public static ulong ovr_CloudStorage_LoadHandle(string handle)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000E8B")]
		[Address(RVA = "0x923914", Offset = "0x923914", VA = "0x923914")]
		private static extern ulong ovr_CloudStorage_LoadHandle_Native(IntPtr handle);

		[Token(Token = "0x6000E8C")]
		[Address(RVA = "0x923994", Offset = "0x923994", VA = "0x923994")]
		public static ulong ovr_CloudStorage_LoadMetadata(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000E8D")]
		[Address(RVA = "0x923A68", Offset = "0x923A68", VA = "0x923A68")]
		private static extern ulong ovr_CloudStorage_LoadMetadata_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x6000E8E")]
		[Address(RVA = "0x923AF8", Offset = "0x923AF8", VA = "0x923AF8")]
		public static ulong ovr_CloudStorage_ResolveKeepLocal(string bucket, string key, string remoteHandle)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000E8F")]
		[Address(RVA = "0x923BEC", Offset = "0x923BEC", VA = "0x923BEC")]
		private static extern ulong ovr_CloudStorage_ResolveKeepLocal_Native(IntPtr bucket, IntPtr key, IntPtr remoteHandle);

		[Token(Token = "0x6000E90")]
		[Address(RVA = "0x923C84", Offset = "0x923C84", VA = "0x923C84")]
		public static ulong ovr_CloudStorage_ResolveKeepRemote(string bucket, string key, string remoteHandle)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000E91")]
		[Address(RVA = "0x923D78", Offset = "0x923D78", VA = "0x923D78")]
		private static extern ulong ovr_CloudStorage_ResolveKeepRemote_Native(IntPtr bucket, IntPtr key, IntPtr remoteHandle);

		[Token(Token = "0x6000E92")]
		[Address(RVA = "0x923E10", Offset = "0x923E10", VA = "0x923E10")]
		public static ulong ovr_CloudStorage_Save(string bucket, string key, byte[] data, uint dataSize, long counter, string extraData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000E93")]
		[Address(RVA = "0x923F2C", Offset = "0x923F2C", VA = "0x923F2C")]
		private static extern ulong ovr_CloudStorage_Save_Native(IntPtr bucket, IntPtr key, byte[] data, uint dataSize, long counter, IntPtr extraData);

		[PreserveSig]
		[Token(Token = "0x6000E94")]
		[Address(RVA = "0x923FF4", Offset = "0x923FF4", VA = "0x923FF4")]
		public static extern ulong ovr_CloudStorage2_GetUserDirectoryPath();

		[PreserveSig]
		[Token(Token = "0x6000E95")]
		[Address(RVA = "0x924068", Offset = "0x924068", VA = "0x924068")]
		public static extern ulong ovr_Entitlement_GetIsViewerEntitled();

		[Token(Token = "0x6000E96")]
		[Address(RVA = "0x9240DC", Offset = "0x9240DC", VA = "0x9240DC")]
		public static ulong ovr_GraphAPI_Get(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000E97")]
		[Address(RVA = "0x924184", Offset = "0x924184", VA = "0x924184")]
		private static extern ulong ovr_GraphAPI_Get_Native(IntPtr url);

		[Token(Token = "0x6000E98")]
		[Address(RVA = "0x924204", Offset = "0x924204", VA = "0x924204")]
		public static ulong ovr_GraphAPI_Post(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000E99")]
		[Address(RVA = "0x9242AC", Offset = "0x9242AC", VA = "0x9242AC")]
		private static extern ulong ovr_GraphAPI_Post_Native(IntPtr url);

		[Token(Token = "0x6000E9A")]
		[Address(RVA = "0x924328", Offset = "0x924328", VA = "0x924328")]
		public static ulong ovr_HTTP_Get(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000E9B")]
		[Address(RVA = "0x9243D0", Offset = "0x9243D0", VA = "0x9243D0")]
		private static extern ulong ovr_HTTP_Get_Native(IntPtr url);

		[Token(Token = "0x6000E9C")]
		[Address(RVA = "0x924450", Offset = "0x924450", VA = "0x924450")]
		public static ulong ovr_HTTP_GetToFile(string url, string diskFile)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000E9D")]
		[Address(RVA = "0x924524", Offset = "0x924524", VA = "0x924524")]
		private static extern ulong ovr_HTTP_GetToFile_Native(IntPtr url, IntPtr diskFile);

		[Token(Token = "0x6000E9E")]
		[Address(RVA = "0x9245B4", Offset = "0x9245B4", VA = "0x9245B4")]
		public static ulong ovr_HTTP_MultiPartPost(string url, string filepath_param_name, string filepath, string access_token, ovrKeyValuePair[] post_params)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000E9F")]
		[Address(RVA = "0x924710", Offset = "0x924710", VA = "0x924710")]
		private static extern ulong ovr_HTTP_MultiPartPost_Native(IntPtr url, IntPtr filepath_param_name, IntPtr filepath, IntPtr access_token, ovrKeyValuePair[] post_params, UIntPtr numItems);

		[Token(Token = "0x6000EA0")]
		[Address(RVA = "0x92489C", Offset = "0x92489C", VA = "0x92489C")]
		public static ulong ovr_HTTP_Post(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000EA1")]
		[Address(RVA = "0x924944", Offset = "0x924944", VA = "0x924944")]
		private static extern ulong ovr_HTTP_Post_Native(IntPtr url);

		[Token(Token = "0x6000EA2")]
		[Address(RVA = "0x9249C4", Offset = "0x9249C4", VA = "0x9249C4")]
		public static ulong ovr_IAP_ConsumePurchase(string sku)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000EA3")]
		[Address(RVA = "0x924A6C", Offset = "0x924A6C", VA = "0x924A6C")]
		private static extern ulong ovr_IAP_ConsumePurchase_Native(IntPtr sku);

		[PreserveSig]
		[Token(Token = "0x6000EA4")]
		[Address(RVA = "0x924AEC", Offset = "0x924AEC", VA = "0x924AEC")]
		public static extern ulong ovr_IAP_GetProductsBySKU(string[] skus, int count);

		[PreserveSig]
		[Token(Token = "0x6000EA5")]
		[Address(RVA = "0x924C40", Offset = "0x924C40", VA = "0x924C40")]
		public static extern ulong ovr_IAP_GetViewerPurchases();

		[Token(Token = "0x6000EA6")]
		[Address(RVA = "0x924CB4", Offset = "0x924CB4", VA = "0x924CB4")]
		public static ulong ovr_IAP_LaunchCheckoutFlow(string sku)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000EA7")]
		[Address(RVA = "0x924D5C", Offset = "0x924D5C", VA = "0x924D5C")]
		private static extern ulong ovr_IAP_LaunchCheckoutFlow_Native(IntPtr sku);

		[PreserveSig]
		[Token(Token = "0x6000EA8")]
		[Address(RVA = "0x924DDC", Offset = "0x924DDC", VA = "0x924DDC")]
		public static extern ulong ovr_LanguagePack_GetCurrent();

		[Token(Token = "0x6000EA9")]
		[Address(RVA = "0x924E50", Offset = "0x924E50", VA = "0x924E50")]
		public static ulong ovr_LanguagePack_SetCurrent(string tag)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000EAA")]
		[Address(RVA = "0x924EF8", Offset = "0x924EF8", VA = "0x924EF8")]
		private static extern ulong ovr_LanguagePack_SetCurrent_Native(IntPtr tag);

		[Token(Token = "0x6000EAB")]
		[Address(RVA = "0x924F78", Offset = "0x924F78", VA = "0x924F78")]
		public static ulong ovr_Leaderboard_GetEntries(string leaderboardName, int limit, LeaderboardFilterType filter, LeaderboardStartAt startAt)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000EAC")]
		[Address(RVA = "0x925048", Offset = "0x925048", VA = "0x925048")]
		private static extern ulong ovr_Leaderboard_GetEntries_Native(IntPtr leaderboardName, int limit, LeaderboardFilterType filter, LeaderboardStartAt startAt);

		[Token(Token = "0x6000EAD")]
		[Address(RVA = "0x9250F0", Offset = "0x9250F0", VA = "0x9250F0")]
		public static ulong ovr_Leaderboard_GetEntriesAfterRank(string leaderboardName, int limit, ulong afterRank)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000EAE")]
		[Address(RVA = "0x9251B0", Offset = "0x9251B0", VA = "0x9251B0")]
		private static extern ulong ovr_Leaderboard_GetEntriesAfterRank_Native(IntPtr leaderboardName, int limit, ulong afterRank);

		[PreserveSig]
		[Token(Token = "0x6000EAF")]
		[Address(RVA = "0x925248", Offset = "0x925248", VA = "0x925248")]
		public static extern ulong ovr_Leaderboard_GetNextEntries(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6000EB0")]
		[Address(RVA = "0x9252C8", Offset = "0x9252C8", VA = "0x9252C8")]
		public static extern ulong ovr_Leaderboard_GetPreviousEntries(IntPtr handle);

		[Token(Token = "0x6000EB1")]
		[Address(RVA = "0x925348", Offset = "0x925348", VA = "0x925348")]
		public static ulong ovr_Leaderboard_WriteEntry(string leaderboardName, long score, byte[] extraData, uint extraDataLength, bool forceUpdate)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000EB2")]
		[Address(RVA = "0x925420", Offset = "0x925420", VA = "0x925420")]
		private static extern ulong ovr_Leaderboard_WriteEntry_Native(IntPtr leaderboardName, long score, byte[] extraData, uint extraDataLength, bool forceUpdate);

		[PreserveSig]
		[Token(Token = "0x6000EB3")]
		[Address(RVA = "0x9254D8", Offset = "0x9254D8", VA = "0x9254D8")]
		public static extern ulong ovr_Livestreaming_GetStatus();

		[Token(Token = "0x6000EB4")]
		[Address(RVA = "0x92554C", Offset = "0x92554C", VA = "0x92554C")]
		public static ulong ovr_Livestreaming_IsAllowedForApplication(string packageName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000EB5")]
		[Address(RVA = "0x9255F4", Offset = "0x9255F4", VA = "0x9255F4")]
		private static extern ulong ovr_Livestreaming_IsAllowedForApplication_Native(IntPtr packageName);

		[PreserveSig]
		[Token(Token = "0x6000EB6")]
		[Address(RVA = "0x925674", Offset = "0x925674", VA = "0x925674")]
		public static extern ulong ovr_Livestreaming_PauseStream();

		[PreserveSig]
		[Token(Token = "0x6000EB7")]
		[Address(RVA = "0x9256E8", Offset = "0x9256E8", VA = "0x9256E8")]
		public static extern ulong ovr_Livestreaming_ResumeStream();

		[PreserveSig]
		[Token(Token = "0x6000EB8")]
		[Address(RVA = "0x92575C", Offset = "0x92575C", VA = "0x92575C")]
		public static extern ulong ovr_Livestreaming_StartPartyStream();

		[PreserveSig]
		[Token(Token = "0x6000EB9")]
		[Address(RVA = "0x9257D0", Offset = "0x9257D0", VA = "0x9257D0")]
		public static extern ulong ovr_Livestreaming_StartStream(LivestreamingAudience audience, LivestreamingMicrophoneStatus micStatus);

		[PreserveSig]
		[Token(Token = "0x6000EBA")]
		[Address(RVA = "0x925860", Offset = "0x925860", VA = "0x925860")]
		public static extern ulong ovr_Livestreaming_StopPartyStream();

		[PreserveSig]
		[Token(Token = "0x6000EBB")]
		[Address(RVA = "0x9258D4", Offset = "0x9258D4", VA = "0x9258D4")]
		public static extern ulong ovr_Livestreaming_StopStream();

		[PreserveSig]
		[Token(Token = "0x6000EBC")]
		[Address(RVA = "0x925948", Offset = "0x925948", VA = "0x925948")]
		public static extern ulong ovr_Livestreaming_UpdateCommentsOverlayVisibility(bool isVisible);

		[PreserveSig]
		[Token(Token = "0x6000EBD")]
		[Address(RVA = "0x9259C8", Offset = "0x9259C8", VA = "0x9259C8")]
		public static extern ulong ovr_Livestreaming_UpdateMicStatus(LivestreamingMicrophoneStatus micStatus);

		[Token(Token = "0x6000EBE")]
		[Address(RVA = "0x925A48", Offset = "0x925A48", VA = "0x925A48")]
		public static ulong ovr_Matchmaking_Browse(string pool, IntPtr customQueryData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000EBF")]
		[Address(RVA = "0x925B00", Offset = "0x925B00", VA = "0x925B00")]
		private static extern ulong ovr_Matchmaking_Browse_Native(IntPtr pool, IntPtr customQueryData);

		[Token(Token = "0x6000EC0")]
		[Address(RVA = "0x925B90", Offset = "0x925B90", VA = "0x925B90")]
		public static ulong ovr_Matchmaking_Browse2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000EC1")]
		[Address(RVA = "0x925C48", Offset = "0x925C48", VA = "0x925C48")]
		private static extern ulong ovr_Matchmaking_Browse2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[Token(Token = "0x6000EC2")]
		[Address(RVA = "0x925CD8", Offset = "0x925CD8", VA = "0x925CD8")]
		public static ulong ovr_Matchmaking_Cancel(string pool, string requestHash)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000EC3")]
		[Address(RVA = "0x925DAC", Offset = "0x925DAC", VA = "0x925DAC")]
		private static extern ulong ovr_Matchmaking_Cancel_Native(IntPtr pool, IntPtr requestHash);

		[PreserveSig]
		[Token(Token = "0x6000EC4")]
		[Address(RVA = "0x925E3C", Offset = "0x925E3C", VA = "0x925E3C")]
		public static extern ulong ovr_Matchmaking_Cancel2();

		[Token(Token = "0x6000EC5")]
		[Address(RVA = "0x925EB0", Offset = "0x925EB0", VA = "0x925EB0")]
		public static ulong ovr_Matchmaking_CreateAndEnqueueRoom(string pool, uint maxUsers, bool subscribeToUpdates, IntPtr customQueryData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000EC6")]
		[Address(RVA = "0x925F80", Offset = "0x925F80", VA = "0x925F80")]
		private static extern ulong ovr_Matchmaking_CreateAndEnqueueRoom_Native(IntPtr pool, uint maxUsers, bool subscribeToUpdates, IntPtr customQueryData);

		[Token(Token = "0x6000EC7")]
		[Address(RVA = "0x926028", Offset = "0x926028", VA = "0x926028")]
		public static ulong ovr_Matchmaking_CreateAndEnqueueRoom2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000EC8")]
		[Address(RVA = "0x9260E0", Offset = "0x9260E0", VA = "0x9260E0")]
		private static extern ulong ovr_Matchmaking_CreateAndEnqueueRoom2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[Token(Token = "0x6000EC9")]
		[Address(RVA = "0x926170", Offset = "0x926170", VA = "0x926170")]
		public static ulong ovr_Matchmaking_CreateRoom(string pool, uint maxUsers, bool subscribeToUpdates)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000ECA")]
		[Address(RVA = "0x926230", Offset = "0x926230", VA = "0x926230")]
		private static extern ulong ovr_Matchmaking_CreateRoom_Native(IntPtr pool, uint maxUsers, bool subscribeToUpdates);

		[Token(Token = "0x6000ECB")]
		[Address(RVA = "0x9262C8", Offset = "0x9262C8", VA = "0x9262C8")]
		public static ulong ovr_Matchmaking_CreateRoom2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000ECC")]
		[Address(RVA = "0x926380", Offset = "0x926380", VA = "0x926380")]
		private static extern ulong ovr_Matchmaking_CreateRoom2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[Token(Token = "0x6000ECD")]
		[Address(RVA = "0x926410", Offset = "0x926410", VA = "0x926410")]
		public static ulong ovr_Matchmaking_Enqueue(string pool, IntPtr customQueryData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000ECE")]
		[Address(RVA = "0x9264C8", Offset = "0x9264C8", VA = "0x9264C8")]
		private static extern ulong ovr_Matchmaking_Enqueue_Native(IntPtr pool, IntPtr customQueryData);

		[Token(Token = "0x6000ECF")]
		[Address(RVA = "0x926558", Offset = "0x926558", VA = "0x926558")]
		public static ulong ovr_Matchmaking_Enqueue2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000ED0")]
		[Address(RVA = "0x926610", Offset = "0x926610", VA = "0x926610")]
		private static extern ulong ovr_Matchmaking_Enqueue2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[PreserveSig]
		[Token(Token = "0x6000ED1")]
		[Address(RVA = "0x9266A0", Offset = "0x9266A0", VA = "0x9266A0")]
		public static extern ulong ovr_Matchmaking_EnqueueRoom(ulong roomID, IntPtr customQueryData);

		[PreserveSig]
		[Token(Token = "0x6000ED2")]
		[Address(RVA = "0x926730", Offset = "0x926730", VA = "0x926730")]
		public static extern ulong ovr_Matchmaking_EnqueueRoom2(ulong roomID, IntPtr matchmakingOptions);

		[PreserveSig]
		[Token(Token = "0x6000ED3")]
		[Address(RVA = "0x9267C0", Offset = "0x9267C0", VA = "0x9267C0")]
		public static extern ulong ovr_Matchmaking_GetAdminSnapshot();

		[Token(Token = "0x6000ED4")]
		[Address(RVA = "0x926834", Offset = "0x926834", VA = "0x926834")]
		public static ulong ovr_Matchmaking_GetStats(string pool, uint maxLevel, MatchmakingStatApproach approach)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000ED5")]
		[Address(RVA = "0x9268F4", Offset = "0x9268F4", VA = "0x9268F4")]
		private static extern ulong ovr_Matchmaking_GetStats_Native(IntPtr pool, uint maxLevel, MatchmakingStatApproach approach);

		[PreserveSig]
		[Token(Token = "0x6000ED6")]
		[Address(RVA = "0x92698C", Offset = "0x92698C", VA = "0x92698C")]
		public static extern ulong ovr_Matchmaking_JoinRoom(ulong roomID, bool subscribeToUpdates);

		[Token(Token = "0x6000ED7")]
		[Address(RVA = "0x926A1C", Offset = "0x926A1C", VA = "0x926A1C")]
		public static ulong ovr_Matchmaking_ReportResultInsecure(ulong roomID, ovrKeyValuePair[] data)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000ED8")]
		[Address(RVA = "0x926AD0", Offset = "0x926AD0", VA = "0x926AD0")]
		private static extern ulong ovr_Matchmaking_ReportResultInsecure_Native(ulong roomID, ovrKeyValuePair[] data, UIntPtr numItems);

		[PreserveSig]
		[Token(Token = "0x6000ED9")]
		[Address(RVA = "0x926C2C", Offset = "0x926C2C", VA = "0x926C2C")]
		public static extern ulong ovr_Matchmaking_StartMatch(ulong roomID);

		[Token(Token = "0x6000EDA")]
		[Address(RVA = "0x926CAC", Offset = "0x926CAC", VA = "0x926CAC")]
		public static ulong ovr_Media_ShareToFacebook(string postTextSuggestion, string filePath, MediaContentType contentType)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000EDB")]
		[Address(RVA = "0x926D88", Offset = "0x926D88", VA = "0x926D88")]
		private static extern ulong ovr_Media_ShareToFacebook_Native(IntPtr postTextSuggestion, IntPtr filePath, MediaContentType contentType);

		[PreserveSig]
		[Token(Token = "0x6000EDC")]
		[Address(RVA = "0x926E20", Offset = "0x926E20", VA = "0x926E20")]
		public static extern ulong ovr_Notification_GetRoomInvites();

		[PreserveSig]
		[Token(Token = "0x6000EDD")]
		[Address(RVA = "0x926E94", Offset = "0x926E94", VA = "0x926E94")]
		public static extern ulong ovr_Notification_MarkAsRead(ulong notificationID);

		[PreserveSig]
		[Token(Token = "0x6000EDE")]
		[Address(RVA = "0x926F14", Offset = "0x926F14", VA = "0x926F14")]
		public static extern ulong ovr_Party_Create();

		[PreserveSig]
		[Token(Token = "0x6000EDF")]
		[Address(RVA = "0x926F88", Offset = "0x926F88", VA = "0x926F88")]
		public static extern ulong ovr_Party_GatherInApplication(ulong partyID, ulong appID);

		[PreserveSig]
		[Token(Token = "0x6000EE0")]
		[Address(RVA = "0x927018", Offset = "0x927018", VA = "0x927018")]
		public static extern ulong ovr_Party_Get(ulong partyID);

		[PreserveSig]
		[Token(Token = "0x6000EE1")]
		[Address(RVA = "0x927098", Offset = "0x927098", VA = "0x927098")]
		public static extern ulong ovr_Party_GetCurrent();

		[PreserveSig]
		[Token(Token = "0x6000EE2")]
		[Address(RVA = "0x92710C", Offset = "0x92710C", VA = "0x92710C")]
		public static extern ulong ovr_Party_GetCurrentForUser(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000EE3")]
		[Address(RVA = "0x92718C", Offset = "0x92718C", VA = "0x92718C")]
		public static extern ulong ovr_Party_Invite(ulong partyID, ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000EE4")]
		[Address(RVA = "0x927218", Offset = "0x927218", VA = "0x927218")]
		public static extern ulong ovr_Party_Join(ulong partyID);

		[PreserveSig]
		[Token(Token = "0x6000EE5")]
		[Address(RVA = "0x927298", Offset = "0x927298", VA = "0x927298")]
		public static extern ulong ovr_Party_Leave(ulong partyID);

		[PreserveSig]
		[Token(Token = "0x6000EE6")]
		[Address(RVA = "0x927318", Offset = "0x927318", VA = "0x927318")]
		public static extern ulong ovr_Room_CreateAndJoinPrivate(RoomJoinPolicy joinPolicy, uint maxUsers, bool subscribeToUpdates);

		[PreserveSig]
		[Token(Token = "0x6000EE7")]
		[Address(RVA = "0x9273B0", Offset = "0x9273B0", VA = "0x9273B0")]
		public static extern ulong ovr_Room_CreateAndJoinPrivate2(RoomJoinPolicy joinPolicy, uint maxUsers, IntPtr roomOptions);

		[PreserveSig]
		[Token(Token = "0x6000EE8")]
		[Address(RVA = "0x927448", Offset = "0x927448", VA = "0x927448")]
		public static extern ulong ovr_Room_Get(ulong roomID);

		[PreserveSig]
		[Token(Token = "0x6000EE9")]
		[Address(RVA = "0x9274C8", Offset = "0x9274C8", VA = "0x9274C8")]
		public static extern ulong ovr_Room_GetCurrent();

		[PreserveSig]
		[Token(Token = "0x6000EEA")]
		[Address(RVA = "0x92753C", Offset = "0x92753C", VA = "0x92753C")]
		public static extern ulong ovr_Room_GetCurrentForUser(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000EEB")]
		[Address(RVA = "0x9275BC", Offset = "0x9275BC", VA = "0x9275BC")]
		public static extern ulong ovr_Room_GetInvitableUsers();

		[PreserveSig]
		[Token(Token = "0x6000EEC")]
		[Address(RVA = "0x927630", Offset = "0x927630", VA = "0x927630")]
		public static extern ulong ovr_Room_GetInvitableUsers2(IntPtr roomOptions);

		[PreserveSig]
		[Token(Token = "0x6000EED")]
		[Address(RVA = "0x9276B0", Offset = "0x9276B0", VA = "0x9276B0")]
		public static extern ulong ovr_Room_GetModeratedRooms();

		[PreserveSig]
		[Token(Token = "0x6000EEE")]
		[Address(RVA = "0x927724", Offset = "0x927724", VA = "0x927724")]
		public static extern ulong ovr_Room_GetSocialRooms(ulong appID);

		[Token(Token = "0x6000EEF")]
		[Address(RVA = "0x9277A4", Offset = "0x9277A4", VA = "0x9277A4")]
		public static ulong ovr_Room_InviteUser(ulong roomID, string inviteToken)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000EF0")]
		[Address(RVA = "0x927860", Offset = "0x927860", VA = "0x927860")]
		private static extern ulong ovr_Room_InviteUser_Native(ulong roomID, IntPtr inviteToken);

		[PreserveSig]
		[Token(Token = "0x6000EF1")]
		[Address(RVA = "0x9278F0", Offset = "0x9278F0", VA = "0x9278F0")]
		public static extern ulong ovr_Room_Join(ulong roomID, bool subscribeToUpdates);

		[PreserveSig]
		[Token(Token = "0x6000EF2")]
		[Address(RVA = "0x927980", Offset = "0x927980", VA = "0x927980")]
		public static extern ulong ovr_Room_Join2(ulong roomID, IntPtr roomOptions);

		[PreserveSig]
		[Token(Token = "0x6000EF3")]
		[Address(RVA = "0x927A10", Offset = "0x927A10", VA = "0x927A10")]
		public static extern ulong ovr_Room_KickUser(ulong roomID, ulong userID, int kickDurationSeconds);

		[PreserveSig]
		[Token(Token = "0x6000EF4")]
		[Address(RVA = "0x927AA4", Offset = "0x927AA4", VA = "0x927AA4")]
		public static extern ulong ovr_Room_LaunchInvitableUserFlow(ulong roomID);

		[PreserveSig]
		[Token(Token = "0x6000EF5")]
		[Address(RVA = "0x927B24", Offset = "0x927B24", VA = "0x927B24")]
		public static extern ulong ovr_Room_Leave(ulong roomID);

		[Token(Token = "0x6000EF6")]
		[Address(RVA = "0x927BA4", Offset = "0x927BA4", VA = "0x927BA4")]
		public static ulong ovr_Room_SetDescription(ulong roomID, string description)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000EF7")]
		[Address(RVA = "0x927C60", Offset = "0x927C60", VA = "0x927C60")]
		private static extern ulong ovr_Room_SetDescription_Native(ulong roomID, IntPtr description);

		[Token(Token = "0x6000EF8")]
		[Address(RVA = "0x927CF0", Offset = "0x927CF0", VA = "0x927CF0")]
		public static ulong ovr_Room_UpdateDataStore(ulong roomID, ovrKeyValuePair[] data)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000EF9")]
		[Address(RVA = "0x927DA4", Offset = "0x927DA4", VA = "0x927DA4")]
		private static extern ulong ovr_Room_UpdateDataStore_Native(ulong roomID, ovrKeyValuePair[] data, UIntPtr numItems);

		[PreserveSig]
		[Token(Token = "0x6000EFA")]
		[Address(RVA = "0x927EFC", Offset = "0x927EFC", VA = "0x927EFC")]
		public static extern ulong ovr_Room_UpdateMembershipLockStatus(ulong roomID, RoomMembershipLockStatus membershipLockStatus);

		[PreserveSig]
		[Token(Token = "0x6000EFB")]
		[Address(RVA = "0x927F8C", Offset = "0x927F8C", VA = "0x927F8C")]
		public static extern ulong ovr_Room_UpdateOwner(ulong roomID, ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000EFC")]
		[Address(RVA = "0x92801C", Offset = "0x92801C", VA = "0x92801C")]
		public static extern ulong ovr_Room_UpdatePrivateRoomJoinPolicy(ulong roomID, RoomJoinPolicy newJoinPolicy);

		[PreserveSig]
		[Token(Token = "0x6000EFD")]
		[Address(RVA = "0x9280AC", Offset = "0x9280AC", VA = "0x9280AC")]
		public static extern ulong ovr_SystemPermissions_GetStatus(PermissionType permType);

		[PreserveSig]
		[Token(Token = "0x6000EFE")]
		[Address(RVA = "0x92812C", Offset = "0x92812C", VA = "0x92812C")]
		public static extern ulong ovr_SystemPermissions_LaunchDeeplink(PermissionType permType);

		[Token(Token = "0x6000EFF")]
		[Address(RVA = "0x9281AC", Offset = "0x9281AC", VA = "0x9281AC")]
		public static ulong ovr_User_CancelRecordingForReportFlow(string recordingUUID)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000F00")]
		[Address(RVA = "0x928254", Offset = "0x928254", VA = "0x928254")]
		private static extern ulong ovr_User_CancelRecordingForReportFlow_Native(IntPtr recordingUUID);

		[PreserveSig]
		[Token(Token = "0x6000F01")]
		[Address(RVA = "0x9282D4", Offset = "0x9282D4", VA = "0x9282D4")]
		public static extern ulong ovr_User_Get(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000F02")]
		[Address(RVA = "0x928354", Offset = "0x928354", VA = "0x928354")]
		public static extern ulong ovr_User_GetAccessToken();

		[PreserveSig]
		[Token(Token = "0x6000F03")]
		[Address(RVA = "0x9283C8", Offset = "0x9283C8", VA = "0x9283C8")]
		public static extern ulong ovr_User_GetLinkedAccounts(IntPtr userOptions);

		[PreserveSig]
		[Token(Token = "0x6000F04")]
		[Address(RVA = "0x928448", Offset = "0x928448", VA = "0x928448")]
		public static extern ulong ovr_User_GetLoggedInUser();

		[PreserveSig]
		[Token(Token = "0x6000F05")]
		[Address(RVA = "0x9284BC", Offset = "0x9284BC", VA = "0x9284BC")]
		public static extern ulong ovr_User_GetLoggedInUserFriends();

		[PreserveSig]
		[Token(Token = "0x6000F06")]
		[Address(RVA = "0x928530", Offset = "0x928530", VA = "0x928530")]
		public static extern ulong ovr_User_GetLoggedInUserFriendsAndRooms();

		[PreserveSig]
		[Token(Token = "0x6000F07")]
		[Address(RVA = "0x9285A4", Offset = "0x9285A4", VA = "0x9285A4")]
		public static extern ulong ovr_User_GetLoggedInUserRecentlyMetUsersAndRooms(IntPtr userOptions);

		[PreserveSig]
		[Token(Token = "0x6000F08")]
		[Address(RVA = "0x928624", Offset = "0x928624", VA = "0x928624")]
		public static extern ulong ovr_User_GetOrgScopedID(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000F09")]
		[Address(RVA = "0x9286A4", Offset = "0x9286A4", VA = "0x9286A4")]
		public static extern ulong ovr_User_GetSdkAccounts();

		[PreserveSig]
		[Token(Token = "0x6000F0A")]
		[Address(RVA = "0x928718", Offset = "0x928718", VA = "0x928718")]
		public static extern ulong ovr_User_GetUserProof();

		[PreserveSig]
		[Token(Token = "0x6000F0B")]
		[Address(RVA = "0x92878C", Offset = "0x92878C", VA = "0x92878C")]
		public static extern ulong ovr_User_LaunchBlockFlow(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000F0C")]
		[Address(RVA = "0x92880C", Offset = "0x92880C", VA = "0x92880C")]
		public static extern ulong ovr_User_LaunchFriendRequestFlow(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000F0D")]
		[Address(RVA = "0x92888C", Offset = "0x92888C", VA = "0x92888C")]
		public static extern ulong ovr_User_LaunchProfile(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000F0E")]
		[Address(RVA = "0x92890C", Offset = "0x92890C", VA = "0x92890C")]
		public static extern ulong ovr_User_LaunchReportFlow(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000F0F")]
		[Address(RVA = "0x92898C", Offset = "0x92898C", VA = "0x92898C")]
		public static extern ulong ovr_User_LaunchReportFlow2(ulong optionalUserID, IntPtr abuseReportOptions);

		[PreserveSig]
		[Token(Token = "0x6000F10")]
		[Address(RVA = "0x928A1C", Offset = "0x928A1C", VA = "0x928A1C")]
		public static extern ulong ovr_User_LaunchUnblockFlow(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000F11")]
		[Address(RVA = "0x928A9C", Offset = "0x928A9C", VA = "0x928A9C")]
		public static extern ulong ovr_User_NewEntitledTestUser();

		[PreserveSig]
		[Token(Token = "0x6000F12")]
		[Address(RVA = "0x928B10", Offset = "0x928B10", VA = "0x928B10")]
		public static extern ulong ovr_User_NewTestUser();

		[PreserveSig]
		[Token(Token = "0x6000F13")]
		[Address(RVA = "0x928B84", Offset = "0x928B84", VA = "0x928B84")]
		public static extern ulong ovr_User_NewTestUserFriends();

		[PreserveSig]
		[Token(Token = "0x6000F14")]
		[Address(RVA = "0x928BF8", Offset = "0x928BF8", VA = "0x928BF8")]
		public static extern ulong ovr_User_StartRecordingForReportFlow();

		[Token(Token = "0x6000F15")]
		[Address(RVA = "0x928C6C", Offset = "0x928C6C", VA = "0x928C6C")]
		public static ulong ovr_User_StopRecordingAndLaunchReportFlow(ulong optionalUserID, string optionalRecordingUUID)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000F16")]
		[Address(RVA = "0x928D28", Offset = "0x928D28", VA = "0x928D28")]
		private static extern ulong ovr_User_StopRecordingAndLaunchReportFlow_Native(ulong optionalUserID, IntPtr optionalRecordingUUID);

		[Token(Token = "0x6000F17")]
		[Address(RVA = "0x928DB8", Offset = "0x928DB8", VA = "0x928DB8")]
		public static ulong ovr_User_StopRecordingAndLaunchReportFlow2(ulong optionalUserID, string optionalRecordingUUID, IntPtr abuseReportOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000F18")]
		[Address(RVA = "0x928E7C", Offset = "0x928E7C", VA = "0x928E7C")]
		private static extern ulong ovr_User_StopRecordingAndLaunchReportFlow2_Native(ulong optionalUserID, IntPtr optionalRecordingUUID, IntPtr abuseReportOptions);

		[Token(Token = "0x6000F19")]
		[Address(RVA = "0x928F14", Offset = "0x928F14", VA = "0x928F14")]
		public static ulong ovr_User_TestUserCreateDeviceManifest(string deviceID, ulong[] appIDs, int numAppIDs)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000F1A")]
		[Address(RVA = "0x928FD4", Offset = "0x928FD4", VA = "0x928FD4")]
		private static extern ulong ovr_User_TestUserCreateDeviceManifest_Native(IntPtr deviceID, ulong[] appIDs, int numAppIDs);

		[PreserveSig]
		[Token(Token = "0x6000F1B")]
		[Address(RVA = "0x929074", Offset = "0x929074", VA = "0x929074")]
		public static extern ulong ovr_Voip_SetSystemVoipSuppressed(bool suppressed);

		[Token(Token = "0x6000F1C")]
		[Address(RVA = "0x9290F4", Offset = "0x9290F4", VA = "0x9290F4")]
		public static string ovr_AbuseReportRecording_GetRecordingUuid(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000F1D")]
		[Address(RVA = "0x92915C", Offset = "0x92915C", VA = "0x92915C")]
		private static extern IntPtr ovr_AbuseReportRecording_GetRecordingUuid_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000F1E")]
		[Address(RVA = "0x9291DC", Offset = "0x9291DC", VA = "0x9291DC")]
		public static extern uint ovr_AchievementDefinition_GetBitfieldLength(IntPtr obj);

		[Token(Token = "0x6000F1F")]
		[Address(RVA = "0x92925C", Offset = "0x92925C", VA = "0x92925C")]
		public static string ovr_AchievementDefinition_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000F20")]
		[Address(RVA = "0x9292C4", Offset = "0x9292C4", VA = "0x9292C4")]
		private static extern IntPtr ovr_AchievementDefinition_GetName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000F21")]
		[Address(RVA = "0x929344", Offset = "0x929344", VA = "0x929344")]
		public static extern ulong ovr_AchievementDefinition_GetTarget(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000F22")]
		[Address(RVA = "0x9293C4", Offset = "0x9293C4", VA = "0x9293C4")]
		public static extern AchievementType ovr_AchievementDefinition_GetType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000F23")]
		[Address(RVA = "0x929444", Offset = "0x929444", VA = "0x929444")]
		public static extern IntPtr ovr_AchievementDefinitionArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000F24")]
		[Address(RVA = "0x9294D4", Offset = "0x9294D4", VA = "0x9294D4")]
		public static string ovr_AchievementDefinitionArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000F25")]
		[Address(RVA = "0x92953C", Offset = "0x92953C", VA = "0x92953C")]
		private static extern IntPtr ovr_AchievementDefinitionArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000F26")]
		[Address(RVA = "0x9295BC", Offset = "0x9295BC", VA = "0x9295BC")]
		public static extern UIntPtr ovr_AchievementDefinitionArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000F27")]
		[Address(RVA = "0x92963C", Offset = "0x92963C", VA = "0x92963C")]
		public static extern bool ovr_AchievementDefinitionArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x6000F28")]
		[Address(RVA = "0x9296C4", Offset = "0x9296C4", VA = "0x9296C4")]
		public static string ovr_AchievementProgress_GetBitfield(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000F29")]
		[Address(RVA = "0x92972C", Offset = "0x92972C", VA = "0x92972C")]
		private static extern IntPtr ovr_AchievementProgress_GetBitfield_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000F2A")]
		[Address(RVA = "0x9297AC", Offset = "0x9297AC", VA = "0x9297AC")]
		public static extern ulong ovr_AchievementProgress_GetCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000F2B")]
		[Address(RVA = "0x92982C", Offset = "0x92982C", VA = "0x92982C")]
		public static extern bool ovr_AchievementProgress_GetIsUnlocked(IntPtr obj);

		[Token(Token = "0x6000F2C")]
		[Address(RVA = "0x9298B4", Offset = "0x9298B4", VA = "0x9298B4")]
		public static string ovr_AchievementProgress_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000F2D")]
		[Address(RVA = "0x92991C", Offset = "0x92991C", VA = "0x92991C")]
		private static extern IntPtr ovr_AchievementProgress_GetName_Native(IntPtr obj);

		[Token(Token = "0x6000F2E")]
		[Address(RVA = "0x92999C", Offset = "0x92999C", VA = "0x92999C")]
		public static DateTime ovr_AchievementProgress_GetUnlockTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x6000F2F")]
		[Address(RVA = "0x929A04", Offset = "0x929A04", VA = "0x929A04")]
		private static extern ulong ovr_AchievementProgress_GetUnlockTime_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000F30")]
		[Address(RVA = "0x929A84", Offset = "0x929A84", VA = "0x929A84")]
		public static extern IntPtr ovr_AchievementProgressArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000F31")]
		[Address(RVA = "0x929B14", Offset = "0x929B14", VA = "0x929B14")]
		public static string ovr_AchievementProgressArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000F32")]
		[Address(RVA = "0x929B7C", Offset = "0x929B7C", VA = "0x929B7C")]
		private static extern IntPtr ovr_AchievementProgressArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000F33")]
		[Address(RVA = "0x929BFC", Offset = "0x929BFC", VA = "0x929BFC")]
		public static extern UIntPtr ovr_AchievementProgressArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000F34")]
		[Address(RVA = "0x929C7C", Offset = "0x929C7C", VA = "0x929C7C")]
		public static extern bool ovr_AchievementProgressArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000F35")]
		[Address(RVA = "0x929D04", Offset = "0x929D04", VA = "0x929D04")]
		public static extern bool ovr_AchievementUpdate_GetJustUnlocked(IntPtr obj);

		[Token(Token = "0x6000F36")]
		[Address(RVA = "0x929D8C", Offset = "0x929D8C", VA = "0x929D8C")]
		public static string ovr_AchievementUpdate_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000F37")]
		[Address(RVA = "0x929DF4", Offset = "0x929DF4", VA = "0x929DF4")]
		private static extern IntPtr ovr_AchievementUpdate_GetName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000F38")]
		[Address(RVA = "0x929E74", Offset = "0x929E74", VA = "0x929E74")]
		public static extern ulong ovr_Application_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000F39")]
		[Address(RVA = "0x929EF4", Offset = "0x929EF4", VA = "0x929EF4")]
		public static extern int ovr_ApplicationVersion_GetCurrentCode(IntPtr obj);

		[Token(Token = "0x6000F3A")]
		[Address(RVA = "0x929F74", Offset = "0x929F74", VA = "0x929F74")]
		public static string ovr_ApplicationVersion_GetCurrentName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000F3B")]
		[Address(RVA = "0x929FDC", Offset = "0x929FDC", VA = "0x929FDC")]
		private static extern IntPtr ovr_ApplicationVersion_GetCurrentName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000F3C")]
		[Address(RVA = "0x92A05C", Offset = "0x92A05C", VA = "0x92A05C")]
		public static extern int ovr_ApplicationVersion_GetLatestCode(IntPtr obj);

		[Token(Token = "0x6000F3D")]
		[Address(RVA = "0x92A0DC", Offset = "0x92A0DC", VA = "0x92A0DC")]
		public static string ovr_ApplicationVersion_GetLatestName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000F3E")]
		[Address(RVA = "0x92A144", Offset = "0x92A144", VA = "0x92A144")]
		private static extern IntPtr ovr_ApplicationVersion_GetLatestName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000F3F")]
		[Address(RVA = "0x92A1C4", Offset = "0x92A1C4", VA = "0x92A1C4")]
		public static extern ulong ovr_AssetDetails_GetAssetId(IntPtr obj);

		[Token(Token = "0x6000F40")]
		[Address(RVA = "0x92A244", Offset = "0x92A244", VA = "0x92A244")]
		public static string ovr_AssetDetails_GetAssetType(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000F41")]
		[Address(RVA = "0x92A2AC", Offset = "0x92A2AC", VA = "0x92A2AC")]
		private static extern IntPtr ovr_AssetDetails_GetAssetType_Native(IntPtr obj);

		[Token(Token = "0x6000F42")]
		[Address(RVA = "0x92A32C", Offset = "0x92A32C", VA = "0x92A32C")]
		public static string ovr_AssetDetails_GetDownloadStatus(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000F43")]
		[Address(RVA = "0x92A394", Offset = "0x92A394", VA = "0x92A394")]
		private static extern IntPtr ovr_AssetDetails_GetDownloadStatus_Native(IntPtr obj);

		[Token(Token = "0x6000F44")]
		[Address(RVA = "0x92A414", Offset = "0x92A414", VA = "0x92A414")]
		public static string ovr_AssetDetails_GetFilepath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000F45")]
		[Address(RVA = "0x92A47C", Offset = "0x92A47C", VA = "0x92A47C")]
		private static extern IntPtr ovr_AssetDetails_GetFilepath_Native(IntPtr obj);

		[Token(Token = "0x6000F46")]
		[Address(RVA = "0x92A4FC", Offset = "0x92A4FC", VA = "0x92A4FC")]
		public static string ovr_AssetDetails_GetIapStatus(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000F47")]
		[Address(RVA = "0x92A564", Offset = "0x92A564", VA = "0x92A564")]
		private static extern IntPtr ovr_AssetDetails_GetIapStatus_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000F48")]
		[Address(RVA = "0x92A5E4", Offset = "0x92A5E4", VA = "0x92A5E4")]
		public static extern IntPtr ovr_AssetDetails_GetLanguage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000F49")]
		[Address(RVA = "0x92A664", Offset = "0x92A664", VA = "0x92A664")]
		public static extern IntPtr ovr_AssetDetailsArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6000F4A")]
		[Address(RVA = "0x92A6F4", Offset = "0x92A6F4", VA = "0x92A6F4")]
		public static extern UIntPtr ovr_AssetDetailsArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000F4B")]
		[Address(RVA = "0x92A774", Offset = "0x92A774", VA = "0x92A774")]
		public static extern ulong ovr_AssetFileDeleteResult_GetAssetFileId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000F4C")]
		[Address(RVA = "0x92A7F4", Offset = "0x92A7F4", VA = "0x92A7F4")]
		public static extern ulong ovr_AssetFileDeleteResult_GetAssetId(IntPtr obj);

		[Token(Token = "0x6000F4D")]
		[Address(RVA = "0x92A874", Offset = "0x92A874", VA = "0x92A874")]
		public static string ovr_AssetFileDeleteResult_GetFilepath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000F4E")]
		[Address(RVA = "0x92A8DC", Offset = "0x92A8DC", VA = "0x92A8DC")]
		private static extern IntPtr ovr_AssetFileDeleteResult_GetFilepath_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000F4F")]
		[Address(RVA = "0x92A95C", Offset = "0x92A95C", VA = "0x92A95C")]
		public static extern bool ovr_AssetFileDeleteResult_GetSuccess(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000F50")]
		[Address(RVA = "0x92A9E4", Offset = "0x92A9E4", VA = "0x92A9E4")]
		public static extern ulong ovr_AssetFileDownloadCancelResult_GetAssetFileId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000F51")]
		[Address(RVA = "0x92AA64", Offset = "0x92AA64", VA = "0x92AA64")]
		public static extern ulong ovr_AssetFileDownloadCancelResult_GetAssetId(IntPtr obj);

		[Token(Token = "0x6000F52")]
		[Address(RVA = "0x92AAE4", Offset = "0x92AAE4", VA = "0x92AAE4")]
		public static string ovr_AssetFileDownloadCancelResult_GetFilepath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000F53")]
		[Address(RVA = "0x92AB4C", Offset = "0x92AB4C", VA = "0x92AB4C")]
		private static extern IntPtr ovr_AssetFileDownloadCancelResult_GetFilepath_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000F54")]
		[Address(RVA = "0x92ABCC", Offset = "0x92ABCC", VA = "0x92ABCC")]
		public static extern bool ovr_AssetFileDownloadCancelResult_GetSuccess(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000F55")]
		[Address(RVA = "0x92AC54", Offset = "0x92AC54", VA = "0x92AC54")]
		public static extern ulong ovr_AssetFileDownloadResult_GetAssetId(IntPtr obj);

		[Token(Token = "0x6000F56")]
		[Address(RVA = "0x92ACD4", Offset = "0x92ACD4", VA = "0x92ACD4")]
		public static string ovr_AssetFileDownloadResult_GetFilepath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000F57")]
		[Address(RVA = "0x92AD3C", Offset = "0x92AD3C", VA = "0x92AD3C")]
		private static extern IntPtr ovr_AssetFileDownloadResult_GetFilepath_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000F58")]
		[Address(RVA = "0x92ADBC", Offset = "0x92ADBC", VA = "0x92ADBC")]
		public static extern ulong ovr_AssetFileDownloadUpdate_GetAssetFileId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000F59")]
		[Address(RVA = "0x92AE3C", Offset = "0x92AE3C", VA = "0x92AE3C")]
		public static extern ulong ovr_AssetFileDownloadUpdate_GetAssetId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000F5A")]
		[Address(RVA = "0x92AEBC", Offset = "0x92AEBC", VA = "0x92AEBC")]
		public static extern uint ovr_AssetFileDownloadUpdate_GetBytesTotal(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000F5B")]
		[Address(RVA = "0x92AF3C", Offset = "0x92AF3C", VA = "0x92AF3C")]
		public static extern int ovr_AssetFileDownloadUpdate_GetBytesTransferred(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000F5C")]
		[Address(RVA = "0x92AFBC", Offset = "0x92AFBC", VA = "0x92AFBC")]
		public static extern bool ovr_AssetFileDownloadUpdate_GetCompleted(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000F5D")]
		[Address(RVA = "0x92B044", Offset = "0x92B044", VA = "0x92B044")]
		public static extern int ovr_CalApplicationFinalized_GetCountdownMS(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000F5E")]
		[Address(RVA = "0x92B0C4", Offset = "0x92B0C4", VA = "0x92B0C4")]
		public static extern ulong ovr_CalApplicationFinalized_GetID(IntPtr obj);

		[Token(Token = "0x6000F5F")]
		[Address(RVA = "0x92B144", Offset = "0x92B144", VA = "0x92B144")]
		public static string ovr_CalApplicationFinalized_GetLaunchDetails(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000F60")]
		[Address(RVA = "0x92B1AC", Offset = "0x92B1AC", VA = "0x92B1AC")]
		private static extern IntPtr ovr_CalApplicationFinalized_GetLaunchDetails_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000F61")]
		[Address(RVA = "0x92B22C", Offset = "0x92B22C", VA = "0x92B22C")]
		public static extern ulong ovr_CalApplicationProposed_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000F62")]
		[Address(RVA = "0x92B2AC", Offset = "0x92B2AC", VA = "0x92B2AC")]
		public static extern ulong ovr_CalApplicationSuggestion_GetID(IntPtr obj);

		[Token(Token = "0x6000F63")]
		[Address(RVA = "0x92B32C", Offset = "0x92B32C", VA = "0x92B32C")]
		public static string ovr_CalApplicationSuggestion_GetSocialContext(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000F64")]
		[Address(RVA = "0x92B394", Offset = "0x92B394", VA = "0x92B394")]
		private static extern IntPtr ovr_CalApplicationSuggestion_GetSocialContext_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000F65")]
		[Address(RVA = "0x92B414", Offset = "0x92B414", VA = "0x92B414")]
		public static extern IntPtr ovr_CalApplicationSuggestionArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6000F66")]
		[Address(RVA = "0x92B4A4", Offset = "0x92B4A4", VA = "0x92B4A4")]
		public static extern UIntPtr ovr_CalApplicationSuggestionArray_GetSize(IntPtr obj);

		[Token(Token = "0x6000F67")]
		[Address(RVA = "0x92B524", Offset = "0x92B524", VA = "0x92B524")]
		public static string ovr_CloudStorage2UserDirectoryPathResponse_GetPath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000F68")]
		[Address(RVA = "0x92B58C", Offset = "0x92B58C", VA = "0x92B58C")]
		private static extern IntPtr ovr_CloudStorage2UserDirectoryPathResponse_GetPath_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000F69")]
		[Address(RVA = "0x92B60C", Offset = "0x92B60C", VA = "0x92B60C")]
		public static extern IntPtr ovr_CloudStorageConflictMetadata_GetLocal(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000F6A")]
		[Address(RVA = "0x92B68C", Offset = "0x92B68C", VA = "0x92B68C")]
		public static extern IntPtr ovr_CloudStorageConflictMetadata_GetRemote(IntPtr obj);

		[Token(Token = "0x6000F6B")]
		[Address(RVA = "0x92B70C", Offset = "0x92B70C", VA = "0x92B70C")]
		public static string ovr_CloudStorageData_GetBucket(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000F6C")]
		[Address(RVA = "0x92B774", Offset = "0x92B774", VA = "0x92B774")]
		private static extern IntPtr ovr_CloudStorageData_GetBucket_Native(IntPtr obj);

		[Token(Token = "0x6000F6D")]
		[Address(RVA = "0x92B7F4", Offset = "0x92B7F4", VA = "0x92B7F4")]
		public static byte[] ovr_CloudStorageData_GetData(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000F6E")]
		[Address(RVA = "0x92B8F0", Offset = "0x92B8F0", VA = "0x92B8F0")]
		private static extern IntPtr ovr_CloudStorageData_GetData_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000F6F")]
		[Address(RVA = "0x92B870", Offset = "0x92B870", VA = "0x92B870")]
		public static extern uint ovr_CloudStorageData_GetDataSize(IntPtr obj);

		[Token(Token = "0x6000F70")]
		[Address(RVA = "0x92B970", Offset = "0x92B970", VA = "0x92B970")]
		public static string ovr_CloudStorageData_GetKey(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000F71")]
		[Address(RVA = "0x92B9D8", Offset = "0x92B9D8", VA = "0x92B9D8")]
		private static extern IntPtr ovr_CloudStorageData_GetKey_Native(IntPtr obj);

		[Token(Token = "0x6000F72")]
		[Address(RVA = "0x92BA58", Offset = "0x92BA58", VA = "0x92BA58")]
		public static string ovr_CloudStorageMetadata_GetBucket(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000F73")]
		[Address(RVA = "0x92BAC0", Offset = "0x92BAC0", VA = "0x92BAC0")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetBucket_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000F74")]
		[Address(RVA = "0x92BB40", Offset = "0x92BB40", VA = "0x92BB40")]
		public static extern long ovr_CloudStorageMetadata_GetCounter(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000F75")]
		[Address(RVA = "0x92BBC0", Offset = "0x92BBC0", VA = "0x92BBC0")]
		public static extern uint ovr_CloudStorageMetadata_GetDataSize(IntPtr obj);

		[Token(Token = "0x6000F76")]
		[Address(RVA = "0x92BC40", Offset = "0x92BC40", VA = "0x92BC40")]
		public static string ovr_CloudStorageMetadata_GetExtraData(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000F77")]
		[Address(RVA = "0x92BCA8", Offset = "0x92BCA8", VA = "0x92BCA8")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetExtraData_Native(IntPtr obj);

		[Token(Token = "0x6000F78")]
		[Address(RVA = "0x92BD28", Offset = "0x92BD28", VA = "0x92BD28")]
		public static string ovr_CloudStorageMetadata_GetKey(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000F79")]
		[Address(RVA = "0x92BD90", Offset = "0x92BD90", VA = "0x92BD90")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetKey_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000F7A")]
		[Address(RVA = "0x92BE10", Offset = "0x92BE10", VA = "0x92BE10")]
		public static extern ulong ovr_CloudStorageMetadata_GetSaveTime(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000F7B")]
		[Address(RVA = "0x92BE90", Offset = "0x92BE90", VA = "0x92BE90")]
		public static extern CloudStorageDataStatus ovr_CloudStorageMetadata_GetStatus(IntPtr obj);

		[Token(Token = "0x6000F7C")]
		[Address(RVA = "0x92BF10", Offset = "0x92BF10", VA = "0x92BF10")]
		public static string ovr_CloudStorageMetadata_GetVersionHandle(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000F7D")]
		[Address(RVA = "0x92BF78", Offset = "0x92BF78", VA = "0x92BF78")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetVersionHandle_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000F7E")]
		[Address(RVA = "0x92BFF8", Offset = "0x92BFF8", VA = "0x92BFF8")]
		public static extern IntPtr ovr_CloudStorageMetadataArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000F7F")]
		[Address(RVA = "0x92C088", Offset = "0x92C088", VA = "0x92C088")]
		public static string ovr_CloudStorageMetadataArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000F80")]
		[Address(RVA = "0x92C0F0", Offset = "0x92C0F0", VA = "0x92C0F0")]
		private static extern IntPtr ovr_CloudStorageMetadataArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000F81")]
		[Address(RVA = "0x92C170", Offset = "0x92C170", VA = "0x92C170")]
		public static extern UIntPtr ovr_CloudStorageMetadataArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000F82")]
		[Address(RVA = "0x92C1F0", Offset = "0x92C1F0", VA = "0x92C1F0")]
		public static extern bool ovr_CloudStorageMetadataArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x6000F83")]
		[Address(RVA = "0x92C278", Offset = "0x92C278", VA = "0x92C278")]
		public static string ovr_CloudStorageUpdateResponse_GetBucket(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000F84")]
		[Address(RVA = "0x92C2E0", Offset = "0x92C2E0", VA = "0x92C2E0")]
		private static extern IntPtr ovr_CloudStorageUpdateResponse_GetBucket_Native(IntPtr obj);

		[Token(Token = "0x6000F85")]
		[Address(RVA = "0x92C360", Offset = "0x92C360", VA = "0x92C360")]
		public static string ovr_CloudStorageUpdateResponse_GetKey(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000F86")]
		[Address(RVA = "0x92C3C8", Offset = "0x92C3C8", VA = "0x92C3C8")]
		private static extern IntPtr ovr_CloudStorageUpdateResponse_GetKey_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000F87")]
		[Address(RVA = "0x92C448", Offset = "0x92C448", VA = "0x92C448")]
		public static extern CloudStorageUpdateStatus ovr_CloudStorageUpdateResponse_GetStatus(IntPtr obj);

		[Token(Token = "0x6000F88")]
		[Address(RVA = "0x92C4C8", Offset = "0x92C4C8", VA = "0x92C4C8")]
		public static string ovr_CloudStorageUpdateResponse_GetVersionHandle(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000F89")]
		[Address(RVA = "0x92C530", Offset = "0x92C530", VA = "0x92C530")]
		private static extern IntPtr ovr_CloudStorageUpdateResponse_GetVersionHandle_Native(IntPtr obj);

		[Token(Token = "0x6000F8A")]
		[Address(RVA = "0x92C5B0", Offset = "0x92C5B0", VA = "0x92C5B0")]
		public static uint ovr_DataStore_Contains(IntPtr obj, string key)
		{
			return default(uint);
		}

		[PreserveSig]
		[Token(Token = "0x6000F8B")]
		[Address(RVA = "0x92C66C", Offset = "0x92C66C", VA = "0x92C66C")]
		private static extern uint ovr_DataStore_Contains_Native(IntPtr obj, IntPtr key);

		[Token(Token = "0x6000F8C")]
		[Address(RVA = "0x91FC24", Offset = "0x91FC24", VA = "0x91FC24")]
		public static string ovr_DataStore_GetKey(IntPtr obj, int index)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000F8D")]
		[Address(RVA = "0x92C6FC", Offset = "0x92C6FC", VA = "0x92C6FC")]
		private static extern IntPtr ovr_DataStore_GetKey_Native(IntPtr obj, int index);

		[PreserveSig]
		[Token(Token = "0x6000F8E")]
		[Address(RVA = "0x91FBA4", Offset = "0x91FBA4", VA = "0x91FBA4")]
		public static extern UIntPtr ovr_DataStore_GetNumKeys(IntPtr obj);

		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0x91FC9C", Offset = "0x91FC9C", VA = "0x91FC9C")]
		public static string ovr_DataStore_GetValue(IntPtr obj, string key)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000F90")]
		[Address(RVA = "0x92C78C", Offset = "0x92C78C", VA = "0x92C78C")]
		private static extern IntPtr ovr_DataStore_GetValue_Native(IntPtr obj, IntPtr key);

		[PreserveSig]
		[Token(Token = "0x6000F91")]
		[Address(RVA = "0x92C81C", Offset = "0x92C81C", VA = "0x92C81C")]
		public static extern int ovr_Error_GetCode(IntPtr obj);

		[Token(Token = "0x6000F92")]
		[Address(RVA = "0x92C898", Offset = "0x92C898", VA = "0x92C898")]
		public static string ovr_Error_GetDisplayableMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000F93")]
		[Address(RVA = "0x92C900", Offset = "0x92C900", VA = "0x92C900")]
		private static extern IntPtr ovr_Error_GetDisplayableMessage_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000F94")]
		[Address(RVA = "0x92C980", Offset = "0x92C980", VA = "0x92C980")]
		public static extern int ovr_Error_GetHttpCode(IntPtr obj);

		[Token(Token = "0x6000F95")]
		[Address(RVA = "0x92CA00", Offset = "0x92CA00", VA = "0x92CA00")]
		public static string ovr_Error_GetMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000F96")]
		[Address(RVA = "0x92CA68", Offset = "0x92CA68", VA = "0x92CA68")]
		private static extern IntPtr ovr_Error_GetMessage_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000F97")]
		[Address(RVA = "0x92CAE8", Offset = "0x92CAE8", VA = "0x92CAE8")]
		public static extern IntPtr ovr_HttpTransferUpdate_GetBytes(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000F98")]
		[Address(RVA = "0x92CB68", Offset = "0x92CB68", VA = "0x92CB68")]
		public static extern ulong ovr_HttpTransferUpdate_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000F99")]
		[Address(RVA = "0x92CBE8", Offset = "0x92CBE8", VA = "0x92CBE8")]
		public static extern UIntPtr ovr_HttpTransferUpdate_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000F9A")]
		[Address(RVA = "0x92CC68", Offset = "0x92CC68", VA = "0x92CC68")]
		public static extern bool ovr_HttpTransferUpdate_IsCompleted(IntPtr obj);

		[Token(Token = "0x6000F9B")]
		[Address(RVA = "0x92CCF0", Offset = "0x92CCF0", VA = "0x92CCF0")]
		public static string ovr_InstalledApplication_GetApplicationId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000F9C")]
		[Address(RVA = "0x92CD58", Offset = "0x92CD58", VA = "0x92CD58")]
		private static extern IntPtr ovr_InstalledApplication_GetApplicationId_Native(IntPtr obj);

		[Token(Token = "0x6000F9D")]
		[Address(RVA = "0x92CDD8", Offset = "0x92CDD8", VA = "0x92CDD8")]
		public static string ovr_InstalledApplication_GetPackageName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000F9E")]
		[Address(RVA = "0x92CE40", Offset = "0x92CE40", VA = "0x92CE40")]
		private static extern IntPtr ovr_InstalledApplication_GetPackageName_Native(IntPtr obj);

		[Token(Token = "0x6000F9F")]
		[Address(RVA = "0x92CEC0", Offset = "0x92CEC0", VA = "0x92CEC0")]
		public static string ovr_InstalledApplication_GetStatus(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000FA0")]
		[Address(RVA = "0x92CF28", Offset = "0x92CF28", VA = "0x92CF28")]
		private static extern IntPtr ovr_InstalledApplication_GetStatus_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FA1")]
		[Address(RVA = "0x92CFA8", Offset = "0x92CFA8", VA = "0x92CFA8")]
		public static extern int ovr_InstalledApplication_GetVersionCode(IntPtr obj);

		[Token(Token = "0x6000FA2")]
		[Address(RVA = "0x92D028", Offset = "0x92D028", VA = "0x92D028")]
		public static string ovr_InstalledApplication_GetVersionName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000FA3")]
		[Address(RVA = "0x92D090", Offset = "0x92D090", VA = "0x92D090")]
		private static extern IntPtr ovr_InstalledApplication_GetVersionName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FA4")]
		[Address(RVA = "0x92D110", Offset = "0x92D110", VA = "0x92D110")]
		public static extern IntPtr ovr_InstalledApplicationArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6000FA5")]
		[Address(RVA = "0x92D1A0", Offset = "0x92D1A0", VA = "0x92D1A0")]
		public static extern UIntPtr ovr_InstalledApplicationArray_GetSize(IntPtr obj);

		[Token(Token = "0x6000FA6")]
		[Address(RVA = "0x92D220", Offset = "0x92D220", VA = "0x92D220")]
		public static string ovr_LanguagePackInfo_GetEnglishName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000FA7")]
		[Address(RVA = "0x92D288", Offset = "0x92D288", VA = "0x92D288")]
		private static extern IntPtr ovr_LanguagePackInfo_GetEnglishName_Native(IntPtr obj);

		[Token(Token = "0x6000FA8")]
		[Address(RVA = "0x92D308", Offset = "0x92D308", VA = "0x92D308")]
		public static string ovr_LanguagePackInfo_GetNativeName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000FA9")]
		[Address(RVA = "0x92D370", Offset = "0x92D370", VA = "0x92D370")]
		private static extern IntPtr ovr_LanguagePackInfo_GetNativeName_Native(IntPtr obj);

		[Token(Token = "0x6000FAA")]
		[Address(RVA = "0x92D3F0", Offset = "0x92D3F0", VA = "0x92D3F0")]
		public static string ovr_LanguagePackInfo_GetTag(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000FAB")]
		[Address(RVA = "0x92D458", Offset = "0x92D458", VA = "0x92D458")]
		private static extern IntPtr ovr_LanguagePackInfo_GetTag_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FAC")]
		[Address(RVA = "0x92D4D8", Offset = "0x92D4D8", VA = "0x92D4D8")]
		public static extern bool ovr_LaunchBlockFlowResult_GetDidBlock(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FAD")]
		[Address(RVA = "0x92D560", Offset = "0x92D560", VA = "0x92D560")]
		public static extern bool ovr_LaunchBlockFlowResult_GetDidCancel(IntPtr obj);

		[Token(Token = "0x6000FAE")]
		[Address(RVA = "0x92D5E8", Offset = "0x92D5E8", VA = "0x92D5E8")]
		public static string ovr_LaunchDetails_GetDeeplinkMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000FAF")]
		[Address(RVA = "0x92D650", Offset = "0x92D650", VA = "0x92D650")]
		private static extern IntPtr ovr_LaunchDetails_GetDeeplinkMessage_Native(IntPtr obj);

		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0x92D6D0", Offset = "0x92D6D0", VA = "0x92D6D0")]
		public static string ovr_LaunchDetails_GetLaunchSource(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000FB1")]
		[Address(RVA = "0x92D738", Offset = "0x92D738", VA = "0x92D738")]
		private static extern IntPtr ovr_LaunchDetails_GetLaunchSource_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0x92D7B8", Offset = "0x92D7B8", VA = "0x92D7B8")]
		public static extern LaunchType ovr_LaunchDetails_GetLaunchType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0x92D838", Offset = "0x92D838", VA = "0x92D838")]
		public static extern ulong ovr_LaunchDetails_GetRoomID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0x92D8B8", Offset = "0x92D8B8", VA = "0x92D8B8")]
		public static extern IntPtr ovr_LaunchDetails_GetUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FB5")]
		[Address(RVA = "0x92D938", Offset = "0x92D938", VA = "0x92D938")]
		public static extern bool ovr_LaunchFriendRequestFlowResult_GetDidCancel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0x92D9C0", Offset = "0x92D9C0", VA = "0x92D9C0")]
		public static extern bool ovr_LaunchFriendRequestFlowResult_GetDidSendRequest(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0x92DA48", Offset = "0x92DA48", VA = "0x92DA48")]
		public static extern bool ovr_LaunchReportFlowResult_GetDidCancel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0x92DAD0", Offset = "0x92DAD0", VA = "0x92DAD0")]
		public static extern ulong ovr_LaunchReportFlowResult_GetUserReportId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0x92DB50", Offset = "0x92DB50", VA = "0x92DB50")]
		public static extern bool ovr_LaunchUnblockFlowResult_GetDidCancel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FBA")]
		[Address(RVA = "0x92DBD8", Offset = "0x92DBD8", VA = "0x92DBD8")]
		public static extern bool ovr_LaunchUnblockFlowResult_GetDidUnblock(IntPtr obj);

		[Token(Token = "0x6000FBB")]
		[Address(RVA = "0x92DC60", Offset = "0x92DC60", VA = "0x92DC60")]
		public static byte[] ovr_LeaderboardEntry_GetExtraData(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000FBC")]
		[Address(RVA = "0x92DD5C", Offset = "0x92DD5C", VA = "0x92DD5C")]
		private static extern IntPtr ovr_LeaderboardEntry_GetExtraData_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FBD")]
		[Address(RVA = "0x92DCDC", Offset = "0x92DCDC", VA = "0x92DCDC")]
		public static extern uint ovr_LeaderboardEntry_GetExtraDataLength(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FBE")]
		[Address(RVA = "0x92DDDC", Offset = "0x92DDDC", VA = "0x92DDDC")]
		public static extern int ovr_LeaderboardEntry_GetRank(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FBF")]
		[Address(RVA = "0x92DE5C", Offset = "0x92DE5C", VA = "0x92DE5C")]
		public static extern long ovr_LeaderboardEntry_GetScore(IntPtr obj);

		[Token(Token = "0x6000FC0")]
		[Address(RVA = "0x92DEDC", Offset = "0x92DEDC", VA = "0x92DEDC")]
		public static DateTime ovr_LeaderboardEntry_GetTimestamp(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x6000FC1")]
		[Address(RVA = "0x92DF44", Offset = "0x92DF44", VA = "0x92DF44")]
		private static extern ulong ovr_LeaderboardEntry_GetTimestamp_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FC2")]
		[Address(RVA = "0x92DFC4", Offset = "0x92DFC4", VA = "0x92DFC4")]
		public static extern IntPtr ovr_LeaderboardEntry_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0x92E044", Offset = "0x92E044", VA = "0x92E044")]
		public static extern IntPtr ovr_LeaderboardEntryArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000FC4")]
		[Address(RVA = "0x92E0D4", Offset = "0x92E0D4", VA = "0x92E0D4")]
		public static string ovr_LeaderboardEntryArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000FC5")]
		[Address(RVA = "0x92E13C", Offset = "0x92E13C", VA = "0x92E13C")]
		private static extern IntPtr ovr_LeaderboardEntryArray_GetNextUrl_Native(IntPtr obj);

		[Token(Token = "0x6000FC6")]
		[Address(RVA = "0x92E1BC", Offset = "0x92E1BC", VA = "0x92E1BC")]
		public static string ovr_LeaderboardEntryArray_GetPreviousUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000FC7")]
		[Address(RVA = "0x92E224", Offset = "0x92E224", VA = "0x92E224")]
		private static extern IntPtr ovr_LeaderboardEntryArray_GetPreviousUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FC8")]
		[Address(RVA = "0x92E2A4", Offset = "0x92E2A4", VA = "0x92E2A4")]
		public static extern UIntPtr ovr_LeaderboardEntryArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FC9")]
		[Address(RVA = "0x92E324", Offset = "0x92E324", VA = "0x92E324")]
		public static extern ulong ovr_LeaderboardEntryArray_GetTotalCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FCA")]
		[Address(RVA = "0x92E3A4", Offset = "0x92E3A4", VA = "0x92E3A4")]
		public static extern bool ovr_LeaderboardEntryArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FCB")]
		[Address(RVA = "0x92E42C", Offset = "0x92E42C", VA = "0x92E42C")]
		public static extern bool ovr_LeaderboardEntryArray_HasPreviousPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FCC")]
		[Address(RVA = "0x92E4B4", Offset = "0x92E4B4", VA = "0x92E4B4")]
		public static extern bool ovr_LeaderboardUpdateStatus_GetDidUpdate(IntPtr obj);

		[Token(Token = "0x6000FCD")]
		[Address(RVA = "0x92E53C", Offset = "0x92E53C", VA = "0x92E53C")]
		public static string ovr_LinkedAccount_GetAccessToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000FCE")]
		[Address(RVA = "0x92E5A4", Offset = "0x92E5A4", VA = "0x92E5A4")]
		private static extern IntPtr ovr_LinkedAccount_GetAccessToken_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FCF")]
		[Address(RVA = "0x92E624", Offset = "0x92E624", VA = "0x92E624")]
		public static extern ServiceProvider ovr_LinkedAccount_GetServiceProvider(IntPtr obj);

		[Token(Token = "0x6000FD0")]
		[Address(RVA = "0x92E6A4", Offset = "0x92E6A4", VA = "0x92E6A4")]
		public static string ovr_LinkedAccount_GetUserId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000FD1")]
		[Address(RVA = "0x92E70C", Offset = "0x92E70C", VA = "0x92E70C")]
		private static extern IntPtr ovr_LinkedAccount_GetUserId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FD2")]
		[Address(RVA = "0x92E78C", Offset = "0x92E78C", VA = "0x92E78C")]
		public static extern IntPtr ovr_LinkedAccountArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6000FD3")]
		[Address(RVA = "0x92E81C", Offset = "0x92E81C", VA = "0x92E81C")]
		public static extern UIntPtr ovr_LinkedAccountArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FD4")]
		[Address(RVA = "0x92E89C", Offset = "0x92E89C", VA = "0x92E89C")]
		public static extern bool ovr_LivestreamingApplicationStatus_GetStreamingEnabled(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FD5")]
		[Address(RVA = "0x92E924", Offset = "0x92E924", VA = "0x92E924")]
		public static extern LivestreamingStartStatus ovr_LivestreamingStartResult_GetStreamingResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FD6")]
		[Address(RVA = "0x92E9A4", Offset = "0x92E9A4", VA = "0x92E9A4")]
		public static extern bool ovr_LivestreamingStatus_GetCommentsVisible(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FD7")]
		[Address(RVA = "0x92EA2C", Offset = "0x92EA2C", VA = "0x92EA2C")]
		public static extern bool ovr_LivestreamingStatus_GetIsPaused(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FD8")]
		[Address(RVA = "0x92EAB4", Offset = "0x92EAB4", VA = "0x92EAB4")]
		public static extern bool ovr_LivestreamingStatus_GetLivestreamingEnabled(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FD9")]
		[Address(RVA = "0x92EB3C", Offset = "0x92EB3C", VA = "0x92EB3C")]
		public static extern int ovr_LivestreamingStatus_GetLivestreamingType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FDA")]
		[Address(RVA = "0x92EBBC", Offset = "0x92EBBC", VA = "0x92EBBC")]
		public static extern bool ovr_LivestreamingStatus_GetMicEnabled(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FDB")]
		[Address(RVA = "0x92EC44", Offset = "0x92EC44", VA = "0x92EC44")]
		public static extern int ovr_LivestreamingVideoStats_GetCommentCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FDC")]
		[Address(RVA = "0x92ECC4", Offset = "0x92ECC4", VA = "0x92ECC4")]
		public static extern int ovr_LivestreamingVideoStats_GetReactionCount(IntPtr obj);

		[Token(Token = "0x6000FDD")]
		[Address(RVA = "0x92ED44", Offset = "0x92ED44", VA = "0x92ED44")]
		public static string ovr_LivestreamingVideoStats_GetTotalViews(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000FDE")]
		[Address(RVA = "0x92EDAC", Offset = "0x92EDAC", VA = "0x92EDAC")]
		private static extern IntPtr ovr_LivestreamingVideoStats_GetTotalViews_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FDF")]
		[Address(RVA = "0x92EE2C", Offset = "0x92EE2C", VA = "0x92EE2C")]
		public static extern IntPtr ovr_MatchmakingAdminSnapshot_GetCandidates(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FE0")]
		[Address(RVA = "0x92EEAC", Offset = "0x92EEAC", VA = "0x92EEAC")]
		public static extern double ovr_MatchmakingAdminSnapshot_GetMyCurrentThreshold(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FE1")]
		[Address(RVA = "0x92EF2C", Offset = "0x92EF2C", VA = "0x92EF2C")]
		public static extern bool ovr_MatchmakingAdminSnapshotCandidate_GetCanMatch(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FE2")]
		[Address(RVA = "0x92EFB4", Offset = "0x92EFB4", VA = "0x92EFB4")]
		public static extern double ovr_MatchmakingAdminSnapshotCandidate_GetMyTotalScore(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FE3")]
		[Address(RVA = "0x92F034", Offset = "0x92F034", VA = "0x92F034")]
		public static extern double ovr_MatchmakingAdminSnapshotCandidate_GetTheirCurrentThreshold(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FE4")]
		[Address(RVA = "0x92F0B4", Offset = "0x92F0B4", VA = "0x92F0B4")]
		public static extern double ovr_MatchmakingAdminSnapshotCandidate_GetTheirTotalScore(IntPtr obj);

		[Token(Token = "0x6000FE5")]
		[Address(RVA = "0x92F134", Offset = "0x92F134", VA = "0x92F134")]
		public static string ovr_MatchmakingAdminSnapshotCandidate_GetTraceId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000FE6")]
		[Address(RVA = "0x92F19C", Offset = "0x92F19C", VA = "0x92F19C")]
		private static extern IntPtr ovr_MatchmakingAdminSnapshotCandidate_GetTraceId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FE7")]
		[Address(RVA = "0x92F21C", Offset = "0x92F21C", VA = "0x92F21C")]
		public static extern IntPtr ovr_MatchmakingAdminSnapshotCandidateArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6000FE8")]
		[Address(RVA = "0x92F2AC", Offset = "0x92F2AC", VA = "0x92F2AC")]
		public static extern UIntPtr ovr_MatchmakingAdminSnapshotCandidateArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FE9")]
		[Address(RVA = "0x92F32C", Offset = "0x92F32C", VA = "0x92F32C")]
		public static extern IntPtr ovr_MatchmakingBrowseResult_GetEnqueueResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FEA")]
		[Address(RVA = "0x92F3AC", Offset = "0x92F3AC", VA = "0x92F3AC")]
		public static extern IntPtr ovr_MatchmakingBrowseResult_GetRooms(IntPtr obj);

		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0x92F42C", Offset = "0x92F42C", VA = "0x92F42C")]
		public static string ovr_MatchmakingCandidate_GetEntryHash(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0x92F494", Offset = "0x92F494", VA = "0x92F494")]
		private static extern IntPtr ovr_MatchmakingCandidate_GetEntryHash_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FED")]
		[Address(RVA = "0x92F514", Offset = "0x92F514", VA = "0x92F514")]
		public static extern ulong ovr_MatchmakingCandidate_GetUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FEE")]
		[Address(RVA = "0x92F594", Offset = "0x92F594", VA = "0x92F594")]
		public static extern IntPtr ovr_MatchmakingCandidateArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0x92F624", Offset = "0x92F624", VA = "0x92F624")]
		public static string ovr_MatchmakingCandidateArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0x92F68C", Offset = "0x92F68C", VA = "0x92F68C")]
		private static extern IntPtr ovr_MatchmakingCandidateArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0x92F70C", Offset = "0x92F70C", VA = "0x92F70C")]
		public static extern UIntPtr ovr_MatchmakingCandidateArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0x92F78C", Offset = "0x92F78C", VA = "0x92F78C")]
		public static extern bool ovr_MatchmakingCandidateArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0x92F814", Offset = "0x92F814", VA = "0x92F814")]
		public static extern IntPtr ovr_MatchmakingEnqueueResult_GetAdminSnapshot(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0x92F894", Offset = "0x92F894", VA = "0x92F894")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetAverageWait(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0x92F914", Offset = "0x92F914", VA = "0x92F914")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetMatchesInLastHourCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FF6")]
		[Address(RVA = "0x92F994", Offset = "0x92F994", VA = "0x92F994")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetMaxExpectedWait(IntPtr obj);

		[Token(Token = "0x6000FF7")]
		[Address(RVA = "0x92FA14", Offset = "0x92FA14", VA = "0x92FA14")]
		public static string ovr_MatchmakingEnqueueResult_GetPool(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000FF8")]
		[Address(RVA = "0x92FA7C", Offset = "0x92FA7C", VA = "0x92FA7C")]
		private static extern IntPtr ovr_MatchmakingEnqueueResult_GetPool_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FF9")]
		[Address(RVA = "0x92FAFC", Offset = "0x92FAFC", VA = "0x92FAFC")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetRecentMatchPercentage(IntPtr obj);

		[Token(Token = "0x6000FFA")]
		[Address(RVA = "0x92FB7C", Offset = "0x92FB7C", VA = "0x92FB7C")]
		public static string ovr_MatchmakingEnqueueResult_GetRequestHash(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000FFB")]
		[Address(RVA = "0x92FBE4", Offset = "0x92FBE4", VA = "0x92FBE4")]
		private static extern IntPtr ovr_MatchmakingEnqueueResult_GetRequestHash_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FFC")]
		[Address(RVA = "0x92FC64", Offset = "0x92FC64", VA = "0x92FC64")]
		public static extern IntPtr ovr_MatchmakingEnqueueResultAndRoom_GetMatchmakingEnqueueResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FFD")]
		[Address(RVA = "0x92FCE4", Offset = "0x92FCE4", VA = "0x92FCE4")]
		public static extern IntPtr ovr_MatchmakingEnqueueResultAndRoom_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FFE")]
		[Address(RVA = "0x92FD64", Offset = "0x92FD64", VA = "0x92FD64")]
		public static extern ulong ovr_MatchmakingEnqueuedUser_GetAdditionalUserID(IntPtr obj, uint index);

		[PreserveSig]
		[Token(Token = "0x6000FFF")]
		[Address(RVA = "0x92FDF4", Offset = "0x92FDF4", VA = "0x92FDF4")]
		public static extern uint ovr_MatchmakingEnqueuedUser_GetAdditionalUserIDsSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001000")]
		[Address(RVA = "0x92FE74", Offset = "0x92FE74", VA = "0x92FE74")]
		public static extern IntPtr ovr_MatchmakingEnqueuedUser_GetCustomData(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001001")]
		[Address(RVA = "0x92FEF4", Offset = "0x92FEF4", VA = "0x92FEF4")]
		public static extern IntPtr ovr_MatchmakingEnqueuedUser_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001002")]
		[Address(RVA = "0x92FF74", Offset = "0x92FF74", VA = "0x92FF74")]
		public static extern IntPtr ovr_MatchmakingEnqueuedUserArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6001003")]
		[Address(RVA = "0x930004", Offset = "0x930004", VA = "0x930004")]
		public static extern UIntPtr ovr_MatchmakingEnqueuedUserArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001004")]
		[Address(RVA = "0x930084", Offset = "0x930084", VA = "0x930084")]
		public static extern ulong ovr_MatchmakingNotification_GetAddedByUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001005")]
		[Address(RVA = "0x930104", Offset = "0x930104", VA = "0x930104")]
		public static extern IntPtr ovr_MatchmakingNotification_GetRoom(IntPtr obj);

		[Token(Token = "0x6001006")]
		[Address(RVA = "0x930184", Offset = "0x930184", VA = "0x930184")]
		public static string ovr_MatchmakingNotification_GetTraceId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001007")]
		[Address(RVA = "0x9301EC", Offset = "0x9301EC", VA = "0x9301EC")]
		private static extern IntPtr ovr_MatchmakingNotification_GetTraceId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001008")]
		[Address(RVA = "0x93026C", Offset = "0x93026C", VA = "0x93026C")]
		public static extern uint ovr_MatchmakingRoom_GetPingTime(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001009")]
		[Address(RVA = "0x9302EC", Offset = "0x9302EC", VA = "0x9302EC")]
		public static extern IntPtr ovr_MatchmakingRoom_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600100A")]
		[Address(RVA = "0x93036C", Offset = "0x93036C", VA = "0x93036C")]
		public static extern bool ovr_MatchmakingRoom_HasPingTime(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600100B")]
		[Address(RVA = "0x9303F4", Offset = "0x9303F4", VA = "0x9303F4")]
		public static extern IntPtr ovr_MatchmakingRoomArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x600100C")]
		[Address(RVA = "0x930484", Offset = "0x930484", VA = "0x930484")]
		public static extern UIntPtr ovr_MatchmakingRoomArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600100D")]
		[Address(RVA = "0x930504", Offset = "0x930504", VA = "0x930504")]
		public static extern uint ovr_MatchmakingStats_GetDrawCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600100E")]
		[Address(RVA = "0x930584", Offset = "0x930584", VA = "0x930584")]
		public static extern uint ovr_MatchmakingStats_GetLossCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600100F")]
		[Address(RVA = "0x930604", Offset = "0x930604", VA = "0x930604")]
		public static extern uint ovr_MatchmakingStats_GetSkillLevel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001010")]
		[Address(RVA = "0x930684", Offset = "0x930684", VA = "0x930684")]
		public static extern uint ovr_MatchmakingStats_GetWinCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001011")]
		[Address(RVA = "0x930704", Offset = "0x930704", VA = "0x930704")]
		public static extern IntPtr ovr_Message_GetAbuseReportRecording(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001012")]
		[Address(RVA = "0x930784", Offset = "0x930784", VA = "0x930784")]
		public static extern IntPtr ovr_Message_GetAchievementDefinitionArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001013")]
		[Address(RVA = "0x930804", Offset = "0x930804", VA = "0x930804")]
		public static extern IntPtr ovr_Message_GetAchievementProgressArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001014")]
		[Address(RVA = "0x930884", Offset = "0x930884", VA = "0x930884")]
		public static extern IntPtr ovr_Message_GetAchievementUpdate(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001015")]
		[Address(RVA = "0x930904", Offset = "0x930904", VA = "0x930904")]
		public static extern IntPtr ovr_Message_GetApplicationVersion(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001016")]
		[Address(RVA = "0x930984", Offset = "0x930984", VA = "0x930984")]
		public static extern IntPtr ovr_Message_GetAssetDetails(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001017")]
		[Address(RVA = "0x930A04", Offset = "0x930A04", VA = "0x930A04")]
		public static extern IntPtr ovr_Message_GetAssetDetailsArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001018")]
		[Address(RVA = "0x930A84", Offset = "0x930A84", VA = "0x930A84")]
		public static extern IntPtr ovr_Message_GetAssetFileDeleteResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001019")]
		[Address(RVA = "0x930B04", Offset = "0x930B04", VA = "0x930B04")]
		public static extern IntPtr ovr_Message_GetAssetFileDownloadCancelResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600101A")]
		[Address(RVA = "0x930B84", Offset = "0x930B84", VA = "0x930B84")]
		public static extern IntPtr ovr_Message_GetAssetFileDownloadResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600101B")]
		[Address(RVA = "0x930C04", Offset = "0x930C04", VA = "0x930C04")]
		public static extern IntPtr ovr_Message_GetAssetFileDownloadUpdate(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600101C")]
		[Address(RVA = "0x930C84", Offset = "0x930C84", VA = "0x930C84")]
		public static extern IntPtr ovr_Message_GetCalApplicationFinalized(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600101D")]
		[Address(RVA = "0x930D04", Offset = "0x930D04", VA = "0x930D04")]
		public static extern IntPtr ovr_Message_GetCalApplicationProposed(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600101E")]
		[Address(RVA = "0x930D84", Offset = "0x930D84", VA = "0x930D84")]
		public static extern IntPtr ovr_Message_GetCalApplicationSuggestionArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600101F")]
		[Address(RVA = "0x930E04", Offset = "0x930E04", VA = "0x930E04")]
		public static extern IntPtr ovr_Message_GetCloudStorageConflictMetadata(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001020")]
		[Address(RVA = "0x930E84", Offset = "0x930E84", VA = "0x930E84")]
		public static extern IntPtr ovr_Message_GetCloudStorageData(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001021")]
		[Address(RVA = "0x930F04", Offset = "0x930F04", VA = "0x930F04")]
		public static extern IntPtr ovr_Message_GetCloudStorageMetadata(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001022")]
		[Address(RVA = "0x930F84", Offset = "0x930F84", VA = "0x930F84")]
		public static extern IntPtr ovr_Message_GetCloudStorageMetadataArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001023")]
		[Address(RVA = "0x931004", Offset = "0x931004", VA = "0x931004")]
		public static extern IntPtr ovr_Message_GetCloudStorageUpdateResponse(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001024")]
		[Address(RVA = "0x931084", Offset = "0x931084", VA = "0x931084")]
		public static extern IntPtr ovr_Message_GetError(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001025")]
		[Address(RVA = "0x931104", Offset = "0x931104", VA = "0x931104")]
		public static extern IntPtr ovr_Message_GetHttpTransferUpdate(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001026")]
		[Address(RVA = "0x931184", Offset = "0x931184", VA = "0x931184")]
		public static extern IntPtr ovr_Message_GetInstalledApplicationArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001027")]
		[Address(RVA = "0x931204", Offset = "0x931204", VA = "0x931204")]
		public static extern IntPtr ovr_Message_GetLaunchBlockFlowResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001028")]
		[Address(RVA = "0x931284", Offset = "0x931284", VA = "0x931284")]
		public static extern IntPtr ovr_Message_GetLaunchFriendRequestFlowResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001029")]
		[Address(RVA = "0x931304", Offset = "0x931304", VA = "0x931304")]
		public static extern IntPtr ovr_Message_GetLaunchReportFlowResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600102A")]
		[Address(RVA = "0x931384", Offset = "0x931384", VA = "0x931384")]
		public static extern IntPtr ovr_Message_GetLaunchUnblockFlowResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600102B")]
		[Address(RVA = "0x931404", Offset = "0x931404", VA = "0x931404")]
		public static extern IntPtr ovr_Message_GetLeaderboardEntryArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600102C")]
		[Address(RVA = "0x931484", Offset = "0x931484", VA = "0x931484")]
		public static extern IntPtr ovr_Message_GetLeaderboardUpdateStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600102D")]
		[Address(RVA = "0x931504", Offset = "0x931504", VA = "0x931504")]
		public static extern IntPtr ovr_Message_GetLinkedAccountArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600102E")]
		[Address(RVA = "0x931584", Offset = "0x931584", VA = "0x931584")]
		public static extern IntPtr ovr_Message_GetLivestreamingApplicationStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600102F")]
		[Address(RVA = "0x931604", Offset = "0x931604", VA = "0x931604")]
		public static extern IntPtr ovr_Message_GetLivestreamingStartResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001030")]
		[Address(RVA = "0x931684", Offset = "0x931684", VA = "0x931684")]
		public static extern IntPtr ovr_Message_GetLivestreamingStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001031")]
		[Address(RVA = "0x931704", Offset = "0x931704", VA = "0x931704")]
		public static extern IntPtr ovr_Message_GetLivestreamingVideoStats(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001032")]
		[Address(RVA = "0x931784", Offset = "0x931784", VA = "0x931784")]
		public static extern IntPtr ovr_Message_GetMatchmakingAdminSnapshot(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001033")]
		[Address(RVA = "0x931804", Offset = "0x931804", VA = "0x931804")]
		public static extern IntPtr ovr_Message_GetMatchmakingBrowseResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001034")]
		[Address(RVA = "0x931884", Offset = "0x931884", VA = "0x931884")]
		public static extern IntPtr ovr_Message_GetMatchmakingEnqueueResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001035")]
		[Address(RVA = "0x931904", Offset = "0x931904", VA = "0x931904")]
		public static extern IntPtr ovr_Message_GetMatchmakingEnqueueResultAndRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001036")]
		[Address(RVA = "0x931984", Offset = "0x931984", VA = "0x931984")]
		public static extern IntPtr ovr_Message_GetMatchmakingRoomArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001037")]
		[Address(RVA = "0x931A04", Offset = "0x931A04", VA = "0x931A04")]
		public static extern IntPtr ovr_Message_GetMatchmakingStats(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001038")]
		[Address(RVA = "0x931A84", Offset = "0x931A84", VA = "0x931A84")]
		public static extern IntPtr ovr_Message_GetNativeMessage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001039")]
		[Address(RVA = "0x931B04", Offset = "0x931B04", VA = "0x931B04")]
		public static extern IntPtr ovr_Message_GetNetworkingPeer(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600103A")]
		[Address(RVA = "0x931B84", Offset = "0x931B84", VA = "0x931B84")]
		public static extern IntPtr ovr_Message_GetOrgScopedID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600103B")]
		[Address(RVA = "0x931C04", Offset = "0x931C04", VA = "0x931C04")]
		public static extern IntPtr ovr_Message_GetParty(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600103C")]
		[Address(RVA = "0x931C84", Offset = "0x931C84", VA = "0x931C84")]
		public static extern IntPtr ovr_Message_GetPartyID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600103D")]
		[Address(RVA = "0x931D04", Offset = "0x931D04", VA = "0x931D04")]
		public static extern IntPtr ovr_Message_GetPartyUpdateNotification(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600103E")]
		[Address(RVA = "0x931D84", Offset = "0x931D84", VA = "0x931D84")]
		public static extern IntPtr ovr_Message_GetPidArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600103F")]
		[Address(RVA = "0x931E04", Offset = "0x931E04", VA = "0x931E04")]
		public static extern IntPtr ovr_Message_GetPingResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001040")]
		[Address(RVA = "0x931E84", Offset = "0x931E84", VA = "0x931E84")]
		public static extern IntPtr ovr_Message_GetPlatformInitialize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001041")]
		[Address(RVA = "0x931F04", Offset = "0x931F04", VA = "0x931F04")]
		public static extern IntPtr ovr_Message_GetProductArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001042")]
		[Address(RVA = "0x931F84", Offset = "0x931F84", VA = "0x931F84")]
		public static extern IntPtr ovr_Message_GetPurchase(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001043")]
		[Address(RVA = "0x932004", Offset = "0x932004", VA = "0x932004")]
		public static extern IntPtr ovr_Message_GetPurchaseArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001044")]
		[Address(RVA = "0x932084", Offset = "0x932084", VA = "0x932084")]
		public static extern ulong ovr_Message_GetRequestID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001045")]
		[Address(RVA = "0x932104", Offset = "0x932104", VA = "0x932104")]
		public static extern IntPtr ovr_Message_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001046")]
		[Address(RVA = "0x932184", Offset = "0x932184", VA = "0x932184")]
		public static extern IntPtr ovr_Message_GetRoomArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001047")]
		[Address(RVA = "0x932204", Offset = "0x932204", VA = "0x932204")]
		public static extern IntPtr ovr_Message_GetRoomInviteNotification(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001048")]
		[Address(RVA = "0x932284", Offset = "0x932284", VA = "0x932284")]
		public static extern IntPtr ovr_Message_GetRoomInviteNotificationArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001049")]
		[Address(RVA = "0x932304", Offset = "0x932304", VA = "0x932304")]
		public static extern IntPtr ovr_Message_GetSdkAccountArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600104A")]
		[Address(RVA = "0x932384", Offset = "0x932384", VA = "0x932384")]
		public static extern IntPtr ovr_Message_GetShareMediaResult(IntPtr obj);

		[Token(Token = "0x600104B")]
		[Address(RVA = "0x932404", Offset = "0x932404", VA = "0x932404")]
		public static string ovr_Message_GetString(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600104C")]
		[Address(RVA = "0x93246C", Offset = "0x93246C", VA = "0x93246C")]
		private static extern IntPtr ovr_Message_GetString_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600104D")]
		[Address(RVA = "0x9324EC", Offset = "0x9324EC", VA = "0x9324EC")]
		public static extern IntPtr ovr_Message_GetSystemPermission(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600104E")]
		[Address(RVA = "0x93256C", Offset = "0x93256C", VA = "0x93256C")]
		public static extern IntPtr ovr_Message_GetSystemVoipState(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600104F")]
		[Address(RVA = "0x9325EC", Offset = "0x9325EC", VA = "0x9325EC")]
		public static extern Message.MessageType ovr_Message_GetType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001050")]
		[Address(RVA = "0x93266C", Offset = "0x93266C", VA = "0x93266C")]
		public static extern IntPtr ovr_Message_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001051")]
		[Address(RVA = "0x9326EC", Offset = "0x9326EC", VA = "0x9326EC")]
		public static extern IntPtr ovr_Message_GetUserAndRoomArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001052")]
		[Address(RVA = "0x93276C", Offset = "0x93276C", VA = "0x93276C")]
		public static extern IntPtr ovr_Message_GetUserArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001053")]
		[Address(RVA = "0x9327EC", Offset = "0x9327EC", VA = "0x9327EC")]
		public static extern IntPtr ovr_Message_GetUserProof(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001054")]
		[Address(RVA = "0x93286C", Offset = "0x93286C", VA = "0x93286C")]
		public static extern IntPtr ovr_Message_GetUserReportID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001055")]
		[Address(RVA = "0x9328EC", Offset = "0x9328EC", VA = "0x9328EC")]
		public static extern bool ovr_Message_IsError(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001056")]
		[Address(RVA = "0x932974", Offset = "0x932974", VA = "0x932974")]
		public static extern UIntPtr ovr_Microphone_GetNumSamplesAvailable(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001057")]
		[Address(RVA = "0x9329F4", Offset = "0x9329F4", VA = "0x9329F4")]
		public static extern UIntPtr ovr_Microphone_GetOutputBufferMaxSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001058")]
		[Address(RVA = "0x932A74", Offset = "0x932A74", VA = "0x932A74")]
		public static extern UIntPtr ovr_Microphone_GetPCM(IntPtr obj, short[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x6001059")]
		[Address(RVA = "0x932B14", Offset = "0x932B14", VA = "0x932B14")]
		public static extern UIntPtr ovr_Microphone_GetPCMFloat(IntPtr obj, float[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x600105A")]
		[Address(RVA = "0x932BB4", Offset = "0x932BB4", VA = "0x932BB4")]
		public static extern UIntPtr ovr_Microphone_ReadData(IntPtr obj, float[] outputBuffer, UIntPtr outputBufferSize);

		[PreserveSig]
		[Token(Token = "0x600105B")]
		[Address(RVA = "0x932C54", Offset = "0x932C54", VA = "0x932C54")]
		public static extern void ovr_Microphone_SetAcceptableRecordingDelayHint(IntPtr obj, UIntPtr delayMs);

		[PreserveSig]
		[Token(Token = "0x600105C")]
		[Address(RVA = "0x932CE4", Offset = "0x932CE4", VA = "0x932CE4")]
		public static extern void ovr_Microphone_Start(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600105D")]
		[Address(RVA = "0x932D64", Offset = "0x932D64", VA = "0x932D64")]
		public static extern void ovr_Microphone_Stop(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600105E")]
		[Address(RVA = "0x932DE4", Offset = "0x932DE4", VA = "0x932DE4")]
		public static extern ulong ovr_NetworkingPeer_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600105F")]
		[Address(RVA = "0x932E64", Offset = "0x932E64", VA = "0x932E64")]
		public static extern PeerConnectionState ovr_NetworkingPeer_GetState(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001060")]
		[Address(RVA = "0x932EE4", Offset = "0x932EE4", VA = "0x932EE4")]
		public static extern ulong ovr_OrgScopedID_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001061")]
		[Address(RVA = "0x932F64", Offset = "0x932F64", VA = "0x932F64")]
		public static extern void ovr_Packet_Free(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001062")]
		[Address(RVA = "0x932FE4", Offset = "0x932FE4", VA = "0x932FE4")]
		public static extern IntPtr ovr_Packet_GetBytes(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001063")]
		[Address(RVA = "0x933064", Offset = "0x933064", VA = "0x933064")]
		public static extern SendPolicy ovr_Packet_GetSendPolicy(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001064")]
		[Address(RVA = "0x9330E4", Offset = "0x9330E4", VA = "0x9330E4")]
		public static extern ulong ovr_Packet_GetSenderID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001065")]
		[Address(RVA = "0x933164", Offset = "0x933164", VA = "0x933164")]
		public static extern UIntPtr ovr_Packet_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001066")]
		[Address(RVA = "0x9331E4", Offset = "0x9331E4", VA = "0x9331E4")]
		public static extern ulong ovr_Party_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001067")]
		[Address(RVA = "0x933264", Offset = "0x933264", VA = "0x933264")]
		public static extern IntPtr ovr_Party_GetInvitedUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001068")]
		[Address(RVA = "0x9332E4", Offset = "0x9332E4", VA = "0x9332E4")]
		public static extern IntPtr ovr_Party_GetLeader(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001069")]
		[Address(RVA = "0x933364", Offset = "0x933364", VA = "0x933364")]
		public static extern IntPtr ovr_Party_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600106A")]
		[Address(RVA = "0x9333E0", Offset = "0x9333E0", VA = "0x9333E0")]
		public static extern IntPtr ovr_Party_GetUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600106B")]
		[Address(RVA = "0x933460", Offset = "0x933460", VA = "0x933460")]
		public static extern ulong ovr_PartyID_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600106C")]
		[Address(RVA = "0x9334DC", Offset = "0x9334DC", VA = "0x9334DC")]
		public static extern PartyUpdateAction ovr_PartyUpdateNotification_GetAction(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600106D")]
		[Address(RVA = "0x93355C", Offset = "0x93355C", VA = "0x93355C")]
		public static extern ulong ovr_PartyUpdateNotification_GetPartyId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600106E")]
		[Address(RVA = "0x9335DC", Offset = "0x9335DC", VA = "0x9335DC")]
		public static extern ulong ovr_PartyUpdateNotification_GetSenderId(IntPtr obj);

		[Token(Token = "0x600106F")]
		[Address(RVA = "0x93365C", Offset = "0x93365C", VA = "0x93365C")]
		public static string ovr_PartyUpdateNotification_GetUpdateTimestamp(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001070")]
		[Address(RVA = "0x9336C4", Offset = "0x9336C4", VA = "0x9336C4")]
		private static extern IntPtr ovr_PartyUpdateNotification_GetUpdateTimestamp_Native(IntPtr obj);

		[Token(Token = "0x6001071")]
		[Address(RVA = "0x933744", Offset = "0x933744", VA = "0x933744")]
		public static string ovr_PartyUpdateNotification_GetUserAlias(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001072")]
		[Address(RVA = "0x9337AC", Offset = "0x9337AC", VA = "0x9337AC")]
		private static extern IntPtr ovr_PartyUpdateNotification_GetUserAlias_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001073")]
		[Address(RVA = "0x93382C", Offset = "0x93382C", VA = "0x93382C")]
		public static extern ulong ovr_PartyUpdateNotification_GetUserId(IntPtr obj);

		[Token(Token = "0x6001074")]
		[Address(RVA = "0x9338AC", Offset = "0x9338AC", VA = "0x9338AC")]
		public static string ovr_PartyUpdateNotification_GetUserName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001075")]
		[Address(RVA = "0x933914", Offset = "0x933914", VA = "0x933914")]
		private static extern IntPtr ovr_PartyUpdateNotification_GetUserName_Native(IntPtr obj);

		[Token(Token = "0x6001076")]
		[Address(RVA = "0x933994", Offset = "0x933994", VA = "0x933994")]
		public static string ovr_Pid_GetId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001077")]
		[Address(RVA = "0x9339FC", Offset = "0x9339FC", VA = "0x9339FC")]
		private static extern IntPtr ovr_Pid_GetId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001078")]
		[Address(RVA = "0x933A7C", Offset = "0x933A7C", VA = "0x933A7C")]
		public static extern IntPtr ovr_PidArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6001079")]
		[Address(RVA = "0x933B0C", Offset = "0x933B0C", VA = "0x933B0C")]
		public static extern UIntPtr ovr_PidArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600107A")]
		[Address(RVA = "0x933B8C", Offset = "0x933B8C", VA = "0x933B8C")]
		public static extern ulong ovr_PingResult_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600107B")]
		[Address(RVA = "0x933C0C", Offset = "0x933C0C", VA = "0x933C0C")]
		public static extern ulong ovr_PingResult_GetPingTimeUsec(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600107C")]
		[Address(RVA = "0x933C8C", Offset = "0x933C8C", VA = "0x933C8C")]
		public static extern bool ovr_PingResult_IsTimeout(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600107D")]
		[Address(RVA = "0x933D14", Offset = "0x933D14", VA = "0x933D14")]
		public static extern PlatformInitializeResult ovr_PlatformInitialize_GetResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600107E")]
		[Address(RVA = "0x933D94", Offset = "0x933D94", VA = "0x933D94")]
		public static extern uint ovr_Price_GetAmountInHundredths(IntPtr obj);

		[Token(Token = "0x600107F")]
		[Address(RVA = "0x933E14", Offset = "0x933E14", VA = "0x933E14")]
		public static string ovr_Price_GetCurrency(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001080")]
		[Address(RVA = "0x933E7C", Offset = "0x933E7C", VA = "0x933E7C")]
		private static extern IntPtr ovr_Price_GetCurrency_Native(IntPtr obj);

		[Token(Token = "0x6001081")]
		[Address(RVA = "0x933EFC", Offset = "0x933EFC", VA = "0x933EFC")]
		public static string ovr_Price_GetFormatted(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001082")]
		[Address(RVA = "0x933F64", Offset = "0x933F64", VA = "0x933F64")]
		private static extern IntPtr ovr_Price_GetFormatted_Native(IntPtr obj);

		[Token(Token = "0x6001083")]
		[Address(RVA = "0x933FE4", Offset = "0x933FE4", VA = "0x933FE4")]
		public static string ovr_Product_GetDescription(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001084")]
		[Address(RVA = "0x93404C", Offset = "0x93404C", VA = "0x93404C")]
		private static extern IntPtr ovr_Product_GetDescription_Native(IntPtr obj);

		[Token(Token = "0x6001085")]
		[Address(RVA = "0x9340CC", Offset = "0x9340CC", VA = "0x9340CC")]
		public static string ovr_Product_GetFormattedPrice(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001086")]
		[Address(RVA = "0x934134", Offset = "0x934134", VA = "0x934134")]
		private static extern IntPtr ovr_Product_GetFormattedPrice_Native(IntPtr obj);

		[Token(Token = "0x6001087")]
		[Address(RVA = "0x9341B4", Offset = "0x9341B4", VA = "0x9341B4")]
		public static string ovr_Product_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001088")]
		[Address(RVA = "0x93421C", Offset = "0x93421C", VA = "0x93421C")]
		private static extern IntPtr ovr_Product_GetName_Native(IntPtr obj);

		[Token(Token = "0x6001089")]
		[Address(RVA = "0x93429C", Offset = "0x93429C", VA = "0x93429C")]
		public static string ovr_Product_GetSKU(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600108A")]
		[Address(RVA = "0x934304", Offset = "0x934304", VA = "0x934304")]
		private static extern IntPtr ovr_Product_GetSKU_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600108B")]
		[Address(RVA = "0x934384", Offset = "0x934384", VA = "0x934384")]
		public static extern IntPtr ovr_ProductArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x600108C")]
		[Address(RVA = "0x934414", Offset = "0x934414", VA = "0x934414")]
		public static string ovr_ProductArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600108D")]
		[Address(RVA = "0x93447C", Offset = "0x93447C", VA = "0x93447C")]
		private static extern IntPtr ovr_ProductArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600108E")]
		[Address(RVA = "0x9344FC", Offset = "0x9344FC", VA = "0x9344FC")]
		public static extern UIntPtr ovr_ProductArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600108F")]
		[Address(RVA = "0x93457C", Offset = "0x93457C", VA = "0x93457C")]
		public static extern bool ovr_ProductArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x6001090")]
		[Address(RVA = "0x934604", Offset = "0x934604", VA = "0x934604")]
		public static DateTime ovr_Purchase_GetExpirationTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x6001091")]
		[Address(RVA = "0x93466C", Offset = "0x93466C", VA = "0x93466C")]
		private static extern ulong ovr_Purchase_GetExpirationTime_Native(IntPtr obj);

		[Token(Token = "0x6001092")]
		[Address(RVA = "0x9346EC", Offset = "0x9346EC", VA = "0x9346EC")]
		public static DateTime ovr_Purchase_GetGrantTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x6001093")]
		[Address(RVA = "0x934754", Offset = "0x934754", VA = "0x934754")]
		private static extern ulong ovr_Purchase_GetGrantTime_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001094")]
		[Address(RVA = "0x9347D4", Offset = "0x9347D4", VA = "0x9347D4")]
		public static extern ulong ovr_Purchase_GetPurchaseID(IntPtr obj);

		[Token(Token = "0x6001095")]
		[Address(RVA = "0x934854", Offset = "0x934854", VA = "0x934854")]
		public static string ovr_Purchase_GetSKU(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001096")]
		[Address(RVA = "0x9348BC", Offset = "0x9348BC", VA = "0x9348BC")]
		private static extern IntPtr ovr_Purchase_GetSKU_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001097")]
		[Address(RVA = "0x93493C", Offset = "0x93493C", VA = "0x93493C")]
		public static extern IntPtr ovr_PurchaseArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6001098")]
		[Address(RVA = "0x9349CC", Offset = "0x9349CC", VA = "0x9349CC")]
		public static string ovr_PurchaseArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001099")]
		[Address(RVA = "0x934A34", Offset = "0x934A34", VA = "0x934A34")]
		private static extern IntPtr ovr_PurchaseArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600109A")]
		[Address(RVA = "0x934AB4", Offset = "0x934AB4", VA = "0x934AB4")]
		public static extern UIntPtr ovr_PurchaseArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600109B")]
		[Address(RVA = "0x934B34", Offset = "0x934B34", VA = "0x934B34")]
		public static extern bool ovr_PurchaseArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600109C")]
		[Address(RVA = "0x934BBC", Offset = "0x934BBC", VA = "0x934BBC")]
		public static extern ulong ovr_Room_GetApplicationID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600109D")]
		[Address(RVA = "0x934C3C", Offset = "0x934C3C", VA = "0x934C3C")]
		public static extern IntPtr ovr_Room_GetDataStore(IntPtr obj);

		[Token(Token = "0x600109E")]
		[Address(RVA = "0x934CBC", Offset = "0x934CBC", VA = "0x934CBC")]
		public static string ovr_Room_GetDescription(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600109F")]
		[Address(RVA = "0x934D24", Offset = "0x934D24", VA = "0x934D24")]
		private static extern IntPtr ovr_Room_GetDescription_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010A0")]
		[Address(RVA = "0x934DA4", Offset = "0x934DA4", VA = "0x934DA4")]
		public static extern ulong ovr_Room_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010A1")]
		[Address(RVA = "0x934E24", Offset = "0x934E24", VA = "0x934E24")]
		public static extern IntPtr ovr_Room_GetInvitedUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010A2")]
		[Address(RVA = "0x934EA4", Offset = "0x934EA4", VA = "0x934EA4")]
		public static extern bool ovr_Room_GetIsMembershipLocked(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010A3")]
		[Address(RVA = "0x934F2C", Offset = "0x934F2C", VA = "0x934F2C")]
		public static extern RoomJoinPolicy ovr_Room_GetJoinPolicy(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010A4")]
		[Address(RVA = "0x934FAC", Offset = "0x934FAC", VA = "0x934FAC")]
		public static extern RoomJoinability ovr_Room_GetJoinability(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010A5")]
		[Address(RVA = "0x93502C", Offset = "0x93502C", VA = "0x93502C")]
		public static extern IntPtr ovr_Room_GetMatchedUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010A6")]
		[Address(RVA = "0x9350AC", Offset = "0x9350AC", VA = "0x9350AC")]
		public static extern uint ovr_Room_GetMaxUsers(IntPtr obj);

		[Token(Token = "0x60010A7")]
		[Address(RVA = "0x93512C", Offset = "0x93512C", VA = "0x93512C")]
		public static string ovr_Room_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60010A8")]
		[Address(RVA = "0x935194", Offset = "0x935194", VA = "0x935194")]
		private static extern IntPtr ovr_Room_GetName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010A9")]
		[Address(RVA = "0x935214", Offset = "0x935214", VA = "0x935214")]
		public static extern IntPtr ovr_Room_GetOwner(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010AA")]
		[Address(RVA = "0x935290", Offset = "0x935290", VA = "0x935290")]
		public static extern RoomType ovr_Room_GetType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010AB")]
		[Address(RVA = "0x935310", Offset = "0x935310", VA = "0x935310")]
		public static extern IntPtr ovr_Room_GetUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010AC")]
		[Address(RVA = "0x93538C", Offset = "0x93538C", VA = "0x93538C")]
		public static extern uint ovr_Room_GetVersion(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010AD")]
		[Address(RVA = "0x93540C", Offset = "0x93540C", VA = "0x93540C")]
		public static extern IntPtr ovr_RoomArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x60010AE")]
		[Address(RVA = "0x93549C", Offset = "0x93549C", VA = "0x93549C")]
		public static string ovr_RoomArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60010AF")]
		[Address(RVA = "0x935504", Offset = "0x935504", VA = "0x935504")]
		private static extern IntPtr ovr_RoomArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010B0")]
		[Address(RVA = "0x935584", Offset = "0x935584", VA = "0x935584")]
		public static extern UIntPtr ovr_RoomArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010B1")]
		[Address(RVA = "0x935604", Offset = "0x935604", VA = "0x935604")]
		public static extern bool ovr_RoomArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010B2")]
		[Address(RVA = "0x93568C", Offset = "0x93568C", VA = "0x93568C")]
		public static extern ulong ovr_RoomInviteNotification_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010B3")]
		[Address(RVA = "0x93570C", Offset = "0x93570C", VA = "0x93570C")]
		public static extern ulong ovr_RoomInviteNotification_GetRoomID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010B4")]
		[Address(RVA = "0x93578C", Offset = "0x93578C", VA = "0x93578C")]
		public static extern ulong ovr_RoomInviteNotification_GetSenderID(IntPtr obj);

		[Token(Token = "0x60010B5")]
		[Address(RVA = "0x93580C", Offset = "0x93580C", VA = "0x93580C")]
		public static DateTime ovr_RoomInviteNotification_GetSentTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x60010B6")]
		[Address(RVA = "0x935874", Offset = "0x935874", VA = "0x935874")]
		private static extern ulong ovr_RoomInviteNotification_GetSentTime_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010B7")]
		[Address(RVA = "0x9358F4", Offset = "0x9358F4", VA = "0x9358F4")]
		public static extern IntPtr ovr_RoomInviteNotificationArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x60010B8")]
		[Address(RVA = "0x935984", Offset = "0x935984", VA = "0x935984")]
		public static string ovr_RoomInviteNotificationArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60010B9")]
		[Address(RVA = "0x9359EC", Offset = "0x9359EC", VA = "0x9359EC")]
		private static extern IntPtr ovr_RoomInviteNotificationArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010BA")]
		[Address(RVA = "0x935A6C", Offset = "0x935A6C", VA = "0x935A6C")]
		public static extern UIntPtr ovr_RoomInviteNotificationArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010BB")]
		[Address(RVA = "0x935AEC", Offset = "0x935AEC", VA = "0x935AEC")]
		public static extern bool ovr_RoomInviteNotificationArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010BC")]
		[Address(RVA = "0x935B74", Offset = "0x935B74", VA = "0x935B74")]
		public static extern SdkAccountType ovr_SdkAccount_GetAccountType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010BD")]
		[Address(RVA = "0x935BF4", Offset = "0x935BF4", VA = "0x935BF4")]
		public static extern ulong ovr_SdkAccount_GetUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010BE")]
		[Address(RVA = "0x935C74", Offset = "0x935C74", VA = "0x935C74")]
		public static extern IntPtr ovr_SdkAccountArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x60010BF")]
		[Address(RVA = "0x935D04", Offset = "0x935D04", VA = "0x935D04")]
		public static extern UIntPtr ovr_SdkAccountArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010C0")]
		[Address(RVA = "0x935D84", Offset = "0x935D84", VA = "0x935D84")]
		public static extern ShareMediaStatus ovr_ShareMediaResult_GetStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010C1")]
		[Address(RVA = "0x935E04", Offset = "0x935E04", VA = "0x935E04")]
		public static extern bool ovr_SystemPermission_GetHasPermission(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010C2")]
		[Address(RVA = "0x935E8C", Offset = "0x935E8C", VA = "0x935E8C")]
		public static extern PermissionGrantStatus ovr_SystemPermission_GetPermissionGrantStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010C3")]
		[Address(RVA = "0x935F0C", Offset = "0x935F0C", VA = "0x935F0C")]
		public static extern VoipMuteState ovr_SystemVoipState_GetMicrophoneMuted(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010C4")]
		[Address(RVA = "0x935F8C", Offset = "0x935F8C", VA = "0x935F8C")]
		public static extern SystemVoipStatus ovr_SystemVoipState_GetStatus(IntPtr obj);

		[Token(Token = "0x60010C5")]
		[Address(RVA = "0x93600C", Offset = "0x93600C", VA = "0x93600C")]
		public static string ovr_TestUser_GetAccessToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60010C6")]
		[Address(RVA = "0x936074", Offset = "0x936074", VA = "0x936074")]
		private static extern IntPtr ovr_TestUser_GetAccessToken_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010C7")]
		[Address(RVA = "0x9360F4", Offset = "0x9360F4", VA = "0x9360F4")]
		public static extern IntPtr ovr_TestUser_GetAppAccessArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010C8")]
		[Address(RVA = "0x936174", Offset = "0x936174", VA = "0x936174")]
		public static extern IntPtr ovr_TestUser_GetFbAppAccessArray(IntPtr obj);

		[Token(Token = "0x60010C9")]
		[Address(RVA = "0x9361F4", Offset = "0x9361F4", VA = "0x9361F4")]
		public static string ovr_TestUser_GetFriendAccessToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60010CA")]
		[Address(RVA = "0x93625C", Offset = "0x93625C", VA = "0x93625C")]
		private static extern IntPtr ovr_TestUser_GetFriendAccessToken_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010CB")]
		[Address(RVA = "0x9362DC", Offset = "0x9362DC", VA = "0x9362DC")]
		public static extern IntPtr ovr_TestUser_GetFriendAppAccessArray(IntPtr obj);

		[Token(Token = "0x60010CC")]
		[Address(RVA = "0x93635C", Offset = "0x93635C", VA = "0x93635C")]
		public static string ovr_TestUser_GetUserAlias(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60010CD")]
		[Address(RVA = "0x9363C4", Offset = "0x9363C4", VA = "0x9363C4")]
		private static extern IntPtr ovr_TestUser_GetUserAlias_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010CE")]
		[Address(RVA = "0x936444", Offset = "0x936444", VA = "0x936444")]
		public static extern ulong ovr_TestUser_GetUserFbid(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010CF")]
		[Address(RVA = "0x9364C4", Offset = "0x9364C4", VA = "0x9364C4")]
		public static extern ulong ovr_TestUser_GetUserId(IntPtr obj);

		[Token(Token = "0x60010D0")]
		[Address(RVA = "0x936544", Offset = "0x936544", VA = "0x936544")]
		public static string ovr_TestUserAppAccess_GetAccessToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60010D1")]
		[Address(RVA = "0x9365AC", Offset = "0x9365AC", VA = "0x9365AC")]
		private static extern IntPtr ovr_TestUserAppAccess_GetAccessToken_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010D2")]
		[Address(RVA = "0x93662C", Offset = "0x93662C", VA = "0x93662C")]
		public static extern ulong ovr_TestUserAppAccess_GetAppId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010D3")]
		[Address(RVA = "0x9366AC", Offset = "0x9366AC", VA = "0x9366AC")]
		public static extern ulong ovr_TestUserAppAccess_GetUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010D4")]
		[Address(RVA = "0x93672C", Offset = "0x93672C", VA = "0x93672C")]
		public static extern IntPtr ovr_TestUserAppAccessArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x60010D5")]
		[Address(RVA = "0x9367BC", Offset = "0x9367BC", VA = "0x9367BC")]
		public static extern UIntPtr ovr_TestUserAppAccessArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010D6")]
		[Address(RVA = "0x93683C", Offset = "0x93683C", VA = "0x93683C")]
		public static extern ulong ovr_User_GetID(IntPtr obj);

		[Token(Token = "0x60010D7")]
		[Address(RVA = "0x9368BC", Offset = "0x9368BC", VA = "0x9368BC")]
		public static string ovr_User_GetImageUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60010D8")]
		[Address(RVA = "0x936924", Offset = "0x936924", VA = "0x936924")]
		private static extern IntPtr ovr_User_GetImageUrl_Native(IntPtr obj);

		[Token(Token = "0x60010D9")]
		[Address(RVA = "0x9369A4", Offset = "0x9369A4", VA = "0x9369A4")]
		public static string ovr_User_GetInviteToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60010DA")]
		[Address(RVA = "0x936A0C", Offset = "0x936A0C", VA = "0x936A0C")]
		private static extern IntPtr ovr_User_GetInviteToken_Native(IntPtr obj);

		[Token(Token = "0x60010DB")]
		[Address(RVA = "0x936A8C", Offset = "0x936A8C", VA = "0x936A8C")]
		public static string ovr_User_GetOculusID(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60010DC")]
		[Address(RVA = "0x936AF4", Offset = "0x936AF4", VA = "0x936AF4")]
		private static extern IntPtr ovr_User_GetOculusID_Native(IntPtr obj);

		[Token(Token = "0x60010DD")]
		[Address(RVA = "0x936B74", Offset = "0x936B74", VA = "0x936B74")]
		public static string ovr_User_GetPresence(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60010DE")]
		[Address(RVA = "0x936BDC", Offset = "0x936BDC", VA = "0x936BDC")]
		private static extern IntPtr ovr_User_GetPresence_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010DF")]
		[Address(RVA = "0x936C5C", Offset = "0x936C5C", VA = "0x936C5C")]
		public static extern UserPresenceStatus ovr_User_GetPresenceStatus(IntPtr obj);

		[Token(Token = "0x60010E0")]
		[Address(RVA = "0x936CDC", Offset = "0x936CDC", VA = "0x936CDC")]
		public static string ovr_User_GetSmallImageUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60010E1")]
		[Address(RVA = "0x936D44", Offset = "0x936D44", VA = "0x936D44")]
		private static extern IntPtr ovr_User_GetSmallImageUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010E2")]
		[Address(RVA = "0x936DC4", Offset = "0x936DC4", VA = "0x936DC4")]
		public static extern IntPtr ovr_UserAndRoom_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010E3")]
		[Address(RVA = "0x936E44", Offset = "0x936E44", VA = "0x936E44")]
		public static extern IntPtr ovr_UserAndRoom_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010E4")]
		[Address(RVA = "0x936EC4", Offset = "0x936EC4", VA = "0x936EC4")]
		public static extern IntPtr ovr_UserAndRoomArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x60010E5")]
		[Address(RVA = "0x936F54", Offset = "0x936F54", VA = "0x936F54")]
		public static string ovr_UserAndRoomArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60010E6")]
		[Address(RVA = "0x936FBC", Offset = "0x936FBC", VA = "0x936FBC")]
		private static extern IntPtr ovr_UserAndRoomArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010E7")]
		[Address(RVA = "0x93703C", Offset = "0x93703C", VA = "0x93703C")]
		public static extern UIntPtr ovr_UserAndRoomArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010E8")]
		[Address(RVA = "0x9370BC", Offset = "0x9370BC", VA = "0x9370BC")]
		public static extern bool ovr_UserAndRoomArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010E9")]
		[Address(RVA = "0x937144", Offset = "0x937144", VA = "0x937144")]
		public static extern IntPtr ovr_UserArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x60010EA")]
		[Address(RVA = "0x9371D4", Offset = "0x9371D4", VA = "0x9371D4")]
		public static string ovr_UserArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60010EB")]
		[Address(RVA = "0x93723C", Offset = "0x93723C", VA = "0x93723C")]
		private static extern IntPtr ovr_UserArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010EC")]
		[Address(RVA = "0x9372BC", Offset = "0x9372BC", VA = "0x9372BC")]
		public static extern UIntPtr ovr_UserArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010ED")]
		[Address(RVA = "0x93733C", Offset = "0x93733C", VA = "0x93733C")]
		public static extern bool ovr_UserArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x60010EE")]
		[Address(RVA = "0x9373C4", Offset = "0x9373C4", VA = "0x9373C4")]
		public static string ovr_UserProof_GetNonce(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60010EF")]
		[Address(RVA = "0x93742C", Offset = "0x93742C", VA = "0x93742C")]
		private static extern IntPtr ovr_UserProof_GetNonce_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010F0")]
		[Address(RVA = "0x9374AC", Offset = "0x9374AC", VA = "0x9374AC")]
		public static extern bool ovr_UserReportID_GetDidCancel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010F1")]
		[Address(RVA = "0x937534", Offset = "0x937534", VA = "0x937534")]
		public static extern ulong ovr_UserReportID_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010F2")]
		[Address(RVA = "0x9375B4", Offset = "0x9375B4", VA = "0x9375B4")]
		public static extern void ovr_VoipDecoder_Decode(IntPtr obj, byte[] compressedData, UIntPtr compressedSize);

		[PreserveSig]
		[Token(Token = "0x60010F3")]
		[Address(RVA = "0x937654", Offset = "0x937654", VA = "0x937654")]
		public static extern UIntPtr ovr_VoipDecoder_GetDecodedPCM(IntPtr obj, float[] outputBuffer, UIntPtr outputBufferSize);

		[PreserveSig]
		[Token(Token = "0x60010F4")]
		[Address(RVA = "0x9376F4", Offset = "0x9376F4", VA = "0x9376F4")]
		public static extern void ovr_VoipEncoder_AddPCM(IntPtr obj, float[] inputData, uint inputSize);

		[PreserveSig]
		[Token(Token = "0x60010F5")]
		[Address(RVA = "0x937794", Offset = "0x937794", VA = "0x937794")]
		public static extern UIntPtr ovr_VoipEncoder_GetCompressedData(IntPtr obj, byte[] outputBuffer, UIntPtr intputSize);

		[PreserveSig]
		[Token(Token = "0x60010F6")]
		[Address(RVA = "0x937834", Offset = "0x937834", VA = "0x937834")]
		public static extern UIntPtr ovr_VoipEncoder_GetCompressedDataSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010F7")]
		[Address(RVA = "0x91BD98", Offset = "0x91BD98", VA = "0x91BD98")]
		public static extern IntPtr ovr_AbuseReportOptions_Create();

		[PreserveSig]
		[Token(Token = "0x60010F8")]
		[Address(RVA = "0x91C120", Offset = "0x91C120", VA = "0x91C120")]
		public static extern void ovr_AbuseReportOptions_Destroy(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x60010F9")]
		[Address(RVA = "0x91BE84", Offset = "0x91BE84", VA = "0x91BE84")]
		public static extern void ovr_AbuseReportOptions_SetPreventPeopleChooser(IntPtr handle, bool value);

		[PreserveSig]
		[Token(Token = "0x60010FA")]
		[Address(RVA = "0x91BF8C", Offset = "0x91BF8C", VA = "0x91BF8C")]
		public static extern void ovr_AbuseReportOptions_SetReportType(IntPtr handle, AbuseReportType value);

		[PreserveSig]
		[Token(Token = "0x60010FB")]
		[Address(RVA = "0x91DAAC", Offset = "0x91DAAC", VA = "0x91DAAC")]
		public static extern IntPtr ovr_ApplicationOptions_Create();

		[PreserveSig]
		[Token(Token = "0x60010FC")]
		[Address(RVA = "0x91DCF8", Offset = "0x91DCF8", VA = "0x91DCF8")]
		public static extern void ovr_ApplicationOptions_Destroy(IntPtr handle);

		[Token(Token = "0x60010FD")]
		[Address(RVA = "0x91DB98", Offset = "0x91DB98", VA = "0x91DB98")]
		public static void ovr_ApplicationOptions_SetDeeplinkMessage(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60010FE")]
		[Address(RVA = "0x9378B4", Offset = "0x9378B4", VA = "0x9378B4")]
		private static extern void ovr_ApplicationOptions_SetDeeplinkMessage_Native(IntPtr handle, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x60010FF")]
		[Address(RVA = "0x937944", Offset = "0x937944", VA = "0x937944")]
		public static extern IntPtr ovr_MatchmakingOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6001100")]
		[Address(RVA = "0x9379B8", Offset = "0x9379B8", VA = "0x9379B8")]
		public static extern void ovr_MatchmakingOptions_Destroy(IntPtr handle);

		[Token(Token = "0x6001101")]
		[Address(RVA = "0x937A38", Offset = "0x937A38", VA = "0x937A38")]
		public static void ovr_MatchmakingOptions_SetCreateRoomDataStoreString(IntPtr handle, string key, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001102")]
		[Address(RVA = "0x937B04", Offset = "0x937B04", VA = "0x937B04")]
		private static extern void ovr_MatchmakingOptions_SetCreateRoomDataStoreString_Native(IntPtr handle, IntPtr key, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6001103")]
		[Address(RVA = "0x937B9C", Offset = "0x937B9C", VA = "0x937B9C")]
		public static extern void ovr_MatchmakingOptions_ClearCreateRoomDataStore(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6001104")]
		[Address(RVA = "0x937C1C", Offset = "0x937C1C", VA = "0x937C1C")]
		public static extern void ovr_MatchmakingOptions_SetCreateRoomJoinPolicy(IntPtr handle, RoomJoinPolicy value);

		[PreserveSig]
		[Token(Token = "0x6001105")]
		[Address(RVA = "0x937CAC", Offset = "0x937CAC", VA = "0x937CAC")]
		public static extern void ovr_MatchmakingOptions_SetCreateRoomMaxUsers(IntPtr handle, uint value);

		[PreserveSig]
		[Token(Token = "0x6001106")]
		[Address(RVA = "0x937D3C", Offset = "0x937D3C", VA = "0x937D3C")]
		public static extern void ovr_MatchmakingOptions_AddEnqueueAdditionalUser(IntPtr handle, ulong value);

		[PreserveSig]
		[Token(Token = "0x6001107")]
		[Address(RVA = "0x937DCC", Offset = "0x937DCC", VA = "0x937DCC")]
		public static extern void ovr_MatchmakingOptions_ClearEnqueueAdditionalUsers(IntPtr handle);

		[Token(Token = "0x6001108")]
		[Address(RVA = "0x937E4C", Offset = "0x937E4C", VA = "0x937E4C")]
		public static void ovr_MatchmakingOptions_SetEnqueueDataSettingsInt(IntPtr handle, string key, int value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001109")]
		[Address(RVA = "0x937F00", Offset = "0x937F00", VA = "0x937F00")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueDataSettingsInt_Native(IntPtr handle, IntPtr key, int value);

		[Token(Token = "0x600110A")]
		[Address(RVA = "0x937F98", Offset = "0x937F98", VA = "0x937F98")]
		public static void ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble(IntPtr handle, string key, double value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600110B")]
		[Address(RVA = "0x938054", Offset = "0x938054", VA = "0x938054")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble_Native(IntPtr handle, IntPtr key, double value);

		[Token(Token = "0x600110C")]
		[Address(RVA = "0x9380F4", Offset = "0x9380F4", VA = "0x9380F4")]
		public static void ovr_MatchmakingOptions_SetEnqueueDataSettingsString(IntPtr handle, string key, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600110D")]
		[Address(RVA = "0x9381C0", Offset = "0x9381C0", VA = "0x9381C0")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueDataSettingsString_Native(IntPtr handle, IntPtr key, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x600110E")]
		[Address(RVA = "0x938258", Offset = "0x938258", VA = "0x938258")]
		public static extern void ovr_MatchmakingOptions_ClearEnqueueDataSettings(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x600110F")]
		[Address(RVA = "0x9382D8", Offset = "0x9382D8", VA = "0x9382D8")]
		public static extern void ovr_MatchmakingOptions_SetEnqueueIsDebug(IntPtr handle, bool value);

		[Token(Token = "0x6001110")]
		[Address(RVA = "0x938368", Offset = "0x938368", VA = "0x938368")]
		public static void ovr_MatchmakingOptions_SetEnqueueQueryKey(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001111")]
		[Address(RVA = "0x938414", Offset = "0x938414", VA = "0x938414")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueQueryKey_Native(IntPtr handle, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6001112")]
		[Address(RVA = "0x9384A4", Offset = "0x9384A4", VA = "0x9384A4")]
		public static extern IntPtr ovr_RoomOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6001113")]
		[Address(RVA = "0x938518", Offset = "0x938518", VA = "0x938518")]
		public static extern void ovr_RoomOptions_Destroy(IntPtr handle);

		[Token(Token = "0x6001114")]
		[Address(RVA = "0x938598", Offset = "0x938598", VA = "0x938598")]
		public static void ovr_RoomOptions_SetDataStoreString(IntPtr handle, string key, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001115")]
		[Address(RVA = "0x938664", Offset = "0x938664", VA = "0x938664")]
		private static extern void ovr_RoomOptions_SetDataStoreString_Native(IntPtr handle, IntPtr key, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6001116")]
		[Address(RVA = "0x9386FC", Offset = "0x9386FC", VA = "0x9386FC")]
		public static extern void ovr_RoomOptions_ClearDataStore(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6001117")]
		[Address(RVA = "0x93877C", Offset = "0x93877C", VA = "0x93877C")]
		public static extern void ovr_RoomOptions_SetExcludeRecentlyMet(IntPtr handle, bool value);

		[PreserveSig]
		[Token(Token = "0x6001118")]
		[Address(RVA = "0x93880C", Offset = "0x93880C", VA = "0x93880C")]
		public static extern void ovr_RoomOptions_SetMaxUserResults(IntPtr handle, uint value);

		[PreserveSig]
		[Token(Token = "0x6001119")]
		[Address(RVA = "0x93889C", Offset = "0x93889C", VA = "0x93889C")]
		public static extern void ovr_RoomOptions_SetOrdering(IntPtr handle, UserOrdering value);

		[PreserveSig]
		[Token(Token = "0x600111A")]
		[Address(RVA = "0x93892C", Offset = "0x93892C", VA = "0x93892C")]
		public static extern void ovr_RoomOptions_SetRecentlyMetTimeWindow(IntPtr handle, TimeWindow value);

		[PreserveSig]
		[Token(Token = "0x600111B")]
		[Address(RVA = "0x9389BC", Offset = "0x9389BC", VA = "0x9389BC")]
		public static extern void ovr_RoomOptions_SetRoomId(IntPtr handle, ulong value);

		[PreserveSig]
		[Token(Token = "0x600111C")]
		[Address(RVA = "0x938A4C", Offset = "0x938A4C", VA = "0x938A4C")]
		public static extern void ovr_RoomOptions_SetTurnOffUpdates(IntPtr handle, bool value);

		[PreserveSig]
		[Token(Token = "0x600111D")]
		[Address(RVA = "0x938ADC", Offset = "0x938ADC", VA = "0x938ADC")]
		public static extern IntPtr ovr_UserOptions_Create();

		[PreserveSig]
		[Token(Token = "0x600111E")]
		[Address(RVA = "0x938B50", Offset = "0x938B50", VA = "0x938B50")]
		public static extern void ovr_UserOptions_Destroy(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x600111F")]
		[Address(RVA = "0x938BD0", Offset = "0x938BD0", VA = "0x938BD0")]
		public static extern void ovr_UserOptions_SetMaxUsers(IntPtr handle, uint value);

		[PreserveSig]
		[Token(Token = "0x6001120")]
		[Address(RVA = "0x938C60", Offset = "0x938C60", VA = "0x938C60")]
		public static extern void ovr_UserOptions_AddServiceProvider(IntPtr handle, ServiceProvider value);

		[PreserveSig]
		[Token(Token = "0x6001121")]
		[Address(RVA = "0x938CF0", Offset = "0x938CF0", VA = "0x938CF0")]
		public static extern void ovr_UserOptions_ClearServiceProviders(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6001122")]
		[Address(RVA = "0x938D70", Offset = "0x938D70", VA = "0x938D70")]
		public static extern void ovr_UserOptions_SetTimeWindow(IntPtr handle, TimeWindow value);

		[PreserveSig]
		[Token(Token = "0x6001123")]
		[Address(RVA = "0x938E00", Offset = "0x938E00", VA = "0x938E00")]
		public static extern IntPtr ovr_VoipOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6001124")]
		[Address(RVA = "0x938E74", Offset = "0x938E74", VA = "0x938E74")]
		public static extern void ovr_VoipOptions_Destroy(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6001125")]
		[Address(RVA = "0x938EF4", Offset = "0x938EF4", VA = "0x938EF4")]
		public static extern void ovr_VoipOptions_SetBitrateForNewConnections(IntPtr handle, VoipBitrate value);

		[PreserveSig]
		[Token(Token = "0x6001126")]
		[Address(RVA = "0x938F84", Offset = "0x938F84", VA = "0x938F84")]
		public static extern void ovr_VoipOptions_SetCreateNewConnectionUseDtx(IntPtr handle, VoipDtxState value);

		[Token(Token = "0x6001127")]
		[Address(RVA = "0x939014", Offset = "0x939014", VA = "0x939014")]
		public CAPI()
		{
		}
	}
	[Token(Token = "0x200023B")]
	public static class Callback
	{
		[Token(Token = "0x20003F7")]
		private class RequestCallback
		{
			[Token(Token = "0x4001405")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Message.Callback messageCallback;

			[Token(Token = "0x60018C1")]
			[Address(RVA = "0xBABA4C", Offset = "0xBABA4C", VA = "0xBABA4C")]
			public RequestCallback()
			{
			}

			[Token(Token = "0x60018C2")]
			[Address(RVA = "0xBAB36C", Offset = "0xBAB36C", VA = "0xBAB36C")]
			public RequestCallback(Message.Callback callback)
			{
			}

			[Token(Token = "0x60018C3")]
			[Address(RVA = "0xBABA54", Offset = "0xBABA54", VA = "0xBABA54", Slot = "4")]
			public virtual void HandleMessage(Message msg)
			{
			}
		}

		[Token(Token = "0x20003F8")]
		private sealed class RequestCallback<T> : RequestCallback
		{
			[Token(Token = "0x4001406")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Message<T>.Callback callback;

			[Token(Token = "0x60018C4")]
			public RequestCallback(Message<T>.Callback callback)
			{
			}

			[Token(Token = "0x60018C5")]
			public override void HandleMessage(Message msg)
			{
			}
		}

		[Token(Token = "0x4000E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<ulong, RequestCallback> requestIDsToCallbacks;

		[Token(Token = "0x4000E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<Message.MessageType, RequestCallback> notificationCallbacks;

		[Token(Token = "0x4000E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static bool hasRegisteredRoomInviteNotificationHandler;

		[Token(Token = "0x4000E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static List<Message> pendingRoomInviteNotifications;

		[Token(Token = "0x6001129")]
		internal static void SetNotificationCallback<T>(Message.MessageType type, Message<T>.Callback callback)
		{
		}

		[Token(Token = "0x600112A")]
		[Address(RVA = "0xBAB274", Offset = "0xBAB274", VA = "0xBAB274")]
		internal static void SetNotificationCallback(Message.MessageType type, Message.Callback callback)
		{
		}

		[Token(Token = "0x600112B")]
		internal static void OnComplete<T>(Request<T> request, Message<T>.Callback callback)
		{
		}

		[Token(Token = "0x600112C")]
		[Address(RVA = "0xBAB398", Offset = "0xBAB398", VA = "0xBAB398")]
		internal static void OnComplete(Request request, Message.Callback callback)
		{
		}

		[Token(Token = "0x600112D")]
		[Address(RVA = "0xBAB458", Offset = "0xBAB458", VA = "0xBAB458")]
		internal static void RunCallbacks()
		{
		}

		[Token(Token = "0x600112E")]
		[Address(RVA = "0xBAB764", Offset = "0xBAB764", VA = "0xBAB764")]
		internal static void RunLimitedCallbacks(uint limit)
		{
		}

		[Token(Token = "0x600112F")]
		[Address(RVA = "0xBAB7FC", Offset = "0xBAB7FC", VA = "0xBAB7FC")]
		private static void FlushRoomInviteNotificationQueue()
		{
		}

		[Token(Token = "0x6001130")]
		[Address(RVA = "0xBAB5C8", Offset = "0xBAB5C8", VA = "0xBAB5C8")]
		private static void HandleMessage(Message msg)
		{
		}
	}
	[Token(Token = "0x200023C")]
	public class CallbackRunner : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IsPersistantBetweenSceneLoads;

		[PreserveSig]
		[Token(Token = "0x6001132")]
		[Address(RVA = "0xBABE1C", Offset = "0xBABE1C", VA = "0xBABE1C")]
		private static extern void ovr_UnityResetTestPlatform();

		[Token(Token = "0x6001133")]
		[Address(RVA = "0xBABE8C", Offset = "0xBABE8C", VA = "0xBABE8C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001134")]
		[Address(RVA = "0xBABF88", Offset = "0xBABF88", VA = "0xBABF88")]
		private void Update()
		{
		}

		[Token(Token = "0x6001135")]
		[Address(RVA = "0xBAC014", Offset = "0xBAC014", VA = "0xBAC014")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001136")]
		[Address(RVA = "0xBAC018", Offset = "0xBAC018", VA = "0xBAC018")]
		public CallbackRunner()
		{
		}
	}
	[Token(Token = "0x200023D")]
	public enum CloudStorageDataStatus
	{
		[Token(Token = "0x4000E36")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E6790", Offset = "0x6E6790")]
		Unknown,
		[Token(Token = "0x4000E37")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E67C8", Offset = "0x6E67C8")]
		InSync,
		[Token(Token = "0x4000E38")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E6800", Offset = "0x6E6800")]
		NeedsDownload,
		[Token(Token = "0x4000E39")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E6838", Offset = "0x6E6838")]
		RemoteDownloading,
		[Token(Token = "0x4000E3A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E6870", Offset = "0x6E6870")]
		NeedsUpload,
		[Token(Token = "0x4000E3B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E68A8", Offset = "0x6E68A8")]
		LocalUploading,
		[Token(Token = "0x4000E3C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E68E0", Offset = "0x6E68E0")]
		InConflict
	}
	[Token(Token = "0x200023E")]
	public enum CloudStorageUpdateStatus
	{
		[Token(Token = "0x4000E3E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E6918", Offset = "0x6E6918")]
		Unknown,
		[Token(Token = "0x4000E3F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E6950", Offset = "0x6E6950")]
		Ok,
		[Token(Token = "0x4000E40")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E6988", Offset = "0x6E6988")]
		BetterVersionStored,
		[Token(Token = "0x4000E41")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E69C0", Offset = "0x6E69C0")]
		ManualMergeRequired
	}
	[Token(Token = "0x200023F")]
	public interface IMicrophone
	{
		[Token(Token = "0x6001137")]
		void Start();

		[Token(Token = "0x6001138")]
		void Stop();

		[Token(Token = "0x6001139")]
		float[] Update();
	}
	[Token(Token = "0x2000240")]
	public interface IVoipPCMSource
	{
		[Token(Token = "0x600113A")]
		int GetPCM(float[] dest, int length);

		[Token(Token = "0x600113B")]
		void SetSenderID(ulong senderID);

		[Token(Token = "0x600113C")]
		void Update();

		[Token(Token = "0x600113D")]
		int PeekSizeElements();
	}
	[Token(Token = "0x2000241")]
	public enum KeyValuePairType
	{
		[Token(Token = "0x4000E43")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E69F8", Offset = "0x6E69F8")]
		String,
		[Token(Token = "0x4000E44")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E6A30", Offset = "0x6E6A30")]
		Int,
		[Token(Token = "0x4000E45")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E6A68", Offset = "0x6E6A68")]
		Double,
		[Token(Token = "0x4000E46")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E6AA0", Offset = "0x6E6AA0")]
		Unknown
	}
	[Token(Token = "0x2000242")]
	public enum LaunchType
	{
		[Token(Token = "0x4000E48")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E6AD8", Offset = "0x6E6AD8")]
		Unknown,
		[Token(Token = "0x4000E49")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E6B10", Offset = "0x6E6B10")]
		Normal,
		[Token(Token = "0x4000E4A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E6B48", Offset = "0x6E6B48")]
		Invite,
		[Token(Token = "0x4000E4B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E6B80", Offset = "0x6E6B80")]
		Coordinated,
		[Token(Token = "0x4000E4C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E6BB8", Offset = "0x6E6BB8")]
		Deeplink
	}
	[Token(Token = "0x2000243")]
	public enum LeaderboardFilterType
	{
		[Token(Token = "0x4000E4E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E6BF0", Offset = "0x6E6BF0")]
		None,
		[Token(Token = "0x4000E4F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E6C28", Offset = "0x6E6C28")]
		Friends,
		[Token(Token = "0x4000E50")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E6C60", Offset = "0x6E6C60")]
		Unknown
	}
	[Token(Token = "0x2000244")]
	public enum LeaderboardStartAt
	{
		[Token(Token = "0x4000E52")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E6C98", Offset = "0x6E6C98")]
		Top,
		[Token(Token = "0x4000E53")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E6CD0", Offset = "0x6E6CD0")]
		CenteredOnViewer,
		[Token(Token = "0x4000E54")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E6D08", Offset = "0x6E6D08")]
		CenteredOnViewerOrTop,
		[Token(Token = "0x4000E55")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E6D40", Offset = "0x6E6D40")]
		Unknown
	}
	[Token(Token = "0x2000245")]
	public enum LivestreamingAudience
	{
		[Token(Token = "0x4000E57")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E6D78", Offset = "0x6E6D78")]
		Unknown,
		[Token(Token = "0x4000E58")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E6DB0", Offset = "0x6E6DB0")]
		Public,
		[Token(Token = "0x4000E59")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E6DE8", Offset = "0x6E6DE8")]
		Friends,
		[Token(Token = "0x4000E5A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E6E20", Offset = "0x6E6E20")]
		OnlyMe
	}
	[Token(Token = "0x2000246")]
	public enum LivestreamingMicrophoneStatus
	{
		[Token(Token = "0x4000E5C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E6E58", Offset = "0x6E6E58")]
		Unknown,
		[Token(Token = "0x4000E5D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E6E90", Offset = "0x6E6E90")]
		MicrophoneOn,
		[Token(Token = "0x4000E5E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E6EC8", Offset = "0x6E6EC8")]
		MicrophoneOff
	}
	[Token(Token = "0x2000247")]
	public enum LivestreamingStartStatus
	{
		[Token(Token = "0x4000E60")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E6F00", Offset = "0x6E6F00")]
		Success = 1,
		[Token(Token = "0x4000E61")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E6F38", Offset = "0x6E6F38")]
		Unknown = 0,
		[Token(Token = "0x4000E62")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E6F70", Offset = "0x6E6F70")]
		NoPackageSet = -1,
		[Token(Token = "0x4000E63")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E6FA8", Offset = "0x6E6FA8")]
		NoFbConnect = -2,
		[Token(Token = "0x4000E64")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E6FE0", Offset = "0x6E6FE0")]
		NoSessionId = -3,
		[Token(Token = "0x4000E65")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E7018", Offset = "0x6E7018")]
		MissingParameters = -4
	}
	[Token(Token = "0x2000248")]
	public enum MatchmakingCriterionImportance
	{
		[Token(Token = "0x4000E67")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E7050", Offset = "0x6E7050")]
		Required,
		[Token(Token = "0x4000E68")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E7088", Offset = "0x6E7088")]
		High,
		[Token(Token = "0x4000E69")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E70C0", Offset = "0x6E70C0")]
		Medium,
		[Token(Token = "0x4000E6A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E70F8", Offset = "0x6E70F8")]
		Low,
		[Token(Token = "0x4000E6B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E7130", Offset = "0x6E7130")]
		Unknown
	}
	[Token(Token = "0x2000249")]
	public class MatchmakingOptions
	{
		[Token(Token = "0x4000E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x600113E")]
		[Address(RVA = "0xBB033C", Offset = "0xBB033C", VA = "0xBB033C")]
		public MatchmakingOptions()
		{
		}

		[Token(Token = "0x600113F")]
		[Address(RVA = "0xBB03B4", Offset = "0xBB03B4", VA = "0xBB03B4")]
		public void SetCreateRoomDataStore(string key, string value)
		{
		}

		[Token(Token = "0x6001140")]
		[Address(RVA = "0xBB0438", Offset = "0xBB0438", VA = "0xBB0438")]
		public void ClearCreateRoomDataStore()
		{
		}

		[Token(Token = "0x6001141")]
		[Address(RVA = "0xBB04A4", Offset = "0xBB04A4", VA = "0xBB04A4")]
		public void SetCreateRoomJoinPolicy(RoomJoinPolicy value)
		{
		}

		[Token(Token = "0x6001142")]
		[Address(RVA = "0xBB0520", Offset = "0xBB0520", VA = "0xBB0520")]
		public void SetCreateRoomMaxUsers(uint value)
		{
		}

		[Token(Token = "0x6001143")]
		[Address(RVA = "0xBB059C", Offset = "0xBB059C", VA = "0xBB059C")]
		public void AddEnqueueAdditionalUser(ulong userID)
		{
		}

		[Token(Token = "0x6001144")]
		[Address(RVA = "0xBB0618", Offset = "0xBB0618", VA = "0xBB0618")]
		public void ClearEnqueueAdditionalUsers()
		{
		}

		[Token(Token = "0x6001145")]
		[Address(RVA = "0xBB0684", Offset = "0xBB0684", VA = "0xBB0684")]
		public void SetEnqueueDataSettings(string key, int value)
		{
		}

		[Token(Token = "0x6001146")]
		[Address(RVA = "0xBB0708", Offset = "0xBB0708", VA = "0xBB0708")]
		public void SetEnqueueDataSettings(string key, double value)
		{
		}

		[Token(Token = "0x6001147")]
		[Address(RVA = "0xBB0794", Offset = "0xBB0794", VA = "0xBB0794")]
		public void SetEnqueueDataSettings(string key, string value)
		{
		}

		[Token(Token = "0x6001148")]
		[Address(RVA = "0xBB0818", Offset = "0xBB0818", VA = "0xBB0818")]
		public void ClearEnqueueDataSettings()
		{
		}

		[Token(Token = "0x6001149")]
		[Address(RVA = "0xBB0884", Offset = "0xBB0884", VA = "0xBB0884")]
		public void SetEnqueueIsDebug(bool value)
		{
		}

		[Token(Token = "0x600114A")]
		[Address(RVA = "0xBB0900", Offset = "0xBB0900", VA = "0xBB0900")]
		public void SetEnqueueQueryKey(string value)
		{
		}

		[Token(Token = "0x600114B")]
		[Address(RVA = "0xBAF2D0", Offset = "0xBAF2D0", VA = "0xBAF2D0")]
		public static explicit operator IntPtr(MatchmakingOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600114C")]
		[Address(RVA = "0xBB097C", Offset = "0xBB097C", VA = "0xBB097C", Slot = "1")]
		~MatchmakingOptions()
		{
		}
	}
	[Token(Token = "0x200024A")]
	public enum MatchmakingStatApproach
	{
		[Token(Token = "0x4000E6E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E7168", Offset = "0x6E7168")]
		Unknown,
		[Token(Token = "0x4000E6F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E71A0", Offset = "0x6E71A0")]
		Trailing,
		[Token(Token = "0x4000E70")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E71D8", Offset = "0x6E71D8")]
		Swingy
	}
	[Token(Token = "0x200024B")]
	public enum MediaContentType
	{
		[Token(Token = "0x4000E72")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E7210", Offset = "0x6E7210")]
		Unknown,
		[Token(Token = "0x4000E73")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E7248", Offset = "0x6E7248")]
		Photo
	}
	[Token(Token = "0x200024C")]
	public abstract class Message<T> : Message
	{
		[Token(Token = "0x20003F9")]
		public new delegate void Callback(Message<T> message);

		[Token(Token = "0x4000E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T data;

		[Token(Token = "0x1700018D")]
		public T Data
		{
			[Token(Token = "0x600114E")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x600114D")]
		public Message(IntPtr c_message)
		{
		}

		[Token(Token = "0x600114F")]
		protected abstract T GetDataFromMessage(IntPtr c_message);
	}
	[Token(Token = "0x200024D")]
	public class Message
	{
		[Token(Token = "0x20003FA")]
		public delegate void Callback(Message message);

		[Token(Token = "0x20003FB")]
		public enum MessageType : uint
		{
			[Token(Token = "0x4001408")]
			Unknown = 0u,
			[Token(Token = "0x4001409")]
			Achievements_AddCount = 65495601u,
			[Token(Token = "0x400140A")]
			Achievements_AddFields = 346693929u,
			[Token(Token = "0x400140B")]
			Achievements_GetAllDefinitions = 64177549u,
			[Token(Token = "0x400140C")]
			Achievements_GetAllProgress = 1335877149u,
			[Token(Token = "0x400140D")]
			Achievements_GetDefinitionsByName = 1653670332u,
			[Token(Token = "0x400140E")]
			Achievements_GetNextAchievementDefinitionArrayPage = 712888917u,
			[Token(Token = "0x400140F")]
			Achievements_GetNextAchievementProgressArrayPage = 792913703u,
			[Token(Token = "0x4001410")]
			Achievements_GetProgressByName = 354837425u,
			[Token(Token = "0x4001411")]
			Achievements_Unlock = 1497156573u,
			[Token(Token = "0x4001412")]
			ApplicationLifecycle_GetRegisteredPIDs = 82169698u,
			[Token(Token = "0x4001413")]
			ApplicationLifecycle_GetSessionKey = 984570141u,
			[Token(Token = "0x4001414")]
			ApplicationLifecycle_RegisterSessionKey = 1303818232u,
			[Token(Token = "0x4001415")]
			Application_GetVersion = 1751583246u,
			[Token(Token = "0x4001416")]
			Application_LaunchOtherApp = 1424151032u,
			[Token(Token = "0x4001417")]
			AssetFile_Delete = 1834842246u,
			[Token(Token = "0x4001418")]
			AssetFile_DeleteById = 1525206354u,
			[Token(Token = "0x4001419")]
			AssetFile_DeleteByName = 1108001231u,
			[Token(Token = "0x400141A")]
			AssetFile_Download = 289710021u,
			[Token(Token = "0x400141B")]
			AssetFile_DownloadById = 755009938u,
			[Token(Token = "0x400141C")]
			AssetFile_DownloadByName = 1664536314u,
			[Token(Token = "0x400141D")]
			AssetFile_DownloadCancel = 134927303u,
			[Token(Token = "0x400141E")]
			AssetFile_DownloadCancelById = 1365611796u,
			[Token(Token = "0x400141F")]
			AssetFile_DownloadCancelByName = 1147858170u,
			[Token(Token = "0x4001420")]
			AssetFile_GetList = 1258057588u,
			[Token(Token = "0x4001421")]
			AssetFile_Status = 47394656u,
			[Token(Token = "0x4001422")]
			AssetFile_StatusById = 1570069816u,
			[Token(Token = "0x4001423")]
			AssetFile_StatusByName = 1104140880u,
			[Token(Token = "0x4001424")]
			CloudStorage_Delete = 685393261u,
			[Token(Token = "0x4001425")]
			CloudStorage_GetNextCloudStorageMetadataArrayPage = 1544004335u,
			[Token(Token = "0x4001426")]
			CloudStorage_Load = 1082420033u,
			[Token(Token = "0x4001427")]
			CloudStorage_LoadBucketMetadata = 1931977997u,
			[Token(Token = "0x4001428")]
			CloudStorage_LoadConflictMetadata = 1146770162u,
			[Token(Token = "0x4001429")]
			CloudStorage_LoadHandle = 845863478u,
			[Token(Token = "0x400142A")]
			CloudStorage_LoadMetadata = 65446546u,
			[Token(Token = "0x400142B")]
			CloudStorage_ResolveKeepLocal = 811109637u,
			[Token(Token = "0x400142C")]
			CloudStorage_ResolveKeepRemote = 1965400838u,
			[Token(Token = "0x400142D")]
			CloudStorage_Save = 1270570030u,
			[Token(Token = "0x400142E")]
			Entitlement_GetIsViewerEntitled = 409688241u,
			[Token(Token = "0x400142F")]
			IAP_ConsumePurchase = 532378329u,
			[Token(Token = "0x4001430")]
			IAP_GetNextProductArrayPage = 467225263u,
			[Token(Token = "0x4001431")]
			IAP_GetNextPurchaseArrayPage = 1196886677u,
			[Token(Token = "0x4001432")]
			IAP_GetProductsBySKU = 2124073717u,
			[Token(Token = "0x4001433")]
			IAP_GetViewerPurchases = 974095385u,
			[Token(Token = "0x4001434")]
			IAP_LaunchCheckoutFlow = 1067126029u,
			[Token(Token = "0x4001435")]
			LanguagePack_GetCurrent = 529592533u,
			[Token(Token = "0x4001436")]
			LanguagePack_SetCurrent = 1531952096u,
			[Token(Token = "0x4001437")]
			Leaderboard_GetEntries = 1572030284u,
			[Token(Token = "0x4001438")]
			Leaderboard_GetEntriesAfterRank = 406293487u,
			[Token(Token = "0x4001439")]
			Leaderboard_GetNextEntries = 1310751961u,
			[Token(Token = "0x400143A")]
			Leaderboard_GetPreviousEntries = 1224858304u,
			[Token(Token = "0x400143B")]
			Leaderboard_WriteEntry = 293587198u,
			[Token(Token = "0x400143C")]
			Livestreaming_GetStatus = 1218079125u,
			[Token(Token = "0x400143D")]
			Livestreaming_PauseStream = 916223619u,
			[Token(Token = "0x400143E")]
			Livestreaming_ResumeStream = 575827343u,
			[Token(Token = "0x400143F")]
			Matchmaking_Browse = 509948616u,
			[Token(Token = "0x4001440")]
			Matchmaking_Browse2 = 1715641947u,
			[Token(Token = "0x4001441")]
			Matchmaking_Cancel = 543705519u,
			[Token(Token = "0x4001442")]
			Matchmaking_Cancel2 = 285117908u,
			[Token(Token = "0x4001443")]
			Matchmaking_CreateAndEnqueueRoom = 1615617480u,
			[Token(Token = "0x4001444")]
			Matchmaking_CreateAndEnqueueRoom2 = 693889755u,
			[Token(Token = "0x4001445")]
			Matchmaking_CreateRoom = 54203178u,
			[Token(Token = "0x4001446")]
			Matchmaking_CreateRoom2 = 1231922052u,
			[Token(Token = "0x4001447")]
			Matchmaking_Enqueue = 1086418033u,
			[Token(Token = "0x4001448")]
			Matchmaking_Enqueue2 = 303174325u,
			[Token(Token = "0x4001449")]
			Matchmaking_EnqueueRoom = 1888108644u,
			[Token(Token = "0x400144A")]
			Matchmaking_EnqueueRoom2 = 1428741028u,
			[Token(Token = "0x400144B")]
			Matchmaking_GetAdminSnapshot = 1008820116u,
			[Token(Token = "0x400144C")]
			Matchmaking_GetStats = 1123849272u,
			[Token(Token = "0x400144D")]
			Matchmaking_JoinRoom = 1295177725u,
			[Token(Token = "0x400144E")]
			Matchmaking_ReportResultInsecure = 439800205u,
			[Token(Token = "0x400144F")]
			Matchmaking_StartMatch = 1154746693u,
			[Token(Token = "0x4001450")]
			Media_ShareToFacebook = 14912239u,
			[Token(Token = "0x4001451")]
			Notification_GetNextRoomInviteNotificationArrayPage = 102890359u,
			[Token(Token = "0x4001452")]
			Notification_GetRoomInvites = 1871801234u,
			[Token(Token = "0x4001453")]
			Notification_MarkAsRead = 1903319523u,
			[Token(Token = "0x4001454")]
			Party_GetCurrent = 1200830304u,
			[Token(Token = "0x4001455")]
			Room_CreateAndJoinPrivate = 1977017207u,
			[Token(Token = "0x4001456")]
			Room_CreateAndJoinPrivate2 = 1513775683u,
			[Token(Token = "0x4001457")]
			Room_Get = 1704628152u,
			[Token(Token = "0x4001458")]
			Room_GetCurrent = 161916164u,
			[Token(Token = "0x4001459")]
			Room_GetCurrentForUser = 234887141u,
			[Token(Token = "0x400145A")]
			Room_GetInvitableUsers = 506615698u,
			[Token(Token = "0x400145B")]
			Room_GetInvitableUsers2 = 1330899120u,
			[Token(Token = "0x400145C")]
			Room_GetModeratedRooms = 159645047u,
			[Token(Token = "0x400145D")]
			Room_GetNextRoomArrayPage = 1317239238u,
			[Token(Token = "0x400145E")]
			Room_InviteUser = 1093266451u,
			[Token(Token = "0x400145F")]
			Room_Join = 382373641u,
			[Token(Token = "0x4001460")]
			Room_Join2 = 1303059522u,
			[Token(Token = "0x4001461")]
			Room_KickUser = 1233344310u,
			[Token(Token = "0x4001462")]
			Room_LaunchInvitableUserFlow = 843047539u,
			[Token(Token = "0x4001463")]
			Room_Leave = 1916281973u,
			[Token(Token = "0x4001464")]
			Room_SetDescription = 809796911u,
			[Token(Token = "0x4001465")]
			Room_UpdateDataStore = 40779816u,
			[Token(Token = "0x4001466")]
			Room_UpdateMembershipLockStatus = 923514796u,
			[Token(Token = "0x4001467")]
			Room_UpdateOwner = 850803997u,
			[Token(Token = "0x4001468")]
			Room_UpdatePrivateRoomJoinPolicy = 289473179u,
			[Token(Token = "0x4001469")]
			User_Get = 1808768583u,
			[Token(Token = "0x400146A")]
			User_GetAccessToken = 111696574u,
			[Token(Token = "0x400146B")]
			User_GetLoggedInUser = 1131361373u,
			[Token(Token = "0x400146C")]
			User_GetLoggedInUserFriends = 1484532365u,
			[Token(Token = "0x400146D")]
			User_GetLoggedInUserFriendsAndRooms = 1585908615u,
			[Token(Token = "0x400146E")]
			User_GetLoggedInUserRecentlyMetUsersAndRooms = 694139440u,
			[Token(Token = "0x400146F")]
			User_GetNextUserAndRoomArrayPage = 2143146719u,
			[Token(Token = "0x4001470")]
			User_GetNextUserArrayPage = 645723971u,
			[Token(Token = "0x4001471")]
			User_GetOrgScopedID = 418426907u,
			[Token(Token = "0x4001472")]
			User_GetSdkAccounts = 1733454467u,
			[Token(Token = "0x4001473")]
			User_GetUserProof = 578880643u,
			[Token(Token = "0x4001474")]
			User_LaunchFriendRequestFlow = 151303576u,
			[Token(Token = "0x4001475")]
			User_LaunchProfile = 171537047u,
			[Token(Token = "0x4001476")]
			Voip_SetSystemVoipSuppressed = 1161808298u,
			[Token(Token = "0x4001477")]
			Notification_ApplicationLifecycle_LaunchIntentChanged = 78859427u,
			[Token(Token = "0x4001478")]
			Notification_AssetFile_DownloadUpdate = 803015885u,
			[Token(Token = "0x4001479")]
			Notification_Cal_FinalizeApplication = 1963741337u,
			[Token(Token = "0x400147A")]
			Notification_Cal_ProposeApplication = 779375093u,
			[Token(Token = "0x400147B")]
			Notification_HTTP_Transfer = 2111073839u,
			[Token(Token = "0x400147C")]
			Notification_Livestreaming_StatusChange = 575101294u,
			[Token(Token = "0x400147D")]
			Notification_Matchmaking_MatchFound = 197393623u,
			[Token(Token = "0x400147E")]
			Notification_Networking_ConnectionStateChange = 1577243802u,
			[Token(Token = "0x400147F")]
			Notification_Networking_PeerConnectRequest = 1295114959u,
			[Token(Token = "0x4001480")]
			Notification_Networking_PingResult = 1360343058u,
			[Token(Token = "0x4001481")]
			Notification_Party_PartyUpdate = 487688882u,
			[Token(Token = "0x4001482")]
			Notification_Room_InviteAccepted = 1829794225u,
			[Token(Token = "0x4001483")]
			Notification_Room_InviteReceived = 1783209300u,
			[Token(Token = "0x4001484")]
			Notification_Room_RoomUpdate = 1626094639u,
			[Token(Token = "0x4001485")]
			Notification_Voip_ConnectRequest = 908343318u,
			[Token(Token = "0x4001486")]
			Notification_Voip_StateChange = 888120928u,
			[Token(Token = "0x4001487")]
			Notification_Voip_SystemVoipState = 1490179237u,
			[Token(Token = "0x4001488")]
			Platform_InitializeWithAccessToken = 896085803u,
			[Token(Token = "0x4001489")]
			Platform_InitializeStandaloneOculus = 1375260172u,
			[Token(Token = "0x400148A")]
			Platform_InitializeAndroidAsynchronous = 450037684u,
			[Token(Token = "0x400148B")]
			Platform_InitializeWindowsAsynchronous = 1839708815u
		}

		[Token(Token = "0x20003FC")]
		internal delegate Message ExtraMessageTypesHandler(IntPtr messageHandle, MessageType message_type);

		[Token(Token = "0x4000E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private MessageType type;

		[Token(Token = "0x4000E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ulong requestID;

		[Token(Token = "0x4000E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Error error;

		[Token(Token = "0x4000E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E7280", Offset = "0x6E7280")]
		private static ExtraMessageTypesHandler <HandleExtraMessageTypes>k__BackingField;

		[Token(Token = "0x1700018E")]
		public MessageType Type
		{
			[Token(Token = "0x6001152")]
			[Address(RVA = "0xBB0DE8", Offset = "0xBB0DE8", VA = "0xBB0DE8")]
			get
			{
				return default(MessageType);
			}
		}

		[Token(Token = "0x1700018F")]
		public bool IsError
		{
			[Token(Token = "0x6001153")]
			[Address(RVA = "0xBB0DF0", Offset = "0xBB0DF0", VA = "0xBB0DF0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000190")]
		public ulong RequestID
		{
			[Token(Token = "0x6001154")]
			[Address(RVA = "0xBB0E00", Offset = "0xBB0E00", VA = "0xBB0E00")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000191")]
		internal static ExtraMessageTypesHandler HandleExtraMessageTypes
		{
			[Token(Token = "0x6001197")]
			[Address(RVA = "0xBB3EE0", Offset = "0xBB3EE0", VA = "0xBB3EE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ED80C", Offset = "0x6ED80C")]
			private get
			{
				return null;
			}
			[Token(Token = "0x6001196")]
			[Address(RVA = "0xBB3E8C", Offset = "0xBB3E8C", VA = "0xBB3E8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ED7FC", Offset = "0x6ED7FC")]
			set
			{
			}
		}

		[Token(Token = "0x6001150")]
		[Address(RVA = "0xBB0B68", Offset = "0xBB0B68", VA = "0xBB0B68")]
		public Message(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001151")]
		[Address(RVA = "0xBB0DE0", Offset = "0xBB0DE0", VA = "0xBB0DE0", Slot = "1")]
		~Message()
		{
		}

		[Token(Token = "0x6001155")]
		[Address(RVA = "0xBB0E08", Offset = "0xBB0E08", VA = "0xBB0E08", Slot = "4")]
		public virtual Error GetError()
		{
			return null;
		}

		[Token(Token = "0x6001156")]
		[Address(RVA = "0xBB0E10", Offset = "0xBB0E10", VA = "0xBB0E10", Slot = "5")]
		public virtual PingResult GetPingResult()
		{
			return null;
		}

		[Token(Token = "0x6001157")]
		[Address(RVA = "0xBB0E18", Offset = "0xBB0E18", VA = "0xBB0E18", Slot = "6")]
		public virtual Oculus.Platform.Models.NetworkingPeer GetNetworkingPeer()
		{
			return null;
		}

		[Token(Token = "0x6001158")]
		[Address(RVA = "0xBB0E20", Offset = "0xBB0E20", VA = "0xBB0E20", Slot = "7")]
		public virtual HttpTransferUpdate GetHttpTransferUpdate()
		{
			return null;
		}

		[Token(Token = "0x6001159")]
		[Address(RVA = "0xBB0E28", Offset = "0xBB0E28", VA = "0xBB0E28", Slot = "8")]
		public virtual PlatformInitialize GetPlatformInitialize()
		{
			return null;
		}

		[Token(Token = "0x600115A")]
		[Address(RVA = "0xBB0E30", Offset = "0xBB0E30", VA = "0xBB0E30", Slot = "9")]
		public virtual AbuseReportRecording GetAbuseReportRecording()
		{
			return null;
		}

		[Token(Token = "0x600115B")]
		[Address(RVA = "0xBB0E38", Offset = "0xBB0E38", VA = "0xBB0E38", Slot = "10")]
		public virtual AchievementDefinitionList GetAchievementDefinitions()
		{
			return null;
		}

		[Token(Token = "0x600115C")]
		[Address(RVA = "0xBB0E40", Offset = "0xBB0E40", VA = "0xBB0E40", Slot = "11")]
		public virtual AchievementProgressList GetAchievementProgressList()
		{
			return null;
		}

		[Token(Token = "0x600115D")]
		[Address(RVA = "0xBB0E48", Offset = "0xBB0E48", VA = "0xBB0E48", Slot = "12")]
		public virtual AchievementUpdate GetAchievementUpdate()
		{
			return null;
		}

		[Token(Token = "0x600115E")]
		[Address(RVA = "0xBB0E50", Offset = "0xBB0E50", VA = "0xBB0E50", Slot = "13")]
		public virtual ApplicationVersion GetApplicationVersion()
		{
			return null;
		}

		[Token(Token = "0x600115F")]
		[Address(RVA = "0xBB0E58", Offset = "0xBB0E58", VA = "0xBB0E58", Slot = "14")]
		public virtual AssetDetails GetAssetDetails()
		{
			return null;
		}

		[Token(Token = "0x6001160")]
		[Address(RVA = "0xBB0E60", Offset = "0xBB0E60", VA = "0xBB0E60", Slot = "15")]
		public virtual AssetDetailsList GetAssetDetailsList()
		{
			return null;
		}

		[Token(Token = "0x6001161")]
		[Address(RVA = "0xBB0E68", Offset = "0xBB0E68", VA = "0xBB0E68", Slot = "16")]
		public virtual AssetFileDeleteResult GetAssetFileDeleteResult()
		{
			return null;
		}

		[Token(Token = "0x6001162")]
		[Address(RVA = "0xBB0E70", Offset = "0xBB0E70", VA = "0xBB0E70", Slot = "17")]
		public virtual AssetFileDownloadCancelResult GetAssetFileDownloadCancelResult()
		{
			return null;
		}

		[Token(Token = "0x6001163")]
		[Address(RVA = "0xBB0E78", Offset = "0xBB0E78", VA = "0xBB0E78", Slot = "18")]
		public virtual AssetFileDownloadResult GetAssetFileDownloadResult()
		{
			return null;
		}

		[Token(Token = "0x6001164")]
		[Address(RVA = "0xBB0E80", Offset = "0xBB0E80", VA = "0xBB0E80", Slot = "19")]
		public virtual AssetFileDownloadUpdate GetAssetFileDownloadUpdate()
		{
			return null;
		}

		[Token(Token = "0x6001165")]
		[Address(RVA = "0xBB0E88", Offset = "0xBB0E88", VA = "0xBB0E88", Slot = "20")]
		public virtual CalApplicationFinalized GetCalApplicationFinalized()
		{
			return null;
		}

		[Token(Token = "0x6001166")]
		[Address(RVA = "0xBB0E90", Offset = "0xBB0E90", VA = "0xBB0E90", Slot = "21")]
		public virtual CalApplicationProposed GetCalApplicationProposed()
		{
			return null;
		}

		[Token(Token = "0x6001167")]
		[Address(RVA = "0xBB0E98", Offset = "0xBB0E98", VA = "0xBB0E98", Slot = "22")]
		public virtual CalApplicationSuggestionList GetCalApplicationSuggestionList()
		{
			return null;
		}

		[Token(Token = "0x6001168")]
		[Address(RVA = "0xBB0EA0", Offset = "0xBB0EA0", VA = "0xBB0EA0", Slot = "23")]
		public virtual CloudStorageConflictMetadata GetCloudStorageConflictMetadata()
		{
			return null;
		}

		[Token(Token = "0x6001169")]
		[Address(RVA = "0xBB0EA8", Offset = "0xBB0EA8", VA = "0xBB0EA8", Slot = "24")]
		public virtual CloudStorageData GetCloudStorageData()
		{
			return null;
		}

		[Token(Token = "0x600116A")]
		[Address(RVA = "0xBB0EB0", Offset = "0xBB0EB0", VA = "0xBB0EB0", Slot = "25")]
		public virtual CloudStorageMetadata GetCloudStorageMetadata()
		{
			return null;
		}

		[Token(Token = "0x600116B")]
		[Address(RVA = "0xBB0EB8", Offset = "0xBB0EB8", VA = "0xBB0EB8", Slot = "26")]
		public virtual CloudStorageMetadataList GetCloudStorageMetadataList()
		{
			return null;
		}

		[Token(Token = "0x600116C")]
		[Address(RVA = "0xBB0EC0", Offset = "0xBB0EC0", VA = "0xBB0EC0", Slot = "27")]
		public virtual CloudStorageUpdateResponse GetCloudStorageUpdateResponse()
		{
			return null;
		}

		[Token(Token = "0x600116D")]
		[Address(RVA = "0xBB0EC8", Offset = "0xBB0EC8", VA = "0xBB0EC8", Slot = "28")]
		public virtual InstalledApplicationList GetInstalledApplicationList()
		{
			return null;
		}

		[Token(Token = "0x600116E")]
		[Address(RVA = "0xBB0ED0", Offset = "0xBB0ED0", VA = "0xBB0ED0", Slot = "29")]
		public virtual LaunchBlockFlowResult GetLaunchBlockFlowResult()
		{
			return null;
		}

		[Token(Token = "0x600116F")]
		[Address(RVA = "0xBB0ED8", Offset = "0xBB0ED8", VA = "0xBB0ED8", Slot = "30")]
		public virtual LaunchFriendRequestFlowResult GetLaunchFriendRequestFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6001170")]
		[Address(RVA = "0xBB0EE0", Offset = "0xBB0EE0", VA = "0xBB0EE0", Slot = "31")]
		public virtual LaunchReportFlowResult GetLaunchReportFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6001171")]
		[Address(RVA = "0xBB0EE8", Offset = "0xBB0EE8", VA = "0xBB0EE8", Slot = "32")]
		public virtual LaunchUnblockFlowResult GetLaunchUnblockFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6001172")]
		[Address(RVA = "0xBB0EF0", Offset = "0xBB0EF0", VA = "0xBB0EF0", Slot = "33")]
		public virtual bool GetLeaderboardDidUpdate()
		{
			return default(bool);
		}

		[Token(Token = "0x6001173")]
		[Address(RVA = "0xBB0EF8", Offset = "0xBB0EF8", VA = "0xBB0EF8", Slot = "34")]
		public virtual LeaderboardEntryList GetLeaderboardEntryList()
		{
			return null;
		}

		[Token(Token = "0x6001174")]
		[Address(RVA = "0xBB0F00", Offset = "0xBB0F00", VA = "0xBB0F00", Slot = "35")]
		public virtual LinkedAccountList GetLinkedAccountList()
		{
			return null;
		}

		[Token(Token = "0x6001175")]
		[Address(RVA = "0xBB0F08", Offset = "0xBB0F08", VA = "0xBB0F08", Slot = "36")]
		public virtual LivestreamingApplicationStatus GetLivestreamingApplicationStatus()
		{
			return null;
		}

		[Token(Token = "0x6001176")]
		[Address(RVA = "0xBB0F10", Offset = "0xBB0F10", VA = "0xBB0F10", Slot = "37")]
		public virtual LivestreamingStartResult GetLivestreamingStartResult()
		{
			return null;
		}

		[Token(Token = "0x6001177")]
		[Address(RVA = "0xBB0F18", Offset = "0xBB0F18", VA = "0xBB0F18", Slot = "38")]
		public virtual LivestreamingStatus GetLivestreamingStatus()
		{
			return null;
		}

		[Token(Token = "0x6001178")]
		[Address(RVA = "0xBB0F20", Offset = "0xBB0F20", VA = "0xBB0F20", Slot = "39")]
		public virtual LivestreamingVideoStats GetLivestreamingVideoStats()
		{
			return null;
		}

		[Token(Token = "0x6001179")]
		[Address(RVA = "0xBB0F28", Offset = "0xBB0F28", VA = "0xBB0F28", Slot = "40")]
		public virtual MatchmakingAdminSnapshot GetMatchmakingAdminSnapshot()
		{
			return null;
		}

		[Token(Token = "0x600117A")]
		[Address(RVA = "0xBB0F30", Offset = "0xBB0F30", VA = "0xBB0F30", Slot = "41")]
		public virtual MatchmakingBrowseResult GetMatchmakingBrowseResult()
		{
			return null;
		}

		[Token(Token = "0x600117B")]
		[Address(RVA = "0xBB0F38", Offset = "0xBB0F38", VA = "0xBB0F38", Slot = "42")]
		public virtual MatchmakingEnqueueResult GetMatchmakingEnqueueResult()
		{
			return null;
		}

		[Token(Token = "0x600117C")]
		[Address(RVA = "0xBB0F40", Offset = "0xBB0F40", VA = "0xBB0F40", Slot = "43")]
		public virtual MatchmakingEnqueueResultAndRoom GetMatchmakingEnqueueResultAndRoom()
		{
			return null;
		}

		[Token(Token = "0x600117D")]
		[Address(RVA = "0xBB0F48", Offset = "0xBB0F48", VA = "0xBB0F48", Slot = "44")]
		public virtual MatchmakingStats GetMatchmakingStats()
		{
			return null;
		}

		[Token(Token = "0x600117E")]
		[Address(RVA = "0xBB0F50", Offset = "0xBB0F50", VA = "0xBB0F50", Slot = "45")]
		public virtual OrgScopedID GetOrgScopedID()
		{
			return null;
		}

		[Token(Token = "0x600117F")]
		[Address(RVA = "0xBB0F58", Offset = "0xBB0F58", VA = "0xBB0F58", Slot = "46")]
		public virtual Party GetParty()
		{
			return null;
		}

		[Token(Token = "0x6001180")]
		[Address(RVA = "0xBB0F60", Offset = "0xBB0F60", VA = "0xBB0F60", Slot = "47")]
		public virtual PartyID GetPartyID()
		{
			return null;
		}

		[Token(Token = "0x6001181")]
		[Address(RVA = "0xBB0F68", Offset = "0xBB0F68", VA = "0xBB0F68", Slot = "48")]
		public virtual PartyUpdateNotification GetPartyUpdateNotification()
		{
			return null;
		}

		[Token(Token = "0x6001182")]
		[Address(RVA = "0xBB0F70", Offset = "0xBB0F70", VA = "0xBB0F70", Slot = "49")]
		public virtual PidList GetPidList()
		{
			return null;
		}

		[Token(Token = "0x6001183")]
		[Address(RVA = "0xBB0F78", Offset = "0xBB0F78", VA = "0xBB0F78", Slot = "50")]
		public virtual ProductList GetProductList()
		{
			return null;
		}

		[Token(Token = "0x6001184")]
		[Address(RVA = "0xBB0F80", Offset = "0xBB0F80", VA = "0xBB0F80", Slot = "51")]
		public virtual Purchase GetPurchase()
		{
			return null;
		}

		[Token(Token = "0x6001185")]
		[Address(RVA = "0xBB0F88", Offset = "0xBB0F88", VA = "0xBB0F88", Slot = "52")]
		public virtual PurchaseList GetPurchaseList()
		{
			return null;
		}

		[Token(Token = "0x6001186")]
		[Address(RVA = "0xBB0F90", Offset = "0xBB0F90", VA = "0xBB0F90", Slot = "53")]
		public virtual Oculus.Platform.Models.Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x6001187")]
		[Address(RVA = "0xBB0F98", Offset = "0xBB0F98", VA = "0xBB0F98", Slot = "54")]
		public virtual RoomInviteNotification GetRoomInviteNotification()
		{
			return null;
		}

		[Token(Token = "0x6001188")]
		[Address(RVA = "0xBB0FA0", Offset = "0xBB0FA0", VA = "0xBB0FA0", Slot = "55")]
		public virtual RoomInviteNotificationList GetRoomInviteNotificationList()
		{
			return null;
		}

		[Token(Token = "0x6001189")]
		[Address(RVA = "0xBB0FA8", Offset = "0xBB0FA8", VA = "0xBB0FA8", Slot = "56")]
		public virtual RoomList GetRoomList()
		{
			return null;
		}

		[Token(Token = "0x600118A")]
		[Address(RVA = "0xBB0FB0", Offset = "0xBB0FB0", VA = "0xBB0FB0", Slot = "57")]
		public virtual SdkAccountList GetSdkAccountList()
		{
			return null;
		}

		[Token(Token = "0x600118B")]
		[Address(RVA = "0xBB0FB8", Offset = "0xBB0FB8", VA = "0xBB0FB8", Slot = "58")]
		public virtual ShareMediaResult GetShareMediaResult()
		{
			return null;
		}

		[Token(Token = "0x600118C")]
		[Address(RVA = "0xBB0FC0", Offset = "0xBB0FC0", VA = "0xBB0FC0", Slot = "59")]
		public virtual string GetString()
		{
			return null;
		}

		[Token(Token = "0x600118D")]
		[Address(RVA = "0xBB0FC8", Offset = "0xBB0FC8", VA = "0xBB0FC8", Slot = "60")]
		public virtual SystemPermission GetSystemPermission()
		{
			return null;
		}

		[Token(Token = "0x600118E")]
		[Address(RVA = "0xBB0FD0", Offset = "0xBB0FD0", VA = "0xBB0FD0", Slot = "61")]
		public virtual SystemVoipState GetSystemVoipState()
		{
			return null;
		}

		[Token(Token = "0x600118F")]
		[Address(RVA = "0xBB0FD8", Offset = "0xBB0FD8", VA = "0xBB0FD8", Slot = "62")]
		public virtual User GetUser()
		{
			return null;
		}

		[Token(Token = "0x6001190")]
		[Address(RVA = "0xBB0FE0", Offset = "0xBB0FE0", VA = "0xBB0FE0", Slot = "63")]
		public virtual UserAndRoomList GetUserAndRoomList()
		{
			return null;
		}

		[Token(Token = "0x6001191")]
		[Address(RVA = "0xBB0FE8", Offset = "0xBB0FE8", VA = "0xBB0FE8", Slot = "64")]
		public virtual UserList GetUserList()
		{
			return null;
		}

		[Token(Token = "0x6001192")]
		[Address(RVA = "0xBB0FF0", Offset = "0xBB0FF0", VA = "0xBB0FF0", Slot = "65")]
		public virtual UserProof GetUserProof()
		{
			return null;
		}

		[Token(Token = "0x6001193")]
		[Address(RVA = "0xBB0FF8", Offset = "0xBB0FF8", VA = "0xBB0FF8", Slot = "66")]
		public virtual UserReportID GetUserReportID()
		{
			return null;
		}

		[Token(Token = "0x6001194")]
		[Address(RVA = "0xBB1000", Offset = "0xBB1000", VA = "0xBB1000")]
		internal static Message ParseMessageHandle(IntPtr messageHandle)
		{
			return null;
		}

		[Token(Token = "0x6001195")]
		[Address(RVA = "0xBAB4D4", Offset = "0xBAB4D4", VA = "0xBAB4D4")]
		public static Message PopMessage()
		{
			return null;
		}
	}
	[Token(Token = "0x200024E")]
	public class MessageWithAbuseReportRecording : Message<AbuseReportRecording>
	{
		[Token(Token = "0x6001198")]
		[Address(RVA = "0xBB42BC", Offset = "0xBB42BC", VA = "0xBB42BC")]
		public MessageWithAbuseReportRecording(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001199")]
		[Address(RVA = "0xBB431C", Offset = "0xBB431C", VA = "0xBB431C", Slot = "9")]
		public override AbuseReportRecording GetAbuseReportRecording()
		{
			return null;
		}

		[Token(Token = "0x600119A")]
		[Address(RVA = "0xBB4360", Offset = "0xBB4360", VA = "0xBB4360", Slot = "67")]
		protected override AbuseReportRecording GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200024F")]
	public class MessageWithAchievementDefinitions : Message<AchievementDefinitionList>
	{
		[Token(Token = "0x600119B")]
		[Address(RVA = "0xBB245C", Offset = "0xBB245C", VA = "0xBB245C")]
		public MessageWithAchievementDefinitions(IntPtr c_message)
		{
		}

		[Token(Token = "0x600119C")]
		[Address(RVA = "0xBB4484", Offset = "0xBB4484", VA = "0xBB4484", Slot = "10")]
		public override AchievementDefinitionList GetAchievementDefinitions()
		{
			return null;
		}

		[Token(Token = "0x600119D")]
		[Address(RVA = "0xBB44C8", Offset = "0xBB44C8", VA = "0xBB44C8", Slot = "67")]
		protected override AchievementDefinitionList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000250")]
	public class MessageWithAchievementProgressList : Message<AchievementProgressList>
	{
		[Token(Token = "0x600119E")]
		[Address(RVA = "0xBB24BC", Offset = "0xBB24BC", VA = "0xBB24BC")]
		public MessageWithAchievementProgressList(IntPtr c_message)
		{
		}

		[Token(Token = "0x600119F")]
		[Address(RVA = "0xBB4764", Offset = "0xBB4764", VA = "0xBB4764", Slot = "11")]
		public override AchievementProgressList GetAchievementProgressList()
		{
			return null;
		}

		[Token(Token = "0x60011A0")]
		[Address(RVA = "0xBB47A8", Offset = "0xBB47A8", VA = "0xBB47A8", Slot = "67")]
		protected override AchievementProgressList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000251")]
	public class MessageWithAchievementUpdate : Message<AchievementUpdate>
	{
		[Token(Token = "0x60011A1")]
		[Address(RVA = "0xBB251C", Offset = "0xBB251C", VA = "0xBB251C")]
		public MessageWithAchievementUpdate(IntPtr c_message)
		{
		}

		[Token(Token = "0x60011A2")]
		[Address(RVA = "0xBB4A44", Offset = "0xBB4A44", VA = "0xBB4A44", Slot = "12")]
		public override AchievementUpdate GetAchievementUpdate()
		{
			return null;
		}

		[Token(Token = "0x60011A3")]
		[Address(RVA = "0xBB4A88", Offset = "0xBB4A88", VA = "0xBB4A88", Slot = "67")]
		protected override AchievementUpdate GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000252")]
	public class MessageWithApplicationVersion : Message<ApplicationVersion>
	{
		[Token(Token = "0x60011A4")]
		[Address(RVA = "0xBB257C", Offset = "0xBB257C", VA = "0xBB257C")]
		public MessageWithApplicationVersion(IntPtr c_message)
		{
		}

		[Token(Token = "0x60011A5")]
		[Address(RVA = "0xBB4BC0", Offset = "0xBB4BC0", VA = "0xBB4BC0", Slot = "13")]
		public override ApplicationVersion GetApplicationVersion()
		{
			return null;
		}

		[Token(Token = "0x60011A6")]
		[Address(RVA = "0xBB4C04", Offset = "0xBB4C04", VA = "0xBB4C04", Slot = "67")]
		protected override ApplicationVersion GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000253")]
	public class MessageWithAssetDetails : Message<AssetDetails>
	{
		[Token(Token = "0x60011A7")]
		[Address(RVA = "0xBB25DC", Offset = "0xBB25DC", VA = "0xBB25DC")]
		public MessageWithAssetDetails(IntPtr c_message)
		{
		}

		[Token(Token = "0x60011A8")]
		[Address(RVA = "0xBB4D58", Offset = "0xBB4D58", VA = "0xBB4D58", Slot = "14")]
		public override AssetDetails GetAssetDetails()
		{
			return null;
		}

		[Token(Token = "0x60011A9")]
		[Address(RVA = "0xBB4D9C", Offset = "0xBB4D9C", VA = "0xBB4D9C", Slot = "67")]
		protected override AssetDetails GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000254")]
	public class MessageWithAssetDetailsList : Message<AssetDetailsList>
	{
		[Token(Token = "0x60011AA")]
		[Address(RVA = "0xBB263C", Offset = "0xBB263C", VA = "0xBB263C")]
		public MessageWithAssetDetailsList(IntPtr c_message)
		{
		}

		[Token(Token = "0x60011AB")]
		[Address(RVA = "0xBB4F58", Offset = "0xBB4F58", VA = "0xBB4F58", Slot = "15")]
		public override AssetDetailsList GetAssetDetailsList()
		{
			return null;
		}

		[Token(Token = "0x60011AC")]
		[Address(RVA = "0xBB4F9C", Offset = "0xBB4F9C", VA = "0xBB4F9C", Slot = "67")]
		protected override AssetDetailsList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000255")]
	public class MessageWithAssetFileDeleteResult : Message<AssetFileDeleteResult>
	{
		[Token(Token = "0x60011AD")]
		[Address(RVA = "0xBB269C", Offset = "0xBB269C", VA = "0xBB269C")]
		public MessageWithAssetFileDeleteResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x60011AE")]
		[Address(RVA = "0xBB5208", Offset = "0xBB5208", VA = "0xBB5208", Slot = "16")]
		public override AssetFileDeleteResult GetAssetFileDeleteResult()
		{
			return null;
		}

		[Token(Token = "0x60011AF")]
		[Address(RVA = "0xBB524C", Offset = "0xBB524C", VA = "0xBB524C", Slot = "67")]
		protected override AssetFileDeleteResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000256")]
	public class MessageWithAssetFileDownloadCancelResult : Message<AssetFileDownloadCancelResult>
	{
		[Token(Token = "0x60011B0")]
		[Address(RVA = "0xBB26FC", Offset = "0xBB26FC", VA = "0xBB26FC")]
		public MessageWithAssetFileDownloadCancelResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x60011B1")]
		[Address(RVA = "0xBB53A4", Offset = "0xBB53A4", VA = "0xBB53A4", Slot = "17")]
		public override AssetFileDownloadCancelResult GetAssetFileDownloadCancelResult()
		{
			return null;
		}

		[Token(Token = "0x60011B2")]
		[Address(RVA = "0xBB53E8", Offset = "0xBB53E8", VA = "0xBB53E8", Slot = "67")]
		protected override AssetFileDownloadCancelResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000257")]
	public class MessageWithAssetFileDownloadResult : Message<AssetFileDownloadResult>
	{
		[Token(Token = "0x60011B3")]
		[Address(RVA = "0xBB275C", Offset = "0xBB275C", VA = "0xBB275C")]
		public MessageWithAssetFileDownloadResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x60011B4")]
		[Address(RVA = "0xBB5540", Offset = "0xBB5540", VA = "0xBB5540", Slot = "18")]
		public override AssetFileDownloadResult GetAssetFileDownloadResult()
		{
			return null;
		}

		[Token(Token = "0x60011B5")]
		[Address(RVA = "0xBB5584", Offset = "0xBB5584", VA = "0xBB5584", Slot = "67")]
		protected override AssetFileDownloadResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000258")]
	public class MessageWithAssetFileDownloadUpdate : Message<AssetFileDownloadUpdate>
	{
		[Token(Token = "0x60011B6")]
		[Address(RVA = "0xBB27BC", Offset = "0xBB27BC", VA = "0xBB27BC")]
		public MessageWithAssetFileDownloadUpdate(IntPtr c_message)
		{
		}

		[Token(Token = "0x60011B7")]
		[Address(RVA = "0xBB56B8", Offset = "0xBB56B8", VA = "0xBB56B8", Slot = "19")]
		public override AssetFileDownloadUpdate GetAssetFileDownloadUpdate()
		{
			return null;
		}

		[Token(Token = "0x60011B8")]
		[Address(RVA = "0xBB56FC", Offset = "0xBB56FC", VA = "0xBB56FC", Slot = "67")]
		protected override AssetFileDownloadUpdate GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000259")]
	public class MessageWithCalApplicationFinalized : Message<CalApplicationFinalized>
	{
		[Token(Token = "0x60011B9")]
		[Address(RVA = "0xBB281C", Offset = "0xBB281C", VA = "0xBB281C")]
		public MessageWithCalApplicationFinalized(IntPtr c_message)
		{
		}

		[Token(Token = "0x60011BA")]
		[Address(RVA = "0xBB5864", Offset = "0xBB5864", VA = "0xBB5864", Slot = "20")]
		public override CalApplicationFinalized GetCalApplicationFinalized()
		{
			return null;
		}

		[Token(Token = "0x60011BB")]
		[Address(RVA = "0xBB58A8", Offset = "0xBB58A8", VA = "0xBB58A8", Slot = "67")]
		protected override CalApplicationFinalized GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200025A")]
	public class MessageWithCalApplicationProposed : Message<CalApplicationProposed>
	{
		[Token(Token = "0x60011BC")]
		[Address(RVA = "0xBB287C", Offset = "0xBB287C", VA = "0xBB287C")]
		public MessageWithCalApplicationProposed(IntPtr c_message)
		{
		}

		[Token(Token = "0x60011BD")]
		[Address(RVA = "0xBB59EC", Offset = "0xBB59EC", VA = "0xBB59EC", Slot = "21")]
		public override CalApplicationProposed GetCalApplicationProposed()
		{
			return null;
		}

		[Token(Token = "0x60011BE")]
		[Address(RVA = "0xBB5A30", Offset = "0xBB5A30", VA = "0xBB5A30", Slot = "67")]
		protected override CalApplicationProposed GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200025B")]
	public class MessageWithCalApplicationSuggestionList : Message<CalApplicationSuggestionList>
	{
		[Token(Token = "0x60011BF")]
		[Address(RVA = "0xBB5B54", Offset = "0xBB5B54", VA = "0xBB5B54")]
		public MessageWithCalApplicationSuggestionList(IntPtr c_message)
		{
		}

		[Token(Token = "0x60011C0")]
		[Address(RVA = "0xBB5BB4", Offset = "0xBB5BB4", VA = "0xBB5BB4", Slot = "22")]
		public override CalApplicationSuggestionList GetCalApplicationSuggestionList()
		{
			return null;
		}

		[Token(Token = "0x60011C1")]
		[Address(RVA = "0xBB5BF8", Offset = "0xBB5BF8", VA = "0xBB5BF8", Slot = "67")]
		protected override CalApplicationSuggestionList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200025C")]
	public class MessageWithCloudStorageConflictMetadata : Message<CloudStorageConflictMetadata>
	{
		[Token(Token = "0x60011C2")]
		[Address(RVA = "0xBB28DC", Offset = "0xBB28DC", VA = "0xBB28DC")]
		public MessageWithCloudStorageConflictMetadata(IntPtr c_message)
		{
		}

		[Token(Token = "0x60011C3")]
		[Address(RVA = "0xBB5E64", Offset = "0xBB5E64", VA = "0xBB5E64", Slot = "23")]
		public override CloudStorageConflictMetadata GetCloudStorageConflictMetadata()
		{
			return null;
		}

		[Token(Token = "0x60011C4")]
		[Address(RVA = "0xBB5EA8", Offset = "0xBB5EA8", VA = "0xBB5EA8", Slot = "67")]
		protected override CloudStorageConflictMetadata GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200025D")]
	public class MessageWithCloudStorageData : Message<CloudStorageData>
	{
		[Token(Token = "0x60011C5")]
		[Address(RVA = "0xBB293C", Offset = "0xBB293C", VA = "0xBB293C")]
		public MessageWithCloudStorageData(IntPtr c_message)
		{
		}

		[Token(Token = "0x60011C6")]
		[Address(RVA = "0xBB6024", Offset = "0xBB6024", VA = "0xBB6024", Slot = "24")]
		public override CloudStorageData GetCloudStorageData()
		{
			return null;
		}

		[Token(Token = "0x60011C7")]
		[Address(RVA = "0xBB6068", Offset = "0xBB6068", VA = "0xBB6068", Slot = "67")]
		protected override CloudStorageData GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200025E")]
	public class MessageWithCloudStorageMetadataUnderLocal : Message<CloudStorageMetadata>
	{
		[Token(Token = "0x60011C8")]
		[Address(RVA = "0xBB299C", Offset = "0xBB299C", VA = "0xBB299C")]
		public MessageWithCloudStorageMetadataUnderLocal(IntPtr c_message)
		{
		}

		[Token(Token = "0x60011C9")]
		[Address(RVA = "0xBB649C", Offset = "0xBB649C", VA = "0xBB649C", Slot = "25")]
		public override CloudStorageMetadata GetCloudStorageMetadata()
		{
			return null;
		}

		[Token(Token = "0x60011CA")]
		[Address(RVA = "0xBB64E0", Offset = "0xBB64E0", VA = "0xBB64E0", Slot = "67")]
		protected override CloudStorageMetadata GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200025F")]
	public class MessageWithCloudStorageMetadataList : Message<CloudStorageMetadataList>
	{
		[Token(Token = "0x60011CB")]
		[Address(RVA = "0xBB29FC", Offset = "0xBB29FC", VA = "0xBB29FC")]
		public MessageWithCloudStorageMetadataList(IntPtr c_message)
		{
		}

		[Token(Token = "0x60011CC")]
		[Address(RVA = "0xBB61BC", Offset = "0xBB61BC", VA = "0xBB61BC", Slot = "26")]
		public override CloudStorageMetadataList GetCloudStorageMetadataList()
		{
			return null;
		}

		[Token(Token = "0x60011CD")]
		[Address(RVA = "0xBB6200", Offset = "0xBB6200", VA = "0xBB6200", Slot = "67")]
		protected override CloudStorageMetadataList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000260")]
	public class MessageWithCloudStorageUpdateResponse : Message<CloudStorageUpdateResponse>
	{
		[Token(Token = "0x60011CE")]
		[Address(RVA = "0xBB2A5C", Offset = "0xBB2A5C", VA = "0xBB2A5C")]
		public MessageWithCloudStorageUpdateResponse(IntPtr c_message)
		{
		}

		[Token(Token = "0x60011CF")]
		[Address(RVA = "0xBB6674", Offset = "0xBB6674", VA = "0xBB6674", Slot = "27")]
		public override CloudStorageUpdateResponse GetCloudStorageUpdateResponse()
		{
			return null;
		}

		[Token(Token = "0x60011D0")]
		[Address(RVA = "0xBB66B8", Offset = "0xBB66B8", VA = "0xBB66B8", Slot = "67")]
		protected override CloudStorageUpdateResponse GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000261")]
	public class MessageWithInstalledApplicationList : Message<InstalledApplicationList>
	{
		[Token(Token = "0x60011D1")]
		[Address(RVA = "0xBB6A34", Offset = "0xBB6A34", VA = "0xBB6A34")]
		public MessageWithInstalledApplicationList(IntPtr c_message)
		{
		}

		[Token(Token = "0x60011D2")]
		[Address(RVA = "0xBB6A94", Offset = "0xBB6A94", VA = "0xBB6A94", Slot = "28")]
		public override InstalledApplicationList GetInstalledApplicationList()
		{
			return null;
		}

		[Token(Token = "0x60011D3")]
		[Address(RVA = "0xBB6AD8", Offset = "0xBB6AD8", VA = "0xBB6AD8", Slot = "67")]
		protected override InstalledApplicationList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000262")]
	public class MessageWithLaunchBlockFlowResult : Message<LaunchBlockFlowResult>
	{
		[Token(Token = "0x60011D4")]
		[Address(RVA = "0xBB6D44", Offset = "0xBB6D44", VA = "0xBB6D44")]
		public MessageWithLaunchBlockFlowResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x60011D5")]
		[Address(RVA = "0xBB6DA4", Offset = "0xBB6DA4", VA = "0xBB6DA4", Slot = "29")]
		public override LaunchBlockFlowResult GetLaunchBlockFlowResult()
		{
			return null;
		}

		[Token(Token = "0x60011D6")]
		[Address(RVA = "0xBB6DE8", Offset = "0xBB6DE8", VA = "0xBB6DE8", Slot = "67")]
		protected override LaunchBlockFlowResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000263")]
	public class MessageWithLaunchFriendRequestFlowResult : Message<LaunchFriendRequestFlowResult>
	{
		[Token(Token = "0x60011D7")]
		[Address(RVA = "0xBB2ABC", Offset = "0xBB2ABC", VA = "0xBB2ABC")]
		public MessageWithLaunchFriendRequestFlowResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x60011D8")]
		[Address(RVA = "0xBB6F24", Offset = "0xBB6F24", VA = "0xBB6F24", Slot = "30")]
		public override LaunchFriendRequestFlowResult GetLaunchFriendRequestFlowResult()
		{
			return null;
		}

		[Token(Token = "0x60011D9")]
		[Address(RVA = "0xBB6F68", Offset = "0xBB6F68", VA = "0xBB6F68", Slot = "67")]
		protected override LaunchFriendRequestFlowResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000264")]
	public class MessageWithLaunchReportFlowResult : Message<LaunchReportFlowResult>
	{
		[Token(Token = "0x60011DA")]
		[Address(RVA = "0xBB70A4", Offset = "0xBB70A4", VA = "0xBB70A4")]
		public MessageWithLaunchReportFlowResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x60011DB")]
		[Address(RVA = "0xBB7104", Offset = "0xBB7104", VA = "0xBB7104", Slot = "31")]
		public override LaunchReportFlowResult GetLaunchReportFlowResult()
		{
			return null;
		}

		[Token(Token = "0x60011DC")]
		[Address(RVA = "0xBB7148", Offset = "0xBB7148", VA = "0xBB7148", Slot = "67")]
		protected override LaunchReportFlowResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000265")]
	public class MessageWithLaunchUnblockFlowResult : Message<LaunchUnblockFlowResult>
	{
		[Token(Token = "0x60011DD")]
		[Address(RVA = "0xBB7280", Offset = "0xBB7280", VA = "0xBB7280")]
		public MessageWithLaunchUnblockFlowResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x60011DE")]
		[Address(RVA = "0xBB72E0", Offset = "0xBB72E0", VA = "0xBB72E0", Slot = "32")]
		public override LaunchUnblockFlowResult GetLaunchUnblockFlowResult()
		{
			return null;
		}

		[Token(Token = "0x60011DF")]
		[Address(RVA = "0xBB7324", Offset = "0xBB7324", VA = "0xBB7324", Slot = "67")]
		protected override LaunchUnblockFlowResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000266")]
	public class MessageWithLeaderboardEntryList : Message<LeaderboardEntryList>
	{
		[Token(Token = "0x60011E0")]
		[Address(RVA = "0xBB2B1C", Offset = "0xBB2B1C", VA = "0xBB2B1C")]
		public MessageWithLeaderboardEntryList(IntPtr c_message)
		{
		}

		[Token(Token = "0x60011E1")]
		[Address(RVA = "0xBB751C", Offset = "0xBB751C", VA = "0xBB751C", Slot = "34")]
		public override LeaderboardEntryList GetLeaderboardEntryList()
		{
			return null;
		}

		[Token(Token = "0x60011E2")]
		[Address(RVA = "0xBB7560", Offset = "0xBB7560", VA = "0xBB7560", Slot = "67")]
		protected override LeaderboardEntryList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000267")]
	public class MessageWithLinkedAccountList : Message<LinkedAccountList>
	{
		[Token(Token = "0x60011E3")]
		[Address(RVA = "0xBB781C", Offset = "0xBB781C", VA = "0xBB781C")]
		public MessageWithLinkedAccountList(IntPtr c_message)
		{
		}

		[Token(Token = "0x60011E4")]
		[Address(RVA = "0xBB787C", Offset = "0xBB787C", VA = "0xBB787C", Slot = "35")]
		public override LinkedAccountList GetLinkedAccountList()
		{
			return null;
		}

		[Token(Token = "0x60011E5")]
		[Address(RVA = "0xBB78C0", Offset = "0xBB78C0", VA = "0xBB78C0", Slot = "67")]
		protected override LinkedAccountList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000268")]
	public class MessageWithLivestreamingApplicationStatus : Message<LivestreamingApplicationStatus>
	{
		[Token(Token = "0x60011E6")]
		[Address(RVA = "0xBB7B2C", Offset = "0xBB7B2C", VA = "0xBB7B2C")]
		public MessageWithLivestreamingApplicationStatus(IntPtr c_message)
		{
		}

		[Token(Token = "0x60011E7")]
		[Address(RVA = "0xBB7B8C", Offset = "0xBB7B8C", VA = "0xBB7B8C", Slot = "36")]
		public override LivestreamingApplicationStatus GetLivestreamingApplicationStatus()
		{
			return null;
		}

		[Token(Token = "0x60011E8")]
		[Address(RVA = "0xBB7BD0", Offset = "0xBB7BD0", VA = "0xBB7BD0", Slot = "67")]
		protected override LivestreamingApplicationStatus GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000269")]
	public class MessageWithLivestreamingStartResult : Message<LivestreamingStartResult>
	{
		[Token(Token = "0x60011E9")]
		[Address(RVA = "0xBB7CF8", Offset = "0xBB7CF8", VA = "0xBB7CF8")]
		public MessageWithLivestreamingStartResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x60011EA")]
		[Address(RVA = "0xBB7D58", Offset = "0xBB7D58", VA = "0xBB7D58", Slot = "37")]
		public override LivestreamingStartResult GetLivestreamingStartResult()
		{
			return null;
		}

		[Token(Token = "0x60011EB")]
		[Address(RVA = "0xBB7D9C", Offset = "0xBB7D9C", VA = "0xBB7D9C", Slot = "67")]
		protected override LivestreamingStartResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200026A")]
	public class MessageWithLivestreamingStatus : Message<LivestreamingStatus>
	{
		[Token(Token = "0x60011EC")]
		[Address(RVA = "0xBB2BDC", Offset = "0xBB2BDC", VA = "0xBB2BDC")]
		public MessageWithLivestreamingStatus(IntPtr c_message)
		{
		}

		[Token(Token = "0x60011ED")]
		[Address(RVA = "0xBB7EC0", Offset = "0xBB7EC0", VA = "0xBB7EC0", Slot = "38")]
		public override LivestreamingStatus GetLivestreamingStatus()
		{
			return null;
		}

		[Token(Token = "0x60011EE")]
		[Address(RVA = "0xBB7F04", Offset = "0xBB7F04", VA = "0xBB7F04", Slot = "67")]
		protected override LivestreamingStatus GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200026B")]
	public class MessageWithLivestreamingVideoStats : Message<LivestreamingVideoStats>
	{
		[Token(Token = "0x60011EF")]
		[Address(RVA = "0xBB8078", Offset = "0xBB8078", VA = "0xBB8078")]
		public MessageWithLivestreamingVideoStats(IntPtr c_message)
		{
		}

		[Token(Token = "0x60011F0")]
		[Address(RVA = "0xBB80D8", Offset = "0xBB80D8", VA = "0xBB80D8", Slot = "39")]
		public override LivestreamingVideoStats GetLivestreamingVideoStats()
		{
			return null;
		}

		[Token(Token = "0x60011F1")]
		[Address(RVA = "0xBB811C", Offset = "0xBB811C", VA = "0xBB811C", Slot = "67")]
		protected override LivestreamingVideoStats GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200026C")]
	public class MessageWithMatchmakingAdminSnapshot : Message<MatchmakingAdminSnapshot>
	{
		[Token(Token = "0x60011F2")]
		[Address(RVA = "0xBB2C3C", Offset = "0xBB2C3C", VA = "0xBB2C3C")]
		public MessageWithMatchmakingAdminSnapshot(IntPtr c_message)
		{
		}

		[Token(Token = "0x60011F3")]
		[Address(RVA = "0xBB8260", Offset = "0xBB8260", VA = "0xBB8260", Slot = "40")]
		public override MatchmakingAdminSnapshot GetMatchmakingAdminSnapshot()
		{
			return null;
		}

		[Token(Token = "0x60011F4")]
		[Address(RVA = "0xBB82A4", Offset = "0xBB82A4", VA = "0xBB82A4", Slot = "67")]
		protected override MatchmakingAdminSnapshot GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200026D")]
	public class MessageWithMatchmakingEnqueueResult : Message<MatchmakingEnqueueResult>
	{
		[Token(Token = "0x60011F5")]
		[Address(RVA = "0xBB2CFC", Offset = "0xBB2CFC", VA = "0xBB2CFC")]
		public MessageWithMatchmakingEnqueueResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x60011F6")]
		[Address(RVA = "0xBB8618", Offset = "0xBB8618", VA = "0xBB8618", Slot = "42")]
		public override MatchmakingEnqueueResult GetMatchmakingEnqueueResult()
		{
			return null;
		}

		[Token(Token = "0x60011F7")]
		[Address(RVA = "0xBB865C", Offset = "0xBB865C", VA = "0xBB865C", Slot = "67")]
		protected override MatchmakingEnqueueResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200026E")]
	public class MessageWithMatchmakingEnqueueResultAndRoom : Message<MatchmakingEnqueueResultAndRoom>
	{
		[Token(Token = "0x60011F8")]
		[Address(RVA = "0xBB2D5C", Offset = "0xBB2D5C", VA = "0xBB2D5C")]
		public MessageWithMatchmakingEnqueueResultAndRoom(IntPtr c_message)
		{
		}

		[Token(Token = "0x60011F9")]
		[Address(RVA = "0xBB8848", Offset = "0xBB8848", VA = "0xBB8848", Slot = "43")]
		public override MatchmakingEnqueueResultAndRoom GetMatchmakingEnqueueResultAndRoom()
		{
			return null;
		}

		[Token(Token = "0x60011FA")]
		[Address(RVA = "0xBB888C", Offset = "0xBB888C", VA = "0xBB888C", Slot = "67")]
		protected override MatchmakingEnqueueResultAndRoom GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200026F")]
	public class MessageWithMatchmakingStatsUnderMatchmakingStats : Message<MatchmakingStats>
	{
		[Token(Token = "0x60011FB")]
		[Address(RVA = "0xBB2DBC", Offset = "0xBB2DBC", VA = "0xBB2DBC")]
		public MessageWithMatchmakingStatsUnderMatchmakingStats(IntPtr c_message)
		{
		}

		[Token(Token = "0x60011FC")]
		[Address(RVA = "0xBB8DDC", Offset = "0xBB8DDC", VA = "0xBB8DDC", Slot = "44")]
		public override MatchmakingStats GetMatchmakingStats()
		{
			return null;
		}

		[Token(Token = "0x60011FD")]
		[Address(RVA = "0xBB8E20", Offset = "0xBB8E20", VA = "0xBB8E20", Slot = "67")]
		protected override MatchmakingStats GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000270")]
	public class MessageWithOrgScopedID : Message<OrgScopedID>
	{
		[Token(Token = "0x60011FE")]
		[Address(RVA = "0xBB2E1C", Offset = "0xBB2E1C", VA = "0xBB2E1C")]
		public MessageWithOrgScopedID(IntPtr c_message)
		{
		}

		[Token(Token = "0x60011FF")]
		[Address(RVA = "0xBB90B4", Offset = "0xBB90B4", VA = "0xBB90B4", Slot = "45")]
		public override OrgScopedID GetOrgScopedID()
		{
			return null;
		}

		[Token(Token = "0x6001200")]
		[Address(RVA = "0xBB90F8", Offset = "0xBB90F8", VA = "0xBB90F8", Slot = "67")]
		protected override OrgScopedID GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000271")]
	public class MessageWithParty : Message<Party>
	{
		[Token(Token = "0x6001201")]
		[Address(RVA = "0xBB921C", Offset = "0xBB921C", VA = "0xBB921C")]
		public MessageWithParty(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001202")]
		[Address(RVA = "0xBB927C", Offset = "0xBB927C", VA = "0xBB927C", Slot = "46")]
		public override Party GetParty()
		{
			return null;
		}

		[Token(Token = "0x6001203")]
		[Address(RVA = "0xBB92C0", Offset = "0xBB92C0", VA = "0xBB92C0", Slot = "67")]
		protected override Party GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000272")]
	public class MessageWithPartyUnderCurrentParty : Message<Party>
	{
		[Token(Token = "0x6001204")]
		[Address(RVA = "0xBB2E7C", Offset = "0xBB2E7C", VA = "0xBB2E7C")]
		public MessageWithPartyUnderCurrentParty(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001205")]
		[Address(RVA = "0xBB9754", Offset = "0xBB9754", VA = "0xBB9754", Slot = "46")]
		public override Party GetParty()
		{
			return null;
		}

		[Token(Token = "0x6001206")]
		[Address(RVA = "0xBB9798", Offset = "0xBB9798", VA = "0xBB9798", Slot = "67")]
		protected override Party GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000273")]
	public class MessageWithPartyID : Message<PartyID>
	{
		[Token(Token = "0x6001207")]
		[Address(RVA = "0xBB958C", Offset = "0xBB958C", VA = "0xBB958C")]
		public MessageWithPartyID(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001208")]
		[Address(RVA = "0xBB95EC", Offset = "0xBB95EC", VA = "0xBB95EC", Slot = "47")]
		public override PartyID GetPartyID()
		{
			return null;
		}

		[Token(Token = "0x6001209")]
		[Address(RVA = "0xBB9630", Offset = "0xBB9630", VA = "0xBB9630", Slot = "67")]
		protected override PartyID GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000274")]
	public class MessageWithPartyUpdateNotification : Message<PartyUpdateNotification>
	{
		[Token(Token = "0x600120A")]
		[Address(RVA = "0xBB2EDC", Offset = "0xBB2EDC", VA = "0xBB2EDC")]
		public MessageWithPartyUpdateNotification(IntPtr c_message)
		{
		}

		[Token(Token = "0x600120B")]
		[Address(RVA = "0xBB9834", Offset = "0xBB9834", VA = "0xBB9834", Slot = "48")]
		public override PartyUpdateNotification GetPartyUpdateNotification()
		{
			return null;
		}

		[Token(Token = "0x600120C")]
		[Address(RVA = "0xBB9878", Offset = "0xBB9878", VA = "0xBB9878", Slot = "67")]
		protected override PartyUpdateNotification GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000275")]
	public class MessageWithPidList : Message<PidList>
	{
		[Token(Token = "0x600120D")]
		[Address(RVA = "0xBB2F3C", Offset = "0xBB2F3C", VA = "0xBB2F3C")]
		public MessageWithPidList(IntPtr c_message)
		{
		}

		[Token(Token = "0x600120E")]
		[Address(RVA = "0xBB99FC", Offset = "0xBB99FC", VA = "0xBB99FC", Slot = "49")]
		public override PidList GetPidList()
		{
			return null;
		}

		[Token(Token = "0x600120F")]
		[Address(RVA = "0xBB9A40", Offset = "0xBB9A40", VA = "0xBB9A40", Slot = "67")]
		protected override PidList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000276")]
	public class MessageWithProductList : Message<ProductList>
	{
		[Token(Token = "0x6001210")]
		[Address(RVA = "0xBB2F9C", Offset = "0xBB2F9C", VA = "0xBB2F9C")]
		public MessageWithProductList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001211")]
		[Address(RVA = "0xBB9FB4", Offset = "0xBB9FB4", VA = "0xBB9FB4", Slot = "50")]
		public override ProductList GetProductList()
		{
			return null;
		}

		[Token(Token = "0x6001212")]
		[Address(RVA = "0xBB9FF8", Offset = "0xBB9FF8", VA = "0xBB9FF8", Slot = "67")]
		protected override ProductList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000277")]
	public class MessageWithPurchase : Message<Purchase>
	{
		[Token(Token = "0x6001213")]
		[Address(RVA = "0xBB2FFC", Offset = "0xBB2FFC", VA = "0xBB2FFC")]
		public MessageWithPurchase(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001214")]
		[Address(RVA = "0xBBA294", Offset = "0xBBA294", VA = "0xBBA294", Slot = "51")]
		public override Purchase GetPurchase()
		{
			return null;
		}

		[Token(Token = "0x6001215")]
		[Address(RVA = "0xBBA2D8", Offset = "0xBBA2D8", VA = "0xBBA2D8", Slot = "67")]
		protected override Purchase GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000278")]
	public class MessageWithPurchaseList : Message<PurchaseList>
	{
		[Token(Token = "0x6001216")]
		[Address(RVA = "0xBB305C", Offset = "0xBB305C", VA = "0xBB305C")]
		public MessageWithPurchaseList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001217")]
		[Address(RVA = "0xBBA42C", Offset = "0xBBA42C", VA = "0xBBA42C", Slot = "52")]
		public override PurchaseList GetPurchaseList()
		{
			return null;
		}

		[Token(Token = "0x6001218")]
		[Address(RVA = "0xBBA470", Offset = "0xBBA470", VA = "0xBBA470", Slot = "67")]
		protected override PurchaseList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000279")]
	public class MessageWithRoom : Message<Oculus.Platform.Models.Room>
	{
		[Token(Token = "0x6001219")]
		[Address(RVA = "0xBB30BC", Offset = "0xBB30BC", VA = "0xBB30BC")]
		public MessageWithRoom(IntPtr c_message)
		{
		}

		[Token(Token = "0x600121A")]
		[Address(RVA = "0xBBA70C", Offset = "0xBBA70C", VA = "0xBBA70C", Slot = "53")]
		public override Oculus.Platform.Models.Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x600121B")]
		[Address(RVA = "0xBBA750", Offset = "0xBBA750", VA = "0xBBA750", Slot = "67")]
		protected override Oculus.Platform.Models.Room GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200027A")]
	public class MessageWithRoomUnderCurrentRoom : Message<Oculus.Platform.Models.Room>
	{
		[Token(Token = "0x600121C")]
		[Address(RVA = "0xBB311C", Offset = "0xBB311C", VA = "0xBB311C")]
		public MessageWithRoomUnderCurrentRoom(IntPtr c_message)
		{
		}

		[Token(Token = "0x600121D")]
		[Address(RVA = "0xBBAF44", Offset = "0xBBAF44", VA = "0xBBAF44", Slot = "53")]
		public override Oculus.Platform.Models.Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x600121E")]
		[Address(RVA = "0xBBAF88", Offset = "0xBBAF88", VA = "0xBBAF88", Slot = "67")]
		protected override Oculus.Platform.Models.Room GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200027B")]
	public class MessageWithRoomUnderViewerRoom : Message<Oculus.Platform.Models.Room>
	{
		[Token(Token = "0x600121F")]
		[Address(RVA = "0xBB317C", Offset = "0xBB317C", VA = "0xBB317C")]
		public MessageWithRoomUnderViewerRoom(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001220")]
		[Address(RVA = "0xBBB024", Offset = "0xBBB024", VA = "0xBBB024", Slot = "53")]
		public override Oculus.Platform.Models.Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x6001221")]
		[Address(RVA = "0xBBB068", Offset = "0xBBB068", VA = "0xBBB068", Slot = "67")]
		protected override Oculus.Platform.Models.Room GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200027C")]
	public class MessageWithRoomList : Message<RoomList>
	{
		[Token(Token = "0x6001222")]
		[Address(RVA = "0xBB31DC", Offset = "0xBB31DC", VA = "0xBB31DC")]
		public MessageWithRoomList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001223")]
		[Address(RVA = "0xBBAC64", Offset = "0xBBAC64", VA = "0xBBAC64", Slot = "56")]
		public override RoomList GetRoomList()
		{
			return null;
		}

		[Token(Token = "0x6001224")]
		[Address(RVA = "0xBBACA8", Offset = "0xBBACA8", VA = "0xBBACA8", Slot = "67")]
		protected override RoomList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200027D")]
	public class MessageWithRoomInviteNotification : Message<RoomInviteNotification>
	{
		[Token(Token = "0x6001225")]
		[Address(RVA = "0xBB323C", Offset = "0xBB323C", VA = "0xBB323C")]
		public MessageWithRoomInviteNotification(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001226")]
		[Address(RVA = "0xBBA7EC", Offset = "0xBBA7EC", VA = "0xBBA7EC", Slot = "54")]
		public override RoomInviteNotification GetRoomInviteNotification()
		{
			return null;
		}

		[Token(Token = "0x6001227")]
		[Address(RVA = "0xBBA830", Offset = "0xBBA830", VA = "0xBBA830", Slot = "67")]
		protected override RoomInviteNotification GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200027E")]
	public class MessageWithRoomInviteNotificationList : Message<RoomInviteNotificationList>
	{
		[Token(Token = "0x6001228")]
		[Address(RVA = "0xBB329C", Offset = "0xBB329C", VA = "0xBB329C")]
		public MessageWithRoomInviteNotificationList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001229")]
		[Address(RVA = "0xBBA984", Offset = "0xBBA984", VA = "0xBBA984", Slot = "55")]
		public override RoomInviteNotificationList GetRoomInviteNotificationList()
		{
			return null;
		}

		[Token(Token = "0x600122A")]
		[Address(RVA = "0xBBA9C8", Offset = "0xBBA9C8", VA = "0xBBA9C8", Slot = "67")]
		protected override RoomInviteNotificationList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200027F")]
	public class MessageWithSdkAccountList : Message<SdkAccountList>
	{
		[Token(Token = "0x600122B")]
		[Address(RVA = "0xBB32FC", Offset = "0xBB32FC", VA = "0xBB32FC")]
		public MessageWithSdkAccountList(IntPtr c_message)
		{
		}

		[Token(Token = "0x600122C")]
		[Address(RVA = "0xBBB104", Offset = "0xBBB104", VA = "0xBBB104", Slot = "57")]
		public override SdkAccountList GetSdkAccountList()
		{
			return null;
		}

		[Token(Token = "0x600122D")]
		[Address(RVA = "0xBBB148", Offset = "0xBBB148", VA = "0xBBB148", Slot = "67")]
		protected override SdkAccountList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000280")]
	public class MessageWithShareMediaResult : Message<ShareMediaResult>
	{
		[Token(Token = "0x600122E")]
		[Address(RVA = "0xBB335C", Offset = "0xBB335C", VA = "0xBB335C")]
		public MessageWithShareMediaResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x600122F")]
		[Address(RVA = "0xBBB3B4", Offset = "0xBBB3B4", VA = "0xBBB3B4", Slot = "58")]
		public override ShareMediaResult GetShareMediaResult()
		{
			return null;
		}

		[Token(Token = "0x6001230")]
		[Address(RVA = "0xBBB3F8", Offset = "0xBBB3F8", VA = "0xBBB3F8", Slot = "67")]
		protected override ShareMediaResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000281")]
	public class MessageWithString : Message<string>
	{
		[Token(Token = "0x6001231")]
		[Address(RVA = "0xBB33BC", Offset = "0xBB33BC", VA = "0xBB33BC")]
		public MessageWithString(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001232")]
		[Address(RVA = "0xBBB51C", Offset = "0xBBB51C", VA = "0xBBB51C", Slot = "59")]
		public override string GetString()
		{
			return null;
		}

		[Token(Token = "0x6001233")]
		[Address(RVA = "0xBBB560", Offset = "0xBBB560", VA = "0xBBB560", Slot = "67")]
		protected override string GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000282")]
	public class MessageWithSystemPermission : Message<SystemPermission>
	{
		[Token(Token = "0x6001234")]
		[Address(RVA = "0xBBB5C8", Offset = "0xBBB5C8", VA = "0xBBB5C8")]
		public MessageWithSystemPermission(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001235")]
		[Address(RVA = "0xBBB628", Offset = "0xBBB628", VA = "0xBBB628", Slot = "60")]
		public override SystemPermission GetSystemPermission()
		{
			return null;
		}

		[Token(Token = "0x6001236")]
		[Address(RVA = "0xBBB66C", Offset = "0xBBB66C", VA = "0xBBB66C", Slot = "67")]
		protected override SystemPermission GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000283")]
	public class MessageWithSystemVoipState : Message<SystemVoipState>
	{
		[Token(Token = "0x6001237")]
		[Address(RVA = "0xBB341C", Offset = "0xBB341C", VA = "0xBB341C")]
		public MessageWithSystemVoipState(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001238")]
		[Address(RVA = "0xBBB7A4", Offset = "0xBBB7A4", VA = "0xBBB7A4", Slot = "61")]
		public override SystemVoipState GetSystemVoipState()
		{
			return null;
		}

		[Token(Token = "0x6001239")]
		[Address(RVA = "0xBBB7E8", Offset = "0xBBB7E8", VA = "0xBBB7E8", Slot = "67")]
		protected override SystemVoipState GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000284")]
	public class MessageWithUser : Message<User>
	{
		[Token(Token = "0x600123A")]
		[Address(RVA = "0xBB347C", Offset = "0xBB347C", VA = "0xBB347C")]
		public MessageWithUser(IntPtr c_message)
		{
		}

		[Token(Token = "0x600123B")]
		[Address(RVA = "0xBBB91C", Offset = "0xBBB91C", VA = "0xBBB91C", Slot = "62")]
		public override User GetUser()
		{
			return null;
		}

		[Token(Token = "0x600123C")]
		[Address(RVA = "0xBBB960", Offset = "0xBBB960", VA = "0xBBB960", Slot = "67")]
		protected override User GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000285")]
	public class MessageWithUserAndRoomList : Message<UserAndRoomList>
	{
		[Token(Token = "0x600123D")]
		[Address(RVA = "0xBB34DC", Offset = "0xBB34DC", VA = "0xBB34DC")]
		public MessageWithUserAndRoomList(IntPtr c_message)
		{
		}

		[Token(Token = "0x600123E")]
		[Address(RVA = "0xBBBAE4", Offset = "0xBBBAE4", VA = "0xBBBAE4", Slot = "63")]
		public override UserAndRoomList GetUserAndRoomList()
		{
			return null;
		}

		[Token(Token = "0x600123F")]
		[Address(RVA = "0xBBBB28", Offset = "0xBBBB28", VA = "0xBBBB28", Slot = "67")]
		protected override UserAndRoomList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000286")]
	public class MessageWithUserList : Message<UserList>
	{
		[Token(Token = "0x6001240")]
		[Address(RVA = "0xBB353C", Offset = "0xBB353C", VA = "0xBB353C")]
		public MessageWithUserList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001241")]
		[Address(RVA = "0xBBBDC4", Offset = "0xBBBDC4", VA = "0xBBBDC4", Slot = "64")]
		public override UserList GetUserList()
		{
			return null;
		}

		[Token(Token = "0x6001242")]
		[Address(RVA = "0xBBBE08", Offset = "0xBBBE08", VA = "0xBBBE08", Slot = "67")]
		protected override UserList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000287")]
	public class MessageWithUserProof : Message<UserProof>
	{
		[Token(Token = "0x6001243")]
		[Address(RVA = "0xBB359C", Offset = "0xBB359C", VA = "0xBB359C")]
		public MessageWithUserProof(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001244")]
		[Address(RVA = "0xBBC0A4", Offset = "0xBBC0A4", VA = "0xBBC0A4", Slot = "65")]
		public override UserProof GetUserProof()
		{
			return null;
		}

		[Token(Token = "0x6001245")]
		[Address(RVA = "0xBBC0E8", Offset = "0xBBC0E8", VA = "0xBBC0E8", Slot = "67")]
		protected override UserProof GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000288")]
	public class MessageWithUserReportID : Message<UserReportID>
	{
		[Token(Token = "0x6001246")]
		[Address(RVA = "0xBBC20C", Offset = "0xBBC20C", VA = "0xBBC20C")]
		public MessageWithUserReportID(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001247")]
		[Address(RVA = "0xBBC26C", Offset = "0xBBC26C", VA = "0xBBC26C", Slot = "66")]
		public override UserReportID GetUserReportID()
		{
			return null;
		}

		[Token(Token = "0x6001248")]
		[Address(RVA = "0xBBC2B0", Offset = "0xBBC2B0", VA = "0xBBC2B0", Slot = "67")]
		protected override UserReportID GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000289")]
	public class MessageWithNetworkingPeer : Message<Oculus.Platform.Models.NetworkingPeer>
	{
		[Token(Token = "0x6001249")]
		[Address(RVA = "0xBB35FC", Offset = "0xBB35FC", VA = "0xBB35FC")]
		public MessageWithNetworkingPeer(IntPtr c_message)
		{
		}

		[Token(Token = "0x600124A")]
		[Address(RVA = "0xBB8F74", Offset = "0xBB8F74", VA = "0xBB8F74", Slot = "6")]
		public override Oculus.Platform.Models.NetworkingPeer GetNetworkingPeer()
		{
			return null;
		}

		[Token(Token = "0x600124B")]
		[Address(RVA = "0xBB8FB8", Offset = "0xBB8FB8", VA = "0xBB8FB8", Slot = "67")]
		protected override Oculus.Platform.Models.NetworkingPeer GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200028A")]
	public class MessageWithPingResult : Message<PingResult>
	{
		[Token(Token = "0x600124C")]
		[Address(RVA = "0xBB365C", Offset = "0xBB365C", VA = "0xBB365C")]
		public MessageWithPingResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x600124D")]
		[Address(RVA = "0xBB9CAC", Offset = "0xBB9CAC", VA = "0xBB9CAC", Slot = "5")]
		public override PingResult GetPingResult()
		{
			return null;
		}

		[Token(Token = "0x600124E")]
		[Address(RVA = "0xBB9CF0", Offset = "0xBB9CF0", VA = "0xBB9CF0", Slot = "67")]
		protected override PingResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200028B")]
	public class MessageWithLeaderboardDidUpdate : Message<bool>
	{
		[Token(Token = "0x600124F")]
		[Address(RVA = "0xBB2B7C", Offset = "0xBB2B7C", VA = "0xBB2B7C")]
		public MessageWithLeaderboardDidUpdate(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001250")]
		[Address(RVA = "0xBB7460", Offset = "0xBB7460", VA = "0xBB7460", Slot = "33")]
		public override bool GetLeaderboardDidUpdate()
		{
			return default(bool);
		}

		[Token(Token = "0x6001251")]
		[Address(RVA = "0xBB74A4", Offset = "0xBB74A4", VA = "0xBB74A4", Slot = "67")]
		protected override bool GetDataFromMessage(IntPtr c_message)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200028C")]
	public class MessageWithMatchmakingNotification : Message<Oculus.Platform.Models.Room>
	{
		[Token(Token = "0x6001252")]
		[Address(RVA = "0xBB36BC", Offset = "0xBB36BC", VA = "0xBB36BC")]
		public MessageWithMatchmakingNotification(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001253")]
		[Address(RVA = "0xBB8A08", Offset = "0xBB8A08", VA = "0xBB8A08", Slot = "53")]
		public override Oculus.Platform.Models.Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x6001254")]
		[Address(RVA = "0xBB8A4C", Offset = "0xBB8A4C", VA = "0xBB8A4C", Slot = "67")]
		protected override Oculus.Platform.Models.Room GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200028D")]
	public class MessageWithMatchmakingBrowseResult : Message<MatchmakingBrowseResult>
	{
		[Token(Token = "0x6001255")]
		[Address(RVA = "0xBB2C9C", Offset = "0xBB2C9C", VA = "0xBB2C9C")]
		public MessageWithMatchmakingBrowseResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001256")]
		[Address(RVA = "0xBB83FC", Offset = "0xBB83FC", VA = "0xBB83FC", Slot = "42")]
		public override MatchmakingEnqueueResult GetMatchmakingEnqueueResult()
		{
			return null;
		}

		[Token(Token = "0x6001257")]
		[Address(RVA = "0xBB844C", Offset = "0xBB844C", VA = "0xBB844C", Slot = "56")]
		public override RoomList GetRoomList()
		{
			return null;
		}

		[Token(Token = "0x6001258")]
		[Address(RVA = "0xBB849C", Offset = "0xBB849C", VA = "0xBB849C", Slot = "67")]
		protected override MatchmakingBrowseResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200028E")]
	public class MessageWithHttpTransferUpdate : Message<HttpTransferUpdate>
	{
		[Token(Token = "0x6001259")]
		[Address(RVA = "0xBB371C", Offset = "0xBB371C", VA = "0xBB371C")]
		public MessageWithHttpTransferUpdate(IntPtr c_message)
		{
		}

		[Token(Token = "0x600125A")]
		[Address(RVA = "0xBB680C", Offset = "0xBB680C", VA = "0xBB680C", Slot = "7")]
		public override HttpTransferUpdate GetHttpTransferUpdate()
		{
			return null;
		}

		[Token(Token = "0x600125B")]
		[Address(RVA = "0xBB6850", Offset = "0xBB6850", VA = "0xBB6850", Slot = "67")]
		protected override HttpTransferUpdate GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200028F")]
	public class MessageWithPlatformInitialize : Message<PlatformInitialize>
	{
		[Token(Token = "0x600125C")]
		[Address(RVA = "0xBB377C", Offset = "0xBB377C", VA = "0xBB377C")]
		public MessageWithPlatformInitialize(IntPtr c_message)
		{
		}

		[Token(Token = "0x600125D")]
		[Address(RVA = "0xBB9E4C", Offset = "0xBB9E4C", VA = "0xBB9E4C", Slot = "8")]
		public override PlatformInitialize GetPlatformInitialize()
		{
			return null;
		}

		[Token(Token = "0x600125E")]
		[Address(RVA = "0xBB9E90", Offset = "0xBB9E90", VA = "0xBB9E90", Slot = "67")]
		protected override PlatformInitialize GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000290")]
	public sealed class Packet : IDisposable
	{
		[Token(Token = "0x4000E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly ulong size;

		[Token(Token = "0x4000E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly IntPtr packetHandle;

		[Token(Token = "0x17000192")]
		public ulong SenderID
		{
			[Token(Token = "0x6001261")]
			[Address(RVA = "0xBBE47C", Offset = "0xBBE47C", VA = "0xBBE47C")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000193")]
		public ulong Size
		{
			[Token(Token = "0x6001262")]
			[Address(RVA = "0xBBE4E8", Offset = "0xBBE4E8", VA = "0xBBE4E8")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000194")]
		public SendPolicy Policy
		{
			[Token(Token = "0x6001263")]
			[Address(RVA = "0xBBE4F0", Offset = "0xBBE4F0", VA = "0xBBE4F0")]
			get
			{
				return default(SendPolicy);
			}
		}

		[Token(Token = "0x600125F")]
		[Address(RVA = "0xBBD45C", Offset = "0xBBD45C", VA = "0xBBD45C")]
		public Packet(IntPtr packetHandle)
		{
		}

		[Token(Token = "0x6001260")]
		[Address(RVA = "0xBBE328", Offset = "0xBBE328", VA = "0xBBE328")]
		public ulong ReadBytes(byte[] destination)
		{
			return default(ulong);
		}

		[Token(Token = "0x6001264")]
		[Address(RVA = "0xBBE55C", Offset = "0xBBE55C", VA = "0xBBE55C", Slot = "1")]
		~Packet()
		{
		}

		[Token(Token = "0x6001265")]
		[Address(RVA = "0xBBE5C4", Offset = "0xBBE5C4", VA = "0xBBE5C4", Slot = "4")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x2000291")]
	public enum PartyUpdateAction
	{
		[Token(Token = "0x4000E7C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E7290", Offset = "0x6E7290")]
		Unknown,
		[Token(Token = "0x4000E7D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E72C8", Offset = "0x6E72C8")]
		Join,
		[Token(Token = "0x4000E7E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E7300", Offset = "0x6E7300")]
		Leave,
		[Token(Token = "0x4000E7F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E7338", Offset = "0x6E7338")]
		Invite,
		[Token(Token = "0x4000E80")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E7370", Offset = "0x6E7370")]
		Uninvite
	}
	[Token(Token = "0x2000292")]
	public enum PeerConnectionState
	{
		[Token(Token = "0x4000E82")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E73A8", Offset = "0x6E73A8")]
		Unknown,
		[Token(Token = "0x4000E83")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E73E0", Offset = "0x6E73E0")]
		Connected,
		[Token(Token = "0x4000E84")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E7418", Offset = "0x6E7418")]
		Timeout,
		[Token(Token = "0x4000E85")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E7450", Offset = "0x6E7450")]
		Closed
	}
	[Token(Token = "0x2000293")]
	public enum PermissionGrantStatus
	{
		[Token(Token = "0x4000E87")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E7488", Offset = "0x6E7488")]
		Unknown,
		[Token(Token = "0x4000E88")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E74C0", Offset = "0x6E74C0")]
		Granted,
		[Token(Token = "0x4000E89")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E74F8", Offset = "0x6E74F8")]
		Denied,
		[Token(Token = "0x4000E8A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E7530", Offset = "0x6E7530")]
		Blocked
	}
	[Token(Token = "0x2000294")]
	public enum PermissionType
	{
		[Token(Token = "0x4000E8C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E7568", Offset = "0x6E7568")]
		Unknown,
		[Token(Token = "0x4000E8D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E75A0", Offset = "0x6E75A0")]
		Microphone,
		[Token(Token = "0x4000E8E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E75D8", Offset = "0x6E75D8")]
		WriteExternalStorage
	}
	[Token(Token = "0x2000295")]
	public sealed class Core
	{
		[Token(Token = "0x4000E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool IsPlatformInitialized;

		[Token(Token = "0x4000E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public static bool LogMessages;

		[Token(Token = "0x6001266")]
		[Address(RVA = "0xBACC34", Offset = "0xBACC34", VA = "0xBACC34")]
		public static bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x6001267")]
		[Address(RVA = "0xBACC9C", Offset = "0xBACC9C", VA = "0xBACC9C")]
		internal static void ForceInitialized()
		{
		}

		[Token(Token = "0x6001268")]
		[Address(RVA = "0xBACD08", Offset = "0xBACD08", VA = "0xBACD08")]
		private static string getAppID([Optional] string appId)
		{
			return null;
		}

		[Token(Token = "0x6001269")]
		[Address(RVA = "0xBACEEC", Offset = "0xBACEEC", VA = "0xBACEEC")]
		public static Request<PlatformInitialize> AsyncInitialize([Optional] string appId)
		{
			return null;
		}

		[Token(Token = "0x600126A")]
		[Address(RVA = "0xBAD1A0", Offset = "0xBAD1A0", VA = "0xBAD1A0")]
		public static void Initialize([Optional] string appId)
		{
		}

		[Token(Token = "0x600126B")]
		[Address(RVA = "0xBACEA0", Offset = "0xBACEA0", VA = "0xBACEA0")]
		private static string GetAppIDFromConfig()
		{
			return null;
		}

		[Token(Token = "0x600126C")]
		[Address(RVA = "0xBAD4B8", Offset = "0xBAD4B8", VA = "0xBAD4B8")]
		public Core()
		{
		}
	}
	[Token(Token = "0x2000296")]
	public static class ApplicationLifecycle
	{
		[Token(Token = "0x600126E")]
		[Address(RVA = "0x91D938", Offset = "0x91D938", VA = "0x91D938")]
		public static LaunchDetails GetLaunchDetails()
		{
			return null;
		}
	}
	[Token(Token = "0x2000297")]
	public static class Rooms
	{
		[Token(Token = "0x600126F")]
		[Address(RVA = "0xBBF13C", Offset = "0xBBF13C", VA = "0xBBF13C")]
		public static Request<Oculus.Platform.Models.Room> UpdateDataStore(ulong roomID, Dictionary<string, string> data)
		{
			return null;
		}

		[Token(Token = "0x6001270")]
		[Address(RVA = "0xBBF398", Offset = "0xBBF398", VA = "0xBBF398")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6ED81C", Offset = "0x6ED81C")]
		public static void SetRoomInviteNotificationCallback(Message<string>.Callback callback)
		{
		}

		[Token(Token = "0x6001271")]
		[Address(RVA = "0xBBF414", Offset = "0xBBF414", VA = "0xBBF414")]
		public static Request<Oculus.Platform.Models.Room> CreateAndJoinPrivate(RoomJoinPolicy joinPolicy, uint maxUsers, bool subscribeToUpdates = false)
		{
			return null;
		}

		[Token(Token = "0x6001272")]
		[Address(RVA = "0xBBF548", Offset = "0xBBF548", VA = "0xBBF548")]
		public static Request<Oculus.Platform.Models.Room> CreateAndJoinPrivate2(RoomJoinPolicy joinPolicy, uint maxUsers, RoomOptions roomOptions)
		{
			return null;
		}

		[Token(Token = "0x6001273")]
		[Address(RVA = "0xBBF6A8", Offset = "0xBBF6A8", VA = "0xBBF6A8")]
		public static Request<Oculus.Platform.Models.Room> Get(ulong roomID)
		{
			return null;
		}

		[Token(Token = "0x6001274")]
		[Address(RVA = "0xBBF7C4", Offset = "0xBBF7C4", VA = "0xBBF7C4")]
		public static Request<Oculus.Platform.Models.Room> GetCurrent()
		{
			return null;
		}

		[Token(Token = "0x6001275")]
		[Address(RVA = "0xBBF8D0", Offset = "0xBBF8D0", VA = "0xBBF8D0")]
		public static Request<Oculus.Platform.Models.Room> GetCurrentForUser(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6001276")]
		[Address(RVA = "0xBBF9EC", Offset = "0xBBF9EC", VA = "0xBBF9EC")]
		public static Request<UserList> GetInvitableUsers()
		{
			return null;
		}

		[Token(Token = "0x6001277")]
		[Address(RVA = "0xBBFAF8", Offset = "0xBBFAF8", VA = "0xBBFAF8")]
		public static Request<UserList> GetInvitableUsers2([Optional] RoomOptions roomOptions)
		{
			return null;
		}

		[Token(Token = "0x6001278")]
		[Address(RVA = "0xBBFC40", Offset = "0xBBFC40", VA = "0xBBFC40")]
		public static Request<RoomList> GetModeratedRooms()
		{
			return null;
		}

		[Token(Token = "0x6001279")]
		[Address(RVA = "0xBBFD4C", Offset = "0xBBFD4C", VA = "0xBBFD4C")]
		public static Request<Oculus.Platform.Models.Room> InviteUser(ulong roomID, string inviteToken)
		{
			return null;
		}

		[Token(Token = "0x600127A")]
		[Address(RVA = "0xBBFE70", Offset = "0xBBFE70", VA = "0xBBFE70")]
		public static Request<Oculus.Platform.Models.Room> Join(ulong roomID, bool subscribeToUpdates = false)
		{
			return null;
		}

		[Token(Token = "0x600127B")]
		[Address(RVA = "0xBBFF94", Offset = "0xBBFF94", VA = "0xBBFF94")]
		public static Request<Oculus.Platform.Models.Room> Join2(ulong roomID, RoomOptions roomOptions)
		{
			return null;
		}

		[Token(Token = "0x600127C")]
		[Address(RVA = "0xBC00E4", Offset = "0xBC00E4", VA = "0xBC00E4")]
		public static Request<Oculus.Platform.Models.Room> KickUser(ulong roomID, ulong userID, int kickDurationSeconds)
		{
			return null;
		}

		[Token(Token = "0x600127D")]
		[Address(RVA = "0xBC0218", Offset = "0xBC0218", VA = "0xBC0218")]
		public static Request LaunchInvitableUserFlow(ulong roomID)
		{
			return null;
		}

		[Token(Token = "0x600127E")]
		[Address(RVA = "0xBC032C", Offset = "0xBC032C", VA = "0xBC032C")]
		public static Request<Oculus.Platform.Models.Room> Leave(ulong roomID)
		{
			return null;
		}

		[Token(Token = "0x600127F")]
		[Address(RVA = "0xBC0448", Offset = "0xBC0448", VA = "0xBC0448")]
		public static Request<Oculus.Platform.Models.Room> SetDescription(ulong roomID, string description)
		{
			return null;
		}

		[Token(Token = "0x6001280")]
		[Address(RVA = "0xBC056C", Offset = "0xBC056C", VA = "0xBC056C")]
		public static Request<Oculus.Platform.Models.Room> UpdateMembershipLockStatus(ulong roomID, RoomMembershipLockStatus membershipLockStatus)
		{
			return null;
		}

		[Token(Token = "0x6001281")]
		[Address(RVA = "0xBC0690", Offset = "0xBC0690", VA = "0xBC0690")]
		public static Request UpdateOwner(ulong roomID, ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6001282")]
		[Address(RVA = "0xBC07AC", Offset = "0xBC07AC", VA = "0xBC07AC")]
		public static Request<Oculus.Platform.Models.Room> UpdatePrivateRoomJoinPolicy(ulong roomID, RoomJoinPolicy newJoinPolicy)
		{
			return null;
		}

		[Token(Token = "0x6001283")]
		[Address(RVA = "0xBBF39C", Offset = "0xBBF39C", VA = "0xBBF39C")]
		public static void SetRoomInviteAcceptedNotificationCallback(Message<string>.Callback callback)
		{
		}

		[Token(Token = "0x6001284")]
		[Address(RVA = "0xBC08D0", Offset = "0xBC08D0", VA = "0xBC08D0")]
		public static void SetRoomInviteReceivedNotificationCallback(Message<RoomInviteNotification>.Callback callback)
		{
		}

		[Token(Token = "0x6001285")]
		[Address(RVA = "0xBC0948", Offset = "0xBC0948", VA = "0xBC0948")]
		public static void SetUpdateNotificationCallback(Message<Oculus.Platform.Models.Room>.Callback callback)
		{
		}

		[Token(Token = "0x6001286")]
		[Address(RVA = "0xBC09C0", Offset = "0xBC09C0", VA = "0xBC09C0")]
		public static Request<RoomList> GetNextRoomListPage(RoomList list)
		{
			return null;
		}
	}
	[Token(Token = "0x2000298")]
	public static class Matchmaking
	{
		[Token(Token = "0x20003FD")]
		public class CustomQuery
		{
			[Token(Token = "0x2000425")]
			public struct Criterion
			{
				[Token(Token = "0x4001535")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public string key;

				[Token(Token = "0x4001536")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public MatchmakingCriterionImportance importance;

				[Token(Token = "0x4001537")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public Dictionary<string, object> parameters;

				[Token(Token = "0x600191C")]
				[Address(RVA = "0x77C174", Offset = "0x77C174", VA = "0x77C174")]
				public Criterion(string key_, MatchmakingCriterionImportance importance_)
				{
				}
			}

			[Token(Token = "0x400148C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Dictionary<string, object> data;

			[Token(Token = "0x400148D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Criterion[] criteria;

			[Token(Token = "0x60018D2")]
			[Address(RVA = "0xBAEE48", Offset = "0xBAEE48", VA = "0xBAEE48")]
			public IntPtr ToUnmanaged()
			{
				return default(IntPtr);
			}

			[Token(Token = "0x60018D3")]
			[Address(RVA = "0xBB0324", Offset = "0xBB0324", VA = "0xBB0324")]
			public CustomQuery()
			{
			}
		}

		[Token(Token = "0x6001287")]
		[Address(RVA = "0xBAE984", Offset = "0xBAE984", VA = "0xBAE984")]
		public static Request ReportResultsInsecure(ulong roomID, Dictionary<string, int> data)
		{
			return null;
		}

		[Token(Token = "0x6001288")]
		[Address(RVA = "0xBAEBE0", Offset = "0xBAEBE0", VA = "0xBAEBE0")]
		public static Request<MatchmakingStats> GetStats(string pool, uint maxLevel, MatchmakingStatApproach approach = MatchmakingStatApproach.Trailing)
		{
			return null;
		}

		[Token(Token = "0x6001289")]
		[Address(RVA = "0xBAED14", Offset = "0xBAED14", VA = "0xBAED14")]
		public static Request<MatchmakingBrowseResult> Browse(string pool, [Optional] CustomQuery customQueryData)
		{
			return null;
		}

		[Token(Token = "0x600128A")]
		[Address(RVA = "0xBAF180", Offset = "0xBAF180", VA = "0xBAF180")]
		public static Request<MatchmakingBrowseResult> Browse2(string pool, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x600128B")]
		[Address(RVA = "0xBAF320", Offset = "0xBAF320", VA = "0xBAF320")]
		public static Request Cancel(string pool, string requestHash)
		{
			return null;
		}

		[Token(Token = "0x600128C")]
		[Address(RVA = "0xBAF43C", Offset = "0xBAF43C", VA = "0xBAF43C")]
		public static Request Cancel()
		{
			return null;
		}

		[Token(Token = "0x600128D")]
		[Address(RVA = "0xBAF540", Offset = "0xBAF540", VA = "0xBAF540")]
		public static Request<MatchmakingEnqueueResultAndRoom> CreateAndEnqueueRoom(string pool, uint maxUsers, bool subscribeToUpdates = false, [Optional] CustomQuery customQueryData)
		{
			return null;
		}

		[Token(Token = "0x600128E")]
		[Address(RVA = "0xBAF68C", Offset = "0xBAF68C", VA = "0xBAF68C")]
		public static Request<MatchmakingEnqueueResultAndRoom> CreateAndEnqueueRoom2(string pool, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x600128F")]
		[Address(RVA = "0xBAF7DC", Offset = "0xBAF7DC", VA = "0xBAF7DC")]
		public static Request<Oculus.Platform.Models.Room> CreateRoom(string pool, uint maxUsers, bool subscribeToUpdates = false)
		{
			return null;
		}

		[Token(Token = "0x6001290")]
		[Address(RVA = "0xBAF910", Offset = "0xBAF910", VA = "0xBAF910")]
		public static Request<Oculus.Platform.Models.Room> CreateRoom2(string pool, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x6001291")]
		[Address(RVA = "0xBAFA60", Offset = "0xBAFA60", VA = "0xBAFA60")]
		public static Request<MatchmakingEnqueueResult> Enqueue(string pool, [Optional] CustomQuery customQueryData)
		{
			return null;
		}

		[Token(Token = "0x6001292")]
		[Address(RVA = "0xBAFB94", Offset = "0xBAFB94", VA = "0xBAFB94")]
		public static Request<MatchmakingEnqueueResult> Enqueue2(string pool, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x6001293")]
		[Address(RVA = "0xBAFCE4", Offset = "0xBAFCE4", VA = "0xBAFCE4")]
		public static Request<MatchmakingEnqueueResult> EnqueueRoom(ulong roomID, [Optional] CustomQuery customQueryData)
		{
			return null;
		}

		[Token(Token = "0x6001294")]
		[Address(RVA = "0xBAFE18", Offset = "0xBAFE18", VA = "0xBAFE18")]
		public static Request<MatchmakingEnqueueResult> EnqueueRoom2(ulong roomID, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x6001295")]
		[Address(RVA = "0xBAFF68", Offset = "0xBAFF68", VA = "0xBAFF68")]
		public static Request<MatchmakingAdminSnapshot> GetAdminSnapshot()
		{
			return null;
		}

		[Token(Token = "0x6001296")]
		[Address(RVA = "0xBB0074", Offset = "0xBB0074", VA = "0xBB0074")]
		public static Request<Oculus.Platform.Models.Room> JoinRoom(ulong roomID, bool subscribeToUpdates = false)
		{
			return null;
		}

		[Token(Token = "0x6001297")]
		[Address(RVA = "0xBB0198", Offset = "0xBB0198", VA = "0xBB0198")]
		public static Request StartMatch(ulong roomID)
		{
			return null;
		}

		[Token(Token = "0x6001298")]
		[Address(RVA = "0xBB02AC", Offset = "0xBB02AC", VA = "0xBB02AC")]
		public static void SetMatchFoundNotificationCallback(Message<Oculus.Platform.Models.Room>.Callback callback)
		{
		}
	}
	[Token(Token = "0x2000299")]
	public static class Net
	{
		[Token(Token = "0x6001299")]
		[Address(RVA = "0xBBD34C", Offset = "0xBBD34C", VA = "0xBBD34C")]
		public static Packet ReadPacket()
		{
			return null;
		}

		[Token(Token = "0x600129A")]
		[Address(RVA = "0xBBD51C", Offset = "0xBBD51C", VA = "0xBBD51C")]
		public static bool SendPacket(ulong userID, byte[] bytes, SendPolicy policy)
		{
			return default(bool);
		}

		[Token(Token = "0x600129B")]
		[Address(RVA = "0xBBD668", Offset = "0xBBD668", VA = "0xBBD668")]
		public static void Connect(ulong userID)
		{
		}

		[Token(Token = "0x600129C")]
		[Address(RVA = "0xBBD754", Offset = "0xBBD754", VA = "0xBBD754")]
		public static void Accept(ulong userID)
		{
		}

		[Token(Token = "0x600129D")]
		[Address(RVA = "0xBBD840", Offset = "0xBBD840", VA = "0xBBD840")]
		public static void Close(ulong userID)
		{
		}

		[Token(Token = "0x600129E")]
		[Address(RVA = "0xBBD92C", Offset = "0xBBD92C", VA = "0xBBD92C")]
		public static bool IsConnected(ulong userID)
		{
			return default(bool);
		}

		[Token(Token = "0x600129F")]
		[Address(RVA = "0xBBDA1C", Offset = "0xBBDA1C", VA = "0xBBDA1C")]
		public static bool SendPacketToCurrentRoom(byte[] bytes, SendPolicy policy)
		{
			return default(bool);
		}

		[Token(Token = "0x60012A0")]
		[Address(RVA = "0xBBDB54", Offset = "0xBBDB54", VA = "0xBBDB54")]
		public static bool AcceptForCurrentRoom()
		{
			return default(bool);
		}

		[Token(Token = "0x60012A1")]
		[Address(RVA = "0xBBDC30", Offset = "0xBBDC30", VA = "0xBBDC30")]
		public static void CloseForCurrentRoom()
		{
		}

		[Token(Token = "0x60012A2")]
		[Address(RVA = "0xBBDD08", Offset = "0xBBDD08", VA = "0xBBDD08")]
		public static Request<PingResult> Ping(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x60012A3")]
		[Address(RVA = "0xBBDE24", Offset = "0xBBDE24", VA = "0xBBDE24")]
		public static void SetConnectionStateChangedCallback(Message<Oculus.Platform.Models.NetworkingPeer>.Callback callback)
		{
		}

		[Token(Token = "0x60012A4")]
		[Address(RVA = "0xBBDE9C", Offset = "0xBBDE9C", VA = "0xBBDE9C")]
		public static void SetPeerConnectRequestCallback(Message<Oculus.Platform.Models.NetworkingPeer>.Callback callback)
		{
		}

		[Token(Token = "0x60012A5")]
		[Address(RVA = "0xBBDF14", Offset = "0xBBDF14", VA = "0xBBDF14")]
		public static void SetPingResultNotificationCallback(Message<PingResult>.Callback callback)
		{
		}
	}
	[Token(Token = "0x200029A")]
	public static class Leaderboards
	{
		[Token(Token = "0x60012A6")]
		[Address(RVA = "0xBADFC8", Offset = "0xBADFC8", VA = "0xBADFC8")]
		public static Request<LeaderboardEntryList> GetNextEntries(LeaderboardEntryList list)
		{
			return null;
		}

		[Token(Token = "0x60012A7")]
		[Address(RVA = "0xBAE0F8", Offset = "0xBAE0F8", VA = "0xBAE0F8")]
		public static Request<LeaderboardEntryList> GetPreviousEntries(LeaderboardEntryList list)
		{
			return null;
		}

		[Token(Token = "0x60012A8")]
		[Address(RVA = "0xBAE228", Offset = "0xBAE228", VA = "0xBAE228")]
		public static Request<LeaderboardEntryList> GetEntries(string leaderboardName, int limit, LeaderboardFilterType filter, LeaderboardStartAt startAt)
		{
			return null;
		}

		[Token(Token = "0x60012A9")]
		[Address(RVA = "0xBAE364", Offset = "0xBAE364", VA = "0xBAE364")]
		public static Request<LeaderboardEntryList> GetEntriesAfterRank(string leaderboardName, int limit, ulong afterRank)
		{
			return null;
		}

		[Token(Token = "0x60012AA")]
		[Address(RVA = "0xBAE498", Offset = "0xBAE498", VA = "0xBAE498")]
		public static Request<bool> WriteEntry(string leaderboardName, long score, [Optional] byte[] extraData, bool forceUpdate = false)
		{
			return null;
		}
	}
	[Token(Token = "0x200029B")]
	public static class Voip
	{
		[Token(Token = "0x60012AB")]
		[Address(RVA = "0xC33914", Offset = "0xC33914", VA = "0xC33914")]
		public static void Start(ulong userID)
		{
		}

		[Token(Token = "0x60012AC")]
		[Address(RVA = "0xC33C64", Offset = "0xC33C64", VA = "0xC33C64")]
		public static void Accept(ulong userID)
		{
		}

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0xC33A00", Offset = "0xC33A00", VA = "0xC33A00")]
		public static void Stop(ulong userID)
		{
		}

		[Token(Token = "0x60012AE")]
		[Address(RVA = "0xC35340", Offset = "0xC35340", VA = "0xC35340")]
		public static void SetMicrophoneFilterCallback(CAPI.FilterCallback callback)
		{
		}

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0xC35464", Offset = "0xC35464", VA = "0xC35464")]
		public static void SetMicrophoneMuted(VoipMuteState state)
		{
		}

		[Token(Token = "0x60012B0")]
		[Address(RVA = "0xC35550", Offset = "0xC35550", VA = "0xC35550")]
		public static VoipMuteState GetSystemVoipMicrophoneMuted()
		{
			return default(VoipMuteState);
		}

		[Token(Token = "0x60012B1")]
		[Address(RVA = "0xC3562C", Offset = "0xC3562C", VA = "0xC3562C")]
		public static SystemVoipStatus GetSystemVoipStatus()
		{
			return default(SystemVoipStatus);
		}

		[Token(Token = "0x60012B2")]
		[Address(RVA = "0xC35708", Offset = "0xC35708", VA = "0xC35708")]
		public static VoipDtxState GetIsConnectionUsingDtx(ulong peerID)
		{
			return default(VoipDtxState);
		}

		[Token(Token = "0x60012B3")]
		[Address(RVA = "0xC357F8", Offset = "0xC357F8", VA = "0xC357F8")]
		public static VoipBitrate GetLocalBitrate(ulong peerID)
		{
			return default(VoipBitrate);
		}

		[Token(Token = "0x60012B4")]
		[Address(RVA = "0xC358E8", Offset = "0xC358E8", VA = "0xC358E8")]
		public static VoipBitrate GetRemoteBitrate(ulong peerID)
		{
			return default(VoipBitrate);
		}

		[Token(Token = "0x60012B5")]
		[Address(RVA = "0xC359D8", Offset = "0xC359D8", VA = "0xC359D8")]
		public static void SetNewConnectionOptions(VoipOptions voipOptions)
		{
		}

		[Token(Token = "0x60012B6")]
		[Address(RVA = "0xC35AD8", Offset = "0xC35AD8", VA = "0xC35AD8")]
		public static Request<SystemVoipState> SetSystemVoipSuppressed(bool suppressed)
		{
			return null;
		}

		[Token(Token = "0x60012B7")]
		[Address(RVA = "0xC33824", Offset = "0xC33824", VA = "0xC33824")]
		public static void SetVoipConnectRequestCallback(Message<Oculus.Platform.Models.NetworkingPeer>.Callback callback)
		{
		}

		[Token(Token = "0x60012B8")]
		[Address(RVA = "0xC3389C", Offset = "0xC3389C", VA = "0xC3389C")]
		public static void SetVoipStateChangeCallback(Message<Oculus.Platform.Models.NetworkingPeer>.Callback callback)
		{
		}

		[Token(Token = "0x60012B9")]
		[Address(RVA = "0xC35BF4", Offset = "0xC35BF4", VA = "0xC35BF4")]
		public static void SetSystemVoipStateNotificationCallback(Message<SystemVoipState>.Callback callback)
		{
		}
	}
	[Token(Token = "0x200029C")]
	public static class Achievements
	{
		[Token(Token = "0x60012BA")]
		[Address(RVA = "0x91C1A0", Offset = "0x91C1A0", VA = "0x91C1A0")]
		public static Request<AchievementUpdate> AddCount(string name, ulong count)
		{
			return null;
		}

		[Token(Token = "0x60012BB")]
		[Address(RVA = "0x91C378", Offset = "0x91C378", VA = "0x91C378")]
		public static Request<AchievementUpdate> AddFields(string name, string fields)
		{
			return null;
		}

		[Token(Token = "0x60012BC")]
		[Address(RVA = "0x91C56C", Offset = "0x91C56C", VA = "0x91C56C")]
		public static Request<AchievementDefinitionList> GetAllDefinitions()
		{
			return null;
		}

		[Token(Token = "0x60012BD")]
		[Address(RVA = "0x91C6E8", Offset = "0x91C6E8", VA = "0x91C6E8")]
		public static Request<AchievementProgressList> GetAllProgress()
		{
			return null;
		}

		[Token(Token = "0x60012BE")]
		[Address(RVA = "0x91C864", Offset = "0x91C864", VA = "0x91C864")]
		public static Request<AchievementDefinitionList> GetDefinitionsByName(string[] names)
		{
			return null;
		}

		[Token(Token = "0x60012BF")]
		[Address(RVA = "0x91CAE4", Offset = "0x91CAE4", VA = "0x91CAE4")]
		public static Request<AchievementProgressList> GetProgressByName(string[] names)
		{
			return null;
		}

		[Token(Token = "0x60012C0")]
		[Address(RVA = "0x91CD64", Offset = "0x91CD64", VA = "0x91CD64")]
		public static Request<AchievementUpdate> Unlock(string name)
		{
			return null;
		}

		[Token(Token = "0x60012C1")]
		[Address(RVA = "0x91CF24", Offset = "0x91CF24", VA = "0x91CF24")]
		public static Request<AchievementDefinitionList> GetNextAchievementDefinitionListPage(AchievementDefinitionList list)
		{
			return null;
		}

		[Token(Token = "0x60012C2")]
		[Address(RVA = "0x91D144", Offset = "0x91D144", VA = "0x91D144")]
		public static Request<AchievementProgressList> GetNextAchievementProgressListPage(AchievementProgressList list)
		{
			return null;
		}
	}
	[Token(Token = "0x200029D")]
	public static class Application
	{
		[Token(Token = "0x60012C3")]
		[Address(RVA = "0x91D590", Offset = "0x91D590", VA = "0x91D590")]
		public static Request<ApplicationVersion> GetVersion()
		{
			return null;
		}

		[Token(Token = "0x60012C4")]
		[Address(RVA = "0x91D70C", Offset = "0x91D70C", VA = "0x91D70C")]
		public static Request<string> LaunchOtherApp(ulong appID, [Optional] ApplicationOptions deeplink_options)
		{
			return null;
		}
	}
	[Token(Token = "0x200029E")]
	public static class AssetFile
	{
		[Token(Token = "0x60012C5")]
		[Address(RVA = "0x91DD78", Offset = "0x91DD78", VA = "0x91DD78")]
		public static Request<AssetFileDeleteResult> Delete(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x60012C6")]
		[Address(RVA = "0x91DF10", Offset = "0x91DF10", VA = "0x91DF10")]
		public static Request<AssetFileDeleteResult> DeleteById(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x60012C7")]
		[Address(RVA = "0x91E0A8", Offset = "0x91E0A8", VA = "0x91E0A8")]
		public static Request<AssetFileDeleteResult> DeleteByName(string assetFileName)
		{
			return null;
		}

		[Token(Token = "0x60012C8")]
		[Address(RVA = "0x91E268", Offset = "0x91E268", VA = "0x91E268")]
		public static Request<AssetFileDownloadResult> Download(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x60012C9")]
		[Address(RVA = "0x91E400", Offset = "0x91E400", VA = "0x91E400")]
		public static Request<AssetFileDownloadResult> DownloadById(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x60012CA")]
		[Address(RVA = "0x91E598", Offset = "0x91E598", VA = "0x91E598")]
		public static Request<AssetFileDownloadResult> DownloadByName(string assetFileName)
		{
			return null;
		}

		[Token(Token = "0x60012CB")]
		[Address(RVA = "0x91E758", Offset = "0x91E758", VA = "0x91E758")]
		public static Request<AssetFileDownloadCancelResult> DownloadCancel(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x60012CC")]
		[Address(RVA = "0x91E8F0", Offset = "0x91E8F0", VA = "0x91E8F0")]
		public static Request<AssetFileDownloadCancelResult> DownloadCancelById(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x60012CD")]
		[Address(RVA = "0x91EA88", Offset = "0x91EA88", VA = "0x91EA88")]
		public static Request<AssetFileDownloadCancelResult> DownloadCancelByName(string assetFileName)
		{
			return null;
		}

		[Token(Token = "0x60012CE")]
		[Address(RVA = "0x91EC48", Offset = "0x91EC48", VA = "0x91EC48")]
		public static Request<AssetDetailsList> GetList()
		{
			return null;
		}

		[Token(Token = "0x60012CF")]
		[Address(RVA = "0x91EDC4", Offset = "0x91EDC4", VA = "0x91EDC4")]
		public static Request<AssetDetails> Status(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x60012D0")]
		[Address(RVA = "0x91EF5C", Offset = "0x91EF5C", VA = "0x91EF5C")]
		public static Request<AssetDetails> StatusById(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x60012D1")]
		[Address(RVA = "0x91F0F4", Offset = "0x91F0F4", VA = "0x91F0F4")]
		public static Request<AssetDetails> StatusByName(string assetFileName)
		{
			return null;
		}

		[Token(Token = "0x60012D2")]
		[Address(RVA = "0x91F2B4", Offset = "0x91F2B4", VA = "0x91F2B4")]
		public static void SetDownloadUpdateNotificationCallback(Message<AssetFileDownloadUpdate>.Callback callback)
		{
		}
	}
	[Token(Token = "0x200029F")]
	public static class Avatar
	{
	}
	[Token(Token = "0x20002A0")]
	public static class Cal
	{
	}
	[Token(Token = "0x20002A1")]
	public static class CloudStorage
	{
		[Token(Token = "0x60012D3")]
		[Address(RVA = "0xBAC028", Offset = "0xBAC028", VA = "0xBAC028")]
		public static Request<CloudStorageUpdateResponse> Delete(string bucket, string key)
		{
			return null;
		}

		[Token(Token = "0x60012D4")]
		[Address(RVA = "0xBAC14C", Offset = "0xBAC14C", VA = "0xBAC14C")]
		public static Request<CloudStorageData> Load(string bucket, string key)
		{
			return null;
		}

		[Token(Token = "0x60012D5")]
		[Address(RVA = "0xBAC270", Offset = "0xBAC270", VA = "0xBAC270")]
		public static Request<CloudStorageMetadataList> LoadBucketMetadata(string bucket)
		{
			return null;
		}

		[Token(Token = "0x60012D6")]
		[Address(RVA = "0xBAC38C", Offset = "0xBAC38C", VA = "0xBAC38C")]
		public static Request<CloudStorageConflictMetadata> LoadConflictMetadata(string bucket, string key)
		{
			return null;
		}

		[Token(Token = "0x60012D7")]
		[Address(RVA = "0xBAC4B0", Offset = "0xBAC4B0", VA = "0xBAC4B0")]
		public static Request<CloudStorageData> LoadHandle(string handle)
		{
			return null;
		}

		[Token(Token = "0x60012D8")]
		[Address(RVA = "0xBAC5CC", Offset = "0xBAC5CC", VA = "0xBAC5CC")]
		public static Request<CloudStorageMetadata> LoadMetadata(string bucket, string key)
		{
			return null;
		}

		[Token(Token = "0x60012D9")]
		[Address(RVA = "0xBAC6F0", Offset = "0xBAC6F0", VA = "0xBAC6F0")]
		public static Request<CloudStorageUpdateResponse> ResolveKeepLocal(string bucket, string key, string remoteHandle)
		{
			return null;
		}

		[Token(Token = "0x60012DA")]
		[Address(RVA = "0xBAC824", Offset = "0xBAC824", VA = "0xBAC824")]
		public static Request<CloudStorageUpdateResponse> ResolveKeepRemote(string bucket, string key, string remoteHandle)
		{
			return null;
		}

		[Token(Token = "0x60012DB")]
		[Address(RVA = "0xBAC958", Offset = "0xBAC958", VA = "0xBAC958")]
		public static Request<CloudStorageUpdateResponse> Save(string bucket, string key, byte[] data, long counter, string extraData)
		{
			return null;
		}

		[Token(Token = "0x60012DC")]
		[Address(RVA = "0xBACAB8", Offset = "0xBACAB8", VA = "0xBACAB8")]
		public static Request<CloudStorageMetadataList> GetNextCloudStorageMetadataListPage(CloudStorageMetadataList list)
		{
			return null;
		}
	}
	[Token(Token = "0x20002A2")]
	public static class CloudStorage2
	{
	}
	[Token(Token = "0x20002A3")]
	public static class Entitlements
	{
		[Token(Token = "0x60012DD")]
		[Address(RVA = "0xBAD4C4", Offset = "0xBAD4C4", VA = "0xBAD4C4")]
		public static Request IsUserEntitledToApplication()
		{
			return null;
		}
	}
	[Token(Token = "0x20002A4")]
	public static class GraphAPI
	{
	}
	[Token(Token = "0x20002A5")]
	public static class HTTP
	{
	}
	[Token(Token = "0x20002A6")]
	public static class IAP
	{
		[Token(Token = "0x60012DE")]
		[Address(RVA = "0xBAD5F4", Offset = "0xBAD5F4", VA = "0xBAD5F4")]
		public static Request ConsumePurchase(string sku)
		{
			return null;
		}

		[Token(Token = "0x60012DF")]
		[Address(RVA = "0xBAD708", Offset = "0xBAD708", VA = "0xBAD708")]
		public static Request<ProductList> GetProductsBySKU(string[] skus)
		{
			return null;
		}

		[Token(Token = "0x60012E0")]
		[Address(RVA = "0xBAD838", Offset = "0xBAD838", VA = "0xBAD838")]
		public static Request<PurchaseList> GetViewerPurchases()
		{
			return null;
		}

		[Token(Token = "0x60012E1")]
		[Address(RVA = "0xBAD944", Offset = "0xBAD944", VA = "0xBAD944")]
		public static Request<Purchase> LaunchCheckoutFlow(string sku)
		{
			return null;
		}

		[Token(Token = "0x60012E2")]
		[Address(RVA = "0xBADAA8", Offset = "0xBADAA8", VA = "0xBADAA8")]
		public static Request<ProductList> GetNextProductListPage(ProductList list)
		{
			return null;
		}

		[Token(Token = "0x60012E3")]
		[Address(RVA = "0xBADC24", Offset = "0xBADC24", VA = "0xBADC24")]
		public static Request<PurchaseList> GetNextPurchaseListPage(PurchaseList list)
		{
			return null;
		}
	}
	[Token(Token = "0x20002A7")]
	public static class LanguagePack
	{
		[Token(Token = "0x60012E4")]
		[Address(RVA = "0xBADDA0", Offset = "0xBADDA0", VA = "0xBADDA0")]
		public static Request<AssetDetails> GetCurrent()
		{
			return null;
		}

		[Token(Token = "0x60012E5")]
		[Address(RVA = "0xBADEAC", Offset = "0xBADEAC", VA = "0xBADEAC")]
		public static Request<AssetFileDownloadResult> SetCurrent(string tag)
		{
			return null;
		}
	}
	[Token(Token = "0x20002A8")]
	public static class Livestreaming
	{
		[Token(Token = "0x60012E6")]
		[Address(RVA = "0xBAE5E8", Offset = "0xBAE5E8", VA = "0xBAE5E8")]
		public static Request<LivestreamingStatus> GetStatus()
		{
			return null;
		}

		[Token(Token = "0x60012E7")]
		[Address(RVA = "0xBAE6F4", Offset = "0xBAE6F4", VA = "0xBAE6F4")]
		public static Request<LivestreamingStatus> PauseStream()
		{
			return null;
		}

		[Token(Token = "0x60012E8")]
		[Address(RVA = "0xBAE800", Offset = "0xBAE800", VA = "0xBAE800")]
		public static Request<LivestreamingStatus> ResumeStream()
		{
			return null;
		}

		[Token(Token = "0x60012E9")]
		[Address(RVA = "0xBAE90C", Offset = "0xBAE90C", VA = "0xBAE90C")]
		public static void SetStatusUpdateNotificationCallback(Message<LivestreamingStatus>.Callback callback)
		{
		}
	}
	[Token(Token = "0x20002A9")]
	public static class Media
	{
		[Token(Token = "0x60012EA")]
		[Address(RVA = "0xBB0A34", Offset = "0xBB0A34", VA = "0xBB0A34")]
		public static Request<ShareMediaResult> ShareToFacebook(string postTextSuggestion, string filePath, MediaContentType contentType)
		{
			return null;
		}
	}
	[Token(Token = "0x20002AA")]
	public static class Notifications
	{
		[Token(Token = "0x60012EB")]
		[Address(RVA = "0xBBDF8C", Offset = "0xBBDF8C", VA = "0xBBDF8C")]
		public static Request<RoomInviteNotificationList> GetRoomInviteNotifications()
		{
			return null;
		}

		[Token(Token = "0x60012EC")]
		[Address(RVA = "0xBBE098", Offset = "0xBBE098", VA = "0xBBE098")]
		public static Request MarkAsRead(ulong notificationID)
		{
			return null;
		}

		[Token(Token = "0x60012ED")]
		[Address(RVA = "0xBBE1AC", Offset = "0xBBE1AC", VA = "0xBBE1AC")]
		public static Request<RoomInviteNotificationList> GetNextRoomInviteNotificationListPage(RoomInviteNotificationList list)
		{
			return null;
		}
	}
	[Token(Token = "0x20002AB")]
	public static class Parties
	{
		[Token(Token = "0x60012EE")]
		[Address(RVA = "0xBBE65C", Offset = "0xBBE65C", VA = "0xBBE65C")]
		public static Request<Party> GetCurrent()
		{
			return null;
		}

		[Token(Token = "0x60012EF")]
		[Address(RVA = "0xBBE768", Offset = "0xBBE768", VA = "0xBBE768")]
		public static void SetPartyUpdateNotificationCallback(Message<PartyUpdateNotification>.Callback callback)
		{
		}
	}
	[Token(Token = "0x20002AC")]
	public static class Users
	{
		[Token(Token = "0x60012F0")]
		[Address(RVA = "0xC1E698", Offset = "0xC1E698", VA = "0xC1E698")]
		public static Request<User> Get(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x60012F1")]
		[Address(RVA = "0xC34890", Offset = "0xC34890", VA = "0xC34890")]
		public static Request<string> GetAccessToken()
		{
			return null;
		}

		[Token(Token = "0x60012F2")]
		[Address(RVA = "0xC1E58C", Offset = "0xC1E58C", VA = "0xC1E58C")]
		public static Request<User> GetLoggedInUser()
		{
			return null;
		}

		[Token(Token = "0x60012F3")]
		[Address(RVA = "0xC1E7B4", Offset = "0xC1E7B4", VA = "0xC1E7B4")]
		public static Request<UserList> GetLoggedInUserFriends()
		{
			return null;
		}

		[Token(Token = "0x60012F4")]
		[Address(RVA = "0xC3499C", Offset = "0xC3499C", VA = "0xC3499C")]
		public static Request<UserAndRoomList> GetLoggedInUserFriendsAndRooms()
		{
			return null;
		}

		[Token(Token = "0x60012F5")]
		[Address(RVA = "0xC34AA8", Offset = "0xC34AA8", VA = "0xC34AA8")]
		public static Request<UserAndRoomList> GetLoggedInUserRecentlyMetUsersAndRooms([Optional] UserOptions userOptions)
		{
			return null;
		}

		[Token(Token = "0x60012F6")]
		[Address(RVA = "0xC34BF0", Offset = "0xC34BF0", VA = "0xC34BF0")]
		public static Request<OrgScopedID> GetOrgScopedID(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x60012F7")]
		[Address(RVA = "0xC34D0C", Offset = "0xC34D0C", VA = "0xC34D0C")]
		public static Request<SdkAccountList> GetSdkAccounts()
		{
			return null;
		}

		[Token(Token = "0x60012F8")]
		[Address(RVA = "0xC1E480", Offset = "0xC1E480", VA = "0xC1E480")]
		public static Request<UserProof> GetUserProof()
		{
			return null;
		}

		[Token(Token = "0x60012F9")]
		[Address(RVA = "0xC34E18", Offset = "0xC34E18", VA = "0xC34E18")]
		public static Request<LaunchFriendRequestFlowResult> LaunchFriendRequestFlow(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x60012FA")]
		[Address(RVA = "0xC34F34", Offset = "0xC34F34", VA = "0xC34F34")]
		public static Request LaunchProfile(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x60012FB")]
		[Address(RVA = "0xC35048", Offset = "0xC35048", VA = "0xC35048")]
		public static Request<UserAndRoomList> GetNextUserAndRoomListPage(UserAndRoomList list)
		{
			return null;
		}

		[Token(Token = "0x60012FC")]
		[Address(RVA = "0xC351C4", Offset = "0xC351C4", VA = "0xC351C4")]
		public static Request<UserList> GetNextUserListPage(UserList list)
		{
			return null;
		}
	}
	[Token(Token = "0x20002AD")]
	public enum PlatformInitializeResult
	{
		[Token(Token = "0x4000E92")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E7610", Offset = "0x6E7610")]
		Success = 0,
		[Token(Token = "0x4000E93")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E7648", Offset = "0x6E7648")]
		Uninitialized = -1,
		[Token(Token = "0x4000E94")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E7680", Offset = "0x6E7680")]
		PreLoaded = -2,
		[Token(Token = "0x4000E95")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E76B8", Offset = "0x6E76B8")]
		FileInvalid = -3,
		[Token(Token = "0x4000E96")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E76F0", Offset = "0x6E76F0")]
		SignatureInvalid = -4,
		[Token(Token = "0x4000E97")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E7728", Offset = "0x6E7728")]
		UnableToVerify = -5,
		[Token(Token = "0x4000E98")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E7760", Offset = "0x6E7760")]
		VersionMismatch = -6,
		[Token(Token = "0x4000E99")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E7798", Offset = "0x6E7798")]
		Unknown = -7,
		[Token(Token = "0x4000E9A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E77D0", Offset = "0x6E77D0")]
		InvalidCredentials = -8,
		[Token(Token = "0x4000E9B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E7808", Offset = "0x6E7808")]
		NotEntitled = -9
	}
	[Token(Token = "0x20002AE")]
	public static class PlatformInternal
	{
		[Token(Token = "0x20003FE")]
		public enum MessageTypeInternal : uint
		{
			[Token(Token = "0x400148F")]
			Application_ExecuteCoordinatedLaunch = 645772532u,
			[Token(Token = "0x4001490")]
			Application_GetInstalledApplications = 1376744524u,
			[Token(Token = "0x4001491")]
			Avatar_UpdateMetaData = 2077219214u,
			[Token(Token = "0x4001492")]
			Cal_FinalizeApplication = 497667029u,
			[Token(Token = "0x4001493")]
			Cal_GetSuggestedApplications = 1450209301u,
			[Token(Token = "0x4001494")]
			Cal_ProposeApplication = 1317270237u,
			[Token(Token = "0x4001495")]
			CloudStorage2_GetUserDirectoryPath = 1990471406u,
			[Token(Token = "0x4001496")]
			GraphAPI_Get = 822018158u,
			[Token(Token = "0x4001497")]
			GraphAPI_Post = 1990567876u,
			[Token(Token = "0x4001498")]
			HTTP_Get = 1874211363u,
			[Token(Token = "0x4001499")]
			HTTP_GetToFile = 1317133401u,
			[Token(Token = "0x400149A")]
			HTTP_MultiPartPost = 1480774160u,
			[Token(Token = "0x400149B")]
			HTTP_Post = 1798743375u,
			[Token(Token = "0x400149C")]
			Livestreaming_IsAllowedForApplication = 191729014u,
			[Token(Token = "0x400149D")]
			Livestreaming_StartPartyStream = 2066701532u,
			[Token(Token = "0x400149E")]
			Livestreaming_StartStream = 1343932350u,
			[Token(Token = "0x400149F")]
			Livestreaming_StopPartyStream = 661065560u,
			[Token(Token = "0x40014A0")]
			Livestreaming_StopStream = 1155796426u,
			[Token(Token = "0x40014A1")]
			Livestreaming_UpdateCommentsOverlayVisibility = 528318516u,
			[Token(Token = "0x40014A2")]
			Livestreaming_UpdateMicStatus = 475495815u,
			[Token(Token = "0x40014A3")]
			Party_Create = 450042703u,
			[Token(Token = "0x40014A4")]
			Party_GatherInApplication = 1921499523u,
			[Token(Token = "0x40014A5")]
			Party_Get = 1586058173u,
			[Token(Token = "0x40014A6")]
			Party_GetCurrentForUser = 1489764138u,
			[Token(Token = "0x40014A7")]
			Party_Invite = 901104867u,
			[Token(Token = "0x40014A8")]
			Party_Join = 1744993395u,
			[Token(Token = "0x40014A9")]
			Party_Leave = 848430801u,
			[Token(Token = "0x40014AA")]
			Room_CreateOrUpdateAndJoinNamed = 2089683601u,
			[Token(Token = "0x40014AB")]
			Room_GetNamedRooms = 125660812u,
			[Token(Token = "0x40014AC")]
			Room_GetSocialRooms = 1636310390u,
			[Token(Token = "0x40014AD")]
			SystemPermissions_GetStatus = 493497353u,
			[Token(Token = "0x40014AE")]
			SystemPermissions_LaunchDeeplink = 442139697u,
			[Token(Token = "0x40014AF")]
			User_CancelRecordingForReportFlow = 65065289u,
			[Token(Token = "0x40014B0")]
			User_GetLinkedAccounts = 1469314134u,
			[Token(Token = "0x40014B1")]
			User_LaunchBlockFlow = 1876305192u,
			[Token(Token = "0x40014B2")]
			User_LaunchReportFlow = 1449304081u,
			[Token(Token = "0x40014B3")]
			User_LaunchReportFlow2 = 2139314275u,
			[Token(Token = "0x40014B4")]
			User_LaunchUnblockFlow = 346172055u,
			[Token(Token = "0x40014B5")]
			User_NewEntitledTestUser = 292822787u,
			[Token(Token = "0x40014B6")]
			User_NewTestUser = 921194380u,
			[Token(Token = "0x40014B7")]
			User_NewTestUserFriends = 517416647u,
			[Token(Token = "0x40014B8")]
			User_StartRecordingForReportFlow = 1819161571u,
			[Token(Token = "0x40014B9")]
			User_StopRecordingAndLaunchReportFlow = 1618513035u,
			[Token(Token = "0x40014BA")]
			User_StopRecordingAndLaunchReportFlow2 = 432190251u,
			[Token(Token = "0x40014BB")]
			User_TestUserCreateDeviceManifest = 1701884605u
		}

		[Token(Token = "0x20003FF")]
		public static class HTTP
		{
			[Token(Token = "0x60018D4")]
			[Address(RVA = "0xBBE840", Offset = "0xBBE840", VA = "0xBBE840")]
			public static void SetHttpTransferUpdateCallback(Message<HttpTransferUpdate>.Callback callback)
			{
			}
		}

		[Token(Token = "0x60012FD")]
		[Address(RVA = "0xBBE7E0", Offset = "0xBBE7E0", VA = "0xBBE7E0")]
		public static void CrashApplication()
		{
		}

		[Token(Token = "0x60012FE")]
		[Address(RVA = "0xBB37DC", Offset = "0xBB37DC", VA = "0xBB37DC")]
		internal static Message ParseMessageHandle(IntPtr messageHandle, Message.MessageType messageType)
		{
			return null;
		}
	}
	[Token(Token = "0x20002AF")]
	public sealed class PlatformSettings : ScriptableObject
	{
		[Token(Token = "0x4000E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string ovrAppID;

		[Token(Token = "0x4000E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string ovrMobileAppID;

		[Token(Token = "0x4000E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool ovrUseStandalonePlatform;

		[Token(Token = "0x4000E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		private bool ovrEnableARM64Support;

		[Token(Token = "0x4000EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PlatformSettings instance;

		[Token(Token = "0x17000195")]
		public static string AppID
		{
			[Token(Token = "0x60012FF")]
			[Address(RVA = "0xBAD498", Offset = "0xBAD498", VA = "0xBAD498")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001300")]
			[Address(RVA = "0xBBE9CC", Offset = "0xBBE9CC", VA = "0xBBE9CC")]
			set
			{
			}
		}

		[Token(Token = "0x17000196")]
		public static string MobileAppID
		{
			[Token(Token = "0x6001301")]
			[Address(RVA = "0xBAD478", Offset = "0xBAD478", VA = "0xBAD478")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001302")]
			[Address(RVA = "0xBBE9F8", Offset = "0xBBE9F8", VA = "0xBBE9F8")]
			set
			{
			}
		}

		[Token(Token = "0x17000197")]
		public static bool UseStandalonePlatform
		{
			[Token(Token = "0x6001303")]
			[Address(RVA = "0xBAD180", Offset = "0xBAD180", VA = "0xBAD180")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001304")]
			[Address(RVA = "0xBBEA24", Offset = "0xBBEA24", VA = "0xBBEA24")]
			set
			{
			}
		}

		[Token(Token = "0x17000198")]
		public static bool EnableARM64Support
		{
			[Token(Token = "0x6001305")]
			[Address(RVA = "0xBBEA54", Offset = "0xBBEA54", VA = "0xBBEA54")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001306")]
			[Address(RVA = "0xBBEA74", Offset = "0xBBEA74", VA = "0xBBEA74")]
			set
			{
			}
		}

		[Token(Token = "0x17000199")]
		public static PlatformSettings Instance
		{
			[Token(Token = "0x6001307")]
			[Address(RVA = "0xBBE8B8", Offset = "0xBBE8B8", VA = "0xBBE8B8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001308")]
			[Address(RVA = "0xBBEAA4", Offset = "0xBBEAA4", VA = "0xBBEAA4")]
			set
			{
			}
		}

		[Token(Token = "0x6001309")]
		[Address(RVA = "0xBBEAF8", Offset = "0xBBEAF8", VA = "0xBBEAF8")]
		public PlatformSettings()
		{
		}
	}
	[Token(Token = "0x20002B0")]
	public sealed class Request<T> : Request
	{
		[Token(Token = "0x600130A")]
		public Request(ulong requestID)
		{
		}

		[Token(Token = "0x600130B")]
		public Request<T> OnComplete(Message<T>.Callback callback)
		{
			return null;
		}
	}
	[Token(Token = "0x20002B1")]
	public class Request
	{
		[Token(Token = "0x4000EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E7880", Offset = "0x6E7880")]
		private ulong <RequestID>k__BackingField;

		[Token(Token = "0x1700019A")]
		public ulong RequestID
		{
			[Token(Token = "0x600130D")]
			[Address(RVA = "0xBBEB58", Offset = "0xBBEB58", VA = "0xBBEB58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ED854", Offset = "0x6ED854")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x600130E")]
			[Address(RVA = "0xBBEB60", Offset = "0xBBEB60", VA = "0xBBEB60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ED864", Offset = "0x6ED864")]
			set
			{
			}
		}

		[Token(Token = "0x600130C")]
		[Address(RVA = "0xBAD5C8", Offset = "0xBAD5C8", VA = "0xBAD5C8")]
		public Request(ulong requestID)
		{
		}

		[Token(Token = "0x600130F")]
		[Address(RVA = "0xBBEB68", Offset = "0xBBEB68", VA = "0xBBEB68")]
		public Request OnComplete(Message.Callback callback)
		{
			return null;
		}

		[Token(Token = "0x6001310")]
		[Address(RVA = "0xBABF90", Offset = "0xBABF90", VA = "0xBABF90")]
		public static void RunCallbacks(uint limit = 0u)
		{
		}
	}
	[Token(Token = "0x20002B2")]
	public enum RoomJoinPolicy
	{
		[Token(Token = "0x4000EA3")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E7890", Offset = "0x6E7890")]
		None,
		[Token(Token = "0x4000EA4")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E78C8", Offset = "0x6E78C8")]
		Everyone,
		[Token(Token = "0x4000EA5")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E7900", Offset = "0x6E7900")]
		FriendsOfMembers,
		[Token(Token = "0x4000EA6")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E7938", Offset = "0x6E7938")]
		FriendsOfOwner,
		[Token(Token = "0x4000EA7")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E7970", Offset = "0x6E7970")]
		InvitedUsers,
		[Token(Token = "0x4000EA8")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E79A8", Offset = "0x6E79A8")]
		Unknown
	}
	[Token(Token = "0x20002B3")]
	public enum RoomJoinability
	{
		[Token(Token = "0x4000EAA")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E79E0", Offset = "0x6E79E0")]
		Unknown,
		[Token(Token = "0x4000EAB")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E7A18", Offset = "0x6E7A18")]
		AreIn,
		[Token(Token = "0x4000EAC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E7A50", Offset = "0x6E7A50")]
		AreKicked,
		[Token(Token = "0x4000EAD")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E7A88", Offset = "0x6E7A88")]
		CanJoin,
		[Token(Token = "0x4000EAE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E7AC0", Offset = "0x6E7AC0")]
		IsFull,
		[Token(Token = "0x4000EAF")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E7AF8", Offset = "0x6E7AF8")]
		NoViewer,
		[Token(Token = "0x4000EB0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E7B30", Offset = "0x6E7B30")]
		PolicyPrevents
	}
	[Token(Token = "0x20002B4")]
	public enum RoomMembershipLockStatus
	{
		[Token(Token = "0x4000EB2")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E7B68", Offset = "0x6E7B68")]
		Unknown,
		[Token(Token = "0x4000EB3")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E7BA0", Offset = "0x6E7BA0")]
		Lock,
		[Token(Token = "0x4000EB4")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E7BD8", Offset = "0x6E7BD8")]
		Unlock
	}
	[Token(Token = "0x20002B5")]
	public class RoomOptions
	{
		[Token(Token = "0x4000EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x6001311")]
		[Address(RVA = "0xBBEBE4", Offset = "0xBBEBE4", VA = "0xBBEBE4")]
		public RoomOptions()
		{
		}

		[Token(Token = "0x6001312")]
		[Address(RVA = "0xBBEC5C", Offset = "0xBBEC5C", VA = "0xBBEC5C")]
		public void SetDataStore(string key, string value)
		{
		}

		[Token(Token = "0x6001313")]
		[Address(RVA = "0xBBECE0", Offset = "0xBBECE0", VA = "0xBBECE0")]
		public void ClearDataStore()
		{
		}

		[Token(Token = "0x6001314")]
		[Address(RVA = "0xBBED4C", Offset = "0xBBED4C", VA = "0xBBED4C")]
		public void SetExcludeRecentlyMet(bool value)
		{
		}

		[Token(Token = "0x6001315")]
		[Address(RVA = "0xBBEDC8", Offset = "0xBBEDC8", VA = "0xBBEDC8")]
		public void SetMaxUserResults(uint value)
		{
		}

		[Token(Token = "0x6001316")]
		[Address(RVA = "0xBBEE44", Offset = "0xBBEE44", VA = "0xBBEE44")]
		public void SetOrdering(UserOrdering value)
		{
		}

		[Token(Token = "0x6001317")]
		[Address(RVA = "0xBBEEC0", Offset = "0xBBEEC0", VA = "0xBBEEC0")]
		public void SetRecentlyMetTimeWindow(TimeWindow value)
		{
		}

		[Token(Token = "0x6001318")]
		[Address(RVA = "0xBBEF3C", Offset = "0xBBEF3C", VA = "0xBBEF3C")]
		public void SetRoomId(ulong value)
		{
		}

		[Token(Token = "0x6001319")]
		[Address(RVA = "0xBBEFB8", Offset = "0xBBEFB8", VA = "0xBBEFB8")]
		public void SetTurnOffUpdates(bool value)
		{
		}

		[Token(Token = "0x600131A")]
		[Address(RVA = "0xBBF034", Offset = "0xBBF034", VA = "0xBBF034")]
		public static explicit operator IntPtr(RoomOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600131B")]
		[Address(RVA = "0xBBF084", Offset = "0xBBF084", VA = "0xBBF084", Slot = "1")]
		~RoomOptions()
		{
		}
	}
	[Token(Token = "0x20002B6")]
	public enum RoomType
	{
		[Token(Token = "0x4000EB7")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E7C10", Offset = "0x6E7C10")]
		Unknown,
		[Token(Token = "0x4000EB8")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E7C48", Offset = "0x6E7C48")]
		Matchmaking,
		[Token(Token = "0x4000EB9")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E7C80", Offset = "0x6E7C80")]
		Moderated,
		[Token(Token = "0x4000EBA")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E7CB8", Offset = "0x6E7CB8")]
		Private,
		[Token(Token = "0x4000EBB")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E7CF0", Offset = "0x6E7CF0")]
		Solo
	}
	[Token(Token = "0x20002B7")]
	public enum SdkAccountType
	{
		[Token(Token = "0x4000EBD")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E7D28", Offset = "0x6E7D28")]
		Unknown,
		[Token(Token = "0x4000EBE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E7D60", Offset = "0x6E7D60")]
		Oculus,
		[Token(Token = "0x4000EBF")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E7D98", Offset = "0x6E7D98")]
		FacebookGameroom
	}
	[Token(Token = "0x20002B8")]
	public enum SendPolicy
	{
		[Token(Token = "0x4000EC1")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E7DD0", Offset = "0x6E7DD0")]
		Unreliable,
		[Token(Token = "0x4000EC2")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E7E08", Offset = "0x6E7E08")]
		Reliable,
		[Token(Token = "0x4000EC3")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E7E40", Offset = "0x6E7E40")]
		Unknown
	}
	[Token(Token = "0x20002B9")]
	public enum ServiceProvider
	{
		[Token(Token = "0x4000EC5")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E7E78", Offset = "0x6E7E78")]
		Unknown,
		[Token(Token = "0x4000EC6")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E7EB0", Offset = "0x6E7EB0")]
		Dropbox,
		[Token(Token = "0x4000EC7")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E7EE8", Offset = "0x6E7EE8")]
		Facebook,
		[Token(Token = "0x4000EC8")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E7F20", Offset = "0x6E7F20")]
		Google,
		[Token(Token = "0x4000EC9")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E7F58", Offset = "0x6E7F58")]
		Instagram,
		[Token(Token = "0x4000ECA")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E7F90", Offset = "0x6E7F90")]
		RemoteMedia
	}
	[Token(Token = "0x20002BA")]
	public enum ShareMediaStatus
	{
		[Token(Token = "0x4000ECC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E7FC8", Offset = "0x6E7FC8")]
		Unknown,
		[Token(Token = "0x4000ECD")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E8000", Offset = "0x6E8000")]
		Shared,
		[Token(Token = "0x4000ECE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E8038", Offset = "0x6E8038")]
		Canceled
	}
	[Token(Token = "0x20002BB")]
	public sealed class StandalonePlatform
	{
		[Token(Token = "0x2000400")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6E1C48", Offset = "0x6E1C48")]
		public delegate void UnityLogDelegate(IntPtr tag, IntPtr msg);

		[Token(Token = "0x600131C")]
		[Address(RVA = "0xC33F38", Offset = "0xC33F38", VA = "0xC33F38")]
		public Request<PlatformInitialize> InitializeInEditor()
		{
			return null;
		}

		[Token(Token = "0x600131D")]
		[Address(RVA = "0xC340EC", Offset = "0xC340EC", VA = "0xC340EC")]
		public StandalonePlatform()
		{
		}
	}
	[Token(Token = "0x20002BC")]
	public sealed class StandalonePlatformSettings
	{
		[Token(Token = "0x1700019B")]
		public static string OculusPlatformTestUserEmail
		{
			[Token(Token = "0x600131E")]
			[Address(RVA = "0xC3442C", Offset = "0xC3442C", VA = "0xC3442C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600131F")]
			[Address(RVA = "0xC3447C", Offset = "0xC3447C", VA = "0xC3447C")]
			set
			{
			}
		}

		[Token(Token = "0x1700019C")]
		public static string OculusPlatformTestUserPassword
		{
			[Token(Token = "0x6001320")]
			[Address(RVA = "0xC34480", Offset = "0xC34480", VA = "0xC34480")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001321")]
			[Address(RVA = "0xC344D0", Offset = "0xC344D0", VA = "0xC344D0")]
			set
			{
			}
		}

		[Token(Token = "0x1700019D")]
		public static string OculusPlatformTestUserAccessToken
		{
			[Token(Token = "0x6001322")]
			[Address(RVA = "0xC344D4", Offset = "0xC344D4", VA = "0xC344D4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001323")]
			[Address(RVA = "0xC34524", Offset = "0xC34524", VA = "0xC34524")]
			set
			{
			}
		}

		[Token(Token = "0x6001324")]
		[Address(RVA = "0xC34528", Offset = "0xC34528", VA = "0xC34528")]
		public StandalonePlatformSettings()
		{
		}
	}
	[Token(Token = "0x20002BD")]
	public enum SystemVoipStatus
	{
		[Token(Token = "0x4000ED0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E8070", Offset = "0x6E8070")]
		Unknown,
		[Token(Token = "0x4000ED1")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E80A8", Offset = "0x6E80A8")]
		Unavailable,
		[Token(Token = "0x4000ED2")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E80E0", Offset = "0x6E80E0")]
		Suppressed,
		[Token(Token = "0x4000ED3")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E8118", Offset = "0x6E8118")]
		Active
	}
	[Token(Token = "0x20002BE")]
	public enum TimeWindow
	{
		[Token(Token = "0x4000ED5")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E8150", Offset = "0x6E8150")]
		Unknown,
		[Token(Token = "0x4000ED6")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E8188", Offset = "0x6E8188")]
		OneHour,
		[Token(Token = "0x4000ED7")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E81C0", Offset = "0x6E81C0")]
		OneDay,
		[Token(Token = "0x4000ED8")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E81F8", Offset = "0x6E81F8")]
		OneWeek,
		[Token(Token = "0x4000ED9")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E8230", Offset = "0x6E8230")]
		ThirtyDays,
		[Token(Token = "0x4000EDA")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E8268", Offset = "0x6E8268")]
		NinetyDays
	}
	[Token(Token = "0x20002BF")]
	public class UserOptions
	{
		[Token(Token = "0x4000EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x6001325")]
		[Address(RVA = "0xC34530", Offset = "0xC34530", VA = "0xC34530")]
		public UserOptions()
		{
		}

		[Token(Token = "0x6001326")]
		[Address(RVA = "0xC345A8", Offset = "0xC345A8", VA = "0xC345A8")]
		public void SetMaxUsers(uint value)
		{
		}

		[Token(Token = "0x6001327")]
		[Address(RVA = "0xC34624", Offset = "0xC34624", VA = "0xC34624")]
		public void AddServiceProvider(ServiceProvider value)
		{
		}

		[Token(Token = "0x6001328")]
		[Address(RVA = "0xC346A0", Offset = "0xC346A0", VA = "0xC346A0")]
		public void ClearServiceProviders()
		{
		}

		[Token(Token = "0x6001329")]
		[Address(RVA = "0xC3470C", Offset = "0xC3470C", VA = "0xC3470C")]
		public void SetTimeWindow(TimeWindow value)
		{
		}

		[Token(Token = "0x600132A")]
		[Address(RVA = "0xC34788", Offset = "0xC34788", VA = "0xC34788")]
		public static explicit operator IntPtr(UserOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600132B")]
		[Address(RVA = "0xC347D8", Offset = "0xC347D8", VA = "0xC347D8", Slot = "1")]
		~UserOptions()
		{
		}
	}
	[Token(Token = "0x20002C0")]
	public enum UserOrdering
	{
		[Token(Token = "0x4000EDD")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E82A0", Offset = "0x6E82A0")]
		Unknown,
		[Token(Token = "0x4000EDE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E82D8", Offset = "0x6E82D8")]
		None,
		[Token(Token = "0x4000EDF")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E8310", Offset = "0x6E8310")]
		PresenceAlphabetical
	}
	[Token(Token = "0x20002C1")]
	public enum UserPresenceStatus
	{
		[Token(Token = "0x4000EE1")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E8348", Offset = "0x6E8348")]
		Unknown,
		[Token(Token = "0x4000EE2")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E8380", Offset = "0x6E8380")]
		Online,
		[Token(Token = "0x4000EE3")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E83B8", Offset = "0x6E83B8")]
		Offline
	}
	[Token(Token = "0x20002C2")]
	public class VoipAudioSourceHiLevel : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x2000401")]
		public class FilterReadDelegate : UnityEngine.MonoBehaviour
		{
			[Token(Token = "0x40014BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public VoipAudioSourceHiLevel parent;

			[Token(Token = "0x40014BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private float[] scratchBuffer;

			[Token(Token = "0x60018D9")]
			[Address(RVA = "0xA39CE4", Offset = "0xA39CE4", VA = "0xA39CE4")]
			private void Awake()
			{
			}

			[Token(Token = "0x60018DA")]
			[Address(RVA = "0xA39D9C", Offset = "0xA39D9C", VA = "0xA39D9C")]
			private void OnAudioFilterRead(float[] data, int channels)
			{
			}

			[Token(Token = "0x60018DB")]
			[Address(RVA = "0xA3A264", Offset = "0xA3A264", VA = "0xA3A264")]
			public FilterReadDelegate()
			{
			}
		}

		[Token(Token = "0x4000EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int initialPlaybackDelayMS;

		[Token(Token = "0x4000EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource audioSource;

		[Token(Token = "0x4000EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float peakAmplitude;

		[Token(Token = "0x4000EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected IVoipPCMSource pcmSource;

		[Token(Token = "0x4000EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int audioSystemPlaybackFrequency;

		[Token(Token = "0x4000EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static bool verboseLogging;

		[Token(Token = "0x1700019E")]
		public ulong senderID
		{
			[Token(Token = "0x600132C")]
			[Address(RVA = "0xA39548", Offset = "0xA39548", VA = "0xA39548")]
			set
			{
			}
		}

		[Token(Token = "0x600132D")]
		[Address(RVA = "0xA3960C", Offset = "0xA3960C", VA = "0xA3960C")]
		protected void Stop()
		{
		}

		[Token(Token = "0x600132E")]
		[Address(RVA = "0xA39610", Offset = "0xA39610", VA = "0xA39610")]
		private VoipSampleRate SampleRateToEnum(int rate)
		{
			return default(VoipSampleRate);
		}

		[Token(Token = "0x600132F")]
		[Address(RVA = "0xA3964C", Offset = "0xA3964C", VA = "0xA3964C")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6001330")]
		[Address(RVA = "0xA398F4", Offset = "0xA398F4", VA = "0xA398F4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001331")]
		[Address(RVA = "0xA39910", Offset = "0xA39910", VA = "0xA39910", Slot = "4")]
		protected virtual void CreatePCMSource()
		{
		}

		[Token(Token = "0x6001332")]
		[Address(RVA = "0xA39978", Offset = "0xA39978", VA = "0xA39978")]
		protected static int MSToElements(int ms)
		{
			return default(int);
		}

		[Token(Token = "0x6001333")]
		[Address(RVA = "0xA39A00", Offset = "0xA39A00", VA = "0xA39A00")]
		private void Update()
		{
		}

		[Token(Token = "0x6001334")]
		[Address(RVA = "0xA39CD8", Offset = "0xA39CD8", VA = "0xA39CD8")]
		public VoipAudioSourceHiLevel()
		{
		}
	}
	[Token(Token = "0x20002C3")]
	public enum VoipBitrate
	{
		[Token(Token = "0x4000EEB")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E83F0", Offset = "0x6E83F0")]
		Unknown,
		[Token(Token = "0x4000EEC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E8428", Offset = "0x6E8428")]
		B16000,
		[Token(Token = "0x4000EED")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E8460", Offset = "0x6E8460")]
		B24000,
		[Token(Token = "0x4000EEE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E8498", Offset = "0x6E8498")]
		B32000,
		[Token(Token = "0x4000EEF")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E84D0", Offset = "0x6E84D0")]
		B64000,
		[Token(Token = "0x4000EF0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E8508", Offset = "0x6E8508")]
		B96000,
		[Token(Token = "0x4000EF1")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E8540", Offset = "0x6E8540")]
		B128000
	}
	[Token(Token = "0x20002C4")]
	public enum VoipDtxState
	{
		[Token(Token = "0x4000EF3")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E8578", Offset = "0x6E8578")]
		Unknown,
		[Token(Token = "0x4000EF4")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E85B0", Offset = "0x6E85B0")]
		Enabled,
		[Token(Token = "0x4000EF5")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E85E8", Offset = "0x6E85E8")]
		Disabled
	}
	[Token(Token = "0x20002C5")]
	public enum VoipMuteState
	{
		[Token(Token = "0x4000EF7")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E8620", Offset = "0x6E8620")]
		Unknown,
		[Token(Token = "0x4000EF8")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E8658", Offset = "0x6E8658")]
		Muted,
		[Token(Token = "0x4000EF9")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E8690", Offset = "0x6E8690")]
		Unmuted
	}
	[Token(Token = "0x20002C6")]
	public class VoipOptions
	{
		[Token(Token = "0x4000EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x6001336")]
		[Address(RVA = "0xA3A26C", Offset = "0xA3A26C", VA = "0xA3A26C")]
		public VoipOptions()
		{
		}

		[Token(Token = "0x6001337")]
		[Address(RVA = "0xA3A2E4", Offset = "0xA3A2E4", VA = "0xA3A2E4")]
		public void SetBitrateForNewConnections(VoipBitrate value)
		{
		}

		[Token(Token = "0x6001338")]
		[Address(RVA = "0xA3A360", Offset = "0xA3A360", VA = "0xA3A360")]
		public void SetCreateNewConnectionUseDtx(VoipDtxState value)
		{
		}

		[Token(Token = "0x6001339")]
		[Address(RVA = "0xA3A3DC", Offset = "0xA3A3DC", VA = "0xA3A3DC")]
		public static explicit operator IntPtr(VoipOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600133A")]
		[Address(RVA = "0xA3A42C", Offset = "0xA3A42C", VA = "0xA3A42C", Slot = "1")]
		~VoipOptions()
		{
		}
	}
	[Token(Token = "0x20002C7")]
	public class VoipPCMSourceNative : IVoipPCMSource
	{
		[Token(Token = "0x4000EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ulong senderID;

		[Token(Token = "0x600133B")]
		[Address(RVA = "0xA3A4E4", Offset = "0xA3A4E4", VA = "0xA3A4E4", Slot = "4")]
		public int GetPCM(float[] dest, int length)
		{
			return default(int);
		}

		[Token(Token = "0x600133C")]
		[Address(RVA = "0xA3A5A4", Offset = "0xA3A5A4", VA = "0xA3A5A4", Slot = "5")]
		public void SetSenderID(ulong senderID)
		{
		}

		[Token(Token = "0x600133D")]
		[Address(RVA = "0xA3A5AC", Offset = "0xA3A5AC", VA = "0xA3A5AC", Slot = "7")]
		public int PeekSizeElements()
		{
			return default(int);
		}

		[Token(Token = "0x600133E")]
		[Address(RVA = "0xA3A64C", Offset = "0xA3A64C", VA = "0xA3A64C", Slot = "6")]
		public void Update()
		{
		}

		[Token(Token = "0x600133F")]
		[Address(RVA = "0xA39970", Offset = "0xA39970", VA = "0xA39970")]
		public VoipPCMSourceNative()
		{
		}
	}
	[Token(Token = "0x20002C8")]
	public enum VoipSampleRate
	{
		[Token(Token = "0x4000EFD")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E86C8", Offset = "0x6E86C8")]
		Unknown,
		[Token(Token = "0x4000EFE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E8700", Offset = "0x6E8700")]
		HZ24000,
		[Token(Token = "0x4000EFF")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E8738", Offset = "0x6E8738")]
		HZ44100,
		[Token(Token = "0x4000F00")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E8770", Offset = "0x6E8770")]
		HZ48000
	}
	[Token(Token = "0x20002C9")]
	public class WindowsPlatform
	{
		[Token(Token = "0x2000402")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6E1C5C", Offset = "0x6E1C5C")]
		public delegate void UnityLogDelegate(IntPtr tag, IntPtr msg);

		[Token(Token = "0x6001340")]
		[Address(RVA = "0xA3A650", Offset = "0xA3A650", VA = "0xA3A650")]
		private void CPPLogCallback(IntPtr tag, IntPtr message)
		{
		}

		[Token(Token = "0x6001341")]
		[Address(RVA = "0xA3A728", Offset = "0xA3A728", VA = "0xA3A728")]
		private IntPtr getCallbackPointer()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001342")]
		[Address(RVA = "0xA3A768", Offset = "0xA3A768", VA = "0xA3A768")]
		public bool Initialize(string appId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001343")]
		[Address(RVA = "0xA3A84C", Offset = "0xA3A84C", VA = "0xA3A84C")]
		public Request<PlatformInitialize> AsyncInitialize(string appId)
		{
			return null;
		}

		[Token(Token = "0x6001344")]
		[Address(RVA = "0xA3A960", Offset = "0xA3A960", VA = "0xA3A960")]
		public WindowsPlatform()
		{
		}
	}
}
namespace Oculus.Platform.Models
{
	[Token(Token = "0x20002CA")]
	public class AbuseReportRecording
	{
		[Token(Token = "0x4000F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string RecordingUuid;

		[Token(Token = "0x6001345")]
		[Address(RVA = "0xBB43FC", Offset = "0xBB43FC", VA = "0xBB43FC")]
		public AbuseReportRecording(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002CB")]
	public class AchievementDefinition
	{
		[Token(Token = "0x4000F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly AchievementType Type;

		[Token(Token = "0x4000F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Name;

		[Token(Token = "0x4000F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint BitfieldLength;

		[Token(Token = "0x4000F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ulong Target;

		[Token(Token = "0x6001346")]
		[Address(RVA = "0xBBC3E8", Offset = "0xBBC3E8", VA = "0xBBC3E8")]
		public AchievementDefinition(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002CC")]
	public class AchievementDefinitionList : DeserializableList<AchievementDefinition>
	{
		[Token(Token = "0x6001347")]
		[Address(RVA = "0xBB4564", Offset = "0xBB4564", VA = "0xBB4564")]
		public AchievementDefinitionList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20002CD")]
	public class AchievementProgress
	{
		[Token(Token = "0x4000F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Bitfield;

		[Token(Token = "0x4000F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong Count;

		[Token(Token = "0x4000F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly bool IsUnlocked;

		[Token(Token = "0x4000F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Name;

		[Token(Token = "0x4000F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly DateTime UnlockTime;

		[Token(Token = "0x6001348")]
		[Address(RVA = "0xBBC4A0", Offset = "0xBBC4A0", VA = "0xBBC4A0")]
		public AchievementProgress(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002CE")]
	public class AchievementProgressList : DeserializableList<AchievementProgress>
	{
		[Token(Token = "0x6001349")]
		[Address(RVA = "0xBB4844", Offset = "0xBB4844", VA = "0xBB4844")]
		public AchievementProgressList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20002CF")]
	public class AchievementUpdate
	{
		[Token(Token = "0x4000F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool JustUnlocked;

		[Token(Token = "0x4000F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Name;

		[Token(Token = "0x600134A")]
		[Address(RVA = "0xBB4B24", Offset = "0xBB4B24", VA = "0xBB4B24")]
		public AchievementUpdate(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002D0")]
	public class ApplicationVersion
	{
		[Token(Token = "0x4000F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int CurrentCode;

		[Token(Token = "0x4000F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string CurrentName;

		[Token(Token = "0x4000F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly int LatestCode;

		[Token(Token = "0x4000F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string LatestName;

		[Token(Token = "0x600134B")]
		[Address(RVA = "0xBB4CA0", Offset = "0xBB4CA0", VA = "0xBB4CA0")]
		public ApplicationVersion(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002D1")]
	public class AssetDetails
	{
		[Token(Token = "0x4000F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetId;

		[Token(Token = "0x4000F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string AssetType;

		[Token(Token = "0x4000F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string DownloadStatus;

		[Token(Token = "0x4000F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Filepath;

		[Token(Token = "0x4000F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string IapStatus;

		[Token(Token = "0x4000F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly LanguagePackInfo LanguageOptional;

		[Token(Token = "0x4000F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6E87A8", Offset = "0x6E87A8")]
		public readonly LanguagePackInfo Language;

		[Token(Token = "0x600134C")]
		[Address(RVA = "0xBB4E38", Offset = "0xBB4E38", VA = "0xBB4E38")]
		public AssetDetails(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002D2")]
	public class AssetDetailsList : DeserializableList<AssetDetails>
	{
		[Token(Token = "0x600134D")]
		[Address(RVA = "0xBB5038", Offset = "0xBB5038", VA = "0xBB5038")]
		public AssetDetailsList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20002D3")]
	public class AssetFileDeleteResult
	{
		[Token(Token = "0x4000F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetFileId;

		[Token(Token = "0x4000F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong AssetId;

		[Token(Token = "0x4000F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Filepath;

		[Token(Token = "0x4000F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly bool Success;

		[Token(Token = "0x600134E")]
		[Address(RVA = "0xBB52E8", Offset = "0xBB52E8", VA = "0xBB52E8")]
		public AssetFileDeleteResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002D4")]
	public class AssetFileDownloadCancelResult
	{
		[Token(Token = "0x4000F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetFileId;

		[Token(Token = "0x4000F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong AssetId;

		[Token(Token = "0x4000F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Filepath;

		[Token(Token = "0x4000F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly bool Success;

		[Token(Token = "0x600134F")]
		[Address(RVA = "0xBB5484", Offset = "0xBB5484", VA = "0xBB5484")]
		public AssetFileDownloadCancelResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002D5")]
	public class AssetFileDownloadResult
	{
		[Token(Token = "0x4000F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetId;

		[Token(Token = "0x4000F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Filepath;

		[Token(Token = "0x6001350")]
		[Address(RVA = "0xBB5620", Offset = "0xBB5620", VA = "0xBB5620")]
		public AssetFileDownloadResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002D6")]
	public class AssetFileDownloadUpdate
	{
		[Token(Token = "0x4000F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetFileId;

		[Token(Token = "0x4000F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong AssetId;

		[Token(Token = "0x4000F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint BytesTotal;

		[Token(Token = "0x4000F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly int BytesTransferred;

		[Token(Token = "0x4000F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly bool Completed;

		[Token(Token = "0x6001351")]
		[Address(RVA = "0xBB5798", Offset = "0xBB5798", VA = "0xBB5798")]
		public AssetFileDownloadUpdate(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002D7")]
	public class CalApplicationFinalized
	{
		[Token(Token = "0x4000F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int CountdownMS;

		[Token(Token = "0x4000F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong ID;

		[Token(Token = "0x4000F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string LaunchDetails;

		[Token(Token = "0x6001352")]
		[Address(RVA = "0xBB5944", Offset = "0xBB5944", VA = "0xBB5944")]
		public CalApplicationFinalized(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002D8")]
	public class CalApplicationProposed
	{
		[Token(Token = "0x4000F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x6001353")]
		[Address(RVA = "0xBB5ACC", Offset = "0xBB5ACC", VA = "0xBB5ACC")]
		public CalApplicationProposed(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002D9")]
	public class CalApplicationSuggestion
	{
		[Token(Token = "0x4000F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x4000F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string SocialContext;

		[Token(Token = "0x6001354")]
		[Address(RVA = "0xBBC614", Offset = "0xBBC614", VA = "0xBBC614")]
		public CalApplicationSuggestion(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002DA")]
	public class CalApplicationSuggestionList : DeserializableList<CalApplicationSuggestion>
	{
		[Token(Token = "0x6001355")]
		[Address(RVA = "0xBB5C94", Offset = "0xBB5C94", VA = "0xBB5C94")]
		public CalApplicationSuggestionList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20002DB")]
	public class CloudStorageConflictMetadata
	{
		[Token(Token = "0x4000F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly CloudStorageMetadata Local;

		[Token(Token = "0x4000F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly CloudStorageMetadata Remote;

		[Token(Token = "0x6001356")]
		[Address(RVA = "0xBB5F44", Offset = "0xBB5F44", VA = "0xBB5F44")]
		public CloudStorageConflictMetadata(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002DC")]
	public class CloudStorageData
	{
		[Token(Token = "0x4000F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Bucket;

		[Token(Token = "0x4000F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly byte[] Data;

		[Token(Token = "0x4000F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint DataSize;

		[Token(Token = "0x4000F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Key;

		[Token(Token = "0x6001357")]
		[Address(RVA = "0xBB6104", Offset = "0xBB6104", VA = "0xBB6104")]
		public CloudStorageData(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002DD")]
	public class CloudStorageMetadata
	{
		[Token(Token = "0x4000F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Bucket;

		[Token(Token = "0x4000F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly long Counter;

		[Token(Token = "0x4000F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint DataSize;

		[Token(Token = "0x4000F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string ExtraData;

		[Token(Token = "0x4000F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string Key;

		[Token(Token = "0x4000F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly ulong SaveTime;

		[Token(Token = "0x4000F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly CloudStorageDataStatus Status;

		[Token(Token = "0x4000F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly string VersionHandle;

		[Token(Token = "0x6001358")]
		[Address(RVA = "0xBB657C", Offset = "0xBB657C", VA = "0xBB657C")]
		public CloudStorageMetadata(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002DE")]
	public class CloudStorageMetadataList : DeserializableList<CloudStorageMetadata>
	{
		[Token(Token = "0x6001359")]
		[Address(RVA = "0xBB629C", Offset = "0xBB629C", VA = "0xBB629C")]
		public CloudStorageMetadataList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20002DF")]
	public class CloudStorageUpdateResponse
	{
		[Token(Token = "0x4000F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Bucket;

		[Token(Token = "0x4000F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Key;

		[Token(Token = "0x4000F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly CloudStorageUpdateStatus Status;

		[Token(Token = "0x4000F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string VersionHandle;

		[Token(Token = "0x600135A")]
		[Address(RVA = "0xBB6754", Offset = "0xBB6754", VA = "0xBB6754")]
		public CloudStorageUpdateResponse(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002E0")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x6E15EC", Offset = "0x6E15EC")]
	public class DeserializableList<T> : IList<T>, ICollection<T>, IEnumerable<T>, IEnumerable
	{
		[Token(Token = "0x4000F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected List<T> _Data;

		[Token(Token = "0x4000F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected string _NextUrl;

		[Token(Token = "0x4000F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected string _PreviousUrl;

		[Token(Token = "0x1700019F")]
		public int Count
		{
			[Token(Token = "0x600135B")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001A0")]
		private bool System.Collections.Generic.ICollection<T>.IsReadOnly
		{
			[Token(Token = "0x600135C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A1")]
		public T Item
		{
			[Token(Token = "0x600135E")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x600135F")]
			set
			{
			}
		}

		[Token(Token = "0x170001A2")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6EF2F0", Offset = "0x6EF2F0")]
		public List<T> Data
		{
			[Token(Token = "0x600136A")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A3")]
		public bool HasNextPage
		{
			[Token(Token = "0x600136B")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A4")]
		public bool HasPreviousPage
		{
			[Token(Token = "0x600136C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A5")]
		public string NextUrl
		{
			[Token(Token = "0x600136D")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A6")]
		public string PreviousUrl
		{
			[Token(Token = "0x600136E")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600135D")]
		public int IndexOf(T obj)
		{
			return default(int);
		}

		[Token(Token = "0x6001360")]
		public void Add(T item)
		{
		}

		[Token(Token = "0x6001361")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001362")]
		public bool Contains(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6001363")]
		public void CopyTo(T[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x6001364")]
		public IEnumerator<T> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001365")]
		public void Insert(int index, T item)
		{
		}

		[Token(Token = "0x6001366")]
		public bool Remove(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6001367")]
		public void RemoveAt(int index)
		{
		}

		[Token(Token = "0x6001368")]
		private IEnumerator GetEnumerator1()
		{
			return null;
		}

		[Token(Token = "0x6001369")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x600136F")]
		public DeserializableList()
		{
		}
	}
	[Token(Token = "0x20002E1")]
	public class Error
	{
		[Token(Token = "0x4000F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int Code;

		[Token(Token = "0x4000F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly int HttpCode;

		[Token(Token = "0x4000F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Message;

		[Token(Token = "0x6001370")]
		[Address(RVA = "0xBB0DA0", Offset = "0xBB0DA0", VA = "0xBB0DA0")]
		public Error(int code, string message, int httpCode)
		{
		}
	}
	[Token(Token = "0x20002E2")]
	public class HttpTransferUpdate
	{
		[Token(Token = "0x4000F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x4000F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly byte[] Payload;

		[Token(Token = "0x4000F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly bool IsCompleted;

		[Token(Token = "0x6001371")]
		[Address(RVA = "0xBB68EC", Offset = "0xBB68EC", VA = "0xBB68EC")]
		public HttpTransferUpdate(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002E3")]
	public class InstalledApplication
	{
		[Token(Token = "0x4000F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string ApplicationId;

		[Token(Token = "0x4000F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string PackageName;

		[Token(Token = "0x4000F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Status;

		[Token(Token = "0x4000F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly int VersionCode;

		[Token(Token = "0x4000F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string VersionName;

		[Token(Token = "0x6001372")]
		[Address(RVA = "0xBBC6AC", Offset = "0xBBC6AC", VA = "0xBBC6AC")]
		public InstalledApplication(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002E4")]
	public class InstalledApplicationList : DeserializableList<InstalledApplication>
	{
		[Token(Token = "0x6001373")]
		[Address(RVA = "0xBB6B74", Offset = "0xBB6B74", VA = "0xBB6B74")]
		public InstalledApplicationList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20002E5")]
	public class LanguagePackInfo
	{
		[Token(Token = "0x4000F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string EnglishName;

		[Token(Token = "0x4000F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string NativeName;

		[Token(Token = "0x4000F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Tag;

		[Token(Token = "0x6001374")]
		[Address(RVA = "0xBBC56C", Offset = "0xBBC56C", VA = "0xBBC56C")]
		public LanguagePackInfo(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002E6")]
	public class LaunchBlockFlowResult
	{
		[Token(Token = "0x4000F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool DidBlock;

		[Token(Token = "0x4000F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public readonly bool DidCancel;

		[Token(Token = "0x6001375")]
		[Address(RVA = "0xBB6E84", Offset = "0xBB6E84", VA = "0xBB6E84")]
		public LaunchBlockFlowResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002E7")]
	public class LaunchDetails
	{
		[Token(Token = "0x4000F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string DeeplinkMessage;

		[Token(Token = "0x4000F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string LaunchSource;

		[Token(Token = "0x4000F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly LaunchType LaunchType;

		[Token(Token = "0x4000F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ulong RoomID;

		[Token(Token = "0x4000F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly UserList UsersOptional;

		[Token(Token = "0x4000F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6E87E0", Offset = "0x6E87E0")]
		public readonly UserList Users;

		[Token(Token = "0x6001376")]
		[Address(RVA = "0xBBC774", Offset = "0xBBC774", VA = "0xBBC774")]
		public LaunchDetails(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002E8")]
	public class LaunchFriendRequestFlowResult
	{
		[Token(Token = "0x4000F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool DidCancel;

		[Token(Token = "0x4000F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public readonly bool DidSendRequest;

		[Token(Token = "0x6001377")]
		[Address(RVA = "0xBB7004", Offset = "0xBB7004", VA = "0xBB7004")]
		public LaunchFriendRequestFlowResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002E9")]
	public class LaunchReportFlowResult
	{
		[Token(Token = "0x4000F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool DidCancel;

		[Token(Token = "0x4000F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong UserReportId;

		[Token(Token = "0x6001378")]
		[Address(RVA = "0xBB71E4", Offset = "0xBB71E4", VA = "0xBB71E4")]
		public LaunchReportFlowResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002EA")]
	public class LaunchUnblockFlowResult
	{
		[Token(Token = "0x4000F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool DidCancel;

		[Token(Token = "0x4000F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public readonly bool DidUnblock;

		[Token(Token = "0x6001379")]
		[Address(RVA = "0xBB73C0", Offset = "0xBB73C0", VA = "0xBB73C0")]
		public LaunchUnblockFlowResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002EB")]
	public class LeaderboardEntry
	{
		[Token(Token = "0x4000F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly byte[] ExtraData;

		[Token(Token = "0x4000F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly int Rank;

		[Token(Token = "0x4000F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly long Score;

		[Token(Token = "0x4000F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly DateTime Timestamp;

		[Token(Token = "0x4000F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly User User;

		[Token(Token = "0x600137A")]
		[Address(RVA = "0xBBC884", Offset = "0xBBC884", VA = "0xBBC884")]
		public LeaderboardEntry(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002EC")]
	public class LeaderboardEntryList : DeserializableList<LeaderboardEntry>
	{
		[Token(Token = "0x4000F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ulong TotalCount;

		[Token(Token = "0x600137B")]
		[Address(RVA = "0xBB75FC", Offset = "0xBB75FC", VA = "0xBB75FC")]
		public LeaderboardEntryList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20002ED")]
	public class LinkedAccount
	{
		[Token(Token = "0x4000F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string AccessToken;

		[Token(Token = "0x4000F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ServiceProvider ServiceProvider;

		[Token(Token = "0x4000F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string UserId;

		[Token(Token = "0x600137C")]
		[Address(RVA = "0xBBC970", Offset = "0xBBC970", VA = "0xBBC970")]
		public LinkedAccount(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002EE")]
	public class LinkedAccountList : DeserializableList<LinkedAccount>
	{
		[Token(Token = "0x600137D")]
		[Address(RVA = "0xBB795C", Offset = "0xBB795C", VA = "0xBB795C")]
		public LinkedAccountList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20002EF")]
	public class LivestreamingApplicationStatus
	{
		[Token(Token = "0x4000F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool StreamingEnabled;

		[Token(Token = "0x600137E")]
		[Address(RVA = "0xBB7C6C", Offset = "0xBB7C6C", VA = "0xBB7C6C")]
		public LivestreamingApplicationStatus(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002F0")]
	public class LivestreamingStartResult
	{
		[Token(Token = "0x4000F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly LivestreamingStartStatus StreamingResult;

		[Token(Token = "0x600137F")]
		[Address(RVA = "0xBB7E38", Offset = "0xBB7E38", VA = "0xBB7E38")]
		public LivestreamingStartResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002F1")]
	public class LivestreamingStatus
	{
		[Token(Token = "0x4000F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool CommentsVisible;

		[Token(Token = "0x4000F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public readonly bool IsPaused;

		[Token(Token = "0x4000F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public readonly bool LivestreamingEnabled;

		[Token(Token = "0x4000F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly int LivestreamingType;

		[Token(Token = "0x4000F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly bool MicEnabled;

		[Token(Token = "0x6001380")]
		[Address(RVA = "0xBB7FA0", Offset = "0xBB7FA0", VA = "0xBB7FA0")]
		public LivestreamingStatus(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002F2")]
	public class LivestreamingVideoStats
	{
		[Token(Token = "0x4000F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int CommentCount;

		[Token(Token = "0x4000F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly int ReactionCount;

		[Token(Token = "0x4000F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string TotalViews;

		[Token(Token = "0x6001381")]
		[Address(RVA = "0xBB81B8", Offset = "0xBB81B8", VA = "0xBB81B8")]
		public LivestreamingVideoStats(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002F3")]
	public class MatchmakingAdminSnapshot
	{
		[Token(Token = "0x4000F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly MatchmakingAdminSnapshotCandidateList Candidates;

		[Token(Token = "0x4000F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly double MyCurrentThreshold;

		[Token(Token = "0x6001382")]
		[Address(RVA = "0xBB8340", Offset = "0xBB8340", VA = "0xBB8340")]
		public MatchmakingAdminSnapshot(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002F4")]
	public class MatchmakingAdminSnapshotCandidate
	{
		[Token(Token = "0x4000F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool CanMatch;

		[Token(Token = "0x4000F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly double MyTotalScore;

		[Token(Token = "0x4000F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly double TheirCurrentThreshold;

		[Token(Token = "0x4000F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly double TheirTotalScore;

		[Token(Token = "0x4000F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string TraceId;

		[Token(Token = "0x6001383")]
		[Address(RVA = "0xBBCBE8", Offset = "0xBBCBE8", VA = "0xBBCBE8")]
		public MatchmakingAdminSnapshotCandidate(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002F5")]
	public class MatchmakingAdminSnapshotCandidateList : DeserializableList<MatchmakingAdminSnapshotCandidate>
	{
		[Token(Token = "0x6001384")]
		[Address(RVA = "0xBBCA18", Offset = "0xBBCA18", VA = "0xBBCA18")]
		public MatchmakingAdminSnapshotCandidateList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20002F6")]
	public class MatchmakingBrowseResult
	{
		[Token(Token = "0x4000F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly MatchmakingEnqueueResult EnqueueResult;

		[Token(Token = "0x4000F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly RoomList Rooms;

		[Token(Token = "0x6001385")]
		[Address(RVA = "0xBB8538", Offset = "0xBB8538", VA = "0xBB8538")]
		public MatchmakingBrowseResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002F7")]
	public class MatchmakingEnqueueResult
	{
		[Token(Token = "0x4000F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly MatchmakingAdminSnapshot AdminSnapshotOptional;

		[Token(Token = "0x4000F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6E8818", Offset = "0x6E8818")]
		public readonly MatchmakingAdminSnapshot AdminSnapshot;

		[Token(Token = "0x4000F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint AverageWait;

		[Token(Token = "0x4000F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly uint MatchesInLastHourCount;

		[Token(Token = "0x4000F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly uint MaxExpectedWait;

		[Token(Token = "0x4000F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string Pool;

		[Token(Token = "0x4000F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly uint RecentMatchPercentage;

		[Token(Token = "0x4000F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly string RequestHash;

		[Token(Token = "0x6001386")]
		[Address(RVA = "0xBB86F8", Offset = "0xBB86F8", VA = "0xBB86F8")]
		public MatchmakingEnqueueResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002F8")]
	public class MatchmakingEnqueueResultAndRoom
	{
		[Token(Token = "0x4000F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly MatchmakingEnqueueResult MatchmakingEnqueueResult;

		[Token(Token = "0x4000F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly Room Room;

		[Token(Token = "0x6001387")]
		[Address(RVA = "0xBB8928", Offset = "0xBB8928", VA = "0xBB8928")]
		public MatchmakingEnqueueResultAndRoom(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002F9")]
	public class MatchmakingEnqueuedUser
	{
		[Token(Token = "0x4000F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Dictionary<string, string> CustomData;

		[Token(Token = "0x4000F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly User UserOptional;

		[Token(Token = "0x4000F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6E8850", Offset = "0x6E8850")]
		public readonly User User;

		[Token(Token = "0x6001388")]
		[Address(RVA = "0xBBCCB4", Offset = "0xBBCCB4", VA = "0xBBCCB4")]
		public MatchmakingEnqueuedUser(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002FA")]
	public class MatchmakingEnqueuedUserList : DeserializableList<MatchmakingEnqueuedUser>
	{
		[Token(Token = "0x6001389")]
		[Address(RVA = "0xBBCD9C", Offset = "0xBBCD9C", VA = "0xBBCD9C")]
		public MatchmakingEnqueuedUserList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20002FB")]
	public class MatchmakingStats
	{
		[Token(Token = "0x4000F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly uint DrawCount;

		[Token(Token = "0x4000F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly uint LossCount;

		[Token(Token = "0x4000F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly uint SkillLevel;

		[Token(Token = "0x4000F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public readonly uint WinCount;

		[Token(Token = "0x600138A")]
		[Address(RVA = "0xBB8EBC", Offset = "0xBB8EBC", VA = "0xBB8EBC")]
		public MatchmakingStats(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002FC")]
	public class NetworkingPeer
	{
		[Token(Token = "0x4000F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E8888", Offset = "0x6E8888")]
		private ulong <ID>k__BackingField;

		[Token(Token = "0x4000F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E8898", Offset = "0x6E8898")]
		private PeerConnectionState <State>k__BackingField;

		[Token(Token = "0x170001A7")]
		public ulong ID
		{
			[Token(Token = "0x600138C")]
			[Address(RVA = "0xBBCF6C", Offset = "0xBBCF6C", VA = "0xBBCF6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ED874", Offset = "0x6ED874")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x600138D")]
			[Address(RVA = "0xBBCF74", Offset = "0xBBCF74", VA = "0xBBCF74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ED884", Offset = "0x6ED884")]
			private set
			{
			}
		}

		[Token(Token = "0x170001A8")]
		public PeerConnectionState State
		{
			[Token(Token = "0x600138E")]
			[Address(RVA = "0xBBCF7C", Offset = "0xBBCF7C", VA = "0xBBCF7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ED894", Offset = "0x6ED894")]
			get
			{
				return default(PeerConnectionState);
			}
			[Token(Token = "0x600138F")]
			[Address(RVA = "0xBBCF84", Offset = "0xBBCF84", VA = "0xBBCF84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ED8A4", Offset = "0x6ED8A4")]
			private set
			{
			}
		}

		[Token(Token = "0x600138B")]
		[Address(RVA = "0xBB9078", Offset = "0xBB9078", VA = "0xBB9078")]
		public NetworkingPeer(ulong id, PeerConnectionState state)
		{
		}
	}
	[Token(Token = "0x20002FD")]
	public class OrgScopedID
	{
		[Token(Token = "0x4000F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x6001390")]
		[Address(RVA = "0xBB9194", Offset = "0xBB9194", VA = "0xBB9194")]
		public OrgScopedID(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002FE")]
	public class Party
	{
		[Token(Token = "0x4000F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x4000F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly UserList InvitedUsersOptional;

		[Token(Token = "0x4000F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6E88A8", Offset = "0x6E88A8")]
		public readonly UserList InvitedUsers;

		[Token(Token = "0x4000F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly User LeaderOptional;

		[Token(Token = "0x4000F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6E88E0", Offset = "0x6E88E0")]
		public readonly User Leader;

		[Token(Token = "0x4000F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly Room RoomOptional;

		[Token(Token = "0x4000F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6E8918", Offset = "0x6E8918")]
		public readonly Room Room;

		[Token(Token = "0x4000F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly UserList UsersOptional;

		[Token(Token = "0x4000F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6E8950", Offset = "0x6E8950")]
		public readonly UserList Users;

		[Token(Token = "0x6001391")]
		[Address(RVA = "0xBB935C", Offset = "0xBB935C", VA = "0xBB935C")]
		public Party(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002FF")]
	public class PartyID
	{
		[Token(Token = "0x4000F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x6001392")]
		[Address(RVA = "0xBB96CC", Offset = "0xBB96CC", VA = "0xBB96CC")]
		public PartyID(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000300")]
	public class PartyUpdateNotification
	{
		[Token(Token = "0x4000F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly PartyUpdateAction Action;

		[Token(Token = "0x4000F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong PartyId;

		[Token(Token = "0x4000F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly ulong SenderId;

		[Token(Token = "0x4000F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string UpdateTimestamp;

		[Token(Token = "0x4000F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string UserAlias;

		[Token(Token = "0x4000F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly ulong UserId;

		[Token(Token = "0x4000F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly string UserName;

		[Token(Token = "0x6001393")]
		[Address(RVA = "0xBB9914", Offset = "0xBB9914", VA = "0xBB9914")]
		public PartyUpdateNotification(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000301")]
	public class Pid
	{
		[Token(Token = "0x4000F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Id;

		[Token(Token = "0x6001394")]
		[Address(RVA = "0xBBCF8C", Offset = "0xBBCF8C", VA = "0xBBCF8C")]
		public Pid(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000302")]
	public class PidList : DeserializableList<Pid>
	{
		[Token(Token = "0x6001395")]
		[Address(RVA = "0xBB9ADC", Offset = "0xBB9ADC", VA = "0xBB9ADC")]
		public PidList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000303")]
	public class PingResult
	{
		[Token(Token = "0x4000FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E8988", Offset = "0x6E8988")]
		private ulong <ID>k__BackingField;

		[Token(Token = "0x4000FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ulong? pingTimeUsec;

		[Token(Token = "0x170001A9")]
		public ulong ID
		{
			[Token(Token = "0x6001397")]
			[Address(RVA = "0xBBD014", Offset = "0xBBD014", VA = "0xBBD014")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ED8B4", Offset = "0x6ED8B4")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x6001398")]
			[Address(RVA = "0xBBD01C", Offset = "0xBBD01C", VA = "0xBBD01C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ED8C4", Offset = "0x6ED8C4")]
			private set
			{
			}
		}

		[Token(Token = "0x170001AA")]
		public ulong PingTimeUsec
		{
			[Token(Token = "0x6001399")]
			[Address(RVA = "0xBBD024", Offset = "0xBBD024", VA = "0xBBD024")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x170001AB")]
		public bool IsTimeout
		{
			[Token(Token = "0x600139A")]
			[Address(RVA = "0xBBD08C", Offset = "0xBBD08C", VA = "0xBBD08C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001396")]
		[Address(RVA = "0xBB9E0C", Offset = "0xBB9E0C", VA = "0xBB9E0C")]
		public PingResult(ulong id, ulong? pingTimeUsec)
		{
		}
	}
	[Token(Token = "0x2000304")]
	public class PlatformInitialize
	{
		[Token(Token = "0x4000FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly PlatformInitializeResult Result;

		[Token(Token = "0x600139B")]
		[Address(RVA = "0xBB9F2C", Offset = "0xBB9F2C", VA = "0xBB9F2C")]
		public PlatformInitialize(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000305")]
	public class Product
	{
		[Token(Token = "0x4000FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Description;

		[Token(Token = "0x4000FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string FormattedPrice;

		[Token(Token = "0x4000FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Name;

		[Token(Token = "0x4000FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Sku;

		[Token(Token = "0x600139C")]
		[Address(RVA = "0xBBD0D8", Offset = "0xBBD0D8", VA = "0xBBD0D8")]
		public Product(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000306")]
	public class ProductList : DeserializableList<Product>
	{
		[Token(Token = "0x600139D")]
		[Address(RVA = "0xBBA094", Offset = "0xBBA094", VA = "0xBBA094")]
		public ProductList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000307")]
	public class Purchase
	{
		[Token(Token = "0x4000FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly DateTime ExpirationTime;

		[Token(Token = "0x4000FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly DateTime GrantTime;

		[Token(Token = "0x4000FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly ulong ID;

		[Token(Token = "0x4000FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Sku;

		[Token(Token = "0x600139E")]
		[Address(RVA = "0xBBA374", Offset = "0xBBA374", VA = "0xBBA374")]
		public Purchase(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000308")]
	public class PurchaseList : DeserializableList<Purchase>
	{
		[Token(Token = "0x600139F")]
		[Address(RVA = "0xBBA50C", Offset = "0xBBA50C", VA = "0xBBA50C")]
		public PurchaseList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000309")]
	public class Room
	{
		[Token(Token = "0x4000FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ApplicationID;

		[Token(Token = "0x4000FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly Dictionary<string, string> DataStore;

		[Token(Token = "0x4000FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Description;

		[Token(Token = "0x4000FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ulong ID;

		[Token(Token = "0x4000FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly UserList InvitedUsersOptional;

		[Token(Token = "0x4000FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6E8998", Offset = "0x6E8998")]
		public readonly UserList InvitedUsers;

		[Token(Token = "0x4000FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly bool IsMembershipLocked;

		[Token(Token = "0x4000FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public readonly RoomJoinPolicy JoinPolicy;

		[Token(Token = "0x4000FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly RoomJoinability Joinability;

		[Token(Token = "0x4000FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public readonly MatchmakingEnqueuedUserList MatchedUsersOptional;

		[Token(Token = "0x4000FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6E89D0", Offset = "0x6E89D0")]
		public readonly MatchmakingEnqueuedUserList MatchedUsers;

		[Token(Token = "0x4000FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public readonly uint MaxUsers;

		[Token(Token = "0x4000FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public readonly string Name;

		[Token(Token = "0x4000FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public readonly User OwnerOptional;

		[Token(Token = "0x4000FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6E8A08", Offset = "0x6E8A08")]
		public readonly User Owner;

		[Token(Token = "0x4000FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public readonly RoomType Type;

		[Token(Token = "0x4000FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public readonly UserList UsersOptional;

		[Token(Token = "0x4000FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6E8A40", Offset = "0x6E8A40")]
		public readonly UserList Users;

		[Token(Token = "0x4000FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public readonly uint Version;

		[Token(Token = "0x60013A0")]
		[Address(RVA = "0xBB8AE8", Offset = "0xBB8AE8", VA = "0xBB8AE8")]
		public Room(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200030A")]
	public class RoomList : DeserializableList<Room>
	{
		[Token(Token = "0x60013A1")]
		[Address(RVA = "0xBBAD44", Offset = "0xBBAD44", VA = "0xBBAD44")]
		public RoomList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200030B")]
	public class RoomInviteNotification
	{
		[Token(Token = "0x4000FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x4000FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong RoomID;

		[Token(Token = "0x4000FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly ulong SenderID;

		[Token(Token = "0x4000FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly DateTime SentTime;

		[Token(Token = "0x60013A2")]
		[Address(RVA = "0xBBA8CC", Offset = "0xBBA8CC", VA = "0xBBA8CC")]
		public RoomInviteNotification(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200030C")]
	public class RoomInviteNotificationList : DeserializableList<RoomInviteNotification>
	{
		[Token(Token = "0x60013A3")]
		[Address(RVA = "0xBBAA64", Offset = "0xBBAA64", VA = "0xBBAA64")]
		public RoomInviteNotificationList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200030D")]
	public class SdkAccount
	{
		[Token(Token = "0x4000FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly SdkAccountType AccountType;

		[Token(Token = "0x4000FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong UserId;

		[Token(Token = "0x60013A4")]
		[Address(RVA = "0xBBD190", Offset = "0xBBD190", VA = "0xBBD190")]
		public SdkAccount(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200030E")]
	public class SdkAccountList : DeserializableList<SdkAccount>
	{
		[Token(Token = "0x60013A5")]
		[Address(RVA = "0xBBB1E4", Offset = "0xBBB1E4", VA = "0xBBB1E4")]
		public SdkAccountList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200030F")]
	public class ShareMediaResult
	{
		[Token(Token = "0x4000FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ShareMediaStatus Status;

		[Token(Token = "0x60013A6")]
		[Address(RVA = "0xBBB494", Offset = "0xBBB494", VA = "0xBBB494")]
		public ShareMediaResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000310")]
	public class SystemPermission
	{
		[Token(Token = "0x4000FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool HasPermission;

		[Token(Token = "0x4000FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly PermissionGrantStatus PermissionGrantStatus;

		[Token(Token = "0x60013A7")]
		[Address(RVA = "0xBBB708", Offset = "0xBBB708", VA = "0xBBB708")]
		public SystemPermission(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000311")]
	public class SystemVoipState
	{
		[Token(Token = "0x4000FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly VoipMuteState MicrophoneMuted;

		[Token(Token = "0x4000FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly SystemVoipStatus Status;

		[Token(Token = "0x60013A8")]
		[Address(RVA = "0xBBB884", Offset = "0xBBB884", VA = "0xBBB884")]
		public SystemVoipState(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000312")]
	public class User
	{
		[Token(Token = "0x4000FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x4000FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string ImageURL;

		[Token(Token = "0x4000FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string InviteToken;

		[Token(Token = "0x4000FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string OculusID;

		[Token(Token = "0x4000FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string Presence;

		[Token(Token = "0x4000FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly UserPresenceStatus PresenceStatus;

		[Token(Token = "0x4000FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly string SmallImageUrl;

		[Token(Token = "0x60013A9")]
		[Address(RVA = "0xBBB9FC", Offset = "0xBBB9FC", VA = "0xBBB9FC")]
		public User(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000313")]
	public class UserList : DeserializableList<User>
	{
		[Token(Token = "0x60013AA")]
		[Address(RVA = "0xBBBEA4", Offset = "0xBBBEA4", VA = "0xBBBEA4")]
		public UserList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000314")]
	public class UserAndRoom
	{
		[Token(Token = "0x4000FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Room RoomOptional;

		[Token(Token = "0x4000FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6E8A78", Offset = "0x6E8A78")]
		public readonly Room Room;

		[Token(Token = "0x4000FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly User User;

		[Token(Token = "0x60013AB")]
		[Address(RVA = "0xBBD228", Offset = "0xBBD228", VA = "0xBBD228")]
		public UserAndRoom(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000315")]
	public class UserAndRoomList : DeserializableList<UserAndRoom>
	{
		[Token(Token = "0x60013AC")]
		[Address(RVA = "0xBBBBC4", Offset = "0xBBBBC4", VA = "0xBBBBC4")]
		public UserAndRoomList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000316")]
	public class UserProof
	{
		[Token(Token = "0x4000FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Value;

		[Token(Token = "0x60013AD")]
		[Address(RVA = "0xBBC184", Offset = "0xBBC184", VA = "0xBBC184")]
		public UserProof(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000317")]
	public class UserReportID
	{
		[Token(Token = "0x4000FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool DidCancel;

		[Token(Token = "0x4000FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong ID;

		[Token(Token = "0x60013AE")]
		[Address(RVA = "0xBBC34C", Offset = "0xBBC34C", VA = "0xBBC34C")]
		public UserReportID(IntPtr o)
		{
		}
	}
}
namespace Oculus.Platform.Samples.VrVoiceChat
{
	[Token(Token = "0x2000318")]
	public class P2PManager
	{
		[Token(Token = "0x4000FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly float UPDATE_DELAY;

		[Token(Token = "0x4000FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ulong m_remoteID;

		[Token(Token = "0x4000FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PeerConnectionState m_state;

		[Token(Token = "0x4000FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_timeForNextUpdate;

		[Token(Token = "0x4000FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly byte PACKET_SIZE;

		[Token(Token = "0x4000FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		private static readonly byte PACKET_FORMAT;

		[Token(Token = "0x4000FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly byte[] sendTransformBuffer;

		[Token(Token = "0x4000FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly byte[] receiveTransformBuffer;

		[Token(Token = "0x4000FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 receivedPosition;

		[Token(Token = "0x4000FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 receivedPositionPrior;

		[Token(Token = "0x4000FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Quaternion receivedRotation;

		[Token(Token = "0x4000FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion receivedRotationPrior;

		[Token(Token = "0x4000FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float receivedTime;

		[Token(Token = "0x170001AC")]
		public bool Connected
		{
			[Token(Token = "0x60013B2")]
			[Address(RVA = "0xC2FCA0", Offset = "0xC2FCA0", VA = "0xC2FCA0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001AD")]
		public bool ShouldSendHeadUpdate
		{
			[Token(Token = "0x60013B5")]
			[Address(RVA = "0xC30258", Offset = "0xC30258", VA = "0xC30258")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60013AF")]
		[Address(RVA = "0xC2F9A8", Offset = "0xC2F9A8", VA = "0xC2F9A8")]
		public P2PManager(Transform initialHeadTransform)
		{
		}

		[Token(Token = "0x60013B0")]
		[Address(RVA = "0xC2FB00", Offset = "0xC2FB00", VA = "0xC2FB00")]
		public void ConnectTo(ulong userID)
		{
		}

		[Token(Token = "0x60013B1")]
		[Address(RVA = "0xC2FC6C", Offset = "0xC2FC6C", VA = "0xC2FC6C")]
		public void Disconnect()
		{
		}

		[Token(Token = "0x60013B3")]
		[Address(RVA = "0xC2FCB0", Offset = "0xC2FCB0", VA = "0xC2FCB0")]
		private void PeerConnectRequestCallback(Message<Oculus.Platform.Models.NetworkingPeer> msg)
		{
		}

		[Token(Token = "0x60013B4")]
		[Address(RVA = "0xC2FE2C", Offset = "0xC2FE2C", VA = "0xC2FE2C")]
		private void ConnectionStateChangedCallback(Message<Oculus.Platform.Models.NetworkingPeer> msg)
		{
		}

		[Token(Token = "0x60013B6")]
		[Address(RVA = "0xC3029C", Offset = "0xC3029C", VA = "0xC3029C")]
		public void SendHeadTransform(Transform headTransform)
		{
		}

		[Token(Token = "0x60013B7")]
		[Address(RVA = "0xC30444", Offset = "0xC30444", VA = "0xC30444")]
		private void PackFloat(float f, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x60013B8")]
		[Address(RVA = "0xC304EC", Offset = "0xC304EC", VA = "0xC304EC")]
		public void GetRemoteHeadTransform(Transform headTransform)
		{
		}
	}
	[Token(Token = "0x2000319")]
	public class PlatformManager : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x2000403")]
		public enum State
		{
			[Token(Token = "0x40014BF")]
			INITIALIZING,
			[Token(Token = "0x40014C0")]
			WAITING_TO_CALL_OR_ANSWER,
			[Token(Token = "0x40014C1")]
			WAITING_FOR_ANSWER,
			[Token(Token = "0x40014C2")]
			CONNECTED_IN_A_ROOM,
			[Token(Token = "0x40014C3")]
			HANGUP
		}

		[Token(Token = "0x2000404")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E1C70", Offset = "0x6E1C70")]
		private sealed class <>c__DisplayClass31_0
		{
			[Token(Token = "0x40014C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RoomManager.Invite invite;

			[Token(Token = "0x60018E0")]
			[Address(RVA = "0xC32390", Offset = "0xC32390", VA = "0xC32390")]
			public <>c__DisplayClass31_0()
			{
			}

			[Token(Token = "0x60018E1")]
			[Address(RVA = "0xC323A4", Offset = "0xC323A4", VA = "0xC323A4")]
			internal void <SetActiveInvites>b__0()
			{
			}
		}

		[Token(Token = "0x4000FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_invitesList;

		[Token(Token = "0x4000FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_invitePrefab;

		[Token(Token = "0x4000FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Camera m_camera;

		[Token(Token = "0x4000FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_remoteHead;

		[Token(Token = "0x4000FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private State m_currentState;

		[Token(Token = "0x4000FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PlatformManager s_instance;

		[Token(Token = "0x4000FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RoomManager m_roomManager;

		[Token(Token = "0x4000FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private P2PManager m_p2pManager;

		[Token(Token = "0x4000FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private VoipManager m_voipManager;

		[Token(Token = "0x4000FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ulong m_myID;

		[Token(Token = "0x4000FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private string m_myOculusID;

		[Token(Token = "0x170001AE")]
		public static State CurrentState
		{
			[Token(Token = "0x60013C1")]
			[Address(RVA = "0xC31760", Offset = "0xC31760", VA = "0xC31760")]
			get
			{
				return default(State);
			}
		}

		[Token(Token = "0x170001AF")]
		public static ulong MyID
		{
			[Token(Token = "0x60013C2")]
			[Address(RVA = "0xC2FB94", Offset = "0xC2FB94", VA = "0xC2FB94")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x170001B0")]
		public static string MyOculusID
		{
			[Token(Token = "0x60013C3")]
			[Address(RVA = "0xC317D4", Offset = "0xC317D4", VA = "0xC317D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013BA")]
		[Address(RVA = "0xC30980", Offset = "0xC30980", VA = "0xC30980")]
		private void Update()
		{
		}

		[Token(Token = "0x60013BB")]
		[Address(RVA = "0xC30BBC", Offset = "0xC30BBC", VA = "0xC30BBC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013BC")]
		[Address(RVA = "0xC31290", Offset = "0xC31290", VA = "0xC31290")]
		private void Start()
		{
		}

		[Token(Token = "0x60013BD")]
		[Address(RVA = "0xC31328", Offset = "0xC31328", VA = "0xC31328")]
		private void IsEntitledCallback(Message msg)
		{
		}

		[Token(Token = "0x60013BE")]
		[Address(RVA = "0xC314C4", Offset = "0xC314C4", VA = "0xC314C4")]
		private void GetLoggedInUserCallback(Message<User> msg)
		{
		}

		[Token(Token = "0x60013BF")]
		[Address(RVA = "0xC315EC", Offset = "0xC315EC", VA = "0xC315EC")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x60013C0")]
		[Address(RVA = "0xC31418", Offset = "0xC31418", VA = "0xC31418")]
		public static void TerminateWithError(Message msg)
		{
		}

		[Token(Token = "0x60013C4")]
		[Address(RVA = "0xC318E8", Offset = "0xC318E8", VA = "0xC318E8")]
		public void CallFriendOnClick()
		{
		}

		[Token(Token = "0x60013C5")]
		[Address(RVA = "0xC31A20", Offset = "0xC31A20", VA = "0xC31A20")]
		public void HangupOnClick()
		{
		}

		[Token(Token = "0x60013C6")]
		[Address(RVA = "0xC31A38", Offset = "0xC31A38", VA = "0xC31A38")]
		public void QuitOnClick()
		{
		}

		[Token(Token = "0x60013C7")]
		[Address(RVA = "0xC31A40", Offset = "0xC31A40", VA = "0xC31A40")]
		public static void AnswerCallOnClick(ulong roomID)
		{
		}

		[Token(Token = "0x60013C8")]
		[Address(RVA = "0xC30DB8", Offset = "0xC30DB8", VA = "0xC30DB8")]
		public static void TransitionToState(State newState)
		{
		}

		[Token(Token = "0x60013C9")]
		[Address(RVA = "0xC30018", Offset = "0xC30018", VA = "0xC30018")]
		public static void SetBackgroundColorForState()
		{
		}

		[Token(Token = "0x60013CA")]
		[Address(RVA = "0xC31CCC", Offset = "0xC31CCC", VA = "0xC31CCC")]
		public static void SetActiveInvites(List<RoomManager.Invite> invites)
		{
		}

		[Token(Token = "0x60013CB")]
		[Address(RVA = "0xC32398", Offset = "0xC32398", VA = "0xC32398")]
		public PlatformManager()
		{
		}
	}
	[Token(Token = "0x200031A")]
	public class RoomManager
	{
		[Token(Token = "0x2000405")]
		public struct Invite
		{
			[Token(Token = "0x40014C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public readonly ulong RoomID;

			[Token(Token = "0x40014C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public readonly string OwnerID;

			[Token(Token = "0x60018E2")]
			[Address(RVA = "0x77F8A4", Offset = "0x77F8A4", VA = "0x77F8A4")]
			public Invite(ulong roomID, string owner)
			{
			}
		}

		[Token(Token = "0x4000FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ulong m_roomID;

		[Token(Token = "0x4000FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private User m_remoteUser;

		[Token(Token = "0x4000FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly float INVITE_POLL_FREQ_SECONDS;

		[Token(Token = "0x4000FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_nextPollTime;

		[Token(Token = "0x4000FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<ulong> m_pendingRoomRequests;

		[Token(Token = "0x4000FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Invite> m_invites;

		[Token(Token = "0x170001B1")]
		public ulong RemoteUserID
		{
			[Token(Token = "0x60013CE")]
			[Address(RVA = "0xC31BE4", Offset = "0xC31BE4", VA = "0xC31BE4")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x170001B2")]
		public string RemoteOculusID
		{
			[Token(Token = "0x60013CF")]
			[Address(RVA = "0xC3240C", Offset = "0xC3240C", VA = "0xC3240C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B3")]
		public bool ShouldPollInviteList
		{
			[Token(Token = "0x60013D5")]
			[Address(RVA = "0xC30A3C", Offset = "0xC30A3C", VA = "0xC30A3C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60013CD")]
		[Address(RVA = "0xC31108", Offset = "0xC31108", VA = "0xC31108")]
		public RoomManager()
		{
		}

		[Token(Token = "0x60013D0")]
		[Address(RVA = "0xC32470", Offset = "0xC32470", VA = "0xC32470")]
		private void LaunchedFromAcceptingInviteCallback(Message<string> msg)
		{
		}

		[Token(Token = "0x60013D1")]
		[Address(RVA = "0xC315C4", Offset = "0xC315C4", VA = "0xC315C4")]
		public bool CheckForLaunchInvite()
		{
			return default(bool);
		}

		[Token(Token = "0x60013D2")]
		[Address(RVA = "0xC3196C", Offset = "0xC3196C", VA = "0xC3196C")]
		public void CreateRoomAndLaunchInviteMenu()
		{
		}

		[Token(Token = "0x60013D3")]
		[Address(RVA = "0xC325A0", Offset = "0xC325A0", VA = "0xC325A0")]
		private void CreateAndJoinPrivateRoomCallback(Message<Oculus.Platform.Models.Room> msg)
		{
		}

		[Token(Token = "0x60013D4")]
		[Address(RVA = "0xC326C0", Offset = "0xC326C0", VA = "0xC326C0")]
		private void OnLaunchInviteWorkflowComplete(Message msg)
		{
		}

		[Token(Token = "0x60013D6")]
		[Address(RVA = "0xC30A7C", Offset = "0xC30A7C", VA = "0xC30A7C")]
		public void UpdateActiveInvitesList()
		{
		}

		[Token(Token = "0x60013D7")]
		[Address(RVA = "0xC32748", Offset = "0xC32748", VA = "0xC32748")]
		private void GetRoomInviteNotificationsCallback(Message msg_untyped)
		{
		}

		[Token(Token = "0x60013D8")]
		[Address(RVA = "0xC32B18", Offset = "0xC32B18", VA = "0xC32B18")]
		private void GetRoomInfoCallback(Message<Oculus.Platform.Models.Room> msg)
		{
		}

		[Token(Token = "0x60013D9")]
		[Address(RVA = "0xC31B30", Offset = "0xC31B30", VA = "0xC31B30")]
		public void JoinExistingRoom(ulong roomID)
		{
		}

		[Token(Token = "0x60013DA")]
		[Address(RVA = "0xC32C9C", Offset = "0xC32C9C", VA = "0xC32C9C")]
		private void JoinRoomCallback(Message<Oculus.Platform.Models.Room> msg)
		{
		}

		[Token(Token = "0x60013DB")]
		[Address(RVA = "0xC33120", Offset = "0xC33120", VA = "0xC33120")]
		private void RoomUpdateCallback(Message<Oculus.Platform.Models.Room> msg)
		{
		}

		[Token(Token = "0x60013DC")]
		[Address(RVA = "0xC31640", Offset = "0xC31640", VA = "0xC31640")]
		public void LeaveCurrentRoom()
		{
		}
	}
	[Token(Token = "0x200031B")]
	public class VREyeRaycaster : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private EventSystem m_eventSystem;

		[Token(Token = "0x4000FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Button m_currentButton;

		[Token(Token = "0x60013DE")]
		[Address(RVA = "0xC3361C", Offset = "0xC3361C", VA = "0xC3361C")]
		private void Update()
		{
		}

		[Token(Token = "0x60013DF")]
		[Address(RVA = "0xC3381C", Offset = "0xC3381C", VA = "0xC3381C")]
		public VREyeRaycaster()
		{
		}
	}
	[Token(Token = "0x200031C")]
	public class VoipManager
	{
		[Token(Token = "0x4000FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ulong m_remoteID;

		[Token(Token = "0x4000FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PeerConnectionState m_state;

		[Token(Token = "0x4000FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly GameObject m_remoteHead;

		[Token(Token = "0x170001B4")]
		public bool Connected
		{
			[Token(Token = "0x60013E3")]
			[Address(RVA = "0xC31CBC", Offset = "0xC31CBC", VA = "0xC31CBC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60013E0")]
		[Address(RVA = "0xC311D0", Offset = "0xC311D0", VA = "0xC311D0")]
		public VoipManager(GameObject remoteHead)
		{
		}

		[Token(Token = "0x60013E1")]
		[Address(RVA = "0xC31BFC", Offset = "0xC31BFC", VA = "0xC31BFC")]
		public void ConnectTo(ulong userID)
		{
		}

		[Token(Token = "0x60013E2")]
		[Address(RVA = "0xC316B8", Offset = "0xC316B8", VA = "0xC316B8")]
		public void Disconnect()
		{
		}

		[Token(Token = "0x60013E4")]
		[Address(RVA = "0xC33AEC", Offset = "0xC33AEC", VA = "0xC33AEC")]
		private void VoipConnectRequestCallback(Message<Oculus.Platform.Models.NetworkingPeer> msg)
		{
		}

		[Token(Token = "0x60013E5")]
		[Address(RVA = "0xC33D50", Offset = "0xC33D50", VA = "0xC33D50")]
		private void VoipStateChangedCallback(Message<Oculus.Platform.Models.NetworkingPeer> msg)
		{
		}
	}
}
namespace Oculus.Platform.Samples.VrHoops
{
	[Token(Token = "0x200031D")]
	public class AIPlayer : Player
	{
		[Token(Token = "0x60013E6")]
		[Address(RVA = "0xC25E68", Offset = "0xC25E68", VA = "0xC25E68")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60013E7")]
		[Address(RVA = "0xC26144", Offset = "0xC26144", VA = "0xC26144")]
		public AIPlayer()
		{
		}
	}
	[Token(Token = "0x200031E")]
	public class AchievementsManager
	{
		[Token(Token = "0x4000FF9")]
		private const string LIKES_TO_WIN = "LIKES_TO_WIN";

		[Token(Token = "0x4000FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool m_likesToWinUnlocked;

		[Token(Token = "0x170001B5")]
		public bool LikesToWin
		{
			[Token(Token = "0x60013E8")]
			[Address(RVA = "0xC261B8", Offset = "0xC261B8", VA = "0xC261B8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60013E9")]
		[Address(RVA = "0xC261C0", Offset = "0xC261C0", VA = "0xC261C0")]
		public void CheckForAchievmentUpdates()
		{
		}

		[Token(Token = "0x60013EA")]
		[Address(RVA = "0xC262D0", Offset = "0xC262D0", VA = "0xC262D0")]
		public void RecordWinForLocalUser()
		{
		}

		[Token(Token = "0x60013EB")]
		[Address(RVA = "0xC2632C", Offset = "0xC2632C", VA = "0xC2632C")]
		public AchievementsManager()
		{
		}

		[Token(Token = "0x60013EC")]
		[Address(RVA = "0xC26334", Offset = "0xC26334", VA = "0xC26334")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ED8D4", Offset = "0x6ED8D4")]
		private void <CheckForAchievmentUpdates>b__4_0(Message<AchievementProgressList> msg)
		{
		}
	}
	[Token(Token = "0x200031F")]
	public class BallEjector : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x60013ED")]
		[Address(RVA = "0xC2657C", Offset = "0xC2657C", VA = "0xC2657C")]
		public BallEjector()
		{
		}
	}
	[Token(Token = "0x2000320")]
	public class Camera2DController : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x60013EE")]
		[Address(RVA = "0xC26584", Offset = "0xC26584", VA = "0xC26584")]
		private void Update()
		{
		}

		[Token(Token = "0x60013EF")]
		[Address(RVA = "0xC267F8", Offset = "0xC267F8", VA = "0xC267F8")]
		public Camera2DController()
		{
		}
	}
	[Token(Token = "0x2000321")]
	public class DetectBasket : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x2000406")]
		private enum BasketPhase
		{
			[Token(Token = "0x40014C8")]
			NONE,
			[Token(Token = "0x40014C9")]
			TOP,
			[Token(Token = "0x40014CA")]
			BOTH,
			[Token(Token = "0x40014CB")]
			BOTTOM
		}

		[Token(Token = "0x4000FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private BasketPhase m_phase;

		[Token(Token = "0x4000FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Player m_owningPlayer;

		[Token(Token = "0x170001B6")]
		public Player Player
		{
			[Token(Token = "0x60013F0")]
			[Address(RVA = "0xC26800", Offset = "0xC26800", VA = "0xC26800")]
			set
			{
			}
		}

		[Token(Token = "0x60013F1")]
		[Address(RVA = "0xC26808", Offset = "0xC26808", VA = "0xC26808")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60013F2")]
		[Address(RVA = "0xC268E8", Offset = "0xC268E8", VA = "0xC268E8")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60013F3")]
		[Address(RVA = "0xC26AA0", Offset = "0xC26AA0", VA = "0xC26AA0")]
		public DetectBasket()
		{
		}
	}
	[Token(Token = "0x2000322")]
	public class FlyText : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000FFD")]
		private const float LIFESPAN = 3f;

		[Token(Token = "0x4000FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Vector3 m_movePerFrame;

		[Token(Token = "0x4000FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float m_eol;

		[Token(Token = "0x60013F4")]
		[Address(RVA = "0xC26AA8", Offset = "0xC26AA8", VA = "0xC26AA8")]
		private void Start()
		{
		}

		[Token(Token = "0x60013F5")]
		[Address(RVA = "0xC26B44", Offset = "0xC26B44", VA = "0xC26B44")]
		private void Update()
		{
		}

		[Token(Token = "0x60013F6")]
		[Address(RVA = "0xC26C80", Offset = "0xC26C80", VA = "0xC26C80")]
		public FlyText()
		{
		}
	}
	[Token(Token = "0x2000323")]
	public class GoalMover : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float MAX_OFFSET;

		[Token(Token = "0x4001001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_speed;

		[Token(Token = "0x4001002")]
		private const float MOVE_TOLERANCE = 0.1f;

		[Token(Token = "0x4001003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 m_expectedPosition;

		[Token(Token = "0x4001004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 m_moveDirection;

		[Token(Token = "0x4001005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 m_nextMoveDirection;

		[Token(Token = "0x170001B7")]
		public Vector3 ExpectedPosition
		{
			[Token(Token = "0x60013F7")]
			[Address(RVA = "0xC26D1C", Offset = "0xC26D1C", VA = "0xC26D1C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60013F8")]
			[Address(RVA = "0xC26D28", Offset = "0xC26D28", VA = "0xC26D28")]
			set
			{
			}
		}

		[Token(Token = "0x170001B8")]
		public Vector3 MoveDirection
		{
			[Token(Token = "0x60013F9")]
			[Address(RVA = "0xC26D34", Offset = "0xC26D34", VA = "0xC26D34")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60013FA")]
			[Address(RVA = "0xC26D40", Offset = "0xC26D40", VA = "0xC26D40")]
			set
			{
			}
		}

		[Token(Token = "0x170001B9")]
		public Vector3 NextMoveDirection
		{
			[Token(Token = "0x60013FB")]
			[Address(RVA = "0xC26D4C", Offset = "0xC26D4C", VA = "0xC26D4C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60013FC")]
			[Address(RVA = "0xC26D58", Offset = "0xC26D58", VA = "0xC26D58")]
			set
			{
			}
		}

		[Token(Token = "0x60013FD")]
		[Address(RVA = "0xC26D64", Offset = "0xC26D64", VA = "0xC26D64")]
		private void Start()
		{
		}

		[Token(Token = "0x60013FE")]
		[Address(RVA = "0xC26EF4", Offset = "0xC26EF4", VA = "0xC26EF4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60013FF")]
		[Address(RVA = "0xC27220", Offset = "0xC27220", VA = "0xC27220")]
		public GoalMover()
		{
		}
	}
	[Token(Token = "0x2000324")]
	public class LeaderboardManager
	{
		[Token(Token = "0x2000407")]
		public delegate void OnMostWinsLeaderboardUpdated(SortedDictionary<int, LeaderboardEntry> entries);

		[Token(Token = "0x2000408")]
		public delegate void OnHighScoreLeaderboardUpdated(SortedDictionary<int, LeaderboardEntry> entries);

		[Token(Token = "0x4001006")]
		private const string MOST_MATCHES_WON = "MOST_MATCHES_WON";

		[Token(Token = "0x4001007")]
		private const string HIGHEST_MATCH_SCORE = "HIGHEST_MATCH_SCORE";

		[Token(Token = "0x4001008")]
		private const int TOP_N_COUNT = 5;

		[Token(Token = "0x4001009")]
		private const float LEADERBOARD_POLL_FREQ = 30f;

		[Token(Token = "0x400100A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float m_nextCheckTime;

		[Token(Token = "0x400100B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SortedDictionary<int, LeaderboardEntry> m_mostWins;

		[Token(Token = "0x400100C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool m_foundLocalUserMostWinsEntry;

		[Token(Token = "0x400100D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private long m_numWins;

		[Token(Token = "0x400100E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OnMostWinsLeaderboardUpdated m_mostWinsCallback;

		[Token(Token = "0x400100F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SortedDictionary<int, LeaderboardEntry> m_highScores;

		[Token(Token = "0x4001010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_foundLocalUserHighScore;

		[Token(Token = "0x4001011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OnHighScoreLeaderboardUpdated m_highScoreCallback;

		[Token(Token = "0x170001BA")]
		public OnMostWinsLeaderboardUpdated MostWinsLeaderboardUpdatedCallback
		{
			[Token(Token = "0x6001401")]
			[Address(RVA = "0xC274B4", Offset = "0xC274B4", VA = "0xC274B4")]
			set
			{
			}
		}

		[Token(Token = "0x170001BB")]
		public OnHighScoreLeaderboardUpdated HighScoreLeaderboardUpdatedCallback
		{
			[Token(Token = "0x6001404")]
			[Address(RVA = "0xC27CAC", Offset = "0xC27CAC", VA = "0xC27CAC")]
			set
			{
			}
		}

		[Token(Token = "0x6001400")]
		[Address(RVA = "0xC27234", Offset = "0xC27234", VA = "0xC27234")]
		public void CheckForUpdates()
		{
		}

		[Token(Token = "0x6001402")]
		[Address(RVA = "0xC2729C", Offset = "0xC2729C", VA = "0xC2729C")]
		private void QueryMostWinsLeaderboard()
		{
		}

		[Token(Token = "0x6001403")]
		[Address(RVA = "0xC274BC", Offset = "0xC274BC", VA = "0xC274BC")]
		private void MostWinsGetEntriesCallback(Message<LeaderboardEntryList> msg)
		{
		}

		[Token(Token = "0x6001405")]
		[Address(RVA = "0xC273A8", Offset = "0xC273A8", VA = "0xC273A8")]
		private void QueryHighScoreLeaderboard()
		{
		}

		[Token(Token = "0x6001406")]
		[Address(RVA = "0xC27CB4", Offset = "0xC27CB4", VA = "0xC27CB4")]
		private void HighestScoreGetEntriesCallback(Message<LeaderboardEntryList> msg)
		{
		}

		[Token(Token = "0x6001407")]
		[Address(RVA = "0xC283F8", Offset = "0xC283F8", VA = "0xC283F8")]
		public void SubmitMatchScores(bool wonMatch, uint score)
		{
		}

		[Token(Token = "0x6001408")]
		[Address(RVA = "0xC284AC", Offset = "0xC284AC", VA = "0xC284AC")]
		public LeaderboardManager()
		{
		}
	}
	[Token(Token = "0x2000325")]
	public class LocalPlayer : Player
	{
		[Token(Token = "0x170001BC")]
		public override uint Score
		{
			[Token(Token = "0x6001409")]
			[Address(RVA = "0xC28534", Offset = "0xC28534", VA = "0xC28534", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x600140A")]
		[Address(RVA = "0xC28814", Offset = "0xC28814", VA = "0xC28814")]
		private void Update()
		{
		}

		[Token(Token = "0x600140B")]
		[Address(RVA = "0xC28994", Offset = "0xC28994", VA = "0xC28994")]
		public LocalPlayer()
		{
		}
	}
	[Token(Token = "0x2000326")]
	public class MatchController : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x2000409")]
		private enum State
		{
			[Token(Token = "0x40014CD")]
			UNKNOWN,
			[Token(Token = "0x40014CE")]
			NONE,
			[Token(Token = "0x40014CF")]
			WAITING_TO_START_PRACTICE,
			[Token(Token = "0x40014D0")]
			PRACTICING,
			[Token(Token = "0x40014D1")]
			VIEWING_RESULTS_PRACTICE,
			[Token(Token = "0x40014D2")]
			WAITING_FOR_MATCH,
			[Token(Token = "0x40014D3")]
			WAITING_TO_SETUP_MATCH,
			[Token(Token = "0x40014D4")]
			PLAYING_MATCH,
			[Token(Token = "0x40014D5")]
			VIEWING_MATCH_RESULTS
		}

		[Token(Token = "0x4001012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text m_timerText;

		[Token(Token = "0x4001013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Camera m_camera;

		[Token(Token = "0x4001014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform m_idleCameraTransform;

		[Token(Token = "0x4001015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Text m_matchmakeButtonText;

		[Token(Token = "0x4001016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private PlayerArea[] m_playerAreas;

		[Token(Token = "0x4001017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private uint PRACTICE_WARMUP_TIME;

		[Token(Token = "0x4001018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private uint MATCH_WARMUP_TIME;

		[Token(Token = "0x4001019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private uint MATCH_TIME;

		[Token(Token = "0x400101A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private uint MATCH_COOLDOWN_TIME;

		[Token(Token = "0x400101B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject m_mostWinsLeaderboard;

		[Token(Token = "0x400101C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject m_highestScoresLeaderboard;

		[Token(Token = "0x400101D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject m_leaderboardEntryPrefab;

		[Token(Token = "0x400101E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject m_flytext;

		[Token(Token = "0x400101F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private State m_currentState;

		[Token(Token = "0x4001020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float m_nextStateTransitionTime;

		[Token(Token = "0x4001021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int m_localSlot;

		[Token(Token = "0x170001BD")]
		public float MatchStartTime
		{
			[Token(Token = "0x600140E")]
			[Address(RVA = "0xC29188", Offset = "0xC29188", VA = "0xC29188")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600140F")]
			[Address(RVA = "0xC291A8", Offset = "0xC291A8", VA = "0xC291A8")]
			private set
			{
			}
		}

		[Token(Token = "0x600140C")]
		[Address(RVA = "0xC28998", Offset = "0xC28998", VA = "0xC28998")]
		private void Start()
		{
		}

		[Token(Token = "0x600140D")]
		[Address(RVA = "0xC28EC0", Offset = "0xC28EC0", VA = "0xC28EC0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001410")]
		[Address(RVA = "0xC28BF8", Offset = "0xC28BF8", VA = "0xC28BF8")]
		private void TransitionToState(State newState)
		{
		}

		[Token(Token = "0x6001411")]
		[Address(RVA = "0xC28EE4", Offset = "0xC28EE4", VA = "0xC28EE4")]
		private void UpdateCheckForNextTimedTransition()
		{
		}

		[Token(Token = "0x6001412")]
		[Address(RVA = "0xC28F88", Offset = "0xC28F88", VA = "0xC28F88")]
		private void UpdateMatchTimer()
		{
		}

		[Token(Token = "0x6001413")]
		[Address(RVA = "0xC291B0", Offset = "0xC291B0", VA = "0xC291B0")]
		private void SetupForIdle()
		{
		}

		[Token(Token = "0x6001414")]
		[Address(RVA = "0xC29424", Offset = "0xC29424", VA = "0xC29424")]
		private void SetupForPractice()
		{
		}

		[Token(Token = "0x6001415")]
		[Address(RVA = "0xC29AEC", Offset = "0xC29AEC", VA = "0xC29AEC")]
		private Player MatchPlayerAddedCallback(int slot, User user)
		{
			return null;
		}

		[Token(Token = "0x6001416")]
		[Address(RVA = "0xC2925C", Offset = "0xC2925C", VA = "0xC2925C")]
		private void MoveCameraToIdlePosition()
		{
		}

		[Token(Token = "0x6001417")]
		[Address(RVA = "0xC29524", Offset = "0xC29524", VA = "0xC29524")]
		private void MoveCameraToMatchPosition()
		{
		}

		[Token(Token = "0x6001418")]
		[Address(RVA = "0xC29D90", Offset = "0xC29D90", VA = "0xC29D90")]
		public void StartPracticeMatch()
		{
		}

		[Token(Token = "0x6001419")]
		[Address(RVA = "0xC29DA8", Offset = "0xC29DA8", VA = "0xC29DA8")]
		public void PlayOnlineOrCancel()
		{
		}

		[Token(Token = "0x600141A")]
		[Address(RVA = "0xC29F58", Offset = "0xC29F58", VA = "0xC29F58")]
		private void OnMatchFoundCallback(bool success)
		{
		}

		[Token(Token = "0x600141B")]
		[Address(RVA = "0xC29F6C", Offset = "0xC29F6C", VA = "0xC29F6C")]
		private float StartTimeOfferCallback(float remoteTime)
		{
			return default(float);
		}

		[Token(Token = "0x600141C")]
		[Address(RVA = "0xC2A070", Offset = "0xC2A070", VA = "0xC2A070")]
		private void MostWinsLeaderboardCallback(SortedDictionary<int, LeaderboardEntry> entries)
		{
		}

		[Token(Token = "0x600141D")]
		[Address(RVA = "0xC2A5C4", Offset = "0xC2A5C4", VA = "0xC2A5C4")]
		private void HighestScoreLeaderboardCallback(SortedDictionary<int, LeaderboardEntry> entries)
		{
		}

		[Token(Token = "0x600141E")]
		[Address(RVA = "0xC296A8", Offset = "0xC296A8", VA = "0xC296A8")]
		private void CalculateMatchResults()
		{
		}

		[Token(Token = "0x600141F")]
		[Address(RVA = "0xC29BF4", Offset = "0xC29BF4", VA = "0xC29BF4")]
		private void DisplayAchievementFlytext()
		{
		}

		[Token(Token = "0x6001420")]
		[Address(RVA = "0xC2ABCC", Offset = "0xC2ABCC", VA = "0xC2ABCC")]
		public MatchController()
		{
		}
	}
	[Token(Token = "0x2000327")]
	public class MatchmakingManager
	{
		[Token(Token = "0x200040A")]
		public delegate void OnEnqueueResult(bool successful);

		[Token(Token = "0x200040B")]
		public delegate Player OnMatchPlayerAdded(int slot, User user);

		[Token(Token = "0x4001022")]
		private const string NORMAL_POOL = "NORMAL_QUICKMATCH";

		[Token(Token = "0x4001023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ulong m_matchRoom;

		[Token(Token = "0x4001024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Dictionary<ulong, User> m_remotePlayers;

		[Token(Token = "0x4001025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private OnEnqueueResult m_enqueueCallback;

		[Token(Token = "0x4001026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OnMatchPlayerAdded m_playerCallback;

		[Token(Token = "0x170001BE")]
		public OnEnqueueResult EnqueueResultCallback
		{
			[Token(Token = "0x6001422")]
			[Address(RVA = "0xC2AD20", Offset = "0xC2AD20", VA = "0xC2AD20")]
			private get
			{
				return null;
			}
			[Token(Token = "0x6001423")]
			[Address(RVA = "0xC2AD28", Offset = "0xC2AD28", VA = "0xC2AD28")]
			set
			{
			}
		}

		[Token(Token = "0x170001BF")]
		public OnMatchPlayerAdded MatchPlayerAddedCallback
		{
			[Token(Token = "0x6001424")]
			[Address(RVA = "0xC2AD30", Offset = "0xC2AD30", VA = "0xC2AD30")]
			private get
			{
				return null;
			}
			[Token(Token = "0x6001425")]
			[Address(RVA = "0xC2AD38", Offset = "0xC2AD38", VA = "0xC2AD38")]
			set
			{
			}
		}

		[Token(Token = "0x6001421")]
		[Address(RVA = "0xC2AC38", Offset = "0xC2AC38", VA = "0xC2AC38")]
		public MatchmakingManager()
		{
		}

		[Token(Token = "0x6001426")]
		[Address(RVA = "0xC29E78", Offset = "0xC29E78", VA = "0xC29E78")]
		public void QueueForMatch()
		{
		}

		[Token(Token = "0x6001427")]
		[Address(RVA = "0xC2AD40", Offset = "0xC2AD40", VA = "0xC2AD40")]
		private void MatchmakingEnqueueCallback(Message msg)
		{
		}

		[Token(Token = "0x6001428")]
		[Address(RVA = "0xC2B084", Offset = "0xC2B084", VA = "0xC2B084")]
		private void MatchFoundCallback(Message<Oculus.Platform.Models.Room> msg)
		{
		}

		[Token(Token = "0x6001429")]
		[Address(RVA = "0xC2B154", Offset = "0xC2B154", VA = "0xC2B154")]
		private void MatchmakingJoinRoomCallback(Message<Oculus.Platform.Models.Room> msg)
		{
		}

		[Token(Token = "0x600142A")]
		[Address(RVA = "0xC2B98C", Offset = "0xC2B98C", VA = "0xC2B98C")]
		private void MatchmakingRoomUpdateCallback(Message<Oculus.Platform.Models.Room> msg)
		{
		}

		[Token(Token = "0x600142B")]
		[Address(RVA = "0xC299BC", Offset = "0xC299BC", VA = "0xC299BC")]
		public void EndMatch()
		{
		}

		[Token(Token = "0x600142C")]
		[Address(RVA = "0xC29F30", Offset = "0xC29F30", VA = "0xC29F30")]
		public void LeaveQueue()
		{
		}
	}
	[Token(Token = "0x2000328")]
	public class P2PManager
	{
		[Token(Token = "0x200040C")]
		private class RemotePlayerData
		{
			[Token(Token = "0x40014D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PeerConnectionState state;

			[Token(Token = "0x40014D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public RemotePlayer player;

			[Token(Token = "0x40014D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float remoteTimeOffset;

			[Token(Token = "0x40014D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float lastReceivedBallsTime;

			[Token(Token = "0x40014DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public readonly Dictionary<int, P2PNetworkBall> activeBalls;

			[Token(Token = "0x60018F3")]
			[Address(RVA = "0xC2D230", Offset = "0xC2D230", VA = "0xC2D230")]
			public RemotePlayerData()
			{
			}
		}

		[Token(Token = "0x200040D")]
		public delegate float StartTimeOffer(float remoteTime);

		[Token(Token = "0x4001027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Dictionary<ulong, RemotePlayerData> m_remotePlayers;

		[Token(Token = "0x4001028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_timeForNextBallUpdate;

		[Token(Token = "0x4001029")]
		private const byte TIME_SYNC_MESSAGE = 1;

		[Token(Token = "0x400102A")]
		private const uint TIME_SYNC_MESSAGE_SIZE = 5u;

		[Token(Token = "0x400102B")]
		private const int TIME_SYNC_MESSAGE_COUNT = 7;

		[Token(Token = "0x400102C")]
		private const byte START_TIME_MESSAGE = 2;

		[Token(Token = "0x400102D")]
		private const uint START_TIME_MESSAGE_SIZE = 5u;

		[Token(Token = "0x400102E")]
		private const byte BACKBOARD_UPDATE_MESSAGE = 3;

		[Token(Token = "0x400102F")]
		private const uint BACKBOARD_UPDATE_MESSAGE_SIZE = 41u;

		[Token(Token = "0x4001030")]
		private const byte LOCAL_BALLS_UPDATE_MESSAGE = 4;

		[Token(Token = "0x4001031")]
		private const uint LOCAL_BALLS_UPDATE_MESSATE_SIZE_MAX = 353u;

		[Token(Token = "0x4001032")]
		private const float LOCAL_BALLS_UPDATE_DELAY = 0.1f;

		[Token(Token = "0x4001033")]
		private const byte SCORE_UPDATE_MESSAGE = 5;

		[Token(Token = "0x4001034")]
		private const uint SCORE_UPDATE_MESSAGE_SIZE = 5u;

		[Token(Token = "0x4001035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Dictionary<int, P2PNetworkBall> m_localBalls;

		[Token(Token = "0x4001036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly byte[] readBuffer;

		[Token(Token = "0x4001037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly Dictionary<ulong, List<float>> m_remoteSyncTimeCache;

		[Token(Token = "0x4001038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly Dictionary<ulong, float> m_remoteSentTimeCache;

		[Token(Token = "0x4001039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private StartTimeOffer m_startTimeOfferCallback;

		[Token(Token = "0x170001C0")]
		public StartTimeOffer StartTimeOfferCallback
		{
			[Token(Token = "0x6001436")]
			[Address(RVA = "0xC2DB9C", Offset = "0xC2DB9C", VA = "0xC2DB9C")]
			private get
			{
				return null;
			}
			[Token(Token = "0x6001437")]
			[Address(RVA = "0xC2DBA4", Offset = "0xC2DBA4", VA = "0xC2DBA4")]
			set
			{
			}
		}

		[Token(Token = "0x600142D")]
		[Address(RVA = "0xC2C018", Offset = "0xC2C018", VA = "0xC2C018")]
		public P2PManager()
		{
		}

		[Token(Token = "0x600142E")]
		[Address(RVA = "0xC2C190", Offset = "0xC2C190", VA = "0xC2C190")]
		public void UpdateNetwork()
		{
		}

		[Token(Token = "0x600142F")]
		[Address(RVA = "0xC2B7DC", Offset = "0xC2B7DC", VA = "0xC2B7DC")]
		public void AddRemotePlayer(RemotePlayer player)
		{
		}

		[Token(Token = "0x6001430")]
		[Address(RVA = "0xC2BDC0", Offset = "0xC2BDC0", VA = "0xC2BDC0")]
		public void DisconnectAll()
		{
		}

		[Token(Token = "0x6001431")]
		[Address(RVA = "0xC2D2A0", Offset = "0xC2D2A0", VA = "0xC2D2A0")]
		private void PeerConnectRequestCallback(Message<Oculus.Platform.Models.NetworkingPeer> msg)
		{
		}

		[Token(Token = "0x6001432")]
		[Address(RVA = "0xC2D468", Offset = "0xC2D468", VA = "0xC2D468")]
		private void ConnectionStateChangedCallback(Message<Oculus.Platform.Models.NetworkingPeer> msg)
		{
		}

		[Token(Token = "0x6001433")]
		[Address(RVA = "0xC2D6B8", Offset = "0xC2D6B8", VA = "0xC2D6B8")]
		private void SendTimeSyncMessage(ulong remoteID)
		{
		}

		[Token(Token = "0x6001434")]
		[Address(RVA = "0xC2C38C", Offset = "0xC2C38C", VA = "0xC2C38C")]
		private void ReadTimeSyncMessage(ulong remoteID, byte[] msg)
		{
		}

		[Token(Token = "0x6001435")]
		[Address(RVA = "0xC2DAF4", Offset = "0xC2DAF4", VA = "0xC2DAF4")]
		private float ShiftRemoteTime(ulong remoteID, float remoteTime)
		{
			return default(float);
		}

		[Token(Token = "0x6001438")]
		[Address(RVA = "0xC2D938", Offset = "0xC2D938", VA = "0xC2D938")]
		private void OfferMatchStartTime()
		{
		}

		[Token(Token = "0x6001439")]
		[Address(RVA = "0xC2C96C", Offset = "0xC2C96C", VA = "0xC2C96C")]
		private void ReceiveMatchStartTimeOffer(ulong remoteID, byte[] msg)
		{
		}

		[Token(Token = "0x600143A")]
		[Address(RVA = "0xC2DE54", Offset = "0xC2DE54", VA = "0xC2DE54")]
		public void SendBackboardUpdate(float time, Vector3 pos, Vector3 moveDir, Vector3 nextMoveDir)
		{
		}

		[Token(Token = "0x600143B")]
		[Address(RVA = "0xC2C9C8", Offset = "0xC2C9C8", VA = "0xC2C9C8")]
		private void ReceiveBackboardUpdate(ulong remoteID, byte[] msg)
		{
		}

		[Token(Token = "0x600143C")]
		[Address(RVA = "0xC288FC", Offset = "0xC288FC", VA = "0xC288FC")]
		public void AddNetworkBall(GameObject ball)
		{
		}

		[Token(Token = "0x600143D")]
		[Address(RVA = "0xC2E2BC", Offset = "0xC2E2BC", VA = "0xC2E2BC")]
		public void RemoveNetworkBall(GameObject ball)
		{
		}

		[Token(Token = "0x600143E")]
		[Address(RVA = "0xC2CEE0", Offset = "0xC2CEE0", VA = "0xC2CEE0")]
		private void SendLocalBallTransforms()
		{
		}

		[Token(Token = "0x600143F")]
		[Address(RVA = "0xC2CB04", Offset = "0xC2CB04", VA = "0xC2CB04")]
		private void ReceiveBallTransforms(ulong remoteID, byte[] msg, ulong msgLength)
		{
		}

		[Token(Token = "0x6001440")]
		[Address(RVA = "0xC2869C", Offset = "0xC2869C", VA = "0xC2869C")]
		public void SendScoreUpdate(uint score)
		{
		}

		[Token(Token = "0x6001441")]
		[Address(RVA = "0xC2CE38", Offset = "0xC2CE38", VA = "0xC2CE38")]
		private void ReceiveScoredUpdate(ulong remoteID, byte[] msg)
		{
		}

		[Token(Token = "0x6001442")]
		[Address(RVA = "0xC2E04C", Offset = "0xC2E04C", VA = "0xC2E04C")]
		private void PackVector3(Vector3 vec, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x6001443")]
		[Address(RVA = "0xC2E09C", Offset = "0xC2E09C", VA = "0xC2E09C")]
		private Vector3 UnpackVector3(byte[] buf, ref int offset)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001444")]
		[Address(RVA = "0xC2E9BC", Offset = "0xC2E9BC", VA = "0xC2E9BC")]
		private void PackQuaternion(Quaternion quat, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x6001445")]
		[Address(RVA = "0xC2D804", Offset = "0xC2D804", VA = "0xC2D804")]
		private void PackFloat(float value, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x6001446")]
		[Address(RVA = "0xC2D8AC", Offset = "0xC2D8AC", VA = "0xC2D8AC")]
		private float UnpackFloat(byte[] buf, ref int offset)
		{
			return default(float);
		}

		[Token(Token = "0x6001447")]
		[Address(RVA = "0xC2DE20", Offset = "0xC2DE20", VA = "0xC2DE20")]
		private float UnpackTime(ulong remoteID, byte[] buf, ref int offset)
		{
			return default(float);
		}

		[Token(Token = "0x6001448")]
		[Address(RVA = "0xC2E3AC", Offset = "0xC2E3AC", VA = "0xC2E3AC")]
		private void PackInt32(int value, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x6001449")]
		[Address(RVA = "0xC2E4B4", Offset = "0xC2E4B4", VA = "0xC2E4B4")]
		private int UnpackInt32(byte[] buf, ref int offset)
		{
			return default(int);
		}

		[Token(Token = "0x600144A")]
		[Address(RVA = "0xC2E88C", Offset = "0xC2E88C", VA = "0xC2E88C")]
		private void PackUint32(uint value, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x600144B")]
		[Address(RVA = "0xC2E92C", Offset = "0xC2E92C", VA = "0xC2E92C")]
		private uint UnpackUint32(byte[] buf, ref int offset)
		{
			return default(uint);
		}

		[Token(Token = "0x600144C")]
		[Address(RVA = "0xC2E364", Offset = "0xC2E364", VA = "0xC2E364")]
		private void PackBool(bool value, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x600144D")]
		[Address(RVA = "0xC2E468", Offset = "0xC2E468", VA = "0xC2E468")]
		private bool UnpackBool(byte[] buf, ref int offset)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000329")]
	public class P2PNetworkBall : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400103A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float lastCollisionTime;

		[Token(Token = "0x400103B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Rigidbody rigidBody;

		[Token(Token = "0x170001C1")]
		public Vector3 velocity
		{
			[Token(Token = "0x600144F")]
			[Address(RVA = "0xC2E44C", Offset = "0xC2E44C", VA = "0xC2E44C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x600144E")]
		[Address(RVA = "0xC2EAE0", Offset = "0xC2EAE0", VA = "0xC2EAE0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001450")]
		[Address(RVA = "0xC2E338", Offset = "0xC2E338", VA = "0xC2E338")]
		public bool IsHeld()
		{
			return default(bool);
		}

		[Token(Token = "0x6001451")]
		[Address(RVA = "0xC2E720", Offset = "0xC2E720", VA = "0xC2E720")]
		public void ProcessRemoteUpdate(float remoteTime, bool isHeld, Vector3 pos, Vector3 vel)
		{
		}

		[Token(Token = "0x6001452")]
		[Address(RVA = "0xC2EB48", Offset = "0xC2EB48", VA = "0xC2EB48")]
		private Vector3 estimatePosition(Vector3 startPosition, Vector3 startVelocty, float time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001453")]
		[Address(RVA = "0xC2EC84", Offset = "0xC2EC84", VA = "0xC2EC84")]
		private Vector3 estimateVelocity(Vector3 startVelocity, float time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001454")]
		[Address(RVA = "0xC2EDCC", Offset = "0xC2EDCC", VA = "0xC2EDCC")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001455")]
		[Address(RVA = "0xC2EDF4", Offset = "0xC2EDF4", VA = "0xC2EDF4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001456")]
		[Address(RVA = "0xC2EE34", Offset = "0xC2EE34", VA = "0xC2EE34")]
		public P2PNetworkBall()
		{
		}
	}
	[Token(Token = "0x200032A")]
	public class P2PNetworkGoal : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400103C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GoalMover m_goal;

		[Token(Token = "0x400103D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 m_lastSentMoveDirection;

		[Token(Token = "0x400103E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool m_sendUpdates;

		[Token(Token = "0x170001C2")]
		public bool SendUpdates
		{
			[Token(Token = "0x6001457")]
			[Address(RVA = "0xC2EE3C", Offset = "0xC2EE3C", VA = "0xC2EE3C")]
			set
			{
			}
		}

		[Token(Token = "0x6001458")]
		[Address(RVA = "0xC2EE48", Offset = "0xC2EE48", VA = "0xC2EE48")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001459")]
		[Address(RVA = "0xC2EEB0", Offset = "0xC2EEB0", VA = "0xC2EEB0")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600145A")]
		[Address(RVA = "0xC2EF8C", Offset = "0xC2EF8C", VA = "0xC2EF8C")]
		public void SendBackboardUpdate()
		{
		}

		[Token(Token = "0x600145B")]
		[Address(RVA = "0xC2E0F4", Offset = "0xC2E0F4", VA = "0xC2E0F4")]
		public void RemoteBackboardUpdate(float remoteTime, Vector3 pos, Vector3 moveDir, Vector3 nextMoveDir)
		{
		}

		[Token(Token = "0x600145C")]
		[Address(RVA = "0xC2F048", Offset = "0xC2F048", VA = "0xC2F048")]
		public P2PNetworkGoal()
		{
		}
	}
	[Token(Token = "0x200032B")]
	public class PlatformManager : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x200040E")]
		public enum State
		{
			[Token(Token = "0x40014DC")]
			INITIALIZING,
			[Token(Token = "0x40014DD")]
			WAITING_TO_PRACTICE_OR_MATCHMAKE,
			[Token(Token = "0x40014DE")]
			MATCH_TRANSITION,
			[Token(Token = "0x40014DF")]
			PLAYING_A_LOCAL_MATCH,
			[Token(Token = "0x40014E0")]
			PLAYING_A_NETWORKED_MATCH
		}

		[Token(Token = "0x400103F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PlatformManager s_instance;

		[Token(Token = "0x4001040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private MatchmakingManager m_matchmaking;

		[Token(Token = "0x4001041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private P2PManager m_p2p;

		[Token(Token = "0x4001042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private LeaderboardManager m_leaderboards;

		[Token(Token = "0x4001043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AchievementsManager m_achievements;

		[Token(Token = "0x4001044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private State m_currentState;

		[Token(Token = "0x4001045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ulong m_myID;

		[Token(Token = "0x4001046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string m_myOculusID;

		[Token(Token = "0x170001C3")]
		public static MatchmakingManager Matchmaking
		{
			[Token(Token = "0x6001465")]
			[Address(RVA = "0xC28B10", Offset = "0xC28B10", VA = "0xC28B10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C4")]
		public static P2PManager P2P
		{
			[Token(Token = "0x6001466")]
			[Address(RVA = "0xC28640", Offset = "0xC28640", VA = "0xC28640")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C5")]
		public static LeaderboardManager Leaderboards
		{
			[Token(Token = "0x6001467")]
			[Address(RVA = "0xC28B9C", Offset = "0xC28B9C", VA = "0xC28B9C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C6")]
		public static AchievementsManager Achievements
		{
			[Token(Token = "0x6001468")]
			[Address(RVA = "0xC2AB70", Offset = "0xC2AB70", VA = "0xC2AB70")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C7")]
		public static State CurrentState
		{
			[Token(Token = "0x6001469")]
			[Address(RVA = "0xC26A44", Offset = "0xC26A44", VA = "0xC26A44")]
			get
			{
				return default(State);
			}
		}

		[Token(Token = "0x170001C8")]
		public static ulong MyID
		{
			[Token(Token = "0x600146A")]
			[Address(RVA = "0xC27850", Offset = "0xC27850", VA = "0xC27850")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x170001C9")]
		public static string MyOculusID
		{
			[Token(Token = "0x600146B")]
			[Address(RVA = "0xC29A38", Offset = "0xC29A38", VA = "0xC29A38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600145D")]
		[Address(RVA = "0xC2F050", Offset = "0xC2F050", VA = "0xC2F050")]
		private void Update()
		{
		}

		[Token(Token = "0x600145E")]
		[Address(RVA = "0xC2F084", Offset = "0xC2F084", VA = "0xC2F084")]
		private void Awake()
		{
		}

		[Token(Token = "0x600145F")]
		[Address(RVA = "0xC2F240", Offset = "0xC2F240", VA = "0xC2F240")]
		private void Start()
		{
		}

		[Token(Token = "0x6001460")]
		[Address(RVA = "0xC2F2D8", Offset = "0xC2F2D8", VA = "0xC2F2D8")]
		private void IsEntitledCallback(Message msg)
		{
		}

		[Token(Token = "0x6001461")]
		[Address(RVA = "0xC2F3A8", Offset = "0xC2F3A8", VA = "0xC2F3A8")]
		private void GetLoggedInUserCallback(Message<User> msg)
		{
		}

		[Token(Token = "0x6001462")]
		[Address(RVA = "0xC2BD14", Offset = "0xC2BD14", VA = "0xC2BD14")]
		public static void TerminateWithError(Message msg)
		{
		}

		[Token(Token = "0x6001463")]
		[Address(RVA = "0xC2F450", Offset = "0xC2F450", VA = "0xC2F450")]
		public void QuitButtonPressed()
		{
		}

		[Token(Token = "0x6001464")]
		[Address(RVA = "0xC2F458", Offset = "0xC2F458", VA = "0xC2F458")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x600146C")]
		[Address(RVA = "0xC29374", Offset = "0xC29374", VA = "0xC29374")]
		public static void TransitionToState(State newState)
		{
		}

		[Token(Token = "0x600146D")]
		[Address(RVA = "0xC2F48C", Offset = "0xC2F48C", VA = "0xC2F48C")]
		public PlatformManager()
		{
		}
	}
	[Token(Token = "0x200032C")]
	public abstract class Player : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001047")]
		public const uint MAX_BALLS = 6u;

		[Token(Token = "0x4001048")]
		private const float INITIAL_FORCE = 870f;

		[Token(Token = "0x4001049")]
		private const float RESPAWN_SECONDS = 2f;

		[Token(Token = "0x400104A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private uint m_score;

		[Token(Token = "0x400104B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text m_scoreUI;

		[Token(Token = "0x400104C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject m_ballPrefab;

		[Token(Token = "0x400104D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private BallEjector m_ballEjector;

		[Token(Token = "0x400104E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Queue<GameObject> m_balls;

		[Token(Token = "0x400104F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject m_heldBall;

		[Token(Token = "0x4001050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_nextSpawnTime;

		[Token(Token = "0x170001CA")]
		public virtual uint Score
		{
			[Token(Token = "0x600146E")]
			[Address(RVA = "0xC2F494", Offset = "0xC2F494", VA = "0xC2F494", Slot = "4")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x600146F")]
			[Address(RVA = "0xC2857C", Offset = "0xC2857C", VA = "0xC2857C", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x170001CB")]
		public GameObject BallPrefab
		{
			[Token(Token = "0x6001470")]
			[Address(RVA = "0xC2F49C", Offset = "0xC2F49C", VA = "0xC2F49C")]
			set
			{
			}
		}

		[Token(Token = "0x170001CC")]
		protected bool HasBall
		{
			[Token(Token = "0x6001471")]
			[Address(RVA = "0xC25ECC", Offset = "0xC25ECC", VA = "0xC25ECC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001472")]
		[Address(RVA = "0xC2F4A4", Offset = "0xC2F4A4", VA = "0xC2F4A4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001473")]
		[Address(RVA = "0xC2E540", Offset = "0xC2E540", VA = "0xC2E540")]
		public GameObject CreateBall()
		{
			return null;
		}

		[Token(Token = "0x6001474")]
		[Address(RVA = "0xC260C8", Offset = "0xC260C8", VA = "0xC260C8")]
		protected GameObject CheckSpawnBall()
		{
			return null;
		}

		[Token(Token = "0x6001475")]
		[Address(RVA = "0xC25F3C", Offset = "0xC25F3C", VA = "0xC25F3C")]
		protected GameObject ShootBall()
		{
			return null;
		}

		[Token(Token = "0x6001476")]
		[Address(RVA = "0xC2F558", Offset = "0xC2F558", VA = "0xC2F558")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001477")]
		[Address(RVA = "0xC26148", Offset = "0xC26148", VA = "0xC26148")]
		protected Player()
		{
		}
	}
	[Token(Token = "0x200032D")]
	public class PlayerArea : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_ballPrefab;

		[Token(Token = "0x4001052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject m_playerHead;

		[Token(Token = "0x4001053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Text m_nameText;

		[Token(Token = "0x4001054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private P2PNetworkGoal m_p2pGoal;

		[Token(Token = "0x170001CD")]
		public Player Player
		{
			[Token(Token = "0x6001478")]
			[Address(RVA = "0xC2AB18", Offset = "0xC2AB18", VA = "0xC2AB18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CE")]
		public Text NameText
		{
			[Token(Token = "0x6001479")]
			[Address(RVA = "0xC2F684", Offset = "0xC2F684", VA = "0xC2F684")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600147A")]
		[Address(RVA = "0xC2F68C", Offset = "0xC2F68C", VA = "0xC2F68C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600147B")]
		public T SetupForPlayer<T>(string name) where T : Player
		{
			return null;
		}

		[Token(Token = "0x600147C")]
		[Address(RVA = "0xC2F778", Offset = "0xC2F778", VA = "0xC2F778")]
		public PlayerArea()
		{
		}
	}
	[Token(Token = "0x200032E")]
	public class RemotePlayer : Player
	{
		[Token(Token = "0x4001055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private User m_user;

		[Token(Token = "0x4001056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private P2PNetworkGoal m_goal;

		[Token(Token = "0x170001CF")]
		public User User
		{
			[Token(Token = "0x600147D")]
			[Address(RVA = "0xC2F780", Offset = "0xC2F780", VA = "0xC2F780")]
			set
			{
			}
		}

		[Token(Token = "0x170001D0")]
		public ulong ID
		{
			[Token(Token = "0x600147E")]
			[Address(RVA = "0xC2D214", Offset = "0xC2D214", VA = "0xC2D214")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x170001D1")]
		public P2PNetworkGoal Goal
		{
			[Token(Token = "0x600147F")]
			[Address(RVA = "0xC2F788", Offset = "0xC2F788", VA = "0xC2F788")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001480")]
			[Address(RVA = "0xC2F790", Offset = "0xC2F790", VA = "0xC2F790")]
			set
			{
			}
		}

		[Token(Token = "0x170001D2")]
		public override uint Score
		{
			[Token(Token = "0x6001481")]
			[Address(RVA = "0xC2F798", Offset = "0xC2F798", VA = "0xC2F798", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6001482")]
		[Address(RVA = "0xC2E9B8", Offset = "0xC2E9B8", VA = "0xC2E9B8")]
		public void ReceiveRemoteScore(uint score)
		{
		}

		[Token(Token = "0x6001483")]
		[Address(RVA = "0xC2F79C", Offset = "0xC2F79C", VA = "0xC2F79C")]
		public RemotePlayer()
		{
		}
	}
	[Token(Token = "0x200032F")]
	public class VREyeRaycaster : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private EventSystem m_eventSystem;

		[Token(Token = "0x4001058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Button m_currentButton;

		[Token(Token = "0x6001484")]
		[Address(RVA = "0xC2F7A0", Offset = "0xC2F7A0", VA = "0xC2F7A0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001485")]
		[Address(RVA = "0xC2F9A0", Offset = "0xC2F9A0", VA = "0xC2F9A0")]
		public VREyeRaycaster()
		{
		}
	}
}
namespace Oculus.Platform.Samples.VrBoardGame
{
	[Token(Token = "0x2000330")]
	public class BoardPosition : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6E8C10", Offset = "0x6E8C10")]
		public int x;

		[Token(Token = "0x400105A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6E8C50", Offset = "0x6E8C50")]
		public int y;

		[Token(Token = "0x6001486")]
		[Address(RVA = "0xC20D28", Offset = "0xC20D28", VA = "0xC20D28")]
		public BoardPosition()
		{
		}
	}
	[Token(Token = "0x2000331")]
	public class EyeCamera : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400105B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private EventSystem m_eventSystem;

		[Token(Token = "0x400105C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameController m_gameController;

		[Token(Token = "0x400105D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SphereCollider m_gazeTracker;

		[Token(Token = "0x400105E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Button m_currentButton;

		[Token(Token = "0x400105F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GamePiece m_currentPiece;

		[Token(Token = "0x4001060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private BoardPosition m_boardPosition;

		[Token(Token = "0x6001487")]
		[Address(RVA = "0xC20D30", Offset = "0xC20D30", VA = "0xC20D30")]
		private void Update()
		{
		}

		[Token(Token = "0x6001488")]
		[Address(RVA = "0xC21620", Offset = "0xC21620", VA = "0xC21620")]
		public EyeCamera()
		{
		}
	}
	[Token(Token = "0x2000332")]
	public class GameBoard : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x200040F")]
		private struct PositionInfo
		{
			[Token(Token = "0x40014E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject piece;

			[Token(Token = "0x40014E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int pieceOwner;

			[Token(Token = "0x40014E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int powerPieceOwner;
		}

		[Token(Token = "0x4001061")]
		public const int LENGTH_X = 3;

		[Token(Token = "0x4001062")]
		public const int LENGTH_Y = 3;

		[Token(Token = "0x4001063")]
		public const int MAX_PLAYERS = 2;

		[Token(Token = "0x4001064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Color[] m_playerColors;

		[Token(Token = "0x4001065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Color m_proposedMoveColor;

		[Token(Token = "0x4001066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int[] m_scores;

		[Token(Token = "0x4001067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private BoardPosition[] m_positions;

		[Token(Token = "0x4001068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly PositionInfo[,] m_pieces;

		[Token(Token = "0x6001489")]
		[Address(RVA = "0xC21628", Offset = "0xC21628", VA = "0xC21628")]
		public void Reset()
		{
		}

		[Token(Token = "0x600148A")]
		[Address(RVA = "0xC217FC", Offset = "0xC217FC", VA = "0xC217FC")]
		public bool IsFull()
		{
			return default(bool);
		}

		[Token(Token = "0x600148B")]
		[Address(RVA = "0xC218F0", Offset = "0xC218F0", VA = "0xC218F0")]
		public bool CanPlayerMoveToPostion(int x, int y)
		{
			return default(bool);
		}

		[Token(Token = "0x600148C")]
		[Address(RVA = "0xC219B4", Offset = "0xC219B4", VA = "0xC219B4")]
		public bool CanPlayerPowerUpPosition(int x, int y)
		{
			return default(bool);
		}

		[Token(Token = "0x600148D")]
		[Address(RVA = "0xC21A78", Offset = "0xC21A78", VA = "0xC21A78")]
		public void AddPiece(int player, GameObject prefab, int x, int y)
		{
		}

		[Token(Token = "0x600148E")]
		[Address(RVA = "0xC22030", Offset = "0xC22030", VA = "0xC22030")]
		public GamePiece AddProposedPiece(GameObject prefab, BoardPosition pos)
		{
			return null;
		}

		[Token(Token = "0x600148F")]
		[Address(RVA = "0xC22110", Offset = "0xC22110", VA = "0xC22110")]
		public void AddPowerPiece(int player, GameObject prefab, int x, int y)
		{
		}

		[Token(Token = "0x6001490")]
		[Address(RVA = "0xC222D0", Offset = "0xC222D0", VA = "0xC222D0")]
		public GamePiece AddProposedPowerPiece(GameObject prefab, BoardPosition pos)
		{
			return null;
		}

		[Token(Token = "0x6001491")]
		[Address(RVA = "0xC21C6C", Offset = "0xC21C6C", VA = "0xC21C6C")]
		private GamePiece Create(GameObject prefab, GameObject parent, BoardPosition pos, Vector3 off)
		{
			return null;
		}

		[Token(Token = "0x6001492")]
		[Address(RVA = "0xC2240C", Offset = "0xC2240C", VA = "0xC2240C")]
		public int GetPlayerScore(int player)
		{
			return default(int);
		}

		[Token(Token = "0x6001493")]
		[Address(RVA = "0xC21DE0", Offset = "0xC21DE0", VA = "0xC21DE0")]
		private void UpdateScores()
		{
		}

		[Token(Token = "0x6001494")]
		[Address(RVA = "0xC22448", Offset = "0xC22448", VA = "0xC22448")]
		public GameBoard()
		{
		}
	}
	[Token(Token = "0x2000333")]
	public class GameController : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x2000410")]
		private enum GameState
		{
			[Token(Token = "0x40014E5")]
			None,
			[Token(Token = "0x40014E6")]
			PracticingMyTurn,
			[Token(Token = "0x40014E7")]
			PracticingAiTurn,
			[Token(Token = "0x40014E8")]
			OnlineMatchMyTurn,
			[Token(Token = "0x40014E9")]
			OnlineMatchRemoteTurn
		}

		[Token(Token = "0x4001069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MatchmakingManager m_matchmaking;

		[Token(Token = "0x400106A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameBoard m_board;

		[Token(Token = "0x400106B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GamePiece m_pieceA;

		[Token(Token = "0x400106C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GamePiece m_pieceB;

		[Token(Token = "0x400106D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GamePiece m_powerPiece;

		[Token(Token = "0x400106E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color m_unusableColor;

		[Token(Token = "0x400106F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Color m_unselectedColor;

		[Token(Token = "0x4001070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Color m_selectedColor;

		[Token(Token = "0x4001071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Color m_highlightedColor;

		[Token(Token = "0x4001072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Text m_ballCountText;

		[Token(Token = "0x4001073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Text m_player0Text;

		[Token(Token = "0x4001074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Text m_player1Text;

		[Token(Token = "0x4001075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private GameState m_state;

		[Token(Token = "0x4001076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private GamePiece m_interestedPiece;

		[Token(Token = "0x4001077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private GamePiece m_selectedPiece;

		[Token(Token = "0x4001078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private GamePiece m_proposedPiece;

		[Token(Token = "0x4001079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private uint m_powerBallcount;

		[Token(Token = "0x400107A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private string m_opponentName;

		[Token(Token = "0x6001495")]
		[Address(RVA = "0xC2251C", Offset = "0xC2251C", VA = "0xC2251C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001496")]
		[Address(RVA = "0xC22678", Offset = "0xC22678", VA = "0xC22678")]
		private void Update()
		{
		}

		[Token(Token = "0x6001497")]
		[Address(RVA = "0xC22544", Offset = "0xC22544", VA = "0xC22544")]
		private void TransitionToState(GameState state)
		{
		}

		[Token(Token = "0x6001498")]
		[Address(RVA = "0xC22AA0", Offset = "0xC22AA0", VA = "0xC22AA0")]
		private void TransitionToNextState()
		{
		}

		[Token(Token = "0x6001499")]
		[Address(RVA = "0xC2267C", Offset = "0xC2267C", VA = "0xC2267C")]
		private void PerFrameStateUpdate()
		{
		}

		[Token(Token = "0x600149A")]
		[Address(RVA = "0xC231DC", Offset = "0xC231DC", VA = "0xC231DC")]
		public void PracticeButtonPressed()
		{
		}

		[Token(Token = "0x600149B")]
		[Address(RVA = "0xC22D38", Offset = "0xC22D38", VA = "0xC22D38")]
		private void MakeAIMove(int player)
		{
		}

		[Token(Token = "0x600149C")]
		[Address(RVA = "0xC23304", Offset = "0xC23304", VA = "0xC23304")]
		public void StartOnlineMatch(string opponentName, bool localUserGoesFirst)
		{
		}

		[Token(Token = "0x600149D")]
		[Address(RVA = "0xC23364", Offset = "0xC23364", VA = "0xC23364")]
		public void MakeRemoteMove(GamePiece.Piece piece, int x, int y)
		{
		}

		[Token(Token = "0x600149E")]
		[Address(RVA = "0xC23408", Offset = "0xC23408", VA = "0xC23408")]
		public void MarkRemoteTurnComplete()
		{
		}

		[Token(Token = "0x600149F")]
		[Address(RVA = "0xC2341C", Offset = "0xC2341C", VA = "0xC2341C")]
		public void RemoteMatchEnded()
		{
		}

		[Token(Token = "0x60014A0")]
		[Address(RVA = "0xC212D0", Offset = "0xC212D0", VA = "0xC212D0")]
		public void StartedLookingAtPiece(GamePiece piece)
		{
		}

		[Token(Token = "0x60014A1")]
		[Address(RVA = "0xC212C8", Offset = "0xC212C8", VA = "0xC212C8")]
		public void StoppedLookingAtPiece()
		{
		}

		[Token(Token = "0x60014A2")]
		[Address(RVA = "0xC212D8", Offset = "0xC212D8", VA = "0xC212D8")]
		public void StartedLookingAtPosition(BoardPosition position)
		{
		}

		[Token(Token = "0x60014A3")]
		[Address(RVA = "0xC21554", Offset = "0xC21554", VA = "0xC21554")]
		public void ClearProposedMove()
		{
		}

		[Token(Token = "0x60014A4")]
		[Address(RVA = "0xC22F48", Offset = "0xC22F48", VA = "0xC22F48")]
		public void TrySelectPiece()
		{
		}

		[Token(Token = "0x60014A5")]
		[Address(RVA = "0xC23054", Offset = "0xC23054", VA = "0xC23054")]
		public void TryPlacePiece()
		{
		}

		[Token(Token = "0x60014A6")]
		[Address(RVA = "0xC2369C", Offset = "0xC2369C", VA = "0xC2369C")]
		public void QuitButtonPressed()
		{
		}

		[Token(Token = "0x60014A7")]
		[Address(RVA = "0xC236A4", Offset = "0xC236A4", VA = "0xC236A4")]
		public void AddPowerballs(uint count)
		{
		}

		[Token(Token = "0x60014A8")]
		[Address(RVA = "0xC2254C", Offset = "0xC2254C", VA = "0xC2254C")]
		private void UpdateScores()
		{
		}

		[Token(Token = "0x60014A9")]
		[Address(RVA = "0xC22734", Offset = "0xC22734", VA = "0xC22734")]
		private void UpdateGamePieceColors()
		{
		}

		[Token(Token = "0x60014AA")]
		[Address(RVA = "0xC237F8", Offset = "0xC237F8", VA = "0xC237F8")]
		public GameController()
		{
		}
	}
	[Token(Token = "0x2000334")]
	public class GamePiece : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x2000411")]
		public enum Piece
		{
			[Token(Token = "0x40014EB")]
			A,
			[Token(Token = "0x40014EC")]
			B,
			[Token(Token = "0x40014ED")]
			PowerBall
		}

		[Token(Token = "0x400107B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Piece m_type;

		[Token(Token = "0x400107C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_prefabA;

		[Token(Token = "0x400107D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_prefabB;

		[Token(Token = "0x400107E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_prefabPower;

		[Token(Token = "0x400107F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private BoardPosition m_position;

		[Token(Token = "0x170001D3")]
		public Piece Type
		{
			[Token(Token = "0x60014AB")]
			[Address(RVA = "0xC2385C", Offset = "0xC2385C", VA = "0xC2385C")]
			get
			{
				return default(Piece);
			}
		}

		[Token(Token = "0x170001D4")]
		public BoardPosition Position
		{
			[Token(Token = "0x60014AC")]
			[Address(RVA = "0xC23864", Offset = "0xC23864", VA = "0xC23864")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014AD")]
			[Address(RVA = "0xC2386C", Offset = "0xC2386C", VA = "0xC2386C")]
			set
			{
			}
		}

		[Token(Token = "0x170001D5")]
		public GameObject Prefab
		{
			[Token(Token = "0x60014AE")]
			[Address(RVA = "0xC232D8", Offset = "0xC232D8", VA = "0xC232D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014AF")]
		[Address(RVA = "0xC233E0", Offset = "0xC233E0", VA = "0xC233E0")]
		public GameObject PrefabFor(Piece p)
		{
			return null;
		}

		[Token(Token = "0x60014B0")]
		[Address(RVA = "0xC23874", Offset = "0xC23874", VA = "0xC23874")]
		public GamePiece()
		{
		}
	}
	[Token(Token = "0x2000335")]
	public class IAPManager : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameController m_gameController;

		[Token(Token = "0x4001081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text m_priceText;

		[Token(Token = "0x4001082")]
		private const string CONSUMABLE_1 = "PowerballPack1";

		[Token(Token = "0x60014B1")]
		[Address(RVA = "0xC2387C", Offset = "0xC2387C", VA = "0xC2387C")]
		private void Start()
		{
		}

		[Token(Token = "0x60014B2")]
		[Address(RVA = "0xC238A0", Offset = "0xC238A0", VA = "0xC238A0")]
		public void FetchProductPrices()
		{
		}

		[Token(Token = "0x60014B3")]
		[Address(RVA = "0xC23A58", Offset = "0xC23A58", VA = "0xC23A58")]
		private void GetProductsBySKUCallback(Message<ProductList> msg)
		{
		}

		[Token(Token = "0x60014B4")]
		[Address(RVA = "0xC239B0", Offset = "0xC239B0", VA = "0xC239B0")]
		public void FetchPurchasedProducts()
		{
		}

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0xC23F08", Offset = "0xC23F08", VA = "0xC23F08")]
		private void GetViewerPurchasesCallback(Message<PurchaseList> msg)
		{
		}

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0xC242FC", Offset = "0xC242FC", VA = "0xC242FC")]
		public void BuyPowerBallsPressed()
		{
		}

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0xC243B0", Offset = "0xC243B0", VA = "0xC243B0")]
		private void LaunchCheckoutFlowCallback(Message<Purchase> msg)
		{
		}

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0xC24498", Offset = "0xC24498", VA = "0xC24498")]
		public IAPManager()
		{
		}
	}
	[Token(Token = "0x2000336")]
	public class MatchmakingManager : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x2000412")]
		private enum MatchRoomState
		{
			[Token(Token = "0x40014EF")]
			None,
			[Token(Token = "0x40014F0")]
			Queued,
			[Token(Token = "0x40014F1")]
			Configuring,
			[Token(Token = "0x40014F2")]
			MyTurn,
			[Token(Token = "0x40014F3")]
			RemoteTurn
		}

		[Token(Token = "0x4001083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameController m_gameController;

		[Token(Token = "0x4001084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text m_matchButtonText;

		[Token(Token = "0x4001085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Text m_infoText;

		[Token(Token = "0x4001086")]
		private const string POOL = "VR_BOARD_GAME_POOL";

		[Token(Token = "0x4001087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ulong m_matchRoom;

		[Token(Token = "0x4001088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private User m_remotePlayer;

		[Token(Token = "0x4001089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float m_lastUpdateTime;

		[Token(Token = "0x400108A")]
		private const float POLL_FREQUENCY = 30f;

		[Token(Token = "0x400108B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private MatchRoomState m_state;

		[Token(Token = "0x60014B9")]
		[Address(RVA = "0xC244A0", Offset = "0xC244A0", VA = "0xC244A0")]
		private void Start()
		{
		}

		[Token(Token = "0x60014BA")]
		[Address(RVA = "0xC246E8", Offset = "0xC246E8", VA = "0xC246E8")]
		private void Update()
		{
		}

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0xC24810", Offset = "0xC24810", VA = "0xC24810")]
		public void MatchButtonPressed()
		{
		}

		[Token(Token = "0x60014BC")]
		[Address(RVA = "0xC22B84", Offset = "0xC22B84", VA = "0xC22B84")]
		public void EndMatch(int localScore, int remoteScore)
		{
		}

		[Token(Token = "0x60014BD")]
		[Address(RVA = "0xC248CC", Offset = "0xC248CC", VA = "0xC248CC")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x60014BE")]
		[Address(RVA = "0xC24560", Offset = "0xC24560", VA = "0xC24560")]
		private void TransitionToState(MatchRoomState state)
		{
		}

		[Token(Token = "0x60014BF")]
		[Address(RVA = "0xC24908", Offset = "0xC24908", VA = "0xC24908")]
		private void MatchmakingEnqueueCallback(Message untyped_msg)
		{
		}

		[Token(Token = "0x60014C0")]
		[Address(RVA = "0xC24B98", Offset = "0xC24B98", VA = "0xC24B98")]
		private void MatchFoundCallback(Message<Oculus.Platform.Models.Room> msg)
		{
		}

		[Token(Token = "0x60014C1")]
		[Address(RVA = "0xC24CE8", Offset = "0xC24CE8", VA = "0xC24CE8")]
		private void MatchmakingJoinRoomCallback(Message<Oculus.Platform.Models.Room> msg)
		{
		}

		[Token(Token = "0x60014C2")]
		[Address(RVA = "0xC2547C", Offset = "0xC2547C", VA = "0xC2547C")]
		private void MatchmakingRoomUpdateCallback(Message<Oculus.Platform.Models.Room> msg)
		{
		}

		[Token(Token = "0x60014C3")]
		[Address(RVA = "0xC24FA0", Offset = "0xC24FA0", VA = "0xC24FA0")]
		private void ProcessRoomData(Oculus.Platform.Models.Room room)
		{
		}

		[Token(Token = "0x60014C4")]
		[Address(RVA = "0xC257F4", Offset = "0xC257F4", VA = "0xC257F4")]
		private void ProcessRemoteMove(string moveString)
		{
		}

		[Token(Token = "0x60014C5")]
		[Address(RVA = "0xC23478", Offset = "0xC23478", VA = "0xC23478")]
		public void SendLocalMove(GamePiece.Piece piece, int boardX, int boardY)
		{
		}

		[Token(Token = "0x60014C6")]
		[Address(RVA = "0xC259DC", Offset = "0xC259DC", VA = "0xC259DC")]
		private void UpdateDataStoreCallback(Message<Oculus.Platform.Models.Room> msg)
		{
		}

		[Token(Token = "0x60014C7")]
		[Address(RVA = "0xC257AC", Offset = "0xC257AC", VA = "0xC257AC")]
		private bool DoesLocalUserGoFirst()
		{
			return default(bool);
		}

		[Token(Token = "0x60014C8")]
		[Address(RVA = "0xC25A10", Offset = "0xC25A10", VA = "0xC25A10")]
		private void GenericErrorCheckCallback(Message msg)
		{
		}

		[Token(Token = "0x60014C9")]
		[Address(RVA = "0xC25AD4", Offset = "0xC25AD4", VA = "0xC25AD4")]
		public MatchmakingManager()
		{
		}
	}
	[Token(Token = "0x2000337")]
	public class PlatformManager : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400108C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PlatformManager s_instance;

		[Token(Token = "0x400108D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ulong m_myID;

		[Token(Token = "0x400108E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string m_myOculusID;

		[Token(Token = "0x170001D6")]
		public static ulong MyID
		{
			[Token(Token = "0x60014CF")]
			[Address(RVA = "0xC24828", Offset = "0xC24828", VA = "0xC24828")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x170001D7")]
		public static string MyOculusID
		{
			[Token(Token = "0x60014D0")]
			[Address(RVA = "0xC23744", Offset = "0xC23744", VA = "0xC23744")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014CA")]
		[Address(RVA = "0xC25ADC", Offset = "0xC25ADC", VA = "0xC25ADC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014CB")]
		[Address(RVA = "0xC25C1C", Offset = "0xC25C1C", VA = "0xC25C1C")]
		private void Start()
		{
		}

		[Token(Token = "0x60014CC")]
		[Address(RVA = "0xC25CB4", Offset = "0xC25CB4", VA = "0xC25CB4")]
		private void IsEntitledCallback(Message msg)
		{
		}

		[Token(Token = "0x60014CD")]
		[Address(RVA = "0xC25D84", Offset = "0xC25D84", VA = "0xC25D84")]
		private void GetLoggedInUserCallback(Message<User> msg)
		{
		}

		[Token(Token = "0x60014CE")]
		[Address(RVA = "0xC23E5C", Offset = "0xC23E5C", VA = "0xC23E5C")]
		public static void TerminateWithError(Message msg)
		{
		}

		[Token(Token = "0x60014D1")]
		[Address(RVA = "0xC25E60", Offset = "0xC25E60", VA = "0xC25E60")]
		public PlatformManager()
		{
		}
	}
}
namespace Oculus.Platform.Samples.SimplePlatformSample
{
	[Token(Token = "0x2000338")]
	public class DataEntry : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400108F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text dataOutput;

		[Token(Token = "0x60014D2")]
		[Address(RVA = "0xC1C578", Offset = "0xC1C578", VA = "0xC1C578")]
		private void Start()
		{
		}

		[Token(Token = "0x60014D3")]
		[Address(RVA = "0xC1C680", Offset = "0xC1C680", VA = "0xC1C680")]
		private void Update()
		{
		}

		[Token(Token = "0x60014D4")]
		[Address(RVA = "0xC1C744", Offset = "0xC1C744", VA = "0xC1C744")]
		private void SubmitCommand(string command)
		{
		}

		[Token(Token = "0x60014D5")]
		[Address(RVA = "0xC1E30C", Offset = "0xC1E30C", VA = "0xC1E30C")]
		private void getLeaderboardEntries(string leaderboardName)
		{
		}

		[Token(Token = "0x60014D6")]
		[Address(RVA = "0xC1E1F4", Offset = "0xC1E1F4", VA = "0xC1E1F4")]
		private void writeLeaderboardEntry(string leaderboardName, string value)
		{
		}

		[Token(Token = "0x60014D7")]
		[Address(RVA = "0xC1E13C", Offset = "0xC1E13C", VA = "0xC1E13C")]
		private void addFieldsAchievement(string achievementName, string fields)
		{
		}

		[Token(Token = "0x60014D8")]
		[Address(RVA = "0xC1E058", Offset = "0xC1E058", VA = "0xC1E058")]
		private void addCountAchievement(string achievementName, string count)
		{
		}

		[Token(Token = "0x60014D9")]
		[Address(RVA = "0xC1DFA8", Offset = "0xC1DFA8", VA = "0xC1DFA8")]
		private void unlockAchievement(string achievementName)
		{
		}

		[Token(Token = "0x60014DA")]
		[Address(RVA = "0xC1DEA0", Offset = "0xC1DEA0", VA = "0xC1DEA0")]
		private void getAchievementProgress(string achievementName)
		{
		}

		[Token(Token = "0x60014DB")]
		[Address(RVA = "0xC1DD98", Offset = "0xC1DD98", VA = "0xC1DD98")]
		private void getAchievementDefinition(string achievementName)
		{
		}

		[Token(Token = "0x60014DC")]
		[Address(RVA = "0xC1C5E8", Offset = "0xC1C5E8", VA = "0xC1C5E8")]
		private void checkEntitlement()
		{
		}

		[Token(Token = "0x60014DD")]
		[Address(RVA = "0xC1DCE0", Offset = "0xC1DCE0", VA = "0xC1DCE0")]
		private void getUserNonce()
		{
		}

		[Token(Token = "0x60014DE")]
		[Address(RVA = "0xC1CF14", Offset = "0xC1CF14", VA = "0xC1CF14")]
		private void createAndJoinPrivateRoom(string joinPolicy, string maxUsers)
		{
		}

		[Token(Token = "0x60014DF")]
		[Address(RVA = "0xC1D020", Offset = "0xC1D020", VA = "0xC1D020")]
		private void getCurrentRoom()
		{
		}

		[Token(Token = "0x60014E0")]
		[Address(RVA = "0xC1D0DC", Offset = "0xC1D0DC", VA = "0xC1D0DC")]
		private void getRoom(string roomID)
		{
		}

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0xC1D1D8", Offset = "0xC1D1D8", VA = "0xC1D1D8")]
		private void joinRoom(string roomID)
		{
		}

		[Token(Token = "0x60014E2")]
		[Address(RVA = "0xC1D2D8", Offset = "0xC1D2D8", VA = "0xC1D2D8")]
		private void leaveRoom(string roomID)
		{
		}

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0xC1D3D4", Offset = "0xC1D3D4", VA = "0xC1D3D4")]
		private void kickUser(string roomID, string userID)
		{
		}

		[Token(Token = "0x60014E4")]
		[Address(RVA = "0xC1D500", Offset = "0xC1D500", VA = "0xC1D500")]
		private void getLoggedInUser()
		{
		}

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0xC1D5B8", Offset = "0xC1D5B8", VA = "0xC1D5B8")]
		private void getUser(string userID)
		{
		}

		[Token(Token = "0x60014E6")]
		[Address(RVA = "0xC1D6B0", Offset = "0xC1D6B0", VA = "0xC1D6B0")]
		private void getLoggedInFriends()
		{
		}

		[Token(Token = "0x60014E7")]
		[Address(RVA = "0xC1D768", Offset = "0xC1D768", VA = "0xC1D768")]
		private void getInvitableUsers()
		{
		}

		[Token(Token = "0x60014E8")]
		[Address(RVA = "0xC1D824", Offset = "0xC1D824", VA = "0xC1D824")]
		private void inviteUser(string roomID, string inviteToken)
		{
		}

		[Token(Token = "0x60014E9")]
		[Address(RVA = "0xC1D938", Offset = "0xC1D938", VA = "0xC1D938")]
		private void setRoomDescription(string roomID, string description)
		{
		}

		[Token(Token = "0x60014EA")]
		[Address(RVA = "0xC1DA4C", Offset = "0xC1DA4C", VA = "0xC1DA4C")]
		private void updateRoomDataStore(string roomID, string key, string value)
		{
		}

		[Token(Token = "0x60014EB")]
		[Address(RVA = "0xC1E3C8", Offset = "0xC1E3C8", VA = "0xC1E3C8")]
		private void printOutputLine(string newLine)
		{
		}

		[Token(Token = "0x60014EC")]
		[Address(RVA = "0xC1E8C0", Offset = "0xC1E8C0", VA = "0xC1E8C0")]
		private void outputRoomDetails(Oculus.Platform.Models.Room room)
		{
		}

		[Token(Token = "0x60014ED")]
		[Address(RVA = "0xC1EDF0", Offset = "0xC1EDF0", VA = "0xC1EDF0")]
		private void outputUserArray(UserList users)
		{
		}

		[Token(Token = "0x60014EE")]
		[Address(RVA = "0xC1F2F4", Offset = "0xC1F2F4", VA = "0xC1F2F4")]
		private void userProofCallback(Message<UserProof> msg)
		{
		}

		[Token(Token = "0x60014EF")]
		[Address(RVA = "0xC1F3CC", Offset = "0xC1F3CC", VA = "0xC1F3CC")]
		private void getEntitlementCallback(Message msg)
		{
		}

		[Token(Token = "0x60014F0")]
		[Address(RVA = "0xC1F44C", Offset = "0xC1F44C", VA = "0xC1F44C")]
		private void leaderboardGetCallback(Message<LeaderboardEntryList> msg)
		{
		}

		[Token(Token = "0x60014F1")]
		[Address(RVA = "0xC1F9E0", Offset = "0xC1F9E0", VA = "0xC1F9E0")]
		private void leaderboardWriteCallback(Message msg)
		{
		}

		[Token(Token = "0x60014F2")]
		[Address(RVA = "0xC1FB00", Offset = "0xC1FB00", VA = "0xC1FB00")]
		private void achievementFieldsCallback(Message msg)
		{
		}

		[Token(Token = "0x60014F3")]
		[Address(RVA = "0xC1FBBC", Offset = "0xC1FBBC", VA = "0xC1FBBC")]
		private void achievementCountCallback(Message msg)
		{
		}

		[Token(Token = "0x60014F4")]
		[Address(RVA = "0xC1FC78", Offset = "0xC1FC78", VA = "0xC1FC78")]
		private void achievementUnlockCallback(Message msg)
		{
		}

		[Token(Token = "0x60014F5")]
		[Address(RVA = "0xC1FD34", Offset = "0xC1FD34", VA = "0xC1FD34")]
		private void achievementProgressCallback(Message<AchievementProgressList> msg)
		{
		}

		[Token(Token = "0x60014F6")]
		[Address(RVA = "0xC200AC", Offset = "0xC200AC", VA = "0xC200AC")]
		private void achievementDefinitionCallback(Message<AchievementDefinitionList> msg)
		{
		}

		[Token(Token = "0x60014F7")]
		[Address(RVA = "0xC2049C", Offset = "0xC2049C", VA = "0xC2049C")]
		private void createAndJoinPrivateRoomCallback(Message<Oculus.Platform.Models.Room> msg)
		{
		}

		[Token(Token = "0x60014F8")]
		[Address(RVA = "0xC20574", Offset = "0xC20574", VA = "0xC20574")]
		private void getCurrentRoomCallback(Message<Oculus.Platform.Models.Room> msg)
		{
		}

		[Token(Token = "0x60014F9")]
		[Address(RVA = "0xC2064C", Offset = "0xC2064C", VA = "0xC2064C")]
		private void joinRoomCallback(Message<Oculus.Platform.Models.Room> msg)
		{
		}

		[Token(Token = "0x60014FA")]
		[Address(RVA = "0xC20724", Offset = "0xC20724", VA = "0xC20724")]
		private void leaveRoomCallback(Message<Oculus.Platform.Models.Room> msg)
		{
		}

		[Token(Token = "0x60014FB")]
		[Address(RVA = "0xC207FC", Offset = "0xC207FC", VA = "0xC207FC")]
		private void getUserCallback(Message<User> msg)
		{
		}

		[Token(Token = "0x60014FC")]
		[Address(RVA = "0xC20AB4", Offset = "0xC20AB4", VA = "0xC20AB4")]
		private void getFriendsCallback(Message<UserList> msg)
		{
		}

		[Token(Token = "0x60014FD")]
		[Address(RVA = "0xC20B8C", Offset = "0xC20B8C", VA = "0xC20B8C")]
		private void getInvitableUsersCallback(Message<UserList> msg)
		{
		}

		[Token(Token = "0x60014FE")]
		[Address(RVA = "0xC20C64", Offset = "0xC20C64", VA = "0xC20C64")]
		private void inviteUserCallback(Message msg)
		{
		}

		[Token(Token = "0x60014FF")]
		[Address(RVA = "0xC20D20", Offset = "0xC20D20", VA = "0xC20D20")]
		public DataEntry()
		{
		}
	}
}
namespace Oculus.Platform.Samples.NetChat
{
	[Token(Token = "0x2000339")]
	internal enum states
	{
		[Token(Token = "0x4001091")]
		NOT_INIT,
		[Token(Token = "0x4001092")]
		IDLE,
		[Token(Token = "0x4001093")]
		REQUEST_FIND,
		[Token(Token = "0x4001094")]
		FINDING_ROOM,
		[Token(Token = "0x4001095")]
		REQUEST_CREATE,
		[Token(Token = "0x4001096")]
		REQUEST_JOIN,
		[Token(Token = "0x4001097")]
		REQUEST_LEAVE,
		[Token(Token = "0x4001098")]
		IN_EMPTY_ROOM,
		[Token(Token = "0x4001099")]
		IN_FULL_ROOM
	}
	[Token(Token = "0x200033A")]
	public static class Constants
	{
		[Token(Token = "0x400109A")]
		public const int BUFFER_SIZE = 512;

		[Token(Token = "0x400109B")]
		public const string BOUT_POOL = "bout_pool";

		[Token(Token = "0x400109C")]
		public const string FILTER_POOL = "filter_pool";
	}
	[Token(Token = "0x200033B")]
	public class chatPacket
	{
		[Token(Token = "0x400109D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E8E40", Offset = "0x6E8E40")]
		private int <packetID>k__BackingField;

		[Token(Token = "0x400109E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E8E50", Offset = "0x6E8E50")]
		private string <textString>k__BackingField;

		[Token(Token = "0x170001D8")]
		public int packetID
		{
			[Token(Token = "0x6001500")]
			[Address(RVA = "0xC1BFBC", Offset = "0xC1BFBC", VA = "0xC1BFBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ED8E4", Offset = "0x6ED8E4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001501")]
			[Address(RVA = "0xC1BFC4", Offset = "0xC1BFC4", VA = "0xC1BFC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ED8F4", Offset = "0x6ED8F4")]
			set
			{
			}
		}

		[Token(Token = "0x170001D9")]
		public string textString
		{
			[Token(Token = "0x6001502")]
			[Address(RVA = "0xC1BFCC", Offset = "0xC1BFCC", VA = "0xC1BFCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ED904", Offset = "0x6ED904")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001503")]
			[Address(RVA = "0xC1BFD4", Offset = "0xC1BFD4", VA = "0xC1BFD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ED914", Offset = "0x6ED914")]
			set
			{
			}
		}

		[Token(Token = "0x6001504")]
		[Address(RVA = "0xC1BFDC", Offset = "0xC1BFDC", VA = "0xC1BFDC")]
		public byte[] Serialize()
		{
			return null;
		}

		[Token(Token = "0x6001505")]
		[Address(RVA = "0xC1C2E0", Offset = "0xC1C2E0", VA = "0xC1C2E0")]
		public static chatPacket Deserialize(byte[] data)
		{
			return null;
		}

		[Token(Token = "0x6001506")]
		[Address(RVA = "0xC1C570", Offset = "0xC1C570", VA = "0xC1C570")]
		public chatPacket()
		{
		}
	}
	[Token(Token = "0x200033C")]
	public class DataEntry : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400109F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text dataOutput;

		[Token(Token = "0x40010A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private states currentState;

		[Token(Token = "0x40010A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private User localUser;

		[Token(Token = "0x40010A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private User remoteUser;

		[Token(Token = "0x40010A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Oculus.Platform.Models.Room currentRoom;

		[Token(Token = "0x40010A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int lastPacketID;

		[Token(Token = "0x40010A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool ratedMatchStarted;

		[Token(Token = "0x6001507")]
		[Address(RVA = "0xBC126C", Offset = "0xBC126C", VA = "0xBC126C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001508")]
		[Address(RVA = "0xBC13DC", Offset = "0xBC13DC", VA = "0xBC13DC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001509")]
		[Address(RVA = "0xBC14A4", Offset = "0xBC14A4", VA = "0xBC14A4")]
		private void SubmitCommand(string command)
		{
		}

		[Token(Token = "0x600150A")]
		[Address(RVA = "0xBC276C", Offset = "0xBC276C", VA = "0xBC276C")]
		private void printOutputLine(string newLine)
		{
		}

		[Token(Token = "0x600150B")]
		[Address(RVA = "0xBC1358", Offset = "0xBC1358", VA = "0xBC1358")]
		private void checkEntitlement()
		{
		}

		[Token(Token = "0x600150C")]
		[Address(RVA = "0xBC2824", Offset = "0xBC2824", VA = "0xBC2824")]
		private void getEntitlementCallback(Message msg)
		{
		}

		[Token(Token = "0x600150D")]
		[Address(RVA = "0xBC2910", Offset = "0xBC2910", VA = "0xBC2910")]
		private void init(Message<User> msg)
		{
		}

		[Token(Token = "0x600150E")]
		[Address(RVA = "0xBC198C", Offset = "0xBC198C", VA = "0xBC198C")]
		private void requestCreateRoom()
		{
		}

		[Token(Token = "0x600150F")]
		[Address(RVA = "0xBC2A30", Offset = "0xBC2A30", VA = "0xBC2A30")]
		private void createRoomResponse(Message<MatchmakingEnqueueResultAndRoom> msg)
		{
		}

		[Token(Token = "0x6001510")]
		[Address(RVA = "0xBC1B08", Offset = "0xBC1B08", VA = "0xBC1B08")]
		private void requestCreateFilterRoom()
		{
		}

		[Token(Token = "0x6001511")]
		[Address(RVA = "0xBC1E9C", Offset = "0xBC1E9C", VA = "0xBC1E9C")]
		private void requestFindRoom()
		{
		}

		[Token(Token = "0x6001512")]
		[Address(RVA = "0xBC2010", Offset = "0xBC2010", VA = "0xBC2010")]
		private void requestFindFilteredRoom()
		{
		}

		[Token(Token = "0x6001513")]
		[Address(RVA = "0xBC2B64", Offset = "0xBC2B64", VA = "0xBC2B64")]
		private void foundMatch(Message<Oculus.Platform.Models.Room> msg)
		{
		}

		[Token(Token = "0x6001514")]
		[Address(RVA = "0xBC2C9C", Offset = "0xBC2C9C", VA = "0xBC2C9C")]
		private void joinRoomResponse(Message<Oculus.Platform.Models.Room> msg)
		{
		}

		[Token(Token = "0x6001515")]
		[Address(RVA = "0xBC1D28", Offset = "0xBC1D28", VA = "0xBC1D28")]
		private void requestFindMatch()
		{
		}

		[Token(Token = "0x6001516")]
		[Address(RVA = "0xBC2F80", Offset = "0xBC2F80", VA = "0xBC2F80")]
		private void searchingStarted(Message msg)
		{
		}

		[Token(Token = "0x6001517")]
		[Address(RVA = "0xBC3050", Offset = "0xBC3050", VA = "0xBC3050")]
		private void updateRoom(Message<Oculus.Platform.Models.Room> msg)
		{
		}

		[Token(Token = "0x6001518")]
		[Address(RVA = "0xBC22A8", Offset = "0xBC22A8", VA = "0xBC22A8")]
		private void sendChat(string chatMessage)
		{
		}

		[Token(Token = "0x6001519")]
		[Address(RVA = "0xBC1800", Offset = "0xBC1800", VA = "0xBC1800")]
		private void processNetPackets()
		{
		}

		[Token(Token = "0x600151A")]
		[Address(RVA = "0xBC23A4", Offset = "0xBC23A4", VA = "0xBC23A4")]
		private void requestLeaveRoom()
		{
		}

		[Token(Token = "0x600151B")]
		[Address(RVA = "0xBC33A8", Offset = "0xBC33A8", VA = "0xBC33A8")]
		private void leaveRoomResponse(Message<Oculus.Platform.Models.Room> msg)
		{
		}

		[Token(Token = "0x600151C")]
		[Address(RVA = "0xBC24CC", Offset = "0xBC24CC", VA = "0xBC24CC")]
		private void requestStartRatedMatch()
		{
		}

		[Token(Token = "0x600151D")]
		[Address(RVA = "0xBC347C", Offset = "0xBC347C", VA = "0xBC347C")]
		private void startRatedMatchResponse(Message msg)
		{
		}

		[Token(Token = "0x600151E")]
		[Address(RVA = "0xBC25C0", Offset = "0xBC25C0", VA = "0xBC25C0")]
		private void requestReportResults()
		{
		}

		[Token(Token = "0x600151F")]
		[Address(RVA = "0xBC354C", Offset = "0xBC354C", VA = "0xBC354C")]
		private void reportResultsResponse(Message msg)
		{
		}

		[Token(Token = "0x6001520")]
		[Address(RVA = "0xBC3608", Offset = "0xBC3608", VA = "0xBC3608")]
		public DataEntry()
		{
		}
	}
}
namespace Oculus.Platform.Samples.EntitlementCheck
{
	[Token(Token = "0x200033D")]
	public class EntitlementCheck : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40010A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool exitAppOnFailure;

		[Token(Token = "0x14000012")]
		public static event Action UserFailedEntitlementCheck
		{
			[Token(Token = "0x6001521")]
			[Address(RVA = "0xBC0B3C", Offset = "0xBC0B3C", VA = "0xBC0B3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ED924", Offset = "0x6ED924")]
			add
			{
			}
			[Token(Token = "0x6001522")]
			[Address(RVA = "0xBC0BF0", Offset = "0xBC0BF0", VA = "0xBC0BF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ED934", Offset = "0x6ED934")]
			remove
			{
			}
		}

		[Token(Token = "0x14000013")]
		public static event Action UserPassedEntitlementCheck
		{
			[Token(Token = "0x6001523")]
			[Address(RVA = "0xBC0CA4", Offset = "0xBC0CA4", VA = "0xBC0CA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ED944", Offset = "0x6ED944")]
			add
			{
			}
			[Token(Token = "0x6001524")]
			[Address(RVA = "0xBC0D5C", Offset = "0xBC0D5C", VA = "0xBC0D5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ED954", Offset = "0x6ED954")]
			remove
			{
			}
		}

		[Token(Token = "0x6001525")]
		[Address(RVA = "0xBC0E14", Offset = "0xBC0E14", VA = "0xBC0E14")]
		private void Start()
		{
		}

		[Token(Token = "0x6001526")]
		[Address(RVA = "0xBC123C", Offset = "0xBC123C", VA = "0xBC123C")]
		private void EntitlementCheckCallback(Message msg)
		{
		}

		[Token(Token = "0x6001527")]
		[Address(RVA = "0xBC0FC0", Offset = "0xBC0FC0", VA = "0xBC0FC0")]
		private void HandleEntitlementCheckResult(bool result)
		{
		}

		[Token(Token = "0x6001528")]
		[Address(RVA = "0xBC125C", Offset = "0xBC125C", VA = "0xBC125C")]
		public EntitlementCheck()
		{
		}
	}
}
namespace Oculus.Avatar
{
	[Token(Token = "0x200033E")]
	public static class AvatarLogger
	{
		[Token(Token = "0x40010A9")]
		public const string LogAvatar = "[Avatars] - ";

		[Token(Token = "0x40010AA")]
		public const string Tab = "    ";

		[Token(Token = "0x6001529")]
		[Address(RVA = "0x915E74", Offset = "0x915E74", VA = "0x915E74")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6ED964", Offset = "0x6ED964")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6ED964", Offset = "0x6ED964")]
		public static void Log(string logMsg)
		{
		}

		[Token(Token = "0x600152A")]
		[Address(RVA = "0x915EFC", Offset = "0x915EFC", VA = "0x915EFC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6ED9C4", Offset = "0x6ED9C4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6ED9C4", Offset = "0x6ED9C4")]
		public static void Log(string logMsg, UnityEngine.Object context)
		{
		}

		[Token(Token = "0x600152B")]
		[Address(RVA = "0x915F94", Offset = "0x915F94", VA = "0x915F94")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6EDA24", Offset = "0x6EDA24")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6EDA24", Offset = "0x6EDA24")]
		public static void LogWarning(string logMsg)
		{
		}

		[Token(Token = "0x600152C")]
		[Address(RVA = "0x91601C", Offset = "0x91601C", VA = "0x91601C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6EDA84", Offset = "0x6EDA84")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6EDA84", Offset = "0x6EDA84")]
		public static void LogError(string logMsg)
		{
		}
	}
	[Token(Token = "0x200033F")]
	public class CAPI
	{
		[Token(Token = "0x2000413")]
		public enum Result
		{
			[Token(Token = "0x40014F5")]
			Success = 0,
			[Token(Token = "0x40014F6")]
			Failure = -1000,
			[Token(Token = "0x40014F7")]
			Failure_InvalidParameter = -1001,
			[Token(Token = "0x40014F8")]
			Failure_NotInitialized = -1002,
			[Token(Token = "0x40014F9")]
			Failure_InvalidOperation = -1003,
			[Token(Token = "0x40014FA")]
			Failure_Unsupported = -1004,
			[Token(Token = "0x40014FB")]
			Failure_NotYetImplemented = -1005,
			[Token(Token = "0x40014FC")]
			Failure_OperationFailed = -1006,
			[Token(Token = "0x40014FD")]
			Failure_InsufficientSize = -1007
		}

		[Token(Token = "0x2000414")]
		private static class OVRP_1_30_0
		{
			[Token(Token = "0x40014FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly Version version;

			[PreserveSig]
			[Token(Token = "0x60018F8")]
			[Address(RVA = "0x91BB54", Offset = "0x91BB54", VA = "0x91BB54")]
			public static extern Result ovrp_SendEvent2(string name, string param, string source);
		}

		[Token(Token = "0x40010AB")]
		private const string LibFile = "ovravatarloader";

		[Token(Token = "0x40010AC")]
		private const string ovrPluginDLL = "OVRPlugin";

		[Token(Token = "0x40010AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Version ovrPluginVersion;

		[PreserveSig]
		[Token(Token = "0x600152D")]
		[Address(RVA = "0x9160A4", Offset = "0x9160A4", VA = "0x9160A4")]
		public static extern void ovrAvatar_InitializeAndroidUnity(string appID);

		[PreserveSig]
		[Token(Token = "0x600152E")]
		[Address(RVA = "0x916134", Offset = "0x916134", VA = "0x916134")]
		public static extern void ovrAvatar_Shutdown();

		[PreserveSig]
		[Token(Token = "0x600152F")]
		[Address(RVA = "0x9161A4", Offset = "0x9161A4", VA = "0x9161A4")]
		public static extern IntPtr ovrAvatarMessage_Pop();

		[PreserveSig]
		[Token(Token = "0x6001530")]
		[Address(RVA = "0x916218", Offset = "0x916218", VA = "0x916218")]
		public static extern ovrAvatarMessageType ovrAvatarMessage_GetType(IntPtr msg);

		[Token(Token = "0x6001531")]
		[Address(RVA = "0x916298", Offset = "0x916298", VA = "0x916298")]
		public static ovrAvatarMessage_AvatarSpecification ovrAvatarMessage_GetAvatarSpecification(IntPtr msg)
		{
			return default(ovrAvatarMessage_AvatarSpecification);
		}

		[PreserveSig]
		[Token(Token = "0x6001532")]
		[Address(RVA = "0x916390", Offset = "0x916390", VA = "0x916390")]
		private static extern IntPtr ovrAvatarMessage_GetAvatarSpecification_Native(IntPtr msg);

		[Token(Token = "0x6001533")]
		[Address(RVA = "0x916410", Offset = "0x916410", VA = "0x916410")]
		public static ovrAvatarMessage_AssetLoaded ovrAvatarMessage_GetAssetLoaded(IntPtr msg)
		{
			return default(ovrAvatarMessage_AssetLoaded);
		}

		[PreserveSig]
		[Token(Token = "0x6001534")]
		[Address(RVA = "0x916508", Offset = "0x916508", VA = "0x916508")]
		private static extern IntPtr ovrAvatarMessage_GetAssetLoaded_Native(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6001535")]
		[Address(RVA = "0x916588", Offset = "0x916588", VA = "0x916588")]
		public static extern void ovrAvatarMessage_Free(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6001536")]
		[Address(RVA = "0x916608", Offset = "0x916608", VA = "0x916608")]
		public static extern IntPtr ovrAvatarSpecificationRequest_Create(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001537")]
		[Address(RVA = "0x916688", Offset = "0x916688", VA = "0x916688")]
		public static extern void ovrAvatarSpecificationRequest_Destroy(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6001538")]
		[Address(RVA = "0x916708", Offset = "0x916708", VA = "0x916708")]
		public static extern void ovrAvatarSpecificationRequest_SetCombineMeshes(IntPtr specificationRequest, bool useCombinedMesh);

		[PreserveSig]
		[Token(Token = "0x6001539")]
		[Address(RVA = "0x916798", Offset = "0x916798", VA = "0x916798")]
		public static extern void ovrAvatarSpecificationRequest_SetLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x600153A")]
		[Address(RVA = "0x916828", Offset = "0x916828", VA = "0x916828")]
		public static extern void ovrAvatarSpecificationRequest_SetLevelOfDetail(IntPtr specificationRequest, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x600153B")]
		[Address(RVA = "0x9168B8", Offset = "0x9168B8", VA = "0x9168B8")]
		public static extern void ovrAvatar_RequestAvatarSpecification(ulong userID);

		[PreserveSig]
		[Token(Token = "0x600153C")]
		[Address(RVA = "0x916938", Offset = "0x916938", VA = "0x916938")]
		public static extern void ovrAvatar_RequestAvatarSpecificationFromSpecRequest(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x600153D")]
		[Address(RVA = "0x9169B8", Offset = "0x9169B8", VA = "0x9169B8")]
		public static extern void ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x600153E")]
		[Address(RVA = "0x916A48", Offset = "0x916A48", VA = "0x916A48")]
		public static extern void ovrAvatarSpecificationRequest_SetExpressiveFlag(IntPtr specificationRequest, bool enable);

		[PreserveSig]
		[Token(Token = "0x600153F")]
		[Address(RVA = "0x916AD8", Offset = "0x916AD8", VA = "0x916AD8")]
		public static extern IntPtr ovrAvatar_Create(IntPtr avatarSpecification, ovrAvatarCapabilities capabilities);

		[PreserveSig]
		[Token(Token = "0x6001540")]
		[Address(RVA = "0x916B68", Offset = "0x916B68", VA = "0x916B68")]
		public static extern void ovrAvatar_Destroy(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001541")]
		[Address(RVA = "0x916BE8", Offset = "0x916BE8", VA = "0x916BE8")]
		public static extern void ovrAvatarPose_UpdateBody(IntPtr avatar, ovrAvatarTransform headPose);

		[Token(Token = "0x6001542")]
		[Address(RVA = "0x916C88", Offset = "0x916C88", VA = "0x916C88")]
		public static void ovrAvatarPose_UpdateVoiceVisualization(IntPtr avatar, float[] pcmData)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001543")]
		[Address(RVA = "0x916CA4", Offset = "0x916CA4", VA = "0x916CA4")]
		private static extern void ovrAvatarPose_UpdateVoiceVisualization_Native(IntPtr avatar, uint pcmDataSize, [In] float[] pcmData);

		[PreserveSig]
		[Token(Token = "0x6001544")]
		[Address(RVA = "0x916D44", Offset = "0x916D44", VA = "0x916D44")]
		public static extern void ovrAvatarPose_UpdateHands(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight);

		[PreserveSig]
		[Token(Token = "0x6001545")]
		[Address(RVA = "0x916E04", Offset = "0x916E04", VA = "0x916E04")]
		public static extern void ovrAvatarPose_UpdateHandsWithType(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight, ovrAvatarControllerType type);

		[PreserveSig]
		[Token(Token = "0x6001546")]
		[Address(RVA = "0x916ED4", Offset = "0x916ED4", VA = "0x916ED4")]
		public static extern void ovrAvatarPose_Update3DofHands(IntPtr avatar, IntPtr inputStateLeft, IntPtr inputStateRight, ovrAvatarControllerType type);

		[Token(Token = "0x6001547")]
		[Address(RVA = "0x916F7C", Offset = "0x916F7C", VA = "0x916F7C")]
		public static void ovrAvatarPose_UpdateSDK3DofHands(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight, ovrAvatarControllerType type)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001548")]
		[Address(RVA = "0x91739C", Offset = "0x91739C", VA = "0x91739C")]
		public static extern void ovrAvatarPose_Finalize(IntPtr avatar, float elapsedSeconds);

		[PreserveSig]
		[Token(Token = "0x6001549")]
		[Address(RVA = "0x91715C", Offset = "0x91715C", VA = "0x91715C")]
		public static extern void ovrAvatar_SetLeftControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x600154A")]
		[Address(RVA = "0x9171EC", Offset = "0x9171EC", VA = "0x9171EC")]
		public static extern void ovrAvatar_SetRightControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x600154B")]
		[Address(RVA = "0x91727C", Offset = "0x91727C", VA = "0x91727C")]
		public static extern void ovrAvatar_SetLeftHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x600154C")]
		[Address(RVA = "0x91730C", Offset = "0x91730C", VA = "0x91730C")]
		public static extern void ovrAvatar_SetRightHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x600154D")]
		[Address(RVA = "0x91742C", Offset = "0x91742C", VA = "0x91742C")]
		public static extern uint ovrAvatarComponent_Count(IntPtr avatar);

		[Token(Token = "0x600154E")]
		[Address(RVA = "0x9174AC", Offset = "0x9174AC", VA = "0x9174AC")]
		public static ovrAvatarComponent ovrAvatarComponent_Get(IntPtr avatar, uint index)
		{
			return default(ovrAvatarComponent);
		}

		[PreserveSig]
		[Token(Token = "0x600154F")]
		[Address(RVA = "0x9175C0", Offset = "0x9175C0", VA = "0x9175C0")]
		public static extern IntPtr ovrAvatarComponent_Get_Native(IntPtr avatar, uint index);

		[Token(Token = "0x6001550")]
		[Address(RVA = "0x917650", Offset = "0x917650", VA = "0x917650")]
		public static ovrAvatarBaseComponent? ovrAvatarPose_GetBaseComponent(IntPtr avatar)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001551")]
		[Address(RVA = "0x9177A8", Offset = "0x9177A8", VA = "0x9177A8")]
		private static extern IntPtr ovrAvatarPose_GetBaseComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001552")]
		[Address(RVA = "0x917828", Offset = "0x917828", VA = "0x917828")]
		public static ovrAvatarBodyComponent? ovrAvatarPose_GetBodyComponent(IntPtr avatar)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001553")]
		[Address(RVA = "0x9179A0", Offset = "0x9179A0", VA = "0x9179A0")]
		private static extern IntPtr ovrAvatarPose_GetBodyComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001554")]
		[Address(RVA = "0x917A20", Offset = "0x917A20", VA = "0x917A20")]
		public static ovrAvatarControllerComponent? ovrAvatarPose_GetLeftControllerComponent(IntPtr avatar)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001555")]
		[Address(RVA = "0x917B98", Offset = "0x917B98", VA = "0x917B98")]
		private static extern IntPtr ovrAvatarPose_GetLeftControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001556")]
		[Address(RVA = "0x917C18", Offset = "0x917C18", VA = "0x917C18")]
		public static ovrAvatarControllerComponent? ovrAvatarPose_GetRightControllerComponent(IntPtr avatar)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001557")]
		[Address(RVA = "0x917D90", Offset = "0x917D90", VA = "0x917D90")]
		private static extern IntPtr ovrAvatarPose_GetRightControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001558")]
		[Address(RVA = "0x917E10", Offset = "0x917E10", VA = "0x917E10")]
		public static ovrAvatarHandComponent? ovrAvatarPose_GetLeftHandComponent(IntPtr avatar)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001559")]
		[Address(RVA = "0x917F88", Offset = "0x917F88", VA = "0x917F88")]
		private static extern IntPtr ovrAvatarPose_GetLeftHandComponent_Native(IntPtr avatar);

		[Token(Token = "0x600155A")]
		[Address(RVA = "0x918008", Offset = "0x918008", VA = "0x918008")]
		public static ovrAvatarHandComponent? ovrAvatarPose_GetRightHandComponent(IntPtr avatar)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600155B")]
		[Address(RVA = "0x918180", Offset = "0x918180", VA = "0x918180")]
		private static extern IntPtr ovrAvatarPose_GetRightHandComponent_Native(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x600155C")]
		[Address(RVA = "0x918200", Offset = "0x918200", VA = "0x918200")]
		public static extern void ovrAvatarAsset_BeginLoading(ulong assetID);

		[PreserveSig]
		[Token(Token = "0x600155D")]
		[Address(RVA = "0x918280", Offset = "0x918280", VA = "0x918280")]
		public static extern bool ovrAvatarAsset_BeginLoadingLOD(ulong assetId, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x600155E")]
		[Address(RVA = "0x918318", Offset = "0x918318", VA = "0x918318")]
		public static extern ovrAvatarAssetType ovrAvatarAsset_GetType(IntPtr assetHandle);

		[Token(Token = "0x600155F")]
		[Address(RVA = "0x918398", Offset = "0x918398", VA = "0x918398")]
		public static ovrAvatarMeshAssetData ovrAvatarAsset_GetMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetData);
		}

		[Token(Token = "0x6001560")]
		[Address(RVA = "0x918524", Offset = "0x918524", VA = "0x918524")]
		public static ovrAvatarMeshAssetDataV2 ovrAvatarAsset_GetCombinedMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetDataV2);
		}

		[PreserveSig]
		[Token(Token = "0x6001561")]
		[Address(RVA = "0x918630", Offset = "0x918630", VA = "0x918630")]
		private static extern IntPtr ovrAvatarAsset_GetCombinedMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001562")]
		[Address(RVA = "0x9184A4", Offset = "0x9184A4", VA = "0x9184A4")]
		private static extern IntPtr ovrAvatarAsset_GetMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001563")]
		[Address(RVA = "0x9186B0", Offset = "0x9186B0", VA = "0x9186B0")]
		public static extern uint ovrAvatarAsset_GetMeshBlendShapeCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001564")]
		[Address(RVA = "0x918730", Offset = "0x918730", VA = "0x918730")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeName(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6001565")]
		[Address(RVA = "0x9187C0", Offset = "0x9187C0", VA = "0x9187C0")]
		public static extern uint ovrAvatarAsset_GetSubmeshCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001566")]
		[Address(RVA = "0x918840", Offset = "0x918840", VA = "0x918840")]
		public static extern uint ovrAvatarAsset_GetSubmeshLastIndex(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6001567")]
		[Address(RVA = "0x9188D0", Offset = "0x9188D0", VA = "0x9188D0")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeVertices(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001568")]
		[Address(RVA = "0x918950", Offset = "0x918950", VA = "0x918950")]
		public static extern IntPtr ovrAvatarAsset_GetAvatar(IntPtr assetHandle);

		[Token(Token = "0x6001569")]
		[Address(RVA = "0x9189D0", Offset = "0x9189D0", VA = "0x9189D0")]
		public static ulong[] ovrAvatarAsset_GetCombinedMeshIDs(IntPtr assetHandle)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600156A")]
		[Address(RVA = "0x918BE8", Offset = "0x918BE8", VA = "0x918BE8")]
		public static extern IntPtr ovrAvatarAsset_GetCombinedMeshIDs_Native(IntPtr assetHandle, IntPtr count);

		[Token(Token = "0x600156B")]
		[Address(RVA = "0x918C78", Offset = "0x918C78", VA = "0x918C78")]
		public static void ovrAvatar_GetCombinedMeshAlphaData(IntPtr avatar, ref ulong textureID, ref Vector4 offset)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600156C")]
		[Address(RVA = "0x918E40", Offset = "0x918E40", VA = "0x918E40")]
		public static extern IntPtr ovrAvatar_GetCombinedMeshAlphaData_Native(IntPtr avatar, IntPtr textureIDPtr, IntPtr offsetPtr);

		[Token(Token = "0x600156D")]
		[Address(RVA = "0x918ED8", Offset = "0x918ED8", VA = "0x918ED8")]
		public static ovrAvatarTextureAssetData ovrAvatarAsset_GetTextureData(IntPtr assetPtr)
		{
			return default(ovrAvatarTextureAssetData);
		}

		[PreserveSig]
		[Token(Token = "0x600156E")]
		[Address(RVA = "0x918FDC", Offset = "0x918FDC", VA = "0x918FDC")]
		private static extern IntPtr ovrAvatarAsset_GetTextureData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x600156F")]
		[Address(RVA = "0x91905C", Offset = "0x91905C", VA = "0x91905C")]
		private static extern IntPtr ovrAvatarAsset_GetMaterialData_Native(IntPtr assetPtr);

		[Token(Token = "0x6001570")]
		[Address(RVA = "0x9190DC", Offset = "0x9190DC", VA = "0x9190DC")]
		public static ovrAvatarMaterialState ovrAvatarAsset_GetMaterialState(IntPtr assetPtr)
		{
			return default(ovrAvatarMaterialState);
		}

		[PreserveSig]
		[Token(Token = "0x6001571")]
		[Address(RVA = "0x9191E4", Offset = "0x9191E4", VA = "0x9191E4")]
		public static extern ovrAvatarRenderPartType ovrAvatarRenderPart_GetType(IntPtr renderPart);

		[Token(Token = "0x6001572")]
		[Address(RVA = "0x919264", Offset = "0x919264", VA = "0x919264")]
		public static ovrAvatarRenderPart_SkinnedMeshRender ovrAvatarRenderPart_GetSkinnedMeshRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRender);
		}

		[PreserveSig]
		[Token(Token = "0x6001573")]
		[Address(RVA = "0x91936C", Offset = "0x91936C", VA = "0x91936C")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001574")]
		[Address(RVA = "0x9193EC", Offset = "0x9193EC", VA = "0x9193EC")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001575")]
		[Address(RVA = "0x91947C", Offset = "0x91947C", VA = "0x91947C")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001576")]
		[Address(RVA = "0x91950C", Offset = "0x91950C", VA = "0x91950C")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001577")]
		[Address(RVA = "0x91959C", Offset = "0x91959C", VA = "0x91959C")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRender_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001578")]
		[Address(RVA = "0x91961C", Offset = "0x91961C", VA = "0x91961C")]
		public static extern bool ovrAvatarSkinnedMeshRender_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001579")]
		[Address(RVA = "0x9196A4", Offset = "0x9196A4", VA = "0x9196A4")]
		public static extern bool ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600157A")]
		[Address(RVA = "0x91972C", Offset = "0x91972C", VA = "0x91972C")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600157B")]
		[Address(RVA = "0x9197AC", Offset = "0x9197AC", VA = "0x9197AC")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600157C")]
		[Address(RVA = "0x91982C", Offset = "0x91982C", VA = "0x91982C")]
		public static extern ovrAvatarMaterialState ovrAvatarSkinnedMeshRender_GetMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600157D")]
		[Address(RVA = "0x9198E0", Offset = "0x9198E0", VA = "0x9198E0")]
		public static extern ovrAvatarPBSMaterialState ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600157E")]
		[Address(RVA = "0x919970", Offset = "0x919970", VA = "0x919970")]
		public static extern ovrAvatarExpressiveParameters ovrAvatar_GetExpressiveParameters(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x600157F")]
		[Address(RVA = "0x919A00", Offset = "0x919A00", VA = "0x919A00")]
		public static extern ulong ovrAvatarSkinnedMeshRender_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001580")]
		[Address(RVA = "0x919A80", Offset = "0x919A80", VA = "0x919A80")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001581")]
		[Address(RVA = "0x919B00", Offset = "0x919B00", VA = "0x919B00")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001582")]
		[Address(RVA = "0x919B80", Offset = "0x919B80", VA = "0x919B80")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6001583")]
		[Address(RVA = "0x919C18", Offset = "0x919C18", VA = "0x919C18")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6001584")]
		[Address(RVA = "0x919CB0", Offset = "0x919CB0", VA = "0x919CB0")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6001585")]
		[Address(RVA = "0x919D48", Offset = "0x919D48", VA = "0x919D48")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001586")]
		[Address(RVA = "0x919DC8", Offset = "0x919DC8", VA = "0x919DC8")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID(IntPtr renderPart);

		[Token(Token = "0x6001587")]
		[Address(RVA = "0x919E48", Offset = "0x919E48", VA = "0x919E48")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS ovrAvatarRenderPart_GetSkinnedMeshRenderPBS(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS);
		}

		[PreserveSig]
		[Token(Token = "0x6001588")]
		[Address(RVA = "0x919F50", Offset = "0x919F50", VA = "0x919F50")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native(IntPtr renderPart);

		[Token(Token = "0x6001589")]
		[Address(RVA = "0x919FD0", Offset = "0x919FD0", VA = "0x919FD0")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2);
		}

		[PreserveSig]
		[Token(Token = "0x600158A")]
		[Address(RVA = "0x91A0D8", Offset = "0x91A0D8", VA = "0x91A0D8")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native(IntPtr renderPart);

		[Token(Token = "0x600158B")]
		[Address(RVA = "0x91A158", Offset = "0x91A158", VA = "0x91A158")]
		public static ovrAvatarBlendShapeParams ovrAvatarSkinnedMeshRender_GetBlendShapeParams(IntPtr renderPart)
		{
			return default(ovrAvatarBlendShapeParams);
		}

		[PreserveSig]
		[Token(Token = "0x600158C")]
		[Address(RVA = "0x91A250", Offset = "0x91A250", VA = "0x91A250")]
		private static extern IntPtr ovrAvatarSkinnedMeshRender_GetBlendShapeParams_Native(IntPtr renderPart);

		[Token(Token = "0x600158D")]
		[Address(RVA = "0x91A2D0", Offset = "0x91A2D0", VA = "0x91A2D0")]
		public static ovrAvatarRenderPart_ProjectorRender ovrAvatarRenderPart_GetProjectorRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_ProjectorRender);
		}

		[Token(Token = "0x600158E")]
		[Address(RVA = "0x91A458", Offset = "0x91A458", VA = "0x91A458")]
		public static ovrAvatarPBSMaterialState[] ovrAvatar_GetBodyPBSMaterialStates(IntPtr renderPart)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600158F")]
		[Address(RVA = "0x91A6D0", Offset = "0x91A6D0", VA = "0x91A6D0")]
		private static extern IntPtr ovrAvatar_GetBodyPBSMaterialStates_Native(IntPtr avatar, IntPtr count);

		[PreserveSig]
		[Token(Token = "0x6001590")]
		[Address(RVA = "0x91A3D8", Offset = "0x91A3D8", VA = "0x91A3D8")]
		private static extern IntPtr ovrAvatarRenderPart_GetProjectorRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001591")]
		[Address(RVA = "0x91A760", Offset = "0x91A760", VA = "0x91A760")]
		public static extern uint ovrAvatar_GetReferencedAssetCount(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001592")]
		[Address(RVA = "0x91A7E0", Offset = "0x91A7E0", VA = "0x91A7E0")]
		public static extern ulong ovrAvatar_GetReferencedAsset(IntPtr avatar, uint index);

		[PreserveSig]
		[Token(Token = "0x6001593")]
		[Address(RVA = "0x91A870", Offset = "0x91A870", VA = "0x91A870")]
		public static extern void ovrAvatar_SetLeftHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6001594")]
		[Address(RVA = "0x91A900", Offset = "0x91A900", VA = "0x91A900")]
		public static extern void ovrAvatar_SetRightHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6001595")]
		[Address(RVA = "0x91A990", Offset = "0x91A990", VA = "0x91A990")]
		public static extern void ovrAvatar_SetLeftHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6001596")]
		[Address(RVA = "0x91AA30", Offset = "0x91AA30", VA = "0x91AA30")]
		public static extern void ovrAvatar_SetRightHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6001597")]
		[Address(RVA = "0x91AAD0", Offset = "0x91AAD0", VA = "0x91AAD0")]
		public static extern void ovrAvatar_UpdatePoseFromPacket(IntPtr avatar, IntPtr packet, float secondsFromStart);

		[PreserveSig]
		[Token(Token = "0x6001598")]
		[Address(RVA = "0x91AB70", Offset = "0x91AB70", VA = "0x91AB70")]
		public static extern void ovrAvatarPacket_BeginRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001599")]
		[Address(RVA = "0x91ABF0", Offset = "0x91ABF0", VA = "0x91ABF0")]
		public static extern IntPtr ovrAvatarPacket_EndRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x600159A")]
		[Address(RVA = "0x91AC70", Offset = "0x91AC70", VA = "0x91AC70")]
		public static extern uint ovrAvatarPacket_GetSize(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x600159B")]
		[Address(RVA = "0x91ACF0", Offset = "0x91ACF0", VA = "0x91ACF0")]
		public static extern float ovrAvatarPacket_GetDurationSeconds(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x600159C")]
		[Address(RVA = "0x91AD70", Offset = "0x91AD70", VA = "0x91AD70")]
		public static extern void ovrAvatarPacket_Free(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x600159D")]
		[Address(RVA = "0x91ADF0", Offset = "0x91ADF0", VA = "0x91ADF0")]
		public static extern bool ovrAvatarPacket_Write(IntPtr packet, uint bufferSize, [Out] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x600159E")]
		[Address(RVA = "0x91AF18", Offset = "0x91AF18", VA = "0x91AF18")]
		public static extern IntPtr ovrAvatarPacket_Read(uint bufferSize, [In] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x600159F")]
		[Address(RVA = "0x91AFB0", Offset = "0x91AFB0", VA = "0x91AFB0")]
		private static extern void ovrAvatar_SetInternalForceASTCTextures(bool value);

		[Token(Token = "0x60015A0")]
		[Address(RVA = "0x91B030", Offset = "0x91B030", VA = "0x91B030")]
		public static void ovrAvatar_SetForceASTCTextures(bool value)
		{
		}

		[Token(Token = "0x60015A1")]
		[Address(RVA = "0x91B038", Offset = "0x91B038", VA = "0x91B038")]
		public static void ovrAvatar_OverrideExpressiveLogic(IntPtr avatar, ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60015A2")]
		[Address(RVA = "0x91B134", Offset = "0x91B134", VA = "0x91B134")]
		private static extern void ovrAvatar_OverrideExpressiveLogic_Native(IntPtr avatar, IntPtr state);

		[Token(Token = "0x60015A3")]
		[Address(RVA = "0x91B1C4", Offset = "0x91B1C4", VA = "0x91B1C4")]
		public static void ovrAvatar_SetVisemes(IntPtr avatar, ovrAvatarVisemes visemes)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60015A4")]
		[Address(RVA = "0x91B2C0", Offset = "0x91B2C0", VA = "0x91B2C0")]
		private static extern void ovrAvatar_SetVisemes_Native(IntPtr avatar, IntPtr visemes);

		[PreserveSig]
		[Token(Token = "0x60015A5")]
		[Address(RVA = "0x91B350", Offset = "0x91B350", VA = "0x91B350")]
		public static extern void ovrAvatar_UpdateWorldTransform(IntPtr avatar, ovrAvatarTransform transform);

		[Token(Token = "0x60015A6")]
		[Address(RVA = "0x91B3F0", Offset = "0x91B3F0", VA = "0x91B3F0")]
		public static void ovrAvatar_UpdateGazeTargets(ovrAvatarGazeTargets targets)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60015A7")]
		[Address(RVA = "0x91B4E4", Offset = "0x91B4E4", VA = "0x91B4E4")]
		private static extern void ovrAvatar_UpdateGazeTargets_Native(IntPtr targets);

		[PreserveSig]
		[Token(Token = "0x60015A8")]
		[Address(RVA = "0x91B564", Offset = "0x91B564", VA = "0x91B564")]
		public static extern void ovrAvatar_RemoveGazeTargets(uint targetCount, uint[] ids);

		[Token(Token = "0x60015A9")]
		[Address(RVA = "0x91B5FC", Offset = "0x91B5FC", VA = "0x91B5FC")]
		public static void ovrAvatar_UpdateLights(ovrAvatarLights lights)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60015AA")]
		[Address(RVA = "0x91B6F0", Offset = "0x91B6F0", VA = "0x91B6F0")]
		private static extern void ovrAvatar_UpdateLights_Native(IntPtr lights);

		[PreserveSig]
		[Token(Token = "0x60015AB")]
		[Address(RVA = "0x91B770", Offset = "0x91B770", VA = "0x91B770")]
		public static extern void ovrAvatar_RemoveLights(uint lightCount, uint[] ids);

		[Token(Token = "0x60015AC")]
		[Address(RVA = "0x91B808", Offset = "0x91B808", VA = "0x91B808")]
		public static bool SendEvent(string name, string param = "", string source = "")
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60015AD")]
		[Address(RVA = "0x91BC30", Offset = "0x91BC30", VA = "0x91BC30")]
		private static extern IntPtr _ovrp_GetVersion();

		[Token(Token = "0x60015AE")]
		[Address(RVA = "0x91BAE4", Offset = "0x91BAE4", VA = "0x91BAE4")]
		public static string ovrp_GetVersion()
		{
			return null;
		}

		[Token(Token = "0x60015AF")]
		[Address(RVA = "0x91BCA4", Offset = "0x91BCA4", VA = "0x91BCA4")]
		public CAPI()
		{
		}
	}
}
namespace OVR
{
	[Token(Token = "0x2000340")]
	public class TestScript : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40010AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "InspectorNoteAttribute", RVA = "0x6E8E80", Offset = "0x6E8E80")]
		public SoundFXRef testSound1;

		[Token(Token = "0x40010AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoundFXRef testSound2;

		[Token(Token = "0x60015B0")]
		[Address(RVA = "0x90F3D8", Offset = "0x90F3D8", VA = "0x90F3D8")]
		private void Start()
		{
		}

		[Token(Token = "0x60015B1")]
		[Address(RVA = "0x90F3DC", Offset = "0x90F3DC", VA = "0x90F3DC")]
		private void Update()
		{
		}

		[Token(Token = "0x60015B2")]
		[Address(RVA = "0x90F49C", Offset = "0x90F49C", VA = "0x90F49C")]
		public TestScript()
		{
		}
	}
	[Token(Token = "0x2000341")]
	public class AmbienceEmitter : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40010B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFXRef[] ambientSounds;

		[Token(Token = "0x40010B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool autoActivate;

		[Token(Token = "0x40010B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E8ECC", Offset = "0x6E8ECC")]
		public bool autoRetrigger;

		[Token(Token = "0x40010B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x6E8F04", Offset = "0x6E8F04")]
		public Vector2 randomRetriggerDelaySecs;

		[Token(Token = "0x40010B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E8F28", Offset = "0x6E8F28")]
		public Transform[] playPositions;

		[Token(Token = "0x40010B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool activated;

		[Token(Token = "0x40010B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int playingIdx;

		[Token(Token = "0x40010B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float nextPlayTime;

		[Token(Token = "0x40010B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float fadeTime;

		[Token(Token = "0x40010B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int lastPosIdx;

		[Token(Token = "0x60015B3")]
		[Address(RVA = "0x10F49F4", Offset = "0x10F49F4", VA = "0x10F49F4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015B4")]
		[Address(RVA = "0x10F4B78", Offset = "0x10F4B78", VA = "0x10F4B78")]
		private void Update()
		{
		}

		[Token(Token = "0x60015B5")]
		[Address(RVA = "0x10F4D58", Offset = "0x10F4D58", VA = "0x10F4D58")]
		public void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x60015B6")]
		[Address(RVA = "0x10F4BD8", Offset = "0x10F4BD8", VA = "0x10F4BD8")]
		public void Play()
		{
		}

		[Token(Token = "0x60015B7")]
		[Address(RVA = "0x10F4E18", Offset = "0x10F4E18", VA = "0x10F4E18")]
		public void EnableEmitter(bool enable)
		{
		}

		[Token(Token = "0x60015B8")]
		[Address(RVA = "0x10F4F8C", Offset = "0x10F4F8C", VA = "0x10F4F8C")]
		public AmbienceEmitter()
		{
		}
	}
	[Token(Token = "0x2000342")]
	public enum PreloadSounds
	{
		[Token(Token = "0x40010BB")]
		Default,
		[Token(Token = "0x40010BC")]
		Preload,
		[Token(Token = "0x40010BD")]
		ManualPreload
	}
	[Token(Token = "0x2000343")]
	public enum Fade
	{
		[Token(Token = "0x40010BF")]
		In,
		[Token(Token = "0x40010C0")]
		Out
	}
	[Serializable]
	[Token(Token = "0x2000344")]
	public class SoundGroup
	{
		[Token(Token = "0x40010C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x40010C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFX[] soundList;

		[Token(Token = "0x40010C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioMixerGroup mixerGroup;

		[Token(Token = "0x40010C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6E8F60", Offset = "0x6E8F60")]
		public int maxPlayingSounds;

		[Token(Token = "0x40010C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public PreloadSounds preloadAudio;

		[Token(Token = "0x40010C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float volumeOverride;

		[Token(Token = "0x40010C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public int playingSoundCount;

		[Token(Token = "0x60015B9")]
		[Address(RVA = "0x90F198", Offset = "0x90F198", VA = "0x90F198")]
		public SoundGroup(string name)
		{
		}

		[Token(Token = "0x60015BA")]
		[Address(RVA = "0x90F22C", Offset = "0x90F22C", VA = "0x90F22C")]
		public SoundGroup()
		{
		}

		[Token(Token = "0x60015BB")]
		[Address(RVA = "0x90F2B8", Offset = "0x90F2B8", VA = "0x90F2B8")]
		public void IncrementPlayCount()
		{
		}

		[Token(Token = "0x60015BC")]
		[Address(RVA = "0x90F348", Offset = "0x90F348", VA = "0x90F348")]
		public void DecrementPlayCount()
		{
		}

		[Token(Token = "0x60015BD")]
		[Address(RVA = "0x90E74C", Offset = "0x90E74C", VA = "0x90E74C")]
		public bool CanPlaySound()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000345")]
	public class AudioManager : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x2000415")]
		public enum Fade
		{
			[Token(Token = "0x4001500")]
			In,
			[Token(Token = "0x4001501")]
			Out
		}

		[Token(Token = "0x2000416")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E1C80", Offset = "0x6E1C80")]
		private sealed class <>c__DisplayClass75_0
		{
			[Token(Token = "0x4001502")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SoundPriority priority;

			[Token(Token = "0x60018FA")]
			[Address(RVA = "0x10F90A4", Offset = "0x10F90A4", VA = "0x10F90A4")]
			public <>c__DisplayClass75_0()
			{
			}

			[Token(Token = "0x60018FB")]
			[Address(RVA = "0x10FB38C", Offset = "0x10FB38C", VA = "0x10FB38C")]
			internal bool <FindFreeEmitter>b__0(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000417")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E1C90", Offset = "0x6E1C90")]
		private sealed class <>c
		{
			[Token(Token = "0x4001503")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001504")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<SoundEmitter> <>9__75_1;

			[Token(Token = "0x60018FD")]
			[Address(RVA = "0x10FB2F4", Offset = "0x10FB2F4", VA = "0x10FB2F4")]
			public <>c()
			{
			}

			[Token(Token = "0x60018FE")]
			[Address(RVA = "0x10FB2FC", Offset = "0x10FB2FC", VA = "0x10FB2FC")]
			internal bool <FindFreeEmitter>b__75_1(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40010C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E8F8C", Offset = "0x6E8F8C")]
		public bool makePersistent;

		[Token(Token = "0x40010C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E8FC4", Offset = "0x6E8FC4")]
		public bool enableSpatializedAudio;

		[Token(Token = "0x40010CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E8FFC", Offset = "0x6E8FFC")]
		public bool enableSpatializedFastOverride;

		[Token(Token = "0x40010CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E9034", Offset = "0x6E9034")]
		public AudioMixer audioMixer;

		[Token(Token = "0x40010CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E906C", Offset = "0x6E906C")]
		public AudioMixerGroup defaultMixerGroup;

		[Token(Token = "0x40010CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E90A4", Offset = "0x6E90A4")]
		public AudioMixerGroup reservedMixerGroup;

		[Token(Token = "0x40010CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E90DC", Offset = "0x6E90DC")]
		public AudioMixerGroup voiceChatMixerGroup;

		[Token(Token = "0x40010CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E9114", Offset = "0x6E9114")]
		public bool verboseLogging;

		[Token(Token = "0x40010D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E914C", Offset = "0x6E914C")]
		public int maxSoundEmitters;

		[Token(Token = "0x40010D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E9184", Offset = "0x6E9184")]
		public float volumeSoundFX;

		[Token(Token = "0x40010D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E91BC", Offset = "0x6E91BC")]
		public float soundFxFadeSecs;

		[Token(Token = "0x40010D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float audioMinFallOffDistance;

		[Token(Token = "0x40010D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float audioMaxFallOffDistance;

		[Token(Token = "0x40010D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SoundGroup[] soundGroupings;

		[Token(Token = "0x40010D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<string, SoundFX> soundFXCache;

		[Token(Token = "0x40010D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AudioManager theAudioManager;

		[Token(Token = "0x40010D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static FastList<string> names;

		[Token(Token = "0x40010D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string[] defaultSound;

		[Token(Token = "0x40010DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static SoundFX nullSound;

		[Token(Token = "0x40010DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static bool hideWarnings;

		[Token(Token = "0x40010DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float audioMaxFallOffDistanceSqr;

		[Token(Token = "0x40010DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private SoundEmitter[] soundEmitters;

		[Token(Token = "0x40010DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private FastList<SoundEmitter> playingEmitters;

		[Token(Token = "0x40010DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private FastList<SoundEmitter> nextFreeEmitters;

		[Token(Token = "0x40010E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MixerSnapshot currentSnapshot;

		[Token(Token = "0x40010E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject soundEmitterParent;

		[Token(Token = "0x40010E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Transform staticListenerPosition;

		[Token(Token = "0x40010E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static bool showPlayingEmitterCount;

		[Token(Token = "0x40010E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private static bool forceShowEmitterCount;

		[Token(Token = "0x40010E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private static bool soundEnabled;

		[Token(Token = "0x40010E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly AnimationCurve defaultReverbZoneMix;

		[Token(Token = "0x170001DA")]
		public static bool enableSpatialization
		{
			[Token(Token = "0x60015BE")]
			[Address(RVA = "0x10F504C", Offset = "0x10F504C", VA = "0x10F504C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001DB")]
		public static AudioManager Instance
		{
			[Token(Token = "0x60015BF")]
			[Address(RVA = "0x10F512C", Offset = "0x10F512C", VA = "0x10F512C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DC")]
		public static float NearFallOff
		{
			[Token(Token = "0x60015C0")]
			[Address(RVA = "0x10F5194", Offset = "0x10F5194", VA = "0x10F5194")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001DD")]
		public static float FarFallOff
		{
			[Token(Token = "0x60015C1")]
			[Address(RVA = "0x10F5208", Offset = "0x10F5208", VA = "0x10F5208")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001DE")]
		public static AudioMixerGroup EmitterGroup
		{
			[Token(Token = "0x60015C2")]
			[Address(RVA = "0x10F527C", Offset = "0x10F527C", VA = "0x10F527C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DF")]
		public static AudioMixerGroup ReservedGroup
		{
			[Token(Token = "0x60015C3")]
			[Address(RVA = "0x10F52F0", Offset = "0x10F52F0", VA = "0x10F52F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E0")]
		public static AudioMixerGroup VoipGroup
		{
			[Token(Token = "0x60015C4")]
			[Address(RVA = "0x10F5364", Offset = "0x10F5364", VA = "0x10F5364")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E1")]
		public static bool SoundEnabled
		{
			[Token(Token = "0x60015CF")]
			[Address(RVA = "0x10F70B4", Offset = "0x10F70B4", VA = "0x10F70B4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60015C5")]
		[Address(RVA = "0x10F53D8", Offset = "0x10F53D8", VA = "0x10F53D8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015C6")]
		[Address(RVA = "0x10F5600", Offset = "0x10F5600", VA = "0x10F5600")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60015C7")]
		[Address(RVA = "0x10F53DC", Offset = "0x10F53DC", VA = "0x10F53DC")]
		private void Init()
		{
		}

		[Token(Token = "0x60015C8")]
		[Address(RVA = "0x10F622C", Offset = "0x10F622C", VA = "0x10F622C")]
		private void Update()
		{
		}

		[Token(Token = "0x60015C9")]
		[Address(RVA = "0x10F5758", Offset = "0x10F5758", VA = "0x10F5758")]
		private void RebuildSoundFXCache()
		{
		}

		[Token(Token = "0x60015CA")]
		[Address(RVA = "0x10F6850", Offset = "0x10F6850", VA = "0x10F6850")]
		public static SoundFX FindSoundFX(string name, bool rebuildCache = false)
		{
			return null;
		}

		[Token(Token = "0x60015CB")]
		[Address(RVA = "0x10F69D0", Offset = "0x10F69D0", VA = "0x10F69D0")]
		private static bool FindAudioManager()
		{
			return default(bool);
		}

		[Token(Token = "0x60015CC")]
		[Address(RVA = "0x10F6B6C", Offset = "0x10F6B6C", VA = "0x10F6B6C")]
		public static GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x60015CD")]
		[Address(RVA = "0x10F6C6C", Offset = "0x10F6C6C", VA = "0x10F6C6C")]
		public static string NameMinusGroup(string name)
		{
			return null;
		}

		[Token(Token = "0x60015CE")]
		[Address(RVA = "0x10F6CFC", Offset = "0x10F6CFC", VA = "0x10F6CFC")]
		public static string[] GetSoundFXNames(string currentValue, out int currentIdx)
		{
			return null;
		}

		[Token(Token = "0x60015D0")]
		[Address(RVA = "0x10F5BA4", Offset = "0x10F5BA4", VA = "0x10F5BA4")]
		private void InitializeSoundSystem()
		{
		}

		[Token(Token = "0x60015D1")]
		[Address(RVA = "0x10F6230", Offset = "0x10F6230", VA = "0x10F6230")]
		private void UpdateFreeEmitters()
		{
		}

		[Token(Token = "0x60015D2")]
		[Address(RVA = "0x10F7338", Offset = "0x10F7338", VA = "0x10F7338")]
		private string Fmt(int count)
		{
			return null;
		}

		[Token(Token = "0x60015D3")]
		[Address(RVA = "0x10F743C", Offset = "0x10F743C", VA = "0x10F743C")]
		private string FmtFree(int count)
		{
			return null;
		}

		[Token(Token = "0x60015D4")]
		[Address(RVA = "0x10F7544", Offset = "0x10F7544", VA = "0x10F7544")]
		private void OnPreSceneLoad()
		{
		}

		[Token(Token = "0x60015D5")]
		[Address(RVA = "0x10F7200", Offset = "0x10F7200", VA = "0x10F7200")]
		private void ResetFreeEmitters()
		{
		}

		[Token(Token = "0x60015D6")]
		[Address(RVA = "0x10F76B0", Offset = "0x10F76B0", VA = "0x10F76B0")]
		public static void FadeOutSoundChannel(int channel, float delaySecs, float fadeTime)
		{
		}

		[Token(Token = "0x60015D7")]
		[Address(RVA = "0x10F7804", Offset = "0x10F7804", VA = "0x10F7804")]
		public static bool StopSound(int idx, bool fadeOut = true, bool stopReserved = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60015D8")]
		[Address(RVA = "0x10F79B4", Offset = "0x10F79B4", VA = "0x10F79B4")]
		public static void FadeInSound(int idx, float fadeTime, float volume)
		{
		}

		[Token(Token = "0x60015D9")]
		[Address(RVA = "0x10F4D68", Offset = "0x10F4D68", VA = "0x10F4D68")]
		public static void FadeInSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x60015DA")]
		[Address(RVA = "0x10F4EDC", Offset = "0x10F4EDC", VA = "0x10F4EDC")]
		public static void FadeOutSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x60015DB")]
		[Address(RVA = "0x10F7B60", Offset = "0x10F7B60", VA = "0x10F7B60")]
		public static void StopAllSounds(bool fadeOut, bool stopReserved = false)
		{
		}

		[Token(Token = "0x60015DC")]
		[Address(RVA = "0x10F7C2C", Offset = "0x10F7C2C", VA = "0x10F7C2C")]
		public void MuteAllSounds(bool mute, bool muteReserved = false)
		{
		}

		[Token(Token = "0x60015DD")]
		[Address(RVA = "0x10F7CC0", Offset = "0x10F7CC0", VA = "0x10F7CC0")]
		public void UnMuteAllSounds(bool unmute, bool unmuteReserved = false)
		{
		}

		[Token(Token = "0x60015DE")]
		[Address(RVA = "0x10F7D84", Offset = "0x10F7D84", VA = "0x10F7D84")]
		public static float GetEmitterEndTime(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x60015DF")]
		[Address(RVA = "0x10F7E28", Offset = "0x10F7E28", VA = "0x10F7E28")]
		public static float SetEmitterTime(int idx, float time)
		{
			return default(float);
		}

		[Token(Token = "0x60015E0")]
		[Address(RVA = "0x10F7F08", Offset = "0x10F7F08", VA = "0x10F7F08")]
		public static int PlaySound(AudioClip clip, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitchVariance = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x60015E1")]
		[Address(RVA = "0x10F89EC", Offset = "0x10F89EC", VA = "0x10F89EC")]
		private static int FindFreeEmitter(EmitterChannel src, SoundPriority priority)
		{
			return default(int);
		}

		[Token(Token = "0x60015E2")]
		[Address(RVA = "0x10F90AC", Offset = "0x10F90AC", VA = "0x10F90AC")]
		public static int PlaySound(SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x60015E3")]
		[Address(RVA = "0x10F928C", Offset = "0x10F928C", VA = "0x10F928C")]
		public static int PlaySoundAt(Vector3 position, SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x60015E4")]
		[Address(RVA = "0x10F9E00", Offset = "0x10F9E00", VA = "0x10F9E00")]
		public static int PlayRandomSoundAt(Vector3 position, AudioClip[] clips, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x60015E5")]
		[Address(RVA = "0x10F8110", Offset = "0x10F8110", VA = "0x10F8110")]
		public static int PlaySoundAt(Vector3 position, AudioClip clip, float volume = 1f, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x60015E6")]
		[Address(RVA = "0x10F9F20", Offset = "0x10F9F20", VA = "0x10F9F20")]
		public static void SetOnFinished(int emitterIdx, Action onFinished)
		{
		}

		[Token(Token = "0x60015E7")]
		[Address(RVA = "0x10FA004", Offset = "0x10FA004", VA = "0x10FA004")]
		public static void SetOnFinished(int emitterIdx, Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x60015E8")]
		[Address(RVA = "0x10FA0F4", Offset = "0x10FA0F4", VA = "0x10FA0F4")]
		public static void AttachSoundToParent(int idx, Transform parent)
		{
		}

		[Token(Token = "0x60015E9")]
		[Address(RVA = "0x10FA4AC", Offset = "0x10FA4AC", VA = "0x10FA4AC")]
		public static void DetachSoundFromParent(int idx)
		{
		}

		[Token(Token = "0x60015EA")]
		[Address(RVA = "0x10FA6A8", Offset = "0x10FA6A8", VA = "0x10FA6A8")]
		public static void DetachSoundsFromParent(SoundEmitter[] emitters, bool stopSounds = true)
		{
		}

		[Token(Token = "0x60015EB")]
		[Address(RVA = "0x10FA7C4", Offset = "0x10FA7C4", VA = "0x10FA7C4")]
		public static void SetEmitterMixerGroup(int idx, AudioMixerGroup mixerGroup)
		{
		}

		[Token(Token = "0x60015EC")]
		[Address(RVA = "0x10FA98C", Offset = "0x10FA98C", VA = "0x10FA98C")]
		public static MixerSnapshot GetActiveSnapshot()
		{
			return null;
		}

		[Token(Token = "0x60015ED")]
		[Address(RVA = "0x10FAA64", Offset = "0x10FAA64", VA = "0x10FAA64")]
		public static void SetCurrentSnapshot(MixerSnapshot mixerSnapshot)
		{
		}

		[Token(Token = "0x60015EE")]
		[Address(RVA = "0x10FAB98", Offset = "0x10FAB98", VA = "0x10FAB98")]
		public static void BlendWithCurrentSnapshot(MixerSnapshot blendSnapshot, float weight, float blendTime = 0f)
		{
		}

		[Token(Token = "0x60015EF")]
		[Address(RVA = "0x10FAF84", Offset = "0x10FAF84", VA = "0x10FAF84")]
		public AudioManager()
		{
		}
	}
	[Token(Token = "0x2000346")]
	public enum EmitterChannel
	{
		[Token(Token = "0x40010E8")]
		None = -1,
		[Token(Token = "0x40010E9")]
		Reserved,
		[Token(Token = "0x40010EA")]
		Any
	}
	[Serializable]
	[Token(Token = "0x2000347")]
	public class MixerSnapshot
	{
		[Token(Token = "0x40010EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioMixerSnapshot snapshot;

		[Token(Token = "0x40010EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float transitionTime;

		[Token(Token = "0x60015F1")]
		[Address(RVA = "0x10FB488", Offset = "0x10FB488", VA = "0x10FB488")]
		public MixerSnapshot()
		{
		}
	}
	[Token(Token = "0x2000348")]
	public class MinMaxAttribute : PropertyAttribute
	{
		[Token(Token = "0x40010ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float minDefaultVal;

		[Token(Token = "0x40010EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float maxDefaultVal;

		[Token(Token = "0x40010EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float min;

		[Token(Token = "0x40010F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float max;

		[Token(Token = "0x60015F2")]
		[Address(RVA = "0x10FB42C", Offset = "0x10FB42C", VA = "0x10FB42C")]
		public MinMaxAttribute(float minDefaultVal, float maxDefaultVal, float min, float max)
		{
		}
	}
	[Token(Token = "0x2000349")]
	public class SoundEmitter : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x2000418")]
		public enum FadeState
		{
			[Token(Token = "0x4001506")]
			Null,
			[Token(Token = "0x4001507")]
			FadingIn,
			[Token(Token = "0x4001508")]
			FadingOut,
			[Token(Token = "0x4001509")]
			Ducking
		}

		[Token(Token = "0x2000419")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E1CA0", Offset = "0x6E1CA0")]
		private sealed class <DelayedSyncTo>d__57 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400150A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400150B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400150C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x400150D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SoundEmitter other;

			[Token(Token = "0x400150E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float fadeTime;

			[Token(Token = "0x400150F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float toVolume;

			[Token(Token = "0x17000272")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001902")]
				[Address(RVA = "0x10FBD88", Offset = "0x10FBD88", VA = "0x10FBD88", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000273")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001904")]
				[Address(RVA = "0x10FBDF0", Offset = "0x10FBDF0", VA = "0x10FBDF0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018FF")]
			[Address(RVA = "0x10FBA94", Offset = "0x10FBA94", VA = "0x10FBA94")]
			[DebuggerHidden]
			public <DelayedSyncTo>d__57(int <>1__state)
			{
			}

			[Token(Token = "0x6001900")]
			[Address(RVA = "0x10FBC98", Offset = "0x10FBC98", VA = "0x10FBC98", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001901")]
			[Address(RVA = "0x10FBC9C", Offset = "0x10FBC9C", VA = "0x10FBC9C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001903")]
			[Address(RVA = "0x10FBD90", Offset = "0x10FBD90", VA = "0x10FBD90", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200041A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E1CB0", Offset = "0x6E1CB0")]
		private sealed class <FadeSoundChannelTo>d__63 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001510")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001511")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001512")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4001513")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float toVolume;

			[Token(Token = "0x4001514")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float fadeTime;

			[Token(Token = "0x4001515")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <start>5__2;

			[Token(Token = "0x4001516")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <end>5__3;

			[Token(Token = "0x4001517")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4001518")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <elapsedTime>5__5;

			[Token(Token = "0x17000274")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001908")]
				[Address(RVA = "0x90DF60", Offset = "0x90DF60", VA = "0x90DF60", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000275")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600190A")]
				[Address(RVA = "0x90DFC8", Offset = "0x90DFC8", VA = "0x90DFC8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001905")]
			[Address(RVA = "0x90DDC8", Offset = "0x90DDC8", VA = "0x90DDC8")]
			[DebuggerHidden]
			public <FadeSoundChannelTo>d__63(int <>1__state)
			{
			}

			[Token(Token = "0x6001906")]
			[Address(RVA = "0x90DDF4", Offset = "0x90DDF4", VA = "0x90DDF4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001907")]
			[Address(RVA = "0x90DDF8", Offset = "0x90DDF8", VA = "0x90DDF8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001909")]
			[Address(RVA = "0x90DF68", Offset = "0x90DF68", VA = "0x90DF68", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200041B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E1CC0", Offset = "0x6E1CC0")]
		private sealed class <FadeSoundChannel>d__64 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001519")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400151A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400151B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delaySecs;

			[Token(Token = "0x400151C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Fade fadeType;

			[Token(Token = "0x400151D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float defaultVolume;

			[Token(Token = "0x400151E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x400151F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float fadeTime;

			[Token(Token = "0x4001520")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <start>5__2;

			[Token(Token = "0x4001521")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <end>5__3;

			[Token(Token = "0x4001522")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private bool <restartPlay>5__4;

			[Token(Token = "0x4001523")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <startTime>5__5;

			[Token(Token = "0x4001524")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <elapsedTime>5__6;

			[Token(Token = "0x17000276")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600190E")]
				[Address(RVA = "0x10FC060", Offset = "0x10FC060", VA = "0x10FC060", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000277")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001910")]
				[Address(RVA = "0x10FC0C8", Offset = "0x10FC0C8", VA = "0x10FC0C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600190B")]
			[Address(RVA = "0x10FBC54", Offset = "0x10FBC54", VA = "0x10FBC54")]
			[DebuggerHidden]
			public <FadeSoundChannel>d__64(int <>1__state)
			{
			}

			[Token(Token = "0x600190C")]
			[Address(RVA = "0x10FBDF8", Offset = "0x10FBDF8", VA = "0x10FBDF8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600190D")]
			[Address(RVA = "0x10FBDFC", Offset = "0x10FBDFC", VA = "0x10FBDFC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600190F")]
			[Address(RVA = "0x10FC068", Offset = "0x10FC068", VA = "0x10FC068", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40010F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EmitterChannel channel;

		[Token(Token = "0x40010F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool disableSpatialization;

		[Token(Token = "0x40010F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FadeState state;

		[NonSerialized]
		[Token(Token = "0x40010F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public AudioSource audioSource;

		[NonSerialized]
		[Token(Token = "0x40010F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public SoundPriority priority;

		[NonSerialized]
		[Token(Token = "0x40010F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public ONSPAudioSource osp;

		[NonSerialized]
		[Token(Token = "0x40010F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public float endPlayTime;

		[Token(Token = "0x40010F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform lastParentTransform;

		[NonSerialized]
		[Token(Token = "0x40010F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public float defaultVolume;

		[NonSerialized]
		[Token(Token = "0x40010FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public Transform defaultParent;

		[NonSerialized]
		[Token(Token = "0x40010FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public int originalIdx;

		[NonSerialized]
		[Token(Token = "0x40010FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Action onFinished;

		[NonSerialized]
		[Token(Token = "0x40010FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public Action<object> onFinishedObject;

		[NonSerialized]
		[Token(Token = "0x40010FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public object onFinishedParam;

		[NonSerialized]
		[Token(Token = "0x40010FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public SoundGroup playingSoundGroup;

		[Token(Token = "0x170001E2")]
		public float volume
		{
			[Token(Token = "0x60015F3")]
			[Address(RVA = "0x10F9DE4", Offset = "0x10F9DE4", VA = "0x10F9DE4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60015F4")]
			[Address(RVA = "0x10FB528", Offset = "0x10FB528", VA = "0x10FB528")]
			set
			{
			}
		}

		[Token(Token = "0x170001E3")]
		public float pitch
		{
			[Token(Token = "0x60015F5")]
			[Address(RVA = "0x10FB544", Offset = "0x10FB544", VA = "0x10FB544")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60015F6")]
			[Address(RVA = "0x10FB560", Offset = "0x10FB560", VA = "0x10FB560")]
			set
			{
			}
		}

		[Token(Token = "0x170001E4")]
		public AudioClip clip
		{
			[Token(Token = "0x60015F7")]
			[Address(RVA = "0x10FB57C", Offset = "0x10FB57C", VA = "0x10FB57C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015F8")]
			[Address(RVA = "0x10FB598", Offset = "0x10FB598", VA = "0x10FB598")]
			set
			{
			}
		}

		[Token(Token = "0x170001E5")]
		public float time
		{
			[Token(Token = "0x60015F9")]
			[Address(RVA = "0x10FB5B4", Offset = "0x10FB5B4", VA = "0x10FB5B4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60015FA")]
			[Address(RVA = "0x10F7EEC", Offset = "0x10F7EEC", VA = "0x10F7EEC")]
			set
			{
			}
		}

		[Token(Token = "0x170001E6")]
		public float length
		{
			[Token(Token = "0x60015FB")]
			[Address(RVA = "0x10FB5D0", Offset = "0x10FB5D0", VA = "0x10FB5D0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001E7")]
		public bool loop
		{
			[Token(Token = "0x60015FC")]
			[Address(RVA = "0x10FB688", Offset = "0x10FB688", VA = "0x10FB688")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60015FD")]
			[Address(RVA = "0x10FB6A4", Offset = "0x10FB6A4", VA = "0x10FB6A4")]
			set
			{
			}
		}

		[Token(Token = "0x170001E8")]
		public bool mute
		{
			[Token(Token = "0x60015FE")]
			[Address(RVA = "0x10FB6C4", Offset = "0x10FB6C4", VA = "0x10FB6C4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60015FF")]
			[Address(RVA = "0x10FB6E0", Offset = "0x10FB6E0", VA = "0x10FB6E0")]
			set
			{
			}
		}

		[Token(Token = "0x170001E9")]
		public AudioVelocityUpdateMode velocityUpdateMode
		{
			[Token(Token = "0x6001600")]
			[Address(RVA = "0x10FB700", Offset = "0x10FB700", VA = "0x10FB700")]
			get
			{
				return default(AudioVelocityUpdateMode);
			}
			[Token(Token = "0x6001601")]
			[Address(RVA = "0x10FB71C", Offset = "0x10FB71C", VA = "0x10FB71C")]
			set
			{
			}
		}

		[Token(Token = "0x170001EA")]
		public bool isPlaying
		{
			[Token(Token = "0x6001602")]
			[Address(RVA = "0x10FB738", Offset = "0x10FB738", VA = "0x10FB738")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001603")]
		[Address(RVA = "0x10FB754", Offset = "0x10FB754", VA = "0x10FB754")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001604")]
		[Address(RVA = "0x10F9DCC", Offset = "0x10F9DCC", VA = "0x10F9DCC")]
		public void SetPlayingSoundGroup(SoundGroup soundGroup)
		{
		}

		[Token(Token = "0x6001605")]
		[Address(RVA = "0x10FB8D0", Offset = "0x10FB8D0", VA = "0x10FB8D0")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6001606")]
		[Address(RVA = "0x10FA0EC", Offset = "0x10FA0EC", VA = "0x10FA0EC")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6001607")]
		[Address(RVA = "0x10FB8D8", Offset = "0x10FB8D8", VA = "0x10FB8D8")]
		public void SetChannel(int _channel)
		{
		}

		[Token(Token = "0x6001608")]
		[Address(RVA = "0x10FB8E0", Offset = "0x10FB8E0", VA = "0x10FB8E0")]
		public void SetDefaultParent(Transform parent)
		{
		}

		[Token(Token = "0x6001609")]
		[Address(RVA = "0x10FA8E4", Offset = "0x10FA8E4", VA = "0x10FA8E4")]
		public void SetAudioMixer(AudioMixerGroup _mixer)
		{
		}

		[Token(Token = "0x600160A")]
		[Address(RVA = "0x10F72CC", Offset = "0x10F72CC", VA = "0x10F72CC")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x600160B")]
		[Address(RVA = "0x10FB8E8", Offset = "0x10FB8E8", VA = "0x10FB8E8")]
		public void Play()
		{
		}

		[Token(Token = "0x600160C")]
		[Address(RVA = "0x10FB948", Offset = "0x10FB948", VA = "0x10FB948")]
		public void Pause()
		{
		}

		[Token(Token = "0x600160D")]
		[Address(RVA = "0x10F711C", Offset = "0x10F711C", VA = "0x10F711C")]
		public void Stop()
		{
		}

		[Token(Token = "0x600160E")]
		[Address(RVA = "0x10FB980", Offset = "0x10FB980", VA = "0x10FB980")]
		private int GetSampleTime()
		{
			return default(int);
		}

		[Token(Token = "0x600160F")]
		[Address(RVA = "0x10FA3B0", Offset = "0x10FA3B0", VA = "0x10FA3B0")]
		public void ParentTo(Transform parent)
		{
		}

		[Token(Token = "0x6001610")]
		[Address(RVA = "0x10FA5F0", Offset = "0x10FA5F0", VA = "0x10FA5F0")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x6001611")]
		[Address(RVA = "0x10F7670", Offset = "0x10F7670", VA = "0x10F7670")]
		public void ResetParent(Transform parent)
		{
		}

		[Token(Token = "0x6001612")]
		[Address(RVA = "0x10FB9D8", Offset = "0x10FB9D8", VA = "0x10FB9D8")]
		public void SyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x6001613")]
		[Address(RVA = "0x10FBA04", Offset = "0x10FBA04", VA = "0x10FBA04")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6EDAE4", Offset = "0x6EDAE4")]
		private IEnumerator DelayedSyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x6001614")]
		[Address(RVA = "0x10FBAC0", Offset = "0x10FBAC0", VA = "0x10FBAC0")]
		public void FadeTo(float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x6001615")]
		[Address(RVA = "0x10F7A6C", Offset = "0x10F7A6C", VA = "0x10F7A6C")]
		public void FadeIn(float fadeTime, float defaultVolume)
		{
		}

		[Token(Token = "0x6001616")]
		[Address(RVA = "0x10F7AE8", Offset = "0x10F7AE8", VA = "0x10F7AE8")]
		public void FadeIn(float fadeTime)
		{
		}

		[Token(Token = "0x6001617")]
		[Address(RVA = "0x10F791C", Offset = "0x10F791C", VA = "0x10F791C")]
		public void FadeOut(float fadeTime)
		{
		}

		[Token(Token = "0x6001618")]
		[Address(RVA = "0x10F7768", Offset = "0x10F7768", VA = "0x10F7768")]
		public void FadeOutDelayed(float delayedSecs, float fadeTime)
		{
		}

		[Token(Token = "0x6001619")]
		[Address(RVA = "0x10FBB28", Offset = "0x10FBB28", VA = "0x10FBB28")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6EDB48", Offset = "0x6EDB48")]
		private IEnumerator FadeSoundChannelTo(float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x600161A")]
		[Address(RVA = "0x10FBBAC", Offset = "0x10FBBAC", VA = "0x10FBBAC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6EDBAC", Offset = "0x6EDBAC")]
		private IEnumerator FadeSoundChannel(float delaySecs, float fadeTime, Fade fadeType, float defaultVolume)
		{
			return null;
		}

		[Token(Token = "0x600161B")]
		[Address(RVA = "0x10FBC80", Offset = "0x10FBC80", VA = "0x10FBC80")]
		public SoundEmitter()
		{
		}
	}
	[Token(Token = "0x200034A")]
	public enum SoundFXNext
	{
		[Token(Token = "0x4001101")]
		Random,
		[Token(Token = "0x4001102")]
		Sequential
	}
	[Token(Token = "0x200034B")]
	public enum FreqHint
	{
		[Token(Token = "0x4001104")]
		None,
		[Token(Token = "0x4001105")]
		Wide,
		[Token(Token = "0x4001106")]
		Narrow
	}
	[Token(Token = "0x200034C")]
	public enum SoundPriority
	{
		[Token(Token = "0x4001108")]
		VeryLow = -2,
		[Token(Token = "0x4001109")]
		Low,
		[Token(Token = "0x400110A")]
		Default,
		[Token(Token = "0x400110B")]
		High,
		[Token(Token = "0x400110C")]
		VeryHigh
	}
	[Serializable]
	[Token(Token = "0x200034D")]
	public class OSPProps
	{
		[Token(Token = "0x400110D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E92A4", Offset = "0x6E92A4")]
		public bool enableSpatialization;

		[Token(Token = "0x400110E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E92DC", Offset = "0x6E92DC")]
		public bool useFastOverride;

		[Token(Token = "0x400110F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E9314", Offset = "0x6E9314")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6E9314", Offset = "0x6E9314")]
		public float gain;

		[Token(Token = "0x4001110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E9368", Offset = "0x6E9368")]
		public bool enableInvSquare;

		[Token(Token = "0x4001111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E93A0", Offset = "0x6E93A0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6E93A0", Offset = "0x6E93A0")]
		public float volumetric;

		[Token(Token = "0x4001112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E93F8", Offset = "0x6E93F8")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x6E93F8", Offset = "0x6E93F8")]
		public Vector2 invSquareFalloff;

		[Token(Token = "0x600161C")]
		[Address(RVA = "0x10FB498", Offset = "0x10FB498", VA = "0x10FB498")]
		public OSPProps()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200034E")]
	public class SoundFX
	{
		[Token(Token = "0x4001113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E9458", Offset = "0x6E9458")]
		public string name;

		[Token(Token = "0x4001114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E9490", Offset = "0x6E9490")]
		public SoundFXNext playback;

		[Token(Token = "0x4001115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E94C8", Offset = "0x6E94C8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6E94C8", Offset = "0x6E94C8")]
		public float volume;

		[Token(Token = "0x4001116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E951C", Offset = "0x6E951C")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x6E951C", Offset = "0x6E951C")]
		public Vector2 pitchVariance;

		[Token(Token = "0x4001117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E9578", Offset = "0x6E9578")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x6E9578", Offset = "0x6E9578")]
		public Vector2 falloffDistance;

		[Token(Token = "0x4001118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E95D8", Offset = "0x6E95D8")]
		public AudioRolloffMode falloffCurve;

		[Token(Token = "0x4001119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E9610", Offset = "0x6E9610")]
		public AnimationCurve volumeFalloffCurve;

		[Token(Token = "0x400111A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E9648", Offset = "0x6E9648")]
		public AnimationCurve reverbZoneMix;

		[Token(Token = "0x400111B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E9680", Offset = "0x6E9680")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6E9680", Offset = "0x6E9680")]
		public float spread;

		[Token(Token = "0x400111C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E96D8", Offset = "0x6E96D8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6E96D8", Offset = "0x6E96D8")]
		public float pctChanceToPlay;

		[Token(Token = "0x400111D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E972C", Offset = "0x6E972C")]
		public SoundPriority priority;

		[Token(Token = "0x400111E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E9764", Offset = "0x6E9764")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x6E9764", Offset = "0x6E9764")]
		public Vector2 delay;

		[Token(Token = "0x400111F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E97C0", Offset = "0x6E97C0")]
		public bool looping;

		[Token(Token = "0x4001120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public OSPProps ospProps;

		[Token(Token = "0x4001121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E97F8", Offset = "0x6E97F8")]
		public AudioClip[] soundClips;

		[Token(Token = "0x4001122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool visibilityToggle;

		[NonSerialized]
		[Token(Token = "0x4001123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private SoundGroup soundGroup;

		[Token(Token = "0x4001124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int lastIdx;

		[Token(Token = "0x4001125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int playingIdx;

		[Token(Token = "0x170001EB")]
		public int Length
		{
			[Token(Token = "0x600161E")]
			[Address(RVA = "0x90E4C0", Offset = "0x90E4C0", VA = "0x90E4C0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001EC")]
		public bool IsValid
		{
			[Token(Token = "0x600161F")]
			[Address(RVA = "0x90E4DC", Offset = "0x90E4DC", VA = "0x90E4DC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001ED")]
		public SoundGroup Group
		{
			[Token(Token = "0x6001620")]
			[Address(RVA = "0x90E580", Offset = "0x90E580", VA = "0x90E580")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001621")]
			[Address(RVA = "0x90E588", Offset = "0x90E588", VA = "0x90E588")]
			set
			{
			}
		}

		[Token(Token = "0x170001EE")]
		public float MaxFalloffDistSquared
		{
			[Token(Token = "0x6001622")]
			[Address(RVA = "0x90E590", Offset = "0x90E590", VA = "0x90E590")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001EF")]
		public float GroupVolumeOverride
		{
			[Token(Token = "0x6001623")]
			[Address(RVA = "0x90E59C", Offset = "0x90E59C", VA = "0x90E59C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600161D")]
		[Address(RVA = "0x90DFD0", Offset = "0x90DFD0", VA = "0x90DFD0")]
		public SoundFX()
		{
		}

		[Token(Token = "0x6001624")]
		[Address(RVA = "0x90E5B4", Offset = "0x90E5B4", VA = "0x90E5B4")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x6001625")]
		[Address(RVA = "0x90E684", Offset = "0x90E684", VA = "0x90E684")]
		public AudioMixerGroup GetMixerGroup(AudioMixerGroup defaultMixerGroup)
		{
			return null;
		}

		[Token(Token = "0x6001626")]
		[Address(RVA = "0x90E724", Offset = "0x90E724", VA = "0x90E724")]
		public bool ReachedGroupPlayLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x6001627")]
		[Address(RVA = "0x90E76C", Offset = "0x90E76C", VA = "0x90E76C")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6001628")]
		[Address(RVA = "0x90E868", Offset = "0x90E868", VA = "0x90E868")]
		public float GetPitch()
		{
			return default(float);
		}

		[Token(Token = "0x6001629")]
		[Address(RVA = "0x90E874", Offset = "0x90E874", VA = "0x90E874")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x600162A")]
		[Address(RVA = "0x90E954", Offset = "0x90E954", VA = "0x90E954")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x600162B")]
		[Address(RVA = "0x90EA6C", Offset = "0x90EA6C", VA = "0x90EA6C")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x600162C")]
		[Address(RVA = "0x90EAFC", Offset = "0x90EAFC", VA = "0x90EAFC")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x600162D")]
		[Address(RVA = "0x90EB94", Offset = "0x90EB94", VA = "0x90EB94")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x600162E")]
		[Address(RVA = "0x90EC24", Offset = "0x90EC24", VA = "0x90EC24")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x600162F")]
		[Address(RVA = "0x90ECB4", Offset = "0x90ECB4", VA = "0x90ECB4")]
		public void DetachFromParent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200034F")]
	public class SoundFXRef
	{
		[Token(Token = "0x4001126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string soundFXName;

		[Token(Token = "0x4001127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool initialized;

		[Token(Token = "0x4001128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SoundFX soundFXCached;

		[Token(Token = "0x170001F0")]
		public SoundFX soundFX
		{
			[Token(Token = "0x6001630")]
			[Address(RVA = "0x90ED30", Offset = "0x90ED30", VA = "0x90ED30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F1")]
		public string name
		{
			[Token(Token = "0x6001631")]
			[Address(RVA = "0x90EE2C", Offset = "0x90EE2C", VA = "0x90EE2C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001632")]
			[Address(RVA = "0x90EE34", Offset = "0x90EE34", VA = "0x90EE34")]
			set
			{
			}
		}

		[Token(Token = "0x170001F2")]
		public int Length
		{
			[Token(Token = "0x6001634")]
			[Address(RVA = "0x90EE3C", Offset = "0x90EE3C", VA = "0x90EE3C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001F3")]
		public bool IsValid
		{
			[Token(Token = "0x6001635")]
			[Address(RVA = "0x90EE80", Offset = "0x90EE80", VA = "0x90EE80")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001633")]
		[Address(RVA = "0x90ED60", Offset = "0x90ED60", VA = "0x90ED60")]
		private void Init()
		{
		}

		[Token(Token = "0x6001636")]
		[Address(RVA = "0x90EEB8", Offset = "0x90EEB8", VA = "0x90EEB8")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x6001637")]
		[Address(RVA = "0x90EEF0", Offset = "0x90EEF0", VA = "0x90EEF0")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6001638")]
		[Address(RVA = "0x90EF30", Offset = "0x90EF30", VA = "0x90EF30")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6001639")]
		[Address(RVA = "0x90EF78", Offset = "0x90EF78", VA = "0x90EF78")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volume = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x600163A")]
		[Address(RVA = "0x90EFF8", Offset = "0x90EFF8", VA = "0x90EFF8")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x600163B")]
		[Address(RVA = "0x90F038", Offset = "0x90F038", VA = "0x90F038")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x600163C")]
		[Address(RVA = "0x90F088", Offset = "0x90F088", VA = "0x90F088")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x600163D")]
		[Address(RVA = "0x90F0C0", Offset = "0x90F0C0", VA = "0x90F0C0")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x600163E")]
		[Address(RVA = "0x90F100", Offset = "0x90F100", VA = "0x90F100")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x600163F")]
		[Address(RVA = "0x90F138", Offset = "0x90F138", VA = "0x90F138")]
		public SoundFXRef()
		{
		}
	}
}
namespace UnityEngine.AI
{
	[Token(Token = "0x2000350")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x6E1624", Offset = "0x6E1624")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6E1624", Offset = "0x6E1624")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x6E1624", Offset = "0x6E1624")]
	public class NavMeshLink : MonoBehaviour
	{
		[Token(Token = "0x4001129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int m_AgentTypeID;

		[Token(Token = "0x400112A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private Vector3 m_StartPoint;

		[Token(Token = "0x400112B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Vector3 m_EndPoint;

		[Token(Token = "0x400112C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float m_Width;

		[Token(Token = "0x400112D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private int m_CostModifier;

		[Token(Token = "0x400112E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private bool m_Bidirectional;

		[Token(Token = "0x400112F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		[SerializeField]
		private bool m_AutoUpdatePosition;

		[Token(Token = "0x4001130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private int m_Area;

		[Token(Token = "0x4001131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private NavMeshLinkInstance m_LinkInstance;

		[Token(Token = "0x4001132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 m_LastPosition;

		[Token(Token = "0x4001133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Quaternion m_LastRotation;

		[Token(Token = "0x4001134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<NavMeshLink> s_Tracked;

		[Token(Token = "0x170001F4")]
		public int agentTypeID
		{
			[Token(Token = "0x6001640")]
			[Address(RVA = "0xAB9EB0", Offset = "0xAB9EB0", VA = "0xAB9EB0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001641")]
			[Address(RVA = "0xAB9EB8", Offset = "0xAB9EB8", VA = "0xAB9EB8")]
			set
			{
			}
		}

		[Token(Token = "0x170001F5")]
		public Vector3 startPoint
		{
			[Token(Token = "0x6001642")]
			[Address(RVA = "0xAB9F14", Offset = "0xAB9F14", VA = "0xAB9F14")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001643")]
			[Address(RVA = "0xAB9F20", Offset = "0xAB9F20", VA = "0xAB9F20")]
			set
			{
			}
		}

		[Token(Token = "0x170001F6")]
		public Vector3 endPoint
		{
			[Token(Token = "0x6001644")]
			[Address(RVA = "0xAB9F54", Offset = "0xAB9F54", VA = "0xAB9F54")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001645")]
			[Address(RVA = "0xAB9F60", Offset = "0xAB9F60", VA = "0xAB9F60")]
			set
			{
			}
		}

		[Token(Token = "0x170001F7")]
		public float width
		{
			[Token(Token = "0x6001646")]
			[Address(RVA = "0xAB9F94", Offset = "0xAB9F94", VA = "0xAB9F94")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001647")]
			[Address(RVA = "0xAB9F9C", Offset = "0xAB9F9C", VA = "0xAB9F9C")]
			set
			{
			}
		}

		[Token(Token = "0x170001F8")]
		public int costModifier
		{
			[Token(Token = "0x6001648")]
			[Address(RVA = "0xAB9FCC", Offset = "0xAB9FCC", VA = "0xAB9FCC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001649")]
			[Address(RVA = "0xAB9FD4", Offset = "0xAB9FD4", VA = "0xAB9FD4")]
			set
			{
			}
		}

		[Token(Token = "0x170001F9")]
		public bool bidirectional
		{
			[Token(Token = "0x600164A")]
			[Address(RVA = "0xABA004", Offset = "0xABA004", VA = "0xABA004")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600164B")]
			[Address(RVA = "0xABA00C", Offset = "0xABA00C", VA = "0xABA00C")]
			set
			{
			}
		}

		[Token(Token = "0x170001FA")]
		public bool autoUpdate
		{
			[Token(Token = "0x600164C")]
			[Address(RVA = "0xABA040", Offset = "0xABA040", VA = "0xABA040")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600164D")]
			[Address(RVA = "0xABA048", Offset = "0xABA048", VA = "0xABA048")]
			set
			{
			}
		}

		[Token(Token = "0x170001FB")]
		public int area
		{
			[Token(Token = "0x600164E")]
			[Address(RVA = "0xABA114", Offset = "0xABA114", VA = "0xABA114")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600164F")]
			[Address(RVA = "0xABA11C", Offset = "0xABA11C", VA = "0xABA11C")]
			set
			{
			}
		}

		[Token(Token = "0x6001650")]
		[Address(RVA = "0xABA14C", Offset = "0xABA14C", VA = "0xABA14C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001651")]
		[Address(RVA = "0xABA4D4", Offset = "0xABA4D4", VA = "0xABA4D4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001652")]
		[Address(RVA = "0xAB9EE8", Offset = "0xAB9EE8", VA = "0xAB9EE8")]
		public void UpdateLink()
		{
		}

		[Token(Token = "0x6001653")]
		[Address(RVA = "0xABA39C", Offset = "0xABA39C", VA = "0xABA39C")]
		private static void AddTracking(NavMeshLink link)
		{
		}

		[Token(Token = "0x6001654")]
		[Address(RVA = "0xABA544", Offset = "0xABA544", VA = "0xABA544")]
		private static void RemoveTracking(NavMeshLink link)
		{
		}

		[Token(Token = "0x6001655")]
		[Address(RVA = "0xABA050", Offset = "0xABA050", VA = "0xABA050")]
		private void SetAutoUpdate(bool value)
		{
		}

		[Token(Token = "0x6001656")]
		[Address(RVA = "0xABA1DC", Offset = "0xABA1DC", VA = "0xABA1DC")]
		private void AddLink()
		{
		}

		[Token(Token = "0x6001657")]
		[Address(RVA = "0xABA660", Offset = "0xABA660", VA = "0xABA660")]
		private bool HasTransformChanged()
		{
			return default(bool);
		}

		[Token(Token = "0x6001658")]
		[Address(RVA = "0xABA7C8", Offset = "0xABA7C8", VA = "0xABA7C8")]
		private void OnDidApplyAnimationProperties()
		{
		}

		[Token(Token = "0x6001659")]
		[Address(RVA = "0xABA7F4", Offset = "0xABA7F4", VA = "0xABA7F4")]
		private static void UpdateTrackedInstances()
		{
		}

		[Token(Token = "0x600165A")]
		[Address(RVA = "0xABA92C", Offset = "0xABA92C", VA = "0xABA92C")]
		public NavMeshLink()
		{
		}
	}
	[Token(Token = "0x2000351")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6E16AC", Offset = "0x6E16AC")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x6E16AC", Offset = "0x6E16AC")]
	public class NavMeshModifier : MonoBehaviour
	{
		[Token(Token = "0x4001135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_OverrideArea;

		[Token(Token = "0x4001136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int m_Area;

		[Token(Token = "0x4001137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool m_IgnoreFromBuild;

		[Token(Token = "0x4001138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<int> m_AffectedAgents;

		[Token(Token = "0x4001139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<NavMeshModifier> s_NavMeshModifiers;

		[Token(Token = "0x170001FC")]
		public bool overrideArea
		{
			[Token(Token = "0x600165C")]
			[Address(RVA = "0xABAAC4", Offset = "0xABAAC4", VA = "0xABAAC4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600165D")]
			[Address(RVA = "0xABAACC", Offset = "0xABAACC", VA = "0xABAACC")]
			set
			{
			}
		}

		[Token(Token = "0x170001FD")]
		public int area
		{
			[Token(Token = "0x600165E")]
			[Address(RVA = "0xABAAD8", Offset = "0xABAAD8", VA = "0xABAAD8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600165F")]
			[Address(RVA = "0xABAAE0", Offset = "0xABAAE0", VA = "0xABAAE0")]
			set
			{
			}
		}

		[Token(Token = "0x170001FE")]
		public bool ignoreFromBuild
		{
			[Token(Token = "0x6001660")]
			[Address(RVA = "0xABAAE8", Offset = "0xABAAE8", VA = "0xABAAE8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001661")]
			[Address(RVA = "0xABAAF0", Offset = "0xABAAF0", VA = "0xABAAF0")]
			set
			{
			}
		}

		[Token(Token = "0x170001FF")]
		public static List<NavMeshModifier> activeModifiers
		{
			[Token(Token = "0x6001662")]
			[Address(RVA = "0xABAAFC", Offset = "0xABAAFC", VA = "0xABAAFC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001663")]
		[Address(RVA = "0xABAB64", Offset = "0xABAB64", VA = "0xABAB64")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001664")]
		[Address(RVA = "0xABAC34", Offset = "0xABAC34", VA = "0xABAC34")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001665")]
		[Address(RVA = "0xABACB8", Offset = "0xABACB8", VA = "0xABACB8")]
		public bool AffectsAgentType(int agentTypeID)
		{
			return default(bool);
		}

		[Token(Token = "0x6001666")]
		[Address(RVA = "0xABAD54", Offset = "0xABAD54", VA = "0xABAD54")]
		public NavMeshModifier()
		{
		}
	}
	[Token(Token = "0x2000352")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6E1720", Offset = "0x6E1720")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x6E1720", Offset = "0x6E1720")]
	public class NavMeshModifierVolume : MonoBehaviour
	{
		[Token(Token = "0x400113A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Vector3 m_Size;

		[Token(Token = "0x400113B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Vector3 m_Center;

		[Token(Token = "0x400113C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int m_Area;

		[Token(Token = "0x400113D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private List<int> m_AffectedAgents;

		[Token(Token = "0x400113E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<NavMeshModifierVolume> s_NavMeshModifiers;

		[Token(Token = "0x17000200")]
		public Vector3 size
		{
			[Token(Token = "0x6001668")]
			[Address(RVA = "0xABAE80", Offset = "0xABAE80", VA = "0xABAE80")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001669")]
			[Address(RVA = "0xABAE8C", Offset = "0xABAE8C", VA = "0xABAE8C")]
			set
			{
			}
		}

		[Token(Token = "0x17000201")]
		public Vector3 center
		{
			[Token(Token = "0x600166A")]
			[Address(RVA = "0xABAE98", Offset = "0xABAE98", VA = "0xABAE98")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600166B")]
			[Address(RVA = "0xABAEA4", Offset = "0xABAEA4", VA = "0xABAEA4")]
			set
			{
			}
		}

		[Token(Token = "0x17000202")]
		public int area
		{
			[Token(Token = "0x600166C")]
			[Address(RVA = "0xABAEB0", Offset = "0xABAEB0", VA = "0xABAEB0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600166D")]
			[Address(RVA = "0xABAEB8", Offset = "0xABAEB8", VA = "0xABAEB8")]
			set
			{
			}
		}

		[Token(Token = "0x17000203")]
		public static List<NavMeshModifierVolume> activeModifiers
		{
			[Token(Token = "0x600166E")]
			[Address(RVA = "0xABAEC0", Offset = "0xABAEC0", VA = "0xABAEC0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600166F")]
		[Address(RVA = "0xABAF28", Offset = "0xABAF28", VA = "0xABAF28")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001670")]
		[Address(RVA = "0xABAFF8", Offset = "0xABAFF8", VA = "0xABAFF8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001671")]
		[Address(RVA = "0xABB07C", Offset = "0xABB07C", VA = "0xABB07C")]
		public bool AffectsAgentType(int agentTypeID)
		{
			return default(bool);
		}

		[Token(Token = "0x6001672")]
		[Address(RVA = "0xABB118", Offset = "0xABB118", VA = "0xABB118")]
		public NavMeshModifierVolume()
		{
		}
	}
	[Token(Token = "0x2000353")]
	public enum CollectObjects
	{
		[Token(Token = "0x4001140")]
		All,
		[Token(Token = "0x4001141")]
		Volume,
		[Token(Token = "0x4001142")]
		Children
	}
	[Token(Token = "0x2000354")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x6E1794", Offset = "0x6E1794")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6E1794", Offset = "0x6E1794")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x6E1794", Offset = "0x6E1794")]
	public class NavMeshSurface : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200041C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E1CD0", Offset = "0x6E1CD0")]
		private sealed class <>c
		{
			[Token(Token = "0x4001525")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001526")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<NavMeshModifierVolume> <>9__76_0;

			[Token(Token = "0x4001527")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Predicate<NavMeshModifier> <>9__77_0;

			[Token(Token = "0x4001528")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Predicate<NavMeshBuildSource> <>9__77_1;

			[Token(Token = "0x4001529")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Predicate<NavMeshBuildSource> <>9__77_2;

			[Token(Token = "0x6001912")]
			[Address(RVA = "0xABD9FC", Offset = "0xABD9FC", VA = "0xABD9FC")]
			public <>c()
			{
			}

			[Token(Token = "0x6001913")]
			[Address(RVA = "0xABDA04", Offset = "0xABDA04", VA = "0xABDA04")]
			internal bool <AppendModifierVolumes>b__76_0(NavMeshModifierVolume x)
			{
				return default(bool);
			}

			[Token(Token = "0x6001914")]
			[Address(RVA = "0xABDA30", Offset = "0xABDA30", VA = "0xABDA30")]
			internal bool <CollectSources>b__77_0(NavMeshModifier x)
			{
				return default(bool);
			}

			[Token(Token = "0x6001915")]
			[Address(RVA = "0xABDA5C", Offset = "0xABDA5C", VA = "0xABDA5C")]
			internal bool <CollectSources>b__77_1(NavMeshBuildSource x)
			{
				return default(bool);
			}

			[Token(Token = "0x6001916")]
			[Address(RVA = "0xABDB5C", Offset = "0xABDB5C", VA = "0xABDB5C")]
			internal bool <CollectSources>b__77_2(NavMeshBuildSource x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int m_AgentTypeID;

		[Token(Token = "0x4001144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private CollectObjects m_CollectObjects;

		[Token(Token = "0x4001145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Vector3 m_Size;

		[Token(Token = "0x4001146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private Vector3 m_Center;

		[Token(Token = "0x4001147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private LayerMask m_LayerMask;

		[Token(Token = "0x4001148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private NavMeshCollectGeometry m_UseGeometry;

		[Token(Token = "0x4001149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private int m_DefaultArea;

		[Token(Token = "0x400114A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private bool m_IgnoreNavMeshAgent;

		[Token(Token = "0x400114B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		[SerializeField]
		private bool m_IgnoreNavMeshObstacle;

		[Token(Token = "0x400114C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
		[SerializeField]
		private bool m_OverrideTileSize;

		[Token(Token = "0x400114D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private int m_TileSize;

		[Token(Token = "0x400114E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private bool m_OverrideVoxelSize;

		[Token(Token = "0x400114F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float m_VoxelSize;

		[Token(Token = "0x4001150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private bool m_BuildHeightMesh;

		[Token(Token = "0x4001151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x6E9A10", Offset = "0x6E9A10")]
		[SerializeField]
		private NavMeshData m_NavMeshData;

		[Token(Token = "0x4001152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private NavMeshDataInstance m_NavMeshDataInstance;

		[Token(Token = "0x4001153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 m_LastPosition;

		[Token(Token = "0x4001154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Quaternion m_LastRotation;

		[Token(Token = "0x4001155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<NavMeshSurface> s_NavMeshSurfaces;

		[Token(Token = "0x17000204")]
		public int agentTypeID
		{
			[Token(Token = "0x6001674")]
			[Address(RVA = "0xABB2B0", Offset = "0xABB2B0", VA = "0xABB2B0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001675")]
			[Address(RVA = "0xABB2B8", Offset = "0xABB2B8", VA = "0xABB2B8")]
			set
			{
			}
		}

		[Token(Token = "0x17000205")]
		public CollectObjects collectObjects
		{
			[Token(Token = "0x6001676")]
			[Address(RVA = "0xABB2C0", Offset = "0xABB2C0", VA = "0xABB2C0")]
			get
			{
				return default(CollectObjects);
			}
			[Token(Token = "0x6001677")]
			[Address(RVA = "0xABB2C8", Offset = "0xABB2C8", VA = "0xABB2C8")]
			set
			{
			}
		}

		[Token(Token = "0x17000206")]
		public Vector3 size
		{
			[Token(Token = "0x6001678")]
			[Address(RVA = "0xABB2D0", Offset = "0xABB2D0", VA = "0xABB2D0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001679")]
			[Address(RVA = "0xABB2DC", Offset = "0xABB2DC", VA = "0xABB2DC")]
			set
			{
			}
		}

		[Token(Token = "0x17000207")]
		public Vector3 center
		{
			[Token(Token = "0x600167A")]
			[Address(RVA = "0xABB2E8", Offset = "0xABB2E8", VA = "0xABB2E8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600167B")]
			[Address(RVA = "0xABB2F4", Offset = "0xABB2F4", VA = "0xABB2F4")]
			set
			{
			}
		}

		[Token(Token = "0x17000208")]
		public LayerMask layerMask
		{
			[Token(Token = "0x600167C")]
			[Address(RVA = "0xABB300", Offset = "0xABB300", VA = "0xABB300")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x600167D")]
			[Address(RVA = "0xABB308", Offset = "0xABB308", VA = "0xABB308")]
			set
			{
			}
		}

		[Token(Token = "0x17000209")]
		public NavMeshCollectGeometry useGeometry
		{
			[Token(Token = "0x600167E")]
			[Address(RVA = "0xABB310", Offset = "0xABB310", VA = "0xABB310")]
			get
			{
				return default(NavMeshCollectGeometry);
			}
			[Token(Token = "0x600167F")]
			[Address(RVA = "0xABB318", Offset = "0xABB318", VA = "0xABB318")]
			set
			{
			}
		}

		[Token(Token = "0x1700020A")]
		public int defaultArea
		{
			[Token(Token = "0x6001680")]
			[Address(RVA = "0xABB320", Offset = "0xABB320", VA = "0xABB320")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001681")]
			[Address(RVA = "0xABB328", Offset = "0xABB328", VA = "0xABB328")]
			set
			{
			}
		}

		[Token(Token = "0x1700020B")]
		public bool ignoreNavMeshAgent
		{
			[Token(Token = "0x6001682")]
			[Address(RVA = "0xABB330", Offset = "0xABB330", VA = "0xABB330")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001683")]
			[Address(RVA = "0xABB338", Offset = "0xABB338", VA = "0xABB338")]
			set
			{
			}
		}

		[Token(Token = "0x1700020C")]
		public bool ignoreNavMeshObstacle
		{
			[Token(Token = "0x6001684")]
			[Address(RVA = "0xABB344", Offset = "0xABB344", VA = "0xABB344")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001685")]
			[Address(RVA = "0xABB34C", Offset = "0xABB34C", VA = "0xABB34C")]
			set
			{
			}
		}

		[Token(Token = "0x1700020D")]
		public bool overrideTileSize
		{
			[Token(Token = "0x6001686")]
			[Address(RVA = "0xABB358", Offset = "0xABB358", VA = "0xABB358")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001687")]
			[Address(RVA = "0xABB360", Offset = "0xABB360", VA = "0xABB360")]
			set
			{
			}
		}

		[Token(Token = "0x1700020E")]
		public int tileSize
		{
			[Token(Token = "0x6001688")]
			[Address(RVA = "0xABB36C", Offset = "0xABB36C", VA = "0xABB36C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001689")]
			[Address(RVA = "0xABB374", Offset = "0xABB374", VA = "0xABB374")]
			set
			{
			}
		}

		[Token(Token = "0x1700020F")]
		public bool overrideVoxelSize
		{
			[Token(Token = "0x600168A")]
			[Address(RVA = "0xABB37C", Offset = "0xABB37C", VA = "0xABB37C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600168B")]
			[Address(RVA = "0xABB384", Offset = "0xABB384", VA = "0xABB384")]
			set
			{
			}
		}

		[Token(Token = "0x17000210")]
		public float voxelSize
		{
			[Token(Token = "0x600168C")]
			[Address(RVA = "0xABB390", Offset = "0xABB390", VA = "0xABB390")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600168D")]
			[Address(RVA = "0xABB398", Offset = "0xABB398", VA = "0xABB398")]
			set
			{
			}
		}

		[Token(Token = "0x17000211")]
		public bool buildHeightMesh
		{
			[Token(Token = "0x600168E")]
			[Address(RVA = "0xABB3A0", Offset = "0xABB3A0", VA = "0xABB3A0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600168F")]
			[Address(RVA = "0xABB3A8", Offset = "0xABB3A8", VA = "0xABB3A8")]
			set
			{
			}
		}

		[Token(Token = "0x17000212")]
		public NavMeshData navMeshData
		{
			[Token(Token = "0x6001690")]
			[Address(RVA = "0xABB3B4", Offset = "0xABB3B4", VA = "0xABB3B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001691")]
			[Address(RVA = "0xABB3BC", Offset = "0xABB3BC", VA = "0xABB3BC")]
			set
			{
			}
		}

		[Token(Token = "0x17000213")]
		public static List<NavMeshSurface> activeSurfaces
		{
			[Token(Token = "0x6001692")]
			[Address(RVA = "0xABB3C4", Offset = "0xABB3C4", VA = "0xABB3C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001693")]
		[Address(RVA = "0xABB42C", Offset = "0xABB42C", VA = "0xABB42C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001694")]
		[Address(RVA = "0xABB798", Offset = "0xABB798", VA = "0xABB798")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001695")]
		[Address(RVA = "0xABB624", Offset = "0xABB624", VA = "0xABB624")]
		public void AddData()
		{
		}

		[Token(Token = "0x6001696")]
		[Address(RVA = "0xABB80C", Offset = "0xABB80C", VA = "0xABB80C")]
		public void RemoveData()
		{
		}

		[Token(Token = "0x6001697")]
		[Address(RVA = "0xABB954", Offset = "0xABB954", VA = "0xABB954")]
		public NavMeshBuildSettings GetBuildSettings()
		{
			return default(NavMeshBuildSettings);
		}

		[Token(Token = "0x6001698")]
		[Address(RVA = "0xABBAE0", Offset = "0xABBAE0", VA = "0xABBAE0")]
		public void BuildNavMesh()
		{
		}

		[Token(Token = "0x6001699")]
		[Address(RVA = "0xABCC64", Offset = "0xABCC64", VA = "0xABCC64")]
		public AsyncOperation UpdateNavMesh(NavMeshData data)
		{
			return null;
		}

		[Token(Token = "0x600169A")]
		[Address(RVA = "0xABB498", Offset = "0xABB498", VA = "0xABB498")]
		private static void Register(NavMeshSurface surface)
		{
		}

		[Token(Token = "0x600169B")]
		[Address(RVA = "0xABB838", Offset = "0xABB838", VA = "0xABB838")]
		private static void Unregister(NavMeshSurface surface)
		{
		}

		[Token(Token = "0x600169C")]
		[Address(RVA = "0xABCDAC", Offset = "0xABCDAC", VA = "0xABCDAC")]
		private static void UpdateActive()
		{
		}

		[Token(Token = "0x600169D")]
		[Address(RVA = "0xABCECC", Offset = "0xABCECC", VA = "0xABCECC")]
		private void AppendModifierVolumes(ref List<NavMeshBuildSource> sources)
		{
		}

		[Token(Token = "0x600169E")]
		[Address(RVA = "0xABBD4C", Offset = "0xABBD4C", VA = "0xABBD4C")]
		private List<NavMeshBuildSource> CollectSources()
		{
			return null;
		}

		[Token(Token = "0x600169F")]
		[Address(RVA = "0xABC490", Offset = "0xABC490", VA = "0xABC490")]
		private static Vector3 Abs(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60016A0")]
		[Address(RVA = "0xABD444", Offset = "0xABD444", VA = "0xABD444")]
		private static Bounds GetWorldBounds(Matrix4x4 mat, Bounds bounds)
		{
			return default(Bounds);
		}

		[Token(Token = "0x60016A1")]
		[Address(RVA = "0xABC538", Offset = "0xABC538", VA = "0xABC538")]
		private Bounds CalculateWorldBounds(List<NavMeshBuildSource> sources)
		{
			return default(Bounds);
		}

		[Token(Token = "0x60016A2")]
		[Address(RVA = "0xABD688", Offset = "0xABD688", VA = "0xABD688")]
		private bool HasTransformChanged()
		{
			return default(bool);
		}

		[Token(Token = "0x60016A3")]
		[Address(RVA = "0xABCE88", Offset = "0xABCE88", VA = "0xABCE88")]
		private void UpdateDataIfTransformChanged()
		{
		}

		[Token(Token = "0x60016A4")]
		[Address(RVA = "0xABD7F0", Offset = "0xABD7F0", VA = "0xABD7F0")]
		public NavMeshSurface()
		{
		}
	}
}
namespace Lean
{
	[Token(Token = "0x2000355")]
	public static class LeanClassPool<T> where T : class
	{
		[Token(Token = "0x4001156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<T> cache;

		[Token(Token = "0x60016A6")]
		public static T Spawn()
		{
			return null;
		}

		[Token(Token = "0x60016A7")]
		public static T Spawn(Action<T> onSpawn)
		{
			return null;
		}

		[Token(Token = "0x60016A8")]
		public static T Spawn(Predicate<T> match)
		{
			return null;
		}

		[Token(Token = "0x60016A9")]
		public static T Spawn(Predicate<T> match, Action<T> onSpawn)
		{
			return null;
		}

		[Token(Token = "0x60016AA")]
		public static void Despawn(T instance)
		{
		}

		[Token(Token = "0x60016AB")]
		public static void Despawn(T instance, Action<T> onDespawn)
		{
		}
	}
}
namespace Lean.Pool
{
	[Token(Token = "0x2000356")]
	public class LeanGameObjectPool : UnityEngine.MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200041D")]
		public class Clone
		{
			[Token(Token = "0x400152A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject GameObject;

			[Token(Token = "0x400152B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform Transform;

			[Token(Token = "0x400152C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LeanPoolable Poolable;

			[Token(Token = "0x6001917")]
			[Address(RVA = "0x965D18", Offset = "0x965D18", VA = "0x965D18")]
			public Clone()
			{
			}
		}

		[Token(Token = "0x200041E")]
		public enum NotificationType
		{
			[Token(Token = "0x400152E")]
			None,
			[Token(Token = "0x400152F")]
			SendMessage,
			[Token(Token = "0x4001530")]
			BroadcastMessage,
			[Token(Token = "0x4001531")]
			PoolableEvent
		}

		[Token(Token = "0x4001157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static List<LeanGameObjectPool> Instances;

		[Token(Token = "0x4001158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E9A5C", Offset = "0x6E9A5C")]
		public GameObject Prefab;

		[Token(Token = "0x4001159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E9A94", Offset = "0x6E9A94")]
		public NotificationType Notification;

		[Token(Token = "0x400115A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E9ACC", Offset = "0x6E9ACC")]
		public int Preload;

		[Token(Token = "0x400115B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E9B04", Offset = "0x6E9B04")]
		public int Capacity;

		[Token(Token = "0x400115C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E9B3C", Offset = "0x6E9B3C")]
		public bool Recycle;

		[Token(Token = "0x400115D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E9B74", Offset = "0x6E9B74")]
		public bool Persist;

		[Token(Token = "0x400115E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E9BAC", Offset = "0x6E9BAC")]
		public bool Stamp;

		[Token(Token = "0x400115F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E9BE4", Offset = "0x6E9BE4")]
		public bool Warnings;

		[Token(Token = "0x4001160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private List<Clone> spawnedClones;

		[Token(Token = "0x4001161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private List<Clone> despawnedClones;

		[Token(Token = "0x17000214")]
		public int Spawned
		{
			[Token(Token = "0x60016AF")]
			[Address(RVA = "0x964A20", Offset = "0x964A20", VA = "0x964A20")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000215")]
		public int Despawned
		{
			[Token(Token = "0x60016B0")]
			[Address(RVA = "0x964A70", Offset = "0x964A70", VA = "0x964A70")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000216")]
		public int Total
		{
			[Token(Token = "0x60016B1")]
			[Address(RVA = "0x964AC0", Offset = "0x964AC0", VA = "0x964AC0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60016AD")]
		[Address(RVA = "0x964768", Offset = "0x964768", VA = "0x964768")]
		public static bool TryFindPoolByPrefab(GameObject prefab, ref LeanGameObjectPool foundPool)
		{
			return default(bool);
		}

		[Token(Token = "0x60016AE")]
		[Address(RVA = "0x96489C", Offset = "0x96489C", VA = "0x96489C")]
		public static bool TryFindPoolByClone(GameObject gameObject, ref LeanGameObjectPool foundPool)
		{
			return default(bool);
		}

		[Token(Token = "0x60016B2")]
		[Address(RVA = "0x964AF0", Offset = "0x964AF0", VA = "0x964AF0")]
		public GameObject Spawn(Vector3 position, Quaternion rotation, [Optional] Transform parent)
		{
			return null;
		}

		[Token(Token = "0x60016B3")]
		[Address(RVA = "0x965390", Offset = "0x965390", VA = "0x965390")]
		public GameObject GetSpawned(int index)
		{
			return null;
		}

		[Token(Token = "0x60016B4")]
		[Address(RVA = "0x965420", Offset = "0x965420", VA = "0x965420")]
		public GameObject GetDespawned(int index)
		{
			return null;
		}

		[Token(Token = "0x60016B5")]
		[Address(RVA = "0x9654B0", Offset = "0x9654B0", VA = "0x9654B0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x6EDC10", Offset = "0x6EDC10")]
		public void DespawnAll()
		{
		}

		[Token(Token = "0x60016B6")]
		[Address(RVA = "0x9656B4", Offset = "0x9656B4", VA = "0x9656B4")]
		public void Despawn(GameObject cloneGameObject)
		{
		}

		[Token(Token = "0x60016B7")]
		[Address(RVA = "0x965798", Offset = "0x965798", VA = "0x965798")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x6EDC48", Offset = "0x6EDC48")]
		public void PreloadOneMore()
		{
		}

		[Token(Token = "0x60016B8")]
		[Address(RVA = "0x9659D0", Offset = "0x9659D0", VA = "0x9659D0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x6EDC80", Offset = "0x6EDC80")]
		public void PreloadAll()
		{
		}

		[Token(Token = "0x60016B9")]
		[Address(RVA = "0x965AD8", Offset = "0x965AD8", VA = "0x965AD8", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60016BA")]
		[Address(RVA = "0x965B5C", Offset = "0x965B5C", VA = "0x965B5C", Slot = "5")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60016BB")]
		[Address(RVA = "0x965BE0", Offset = "0x965BE0", VA = "0x965BE0", Slot = "6")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60016BC")]
		[Address(RVA = "0x96555C", Offset = "0x96555C", VA = "0x96555C")]
		private void DespawnNow(GameObject cloneGameObject)
		{
		}

		[Token(Token = "0x60016BD")]
		[Address(RVA = "0x965C64", Offset = "0x965C64", VA = "0x965C64")]
		private void DespawnNow(Clone clone)
		{
		}

		[Token(Token = "0x60016BE")]
		[Address(RVA = "0x964F24", Offset = "0x964F24", VA = "0x964F24")]
		private Clone CreateClone(Vector3 position, Quaternion rotation, Transform parent)
		{
			return null;
		}

		[Token(Token = "0x60016BF")]
		[Address(RVA = "0x964E1C", Offset = "0x964E1C", VA = "0x964E1C")]
		private void SpawnClone(Clone clone, Vector3 position, Quaternion rotation, Transform parent)
		{
		}

		[Token(Token = "0x60016C0")]
		[Address(RVA = "0x965D20", Offset = "0x965D20", VA = "0x965D20")]
		private static LeanPoolable GetOrCachePoolable(Clone clone)
		{
			return null;
		}

		[Token(Token = "0x60016C1")]
		[Address(RVA = "0x9650F0", Offset = "0x9650F0", VA = "0x9650F0")]
		private void InvokeOnSpawn(Clone clone)
		{
		}

		[Token(Token = "0x60016C2")]
		[Address(RVA = "0x965240", Offset = "0x965240", VA = "0x965240")]
		private void InvokeOnDespawn(Clone clone)
		{
		}

		[Token(Token = "0x60016C3")]
		[Address(RVA = "0x965DC4", Offset = "0x965DC4", VA = "0x965DC4")]
		public LeanGameObjectPool()
		{
		}
	}
	[Token(Token = "0x2000357")]
	public static class LeanPool
	{
		[Token(Token = "0x4001162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Dictionary<GameObject, LeanGameObjectPool> Links;

		[Token(Token = "0x60016C5")]
		public static T Spawn<T>(T prefab) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60016C6")]
		public static T Spawn<T>(T prefab, Vector3 position, Quaternion rotation) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60016C7")]
		public static T Spawn<T>(T prefab, Vector3 position, Quaternion rotation, Transform parent) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60016C8")]
		[Address(RVA = "0x965ED8", Offset = "0x965ED8", VA = "0x965ED8")]
		public static GameObject Spawn(GameObject prefab)
		{
			return null;
		}

		[Token(Token = "0x60016C9")]
		[Address(RVA = "0x96635C", Offset = "0x96635C", VA = "0x96635C")]
		public static GameObject Spawn(GameObject prefab, Vector3 position, Quaternion rotation)
		{
			return null;
		}

		[Token(Token = "0x60016CA")]
		[Address(RVA = "0x965FE8", Offset = "0x965FE8", VA = "0x965FE8")]
		public static GameObject Spawn(GameObject prefab, Vector3 position, Quaternion rotation, Transform parent)
		{
			return null;
		}

		[Token(Token = "0x60016CB")]
		[Address(RVA = "0x96641C", Offset = "0x96641C", VA = "0x96641C")]
		public static void DespawnAll()
		{
		}

		[Token(Token = "0x60016CC")]
		[Address(RVA = "0x966540", Offset = "0x966540", VA = "0x966540")]
		public static void Despawn(Component clone)
		{
		}

		[Token(Token = "0x60016CD")]
		[Address(RVA = "0x966600", Offset = "0x966600", VA = "0x966600")]
		public static void Despawn(GameObject clone)
		{
		}
	}
	[Token(Token = "0x2000358")]
	public class LeanPoolable : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent OnSpawn;

		[Token(Token = "0x4001164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent OnDespawn;

		[Token(Token = "0x60016CF")]
		[Address(RVA = "0x966864", Offset = "0x966864", VA = "0x966864")]
		public LeanPoolable()
		{
		}
	}
}
