using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.Diagnostics;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Linq.Expressions;
using System.Net.Sockets;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.Text;
using System.Threading;
using AnimationInstancing;
using Cinemachine;
using Fabric;
using FlowCanvas;
using FlowCanvas.Nodes;
using Il2CppDummyDll;
using NodeCanvas.Framework;
using NodeCanvas.Framework.Internal;
using Oculus.Platform;
using Oculus.Platform.Models;
using Oculus.Spatializer.Propagation;
using ParadoxNotion;
using ParadoxNotion.Design;
using ParadoxNotion.Serialization;
using ParadoxNotion.Serialization.FullSerializer;
using ParadoxNotion.Serialization.FullSerializer.Internal;
using ParadoxNotion.Services;
using Pvr_UnitySDKAPI;
using TMPro;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Networking;
using UnityEngine.Rendering;
using UnityEngine.Rendering.PostProcessing;
using UnityEngine.UI;
using UnityEngine.Video;
using UnityEngine.XR.ARFoundation;
using Valve.VR;
using Viveport;
using Viveport.Internal;
using ftg;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x96D900", Offset = "0x96D900")]
internal sealed class <>f__AnonymousType0<<pose>j__TPar, <index>j__TPar>
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x97C0D0", Offset = "0x97C0D0")]
	private readonly <pose>j__TPar <pose>i__Field;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x97C0E4", Offset = "0x97C0E4")]
	private readonly <index>j__TPar <index>i__Field;

	[Token(Token = "0x17000001")]
	public <pose>j__TPar pose
	{
		[Token(Token = "0x6000001")]
		get
		{
			return (<pose>j__TPar)null;
		}
	}

	[Token(Token = "0x17000002")]
	public <index>j__TPar index
	{
		[Token(Token = "0x6000002")]
		get
		{
			return (<index>j__TPar)null;
		}
	}

	[Token(Token = "0x6000003")]
	[DebuggerHidden]
	public <>f__AnonymousType0(<pose>j__TPar pose, <index>j__TPar index)
	{
	}

	[Token(Token = "0x6000004")]
	[DebuggerHidden]
	public override bool Equals(object value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000005")]
	[DebuggerHidden]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x6000006")]
	[DebuggerHidden]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x2000003")]
[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x96D910", Offset = "0x96D910")]
internal sealed class <>f__AnonymousType1<<pose>j__TPar, <index>j__TPar, <deviceClass>j__TPar>
{
	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x97C0F8", Offset = "0x97C0F8")]
	private readonly <pose>j__TPar <pose>i__Field;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x97C10C", Offset = "0x97C10C")]
	private readonly <index>j__TPar <index>i__Field;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x97C120", Offset = "0x97C120")]
	private readonly <deviceClass>j__TPar <deviceClass>i__Field;

	[Token(Token = "0x17000003")]
	public <pose>j__TPar pose
	{
		[Token(Token = "0x6000007")]
		get
		{
			return (<pose>j__TPar)null;
		}
	}

	[Token(Token = "0x17000004")]
	public <index>j__TPar index
	{
		[Token(Token = "0x6000008")]
		get
		{
			return (<index>j__TPar)null;
		}
	}

	[Token(Token = "0x17000005")]
	public <deviceClass>j__TPar deviceClass
	{
		[Token(Token = "0x6000009")]
		get
		{
			return (<deviceClass>j__TPar)null;
		}
	}

	[Token(Token = "0x600000A")]
	[DebuggerHidden]
	public <>f__AnonymousType1(<pose>j__TPar pose, <index>j__TPar index, <deviceClass>j__TPar deviceClass)
	{
	}

	[Token(Token = "0x600000B")]
	[DebuggerHidden]
	public override bool Equals(object value)
	{
		return default(bool);
	}

	[Token(Token = "0x600000C")]
	[DebuggerHidden]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x600000D")]
	[DebuggerHidden]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x2000004")]
[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x96D920", Offset = "0x96D920")]
internal sealed class <>f__AnonymousType2<<pose>j__TPar, <index>j__TPar, <deviceClass>j__TPar, <deviceRole>j__TPar, <modelNumber>j__TPar, <renderModel>j__TPar>
{
	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x97C134", Offset = "0x97C134")]
	private readonly <pose>j__TPar <pose>i__Field;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x97C148", Offset = "0x97C148")]
	private readonly <index>j__TPar <index>i__Field;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x97C15C", Offset = "0x97C15C")]
	private readonly <deviceClass>j__TPar <deviceClass>i__Field;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x97C170", Offset = "0x97C170")]
	private readonly <deviceRole>j__TPar <deviceRole>i__Field;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x97C184", Offset = "0x97C184")]
	private readonly <modelNumber>j__TPar <modelNumber>i__Field;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x97C198", Offset = "0x97C198")]
	private readonly <renderModel>j__TPar <renderModel>i__Field;

	[Token(Token = "0x17000006")]
	public <pose>j__TPar pose
	{
		[Token(Token = "0x600000E")]
		get
		{
			return (<pose>j__TPar)null;
		}
	}

	[Token(Token = "0x17000007")]
	public <index>j__TPar index
	{
		[Token(Token = "0x600000F")]
		get
		{
			return (<index>j__TPar)null;
		}
	}

	[Token(Token = "0x17000008")]
	public <deviceClass>j__TPar deviceClass
	{
		[Token(Token = "0x6000010")]
		get
		{
			return (<deviceClass>j__TPar)null;
		}
	}

	[Token(Token = "0x17000009")]
	public <deviceRole>j__TPar deviceRole
	{
		[Token(Token = "0x6000011")]
		get
		{
			return (<deviceRole>j__TPar)null;
		}
	}

	[Token(Token = "0x1700000A")]
	public <modelNumber>j__TPar modelNumber
	{
		[Token(Token = "0x6000012")]
		get
		{
			return (<modelNumber>j__TPar)null;
		}
	}

	[Token(Token = "0x1700000B")]
	public <renderModel>j__TPar renderModel
	{
		[Token(Token = "0x6000013")]
		get
		{
			return (<renderModel>j__TPar)null;
		}
	}

	[Token(Token = "0x6000014")]
	[DebuggerHidden]
	public <>f__AnonymousType2(<pose>j__TPar pose, <index>j__TPar index, <deviceClass>j__TPar deviceClass, <deviceRole>j__TPar deviceRole, <modelNumber>j__TPar modelNumber, <renderModel>j__TPar renderModel)
	{
	}

	[Token(Token = "0x6000015")]
	[DebuggerHidden]
	public override bool Equals(object value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000016")]
	[DebuggerHidden]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x6000017")]
	[DebuggerHidden]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x2000005")]
public class AudioCheckIfObjUnderWater : MonoBehaviour
{
	[Token(Token = "0x6000018")]
	[Address(RVA = "0xC0CD9C", Offset = "0xC0CD9C", VA = "0xC0CD9C")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0xC0CDA0", Offset = "0xC0CDA0", VA = "0xC0CDA0")]
	public AudioCheckIfObjUnderWater()
	{
	}
}
[Token(Token = "0x2000006")]
public class AudioChildObjectMarker : MonoBehaviour
{
	[Token(Token = "0x600001A")]
	[Address(RVA = "0xC0CDA8", Offset = "0xC0CDA8", VA = "0xC0CDA8")]
	public AudioChildObjectMarker()
	{
	}
}
[Token(Token = "0x2000007")]
public class AudioComponentHolder : MonoBehaviour
{
	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97C1AC", Offset = "0x97C1AC")]
	public GroupComponent m_underWaterSFXGroup;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GroupComponent m_aboveWaterSFXGroup;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97C1E4", Offset = "0x97C1E4")]
	public UnityEngine.Audio.AudioMixer m_masterMixer;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioMixerSnapshot m_waterSnapshot;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioMixerSnapshot m_fadeOutSnapshot;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioMixerSnapshot m_defaultSnapshot;

	[Token(Token = "0x600001B")]
	[Address(RVA = "0xC0CDB0", Offset = "0xC0CDB0", VA = "0xC0CDB0")]
	public AudioComponentHolder()
	{
	}
}
[Token(Token = "0x2000008")]
public class AudioFabricTrigger : MonoBehaviour
{
	[Token(Token = "0x600001C")]
	[Address(RVA = "0xC0CDB8", Offset = "0xC0CDB8", VA = "0xC0CDB8")]
	public AudioFabricTrigger()
	{
	}
}
[Token(Token = "0x2000009")]
public class AudioTriggerUnderWater : MonoBehaviour
{
	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_affectedSoundEmitter;

	[Token(Token = "0x600001D")]
	[Address(RVA = "0xC0CDC0", Offset = "0xC0CDC0", VA = "0xC0CDC0")]
	private void Start()
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0xC0CE84", Offset = "0xC0CE84", VA = "0xC0CE84")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0xC0CF88", Offset = "0xC0CF88", VA = "0xC0CF88")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0xC0D08C", Offset = "0xC0D08C", VA = "0xC0D08C")]
	public AudioTriggerUnderWater()
	{
	}
}
[Token(Token = "0x200000A")]
public class DebugVariableViewerVR : MonoBehaviour
{
	[Token(Token = "0x200061B")]
	public abstract class DebugVariableBase
	{
		[Token(Token = "0x4001B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string varName;

		[Token(Token = "0x4001B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshProUGUI text;

		[Token(Token = "0x60021A3")]
		public abstract void UpdateText();

		[Token(Token = "0x60021A4")]
		[Address(RVA = "0xC1733C", Offset = "0xC1733C", VA = "0xC1733C")]
		protected DebugVariableBase()
		{
		}
	}

	[Token(Token = "0x200061C")]
	public class DebugVariableBool : DebugVariableBase
	{
		[Token(Token = "0x2001001")]
		public delegate bool GetterDelegate();

		[Token(Token = "0x4001BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GetterDelegate getter;

		[Token(Token = "0x4001BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool lastVal;

		[Token(Token = "0x60021A5")]
		[Address(RVA = "0xC17344", Offset = "0xC17344", VA = "0xC17344", Slot = "4")]
		public override void UpdateText()
		{
		}

		[Token(Token = "0x60021A6")]
		[Address(RVA = "0xC16AFC", Offset = "0xC16AFC", VA = "0xC16AFC")]
		public DebugVariableBool()
		{
		}
	}

	[Token(Token = "0x200061D")]
	public class DebugVariableInt : DebugVariableBase
	{
		[Token(Token = "0x2001002")]
		public delegate int GetterDelegate();

		[Token(Token = "0x4001BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GetterDelegate getter;

		[Token(Token = "0x4001BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int lastVal;

		[Token(Token = "0x60021A7")]
		[Address(RVA = "0xC17E2C", Offset = "0xC17E2C", VA = "0xC17E2C", Slot = "4")]
		public override void UpdateText()
		{
		}

		[Token(Token = "0x60021A8")]
		[Address(RVA = "0xC16FD4", Offset = "0xC16FD4", VA = "0xC16FD4")]
		public DebugVariableInt()
		{
		}
	}

	[Token(Token = "0x200061E")]
	public class DebugVariableFloat : DebugVariableBase
	{
		[Token(Token = "0x2001003")]
		public delegate float GetterDelegate();

		[Token(Token = "0x4001BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GetterDelegate getter;

		[Token(Token = "0x4001BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float lastVal;

		[Token(Token = "0x60021A9")]
		[Address(RVA = "0xC178B0", Offset = "0xC178B0", VA = "0xC178B0", Slot = "4")]
		public override void UpdateText()
		{
		}

		[Token(Token = "0x60021AA")]
		[Address(RVA = "0xC17064", Offset = "0xC17064", VA = "0xC17064")]
		public DebugVariableFloat()
		{
		}
	}

	[Token(Token = "0x200061F")]
	public class DebugVariableString : DebugVariableBase
	{
		[Token(Token = "0x2001004")]
		public delegate string GetterDelegate();

		[Token(Token = "0x4001BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GetterDelegate getter;

		[Token(Token = "0x4001BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string lastVal;

		[Token(Token = "0x60021AB")]
		[Address(RVA = "0xC18384", Offset = "0xC18384", VA = "0xC18384", Slot = "4")]
		public override void UpdateText()
		{
		}

		[Token(Token = "0x60021AC")]
		[Address(RVA = "0xC170F4", Offset = "0xC170F4", VA = "0xC170F4")]
		public DebugVariableString()
		{
		}
	}

	[Token(Token = "0x2000620")]
	public class DebugVariableVector2 : DebugVariableBase
	{
		[Token(Token = "0x2001005")]
		public delegate Vector2 GetterDelegate();

		[Token(Token = "0x4001BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GetterDelegate getter;

		[Token(Token = "0x4001BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector2 lastVal;

		[Token(Token = "0x60021AD")]
		[Address(RVA = "0xC188A0", Offset = "0xC188A0", VA = "0xC188A0", Slot = "4")]
		public override void UpdateText()
		{
		}

		[Token(Token = "0x60021AE")]
		[Address(RVA = "0xC17184", Offset = "0xC17184", VA = "0xC17184")]
		public DebugVariableVector2()
		{
		}
	}

	[Token(Token = "0x2000621")]
	public class DebugVariableVector3 : DebugVariableBase
	{
		[Token(Token = "0x2001006")]
		public delegate Vector3 GetterDelegate();

		[Token(Token = "0x4001BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GetterDelegate getter;

		[Token(Token = "0x4001BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 lastVal;

		[Token(Token = "0x60021AF")]
		[Address(RVA = "0xC18E3C", Offset = "0xC18E3C", VA = "0xC18E3C", Slot = "4")]
		public override void UpdateText()
		{
		}

		[Token(Token = "0x60021B0")]
		[Address(RVA = "0xC17214", Offset = "0xC17214", VA = "0xC17214")]
		public DebugVariableVector3()
		{
		}
	}

	[Token(Token = "0x2000622")]
	public class DebugVariableVector4 : DebugVariableBase
	{
		[Token(Token = "0x2001007")]
		public delegate Vector4 GetterDelegate();

		[Token(Token = "0x4001BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GetterDelegate getter;

		[Token(Token = "0x4001BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector4 lastVal;

		[Token(Token = "0x60021B1")]
		[Address(RVA = "0xC1942C", Offset = "0xC1942C", VA = "0xC1942C", Slot = "4")]
		public override void UpdateText()
		{
		}

		[Token(Token = "0x60021B2")]
		[Address(RVA = "0xC172A0", Offset = "0xC172A0", VA = "0xC172A0")]
		public DebugVariableVector4()
		{
		}
	}

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static DebugVariableViewerVR s_instance;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<DebugVariableBase> m_trackedVariables;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform m_rect;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Canvas m_canvas;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float m_startY;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float m_offsetPerVariable;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float m_fontSize;

	[Token(Token = "0x1700000C")]
	public static DebugVariableViewerVR instance
	{
		[Token(Token = "0x6000022")]
		[Address(RVA = "0xC16270", Offset = "0xC16270", VA = "0xC16270")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0xC160A4", Offset = "0xC160A4", VA = "0xC160A4")]
	private static void createSingleton()
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0xC163C8", Offset = "0xC163C8", VA = "0xC163C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0xC16430", Offset = "0xC16430", VA = "0xC16430")]
	private void Update()
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0xC165C8", Offset = "0xC165C8", VA = "0xC165C8")]
	private bool isValid()
	{
		return default(bool);
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0xC16A74", Offset = "0xC16A74", VA = "0xC16A74")]
	public void AddVariable(DebugVariableBool.GetterDelegate getter, string varName)
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0xC16F4C", Offset = "0xC16F4C", VA = "0xC16F4C")]
	public void AddVariable(DebugVariableInt.GetterDelegate getter, string varName)
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0xC16FDC", Offset = "0xC16FDC", VA = "0xC16FDC")]
	public void AddVariable(DebugVariableFloat.GetterDelegate getter, string varName)
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0xC1706C", Offset = "0xC1706C", VA = "0xC1706C")]
	public void AddVariable(DebugVariableString.GetterDelegate getter, string varName)
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0xC170FC", Offset = "0xC170FC", VA = "0xC170FC")]
	public void AddVariable(DebugVariableVector2.GetterDelegate getter, string varName)
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0xC1718C", Offset = "0xC1718C", VA = "0xC1718C")]
	public void AddVariable(DebugVariableVector3.GetterDelegate getter, string varName)
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0xC1721C", Offset = "0xC1721C", VA = "0xC1721C")]
	public void AddVariable(DebugVariableVector4.GetterDelegate getter, string varName)
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0xC16B04", Offset = "0xC16B04", VA = "0xC16B04")]
	private void addVariableInternal(DebugVariableBase dv, string varName)
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0xC17318", Offset = "0xC17318", VA = "0xC17318")]
	public DebugVariableViewerVR()
	{
	}
}
[Token(Token = "0x200000B")]
public class ConfigureLivNC : CallableActionNode<GameObject>
{
	[Token(Token = "0x6000030")]
	[Address(RVA = "0xC11128", Offset = "0xC11128", VA = "0xC11128", Slot = "12")]
	public override void Invoke(GameObject livObject)
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0xC11210", Offset = "0xC11210", VA = "0xC11210")]
	public ConfigureLivNC()
	{
	}
}
[Token(Token = "0x200000C")]
public class GetEyesGameObjectNC : MonoBehaviour
{
	[Token(Token = "0x6000032")]
	[Address(RVA = "0xCA7BCC", Offset = "0xCA7BCC", VA = "0xCA7BCC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0xCA7BD0", Offset = "0xCA7BD0", VA = "0xCA7BD0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0xCA7BD4", Offset = "0xCA7BD4", VA = "0xCA7BD4")]
	public GetEyesGameObjectNC()
	{
	}
}
[Token(Token = "0x200000D")]
public class NotInBuild : MonoBehaviour
{
	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool destroyGameObject;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97C21C", Offset = "0x97C21C")]
	public bool isBootstrapPlayer;

	[Token(Token = "0x6000035")]
	[Address(RVA = "0x1705BA0", Offset = "0x1705BA0", VA = "0x1705BA0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0x1705C58", Offset = "0x1705C58", VA = "0x1705C58")]
	public NotInBuild()
	{
	}
}
[Token(Token = "0x200000E")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x96D930", Offset = "0x96D930")]
public class AnimationCurveAsset : ScriptableObject
{
	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve curve;

	[Token(Token = "0x6000037")]
	[Address(RVA = "0xC014E0", Offset = "0xC014E0", VA = "0xC014E0")]
	public static implicit operator AnimationCurve(AnimationCurveAsset me)
	{
		return null;
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0xC01508", Offset = "0xC01508", VA = "0xC01508")]
	public static implicit operator AnimationCurveAsset(AnimationCurve curve)
	{
		return null;
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0xC0156C", Offset = "0xC0156C", VA = "0xC0156C")]
	public AnimationCurveAsset()
	{
	}
}
[Token(Token = "0x200000F")]
public class DebugPanel : MonoBehaviour
{
	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI text;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static DebugPanel s_instance;

	[Token(Token = "0x600003A")]
	[Address(RVA = "0xC11B5C", Offset = "0xC11B5C", VA = "0xC11B5C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0xC11BC8", Offset = "0xC11BC8", VA = "0xC11BC8")]
	public static void SetText(string text)
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0xC11D30", Offset = "0xC11D30", VA = "0xC11D30")]
	public DebugPanel()
	{
	}
}
[Token(Token = "0x2000010")]
public class HmdHelper
{
	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool dirty;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static uint capabilites;

	[Token(Token = "0x4000021")]
	public const uint OCULUS_HMD = 1u;

	[Token(Token = "0x4000022")]
	public const uint HTCVIVE_HMD = 2u;

	[Token(Token = "0x4000023")]
	public const uint PSVR_HMD = 4u;

	[Token(Token = "0x4000024")]
	public const uint VIVE_FP_HMD = 8u;

	[Token(Token = "0x4000025")]
	public const uint PICO_HMD = 16u;

	[Token(Token = "0x4000026")]
	public const uint DUAL_WAND = 1024u;

	[Token(Token = "0x4000027")]
	public const uint SINGLE_WAND = 2048u;

	[Token(Token = "0x4000028")]
	public const uint STORE_OCULUS = 1048576u;

	[Token(Token = "0x4000029")]
	public const uint STORE_STEAM = 2097152u;

	[Token(Token = "0x400002A")]
	public const uint STORE_VIVEPORT = 4194304u;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool s_isSitting;

	[Token(Token = "0x600003E")]
	[Address(RVA = "0xCA8DE4", Offset = "0xCA8DE4", VA = "0xCA8DE4")]
	public static bool isOculus()
	{
		return default(bool);
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0xCA90D0", Offset = "0xCA90D0", VA = "0xCA90D0")]
	public static bool isHtcVive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0xCA9140", Offset = "0xCA9140", VA = "0xCA9140")]
	public static bool isPsVr()
	{
		return default(bool);
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0xCA91B0", Offset = "0xCA91B0", VA = "0xCA91B0")]
	public static bool isViveFP()
	{
		return default(bool);
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0xCA9220", Offset = "0xCA9220", VA = "0xCA9220")]
	public static bool isPico()
	{
		return default(bool);
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0xCA9290", Offset = "0xCA9290", VA = "0xCA9290")]
	public static bool hasHmd()
	{
		return default(bool);
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0xCA9304", Offset = "0xCA9304", VA = "0xCA9304")]
	public static void setIsSitting(bool val)
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0xCA9374", Offset = "0xCA9374", VA = "0xCA9374")]
	public static bool isSitting()
	{
		return default(bool);
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0xCA93DC", Offset = "0xCA93DC", VA = "0xCA93DC")]
	public static bool isStoreOculus()
	{
		return default(bool);
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0xCA944C", Offset = "0xCA944C", VA = "0xCA944C")]
	public static bool isStoreSteam()
	{
		return default(bool);
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0xCA94BC", Offset = "0xCA94BC", VA = "0xCA94BC")]
	public static bool isStoreViveport()
	{
		return default(bool);
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0xCA8E54", Offset = "0xCA8E54", VA = "0xCA8E54")]
	private static void resolveConnectedHmdCapabilites()
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0xCA952C", Offset = "0xCA952C", VA = "0xCA952C")]
	public HmdHelper()
	{
	}
}
[Token(Token = "0x2000011")]
public static class LocalStorageUtils
{
	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string m_userDataPath;

	[Token(Token = "0x400002D")]
	private const string initVector = "aLYc7Fk!.F09f!cn";

	[Token(Token = "0x400002E")]
	private const int keysize = 256;

	[Token(Token = "0x400002F")]
	private const string passPhrase = "aueisnv7ayvnhfvna7weryvnap9y3ap";

	[Token(Token = "0x600004C")]
	[Address(RVA = "0xF88810", Offset = "0xF88810", VA = "0xF88810")]
	public static string readTextFile(string fileName, bool isStreaming)
	{
		return null;
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0xF88B10", Offset = "0xF88B10", VA = "0xF88B10")]
	public static string readTextFile(string fileName)
	{
		return null;
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0xF88E74", Offset = "0xF88E74", VA = "0xF88E74")]
	public static void writeTextFile(string fileName, string data, bool isStreaming)
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0xF89168", Offset = "0xF89168", VA = "0xF89168")]
	public static void writeTextFile(string fileName, string data)
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0xF89480", Offset = "0xF89480", VA = "0xF89480")]
	public static void deleteTextFile(string fileName)
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0xF894F0", Offset = "0xF894F0", VA = "0xF894F0")]
	public static void flush()
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0xF894F8", Offset = "0xF894F8", VA = "0xF894F8")]
	public static string pathToFileName(string path)
	{
		return null;
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0xF891E8", Offset = "0xF891E8", VA = "0xF891E8")]
	private static string encryptString(string plainText)
	{
		return null;
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0xF88BB0", Offset = "0xF88BB0", VA = "0xF88BB0")]
	private static string decryptString(string cipherText)
	{
		return null;
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0xF8977C", Offset = "0xF8977C", VA = "0xF8977C")]
	public static bool IsBase64String(this string s)
	{
		return default(bool);
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0xF8983C", Offset = "0xF8983C", VA = "0xF8983C")]
	private static void resolveUserDataPath()
	{
	}
}
[Token(Token = "0x2000012")]
public class MathUtils
{
	[Token(Token = "0x6000058")]
	[Address(RVA = "0xF5456C", Offset = "0xF5456C", VA = "0xF5456C")]
	public static float remap(float s, float a1, float a2, float b1, float b2)
	{
		return default(float);
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0xF54588", Offset = "0xF54588", VA = "0xF54588")]
	public static float remapClamped(float s, float a1, float a2, float b1, float b2)
	{
		return default(float);
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0xF5465C", Offset = "0xF5465C", VA = "0xF5465C")]
	public static Quaternion LerpRotation(float distanceToTarget, float rotationSuckDistance, float suckCompleteDistance, Quaternion startRotation, Quaternion endRotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0xF54788", Offset = "0xF54788", VA = "0xF54788")]
	public static Vector3 LerpPosition(float distanceToTarget, float positionSuckDistance, float suckCompleteDistance, Vector3 startPosition, Vector3 endPosition)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0xF54890", Offset = "0xF54890", VA = "0xF54890")]
	public static float DotDirection(Vector3 pos1, Vector3 pos2, Vector3 dir)
	{
		return default(float);
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0xF54988", Offset = "0xF54988", VA = "0xF54988")]
	public static float Vec3InverseLerp(Vector3 a, Vector3 b, Vector3 value)
	{
		return default(float);
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0xF54AB8", Offset = "0xF54AB8", VA = "0xF54AB8")]
	public static float VectorDifferenceXZ(Vector3 referenceVector, Vector3 otherVector)
	{
		return default(float);
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0xF54AC8", Offset = "0xF54AC8", VA = "0xF54AC8")]
	public MathUtils()
	{
	}
}
[Token(Token = "0x2000013")]
public class PositionParent : MonoBehaviour
{
	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform parent;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 m_offset;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform m_transform;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform m_parentTransform;

	[Token(Token = "0x6000060")]
	[Address(RVA = "0x1267074", Offset = "0x1267074", VA = "0x1267074")]
	private void Start()
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0x12671B4", Offset = "0x12671B4", VA = "0x12671B4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0x12672B0", Offset = "0x12672B0", VA = "0x12672B0")]
	public PositionParent()
	{
	}
}
[Token(Token = "0x2000014")]
public class RoundRobinParticleEmitter : MonoBehaviour
{
	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RoundRobinParticleSystem roundRobinParticleSystem;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool playOnStart;

	[Token(Token = "0x6000063")]
	[Address(RVA = "0xEB723C", Offset = "0xEB723C", VA = "0xEB723C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0xEB72EC", Offset = "0xEB72EC", VA = "0xEB72EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0xEB74A0", Offset = "0xEB74A0", VA = "0xEB74A0")]
	private void Play()
	{
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0xEB7240", Offset = "0xEB7240", VA = "0xEB7240")]
	private void Stop()
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0xEB77A8", Offset = "0xEB77A8", VA = "0xEB77A8")]
	public RoundRobinParticleEmitter()
	{
	}
}
[Token(Token = "0x2000015")]
public class RoundRobinParticleSystem : MonoBehaviour
{
	[Token(Token = "0x2000623")]
	private struct EmissionData
	{
		[Token(Token = "0x4001BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int instanceId;

		[Token(Token = "0x4001BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Vector3 position;

		[Token(Token = "0x60021B3")]
		[Address(RVA = "0xA34AB0", Offset = "0xA34AB0", VA = "0xA34AB0")]
		public EmissionData(Transform trans)
		{
		}
	}

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem baseParticleSystem;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int m_rateOverTime;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97C254", Offset = "0x97C254")]
	public bool showGizmo;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform baseParticleSystemTransform;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ParticleSystem.MainModule m_main;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<EmissionData> m_currentEmissions;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float m_elapsedTime;

	[Token(Token = "0x6000068")]
	[Address(RVA = "0xEB77B0", Offset = "0xEB77B0", VA = "0xEB77B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0xEB754C", Offset = "0xEB754C", VA = "0xEB754C")]
	public void Play(Transform trans)
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0xEB7890", Offset = "0xEB7890", VA = "0xEB7890")]
	private bool IsInEmissionData(Transform trans)
	{
		return default(bool);
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0xEB7620", Offset = "0xEB7620", VA = "0xEB7620")]
	public void Stop(Transform trans)
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0xEB79E0", Offset = "0xEB79E0", VA = "0xEB79E0")]
	private void Update()
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0xEB7B8C", Offset = "0xEB7B8C", VA = "0xEB7B8C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0xEB7C98", Offset = "0xEB7C98", VA = "0xEB7C98")]
	public RoundRobinParticleSystem()
	{
	}
}
[Token(Token = "0x2000016")]
[ExecuteInEditMode]
public class InfoToReflMaterial : MonoBehaviour
{
	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform mirrorProxyTransform;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer m_renderer;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MaterialPropertyBlock m_block;

	[Token(Token = "0x600006F")]
	[Address(RVA = "0xCA95A0", Offset = "0xCA95A0", VA = "0xCA95A0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0xCA990C", Offset = "0xCA990C", VA = "0xCA990C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0xCA965C", Offset = "0xCA965C", VA = "0xCA965C")]
	private void UpdateReflectionData()
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0xCA9990", Offset = "0xCA9990", VA = "0xCA9990")]
	public InfoToReflMaterial()
	{
	}
}
[Token(Token = "0x2000017")]
public class DebugDisabler : MonoBehaviour
{
	[Token(Token = "0x2000624")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x978CE4", Offset = "0x978CE4")]
	private sealed class <Start>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DebugDisabler <>4__this;

		[Token(Token = "0x4001BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private IEnumerable<Transform> <objectsInScene>5__2;

		[Token(Token = "0x4001BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <i>5__3;

		[Token(Token = "0x4001BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private IEnumerator<Transform> <>7__wrap3;

		[Token(Token = "0x4001BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform <obj>5__5;

		[Token(Token = "0x1700030C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60021B8")]
			[Address(RVA = "0xC11AE4", Offset = "0xC11AE4", VA = "0xC11AE4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60021BA")]
			[Address(RVA = "0xC11B54", Offset = "0xC11B54", VA = "0xC11B54", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60021B4")]
		[Address(RVA = "0xC113B8", Offset = "0xC113B8", VA = "0xC113B8")]
		[DebuggerHidden]
		public <Start>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x60021B5")]
		[Address(RVA = "0xC114CC", Offset = "0xC114CC", VA = "0xC114CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60021B6")]
		[Address(RVA = "0xC115A8", Offset = "0xC115A8", VA = "0xC115A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60021B7")]
		[Address(RVA = "0xC114E8", Offset = "0xC114E8", VA = "0xC114E8")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x60021B9")]
		[Address(RVA = "0xC11AEC", Offset = "0xC11AEC", VA = "0xC11AEC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMesh textMesh;

	[Token(Token = "0x6000073")]
	[Address(RVA = "0xC11344", Offset = "0xC11344", VA = "0xC11344")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x983F44", Offset = "0x983F44")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0xC113E4", Offset = "0xC113E4", VA = "0xC113E4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0xC113E8", Offset = "0xC113E8", VA = "0xC113E8")]
	public DebugDisabler()
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0xC113F0", Offset = "0xC113F0", VA = "0xC113F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x983FA8", Offset = "0x983FA8")]
	private bool <Start>b__1_0(Transform t)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000018")]
public class PrintRenderer : MonoBehaviour
{
	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer renderer;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool? wasEnabled;

	[Token(Token = "0x6000077")]
	[Address(RVA = "0x126741C", Offset = "0x126741C", VA = "0x126741C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0x1267474", Offset = "0x1267474", VA = "0x1267474")]
	private void Update()
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0x1267694", Offset = "0x1267694", VA = "0x1267694")]
	public PrintRenderer()
	{
	}
}
[Token(Token = "0x2000019")]
public class ConstantRotation : MonoBehaviour
{
	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x600007A")]
	[Address(RVA = "0xC11260", Offset = "0xC11260", VA = "0xC11260")]
	private void Update()
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0xC11334", Offset = "0xC11334", VA = "0xC11334")]
	public ConstantRotation()
	{
	}
}
[Token(Token = "0x200001A")]
public class SimpleGPUInstancingExample : MonoBehaviour
{
	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Prefab;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material InstancedMaterial;

	[Token(Token = "0x600007C")]
	[Address(RVA = "0xEB88E8", Offset = "0xEB88E8", VA = "0xEB88E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0xEB8B6C", Offset = "0xEB8B6C", VA = "0xEB8B6C")]
	public SimpleGPUInstancingExample()
	{
	}
}
[Token(Token = "0x200001B")]
public class SimpleMoveExample : MonoBehaviour
{
	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 m_previous;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 m_target;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 m_originalPosition;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 BoundingVolume;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float Speed;

	[Token(Token = "0x600007E")]
	[Address(RVA = "0xEB8B74", Offset = "0xEB8B74", VA = "0xEB8B74")]
	private void Start()
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0xEB8C10", Offset = "0xEB8C10", VA = "0xEB8C10")]
	private void Update()
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0xEB8F0C", Offset = "0xEB8F0C", VA = "0xEB8F0C")]
	public SimpleMoveExample()
	{
	}
}
[Token(Token = "0x200001C")]
public class Smear : MonoBehaviour
{
	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Queue<Vector3> m_recentPositions;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int FramesBufferSize;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer Renderer;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material m_instancedMaterial;

	[Token(Token = "0x1700000D")]
	private Material InstancedMaterial
	{
		[Token(Token = "0x6000081")]
		[Address(RVA = "0xEB8F70", Offset = "0xEB8F70", VA = "0xEB8F70")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000082")]
		[Address(RVA = "0xEB8F78", Offset = "0xEB8F78", VA = "0xEB8F78")]
		set
		{
		}
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0xEB8F80", Offset = "0xEB8F80", VA = "0xEB8F80")]
	private void Start()
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0xEB8FBC", Offset = "0xEB8FBC", VA = "0xEB8FBC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0xEB91F8", Offset = "0xEB91F8", VA = "0xEB91F8")]
	public Smear()
	{
	}
}
[Token(Token = "0x200001D")]
[ExecuteInEditMode]
public class PostProcessExample : MonoBehaviour
{
	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material PostProcessMat;

	[Token(Token = "0x6000086")]
	[Address(RVA = "0x12672B8", Offset = "0x12672B8", VA = "0x12672B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x1267390", Offset = "0x1267390", VA = "0x1267390")]
	private void OnRenderImage(RenderTexture src, RenderTexture dest)
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0x1267414", Offset = "0x1267414", VA = "0x1267414")]
	public PostProcessExample()
	{
	}
}
[Token(Token = "0x200001E")]
[ExecuteInEditMode]
public class SpriteMaskController : MonoBehaviour
{
	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SpriteRenderer m_spriteRenderer;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector4 m_uvs;

	[Token(Token = "0x6000089")]
	[Address(RVA = "0xC77650", Offset = "0xC77650", VA = "0xC77650")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0xC77734", Offset = "0xC77734", VA = "0xC77734")]
	public SpriteMaskController()
	{
	}
}
[Token(Token = "0x200001F")]
public class Singleton<T> : MonoBehaviour where T : MonoBehaviour
{
	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static T _instance;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static object _lock;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool applicationIsQuitting;

	[Token(Token = "0x1700000E")]
	public static T Instance
	{
		[Token(Token = "0x600008B")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600008C")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x600008D")]
	public static bool IsDestroy()
	{
		return default(bool);
	}

	[Token(Token = "0x600008E")]
	public Singleton()
	{
	}
}
[Token(Token = "0x2000020")]
public class LookingGlassServer : MonoBehaviour
{
	[Token(Token = "0x2000625")]
	private class CommandContext
	{
		[Token(Token = "0x4001BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string command;

		[Token(Token = "0x4001BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Socket sock;

		[Token(Token = "0x60021BB")]
		[Address(RVA = "0xF52764", Offset = "0xF52764", VA = "0xF52764")]
		public CommandContext()
		{
		}
	}

	[Token(Token = "0x2000626")]
	private delegate void SendDelegate(Socket s, string data, bool prompt);

	[Token(Token = "0x2000627")]
	private class SelectCommand : ILookingGlassCommand
	{
		[Token(Token = "0x60021C0")]
		[Address(RVA = "0xF52C40", Offset = "0xF52C40", VA = "0xF52C40", Slot = "4")]
		public string name()
		{
			return null;
		}

		[Token(Token = "0x60021C1")]
		[Address(RVA = "0xF52C88", Offset = "0xF52C88", VA = "0xF52C88", Slot = "5")]
		public string help()
		{
			return null;
		}

		[Token(Token = "0x60021C2")]
		[Address(RVA = "0xF52CD0", Offset = "0xF52CD0", VA = "0xF52CD0", Slot = "6")]
		public bool execute(string[] args, ref string stdout, ref string stderr)
		{
			return default(bool);
		}

		[Token(Token = "0x60021C3")]
		[Address(RVA = "0xF52FBC", Offset = "0xF52FBC", VA = "0xF52FBC")]
		public SelectCommand()
		{
		}
	}

	[Token(Token = "0x2000628")]
	private class TreeCommand : ILookingGlassCommand
	{
		[Token(Token = "0x60021C4")]
		[Address(RVA = "0xF54050", Offset = "0xF54050", VA = "0xF54050", Slot = "4")]
		public string name()
		{
			return null;
		}

		[Token(Token = "0x60021C5")]
		[Address(RVA = "0xF54098", Offset = "0xF54098", VA = "0xF54098", Slot = "5")]
		public string help()
		{
			return null;
		}

		[Token(Token = "0x60021C6")]
		[Address(RVA = "0xF540E0", Offset = "0xF540E0", VA = "0xF540E0", Slot = "6")]
		public bool execute(string[] args, ref string stdout, ref string stderr)
		{
			return default(bool);
		}

		[Token(Token = "0x60021C7")]
		[Address(RVA = "0xF54360", Offset = "0xF54360", VA = "0xF54360")]
		private void hoppla(Transform obj, ref StringBuilder sb, int depth)
		{
		}

		[Token(Token = "0x60021C8")]
		[Address(RVA = "0xF5454C", Offset = "0xF5454C", VA = "0xF5454C")]
		public TreeCommand()
		{
		}
	}

	[Token(Token = "0x2000629")]
	private class SetCommand : ILookingGlassCommand
	{
		[Token(Token = "0x60021C9")]
		[Address(RVA = "0xF53844", Offset = "0xF53844", VA = "0xF53844", Slot = "4")]
		public string name()
		{
			return null;
		}

		[Token(Token = "0x60021CA")]
		[Address(RVA = "0xF5388C", Offset = "0xF5388C", VA = "0xF5388C", Slot = "5")]
		public string help()
		{
			return null;
		}

		[Token(Token = "0x60021CB")]
		[Address(RVA = "0xF538D4", Offset = "0xF538D4", VA = "0xF538D4", Slot = "6")]
		public bool execute(string[] args, ref string stdout, ref string stderr)
		{
			return default(bool);
		}

		[Token(Token = "0x60021CC")]
		[Address(RVA = "0xF53DF4", Offset = "0xF53DF4", VA = "0xF53DF4")]
		private static void setFieldValue(object target, FieldInfo fieldInfo, string value)
		{
		}

		[Token(Token = "0x60021CD")]
		[Address(RVA = "0xF53B90", Offset = "0xF53B90", VA = "0xF53B90")]
		private static void setPropertyValue(object target, PropertyInfo propInfo, string value)
		{
		}

		[Token(Token = "0x60021CE")]
		[Address(RVA = "0xF54048", Offset = "0xF54048", VA = "0xF54048")]
		public SetCommand()
		{
		}
	}

	[Token(Token = "0x200062A")]
	private class DescribeCommand : ILookingGlassCommand
	{
		[Token(Token = "0x60021CF")]
		[Address(RVA = "0xF5276C", Offset = "0xF5276C", VA = "0xF5276C", Slot = "4")]
		public string name()
		{
			return null;
		}

		[Token(Token = "0x60021D0")]
		[Address(RVA = "0xF527B4", Offset = "0xF527B4", VA = "0xF527B4", Slot = "5")]
		public string help()
		{
			return null;
		}

		[Token(Token = "0x60021D1")]
		[Address(RVA = "0xF527FC", Offset = "0xF527FC", VA = "0xF527FC", Slot = "6")]
		public bool execute(string[] args, ref string stdout, ref string stderr)
		{
			return default(bool);
		}

		[Token(Token = "0x60021D2")]
		[Address(RVA = "0xF529F4", Offset = "0xF529F4", VA = "0xF529F4")]
		public DescribeCommand()
		{
		}
	}

	[Token(Token = "0x200062B")]
	private class EnableGameObjectCommand : ILookingGlassCommand
	{
		[Token(Token = "0x60021D3")]
		[Address(RVA = "0xF529FC", Offset = "0xF529FC", VA = "0xF529FC", Slot = "4")]
		public string name()
		{
			return null;
		}

		[Token(Token = "0x60021D4")]
		[Address(RVA = "0xF52A44", Offset = "0xF52A44", VA = "0xF52A44", Slot = "5")]
		public string help()
		{
			return null;
		}

		[Token(Token = "0x60021D5")]
		[Address(RVA = "0xF52A8C", Offset = "0xF52A8C", VA = "0xF52A8C", Slot = "6")]
		public bool execute(string[] args, ref string stdout, ref string stderr)
		{
			return default(bool);
		}

		[Token(Token = "0x60021D6")]
		[Address(RVA = "0xF52C38", Offset = "0xF52C38", VA = "0xF52C38")]
		public EnableGameObjectCommand()
		{
		}
	}

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int port;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LookingGlassServer s_instance;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Queue<CommandContext> incoming;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<string, ILookingGlassCommand> m_commands;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Thread serverSocketThread;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject m_selectedGo;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private UnityEngine.Component m_selectedComp;

	[Token(Token = "0x1700000F")]
	public static LookingGlassServer Instance
	{
		[Token(Token = "0x6000090")]
		[Address(RVA = "0xF8DC8C", Offset = "0xF8DC8C", VA = "0xF8DC8C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0xF8DCDC", Offset = "0xF8DCDC", VA = "0xF8DCDC")]
	public void registerCommand(ILookingGlassCommand command)
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0xF8DDE0", Offset = "0xF8DDE0", VA = "0xF8DDE0")]
	private ILookingGlassCommand findCommand(string commandName)
	{
		return null;
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0xF8DEAC", Offset = "0xF8DEAC", VA = "0xF8DEAC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0xF8E034", Offset = "0xF8E034", VA = "0xF8E034")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0xF8E064", Offset = "0xF8E064", VA = "0xF8E064")]
	private void Update()
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0xF8E310", Offset = "0xF8E310", VA = "0xF8E310")]
	private void queueCommand(string commandLine, Socket sock, SendDelegate cb)
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0xF8E104", Offset = "0xF8E104", VA = "0xF8E104")]
	private void handleCommand(CommandContext cp)
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0xF8E58C", Offset = "0xF8E58C", VA = "0xF8E58C")]
	private static GameObject findGo(string goName)
	{
		return null;
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0xF8E594", Offset = "0xF8E594", VA = "0xF8E594")]
	private void ServerSocketThread()
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0xF8E44C", Offset = "0xF8E44C", VA = "0xF8E44C")]
	private void SendSync(Socket handler, string data, bool addPrompt = true)
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0xF8EBD4", Offset = "0xF8EBD4", VA = "0xF8EBD4")]
	private static string resolvePropertyValues(object obj, string header)
	{
		return null;
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0xF8EDE0", Offset = "0xF8EDE0", VA = "0xF8EDE0")]
	private static string resolveFieldValues(object obj, string header)
	{
		return null;
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0xF8EFE8", Offset = "0xF8EFE8", VA = "0xF8EFE8")]
	public LookingGlassServer()
	{
	}
}
[Token(Token = "0x2000021")]
public interface ILookingGlassCommand
{
	[Token(Token = "0x600009E")]
	string name();

	[Token(Token = "0x600009F")]
	string help();

	[Token(Token = "0x60000A0")]
	bool execute(string[] args, ref string stdout, ref string stderr);
}
[Token(Token = "0x2000022")]
internal class TemplateCommand : ILookingGlassCommand
{
	[Token(Token = "0x60000A1")]
	[Address(RVA = "0xC83AE4", Offset = "0xC83AE4", VA = "0xC83AE4", Slot = "4")]
	public string name()
	{
		return null;
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0xC83B2C", Offset = "0xC83B2C", VA = "0xC83B2C", Slot = "5")]
	public string help()
	{
		return null;
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0xC83B74", Offset = "0xC83B74", VA = "0xC83B74", Slot = "6")]
	public bool execute(string[] args, ref string stdout, ref string stderr)
	{
		return default(bool);
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0xC83B7C", Offset = "0xC83B7C", VA = "0xC83B7C")]
	public TemplateCommand()
	{
	}
}
[Token(Token = "0x2000023")]
public class LookingGlassTest : MonoBehaviour
{
	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string stringVal;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int intVal;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float floatVal;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 vec3Val;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string m_stringProp;

	[Token(Token = "0x17000010")]
	public string StringProp
	{
		[Token(Token = "0x60000A6")]
		[Address(RVA = "0xF5455C", Offset = "0xF5455C", VA = "0xF5455C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000A5")]
		[Address(RVA = "0xF54554", Offset = "0xF54554", VA = "0xF54554")]
		set
		{
		}
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0xF54564", Offset = "0xF54564", VA = "0xF54564")]
	public LookingGlassTest()
	{
	}
}
[Token(Token = "0x2000024")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x96D980", Offset = "0x96D980")]
public class FastList<T>
{
	[Token(Token = "0x200062C")]
	public delegate int CompareFunc(T left, T right);

	[Token(Token = "0x200062D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x978CF4", Offset = "0x978CF4")]
	private sealed class <GetEnumerator>d__25 : IEnumerator<T>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4001BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T <>2__current;

		[Token(Token = "0x4001BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FastList<T> <>4__this;

		[Token(Token = "0x4001BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <i>5__2;

		[Token(Token = "0x1700030E")]
		private T System.Collections.Generic.IEnumerator<T>.Current
		{
			[Token(Token = "0x60021DE")]
			[DebuggerHidden]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x1700030F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60021E0")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60021DB")]
		[DebuggerHidden]
		public <GetEnumerator>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x60021DC")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60021DD")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60021DF")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T[] array;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int size;

	[Token(Token = "0x17000011")]
	public int Count
	{
		[Token(Token = "0x60000AA")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60000AB")]
		set
		{
		}
	}

	[Token(Token = "0x17000012")]
	public T Item
	{
		[Token(Token = "0x60000AC")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x60000AD")]
		set
		{
		}
	}

	[Token(Token = "0x60000A8")]
	public FastList()
	{
	}

	[Token(Token = "0x60000A9")]
	public FastList(int size)
	{
	}

	[Token(Token = "0x60000AE")]
	public void Add(T item)
	{
	}

	[Token(Token = "0x60000AF")]
	public void AddUnique(T item)
	{
	}

	[Token(Token = "0x60000B0")]
	public void AddRange(IEnumerable<T> items)
	{
	}

	[Token(Token = "0x60000B1")]
	public void Insert(int index, T item)
	{
	}

	[Token(Token = "0x60000B2")]
	public bool Remove(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x60000B3")]
	public void RemoveAt(int index)
	{
	}

	[Token(Token = "0x60000B4")]
	public bool RemoveFast(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x60000B5")]
	public void RemoveAtFast(int index)
	{
	}

	[Token(Token = "0x60000B6")]
	public bool Contains(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x60000B7")]
	public int IndexOf(T item)
	{
		return default(int);
	}

	[Token(Token = "0x60000B8")]
	public T Pop()
	{
		return (T)null;
	}

	[Token(Token = "0x60000B9")]
	public T[] ToArray()
	{
		return null;
	}

	[Token(Token = "0x60000BA")]
	public void Sort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x60000BB")]
	public void InsertionSort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x60000BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x983FB8", Offset = "0x983FB8")]
	public IEnumerator<T> GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x60000BD")]
	public T Find(Predicate<T> match)
	{
		return (T)null;
	}

	[Token(Token = "0x60000BE")]
	private void Allocate()
	{
	}

	[Token(Token = "0x60000BF")]
	private void Trim()
	{
	}

	[Token(Token = "0x60000C0")]
	public void Clear()
	{
	}

	[Token(Token = "0x60000C1")]
	public void Release()
	{
	}
}
[Token(Token = "0x2000025")]
public class InspectorNoteAttribute : PropertyAttribute
{
	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string header;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly string message;

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0xCAB604", Offset = "0xCAB604", VA = "0xCAB604")]
	public InspectorNoteAttribute(string header, string message = "")
	{
	}
}
[Token(Token = "0x2000026")]
public class InspectorCommentAttribute : PropertyAttribute
{
	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string message;

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0xCAB5D8", Offset = "0xCAB5D8", VA = "0xCAB5D8")]
	public InspectorCommentAttribute(string message = "")
	{
	}
}
[Token(Token = "0x2000027")]
public class OvrAvatarTestDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 headPos;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion headRot;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0xB2C4F8", Offset = "0xB2C4F8", VA = "0xB2C4F8")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0xB2C624", Offset = "0xB2C624", VA = "0xB2C624")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0xB2C980", Offset = "0xB2C980", VA = "0xB2C980")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0xB2CBDC", Offset = "0xB2CBDC", VA = "0xB2CBDC", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0xB2CC0C", Offset = "0xB2CC0C", VA = "0xB2CC0C")]
	public OvrAvatarTestDriver()
	{
	}
}
[Token(Token = "0x2000028")]
public class PoseEditHelper : MonoBehaviour
{
	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform poseRoot;

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0x1266E1C", Offset = "0x1266E1C", VA = "0x1266E1C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0x1266EA8", Offset = "0x1266EA8", VA = "0x1266EA8")]
	private void DrawJoints(Transform joint)
	{
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0x126706C", Offset = "0x126706C", VA = "0x126706C")]
	public PoseEditHelper()
	{
	}
}
[Token(Token = "0x2000029")]
public class GazeTargetSpawner : MonoBehaviour
{
	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject GazeTargetPrefab;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int NumberOfDummyTargets;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int RadiusMultiplier;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool isVisible;

	[Token(Token = "0x17000013")]
	public bool IsVisible
	{
		[Token(Token = "0x60000CC")]
		[Address(RVA = "0xCA7784", Offset = "0xCA7784", VA = "0xCA7784")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000CD")]
		[Address(RVA = "0xCA778C", Offset = "0xCA778C", VA = "0xCA778C")]
		set
		{
		}
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0xCA78E8", Offset = "0xCA78E8", VA = "0xCA78E8")]
	private void Start()
	{
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0xCA7BB0", Offset = "0xCA7BB0", VA = "0xCA7BB0")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0xCA7BB8", Offset = "0xCA7BB8", VA = "0xCA7BB8")]
	public GazeTargetSpawner()
	{
	}
}
[Token(Token = "0x200002A")]
public class RemoteLoopbackManager : MonoBehaviour
{
	[Token(Token = "0x200062E")]
	private class PacketLatencyPair
	{
		[Token(Token = "0x4001BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte[] PacketData;

		[Token(Token = "0x4001BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float FakeLatency;

		[Token(Token = "0x60021E1")]
		[Address(RVA = "0xEB4A0C", Offset = "0xEB4A0C", VA = "0xEB4A0C")]
		public PacketLatencyPair()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200062F")]
	public class SimulatedLatencySettings
	{
		[Token(Token = "0x4001BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x983A0C", Offset = "0x983A0C")]
		public float FakeLatencyMax;

		[Token(Token = "0x4001BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x983A24", Offset = "0x983A24")]
		public float FakeLatencyMin;

		[Token(Token = "0x4001BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x983A3C", Offset = "0x983A3C")]
		public float LatencyWeight;

		[Token(Token = "0x4001BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x983A54", Offset = "0x983A54")]
		public int MaxSamples;

		[Token(Token = "0x4001BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal float AverageWindow;

		[Token(Token = "0x4001BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal float LatencySum;

		[Token(Token = "0x4001BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal LinkedList<float> LatencyValues;

		[Token(Token = "0x60021E2")]
		[Address(RVA = "0xEB4A14", Offset = "0xEB4A14", VA = "0xEB4A14")]
		public float NextValue()
		{
			return default(float);
		}

		[Token(Token = "0x60021E3")]
		[Address(RVA = "0xEB4C20", Offset = "0xEB4C20", VA = "0xEB4C20")]
		public SimulatedLatencySettings()
		{
		}
	}

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OvrAvatar LocalAvatar;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar LoopbackAvatar;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimulatedLatencySettings LatencySettings;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int PacketSequence;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LinkedList<PacketLatencyPair> packetQueue;

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0xEB3EC0", Offset = "0xEB3EC0", VA = "0xEB3EC0")]
	private void Start()
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0xEB40A0", Offset = "0xEB40A0", VA = "0xEB40A0")]
	private void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0xEB4478", Offset = "0xEB4478", VA = "0xEB4478")]
	private void Update()
	{
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0xEB43C0", Offset = "0xEB43C0", VA = "0xEB43C0")]
	private void SendPacketData(byte[] data)
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0xEB4744", Offset = "0xEB4744", VA = "0xEB4744")]
	private void ReceivePacketData(byte[] data)
	{
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0xEB4B94", Offset = "0xEB4B94", VA = "0xEB4B94")]
	public RemoteLoopbackManager()
	{
	}
}
[Token(Token = "0x200002B")]
public class P2PManager
{
	[Token(Token = "0x2000630")]
	private enum MessageType : byte
	{
		[Token(Token = "0x4001BC7")]
		Update = 1
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0xB2E470", Offset = "0xB2E470", VA = "0xB2E470")]
	public P2PManager()
	{
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0xB2E530", Offset = "0xB2E530", VA = "0xB2E530")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0xB2E614", Offset = "0xB2E614", VA = "0xB2E614")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0xB2E698", Offset = "0xB2E698", VA = "0xB2E698")]
	private void PeerConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0xB2E88C", Offset = "0xB2E88C", VA = "0xB2E88C")]
	private void ConnectionStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0xB2ECEC", Offset = "0xB2ECEC", VA = "0xB2ECEC")]
	public void SendAvatarUpdate(ulong userID, Transform rootTransform, uint sequence, byte[] avatarPacket)
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0xB2F1A8", Offset = "0xB2F1A8", VA = "0xB2F1A8")]
	public void GetRemotePackets()
	{
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0xB2F498", Offset = "0xB2F498", VA = "0xB2F498")]
	public void processAvatarPacket(RemotePlayer remote, ref byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0xB2EF54", Offset = "0xB2EF54", VA = "0xB2EF54")]
	private void PackByte(byte b, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0xB2F3A4", Offset = "0xB2F3A4", VA = "0xB2F3A4")]
	private byte ReadByte(byte[] buf, ref int offset)
	{
		return default(byte);
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0xB2F060", Offset = "0xB2F060", VA = "0xB2F060")]
	private void PackFloat(float f, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0xB2F760", Offset = "0xB2F760", VA = "0xB2F760")]
	private float ReadFloat(byte[] buf, ref int offset)
	{
		return default(float);
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0xB2EFC0", Offset = "0xB2EFC0", VA = "0xB2EFC0")]
	private void PackULong(ulong u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0xB2F40C", Offset = "0xB2F40C", VA = "0xB2F40C")]
	private ulong ReadULong(byte[] buf, ref int offset)
	{
		return default(ulong);
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0xB2F108", Offset = "0xB2F108", VA = "0xB2F108")]
	private void PackUInt32(uint u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0xB2F7EC", Offset = "0xB2F7EC", VA = "0xB2F7EC")]
	private uint ReadUInt32(byte[] buf, ref int offset)
	{
		return default(uint);
	}
}
[Token(Token = "0x200002C")]
public class PlayerController : SocialPlatformManager
{
	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Camera spyCamera;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject cameraRig;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool showUI;

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0xF1C21C", Offset = "0xF1C21C", VA = "0xF1C21C", Slot = "5")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0xF1C260", Offset = "0xF1C260", VA = "0xF1C260", Slot = "6")]
	public override void Start()
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0xF1C2A0", Offset = "0xF1C2A0", VA = "0xF1C2A0", Slot = "4")]
	public override void Update()
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0xF1C2C8", Offset = "0xF1C2C8", VA = "0xF1C2C8")]
	private void checkInput()
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0xF1C480", Offset = "0xF1C480", VA = "0xF1C480")]
	private void ToggleCamera()
	{
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0xF1C570", Offset = "0xF1C570", VA = "0xF1C570")]
	private void ToggleUI()
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0xF1C5E8", Offset = "0xF1C5E8", VA = "0xF1C5E8")]
	public PlayerController()
	{
	}
}
[Token(Token = "0x200002D")]
public class RemotePlayer
{
	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong remoteUserID;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool stillInRoom;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public PeerConnectionState p2pConnectionState;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PeerConnectionState voipConnectionState;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar RemoteAvatar;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 receivedRootPosition;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 receivedRootPositionPrior;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Quaternion receivedRootRotation;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Quaternion receivedRootRotationPrior;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VoipAudioSourceHiLevel voipSource;

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0xEB4CA8", Offset = "0xEB4CA8", VA = "0xEB4CA8")]
	public RemotePlayer()
	{
	}
}
[Token(Token = "0x200002E")]
public class RoomManager
{
	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong roomID;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong invitedRoomID;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool amIServer;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool startupDone;

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0xEB4DF4", Offset = "0xEB4DF4", VA = "0xEB4DF4")]
	public RoomManager()
	{
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0xEB4EC0", Offset = "0xEB4EC0", VA = "0xEB4EC0")]
	private void AcceptingInviteCallback(Message<string> msg)
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0xEB51DC", Offset = "0xEB51DC", VA = "0xEB51DC")]
	public bool CheckForInvite()
	{
		return default(bool);
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0xEB52EC", Offset = "0xEB52EC", VA = "0xEB52EC")]
	public void CreateRoom()
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0xEB53A4", Offset = "0xEB53A4", VA = "0xEB53A4")]
	private void CreateAndJoinPrivateRoomCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0xEB5B00", Offset = "0xEB5B00", VA = "0xEB5B00")]
	private void OnLaunchInviteWorkflowComplete(Message msg)
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0xEB520C", Offset = "0xEB520C", VA = "0xEB520C")]
	public void JoinExistingRoom(ulong roomID)
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0xEB5B8C", Offset = "0xEB5B8C", VA = "0xEB5B8C")]
	private void JoinRoomCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0xEB64AC", Offset = "0xEB64AC", VA = "0xEB64AC")]
	private void RoomUpdateCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0xEB6900", Offset = "0xEB6900", VA = "0xEB6900")]
	public void LeaveCurrentRoom()
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0xEB5FCC", Offset = "0xEB5FCC", VA = "0xEB5FCC")]
	private void ProcessRoomData(Message<Room> msg)
	{
	}
}
[Token(Token = "0x200002F")]
public class SocialPlatformManager : MonoBehaviour
{
	[Token(Token = "0x2000631")]
	public enum State
	{
		[Token(Token = "0x4001BC9")]
		INITIALIZING,
		[Token(Token = "0x4001BCA")]
		CHECKING_LAUNCH_STATE,
		[Token(Token = "0x4001BCB")]
		CREATING_A_ROOM,
		[Token(Token = "0x4001BCC")]
		WAITING_IN_A_ROOM,
		[Token(Token = "0x4001BCD")]
		JOINING_A_ROOM,
		[Token(Token = "0x4001BCE")]
		CONNECTED_IN_A_ROOM,
		[Token(Token = "0x4001BCF")]
		LEAVING_A_ROOM,
		[Token(Token = "0x4001BD0")]
		SHUTDOWN
	}

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 START_ROTATION_ONE;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly Vector3 START_POSITION_ONE;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 START_ROTATION_TWO;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static readonly Vector3 START_POSITION_TWO;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly Vector3 START_ROTATION_THREE;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static readonly Vector3 START_POSITION_THREE;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static readonly Vector3 START_ROTATION_FOUR;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static readonly Vector3 START_POSITION_FOUR;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static readonly Color BLACK;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static readonly Color WHITE;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static readonly Color CYAN;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static readonly Color BLUE;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static readonly Color GREEN;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float voiceCurrent;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private uint packetSequence;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar localAvatarPrefab;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar remoteAvatarPrefab;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject helpPanel;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected MeshRenderer helpMesh;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material riftMaterial;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material gearMaterial;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected OvrAvatar localAvatar;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected GameObject localTrackingSpace;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected GameObject localPlayerHead;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Dictionary<ulong, RemotePlayer> remoteUsers;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject roomSphere;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected MeshRenderer sphereMesh;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject roomFloor;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected MeshRenderer floorMesh;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected State currentState;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected static SocialPlatformManager s_instance;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected RoomManager roomManager;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected P2PManager p2pManager;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected VoipManager voipManager;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected ulong myID;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected string myOculusID;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static readonly float VOIP_SCALE;

	[Token(Token = "0x17000014")]
	public static State CurrentState
	{
		[Token(Token = "0x6000106")]
		[Address(RVA = "0xEBB17C", Offset = "0xEBB17C", VA = "0xEBB17C")]
		get
		{
			return default(State);
		}
	}

	[Token(Token = "0x17000015")]
	public static ulong MyID
	{
		[Token(Token = "0x6000107")]
		[Address(RVA = "0xEB5534", Offset = "0xEB5534", VA = "0xEB5534")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x17000016")]
	public static string MyOculusID
	{
		[Token(Token = "0x6000108")]
		[Address(RVA = "0xEBB1F4", Offset = "0xEBB1F4", VA = "0xEBB1F4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0xEB92F8", Offset = "0xEB92F8", VA = "0xEB92F8", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0xEB9814", Offset = "0xEB9814", VA = "0xEB9814", Slot = "5")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0xEB9C14", Offset = "0xEB9C14", VA = "0xEB9C14")]
	private void InitCallback(Message<PlatformInitialize> msg)
	{
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0xEB9D84", Offset = "0xEB9D84", VA = "0xEB9D84", Slot = "6")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0xEB9D88", Offset = "0xEB9D88", VA = "0xEB9D88")]
	private void IsEntitledCallback(Message msg)
	{
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0xEB9E88", Offset = "0xEB9E88", VA = "0xEB9E88")]
	private void GetLoggedInUserCallback(Message<Oculus.Platform.Models.User> msg)
	{
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0xEBA7A0", Offset = "0xEBA7A0", VA = "0xEBA7A0")]
	private void GetLoggedInUserFriendsAndRoomsCallback(Message<UserAndRoomList> msg)
	{
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0xEBACFC", Offset = "0xEBACFC", VA = "0xEBACFC")]
	public void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0xEBAF40", Offset = "0xEBAF40", VA = "0xEBAF40")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0xEBB100", Offset = "0xEBB100", VA = "0xEBB100")]
	public void AddUser(ulong userID, ref RemotePlayer remoteUser)
	{
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0xEB9B60", Offset = "0xEB9B60", VA = "0xEB9B60")]
	public void LogOutputLine(string line)
	{
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0xEB5050", Offset = "0xEB5050", VA = "0xEB5050")]
	public static void TerminateWithError(Message msg)
	{
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0xEB5610", Offset = "0xEB5610", VA = "0xEB5610")]
	public static void TransitionToState(State newState)
	{
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0xEBB318", Offset = "0xEBB318", VA = "0xEBB318")]
	private static void SetSphereColorForState()
	{
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0xEB59CC", Offset = "0xEB59CC", VA = "0xEB59CC")]
	public static void SetFloorColorForState(bool host)
	{
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0xEB6978", Offset = "0xEB6978", VA = "0xEB6978")]
	public static void MarkAllRemoteUsersAsNotInRoom()
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0xEB6E5C", Offset = "0xEB6E5C", VA = "0xEB6E5C")]
	public static void MarkRemoteUserInRoom(ulong userID)
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0xEB6F44", Offset = "0xEB6F44", VA = "0xEB6F44")]
	public static void ForgetRemoteUsersNotInRoom()
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0xEB5118", Offset = "0xEB5118", VA = "0xEB5118")]
	public static void LogOutput(string line)
	{
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0xEB6AF8", Offset = "0xEB6AF8", VA = "0xEB6AF8")]
	public static bool IsUserInRoom(ulong userID)
	{
		return default(bool);
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0xEB6B94", Offset = "0xEB6B94", VA = "0xEB6B94")]
	public static void AddRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0xEBB510", Offset = "0xEBB510", VA = "0xEBB510")]
	public static void RemoveRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0xEBB74C", Offset = "0xEBB74C", VA = "0xEBB74C")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0xEB9268", Offset = "0xEB9268", VA = "0xEB9268")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x98401C", Offset = "0x98401C")]
	public static void MicFilter(short[] pcmData, UIntPtr pcmDataLength, int frequency, int numChannels)
	{
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0xEBB8C8", Offset = "0xEBB8C8", VA = "0xEBB8C8")]
	public static RemotePlayer GetRemoteUser(ulong userID)
	{
		return null;
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0xEBB9A0", Offset = "0xEBB9A0", VA = "0xEBB9A0")]
	public SocialPlatformManager()
	{
	}
}
[Token(Token = "0x2000030")]
public class VoipManager
{
	[Token(Token = "0x6000118")]
	[Address(RVA = "0xD8E940", Offset = "0xD8E940", VA = "0xD8E940")]
	public VoipManager()
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0xD8EA00", Offset = "0xD8EA00", VA = "0xD8EA00")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0xD8EAE4", Offset = "0xD8EAE4", VA = "0xD8EAE4")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0xD8EB68", Offset = "0xD8EB68", VA = "0xD8EB68")]
	private void VoipConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0xD8ED5C", Offset = "0xD8ED5C", VA = "0xD8ED5C")]
	private void VoipStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}
}
[Token(Token = "0x2000031")]
public class GazeTarget : MonoBehaviour
{
	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarGazeTargetType Type;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ovrAvatarGazeTargets RuntimeTargetList;

	[Token(Token = "0x600011D")]
	[Address(RVA = "0xCA73B4", Offset = "0xCA73B4", VA = "0xCA73B4")]
	static GazeTarget()
	{
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0xCA7424", Offset = "0xCA7424", VA = "0xCA7424")]
	private void Start()
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0xCA75D0", Offset = "0xCA75D0", VA = "0xCA75D0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0xCA7648", Offset = "0xCA7648", VA = "0xCA7648")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0xCA7468", Offset = "0xCA7468", VA = "0xCA7468")]
	private void UpdateGazeTarget()
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0xCA771C", Offset = "0xCA771C", VA = "0xCA771C")]
	private ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0xCA777C", Offset = "0xCA777C", VA = "0xCA777C")]
	public GazeTarget()
	{
	}
}
[Serializable]
[Token(Token = "0x2000032")]
public class AvatarLayer
{
	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int layerIndex;

	[Token(Token = "0x6000124")]
	[Address(RVA = "0xC0D094", Offset = "0xC0D094", VA = "0xC0D094")]
	public AvatarLayer()
	{
	}
}
[Serializable]
[Token(Token = "0x2000033")]
public class PacketRecordSettings
{
	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal bool RecordingFrames;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float UpdateRate;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal float AccumulatedTime;

	[Token(Token = "0x6000125")]
	[Address(RVA = "0xB2FB50", Offset = "0xB2FB50", VA = "0xB2FB50")]
	public PacketRecordSettings()
	{
	}
}
[Token(Token = "0x2000034")]
public class OvrAvatar : MonoBehaviour
{
	[Token(Token = "0x2000632")]
	public class PacketEventArgs : EventArgs
	{
		[Token(Token = "0x4001BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly OvrAvatarPacket Packet;

		[Token(Token = "0x60021E4")]
		[Address(RVA = "0xCC1F1C", Offset = "0xCC1F1C", VA = "0xCC1F1C")]
		public PacketEventArgs(OvrAvatarPacket packet)
		{
		}
	}

	[Token(Token = "0x2000633")]
	public enum HandType
	{
		[Token(Token = "0x4001BD3")]
		Right,
		[Token(Token = "0x4001BD4")]
		Left,
		[Token(Token = "0x4001BD5")]
		Max
	}

	[Token(Token = "0x2000634")]
	public enum HandJoint
	{
		[Token(Token = "0x4001BD7")]
		HandBase,
		[Token(Token = "0x4001BD8")]
		IndexBase,
		[Token(Token = "0x4001BD9")]
		IndexTip,
		[Token(Token = "0x4001BDA")]
		ThumbBase,
		[Token(Token = "0x4001BDB")]
		ThumbTip,
		[Token(Token = "0x4001BDC")]
		Max
	}

	[Token(Token = "0x2000635")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x978D04", Offset = "0x978D04")]
	private sealed class <WaitForMouthAudioSource>d__137 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatar <>4__this;

		[Token(Token = "0x17000310")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60021E8")]
			[Address(RVA = "0xCC48E0", Offset = "0xCC48E0", VA = "0xCC48E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000311")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60021EA")]
			[Address(RVA = "0xCC4950", Offset = "0xCC4950", VA = "0xCC4950", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60021E5")]
		[Address(RVA = "0xCC421C", Offset = "0xCC421C", VA = "0xCC421C")]
		[DebuggerHidden]
		public <WaitForMouthAudioSource>d__137(int <>1__state)
		{
		}

		[Token(Token = "0x60021E6")]
		[Address(RVA = "0xCC467C", Offset = "0xCC467C", VA = "0xCC467C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60021E7")]
		[Address(RVA = "0xCC4680", Offset = "0xCC4680", VA = "0xCC4680", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60021E9")]
		[Address(RVA = "0xCC48E8", Offset = "0xCC48E8", VA = "0xCC48E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97C2AC", Offset = "0x97C2AC")]
	public IntPtr sdkAvatar;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string oculusUserID;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatarDriver Driver;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97C2E4", Offset = "0x97C2E4")]
	public bool EnableBody;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool EnableHands;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool EnableBase;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool EnableExpressive;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97C31C", Offset = "0x97C31C")]
	public bool RecordPackets;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool UseSDKPackets;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PacketRecordSettings PacketSettings;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97C354", Offset = "0x97C354")]
	public bool StartWithControllers;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AvatarLayer FirstPersonLayer;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AvatarLayer ThirdPersonLayer;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool ShowFirstPerson;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool ShowThirdPerson;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	internal ovrAvatarCapabilities Capabilities;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97C38C", Offset = "0x97C38C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97C38C", Offset = "0x97C38C")]
	[SerializeField]
	internal ovrAvatarAssetLevelOfDetail LevelOfDetail;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97C3FC", Offset = "0x97C3FC")]
	private bool CombineMeshes;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97C434", Offset = "0x97C434")]
	public bool UseTransparentRenderQueue;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97C46C", Offset = "0x97C46C")]
	public Shader Monochrome_SurfaceShader;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Shader Monochrome_SurfaceShader_SelfOccluding;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Shader Monochrome_SurfaceShader_PBS;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Shader Skinshaded_SurfaceShader_SingleComponent;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Shader Skinshaded_VertFrag_SingleComponent;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Shader Skinshaded_VertFrag_CombinedMesh;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Shader Skinshaded_Expressive_SurfaceShader_SingleComponent;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Shader Skinshaded_Expressive_VertFrag_SingleComponent;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Shader Skinshaded_Expressive_VertFrag_CombinedMesh;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Shader Loader_VertFrag_CombinedMesh;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Shader EyeLens;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Shader ControllerShader;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97C4A4", Offset = "0x97C4A4")]
	public bool CanOwnMicrophone;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97C4DC", Offset = "0x97C4DC")]
	public bool EnableLaughter;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject MouthAnchor;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform LeftHandCustomPose;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform RightHandCustomPose;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private HashSet<ulong> assetLoadingIds;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool assetsFinishedLoading;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private OvrAvatarMaterialManager materialManager;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool waitingForCombinedMesh;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool doneExpressiveGlobalInit;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Vector4 clothingAlphaOffset;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private ulong clothingAlphaTexture;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private OVRLipSyncMicInput micInput;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private OVRLipSyncContext lipsyncContext;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private OVRLipSync.Frame currentFrame;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float[] visemes;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private AudioSource audioSource;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private ONSPAudioSource spatializedSource;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private List<float[]> voiceUpdates;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ovrAvatarVisemes RuntimeVisemes;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Transform cachedLeftHandCustomPose;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Transform[] cachedCustomLeftHandJoints;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private ovrAvatarTransform[] cachedLeftHandTransforms;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Transform cachedRightHandCustomPose;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Transform[] cachedCustomRightHandJoints;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private ovrAvatarTransform[] cachedRightHandTransforms;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool showLeftController;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
	private bool showRightController;

	[Token(Token = "0x40000EA")]
	private const bool USE_MOBILE_TEXTURE_FORMAT = true;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 MOUTH_HEAD_OFFSET;

	[Token(Token = "0x40000EC")]
	private const string MOUTH_HELPER_NAME = "MouthAnchor";

	[Token(Token = "0x40000ED")]
	private const int VISEME_COUNT = 16;

	[Token(Token = "0x40000EE")]
	private const float ACTION_UNIT_ONSET_SPEED = 30f;

	[Token(Token = "0x40000EF")]
	private const float ACTION_UNIT_FALLOFF_SPEED = 20f;

	[Token(Token = "0x40000F0")]
	private const float VISEME_LEVEL_MULTIPLIER = 1.5f;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	internal ulong oculusUserIDInternal;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	internal OvrAvatarBase Base;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	internal OvrAvatarTouchController ControllerLeft;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	internal OvrAvatarTouchController ControllerRight;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	internal OvrAvatarBody Body;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	internal OvrAvatarHand HandLeft;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	internal OvrAvatarHand HandRight;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	internal ovrAvatarLookAndFeelVersion LookAndFeelVersion;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	internal ovrAvatarLookAndFeelVersion FallbackLookAndFeelVersion;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private OvrAvatarPacket CurrentUnityPacket;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public EventHandler<PacketEventArgs> PacketRecorded;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static string[,] HandJoints;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static Vector3 MOUTH_POSITION_OFFSET;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static string VOICE_PROPERTY;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static string MOUTH_POSITION_PROPERTY;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static string MOUTH_DIRECTION_PROPERTY;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static string MOUTH_SCALE_PROPERTY;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static float MOUTH_SCALE_GLOBAL;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private static float MOUTH_MAX_GLOBAL;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static string NECK_JONT;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public float VoiceAmplitude;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public bool EnableMouthVertexAnimation;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static ovrAvatarLights ovrLights;

	[Token(Token = "0x6000126")]
	[Address(RVA = "0xCBE0BC", Offset = "0xCBE0BC", VA = "0xCBE0BC")]
	static OvrAvatar()
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0xCBE5A4", Offset = "0xCBE5A4", VA = "0xCBE5A4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0xCBE630", Offset = "0xCBE630", VA = "0xCBE630")]
	public void AssetLoadedCallback(OvrAvatarAsset asset)
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0xCBE6B0", Offset = "0xCBE6B0", VA = "0xCBE6B0")]
	public void CombinedMeshLoadedCallback(IntPtr assetPtr)
	{
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0xCBE7F0", Offset = "0xCBE7F0", VA = "0xCBE7F0")]
	private OvrAvatarSkinnedMeshRenderComponent AddSkinnedMeshRenderComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender)
	{
		return null;
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0xCBE8F8", Offset = "0xCBE8F8", VA = "0xCBE8F8")]
	private OvrAvatarSkinnedMeshRenderPBSComponent AddSkinnedMeshRenderPBSComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS)
	{
		return null;
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0xCBE9F4", Offset = "0xCBE9F4", VA = "0xCBE9F4")]
	private OvrAvatarSkinnedMeshPBSV2RenderComponent AddSkinnedMeshRenderPBSV2Component(IntPtr renderPart, GameObject go, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRenderPBSV2, bool isBodyPartZero, bool isControllerModel)
	{
		return null;
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0xCBEBF8", Offset = "0xCBEBF8", VA = "0xCBEBF8")]
	public static IntPtr GetRenderPart(ovrAvatarComponent component, uint renderPartIndex)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0xCBECC0", Offset = "0xCBECC0", VA = "0xCBECC0")]
	private static string GetRenderPartName(ovrAvatarComponent component, uint renderPartIndex)
	{
		return null;
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0xCBED44", Offset = "0xCBED44", VA = "0xCBED44")]
	internal static void ConvertTransform(float[] transform, ref ovrAvatarTransform target)
	{
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0xCBEED0", Offset = "0xCBEED0", VA = "0xCBEED0")]
	internal static void ConvertTransform(ovrAvatarTransform transform, Transform target)
	{
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0xCBEFB8", Offset = "0xCBEFB8", VA = "0xCBEFB8")]
	public static ovrAvatarTransform CreateOvrAvatarTransform(Vector3 position, Quaternion orientation)
	{
		return default(ovrAvatarTransform);
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0xCBF0E4", Offset = "0xCBF0E4", VA = "0xCBF0E4")]
	private static ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0xCBF144", Offset = "0xCBF144", VA = "0xCBF144")]
	private void BuildRenderComponents()
	{
	}

	[Token(Token = "0x6000134")]
	private void AddAvatarComponent<T>(ref T root, ovrAvatarComponent nativeComponent) where T : OvrAvatarComponent
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0xCBF5E4", Offset = "0xCBF5E4", VA = "0xCBF5E4")]
	private void UpdateCustomPoses()
	{
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0xCBF960", Offset = "0xCBF960", VA = "0xCBF960")]
	private static bool UpdatePoseRoot(Transform poseRoot, ref Transform cachedPoseRoot, ref Transform[] cachedPoseJoints, ref ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0xCBFB04", Offset = "0xCBFB04", VA = "0xCBFB04")]
	private static bool UpdateTransforms(Transform[] joints, ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0xCBFE18", Offset = "0xCBFE18", VA = "0xCBFE18")]
	private static void OrderJoints(Transform transform, List<Transform> joints)
	{
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0xCBFF0C", Offset = "0xCBFF0C", VA = "0xCBFF0C")]
	private void AvatarSpecificationCallback(IntPtr avatarSpecification)
	{
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0xCC0590", Offset = "0xCC0590", VA = "0xCC0590")]
	private void Start()
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0xCC093C", Offset = "0xCC093C", VA = "0xCC093C")]
	private void Update()
	{
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0xCC1554", Offset = "0xCC1554", VA = "0xCC1554")]
	public static ovrAvatarHandInputState CreateInputState(ovrAvatarTransform transform, OvrAvatarDriver.ControllerPose pose)
	{
		return default(ovrAvatarHandInputState);
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0xCC159C", Offset = "0xCC159C", VA = "0xCC159C")]
	public void ShowControllers(bool show)
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0xCC01B8", Offset = "0xCC01B8", VA = "0xCC01B8")]
	public void ShowLeftController(bool show)
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0xCC0254", Offset = "0xCC0254", VA = "0xCC0254")]
	public void ShowRightController(bool show)
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0xCC15CC", Offset = "0xCC15CC", VA = "0xCC15CC")]
	public void UpdateVoiceVisualization(float[] voiceSamples)
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0xCC0D1C", Offset = "0xCC0D1C", VA = "0xCC0D1C")]
	private void RecordFrame()
	{
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0xCC1894", Offset = "0xCC1894", VA = "0xCC1894")]
	private void RecordUnityFrame()
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0xCC163C", Offset = "0xCC163C", VA = "0xCC163C")]
	private void RecordSDKFrame()
	{
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0xCC1F98", Offset = "0xCC1F98", VA = "0xCC1F98")]
	private void AddRenderParts(OvrAvatarComponent ovrComponent, ovrAvatarComponent component, Transform parent)
	{
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0xCC243C", Offset = "0xCC243C", VA = "0xCC243C")]
	public void RefreshBodyParts()
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0xCC2854", Offset = "0xCC2854", VA = "0xCC2854")]
	public ovrAvatarBodyComponent? GetBodyComponent()
	{
		return null;
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0xCC29A0", Offset = "0xCC29A0", VA = "0xCC29A0")]
	public Transform GetHandTransform(HandType hand, HandJoint joint)
	{
		return null;
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0xCC2BE0", Offset = "0xCC2BE0", VA = "0xCC2BE0")]
	public void GetPointingDirection(HandType hand, ref Vector3 forward, ref Vector3 up)
	{
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0xCC0EF4", Offset = "0xCC0EF4", VA = "0xCC0EF4")]
	private void UpdateVoiceBehavior()
	{
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0xCC2CDC", Offset = "0xCC2CDC", VA = "0xCC2CDC")]
	private bool IsValidMic()
	{
		return default(bool);
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0xCC0D2C", Offset = "0xCC0D2C", VA = "0xCC0D2C")]
	private void InitPostLoad()
	{
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0xCC2DD4", Offset = "0xCC2DD4", VA = "0xCC2DD4")]
	private static void ExpressiveGlobalInit()
	{
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0xCC34BC", Offset = "0xCC34BC", VA = "0xCC34BC")]
	private static void InitializeLights()
	{
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0xCC3ADC", Offset = "0xCC3ADC", VA = "0xCC3ADC")]
	private static ovrAvatarLight CreateLightDirectional(uint id, Vector3 direction, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0xCC3B5C", Offset = "0xCC3B5C", VA = "0xCC3B5C")]
	private static ovrAvatarLight CreateLightPoint(uint id, Vector3 position, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0xCC3BE0", Offset = "0xCC3BE0", VA = "0xCC3BE0")]
	private static ovrAvatarLight CreateLightSpot(uint id, Vector3 position, Vector3 direction, float spotAngleDeg, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0xCC13D4", Offset = "0xCC13D4", VA = "0xCC13D4")]
	private void UpdateExpressive()
	{
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0xCC2E90", Offset = "0xCC2E90", VA = "0xCC2E90")]
	private void ConfigureHelpers()
	{
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0xCC41A8", Offset = "0xCC41A8", VA = "0xCC41A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x984080", Offset = "0x984080")]
	private IEnumerator WaitForMouthAudioSource()
	{
		return null;
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0xCC4248", Offset = "0xCC4248", VA = "0xCC4248")]
	public void DestroyHelperObjects()
	{
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0xCC3FC8", Offset = "0xCC3FC8", VA = "0xCC3FC8")]
	public GameObject CreateHelperObject(Transform parent, Vector3 localPositionOffset, string helperName, string helperTag = "")
	{
		return null;
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0xCC4318", Offset = "0xCC4318", VA = "0xCC4318")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0xCC440C", Offset = "0xCC440C", VA = "0xCC440C")]
	public void UpdateVoiceData(float[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0xCC3CB8", Offset = "0xCC3CB8", VA = "0xCC3CB8")]
	private void UpdateFacewave()
	{
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0xCC4500", Offset = "0xCC4500", VA = "0xCC4500")]
	public OvrAvatar()
	{
	}
}
[Token(Token = "0x2000035")]
public class OvrAvatarAsset
{
	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong assetID;

	[Token(Token = "0x600015A")]
	[Address(RVA = "0xCC4958", Offset = "0xCC4958", VA = "0xCC4958")]
	public OvrAvatarAsset()
	{
	}
}
[Token(Token = "0x2000036")]
public class OvrAvatarAssetMesh : OvrAvatarAsset
{
	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh mesh;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAvatarSkinnedMeshPose skinnedBindPose;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string[] jointNames;

	[Token(Token = "0x600015B")]
	[Address(RVA = "0xCC4A08", Offset = "0xCC4A08", VA = "0xCC4A08")]
	public OvrAvatarAssetMesh(ulong _assetId, IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0xCC61C8", Offset = "0xCC61C8", VA = "0xCC61C8")]
	private void LoadSubmeshes(IntPtr asset, IntPtr indexBufferPtr, ulong indexCount)
	{
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0xCC5CF4", Offset = "0xCC5CF4", VA = "0xCC5CF4")]
	private void LoadBlendShapes(IntPtr asset, long vertexCount)
	{
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0xCC5A90", Offset = "0xCC5A90", VA = "0xCC5A90")]
	private void SetSkinnedBindPose(IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0xCC5B68", Offset = "0xCC5B68", VA = "0xCC5B68")]
	private void GetVertexAndIndexData(IntPtr asset, ovrAvatarAssetType meshType, out long vertexCount, out IntPtr vertexBuffer, out uint indexCount, out IntPtr indexBuffer)
	{
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0xCC64E8", Offset = "0xCC64E8", VA = "0xCC64E8")]
	public SkinnedMeshRenderer CreateSkinnedMeshRendererOnObject(GameObject target)
	{
		return null;
	}
}
[Token(Token = "0x2000037")]
public class OvrAvatarAssetTexture : OvrAvatarAsset
{
	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D texture;

	[Token(Token = "0x400010D")]
	private const int ASTCHeaderSize = 16;

	[Token(Token = "0x6000161")]
	[Address(RVA = "0xCC6CB8", Offset = "0xCC6CB8", VA = "0xCC6CB8")]
	public OvrAvatarAssetTexture(ulong _assetId, IntPtr asset)
	{
	}
}
[Token(Token = "0x2000038")]
public class OvrAvatarBase : OvrAvatarComponent
{
	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ovrAvatarBaseComponent component;

	[Token(Token = "0x6000162")]
	[Address(RVA = "0xCC6F6C", Offset = "0xCC6F6C", VA = "0xCC6F6C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0xCC7658", Offset = "0xCC7658", VA = "0xCC7658")]
	public OvrAvatarBase()
	{
	}
}
[Token(Token = "0x2000039")]
public class OvrAvatarBody : OvrAvatarComponent
{
	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ovrAvatarBodyComponent component;

	[Token(Token = "0x6000164")]
	[Address(RVA = "0xCC26E4", Offset = "0xCC26E4", VA = "0xCC26E4")]
	public ovrAvatarComponent? GetNativeAvatarComponent()
	{
		return null;
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0xCC7754", Offset = "0xCC7754", VA = "0xCC7754")]
	private void Update()
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0xCC787C", Offset = "0xCC787C", VA = "0xCC787C")]
	public OvrAvatarBody()
	{
	}
}
[Token(Token = "0x200003A")]
public class OvrAvatarComponent : MonoBehaviour
{
	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string[] LayerKeywords;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string[] LayerSampleModeParameters;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly string[] LayerBlendModeParameters;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly string[] LayerMaskTypeParameters;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly string[] LayerColorParameters;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly string[] LayerSurfaceParameters;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly string[] LayerSampleParametersParameters;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static readonly string[] LayerMaskParametersParameters;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static readonly string[] LayerMaskAxisParameters;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<Material, ovrAvatarMaterialState> materialStates;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<OvrAvatarRenderComponent> RenderParts;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected OvrAvatar owner;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected ovrAvatarComponent nativeAvatarComponent;

	[Token(Token = "0x6000167")]
	[Address(RVA = "0xCC78E0", Offset = "0xCC78E0", VA = "0xCC78E0")]
	public void SetOvrAvatarOwner(OvrAvatar ovrAvatarOwner)
	{
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0xCC7094", Offset = "0xCC7094", VA = "0xCC7094")]
	public void UpdateAvatar(IntPtr nativeComponent)
	{
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0xCC78E8", Offset = "0xCC78E8", VA = "0xCC78E8")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0xCC7988", Offset = "0xCC7988", VA = "0xCC7988")]
	public void UpdateAvatarMaterial(Material mat, ovrAvatarMaterialState matState)
	{
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0xCC84A8", Offset = "0xCC84A8", VA = "0xCC84A8")]
	public static Texture2D GetLoadedTexture(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0xCC76BC", Offset = "0xCC76BC", VA = "0xCC76BC")]
	public OvrAvatarComponent()
	{
	}
}
[Token(Token = "0x200003B")]
public abstract class OvrAvatarDriver : MonoBehaviour
{
	[Token(Token = "0x2000636")]
	public enum PacketMode
	{
		[Token(Token = "0x4001BE1")]
		SDK,
		[Token(Token = "0x4001BE2")]
		Unity
	}

	[Token(Token = "0x2000637")]
	public struct ControllerPose
	{
		[Token(Token = "0x4001BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarButton buttons;

		[Token(Token = "0x4001BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ovrAvatarTouch touches;

		[Token(Token = "0x4001BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 joystickPosition;

		[Token(Token = "0x4001BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float indexTrigger;

		[Token(Token = "0x4001BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float handTrigger;

		[Token(Token = "0x4001BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isActive;

		[Token(Token = "0x60021EB")]
		[Address(RVA = "0xCCA050", Offset = "0xCCA050", VA = "0xCCA050")]
		public static ControllerPose Interpolate(ControllerPose a, ControllerPose b, float t)
		{
			return default(ControllerPose);
		}
	}

	[Token(Token = "0x2000638")]
	public struct PoseFrame
	{
		[Token(Token = "0x4001BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 headPosition;

		[Token(Token = "0x4001BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion headRotation;

		[Token(Token = "0x4001BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 handLeftPosition;

		[Token(Token = "0x4001BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion handLeftRotation;

		[Token(Token = "0x4001BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 handRightPosition;

		[Token(Token = "0x4001BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Quaternion handRightRotation;

		[Token(Token = "0x4001BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float voiceAmplitude;

		[Token(Token = "0x4001BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ControllerPose controllerLeftPose;

		[Token(Token = "0x4001BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public ControllerPose controllerRightPose;

		[Token(Token = "0x60021EC")]
		[Address(RVA = "0xCC1B58", Offset = "0xCC1B58", VA = "0xCC1B58")]
		public static PoseFrame Interpolate(PoseFrame a, PoseFrame b, float t)
		{
			return default(PoseFrame);
		}
	}

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PacketMode Mode;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected PoseFrame CurrentPose;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private ovrAvatarControllerType ControllerType;

	[Token(Token = "0x600016E")]
	[Address(RVA = "0xCC1B48", Offset = "0xCC1B48", VA = "0xCC1B48")]
	public PoseFrame GetCurrentPose()
	{
		return default(PoseFrame);
	}

	[Token(Token = "0x600016F")]
	public abstract void UpdateTransforms(IntPtr sdkAvatar);

	[Token(Token = "0x6000170")]
	[Address(RVA = "0xCC9F04", Offset = "0xCC9F04", VA = "0xCC9F04")]
	private void Start()
	{
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0xCC02F0", Offset = "0xCC02F0", VA = "0xCC02F0")]
	public void UpdateTransformsFromPose(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0xCC9FA4", Offset = "0xCC9FA4", VA = "0xCC9FA4")]
	public static bool GetIsTrackedRemote()
	{
		return default(bool);
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0xCCA040", Offset = "0xCCA040", VA = "0xCCA040")]
	protected OvrAvatarDriver()
	{
	}
}
[Token(Token = "0x200003C")]
public class OvrAvatarHand : OvrAvatarComponent
{
	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarHandComponent component;

	[Token(Token = "0x6000174")]
	[Address(RVA = "0xCCA1A8", Offset = "0xCCA1A8", VA = "0xCCA1A8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0xCCA320", Offset = "0xCCA320", VA = "0xCCA320")]
	public OvrAvatarHand()
	{
	}
}
[Token(Token = "0x200003D")]
public class OvrAvatarLocalDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 centerEyePosition;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion centerEyeRotation;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x6000176")]
	[Address(RVA = "0xCCA38C", Offset = "0xCCA38C", VA = "0xCCA38C")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0xCCA4B8", Offset = "0xCCA4B8", VA = "0xCCA4B8")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0xCCA814", Offset = "0xCCA814", VA = "0xCCA814")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0xCCAAE4", Offset = "0xCCAAE4", VA = "0xCCAAE4", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0xCCAB10", Offset = "0xCCAB10", VA = "0xCCAB10")]
	public OvrAvatarLocalDriver()
	{
	}
}
[Token(Token = "0x200003E")]
public class OvrAvatarMaterialManager : MonoBehaviour
{
	[Token(Token = "0x2000639")]
	public enum TextureType
	{
		[Token(Token = "0x4001BF3")]
		DiffuseTextures,
		[Token(Token = "0x4001BF4")]
		NormalMaps,
		[Token(Token = "0x4001BF5")]
		RoughnessMaps,
		[Token(Token = "0x4001BF6")]
		Count
	}

	[Token(Token = "0x200063A")]
	public struct AvatarComponentMaterialProperties
	{
		[Token(Token = "0x4001BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarBodyPartType TypeIndex;

		[Token(Token = "0x4001BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Color Color;

		[Token(Token = "0x4001BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D[] Textures;

		[Token(Token = "0x4001BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float DiffuseIntensity;

		[Token(Token = "0x4001BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RimIntensity;

		[Token(Token = "0x4001BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ReflectionIntensity;
	}

	[Token(Token = "0x200063B")]
	public struct AvatarTextureArrayProperties
	{
		[Token(Token = "0x4001BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D[] Textures;

		[Token(Token = "0x4001BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2DArray TextureArray;
	}

	[Token(Token = "0x200063C")]
	public struct AvatarMaterialPropertyBlock
	{
		[Token(Token = "0x4001BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector4[] Colors;

		[Token(Token = "0x4001C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float[] DiffuseIntensities;

		[Token(Token = "0x4001C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float[] RimIntensities;

		[Token(Token = "0x4001C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] ReflectionIntensities;
	}

	[Serializable]
	[Token(Token = "0x200063D")]
	public class AvatarMaterialConfig
	{
		[Token(Token = "0x4001C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AvatarComponentMaterialProperties[] ComponentMaterialProperties;

		[Token(Token = "0x4001C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AvatarMaterialPropertyBlock MaterialPropertyBlock;

		[Token(Token = "0x60021ED")]
		[Address(RVA = "0xB26588", Offset = "0xB26588", VA = "0xB26588")]
		public AvatarMaterialConfig()
		{
		}
	}

	[Token(Token = "0x200063E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x978D14", Offset = "0x978D14")]
	private sealed class <RunLoadingAnimation>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatarMaterialManager <>4__this;

		[Token(Token = "0x4001C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action callBack;

		[Token(Token = "0x4001C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <srcBlend>5__2;

		[Token(Token = "0x4001C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <dstBlend>5__3;

		[Token(Token = "0x4001C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string <lightModeTag>5__4;

		[Token(Token = "0x4001C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string <renderTypeTag>5__5;

		[Token(Token = "0x4001C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string <renderQueueTag>5__6;

		[Token(Token = "0x4001C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string <ignoreProjectorTag>5__7;

		[Token(Token = "0x4001C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int <renderQueue>5__8;

		[Token(Token = "0x4001C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool <transparentQueue>5__9;

		[Token(Token = "0x17000312")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60021F1")]
			[Address(RVA = "0xB26510", Offset = "0xB26510", VA = "0xB26510", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000313")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60021F3")]
			[Address(RVA = "0xB26580", Offset = "0xB26580", VA = "0xB26580", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60021EE")]
		[Address(RVA = "0xB25910", Offset = "0xB25910", VA = "0xB25910")]
		[DebuggerHidden]
		public <RunLoadingAnimation>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x60021EF")]
		[Address(RVA = "0xB2593C", Offset = "0xB2593C", VA = "0xB2593C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60021F0")]
		[Address(RVA = "0xB25940", Offset = "0xB25940", VA = "0xB25940", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60021F2")]
		[Address(RVA = "0xB26518", Offset = "0xB26518", VA = "0xB26518", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer TargetRenderer;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AvatarTextureArrayProperties[] TextureArrays;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly string[] TextureTypeToShaderProperties;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AvatarMaterialConfig LocalAvatarConfig;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<ReflectionProbeBlendInfo> ReflectionProbes;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader CombinedShader;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string AVATAR_SHADER_LOADER;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string AVATAR_SHADER_MAINTEX;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string AVATAR_SHADER_NORMALMAP;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string AVATAR_SHADER_ROUGHNESSMAP;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string AVATAR_SHADER_COLOR;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string AVATAR_SHADER_DIFFUSEINTENSITY;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string AVATAR_SHADER_RIMINTENSITY;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string AVATAR_SHADER_REFLECTIONINTENSITY;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static string AVATAR_SHADER_CUBEMAP;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static string AVATAR_SHADER_ALPHA;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static string AVATAR_SHADER_LOADING_DIMMER;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static string AVATAR_SHADER_IRIS_COLOR;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static string AVATAR_SHADER_LIP_COLOR;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static string AVATAR_SHADER_BROW_COLOR;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static string AVATAR_SHADER_LASH_COLOR;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static string AVATAR_SHADER_SCLERA_COLOR;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static string AVATAR_SHADER_GUM_COLOR;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static string AVATAR_SHADER_TEETH_COLOR;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static string AVATAR_SHADER_LIP_SMOOTHNESS;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static float[] DiffuseIntensities;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static float[] RimIntensities;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static float[] ReflectionIntensities;

	[Token(Token = "0x4000141")]
	private const float LOADING_ANIMATION_AMPLITUDE = 0.5f;

	[Token(Token = "0x4000142")]
	private const float LOADING_ANIMATION_PERIOD = 0.35f;

	[Token(Token = "0x4000143")]
	private const float LOADING_ANIMATION_CURVE_SCALE = 0.25f;

	[Token(Token = "0x4000144")]
	private const float LOADING_ANIMATION_DIMMER_MIN = 0.3f;

	[Token(Token = "0x600017B")]
	[Address(RVA = "0xCCABC0", Offset = "0xCCABC0", VA = "0xCCABC0")]
	public void CreateTextureArrays()
	{
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0xCCAD88", Offset = "0xCCAD88", VA = "0xCCAD88")]
	public void SetRenderer(Renderer renderer)
	{
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0xCCADC4", Offset = "0xCCADC4", VA = "0xCCADC4")]
	public void OnCombinedMeshReady()
	{
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0xCCB910", Offset = "0xCCB910", VA = "0xCCB910")]
	public void AddTextureIDToTextureManager(ulong assetID, bool isSingleComponent)
	{
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0xCCB990", Offset = "0xCCB990", VA = "0xCCB990")]
	private void DeleteTextureSet()
	{
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0xCCAE58", Offset = "0xCCAE58", VA = "0xCCAE58")]
	public void InitTextureArrays()
	{
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0xCCB9F8", Offset = "0xCCB9F8", VA = "0xCCB9F8")]
	private void ProcessTexturesWithMips(Texture2D[] textures, int texArrayResolution, Texture2DArray texArray)
	{
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0xCCB54C", Offset = "0xCCB54C", VA = "0xCCB54C")]
	private void SetMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0xCCBB34", Offset = "0xCCBB34", VA = "0xCCBB34")]
	private void ApplyMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0xCCBED0", Offset = "0xCCBED0", VA = "0xCCBED0")]
	public static ovrAvatarBodyPartType GetComponentType(string objectName)
	{
		return default(ovrAvatarBodyPartType);
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0xCCC000", Offset = "0xCCC000", VA = "0xCCC000")]
	private ulong GetTextureIDForType(ovrAvatarPBSMaterialState materialState, TextureType type)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0xCCC038", Offset = "0xCCC038", VA = "0xCCC038")]
	public void ValidateTextures(ovrAvatarPBSMaterialState[] materialStates)
	{
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0xCCB878", Offset = "0xCCB878", VA = "0xCCB878")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9840E4", Offset = "0x9840E4")]
	private IEnumerator RunLoadingAnimation(Action callBack)
	{
		return null;
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0xCCD188", Offset = "0xCCD188", VA = "0xCCD188")]
	public OvrAvatarMaterialManager()
	{
	}
}
[Token(Token = "0x200003F")]
public class OvrAvatarPacket
{
	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr ovrNativePacket;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<float> frameTimes;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<OvrAvatarDriver.PoseFrame> frames;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<byte[]> encodedAudioPackets;

	[Token(Token = "0x17000017")]
	public float Duration
	{
		[Token(Token = "0x600018A")]
		[Address(RVA = "0xB26590", Offset = "0xB26590", VA = "0xB26590")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000018")]
	public OvrAvatarDriver.PoseFrame FinalFrame
	{
		[Token(Token = "0x600018B")]
		[Address(RVA = "0xB26630", Offset = "0xB26630", VA = "0xB26630")]
		get
		{
			return default(OvrAvatarDriver.PoseFrame);
		}
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0xB266E0", Offset = "0xB266E0", VA = "0xB266E0")]
	public OvrAvatarPacket()
	{
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0xB267A4", Offset = "0xB267A4", VA = "0xB267A4")]
	public OvrAvatarPacket(OvrAvatarDriver.PoseFrame initialPose)
	{
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0xB268F4", Offset = "0xB268F4", VA = "0xB268F4")]
	private OvrAvatarPacket(List<float> frameTimes, List<OvrAvatarDriver.PoseFrame> frames, List<byte[]> audioPackets)
	{
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0xB269D0", Offset = "0xB269D0", VA = "0xB269D0")]
	public void AddFrame(OvrAvatarDriver.PoseFrame frame, float deltaSeconds)
	{
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0xB26AB0", Offset = "0xB26AB0", VA = "0xB26AB0")]
	public OvrAvatarDriver.PoseFrame GetPoseFrame(float seconds)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0xB26CE4", Offset = "0xB26CE4", VA = "0xB26CE4")]
	public static OvrAvatarPacket Read(Stream stream)
	{
		return null;
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0xB26F64", Offset = "0xB26F64", VA = "0xB26F64")]
	public void Write(Stream stream)
	{
	}
}
[Token(Token = "0x2000040")]
internal static class BinaryWriterExtensions
{
	[Token(Token = "0x6000193")]
	[Address(RVA = "0xC0D52C", Offset = "0xC0D52C", VA = "0xC0D52C")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.PoseFrame frame)
	{
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0xC0D650", Offset = "0xC0D650", VA = "0xC0D650")]
	public static void Write(this BinaryWriter writer, Vector3 vec3)
	{
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0xC0D8DC", Offset = "0xC0D8DC", VA = "0xC0D8DC")]
	public static void Write(this BinaryWriter writer, Vector2 vec2)
	{
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0xC0D704", Offset = "0xC0D704", VA = "0xC0D704")]
	public static void Write(this BinaryWriter writer, Quaternion quat)
	{
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0xC0D7E0", Offset = "0xC0D7E0", VA = "0xC0D7E0")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.ControllerPose pose)
	{
	}
}
[Token(Token = "0x2000041")]
internal static class BinaryReaderExtensions
{
	[Token(Token = "0x6000198")]
	[Address(RVA = "0xC0D09C", Offset = "0xC0D09C", VA = "0xC0D09C")]
	public static OvrAvatarDriver.PoseFrame ReadPoseFrame(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0xC0D4C0", Offset = "0xC0D4C0", VA = "0xC0D4C0")]
	public static Vector2 ReadVector2(this BinaryReader reader)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0xC0D244", Offset = "0xC0D244", VA = "0xC0D244")]
	public static Vector3 ReadVector3(this BinaryReader reader)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0xC0D2D8", Offset = "0xC0D2D8", VA = "0xC0D2D8")]
	public static Quaternion ReadQuaternion(this BinaryReader reader)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0xC0D39C", Offset = "0xC0D39C", VA = "0xC0D39C")]
	public static OvrAvatarDriver.ControllerPose ReadControllerPose(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.ControllerPose);
	}
}
[Token(Token = "0x2000042")]
public class OvrAvatarRemoteDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Queue<OvrAvatarPacket> packetQueue;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private IntPtr CurrentSDKPacket;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float CurrentPacketTime;

	[Token(Token = "0x400014C")]
	private const int MinPacketQueue = 1;

	[Token(Token = "0x400014D")]
	private const int MaxPacketQueue = 4;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int CurrentSequence;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool isStreaming;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private OvrAvatarPacket currentPacket;

	[Token(Token = "0x600019D")]
	[Address(RVA = "0xB271B0", Offset = "0xB271B0", VA = "0xB271B0")]
	public void QueuePacket(int sequence, OvrAvatarPacket packet)
	{
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0xB27244", Offset = "0xB27244", VA = "0xB27244", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0xB27260", Offset = "0xB27260", VA = "0xB27260")]
	private void UpdateFromSDKPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0xB27464", Offset = "0xB27464", VA = "0xB27464")]
	private void UpdateFromUnityPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0xB276B0", Offset = "0xB276B0", VA = "0xB276B0")]
	public OvrAvatarRemoteDriver()
	{
	}
}
[Token(Token = "0x2000043")]
public class OvrAvatarRenderComponent : MonoBehaviour
{
	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool firstSkinnedUpdate;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SkinnedMeshRenderer mesh;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] bones;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isBodyComponent;

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0xB27728", Offset = "0xB27728", VA = "0xB27728")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0xB27870", Offset = "0xB27870", VA = "0xB27870")]
	protected SkinnedMeshRenderer CreateSkinnedMesh(ulong assetID, ovrAvatarVisibilityFlags visibilityMask, int thirdPersonLayer, int firstPersonLayer)
	{
		return null;
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0xB27B98", Offset = "0xB27B98", VA = "0xB27B98")]
	protected void UpdateSkinnedMesh(OvrAvatar avatar, Transform[] bones, ovrAvatarTransform localTransform, ovrAvatarVisibilityFlags visibilityMask, IntPtr renderPart)
	{
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0xB27F4C", Offset = "0xB27F4C", VA = "0xB27F4C")]
	protected Material CreateAvatarMaterial(string name, Shader shader)
	{
		return null;
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0xB28050", Offset = "0xB28050", VA = "0xB28050")]
	public OvrAvatarRenderComponent()
	{
	}
}
[Token(Token = "0x2000044")]
[Flags]
public enum ovrAvatarCapabilities
{
	[Token(Token = "0x4000156")]
	Body = 1,
	[Token(Token = "0x4000157")]
	Hands = 2,
	[Token(Token = "0x4000158")]
	Base = 4,
	[Token(Token = "0x4000159")]
	BodyTilt = 0x10,
	[Token(Token = "0x400015A")]
	Expressive = 0x20,
	[Token(Token = "0x400015B")]
	All = -1
}
[Token(Token = "0x2000045")]
public enum ovrAvatarMessageType
{
	[Token(Token = "0x400015D")]
	AvatarSpecification,
	[Token(Token = "0x400015E")]
	AssetLoaded,
	[Token(Token = "0x400015F")]
	Count
}
[Token(Token = "0x2000046")]
public struct ovrAvatarMessage_AvatarSpecification
{
	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public IntPtr avatarSpec;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ulong oculusUserID;
}
[Token(Token = "0x2000047")]
public struct ovrAvatarMessage_AssetLoaded
{
	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ulong assetID;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr asset;
}
[Token(Token = "0x2000048")]
public enum ovrAvatarAssetType
{
	[Token(Token = "0x4000165")]
	Mesh,
	[Token(Token = "0x4000166")]
	Texture,
	[Token(Token = "0x4000167")]
	Pose,
	[Token(Token = "0x4000168")]
	Material,
	[Token(Token = "0x4000169")]
	CombinedMesh,
	[Token(Token = "0x400016A")]
	PBSMaterial,
	[Token(Token = "0x400016B")]
	FailedLoad,
	[Token(Token = "0x400016C")]
	Count
}
[Token(Token = "0x2000049")]
public struct ovrAvatarMeshVertex
{
	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public byte[] blendIndices;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float[] blendWeights;
}
[Token(Token = "0x200004A")]
public struct ovrAvatarMeshVertexV2
{
	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float r;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float g;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float b;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float a;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public byte[] blendIndices;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float[] blendWeights;
}
[Token(Token = "0x200004B")]
public struct ovrAvatarBlendVertex
{
	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;
}
[Token(Token = "0x200004C")]
public struct ovrAvatarMeshAssetData
{
	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x200004D")]
public struct ovrAvatarMeshAssetDataV2
{
	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x200004E")]
public enum ovrAvatarTextureFormat
{
	[Token(Token = "0x40001A1")]
	RGB24,
	[Token(Token = "0x40001A2")]
	DXT1,
	[Token(Token = "0x40001A3")]
	DXT5,
	[Token(Token = "0x40001A4")]
	ASTC_RGB_6x6,
	[Token(Token = "0x40001A5")]
	ASTC_RGB_6x6_MIPMAPS,
	[Token(Token = "0x40001A6")]
	Count
}
[Token(Token = "0x200004F")]
public struct ovrAvatarTextureAssetData
{
	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTextureFormat format;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint sizeX;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public uint sizeY;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public uint mipCount;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong textureDataSize;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr textureData;
}
[Token(Token = "0x2000050")]
public enum ovrAvatarRenderPartType
{
	[Token(Token = "0x40001AE")]
	SkinnedMeshRender,
	[Token(Token = "0x40001AF")]
	SkinnedMeshRenderPBS,
	[Token(Token = "0x40001B0")]
	ProjectorRender,
	[Token(Token = "0x40001B1")]
	SkinnedMeshRenderPBS_V2,
	[Token(Token = "0x40001B2")]
	Count
}
[Token(Token = "0x2000051")]
public enum ovrAvatarLogLevel
{
	[Token(Token = "0x40001B4")]
	Unknown,
	[Token(Token = "0x40001B5")]
	Default,
	[Token(Token = "0x40001B6")]
	Verbose,
	[Token(Token = "0x40001B7")]
	Debug,
	[Token(Token = "0x40001B8")]
	Info,
	[Token(Token = "0x40001B9")]
	Warn,
	[Token(Token = "0x40001BA")]
	Error,
	[Token(Token = "0x40001BB")]
	Fatal,
	[Token(Token = "0x40001BC")]
	Silent
}
[Token(Token = "0x2000052")]
public struct ovrAvatarTransform
{
	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 position;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Quaternion orientation;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 scale;
}
[Token(Token = "0x2000053")]
[Flags]
public enum ovrAvatarButton
{
	[Token(Token = "0x40001C1")]
	One = 1,
	[Token(Token = "0x40001C2")]
	Two = 2,
	[Token(Token = "0x40001C3")]
	Three = 4,
	[Token(Token = "0x40001C4")]
	Joystick = 8
}
[Token(Token = "0x2000054")]
[Flags]
public enum ovrAvatarTouch
{
	[Token(Token = "0x40001C6")]
	One = 1,
	[Token(Token = "0x40001C7")]
	Two = 2,
	[Token(Token = "0x40001C8")]
	Joystick = 4,
	[Token(Token = "0x40001C9")]
	ThumbRest = 8,
	[Token(Token = "0x40001CA")]
	Index = 0x10,
	[Token(Token = "0x40001CB")]
	Pointing = 0x40,
	[Token(Token = "0x40001CC")]
	ThumbUp = 0x80
}
[Token(Token = "0x2000055")]
public struct ovrAvatarHandInputState
{
	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarButton buttonMask;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public ovrAvatarTouch touchMask;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float joystickX;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float joystickY;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float indexTrigger;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float handTrigger;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isActive;
}
[Token(Token = "0x2000056")]
public struct ovrAvatarComponent
{
	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint renderPartCount;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr renderParts;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string name;
}
[Token(Token = "0x2000057")]
internal struct ovrAvatarComponent_Offsets
{
	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long transform;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int renderPartCount;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int renderParts;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int name;
}
[Token(Token = "0x2000058")]
public struct ovrAvatarBaseComponent
{
	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 basePosition;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000059")]
public struct ovrAvatarBodyComponent
{
	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform leftEyeTransform;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarTransform rightEyeTransform;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ovrAvatarTransform centerEyeTransform;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public IntPtr renderComponent;
}
[Token(Token = "0x200005A")]
public struct ovrAvatarBodyComponent_Offsets
{
	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long leftEyeTransform;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long rightEyeTransform;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long centerEyeTransform;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long renderComponent;
}
[Token(Token = "0x200005B")]
public struct ovrAvatarControllerComponent
{
	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x200005C")]
public struct ovrAvatarHandComponent
{
	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x200005D")]
public enum ovrAvatarMaterialLayerBlendMode
{
	[Token(Token = "0x40001EC")]
	Add,
	[Token(Token = "0x40001ED")]
	Multiply,
	[Token(Token = "0x40001EE")]
	Count
}
[Token(Token = "0x200005E")]
public enum ovrAvatarMaterialLayerSampleMode
{
	[Token(Token = "0x40001F0")]
	Color,
	[Token(Token = "0x40001F1")]
	Texture,
	[Token(Token = "0x40001F2")]
	TextureSingleChannel,
	[Token(Token = "0x40001F3")]
	Parallax,
	[Token(Token = "0x40001F4")]
	Count
}
[Token(Token = "0x200005F")]
public enum ovrAvatarMaterialMaskType
{
	[Token(Token = "0x40001F6")]
	None,
	[Token(Token = "0x40001F7")]
	Positional,
	[Token(Token = "0x40001F8")]
	ViewReflection,
	[Token(Token = "0x40001F9")]
	Fresnel,
	[Token(Token = "0x40001FA")]
	Pulse,
	[Token(Token = "0x40001FB")]
	Count
}
[Token(Token = "0x2000060")]
public enum ovrAvatarControllerType
{
	[Token(Token = "0x40001FD")]
	Touch,
	[Token(Token = "0x40001FE")]
	Malibu,
	[Token(Token = "0x40001FF")]
	Go,
	[Token(Token = "0x4000200")]
	Quest,
	[Token(Token = "0x4000201")]
	Count
}
[Token(Token = "0x2000061")]
public enum ovrAvatarAssetLevelOfDetail
{
	[Token(Token = "0x4000203")]
	Lowest = 1,
	[Token(Token = "0x4000204")]
	Medium = 3,
	[Token(Token = "0x4000205")]
	Highest = 5
}
[Token(Token = "0x2000062")]
public enum ovrAvatarLookAndFeelVersion
{
	[Token(Token = "0x4000207")]
	Unknown = -1,
	[Token(Token = "0x4000208")]
	One,
	[Token(Token = "0x4000209")]
	Two
}
[Token(Token = "0x2000063")]
public struct ovrAvatarMaterialLayerState
{
	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarMaterialLayerBlendMode blendMode;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarMaterialMaskType maskType;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector4 layerColor;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector4 sampleParameters;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong sampleTexture;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector4 sampleScaleOffset;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector4 maskParameters;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 maskAxis;

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0xF50544", Offset = "0xF50544", VA = "0xF50544")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0xA3A510", Offset = "0xA3A510", VA = "0xA3A510", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0xA3A518", Offset = "0xA3A518", VA = "0xA3A518", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000064")]
public struct ovrAvatarMaterialState
{
	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarMaterialMaskType baseMaskType;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector4 baseMaskParameters;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector4 baseMaskAxis;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong alphaMaskTextureID;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 alphaMaskScaleOffset;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong normalMapTextureID;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 normalMapScaleOffset;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong parallaxMapTextureID;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector4 parallaxMapScaleOffset;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ulong roughnessMapTextureID;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector4 roughnessMapScaleOffset;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public uint layerCount;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ovrAvatarMaterialLayerState[] layers;

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0xF50874", Offset = "0xF50874", VA = "0xF50874")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0xA3A7B8", Offset = "0xA3A7B8", VA = "0xA3A7B8", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0xA3A7C0", Offset = "0xA3A7C0", VA = "0xA3A7C0", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000065")]
public struct ovrAvatarExpressiveParameters
{
	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 irisColor;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector4 scleraColor;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector4 lashColor;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector4 browColor;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 lipColor;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector4 teethColor;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector4 gumColor;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float browLashIntensity;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float lipSmoothness;

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0xF4FBEC", Offset = "0xF4FBEC", VA = "0xF4FBEC")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0xA3A258", Offset = "0xA3A258", VA = "0xA3A258", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0xA3A260", Offset = "0xA3A260", VA = "0xA3A260", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000066")]
public struct ovrAvatarPBSMaterialState
{
	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong albedoTextureID;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector4 albedoMultiplier;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ulong metallicnessTextureID;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float glossinessScale;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong normalTextureID;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong heightTextureID;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ulong occlusionTextureID;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong emissionTextureID;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 emissionMultiplier;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong detailMaskTextureID;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ulong detailAlbedoTextureID;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ulong detailNormalTextureID;

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0xF50DD4", Offset = "0xF50DD4", VA = "0xF50DD4")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0xA3B070", Offset = "0xA3B070", VA = "0xA3B070", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0xA3B078", Offset = "0xA3B078", VA = "0xA3B078", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000067")]
public class OvrAvatarAssetMaterial : OvrAvatarAsset
{
	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarMaterialState material;

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0xCC4960", Offset = "0xCC4960", VA = "0xCC4960")]
	public OvrAvatarAssetMaterial(ulong id, IntPtr mat)
	{
	}
}
[Token(Token = "0x2000068")]
public struct ovrAvatarSkinnedMeshPose
{
	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint jointCount;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarTransform[] jointTransform;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int[] jointParents;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr[] jointNames;
}
[Token(Token = "0x2000069")]
[Flags]
public enum ovrAvatarVisibilityFlags
{
	[Token(Token = "0x400023E")]
	FirstPerson = 1,
	[Token(Token = "0x400023F")]
	ThirdPerson = 2,
	[Token(Token = "0x4000240")]
	SelfOccluding = 4
}
[Token(Token = "0x200006A")]
public struct ovrAvatarRenderPart_SkinnedMeshRender
{
	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarMaterialState materialState;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x200006B")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS
{
	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong albedoTextureAssetID;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong surfaceTextureAssetID;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x200006C")]
public struct ovrAvatarRenderPart_ProjectorRender
{
	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint componentIndex;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public uint renderPartIndex;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ovrAvatarMaterialState materialState;
}
[Token(Token = "0x200006D")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2
{
	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarPBSMaterialState materialState;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x200006E")]
public enum ovrAvatarHandGesture
{
	[Token(Token = "0x4000256")]
	Default,
	[Token(Token = "0x4000257")]
	GripSphere,
	[Token(Token = "0x4000258")]
	GripCube,
	[Token(Token = "0x4000259")]
	Count
}
[Token(Token = "0x200006F")]
public enum ovrAvatarBodyPartType
{
	[Token(Token = "0x400025B")]
	Body,
	[Token(Token = "0x400025C")]
	Clothing,
	[Token(Token = "0x400025D")]
	Eyewear,
	[Token(Token = "0x400025E")]
	Hair,
	[Token(Token = "0x400025F")]
	Beard,
	[Token(Token = "0x4000260")]
	Count
}
[Token(Token = "0x2000070")]
public struct ovrAvatarBlendShapeParams
{
	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint blendShapeParamCount;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] blendShapeParams;
}
[Token(Token = "0x2000071")]
internal struct ovrAvatarBlendShapeParams_Offsets
{
	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int blendShapeParamCount;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long blendShapeParams;
}
[Token(Token = "0x2000072")]
public struct ovrAvatarVisemes
{
	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint visemeParamCount;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] visemeParams;
}
[Token(Token = "0x2000073")]
internal struct ovrAvatarVisemes_Offsets
{
	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int visemeParamCount;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long visemeParams;
}
[Token(Token = "0x2000074")]
public enum ovrAvatarGazeTargetType
{
	[Token(Token = "0x400026A")]
	AvatarHead,
	[Token(Token = "0x400026B")]
	AvatarHand,
	[Token(Token = "0x400026C")]
	Object,
	[Token(Token = "0x400026D")]
	ObjectStatic,
	[Token(Token = "0x400026E")]
	Count
}
[Token(Token = "0x2000075")]
public struct ovrAvatarGazeTarget
{
	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public Vector3 worldPosition;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarGazeTargetType type;
}
[Token(Token = "0x2000076")]
internal struct ovrAvatarGazeTarget_Offsets
{
	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int id;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int worldPosition;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int type;
}
[Token(Token = "0x2000077")]
public struct ovrAvatarGazeTargets
{
	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint targetCount;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarGazeTarget[] targets;
}
[Token(Token = "0x2000078")]
internal struct ovrAvatarGazeTargets_Offsets
{
	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int targetCount;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long targets;
}
[Token(Token = "0x2000079")]
public enum ovrAvatarLightType
{
	[Token(Token = "0x400027A")]
	Point,
	[Token(Token = "0x400027B")]
	Direction,
	[Token(Token = "0x400027C")]
	Spot,
	[Token(Token = "0x400027D")]
	Count
}
[Token(Token = "0x200007A")]
public struct ovrAvatarLight
{
	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarLightType type;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float intensity;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 worldDirection;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 worldPosition;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float range;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float spotAngleDeg;
}
[Token(Token = "0x200007B")]
internal struct ovrAvatarLight_Offsets
{
	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long id;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long type;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long intensity;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long worldDirection;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static long worldPosition;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static long range;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static long spotAngleDeg;
}
[Token(Token = "0x200007C")]
public struct ovrAvatarLights
{
	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float ambientIntensity;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint lightCount;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarLight[] lights;
}
[Token(Token = "0x200007D")]
internal struct ovrAvatarLights_Offsets
{
	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long ambientIntensity;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long lightCount;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long lights;
}
[Token(Token = "0x200007E")]
[Flags]
public enum ovrAvatarDebugContext : uint
{
	[Token(Token = "0x4000293")]
	None = 0u,
	[Token(Token = "0x4000294")]
	GazeTarget = 1u,
	[Token(Token = "0x4000295")]
	Any = uint.MaxValue
}
[Token(Token = "0x200007F")]
public struct ovrAvatarDebugLine
{
	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 startPoint;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 endPoint;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 color;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IntPtr text;
}
[Token(Token = "0x2000080")]
public struct ovrAvatarDebugTransform
{
	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr text;
}
[Token(Token = "0x2000081")]
public delegate void specificationCallback(IntPtr specification);
[Token(Token = "0x2000082")]
public delegate void assetLoadedCallback(OvrAvatarAsset asset);
[Token(Token = "0x2000083")]
public delegate void combinedMeshLoadedCallback(IntPtr asset);
[Token(Token = "0x2000084")]
public class OvrAvatarSDKManager : MonoBehaviour
{
	[Token(Token = "0x200063F")]
	public struct AvatarSpecRequestParams
	{
		[Token(Token = "0x4001C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong _userId;

		[Token(Token = "0x4001C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public specificationCallback _callback;

		[Token(Token = "0x4001C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool _useCombinedMesh;

		[Token(Token = "0x4001C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ovrAvatarAssetLevelOfDetail _lod;

		[Token(Token = "0x4001C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool _forceMobileTextureFormat;

		[Token(Token = "0x4001C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ovrAvatarLookAndFeelVersion _lookVersion;

		[Token(Token = "0x4001C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ovrAvatarLookAndFeelVersion _fallbackVersion;

		[Token(Token = "0x4001C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool _enableExpressive;

		[Token(Token = "0x60021F4")]
		[Address(RVA = "0xA290E4", Offset = "0xA290E4", VA = "0xA290E4")]
		public AvatarSpecRequestParams(ulong userId, specificationCallback callback, bool useCombinedMesh, ovrAvatarAssetLevelOfDetail lod, bool forceMobileTextureFormat, ovrAvatarLookAndFeelVersion lookVersion, ovrAvatarLookAndFeelVersion fallbackVersion, bool enableExpressive)
		{
		}
	}

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSDKManager _instance;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool initialized;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<ulong, HashSet<specificationCallback>> specificationCallbacks;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<ulong, HashSet<assetLoadedCallback>> assetLoadedCallbacks;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<IntPtr, combinedMeshLoadedCallback> combinedMeshLoadedCallbacks;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<ulong, OvrAvatarAsset> assetCache;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OvrAvatarTextureCopyManager textureCopyManager;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarLogLevel LoggingLevel;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Queue<AvatarSpecRequestParams> avatarSpecificationQueue;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<int> loadingAvatars;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool avatarSpecRequestAvailable;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float lastDispatchedAvatarSpecRequestTime;

	[Token(Token = "0x40002AA")]
	private const float AVATAR_SPEC_REQUEST_TIMEOUT = 5f;

	[Token(Token = "0x17000019")]
	public static OvrAvatarSDKManager Instance
	{
		[Token(Token = "0x60001C8")]
		[Address(RVA = "0xB2624C", Offset = "0xB2624C", VA = "0xB2624C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0xB28060", Offset = "0xB28060", VA = "0xB28060")]
	private bool Initialize()
	{
		return default(bool);
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0xB28288", Offset = "0xB28288", VA = "0xB28288")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0xB282FC", Offset = "0xB282FC", VA = "0xB282FC")]
	private void Update()
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0xB28C88", Offset = "0xB28C88", VA = "0xB28C88")]
	public bool IsAvatarSpecWaiting()
	{
		return default(bool);
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0xB28CF4", Offset = "0xB28CF4", VA = "0xB28CF4")]
	public bool IsAvatarLoading()
	{
		return default(bool);
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0xB28D60", Offset = "0xB28D60", VA = "0xB28D60")]
	public void AddLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0xB28DD0", Offset = "0xB28DD0", VA = "0xB28DD0")]
	public void RemoveLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0xB28E40", Offset = "0xB28E40", VA = "0xB28E40")]
	public void RequestAvatarSpecification(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0xB28A84", Offset = "0xB28A84", VA = "0xB28A84")]
	private void DispatchAvatarSpecificationRequest(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0xB28F64", Offset = "0xB28F64", VA = "0xB28F64")]
	public void BeginLoadingAsset(ulong assetId, ovrAvatarAssetLevelOfDetail lod, assetLoadedCallback callback)
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0xB290A0", Offset = "0xB290A0", VA = "0xB290A0")]
	public void RegisterCombinedMeshCallback(IntPtr sdkAvatar, combinedMeshLoadedCallback callback)
	{
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0xB27B10", Offset = "0xB27B10", VA = "0xB27B10")]
	public OvrAvatarAsset GetAsset(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0xB2919C", Offset = "0xB2919C", VA = "0xB2919C")]
	public void DeleteAssetFromCache(ulong assetId)
	{
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0xB28260", Offset = "0xB28260", VA = "0xB28260")]
	public string GetAppId()
	{
		return null;
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0xB2642C", Offset = "0xB2642C", VA = "0xB2642C")]
	public OvrAvatarTextureCopyManager GetTextureCopyManager()
	{
		return null;
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0xB292A0", Offset = "0xB292A0", VA = "0xB292A0")]
	public OvrAvatarSDKManager()
	{
	}
}
[Token(Token = "0x2000085")]
public sealed class OvrAvatarSettings : ScriptableObject
{
	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSettings instance;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string ovrAppID;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string ovrGearAppID;

	[Token(Token = "0x1700001A")]
	public static string AppID
	{
		[Token(Token = "0x60001D9")]
		[Address(RVA = "0xB29248", Offset = "0xB29248", VA = "0xB29248")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001DA")]
		[Address(RVA = "0xB293F8", Offset = "0xB293F8", VA = "0xB293F8")]
		set
		{
		}
	}

	[Token(Token = "0x1700001B")]
	public static string MobileAppID
	{
		[Token(Token = "0x60001DB")]
		[Address(RVA = "0xB29274", Offset = "0xB29274", VA = "0xB29274")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001DC")]
		[Address(RVA = "0xB29428", Offset = "0xB29428", VA = "0xB29428")]
		set
		{
		}
	}

	[Token(Token = "0x1700001C")]
	public static OvrAvatarSettings Instance
	{
		[Token(Token = "0x60001DD")]
		[Address(RVA = "0xB292E4", Offset = "0xB292E4", VA = "0xB292E4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001DE")]
		[Address(RVA = "0xB29458", Offset = "0xB29458", VA = "0xB29458")]
		set
		{
		}
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0xB294AC", Offset = "0xB294AC", VA = "0xB294AC")]
	public OvrAvatarSettings()
	{
	}
}
[Token(Token = "0x2000086")]
public class OvrAvatarSkinnedMeshRenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Shader surface;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader surfaceSelfOccluding;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool previouslyActive;

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0xB2BC98", Offset = "0xB2BC98", VA = "0xB2BC98")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender, Shader surface, Shader surfaceSelfOccluding, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0xB2BF84", Offset = "0xB2BF84", VA = "0xB2BF84")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0xB2BDEC", Offset = "0xB2BDEC", VA = "0xB2BDEC")]
	private void UpdateMeshMaterial(ovrAvatarVisibilityFlags visibilityMask, SkinnedMeshRenderer rootMesh)
	{
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0xB2C1D0", Offset = "0xB2C1D0", VA = "0xB2C1D0")]
	public OvrAvatarSkinnedMeshRenderComponent()
	{
	}
}
[Token(Token = "0x2000087")]
public class OvrAvatarSkinnedMeshRenderPBSComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool isMaterialInitilized;

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0xB2C1E0", Offset = "0xB2C1E0", VA = "0xB2C1E0")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS, Shader shader, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0xB2C330", Offset = "0xB2C330", VA = "0xB2C330")]
	internal void UpdateSkinnedMeshRenderPBS(OvrAvatar avatar, IntPtr renderPart, Material mat)
	{
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0xB2C4E8", Offset = "0xB2C4E8", VA = "0xB2C4E8")]
	public OvrAvatarSkinnedMeshRenderPBSComponent()
	{
	}
}
[Token(Token = "0x2000088")]
public class OvrAvatarSkinnedMeshPBSV2RenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OvrAvatarMaterialManager avatarMaterialManager;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool previouslyActive;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool isCombinedMaterial;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private ovrAvatarExpressiveParameters ExpressiveParameters;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool EnableExpressive;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int blendShapeCount;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ovrAvatarBlendShapeParams blendShapeParams;

	[Token(Token = "0x40002B9")]
	private const string MAIN_MATERIAL_NAME = "main_material";

	[Token(Token = "0x40002BA")]
	private const string EYE_MATERIAL_NAME = "eye_material";

	[Token(Token = "0x40002BB")]
	private const string DEFAULT_MATERIAL_NAME = "_material";

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0xB29504", Offset = "0xB29504", VA = "0xB29504")]
	internal void Initialize(IntPtr renderPart, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRender, OvrAvatarMaterialManager materialManager, int thirdPersonLayer, int firstPersonLayer, bool combinedMesh, ovrAvatarAssetLevelOfDetail lod, bool assignExpressiveParams, OvrAvatar avatar, bool isControllerModel)
	{
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0xB2ACC8", Offset = "0xB2ACC8", VA = "0xB2ACC8")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0xB2AF14", Offset = "0xB2AF14", VA = "0xB2AF14")]
	private void InitializeSingleComponentMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0xB29DD8", Offset = "0xB29DD8", VA = "0xB29DD8")]
	private void InitializeCombinedMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0xB299A0", Offset = "0xB299A0", VA = "0xB299A0")]
	private void SetMaterialTransparent(Material mat)
	{
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0xB29BB4", Offset = "0xB29BB4", VA = "0xB29BB4")]
	private void SetMaterialOpaque(Material mat)
	{
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0xB2BC88", Offset = "0xB2BC88", VA = "0xB2BC88")]
	public OvrAvatarSkinnedMeshPBSV2RenderComponent()
	{
	}
}
[Token(Token = "0x2000089")]
public class OvrAvatarTextureCopyManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000640")]
	public struct FallbackTextureSet
	{
		[Token(Token = "0x4001C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool Initialized;

		[Token(Token = "0x4001C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2D DiffuseRoughness;

		[Token(Token = "0x4001C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D Normal;
	}

	[Token(Token = "0x2000641")]
	private struct CopyTextureParams
	{
		[Token(Token = "0x4001C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture Src;

		[Token(Token = "0x4001C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture Dst;

		[Token(Token = "0x4001C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Mip;

		[Token(Token = "0x4001C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int SrcSize;

		[Token(Token = "0x4001C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int DstElement;

		[Token(Token = "0x60021F5")]
		[Address(RVA = "0xA2915C", Offset = "0xA2915C", VA = "0xA2915C")]
		public CopyTextureParams(Texture src, Texture dst, int mip, int srcSize, int dstElement)
		{
		}
	}

	[Token(Token = "0x2000642")]
	public struct TextureSet
	{
		[Token(Token = "0x4001C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<ulong, bool> TextureIDSingleMeshPair;

		[Token(Token = "0x4001C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsProcessed;

		[Token(Token = "0x60021F6")]
		[Address(RVA = "0xA29204", Offset = "0xA29204", VA = "0xA29204")]
		public TextureSet(Dictionary<ulong, bool> textureIDSingleMeshPair, bool isProcessed)
		{
		}
	}

	[Token(Token = "0x2000643")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x978D24", Offset = "0x978D24")]
	private sealed class <DeleteTextureSetCoroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextureSet textureSetToDelete;

		[Token(Token = "0x4001C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public OvrAvatarTextureCopyManager <>4__this;

		[Token(Token = "0x4001C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int gameobjectID;

		[Token(Token = "0x17000314")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60021FA")]
			[Address(RVA = "0xB2E20C", Offset = "0xB2E20C", VA = "0xB2E20C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000315")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60021FC")]
			[Address(RVA = "0xB2E27C", Offset = "0xB2E27C", VA = "0xB2E27C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60021F7")]
		[Address(RVA = "0xB2D90C", Offset = "0xB2D90C", VA = "0xB2D90C")]
		[DebuggerHidden]
		public <DeleteTextureSetCoroutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x60021F8")]
		[Address(RVA = "0xB2DB44", Offset = "0xB2DB44", VA = "0xB2DB44", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60021F9")]
		[Address(RVA = "0xB2DB48", Offset = "0xB2DB48", VA = "0xB2DB48", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60021FB")]
		[Address(RVA = "0xB2E214", Offset = "0xB2E214", VA = "0xB2E214", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FallbackTextureSet[] FallbackTextureSets;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Queue<CopyTextureParams> texturesToCopy;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, TextureSet> textureSets;

	[Token(Token = "0x40002BF")]
	private const int TEXTURES_TO_COPY_QUEUE_CAPACITY = 256;

	[Token(Token = "0x40002C0")]
	private const int COPIES_PER_FRAME = 8;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_DIFFUSE_ROUGHNESS;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_NORMAL;

	[Token(Token = "0x40002C3")]
	private const string PATH_HIGHEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_2048";

	[Token(Token = "0x40002C4")]
	private const string PATH_MEDIUM_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_1024";

	[Token(Token = "0x40002C5")]
	private const string PATH_LOWEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_256";

	[Token(Token = "0x40002C6")]
	private const string PATH_HIGHEST_NORMAL = "FallbackTextures/fallback_normal_2048";

	[Token(Token = "0x40002C7")]
	private const string PATH_MEDIUM_NORMAL = "FallbackTextures/fallback_normal_1024";

	[Token(Token = "0x40002C8")]
	private const string PATH_LOWEST_NORMAL = "FallbackTextures/fallback_normal_256";

	[Token(Token = "0x40002C9")]
	private const int GPU_TEXTURE_COPY_WAIT_TIME = 10;

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0xB2CCC4", Offset = "0xB2CCC4", VA = "0xB2CCC4")]
	public OvrAvatarTextureCopyManager()
	{
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0xB2D18C", Offset = "0xB2D18C", VA = "0xB2D18C")]
	public void Update()
	{
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0xB264B0", Offset = "0xB264B0", VA = "0xB264B0")]
	public int GetTextureCount()
	{
		return default(int);
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0xB2D3C4", Offset = "0xB2D3C4", VA = "0xB2D3C4")]
	public void CopyTexture(Texture src, Texture dst, int mipLevel, int mipSize, int dstElement, bool useQueue = true)
	{
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0xB2D334", Offset = "0xB2D334", VA = "0xB2D334")]
	private void CopyTexture(CopyTextureParams copyTextureParams)
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0xB2D580", Offset = "0xB2D580", VA = "0xB2D580")]
	public void AddTextureIDToTextureSet(int gameobjectID, ulong textureID, bool isSingleMesh)
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0xB2D798", Offset = "0xB2D798", VA = "0xB2D798")]
	public void DeleteTextureSet(int gameobjectID)
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0xB2D848", Offset = "0xB2D848", VA = "0xB2D848")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9841E8", Offset = "0x9841E8")]
	private IEnumerator DeleteTextureSetCoroutine(TextureSet textureSetToDelete, int gameobjectID)
	{
		return null;
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0xB28EE4", Offset = "0xB28EE4", VA = "0xB28EE4")]
	public void CheckFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0xB2D938", Offset = "0xB2D938", VA = "0xB2D938")]
	private void InitFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}
}
[Token(Token = "0x200008A")]
public class OvrAvatarTouchController : OvrAvatarComponent
{
	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarControllerComponent component;

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0xB2E284", Offset = "0xB2E284", VA = "0xB2E284")]
	private void Update()
	{
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0xB2E400", Offset = "0xB2E400", VA = "0xB2E400")]
	public OvrAvatarTouchController()
	{
	}
}
[Token(Token = "0x200008B")]
public class EnableSwitch : MonoBehaviour
{
	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] SwitchTargets;

	[Token(Token = "0x60001FA")]
	public bool SetActive<T>(int target) where T : MonoBehaviour
	{
		return default(bool);
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0xC1ADD8", Offset = "0xC1ADD8", VA = "0xC1ADD8")]
	public EnableSwitch()
	{
	}
}
[Token(Token = "0x200008C")]
public class LipSyncDemo_Control : MonoBehaviour
{
	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97C534", Offset = "0x97C534")]
	public KeyCode rotateLeftKey;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97C56C", Offset = "0x97C56C")]
	public KeyCode rotateRightKey;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97C5A4", Offset = "0x97C5A4")]
	public KeyCode resetRotationKey;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float resetRotation;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float rotationAmount;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float rotationMax;

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0xF71D00", Offset = "0xF71D00", VA = "0xF71D00")]
	private void Start()
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0xF71D04", Offset = "0xF71D04", VA = "0xF71D04")]
	private void Update()
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0xF71D84", Offset = "0xF71D84", VA = "0xF71D84")]
	private void RotateObject(float amountDegrees, bool absolute = false)
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0xF71FF8", Offset = "0xF71FF8", VA = "0xF71FF8")]
	public LipSyncDemo_Control()
	{
	}
}
[Token(Token = "0x200008D")]
public class LipSyncDemo_SetCurrentTarget : MonoBehaviour
{
	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EnableSwitch[] SwitchTargets;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int targetSet;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int maxTarget;

	[Token(Token = "0x6000200")]
	[Address(RVA = "0xF72020", Offset = "0xF72020", VA = "0xF72020")]
	private void Start()
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0xF72164", Offset = "0xF72164", VA = "0xF72164")]
	private void Update()
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0xF72238", Offset = "0xF72238", VA = "0xF72238")]
	private void SetCurrentTarget()
	{
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0xF7265C", Offset = "0xF7265C", VA = "0xF7265C")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0xF726AC", Offset = "0xF726AC", VA = "0xF726AC")]
	public LipSyncDemo_SetCurrentTarget()
	{
	}
}
[Token(Token = "0x200008E")]
public class OVRLipSyncDebugConsole : MonoBehaviour
{
	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ArrayList messages;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxMessages;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text textMsg;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OVRLipSyncDebugConsole s_Instance;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool clearTimeoutOn;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float clearTimeout;

	[Token(Token = "0x1700001D")]
	public static OVRLipSyncDebugConsole instance
	{
		[Token(Token = "0x6000205")]
		[Address(RVA = "0xDDA638", Offset = "0xDDA638", VA = "0xDDA638")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0xDDA914", Offset = "0xDDA914", VA = "0xDDA914")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0xDDAA50", Offset = "0xDDAA50", VA = "0xDDAA50")]
	private void Update()
	{
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0xDDA984", Offset = "0xDDA984", VA = "0xDDA984")]
	public void Init()
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0xDD8430", Offset = "0xDD8430", VA = "0xDD8430")]
	public static void Log(string message)
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0xDDABEC", Offset = "0xDDABEC", VA = "0xDDABEC")]
	public static void Log(string message, Color color)
	{
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0xDD83C0", Offset = "0xDD83C0", VA = "0xDD83C0")]
	public static void Clear()
	{
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0xDD84E4", Offset = "0xDD84E4", VA = "0xDD84E4")]
	public static void ClearTimeout(float timeToClear)
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0xDDAAE8", Offset = "0xDDAAE8", VA = "0xDDAAE8")]
	public void AddMessage(string message, Color color)
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0xDDAC94", Offset = "0xDDAC94", VA = "0xDDAC94")]
	public void ClearMessages()
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0xDDACD8", Offset = "0xDDACD8", VA = "0xDDACD8")]
	public void SetClearTimeout(float timeout)
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0xDDAF58", Offset = "0xDDAF58", VA = "0xDDAF58")]
	private void Prune()
	{
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0xDDACE8", Offset = "0xDDACE8", VA = "0xDDACE8")]
	private void Display()
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0xDDB038", Offset = "0xDDB038", VA = "0xDDB038")]
	public OVRLipSyncDebugConsole()
	{
	}
}
[Token(Token = "0x200008F")]
public class OVRNamedArrayAttribute : PropertyAttribute
{
	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string[] names;

	[Token(Token = "0x6000214")]
	[Address(RVA = "0xDDBC00", Offset = "0xDDBC00", VA = "0xDDBC00")]
	public OVRNamedArrayAttribute(string[] names)
	{
	}
}
[Token(Token = "0x2000090")]
public static class OVRTouchpad
{
	[Token(Token = "0x2000644")]
	public enum TouchEvent
	{
		[Token(Token = "0x4001C29")]
		SingleTap,
		[Token(Token = "0x4001C2A")]
		DoubleTap,
		[Token(Token = "0x4001C2B")]
		Left,
		[Token(Token = "0x4001C2C")]
		Right,
		[Token(Token = "0x4001C2D")]
		Up,
		[Token(Token = "0x4001C2E")]
		Down
	}

	[Token(Token = "0x2000645")]
	public delegate void OVRTouchpadCallback<TouchEvent>(TouchEvent arg);

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector3 moveAmountMouse;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static float minMovMagnitudeMouse;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Delegate touchPadCallbacks;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static OVRTouchpadHelper touchpadHelper;

	[Token(Token = "0x6000215")]
	[Address(RVA = "0xDD70F8", Offset = "0xDD70F8", VA = "0xDD70F8")]
	public static void Create()
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0xDE1B2C", Offset = "0xDE1B2C", VA = "0xDE1B2C")]
	public static void Update()
	{
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0xDE1E60", Offset = "0xDE1E60", VA = "0xDE1E60")]
	public static void OnDisable()
	{
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0xDE1C9C", Offset = "0xDE1C9C", VA = "0xDE1C9C")]
	private static void HandleInputMouse(ref Vector3 move)
	{
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0xDD7E94", Offset = "0xDD7E94", VA = "0xDD7E94")]
	public static void AddListener(OVRTouchpadCallback<TouchEvent> handler)
	{
	}
}
[Token(Token = "0x2000091")]
public sealed class OVRTouchpadHelper : MonoBehaviour
{
	[Token(Token = "0x600021B")]
	[Address(RVA = "0xDE1F14", Offset = "0xDE1F14", VA = "0xDE1F14")]
	private void Awake()
	{
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0xDE1F90", Offset = "0xDE1F90", VA = "0xDE1F90")]
	private void Start()
	{
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0xDE2028", Offset = "0xDE2028", VA = "0xDE2028")]
	private void Update()
	{
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0xDE2084", Offset = "0xDE2084", VA = "0xDE2084")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0xDE20E8", Offset = "0xDE20E8", VA = "0xDE20E8")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0xDE20EC", Offset = "0xDE20EC", VA = "0xDE20EC")]
	public OVRTouchpadHelper()
	{
	}
}
[Token(Token = "0x2000092")]
public class OVRLipSync : MonoBehaviour
{
	[Token(Token = "0x2000646")]
	public enum Result
	{
		[Token(Token = "0x4001C30")]
		Success = 0,
		[Token(Token = "0x4001C31")]
		Unknown = -2200,
		[Token(Token = "0x4001C32")]
		CannotCreateContext = -2201,
		[Token(Token = "0x4001C33")]
		InvalidParam = -2202,
		[Token(Token = "0x4001C34")]
		BadSampleRate = -2203,
		[Token(Token = "0x4001C35")]
		MissingDLL = -2204,
		[Token(Token = "0x4001C36")]
		BadVersion = -2205,
		[Token(Token = "0x4001C37")]
		UndefinedFunction = -2206
	}

	[Token(Token = "0x2000647")]
	public enum AudioDataType
	{
		[Token(Token = "0x4001C39")]
		S16_Mono,
		[Token(Token = "0x4001C3A")]
		S16_Stereo,
		[Token(Token = "0x4001C3B")]
		F32_Mono,
		[Token(Token = "0x4001C3C")]
		F32_Stereo
	}

	[Token(Token = "0x2000648")]
	public enum Viseme
	{
		[Token(Token = "0x4001C3E")]
		sil,
		[Token(Token = "0x4001C3F")]
		PP,
		[Token(Token = "0x4001C40")]
		FF,
		[Token(Token = "0x4001C41")]
		TH,
		[Token(Token = "0x4001C42")]
		DD,
		[Token(Token = "0x4001C43")]
		kk,
		[Token(Token = "0x4001C44")]
		CH,
		[Token(Token = "0x4001C45")]
		SS,
		[Token(Token = "0x4001C46")]
		nn,
		[Token(Token = "0x4001C47")]
		RR,
		[Token(Token = "0x4001C48")]
		aa,
		[Token(Token = "0x4001C49")]
		E,
		[Token(Token = "0x4001C4A")]
		ih,
		[Token(Token = "0x4001C4B")]
		oh,
		[Token(Token = "0x4001C4C")]
		ou
	}

	[Token(Token = "0x2000649")]
	public enum Signals
	{
		[Token(Token = "0x4001C4E")]
		VisemeOn,
		[Token(Token = "0x4001C4F")]
		VisemeOff,
		[Token(Token = "0x4001C50")]
		VisemeAmount,
		[Token(Token = "0x4001C51")]
		VisemeSmoothing,
		[Token(Token = "0x4001C52")]
		LaughterAmount
	}

	[Token(Token = "0x200064A")]
	public enum ContextProviders
	{
		[Token(Token = "0x4001C54")]
		Original,
		[Token(Token = "0x4001C55")]
		Enhanced,
		[Token(Token = "0x4001C56")]
		Enhanced_with_Laughter
	}

	[Serializable]
	[Token(Token = "0x200064B")]
	public class Frame
	{
		[Token(Token = "0x4001C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int frameNumber;

		[Token(Token = "0x4001C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int frameDelay;

		[Token(Token = "0x4001C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] Visemes;

		[Token(Token = "0x4001C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float laughterScore;

		[Token(Token = "0x6002201")]
		[Address(RVA = "0xDD7BA8", Offset = "0xDD7BA8", VA = "0xDD7BA8")]
		public void CopyInput(Frame input)
		{
		}

		[Token(Token = "0x6002202")]
		[Address(RVA = "0xDD7C48", Offset = "0xDD7C48", VA = "0xDD7C48")]
		public void Reset()
		{
		}

		[Token(Token = "0x6002203")]
		[Address(RVA = "0xDD7CD8", Offset = "0xDD7CD8", VA = "0xDD7CD8")]
		public Frame()
		{
		}
	}

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly int VisemeCount;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static readonly int SignalCount;

	[Token(Token = "0x40002E3")]
	public const string strOVRLS = "OVRLipSync";

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Result sInitialized;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static OVRLipSync sInstance;

	[PreserveSig]
	[Token(Token = "0x6000221")]
	[Address(RVA = "0xDD6698", Offset = "0xDD6698", VA = "0xDD6698")]
	private static extern int ovrLipSyncDll_Initialize(int samplerate, int buffersize);

	[PreserveSig]
	[Token(Token = "0x6000222")]
	[Address(RVA = "0xDD6744", Offset = "0xDD6744", VA = "0xDD6744")]
	private static extern void ovrLipSyncDll_Shutdown();

	[PreserveSig]
	[Token(Token = "0x6000223")]
	[Address(RVA = "0xDD67D0", Offset = "0xDD67D0", VA = "0xDD67D0")]
	private static extern IntPtr ovrLipSyncDll_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[PreserveSig]
	[Token(Token = "0x6000224")]
	[Address(RVA = "0xDD6880", Offset = "0xDD6880", VA = "0xDD6880")]
	private static extern int ovrLipSyncDll_CreateContextEx(ref uint context, ContextProviders provider, int sampleRate, bool enableAcceleration);

	[PreserveSig]
	[Token(Token = "0x6000225")]
	[Address(RVA = "0xDD6944", Offset = "0xDD6944", VA = "0xDD6944")]
	private static extern int ovrLipSyncDll_CreateContextWithModelFile(ref uint context, ContextProviders provider, string modelPath, int sampleRate, bool enableAcceleration);

	[PreserveSig]
	[Token(Token = "0x6000226")]
	[Address(RVA = "0xDD6A2C", Offset = "0xDD6A2C", VA = "0xDD6A2C")]
	private static extern int ovrLipSyncDll_DestroyContext(uint context);

	[PreserveSig]
	[Token(Token = "0x6000227")]
	[Address(RVA = "0xDD6AC8", Offset = "0xDD6AC8", VA = "0xDD6AC8")]
	private static extern int ovrLipSyncDll_ResetContext(uint context);

	[PreserveSig]
	[Token(Token = "0x6000228")]
	[Address(RVA = "0xDD6B64", Offset = "0xDD6B64", VA = "0xDD6B64")]
	private static extern int ovrLipSyncDll_SendSignal(uint context, Signals signal, int arg1, int arg2);

	[PreserveSig]
	[Token(Token = "0x6000229")]
	[Address(RVA = "0xDD6C28", Offset = "0xDD6C28", VA = "0xDD6C28")]
	private static extern int ovrLipSyncDll_ProcessFrameEx(uint context, IntPtr audioBuffer, uint bufferSize, AudioDataType dataType, ref int frameNumber, ref int frameDelay, float[] visemes, int visemeCount, ref float laughterScore, float[] laughterCategories, int laughterCategoriesLength);

	[Token(Token = "0x600022A")]
	[Address(RVA = "0xDD6D40", Offset = "0xDD6D40", VA = "0xDD6D40")]
	private void Awake()
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0xDD70FC", Offset = "0xDD70FC", VA = "0xDD70FC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0xDD6FC0", Offset = "0xDD6FC0", VA = "0xDD6FC0")]
	public static Result Initialize()
	{
		return default(Result);
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0xDD71DC", Offset = "0xDD71DC", VA = "0xDD71DC")]
	public static Result Initialize(int sampleRate, int bufferSize)
	{
		return default(Result);
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0xDD72F0", Offset = "0xDD72F0", VA = "0xDD72F0")]
	public static void Shutdown()
	{
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0xDD6F58", Offset = "0xDD6F58", VA = "0xDD6F58")]
	public static Result IsInitialized()
	{
		return default(Result);
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0xDD7360", Offset = "0xDD7360", VA = "0xDD7360")]
	public static Result CreateContext(ref uint context, ContextProviders provider, int sampleRate = 0, bool enableAcceleration = false)
	{
		return default(Result);
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0xDD7444", Offset = "0xDD7444", VA = "0xDD7444")]
	public static Result CreateContextWithModelFile(ref uint context, ContextProviders provider, string modelPath, int sampleRate = 0, bool enableAcceleration = false)
	{
		return default(Result);
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0xDD7530", Offset = "0xDD7530", VA = "0xDD7530")]
	public static Result DestroyContext(uint context)
	{
		return default(Result);
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0xDD75C4", Offset = "0xDD75C4", VA = "0xDD75C4")]
	public static Result ResetContext(uint context)
	{
		return default(Result);
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0xDD7658", Offset = "0xDD7658", VA = "0xDD7658")]
	public static Result SendSignal(uint context, Signals signal, int arg1, int arg2)
	{
		return default(Result);
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0xDD771C", Offset = "0xDD771C", VA = "0xDD771C")]
	public static Result ProcessFrame(uint context, float[] audioBuffer, Frame frame, bool stereo = true)
	{
		return default(Result);
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0xDD78D4", Offset = "0xDD78D4", VA = "0xDD78D4")]
	public static Result ProcessFrame(uint context, short[] audioBuffer, Frame frame, bool stereo = true)
	{
		return default(Result);
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0xDD7A84", Offset = "0xDD7A84", VA = "0xDD7A84")]
	public OVRLipSync()
	{
	}
}
[Token(Token = "0x2000093")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x96DA28", Offset = "0x96DA28")]
public class OVRLipSyncContext : OVRLipSyncContextBase
{
	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97C5DC", Offset = "0x97C5DC")]
	public bool enableKeyboardInput;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97C614", Offset = "0x97C614")]
	public bool enableTouchInput;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97C64C", Offset = "0x97C64C")]
	public bool audioLoopback;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97C684", Offset = "0x97C684")]
	public KeyCode loopbackKey;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97C6BC", Offset = "0x97C6BC")]
	public bool showVisemes;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97C6F4", Offset = "0x97C6F4")]
	public KeyCode debugVisemesKey;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97C72C", Offset = "0x97C72C")]
	public bool skipAudioSource;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97C764", Offset = "0x97C764")]
	public float gain;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool hasDebugConsole;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public KeyCode debugLaughterKey;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool showLaughter;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float laughterScore;

	[Token(Token = "0x6000239")]
	[Address(RVA = "0xDD7D60", Offset = "0xDD7D60", VA = "0xDD7D60")]
	private void Start()
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0xDD7FDC", Offset = "0xDD7FDC", VA = "0xDD7FDC")]
	private void HandleKeyboard()
	{
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0xDD8568", Offset = "0xDD8568", VA = "0xDD8568")]
	private void Update()
	{
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0xDD887C", Offset = "0xDD887C", VA = "0xDD887C")]
	public void PreprocessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0xDD891C", Offset = "0xDD891C", VA = "0xDD891C")]
	public void PostprocessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0xDD89C0", Offset = "0xDD89C0", VA = "0xDD89C0")]
	public void ProcessAudioSamplesRaw(float[] data, int channels)
	{
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0xDD8B28", Offset = "0xDD8B28", VA = "0xDD8B28")]
	public void ProcessAudioSamplesRaw(short[] data, int channels)
	{
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0xDD8C88", Offset = "0xDD8C88", VA = "0xDD8C88")]
	public void ProcessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0xDD8D6C", Offset = "0xDD8D6C", VA = "0xDD8D6C")]
	private void OnAudioFilterRead(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0xDD85B8", Offset = "0xDD85B8", VA = "0xDD85B8")]
	private void DebugShowVisemesAndLaughter()
	{
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0xDD82EC", Offset = "0xDD82EC", VA = "0xDD82EC")]
	private void ToggleAudioLoopback()
	{
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0xDD8D7C", Offset = "0xDD8D7C", VA = "0xDD8D7C")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0xDD8EA8", Offset = "0xDD8EA8", VA = "0xDD8EA8")]
	public OVRLipSyncContext()
	{
	}
}
[Token(Token = "0x2000094")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x96DA8C", Offset = "0x96DA8C")]
public class OVRLipSyncContextBase : MonoBehaviour
{
	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97C79C", Offset = "0x97C79C")]
	public OVRLipSync.ContextProviders provider;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97C7D4", Offset = "0x97C7D4")]
	public bool enableAcceleration;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRLipSync.Frame frame;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private uint context;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int _smoothing;

	[Token(Token = "0x1700001E")]
	public int Smoothing
	{
		[Token(Token = "0x6000247")]
		[Address(RVA = "0xDD9028", Offset = "0xDD9028", VA = "0xDD9028")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000246")]
		[Address(RVA = "0xDD8F3C", Offset = "0xDD8F3C", VA = "0xDD8F3C")]
		set
		{
		}
	}

	[Token(Token = "0x1700001F")]
	public uint Context
	{
		[Token(Token = "0x6000248")]
		[Address(RVA = "0xDD8B20", Offset = "0xDD8B20", VA = "0xDD8B20")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000020")]
	protected OVRLipSync.Frame Frame
	{
		[Token(Token = "0x6000249")]
		[Address(RVA = "0xDD85B0", Offset = "0xDD85B0", VA = "0xDD85B0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0xDD9030", Offset = "0xDD9030", VA = "0xDD9030")]
	private void Awake()
	{
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0xDD91C8", Offset = "0xDD91C8", VA = "0xDD91C8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0xDD92EC", Offset = "0xDD92EC", VA = "0xDD92EC")]
	public OVRLipSync.Frame GetCurrentPhonemeFrame()
	{
		return null;
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0xDD92F4", Offset = "0xDD92F4", VA = "0xDD92F4")]
	public void SetVisemeBlend(int viseme, int amount)
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0xDD93E8", Offset = "0xDD93E8", VA = "0xDD93E8")]
	public void SetLaughterBlend(int amount)
	{
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0xDD94B0", Offset = "0xDD94B0", VA = "0xDD94B0")]
	public OVRLipSync.Result ResetContext()
	{
		return default(OVRLipSync.Result);
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0xDD8ECC", Offset = "0xDD8ECC", VA = "0xDD8ECC")]
	public OVRLipSyncContextBase()
	{
	}
}
[Token(Token = "0x2000095")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x96DAF0", Offset = "0x96DAF0")]
public class OVRLipSyncContextCanned : OVRLipSyncContextBase
{
	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97C80C", Offset = "0x97C80C")]
	public OVRLipSyncSequence currentSequence;

	[Token(Token = "0x6000251")]
	[Address(RVA = "0xDD9530", Offset = "0xDD9530", VA = "0xDD9530")]
	private void Update()
	{
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0xDD973C", Offset = "0xDD973C", VA = "0xDD973C")]
	public OVRLipSyncContextCanned()
	{
	}
}
[Token(Token = "0x2000096")]
public class OVRLipSyncContextMorphTarget : MonoBehaviour
{
	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97C844", Offset = "0x97C844")]
	public SkinnedMeshRenderer skinnedMeshRenderer;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97C87C", Offset = "0x97C87C")]
	public int[] visemeToBlendTargets;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97C8B4", Offset = "0x97C8B4")]
	public bool enableVisemeTestKeys;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97C8EC", Offset = "0x97C8EC")]
	public KeyCode[] visemeTestKeys;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97C924", Offset = "0x97C924")]
	public KeyCode laughterKey;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97C95C", Offset = "0x97C95C")]
	public int laughterBlendTarget;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97C994", Offset = "0x97C994")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97C994", Offset = "0x97C994")]
	public float laughterThreshold;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97C9E8", Offset = "0x97C9E8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97C9E8", Offset = "0x97C9E8")]
	public float laughterMultiplier;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97CA3C", Offset = "0x97CA3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97CA3C", Offset = "0x97CA3C")]
	public int smoothAmount;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private OVRLipSyncContextBase lipsyncContext;

	[Token(Token = "0x6000253")]
	[Address(RVA = "0xDD9740", Offset = "0xDD9740", VA = "0xDD9740")]
	private void Start()
	{
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0xDD9890", Offset = "0xDD9890", VA = "0xDD9890")]
	private void Update()
	{
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0xDD9C0C", Offset = "0xDD9C0C", VA = "0xDD9C0C")]
	private void CheckForKeys()
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0xDD99C4", Offset = "0xDD99C4", VA = "0xDD99C4")]
	private void SetVisemeToMorphTarget(OVRLipSync.Frame frame)
	{
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0xDD9B08", Offset = "0xDD9B08", VA = "0xDD9B08")]
	private void SetLaughterToMorphTarget(OVRLipSync.Frame frame)
	{
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0xDD9CF0", Offset = "0xDD9CF0", VA = "0xDD9CF0")]
	private void CheckVisemeKey(KeyCode key, int viseme, int amount)
	{
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0xDD9E14", Offset = "0xDD9E14", VA = "0xDD9E14")]
	private void CheckLaughterKey()
	{
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0xDD9E90", Offset = "0xDD9E90", VA = "0xDD9E90")]
	public OVRLipSyncContextMorphTarget()
	{
	}
}
[Token(Token = "0x2000097")]
public class OVRLipSyncContextTextureFlip : MonoBehaviour
{
	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material material;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97CA94", Offset = "0x97CA94")]
	[AttributeAttribute(Name = "OVRNamedArrayAttribute", RVA = "0x97CA94", Offset = "0x97CA94")]
	public Texture[] Textures;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97CC10", Offset = "0x97CC10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97CC10", Offset = "0x97CC10")]
	public int smoothAmount;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OVRLipSyncContextBase lipsyncContext;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OVRLipSync.Frame oldFrame;

	[Token(Token = "0x600025B")]
	[Address(RVA = "0xDD9F88", Offset = "0xDD9F88", VA = "0xDD9F88")]
	private void Start()
	{
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0xDDA0E8", Offset = "0xDDA0E8", VA = "0xDDA0E8")]
	private void Update()
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0xDDA38C", Offset = "0xDDA38C", VA = "0xDDA38C")]
	private void SetVisemeToTexture()
	{
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0xDDA58C", Offset = "0xDDA58C", VA = "0xDDA58C")]
	public OVRLipSyncContextTextureFlip()
	{
	}
}
[Token(Token = "0x2000098")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x96DB54", Offset = "0x96DB54")]
public class OVRLipSyncMicInput : MonoBehaviour
{
	[Token(Token = "0x200064C")]
	public enum micActivation
	{
		[Token(Token = "0x4001C5C")]
		HoldToSpeak,
		[Token(Token = "0x4001C5D")]
		PushToSpeak,
		[Token(Token = "0x4001C5E")]
		ConstantSpeak
	}

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97CC68", Offset = "0x97CC68")]
	public AudioSource audioSource;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97CCA0", Offset = "0x97CCA0")]
	public bool enableMicSelectionGUI;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97CCD8", Offset = "0x97CCD8")]
	public KeyCode micSelectionGUIKey;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97CD10", Offset = "0x97CD10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97CD10", Offset = "0x97CD10")]
	private float micInputVolume;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97CD78", Offset = "0x97CD78")]
	private int micFrequency;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97CDC4", Offset = "0x97CDC4")]
	public micActivation micControl;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97CDFC", Offset = "0x97CDFC")]
	public KeyCode micActivationKey;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97CE34", Offset = "0x97CE34")]
	public string selectedDevice;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool micSelected;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int minFreq;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int maxFreq;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool focused;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	private bool initialized;

	[Token(Token = "0x17000021")]
	public float MicFrequency
	{
		[Token(Token = "0x600025F")]
		[Address(RVA = "0xDDB0AC", Offset = "0xDDB0AC", VA = "0xDDB0AC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000260")]
		[Address(RVA = "0xDDB0B8", Offset = "0xDDB0B8", VA = "0xDDB0B8")]
		set
		{
		}
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0xDDB144", Offset = "0xDDB144", VA = "0xDDB144")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0xDDB204", Offset = "0xDDB204", VA = "0xDDB204")]
	private void Start()
	{
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0xDDB264", Offset = "0xDDB264", VA = "0xDDB264")]
	private void InitializeMicrophone()
	{
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0xDDB3D0", Offset = "0xDDB3D0", VA = "0xDDB3D0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0xDDB888", Offset = "0xDDB888", VA = "0xDDB888")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0xDDB89C", Offset = "0xDDB89C", VA = "0xDDB89C")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0xDDB8B4", Offset = "0xDDB8B4", VA = "0xDDB8B4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0xDDB8B8", Offset = "0xDDB8B8", VA = "0xDDB8B8")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0xDDB930", Offset = "0xDDB930", VA = "0xDDB930")]
	public void MicDeviceGUI(float left, float top, float width, float height, float buttonSpaceTop, float buttonSpaceLeft)
	{
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0xDDB308", Offset = "0xDDB308", VA = "0xDDB308")]
	public void GetMicCaps()
	{
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0xDDB6C0", Offset = "0xDDB6C0", VA = "0xDDB6C0")]
	public void StartMicrophone()
	{
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0xDDB540", Offset = "0xDDB540", VA = "0xDDB540")]
	public void StopMicrophone()
	{
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0xDDBB58", Offset = "0xDDBB58", VA = "0xDDBB58")]
	private float GetAveragedVolume()
	{
		return default(float);
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0xDDBB60", Offset = "0xDDBB60", VA = "0xDDBB60")]
	public OVRLipSyncMicInput()
	{
	}
}
[Serializable]
[Token(Token = "0x2000099")]
public class OVRLipSyncSequence : ScriptableObject
{
	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<OVRLipSync.Frame> entries;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float length;

	[Token(Token = "0x600026F")]
	[Address(RVA = "0xDD9644", Offset = "0xDD9644", VA = "0xDD9644")]
	public OVRLipSync.Frame GetFrameAtTime(float time)
	{
		return null;
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0xDDBB90", Offset = "0xDDBB90", VA = "0xDDBB90")]
	public OVRLipSyncSequence()
	{
	}
}
[Token(Token = "0x200009A")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x200064D")]
	public delegate void OnClick();

	[Token(Token = "0x200064E")]
	public delegate void OnToggleValueChange(UnityEngine.UI.Toggle t);

	[Token(Token = "0x200064F")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x2000650")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x2000651")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x978D34", Offset = "0x978D34")]
	private sealed class <>c__DisplayClass35_0
	{
		[Token(Token = "0x4001C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnClick handler;

		[Token(Token = "0x6002214")]
		[Address(RVA = "0xC1332C", Offset = "0xC1332C", VA = "0xC1332C")]
		public <>c__DisplayClass35_0()
		{
		}

		[Token(Token = "0x6002215")]
		[Address(RVA = "0xC13E64", Offset = "0xC13E64", VA = "0xC13E64")]
		internal void <AddButton>b__0()
		{
		}
	}

	[Token(Token = "0x2000652")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x978D44", Offset = "0x978D44")]
	private sealed class <>c__DisplayClass37_0
	{
		[Token(Token = "0x4001C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnSlider onValueChanged;

		[Token(Token = "0x6002216")]
		[Address(RVA = "0xC13630", Offset = "0xC13630", VA = "0xC13630")]
		public <>c__DisplayClass37_0()
		{
		}

		[Token(Token = "0x6002217")]
		[Address(RVA = "0xC14290", Offset = "0xC14290", VA = "0xC14290")]
		internal void <AddSlider>b__0(float f)
		{
		}
	}

	[Token(Token = "0x2000653")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x978D54", Offset = "0x978D54")]
	private sealed class <>c__DisplayClass39_0
	{
		[Token(Token = "0x4001C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4001C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEngine.UI.Toggle t;

		[Token(Token = "0x6002218")]
		[Address(RVA = "0xC1387C", Offset = "0xC1387C", VA = "0xC1387C")]
		public <>c__DisplayClass39_0()
		{
		}

		[Token(Token = "0x6002219")]
		[Address(RVA = "0xC1471C", Offset = "0xC1471C", VA = "0xC1471C")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x2000654")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x978D64", Offset = "0x978D64")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x4001C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4001C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEngine.UI.Toggle t;

		[Token(Token = "0x600221A")]
		[Address(RVA = "0xC13A50", Offset = "0xC13A50", VA = "0xC13A50")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x600221B")]
		[Address(RVA = "0xC14E80", Offset = "0xC14E80", VA = "0xC14E80")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x2000655")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x978D74", Offset = "0x978D74")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x4001C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange handler;

		[Token(Token = "0x4001C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEngine.UI.Toggle tb;

		[Token(Token = "0x600221C")]
		[Address(RVA = "0xC13D2C", Offset = "0xC13D2C", VA = "0xC13D2C")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x600221D")]
		[Address(RVA = "0xC14EB0", Offset = "0xC14EB0", VA = "0xC14EB0")]
		internal void <AddRadio>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x4000317")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x4000318")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x4000319")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool[] reEnable;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x4000326")]
	private const float elementSpacing = 16f;

	[Token(Token = "0x4000327")]
	private const float marginH = 16f;

	[Token(Token = "0x4000328")]
	private const float marginV = 16f;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector2[] insertPositions;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 menuOffset;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private OVRCameraRig rig;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private LaserPointer lp;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private LineRenderer lr;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x6000271")]
	[Address(RVA = "0xC11D3C", Offset = "0xC11D3C", VA = "0xC11D3C")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0xC12264", Offset = "0xC12264", VA = "0xC12264")]
	public void Show()
	{
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0xC12A70", Offset = "0xC12A70", VA = "0xC12A70")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0xC12770", Offset = "0xC12770", VA = "0xC12770")]
	private void Relayout()
	{
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0xC12C64", Offset = "0xC12C64", VA = "0xC12C64")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0xC13020", Offset = "0xC13020", VA = "0xC13020")]
	public RectTransform AddButton(string label, OnClick handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0xC13334", Offset = "0xC13334", VA = "0xC13334")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0xC1343C", Offset = "0xC1343C", VA = "0xC1343C")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0xC13638", Offset = "0xC13638", VA = "0xC13638")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0xC136D4", Offset = "0xC136D4", VA = "0xC136D4")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0xC13884", Offset = "0xC13884", VA = "0xC13884")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0xC13A58", Offset = "0xC13A58", VA = "0xC13A58")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0xC13D34", Offset = "0xC13D34", VA = "0xC13D34")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0xC13DF4", Offset = "0xC13DF4", VA = "0xC13DF4")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x200009B")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x600027F")]
	[Address(RVA = "0xCA83C8", Offset = "0xCA83C8", VA = "0xCA83C8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0xCA8450", Offset = "0xCA8450", VA = "0xCA8450")]
	private void Update()
	{
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0xCA84D0", Offset = "0xCA84D0", VA = "0xCA84D0")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0xCA8540", Offset = "0xCA8540", VA = "0xCA8540")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x200009C")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x2000656")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x4001C68")]
		On,
		[Token(Token = "0x4001C69")]
		Off,
		[Token(Token = "0x4001C6A")]
		OnWhenHitTarget
	}

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_restoreOnInputAcquired;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _startPoint;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _forward;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _endPoint;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _hitTarget;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x17000022")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x6000284")]
		[Address(RVA = "0xF71390", Offset = "0xF71390", VA = "0xF71390")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x6000283")]
		[Address(RVA = "0xF71334", Offset = "0xF71334", VA = "0xF71334")]
		set
		{
		}
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0xF71398", Offset = "0xF71398", VA = "0xF71398")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0xF713F0", Offset = "0xF713F0", VA = "0xF713F0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0xF71510", Offset = "0xF71510", VA = "0xF71510", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0xF7152C", Offset = "0xF7152C", VA = "0xF7152C", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0xF715A4", Offset = "0xF715A4", VA = "0xF715A4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0xF71888", Offset = "0xF71888", VA = "0xF71888")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0xF719E4", Offset = "0xF719E4", VA = "0xF719E4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0xF71A80", Offset = "0xF71A80", VA = "0xF71A80")]
	public void OnInputFocusLost()
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0xF71B64", Offset = "0xF71B64", VA = "0xF71B64")]
	public void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0xF71C24", Offset = "0xF71C24", VA = "0xF71C24")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0xF71CF0", Offset = "0xF71CF0", VA = "0xF71CF0")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x200009D")]
public class BoundsLockedObject : MonoBehaviour
{
	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 m_initialOffset;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig m_playerOrigin;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GuardianBoundaryEnforcer m_enforcer;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Bounds? m_bounds;

	[Token(Token = "0x6000290")]
	[Address(RVA = "0xC0D948", Offset = "0xC0D948", VA = "0xC0D948")]
	private void Start()
	{
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0xC0DB9C", Offset = "0xC0DB9C", VA = "0xC0DB9C")]
	private void RefreshDisplay()
	{
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0xC0E0D4", Offset = "0xC0E0D4", VA = "0xC0E0D4")]
	public BoundsLockedObject()
	{
	}
}
[Token(Token = "0x200009E")]
public class GuardianBoundaryDisplay : MonoBehaviour
{
	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GuardianBoundaryEnforcer m_enforcer;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRBoundary.BoundaryType m_boundaryType;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_errorDisplay;

	[Token(Token = "0x6000293")]
	[Address(RVA = "0xCA7BDC", Offset = "0xCA7BDC", VA = "0xCA7BDC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0xCA7D5C", Offset = "0xCA7D5C", VA = "0xCA7D5C")]
	private void RefreshDisplay()
	{
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0xCA7FC4", Offset = "0xCA7FC4", VA = "0xCA7FC4")]
	public GuardianBoundaryDisplay()
	{
	}
}
[Token(Token = "0x200009F")]
public class GuardianBoundaryEnforcer : MonoBehaviour
{
	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool m_AllowRecenter;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig m_mainCamera;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Quaternion m_originalTrackerOrientation;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int m_framecount;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Quaternion m_orientToOriginalForward;

	[Token(Token = "0x17000023")]
	public Quaternion OrientToOriginalForward
	{
		[Token(Token = "0x6000298")]
		[Address(RVA = "0xCA80B8", Offset = "0xCA80B8", VA = "0xCA80B8")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x14000001")]
	public event Action TrackingChanged
	{
		[Token(Token = "0x6000296")]
		[Address(RVA = "0xCA7C70", Offset = "0xCA7C70", VA = "0xCA7C70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98424C", Offset = "0x98424C")]
		add
		{
		}
		[Token(Token = "0x6000297")]
		[Address(RVA = "0xCA7FCC", Offset = "0xCA7FCC", VA = "0xCA7FCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98425C", Offset = "0x98425C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0xCA80C4", Offset = "0xCA80C4", VA = "0xCA80C4")]
	private void Start()
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0xCA81F8", Offset = "0xCA81F8", VA = "0xCA81F8")]
	private void Update()
	{
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0xCA83B0", Offset = "0xCA83B0", VA = "0xCA83B0")]
	private void Recentered()
	{
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0xCA83B8", Offset = "0xCA83B8", VA = "0xCA83B8")]
	public GuardianBoundaryEnforcer()
	{
	}
}
[Token(Token = "0x20000A0")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97CF1C", Offset = "0x97CF1C")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97CF54", Offset = "0x97CF54")]
	public bool EnableCollision;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LayerMask CollideLayers;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97CF8C", Offset = "0x97CF8C")]
	public float MaxFade;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97CFC4", Offset = "0x97CFC4")]
	public float FadeMinDistance;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float PreferredHeight;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97CFFC", Offset = "0x97CFFC")]
	public float FadeMaxDistance;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _cameraUpdateAction;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action _preCharacterMovementAction;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CapsuleCollider _character;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x600029D")]
	[Address(RVA = "0xC0F104", Offset = "0xC0F104", VA = "0xC0F104")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0xC0F18C", Offset = "0xC0F18C", VA = "0xC0F18C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0xC0F1FC", Offset = "0xC0F1FC", VA = "0xC0F1FC")]
	private void Start()
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0xC0F200", Offset = "0xC0F200", VA = "0xC0F200")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0xC0F238", Offset = "0xC0F238", VA = "0xC0F238")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0xC0F270", Offset = "0xC0F270", VA = "0xC0F270")]
	private void CameraUpdate()
	{
	}
}
[Token(Token = "0x20000A1")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0xF899E4", Offset = "0xF899E4", VA = "0xF899E4")]
	private void Start()
	{
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0xF89A90", Offset = "0xF89A90", VA = "0xF89A90")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x20000A2")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x2000657")]
	public enum States
	{
		[Token(Token = "0x4001C6C")]
		Ready,
		[Token(Token = "0x4001C6D")]
		Aim,
		[Token(Token = "0x4001C6E")]
		CancelAim,
		[Token(Token = "0x4001C6F")]
		PreTeleport,
		[Token(Token = "0x4001C70")]
		CancelTeleport,
		[Token(Token = "0x4001C71")]
		Teleporting,
		[Token(Token = "0x4001C72")]
		PostTeleport
	}

	[Token(Token = "0x2000658")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x4001C74")]
		None,
		[Token(Token = "0x4001C75")]
		Aim,
		[Token(Token = "0x4001C76")]
		PreTeleport,
		[Token(Token = "0x4001C77")]
		Teleport
	}

	[Token(Token = "0x2000659")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x4001C79")]
		Point,
		[Token(Token = "0x4001C7A")]
		Sphere,
		[Token(Token = "0x4001C7B")]
		Capsule
	}

	[Token(Token = "0x200065A")]
	public class AimData
	{
		[Token(Token = "0x4001C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x4001C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x4001C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x4001C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x4001C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x983A6C", Offset = "0x983A6C")]
		private List<Vector3> <Points>k__BackingField;

		[Token(Token = "0x17000316")]
		public List<Vector3> Points
		{
			[Token(Token = "0x600221F")]
			[Address(RVA = "0xF8DB50", Offset = "0xF8DB50", VA = "0xF8DB50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x989B50", Offset = "0x989B50")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002220")]
			[Address(RVA = "0xF8DB48", Offset = "0xF8DB48", VA = "0xF8DB48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x989B60", Offset = "0x989B60")]
			private set
			{
			}
		}

		[Token(Token = "0x600221E")]
		[Address(RVA = "0xF8DAD4", Offset = "0xF8DAD4", VA = "0xF8DAD4")]
		public AimData()
		{
		}

		[Token(Token = "0x6002221")]
		[Address(RVA = "0xF8DB58", Offset = "0xF8DB58", VA = "0xF8DB58")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x200065B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x978D84", Offset = "0x978D84")]
	private sealed class <ReadyStateCoroutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000317")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002225")]
			[Address(RVA = "0xF8D8B0", Offset = "0xF8D8B0", VA = "0xF8D8B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000318")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002227")]
			[Address(RVA = "0xF8D920", Offset = "0xF8D920", VA = "0xF8D920", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002222")]
		[Address(RVA = "0xF8B3E8", Offset = "0xF8B3E8", VA = "0xF8B3E8")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x6002223")]
		[Address(RVA = "0xF8D744", Offset = "0xF8D744", VA = "0xF8D744", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002224")]
		[Address(RVA = "0xF8D748", Offset = "0xF8D748", VA = "0xF8D748", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002226")]
		[Address(RVA = "0xF8D8B8", Offset = "0xF8D8B8", VA = "0xF8D8B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200065C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x978D94", Offset = "0x978D94")]
	private sealed class <AimStateCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000319")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600222B")]
			[Address(RVA = "0xF8D080", Offset = "0xF8D080", VA = "0xF8D080", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700031A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600222D")]
			[Address(RVA = "0xF8D0F0", Offset = "0xF8D0F0", VA = "0xF8D0F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002228")]
		[Address(RVA = "0xF8BA84", Offset = "0xF8BA84", VA = "0xF8BA84")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x6002229")]
		[Address(RVA = "0xF8CEB4", Offset = "0xF8CEB4", VA = "0xF8CEB4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600222A")]
		[Address(RVA = "0xF8CEB8", Offset = "0xF8CEB8", VA = "0xF8CEB8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600222C")]
		[Address(RVA = "0xF8D088", Offset = "0xF8D088", VA = "0xF8D088", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200065D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x978DA4", Offset = "0x978DA4")]
	private sealed class <CancelAimStateCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700031B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002231")]
			[Address(RVA = "0xF8D1D4", Offset = "0xF8D1D4", VA = "0xF8D1D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700031C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002233")]
			[Address(RVA = "0xF8D244", Offset = "0xF8D244", VA = "0xF8D244", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600222E")]
		[Address(RVA = "0xF8BCFC", Offset = "0xF8BCFC", VA = "0xF8BCFC")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x600222F")]
		[Address(RVA = "0xF8D0F8", Offset = "0xF8D0F8", VA = "0xF8D0F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002230")]
		[Address(RVA = "0xF8D0FC", Offset = "0xF8D0FC", VA = "0xF8D0FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002232")]
		[Address(RVA = "0xF8D1DC", Offset = "0xF8D1DC", VA = "0xF8D1DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200065E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x978DB4", Offset = "0x978DB4")]
	private sealed class <PreTeleportStateCoroutine>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700031D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002237")]
			[Address(RVA = "0xF8D6CC", Offset = "0xF8D6CC", VA = "0xF8D6CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700031E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002239")]
			[Address(RVA = "0xF8D73C", Offset = "0xF8D73C", VA = "0xF8D73C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002234")]
		[Address(RVA = "0xF8BF74", Offset = "0xF8BF74", VA = "0xF8BF74")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x6002235")]
		[Address(RVA = "0xF8D580", Offset = "0xF8D580", VA = "0xF8D580", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002236")]
		[Address(RVA = "0xF8D584", Offset = "0xF8D584", VA = "0xF8D584", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002238")]
		[Address(RVA = "0xF8D6D4", Offset = "0xF8D6D4", VA = "0xF8D6D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200065F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x978DC4", Offset = "0x978DC4")]
	private sealed class <CancelTeleportStateCoroutine>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700031F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600223D")]
			[Address(RVA = "0xF8D328", Offset = "0xF8D328", VA = "0xF8D328", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000320")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600223F")]
			[Address(RVA = "0xF8D398", Offset = "0xF8D398", VA = "0xF8D398", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600223A")]
		[Address(RVA = "0xF8C1EC", Offset = "0xF8C1EC", VA = "0xF8C1EC")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x600223B")]
		[Address(RVA = "0xF8D24C", Offset = "0xF8D24C", VA = "0xF8D24C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600223C")]
		[Address(RVA = "0xF8D250", Offset = "0xF8D250", VA = "0xF8D250", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600223E")]
		[Address(RVA = "0xF8D330", Offset = "0xF8D330", VA = "0xF8D330", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000660")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x978DD4", Offset = "0x978DD4")]
	private sealed class <TeleportingStateCoroutine>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000321")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002243")]
			[Address(RVA = "0xF8DA5C", Offset = "0xF8DA5C", VA = "0xF8DA5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000322")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002245")]
			[Address(RVA = "0xF8DACC", Offset = "0xF8DACC", VA = "0xF8DACC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002240")]
		[Address(RVA = "0xF8C464", Offset = "0xF8C464", VA = "0xF8C464")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x6002241")]
		[Address(RVA = "0xF8D928", Offset = "0xF8D928", VA = "0xF8D928", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002242")]
		[Address(RVA = "0xF8D92C", Offset = "0xF8D92C", VA = "0xF8D92C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002244")]
		[Address(RVA = "0xF8DA64", Offset = "0xF8DA64", VA = "0xF8DA64", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000661")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x978DE4", Offset = "0x978DE4")]
	private sealed class <PostTeleportStateCoroutine>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000323")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002249")]
			[Address(RVA = "0xF8D508", Offset = "0xF8D508", VA = "0xF8D508", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000324")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600224B")]
			[Address(RVA = "0xF8D578", Offset = "0xF8D578", VA = "0xF8D578", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002246")]
		[Address(RVA = "0xF8C6DC", Offset = "0xF8C6DC", VA = "0xF8C6DC")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x6002247")]
		[Address(RVA = "0xF8D3A0", Offset = "0xF8D3A0", VA = "0xF8D3A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002248")]
		[Address(RVA = "0xF8D3A4", Offset = "0xF8D3A4", VA = "0xF8D3A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600224A")]
		[Address(RVA = "0xF8D510", Offset = "0xF8D510", VA = "0xF8D510", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97D034", Offset = "0x97D034")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97D06C", Offset = "0x97D06C")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97D0A4", Offset = "0x97D0A4")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97D0DC", Offset = "0x97D0DC")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97D114", Offset = "0x97D114")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97D14C", Offset = "0x97D14C")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97D184", Offset = "0x97D184")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97D1BC", Offset = "0x97D1BC")]
	public bool EnableRotationDuringPostTeleport;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97D1F4", Offset = "0x97D1F4")]
	private States <CurrentState>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97D204", Offset = "0x97D204")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97D23C", Offset = "0x97D23C")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97D284", Offset = "0x97D284")]
	private LocomotionController <LocomotionController>k__BackingField;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97D294", Offset = "0x97D294")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97D2CC", Offset = "0x97D2CC")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97D304", Offset = "0x97D304")]
	public float AimCollisionRadius;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97D33C", Offset = "0x97D33C")]
	public float AimCollisionHeight;

	[Token(Token = "0x17000024")]
	public States CurrentState
	{
		[Token(Token = "0x60002A7")]
		[Address(RVA = "0xF8A6F0", Offset = "0xF8A6F0", VA = "0xF8A6F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98426C", Offset = "0x98426C")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x60002A8")]
		[Address(RVA = "0xF8A6F8", Offset = "0xF8A6F8", VA = "0xF8A6F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98427C", Offset = "0x98427C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000025")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x60002AC")]
		[Address(RVA = "0xF8A9B8", Offset = "0xF8A9B8", VA = "0xF8A9B8")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x17000026")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x60002AD")]
		[Address(RVA = "0xF8A9F8", Offset = "0xF8A9F8", VA = "0xF8A9F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9842AC", Offset = "0x9842AC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002AE")]
		[Address(RVA = "0xF8AA00", Offset = "0xF8AA00", VA = "0xF8AA00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9842BC", Offset = "0x9842BC")]
		private set
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x60002A9")]
		[Address(RVA = "0xF8A700", Offset = "0xF8A700", VA = "0xF8A700")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98428C", Offset = "0x98428C")]
		add
		{
		}
		[Token(Token = "0x60002AA")]
		[Address(RVA = "0xF8A7EC", Offset = "0xF8A7EC", VA = "0xF8A7EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98429C", Offset = "0x98429C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x60002B8")]
		[Address(RVA = "0xF8B210", Offset = "0xF8B210", VA = "0xF8B210")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984304", Offset = "0x984304")]
		add
		{
		}
		[Token(Token = "0x60002B9")]
		[Address(RVA = "0xF8B2FC", Offset = "0xF8B2FC", VA = "0xF8B2FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984314", Offset = "0x984314")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x60002BB")]
		[Address(RVA = "0xF8B414", Offset = "0xF8B414", VA = "0xF8B414")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984388", Offset = "0x984388")]
		add
		{
		}
		[Token(Token = "0x60002BC")]
		[Address(RVA = "0xF8B500", Offset = "0xF8B500", VA = "0xF8B500")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984398", Offset = "0x984398")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x60002BD")]
		[Address(RVA = "0xF8B5EC", Offset = "0xF8B5EC", VA = "0xF8B5EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9843A8", Offset = "0x9843A8")]
		add
		{
		}
		[Token(Token = "0x60002BE")]
		[Address(RVA = "0xF8B6D8", Offset = "0xF8B6D8", VA = "0xF8B6D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9843B8", Offset = "0x9843B8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x60002C0")]
		[Address(RVA = "0xF8B838", Offset = "0xF8B838", VA = "0xF8B838")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9843C8", Offset = "0x9843C8")]
		add
		{
		}
		[Token(Token = "0x60002C1")]
		[Address(RVA = "0xF8B924", Offset = "0xF8B924", VA = "0xF8B924")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9843D8", Offset = "0x9843D8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x60002C3")]
		[Address(RVA = "0xF8BAB0", Offset = "0xF8BAB0", VA = "0xF8BAB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98444C", Offset = "0x98444C")]
		add
		{
		}
		[Token(Token = "0x60002C4")]
		[Address(RVA = "0xF8BB9C", Offset = "0xF8BB9C", VA = "0xF8BB9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98445C", Offset = "0x98445C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x60002C6")]
		[Address(RVA = "0xF8BD28", Offset = "0xF8BD28", VA = "0xF8BD28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9844D0", Offset = "0x9844D0")]
		add
		{
		}
		[Token(Token = "0x60002C7")]
		[Address(RVA = "0xF8BE14", Offset = "0xF8BE14", VA = "0xF8BE14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9844E0", Offset = "0x9844E0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x60002C9")]
		[Address(RVA = "0xF8BFA0", Offset = "0xF8BFA0", VA = "0xF8BFA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984554", Offset = "0x984554")]
		add
		{
		}
		[Token(Token = "0x60002CA")]
		[Address(RVA = "0xF8C08C", Offset = "0xF8C08C", VA = "0xF8C08C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984564", Offset = "0x984564")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x60002CC")]
		[Address(RVA = "0xF8C218", Offset = "0xF8C218", VA = "0xF8C218")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9845D8", Offset = "0x9845D8")]
		add
		{
		}
		[Token(Token = "0x60002CD")]
		[Address(RVA = "0xF8C304", Offset = "0xF8C304", VA = "0xF8C304")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9845E8", Offset = "0x9845E8")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x60002CF")]
		[Address(RVA = "0xF8C490", Offset = "0xF8C490", VA = "0xF8C490")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98465C", Offset = "0x98465C")]
		add
		{
		}
		[Token(Token = "0x60002D0")]
		[Address(RVA = "0xF8C57C", Offset = "0xF8C57C", VA = "0xF8C57C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98466C", Offset = "0x98466C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000C")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x60002D2")]
		[Address(RVA = "0xF8C708", Offset = "0xF8C708", VA = "0xF8C708")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9846E0", Offset = "0x9846E0")]
		add
		{
		}
		[Token(Token = "0x60002D3")]
		[Address(RVA = "0xF8C7F4", Offset = "0xF8C7F4", VA = "0xF8C7F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9846F0", Offset = "0x9846F0")]
		remove
		{
		}
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0xF8A308", Offset = "0xF8A308", VA = "0xF8A308")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0xF8A32C", Offset = "0xF8A32C", VA = "0xF8A32C")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0xF8A8D8", Offset = "0xF8A8D8", VA = "0xF8A8D8")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0xF8AA08", Offset = "0xF8AA08", VA = "0xF8AA08")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0xF8ADB0", Offset = "0xF8ADB0", VA = "0xF8ADB0")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9842CC", Offset = "0x9842CC")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0xF8AE68", Offset = "0xF8AE68", VA = "0xF8AE68")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0xF8AF90", Offset = "0xF8AF90", VA = "0xF8AF90")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0xF8AFC0", Offset = "0xF8AFC0", VA = "0xF8AFC0")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0xF8B08C", Offset = "0xF8B08C", VA = "0xF8B08C")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0xF8B108", Offset = "0xF8B108", VA = "0xF8B108")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0xF8B164", Offset = "0xF8B164", VA = "0xF8B164", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0xF8B208", Offset = "0xF8B208", VA = "0xF8B208", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0xF8B194", Offset = "0xF8B194", VA = "0xF8B194")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x984324", Offset = "0x984324")]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0xF8B7C4", Offset = "0xF8B7C4", VA = "0xF8B7C4")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0xF8BA10", Offset = "0xF8BA10", VA = "0xF8BA10")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9843E8", Offset = "0x9843E8")]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0xF8BC88", Offset = "0xF8BC88", VA = "0xF8BC88")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98446C", Offset = "0x98446C")]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0xF8BF00", Offset = "0xF8BF00", VA = "0xF8BF00")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9844F0", Offset = "0x9844F0")]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0xF8C178", Offset = "0xF8C178", VA = "0xF8C178")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x984574", Offset = "0x984574")]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0xF8C3F0", Offset = "0xF8C3F0", VA = "0xF8C3F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9845F8", Offset = "0x9845F8")]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0xF8C668", Offset = "0xF8C668", VA = "0xF8C668")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98467C", Offset = "0x98467C")]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0xF8C8E0", Offset = "0xF8C8E0", VA = "0xF8C8E0")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0xF8CA84", Offset = "0xF8CA84", VA = "0xF8CA84")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0xF8CADC", Offset = "0xF8CADC", VA = "0xF8CADC")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0xF8CD14", Offset = "0xF8CD14", VA = "0xF8CD14")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0xF8CEA4", Offset = "0xF8CEA4", VA = "0xF8CEA4")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x20000A3")]
public class SimpleCapsuleWithStickMovement : MonoBehaviour
{
	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableLinearMovement;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableRotation;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RotationAngle;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x1400000D")]
	public event Action CameraUpdated
	{
		[Token(Token = "0x60002D9")]
		[Address(RVA = "0xEB7CA8", Offset = "0xEB7CA8", VA = "0xEB7CA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984700", Offset = "0x984700")]
		add
		{
		}
		[Token(Token = "0x60002DA")]
		[Address(RVA = "0xEB7D94", Offset = "0xEB7D94", VA = "0xEB7D94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984710", Offset = "0x984710")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action PreCharacterMove
	{
		[Token(Token = "0x60002DB")]
		[Address(RVA = "0xEB7E80", Offset = "0xEB7E80", VA = "0xEB7E80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984720", Offset = "0x984720")]
		add
		{
		}
		[Token(Token = "0x60002DC")]
		[Address(RVA = "0xEB7F6C", Offset = "0xEB7F6C", VA = "0xEB7F6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984730", Offset = "0x984730")]
		remove
		{
		}
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0xEB8058", Offset = "0xEB8058", VA = "0xEB8058")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0xEB8100", Offset = "0xEB8100", VA = "0xEB8100")]
	private void Start()
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0xEB8104", Offset = "0xEB8104", VA = "0xEB8104")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0xEB8178", Offset = "0xEB8178", VA = "0xEB8178")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0xEB8380", Offset = "0xEB8380", VA = "0xEB8380")]
	private void StickMovement()
	{
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0xEB86A8", Offset = "0xEB86A8", VA = "0xEB86A8")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0xEB88C8", Offset = "0xEB88C8", VA = "0xEB88C8")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x20000A4")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x60002E4")]
	[Address(RVA = "0xC7EEA0", Offset = "0xC7EEA0", VA = "0xC7EEA0", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0xC7EF40", Offset = "0xC7EF40", VA = "0xC7EF40", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x60002E6")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0xC7F01C", Offset = "0xC7F01C", VA = "0xC7F01C")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x20000A5")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97D434", Offset = "0x97D434")]
	public float Range;

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0xC7F02C", Offset = "0xC7F02C", VA = "0xC7F02C", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0xC7F1DC", Offset = "0xC7F1DC", VA = "0xC7F1DC")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x20000A6")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97D46C", Offset = "0x97D46C")]
	public float Range;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97D4A4", Offset = "0x97D4A4")]
	public float MinimumElevation;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97D4DC", Offset = "0x97D4DC")]
	public float Gravity;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97D514", Offset = "0x97D514")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97D514", Offset = "0x97D514")]
	public float AimVelocity;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97D570", Offset = "0x97D570")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97D570", Offset = "0x97D570")]
	public float AimStep;

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0xC7F1EC", Offset = "0xC7F1EC", VA = "0xC7F1EC", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0xC7F450", Offset = "0xC7F450", VA = "0xC7F450")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x20000A7")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97D5C8", Offset = "0x97D5C8")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0xC7F464", Offset = "0xC7F464", VA = "0xC7F464")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0xC7F548", Offset = "0xC7F548", VA = "0xC7F548")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0xC7F594", Offset = "0xC7F594", VA = "0xC7F594")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0xC7F5E0", Offset = "0xC7F5E0", VA = "0xC7F5E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0xC7F694", Offset = "0xC7F694", VA = "0xC7F694", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0xC7F734", Offset = "0xC7F734", VA = "0xC7F734", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0xC7F7D0", Offset = "0xC7F7D0", VA = "0xC7F7D0")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x20000A8")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97D600", Offset = "0x97D600")]
	private bool <IsValidDestination>k__BackingField;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97D610", Offset = "0x97D610")]
	public Transform PositionIndicator;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97D648", Offset = "0x97D648")]
	public Transform OrientationIndicator;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97D680", Offset = "0x97D680")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x17000027")]
	public bool IsValidDestination
	{
		[Token(Token = "0x60002F3")]
		[Address(RVA = "0xC7F98C", Offset = "0xC7F98C", VA = "0xC7F98C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984740", Offset = "0x984740")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002F4")]
		[Address(RVA = "0xC7F994", Offset = "0xC7F994", VA = "0xC7F994")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984750", Offset = "0x984750")]
		private set
		{
		}
	}

	[Token(Token = "0x1400000F")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x60002F9")]
		[Address(RVA = "0xC7FBA4", Offset = "0xC7FBA4", VA = "0xC7FBA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984760", Offset = "0x984760")]
		add
		{
		}
		[Token(Token = "0x60002FA")]
		[Address(RVA = "0xC7FC90", Offset = "0xC7FC90", VA = "0xC7FC90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984770", Offset = "0x984770")]
		remove
		{
		}
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0xC7F9A0", Offset = "0xC7F9A0", VA = "0xC7F9A0")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0xC7FA30", Offset = "0xC7FA30", VA = "0xC7FA30")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0xC7FB4C", Offset = "0xC7FB4C", VA = "0xC7FB4C")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0xC7FBA0", Offset = "0xC7FBA0", VA = "0xC7FBA0")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0xC7FD7C", Offset = "0xC7FD7C", VA = "0xC7FD7C")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0xC7FDE4", Offset = "0xC7FDE4", VA = "0xC7FDE4")]
	public void Recycle()
	{
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0xC7FE1C", Offset = "0xC7FE1C", VA = "0xC7FE1C", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x20000A9")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x2000662")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x978DF4", Offset = "0x978DF4")]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x17000325")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600224F")]
			[Address(RVA = "0xC80674", Offset = "0xC80674", VA = "0xC80674", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000326")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002251")]
			[Address(RVA = "0xC806E4", Offset = "0xC806E4", VA = "0xC806E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600224C")]
		[Address(RVA = "0xC8038C", Offset = "0xC8038C", VA = "0xC8038C")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x600224D")]
		[Address(RVA = "0xC805D8", Offset = "0xC805D8", VA = "0xC805D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600224E")]
		[Address(RVA = "0xC805DC", Offset = "0xC805DC", VA = "0xC805DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002250")]
		[Address(RVA = "0xC8067C", Offset = "0xC8067C", VA = "0xC8067C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000663")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x978E04", Offset = "0x978E04")]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x17000327")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002255")]
			[Address(RVA = "0xC80560", Offset = "0xC80560", VA = "0xC80560", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000328")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002257")]
			[Address(RVA = "0xC805D0", Offset = "0xC805D0", VA = "0xC805D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002252")]
		[Address(RVA = "0xC8042C", Offset = "0xC8042C", VA = "0xC8042C")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6002253")]
		[Address(RVA = "0xC804B0", Offset = "0xC804B0", VA = "0xC804B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002254")]
		[Address(RVA = "0xC804B4", Offset = "0xC804B4", VA = "0xC804B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002256")]
		[Address(RVA = "0xC80568", Offset = "0xC80568", VA = "0xC80568", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0xC800F8", Offset = "0xC800F8", VA = "0xC800F8")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0xC801A4", Offset = "0xC801A4", VA = "0xC801A4", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0xC80228", Offset = "0xC80228", VA = "0xC80228", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0xC80318", Offset = "0xC80318", VA = "0xC80318")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x984780", Offset = "0x984780")]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0xC803B8", Offset = "0xC803B8", VA = "0xC803B8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9847E4", Offset = "0x9847E4")]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000303")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x6000304")]
	public abstract void GetAimData(out Ray aimRay);

	[Token(Token = "0x6000305")]
	[Address(RVA = "0xC80458", Offset = "0xC80458", VA = "0xC80458")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984848", Offset = "0x984848")]
	private void <.ctor>b__2_0()
	{
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0xC80484", Offset = "0xC80484", VA = "0xC80484")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984858", Offset = "0x984858")]
	private void <.ctor>b__2_1()
	{
	}
}
[Token(Token = "0x20000AA")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97D6C8", Offset = "0x97D6C8")]
	private Transform <Pointer>k__BackingField;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97D6D8", Offset = "0x97D6D8")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97D710", Offset = "0x97D710")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97D748", Offset = "0x97D748")]
	public bool FastTeleport;

	[Token(Token = "0x17000028")]
	public Transform Pointer
	{
		[Token(Token = "0x6000307")]
		[Address(RVA = "0xC806EC", Offset = "0xC806EC", VA = "0xC806EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984868", Offset = "0x984868")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000308")]
		[Address(RVA = "0xC806F4", Offset = "0xC806F4", VA = "0xC806F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984878", Offset = "0x984878")]
		private set
		{
		}
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0xC806FC", Offset = "0xC806FC", VA = "0xC806FC", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0xC80864", Offset = "0xC80864", VA = "0xC80864", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0xC80954", Offset = "0xC80954", VA = "0xC80954")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x20000AB")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x2000664")]
	public enum InputModes
	{
		[Token(Token = "0x4001C9D")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x4001C9E")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x4001C9F")]
		ThumbstickTeleport,
		[Token(Token = "0x4001CA0")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x2000665")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x4001CA2")]
		A,
		[Token(Token = "0x4001CA3")]
		B,
		[Token(Token = "0x4001CA4")]
		LeftTrigger,
		[Token(Token = "0x4001CA5")]
		LeftThumbstick,
		[Token(Token = "0x4001CA6")]
		RightTrigger,
		[Token(Token = "0x4001CA7")]
		RightThumbstick,
		[Token(Token = "0x4001CA8")]
		X,
		[Token(Token = "0x4001CA9")]
		Y
	}

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftHand;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightHand;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97D780", Offset = "0x97D780")]
	public InputModes InputMode;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97D7B8", Offset = "0x97D7B8")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97D7F0", Offset = "0x97D7F0")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97D828", Offset = "0x97D828")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x600030C")]
	[Address(RVA = "0xC80958", Offset = "0xC80958", VA = "0xC80958")]
	private void Start()
	{
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0xC8095C", Offset = "0xC8095C", VA = "0xC8095C", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0xC80E14", Offset = "0xC80E14", VA = "0xC80E14", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0xC80EE4", Offset = "0xC80EE4", VA = "0xC80EE4")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x20000AC")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x2000666")]
	public enum OrientationModes
	{
		[Token(Token = "0x4001CAB")]
		HeadRelative,
		[Token(Token = "0x4001CAC")]
		ForwardFacing
	}

	[Token(Token = "0x2000667")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x978E14", Offset = "0x978E14")]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x17000329")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600225B")]
			[Address(RVA = "0xC81434", Offset = "0xC81434", VA = "0xC81434", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600225D")]
			[Address(RVA = "0xC814A4", Offset = "0xC814A4", VA = "0xC814A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002258")]
		[Address(RVA = "0xC8119C", Offset = "0xC8119C", VA = "0xC8119C")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6002259")]
		[Address(RVA = "0xC81348", Offset = "0xC81348", VA = "0xC81348", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600225A")]
		[Address(RVA = "0xC8134C", Offset = "0xC8134C", VA = "0xC8134C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600225C")]
		[Address(RVA = "0xC8143C", Offset = "0xC8143C", VA = "0xC8143C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x6000310")]
	[Address(RVA = "0xC80F90", Offset = "0xC80F90", VA = "0xC80F90")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0xC81044", Offset = "0xC81044", VA = "0xC81044")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0xC8104C", Offset = "0xC8104C", VA = "0xC8104C", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0xC810BC", Offset = "0xC810BC", VA = "0xC810BC", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0xC81128", Offset = "0xC81128", VA = "0xC81128")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x984888", Offset = "0x984888")]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000315")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x6000316")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x6000317")]
	[Address(RVA = "0xC811C8", Offset = "0xC811C8", VA = "0xC811C8")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0xC8131C", Offset = "0xC8131C", VA = "0xC8131C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9848EC", Offset = "0x9848EC")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x20000AD")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x6000319")]
	[Address(RVA = "0xC814AC", Offset = "0xC814AC", VA = "0xC814AC", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0xC814B0", Offset = "0xC814B0", VA = "0xC814B0", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0xC8156C", Offset = "0xC8156C", VA = "0xC8156C")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x20000AE")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97D860", Offset = "0x97D860")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97D898", Offset = "0x97D898")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97D8D0", Offset = "0x97D8D0")]
	public float AimDistanceThreshold;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97D908", Offset = "0x97D908")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x600031C")]
	[Address(RVA = "0xC81570", Offset = "0xC81570", VA = "0xC81570", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0xC815E0", Offset = "0xC815E0", VA = "0xC815E0", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0xC81B4C", Offset = "0xC81B4C", VA = "0xC81B4C")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x20000AF")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97D940", Offset = "0x97D940")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97D978", Offset = "0x97D978")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97D9B0", Offset = "0x97D9B0")]
	public float RotateStickThreshold;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x600031F")]
	[Address(RVA = "0xC81B50", Offset = "0xC81B50", VA = "0xC81B50", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0xC81B9C", Offset = "0xC81B9C", VA = "0xC81B9C", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0xC82080", Offset = "0xC82080", VA = "0xC82080")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x20000B0")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x6000322")]
	[Address(RVA = "0xC82090", Offset = "0xC82090", VA = "0xC82090")]
	private void Start()
	{
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0xC82094", Offset = "0xC82094", VA = "0xC82094")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0xC8209C", Offset = "0xC8209C", VA = "0xC8209C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0xC82198", Offset = "0xC82198", VA = "0xC82198")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0xC821C0", Offset = "0xC821C0", VA = "0xC821C0")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x20000B1")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97D9E8", Offset = "0x97D9E8")]
	private LocomotionTeleport <LocomotionTeleport>k__BackingField;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x17000029")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x6000327")]
		[Address(RVA = "0xC7EF38", Offset = "0xC7EF38", VA = "0xC7EF38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9848FC", Offset = "0x9848FC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000328")]
		[Address(RVA = "0xC821D8", Offset = "0xC821D8", VA = "0xC821D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98490C", Offset = "0x98490C")]
		private set
		{
		}
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0xC7EED4", Offset = "0xC7EED4", VA = "0xC7EED4", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0xC7EFF0", Offset = "0xC7EFF0", VA = "0xC7EFF0", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0xC821E0", Offset = "0xC821E0", VA = "0xC821E0")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x98491C", Offset = "0x98491C")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0xC7F728", Offset = "0xC7F728", VA = "0xC7F728", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0xC7F7C8", Offset = "0xC7F7C8", VA = "0xC7F7C8", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0xC7F024", Offset = "0xC7F024", VA = "0xC7F024")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x20000B2")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x2000668")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x978E24", Offset = "0x978E24")]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x1700032B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002261")]
			[Address(RVA = "0xC829A8", Offset = "0xC829A8", VA = "0xC829A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002263")]
			[Address(RVA = "0xC82A18", Offset = "0xC82A18", VA = "0xC82A18", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600225E")]
		[Address(RVA = "0xC82464", Offset = "0xC82464", VA = "0xC82464")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600225F")]
		[Address(RVA = "0xC82638", Offset = "0xC82638", VA = "0xC82638", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002260")]
		[Address(RVA = "0xC8263C", Offset = "0xC8263C", VA = "0xC8263C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002262")]
		[Address(RVA = "0xC829B0", Offset = "0xC829B0", VA = "0xC829B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97D9F8", Offset = "0x97D9F8")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x40003C1")]
	private const float ERROR_MARGIN = 0.1f;

	[Token(Token = "0x600032F")]
	[Address(RVA = "0xC822B0", Offset = "0xC822B0", VA = "0xC822B0")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0xC82374", Offset = "0xC82374", VA = "0xC82374", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0xC823B4", Offset = "0xC823B4", VA = "0xC823B4", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0xC823F0", Offset = "0xC823F0", VA = "0xC823F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x984954", Offset = "0x984954")]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0xC82490", Offset = "0xC82490", VA = "0xC82490", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x6000334")]
	protected abstract bool ConsiderTeleport(Vector3 start, ref Vector3 end);

	[Token(Token = "0x6000335")]
	[Address(RVA = "0xC824C0", Offset = "0xC824C0", VA = "0xC824C0", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0xC8260C", Offset = "0xC8260C", VA = "0xC8260C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9849B8", Offset = "0x9849B8")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x20000B3")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x6000337")]
	[Address(RVA = "0xC82A20", Offset = "0xC82A20", VA = "0xC82A20")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0xC82A80", Offset = "0xC82A80", VA = "0xC82A80", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0xC82C38", Offset = "0xC82C38", VA = "0xC82C38", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0xC82D70", Offset = "0xC82D70", VA = "0xC82D70")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9849C8", Offset = "0x9849C8")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0xC82D74", Offset = "0xC82D74", VA = "0xC82D74")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x20000B4")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97DA30", Offset = "0x97DA30")]
	public float LOSOffset;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97DA68", Offset = "0x97DA68")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x600033C")]
	[Address(RVA = "0xC82D80", Offset = "0xC82D80", VA = "0xC82D80", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0xC83018", Offset = "0xC83018", VA = "0xC83018")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x20000B5")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x600033E")]
	[Address(RVA = "0xC83024", Offset = "0xC83024", VA = "0xC83024", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0xC831DC", Offset = "0xC831DC", VA = "0xC831DC")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x20000B6")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x6000340")]
	[Address(RVA = "0xC831E0", Offset = "0xC831E0", VA = "0xC831E0", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0xC83288", Offset = "0xC83288", VA = "0xC83288", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000342")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x6000343")]
	[Address(RVA = "0xC8332C", Offset = "0xC8332C", VA = "0xC8332C")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x20000B7")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x2000669")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x978E34", Offset = "0x978E34")]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x4001CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x4001CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x4001CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x1700032D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002267")]
			[Address(RVA = "0xC836FC", Offset = "0xC836FC", VA = "0xC836FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002269")]
			[Address(RVA = "0xC8376C", Offset = "0xC8376C", VA = "0xC8376C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002264")]
		[Address(RVA = "0xC833D4", Offset = "0xC833D4", VA = "0xC833D4")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6002265")]
		[Address(RVA = "0xC835C0", Offset = "0xC835C0", VA = "0xC835C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002266")]
		[Address(RVA = "0xC835C4", Offset = "0xC835C4", VA = "0xC835C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002268")]
		[Address(RVA = "0xC83704", Offset = "0xC83704", VA = "0xC83704", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97DAA0", Offset = "0x97DAA0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97DAA0", Offset = "0x97DAA0")]
	public float TransitionDuration;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97DAF8", Offset = "0x97DAF8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97DAF8", Offset = "0x97DAF8")]
	public float TeleportDelay;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97DB4C", Offset = "0x97DB4C")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x6000344")]
	[Address(RVA = "0xC83334", Offset = "0xC83334", VA = "0xC83334", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0xC83360", Offset = "0xC83360", VA = "0xC83360")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x984A00", Offset = "0x984A00")]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0xC83400", Offset = "0xC83400", VA = "0xC83400")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x20000B8")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x6000347")]
	[Address(RVA = "0xC83774", Offset = "0xC83774", VA = "0xC83774", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0xC837A4", Offset = "0xC837A4", VA = "0xC837A4")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x20000B9")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x200066A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x978E44", Offset = "0x978E44")]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x4001CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x4001CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x1700032F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600226D")]
			[Address(RVA = "0xC83A6C", Offset = "0xC83A6C", VA = "0xC83A6C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000330")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600226F")]
			[Address(RVA = "0xC83ADC", Offset = "0xC83ADC", VA = "0xC83ADC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600226A")]
		[Address(RVA = "0xC8384C", Offset = "0xC8384C", VA = "0xC8384C")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x600226B")]
		[Address(RVA = "0xC838C0", Offset = "0xC838C0", VA = "0xC838C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600226C")]
		[Address(RVA = "0xC838C4", Offset = "0xC838C4", VA = "0xC838C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600226E")]
		[Address(RVA = "0xC83A74", Offset = "0xC83A74", VA = "0xC83A74", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97DB84", Offset = "0x97DB84")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97DB84", Offset = "0x97DB84")]
	public float TransitionDuration;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x6000349")]
	[Address(RVA = "0xC837AC", Offset = "0xC837AC", VA = "0xC837AC", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0xC837D8", Offset = "0xC837D8", VA = "0xC837D8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x984A64", Offset = "0x984A64")]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0xC83878", Offset = "0xC83878", VA = "0xC83878")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x20000BA")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr getDurationMethodId;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static IntPtr getPlaybackPositionMethodId;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr setPlaybackPositionMethodId;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static jvalue[] setPlaybackPositionParams;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x1700002A")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x600034C")]
		[Address(RVA = "0xF5A0D0", Offset = "0xF5A0D0", VA = "0xF5A0D0")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700002B")]
	private static IntPtr Activity
	{
		[Token(Token = "0x600034D")]
		[Address(RVA = "0xF5A3AC", Offset = "0xF5A3AC", VA = "0xF5A3AC")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700002C")]
	public static bool IsAvailable
	{
		[Token(Token = "0x600034E")]
		[Address(RVA = "0xF56FEC", Offset = "0xF56FEC", VA = "0xF56FEC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700002D")]
	public static bool IsPlaying
	{
		[Token(Token = "0x600034F")]
		[Address(RVA = "0xF58490", Offset = "0xF58490", VA = "0xF58490")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700002E")]
	public static long Duration
	{
		[Token(Token = "0x6000350")]
		[Address(RVA = "0xF58674", Offset = "0xF58674", VA = "0xF58674")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x1700002F")]
	public static long PlaybackPosition
	{
		[Token(Token = "0x6000351")]
		[Address(RVA = "0xF58580", Offset = "0xF58580", VA = "0xF58580")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000352")]
		[Address(RVA = "0xF57B24", Offset = "0xF57B24", VA = "0xF57B24")]
		set
		{
		}
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0xF58D14", Offset = "0xF58D14", VA = "0xF58D14")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0xF58A40", Offset = "0xF58A40", VA = "0xF58A40")]
	public static void Stop()
	{
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0xF57794", Offset = "0xF57794", VA = "0xF57794")]
	public static void Play()
	{
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0xF57928", Offset = "0xF57928", VA = "0xF57928")]
	public static void Pause()
	{
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0xF58850", Offset = "0xF58850", VA = "0xF58850")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0xF58F5C", Offset = "0xF58F5C", VA = "0xF58F5C")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0xF58284", Offset = "0xF58284", VA = "0xF58284")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x20000BB")]
public class ButtonDownListener : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x14000010")]
	public event Action onButtonDown
	{
		[Token(Token = "0x600035B")]
		[Address(RVA = "0xC0E0DC", Offset = "0xC0E0DC", VA = "0xC0E0DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984AC8", Offset = "0x984AC8")]
		add
		{
		}
		[Token(Token = "0x600035C")]
		[Address(RVA = "0xC0E1C8", Offset = "0xC0E1C8", VA = "0xC0E1C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984AD8", Offset = "0x984AD8")]
		remove
		{
		}
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0xC0E2B4", Offset = "0xC0E2B4", VA = "0xC0E2B4", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0xC0E2C8", Offset = "0xC0E2C8", VA = "0xC0E2C8")]
	public ButtonDownListener()
	{
	}
}
[Token(Token = "0x20000BC")]
public class MediaPlayerImage : Image
{
	[Token(Token = "0x200066B")]
	public enum ButtonType
	{
		[Token(Token = "0x4001CBF")]
		Play,
		[Token(Token = "0x4001CC0")]
		Pause,
		[Token(Token = "0x4001CC1")]
		FastForward,
		[Token(Token = "0x4001CC2")]
		Rewind,
		[Token(Token = "0x4001CC3")]
		SkipForward,
		[Token(Token = "0x4001CC4")]
		SkipBack,
		[Token(Token = "0x4001CC5")]
		Stop
	}

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private ButtonType m_ButtonType;

	[Token(Token = "0x17000030")]
	public ButtonType buttonType
	{
		[Token(Token = "0x600035F")]
		[Address(RVA = "0xF54AD0", Offset = "0xF54AD0", VA = "0xF54AD0")]
		get
		{
			return default(ButtonType);
		}
		[Token(Token = "0x6000360")]
		[Address(RVA = "0xF54AD8", Offset = "0xF54AD8", VA = "0xF54AD8")]
		set
		{
		}
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0xF54AFC", Offset = "0xF54AFC", VA = "0xF54AFC", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper toFill)
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0xF563D8", Offset = "0xF563D8", VA = "0xF563D8")]
	public MediaPlayerImage()
	{
	}
}
[Token(Token = "0x20000BD")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x200066C")]
	public enum VideoShape
	{
		[Token(Token = "0x4001CC7")]
		_360,
		[Token(Token = "0x4001CC8")]
		_180,
		[Token(Token = "0x4001CC9")]
		Quad
	}

	[Token(Token = "0x200066D")]
	public enum VideoStereo
	{
		[Token(Token = "0x4001CCB")]
		Mono,
		[Token(Token = "0x4001CCC")]
		TopBottom,
		[Token(Token = "0x4001CCD")]
		LeftRight
	}

	[Token(Token = "0x200066E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x978E54", Offset = "0x978E54")]
	private sealed class <Start>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x17000331")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002273")]
			[Address(RVA = "0xF5924C", Offset = "0xF5924C", VA = "0xF5924C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000332")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002275")]
			[Address(RVA = "0xF592BC", Offset = "0xF592BC", VA = "0xF592BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002270")]
		[Address(RVA = "0xF573D4", Offset = "0xF573D4", VA = "0xF573D4")]
		[DebuggerHidden]
		public <Start>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6002271")]
		[Address(RVA = "0xF590B0", Offset = "0xF590B0", VA = "0xF590B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002272")]
		[Address(RVA = "0xF590B4", Offset = "0xF590B4", VA = "0xF590B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002274")]
		[Address(RVA = "0xF59254", Offset = "0xF59254", VA = "0xF59254", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200066F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x978E64", Offset = "0x978E64")]
	private sealed class <>c__DisplayClass33_0
	{
		[Token(Token = "0x4001CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string moviePath;

		[Token(Token = "0x4001CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string drmLicencesUrl;

		[Token(Token = "0x4001CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x6002276")]
		[Address(RVA = "0xF576E8", Offset = "0xF576E8", VA = "0xF576E8")]
		public <>c__DisplayClass33_0()
		{
		}

		[Token(Token = "0x6002277")]
		[Address(RVA = "0xF58C2C", Offset = "0xF58C2C", VA = "0xF58C2C")]
		internal void <Play>b__0()
		{
		}
	}

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97DC0C", Offset = "0x97DC0C")]
	private bool <IsPlaying>k__BackingField;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97DC1C", Offset = "0x97DC1C")]
	private long <Duration>k__BackingField;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97DC2C", Offset = "0x97DC2C")]
	private long <PlaybackPosition>k__BackingField;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture copyTexture;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string MovieName;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string DrmLicenseUrl;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool LoopVideo;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public VideoShape Shape;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VideoStereo Stereo;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool DisplayMono;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VideoShape _LastShape;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private VideoStereo _LastStereo;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _LastDisplayMono;

	[Token(Token = "0x17000031")]
	public bool IsPlaying
	{
		[Token(Token = "0x6000363")]
		[Address(RVA = "0xF56D54", Offset = "0xF56D54", VA = "0xF56D54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984AE8", Offset = "0x984AE8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000364")]
		[Address(RVA = "0xF56D5C", Offset = "0xF56D5C", VA = "0xF56D5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984AF8", Offset = "0x984AF8")]
		private set
		{
		}
	}

	[Token(Token = "0x17000032")]
	public long Duration
	{
		[Token(Token = "0x6000365")]
		[Address(RVA = "0xF56D68", Offset = "0xF56D68", VA = "0xF56D68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984B08", Offset = "0x984B08")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000366")]
		[Address(RVA = "0xF56D70", Offset = "0xF56D70", VA = "0xF56D70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984B18", Offset = "0x984B18")]
		private set
		{
		}
	}

	[Token(Token = "0x17000033")]
	public long PlaybackPosition
	{
		[Token(Token = "0x6000367")]
		[Address(RVA = "0xF56D78", Offset = "0xF56D78", VA = "0xF56D78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984B28", Offset = "0x984B28")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000368")]
		[Address(RVA = "0xF56D80", Offset = "0xF56D80", VA = "0xF56D80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984B38", Offset = "0x984B38")]
		private set
		{
		}
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0xF56D88", Offset = "0xF56D88", VA = "0xF56D88")]
	private void Awake()
	{
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0xF57054", Offset = "0xF57054", VA = "0xF57054")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0xF570C0", Offset = "0xF570C0", VA = "0xF570C0")]
	private void UpdateShapeAndStereo()
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0xF57360", Offset = "0xF57360", VA = "0xF57360")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x984B48", Offset = "0x984B48")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0xF57400", Offset = "0xF57400", VA = "0xF57400")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0xF576F0", Offset = "0xF576F0", VA = "0xF576F0")]
	public void Play()
	{
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0xF57888", Offset = "0xF57888", VA = "0xF57888")]
	public void Pause()
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0xF57A1C", Offset = "0xF57A1C", VA = "0xF57A1C")]
	public void SeekTo(long position)
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0xF57C74", Offset = "0xF57C74", VA = "0xF57C74")]
	private void Update()
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0xF58768", Offset = "0xF58768", VA = "0xF58768")]
	public void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0xF589A0", Offset = "0xF589A0", VA = "0xF589A0")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0xF58B34", Offset = "0xF58B34", VA = "0xF58B34")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0xF58C1C", Offset = "0xF58C1C", VA = "0xF58C1C")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x20000BE")]
public class MoviePlayerSampleControls : MonoBehaviour
{
	[Token(Token = "0x2000670")]
	private enum PlaybackState
	{
		[Token(Token = "0x4001CD5")]
		Playing,
		[Token(Token = "0x4001CD6")]
		Paused,
		[Token(Token = "0x4001CD7")]
		Rewinding,
		[Token(Token = "0x4001CD8")]
		FastForwarding
	}

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MoviePlayerSample Player;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInputModule InputModule;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRGazePointer GazePointer;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject LeftHand;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RightHand;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Canvas Canvas;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ButtonDownListener PlayPause;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MediaPlayerImage PlayPauseImage;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Slider ProgressBar;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ButtonDownListener FastForward;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MediaPlayerImage FastForwardImage;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ButtonDownListener Rewind;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MediaPlayerImage RewindImage;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float TimeoutTime;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _isVisible;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _lastButtonTime;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _didSeek;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private long _seekPreviousPosition;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private long _rewindStartPosition;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _rewindStartTime;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private PlaybackState _state;

	[Token(Token = "0x6000376")]
	[Address(RVA = "0xF592C4", Offset = "0xF592C4", VA = "0xF592C4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0xF59640", Offset = "0xF59640", VA = "0xF59640")]
	private void OnPlayPauseClicked()
	{
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0xF598A4", Offset = "0xF598A4", VA = "0xF598A4")]
	private void OnFastForwardClicked()
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0xF59A68", Offset = "0xF59A68", VA = "0xF59A68")]
	private void OnRewindClicked()
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0xF59BB8", Offset = "0xF59BB8", VA = "0xF59BB8")]
	private void OnSeekBarMoved(float value)
	{
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0xF599F8", Offset = "0xF599F8", VA = "0xF599F8")]
	private void Seek(long pos)
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0xF59C9C", Offset = "0xF59C9C", VA = "0xF59C9C")]
	private void Update()
	{
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0xF5950C", Offset = "0xF5950C", VA = "0xF5950C")]
	private void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0xF5A0C0", Offset = "0xF5A0C0", VA = "0xF5A0C0")]
	public MoviePlayerSampleControls()
	{
	}
}
[Token(Token = "0x20000BF")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x96DBB8", Offset = "0x96DBB8")]
public class OVROverlayMeshGenerator : MonoBehaviour
{
	[Token(Token = "0x2000671")]
	private enum CubeFace
	{
		[Token(Token = "0x4001CDA")]
		Right,
		[Token(Token = "0x4001CDB")]
		Left,
		[Token(Token = "0x4001CDC")]
		Top,
		[Token(Token = "0x4001CDD")]
		Bottom,
		[Token(Token = "0x4001CDE")]
		Front,
		[Token(Token = "0x4001CDF")]
		Back,
		[Token(Token = "0x4001CE0")]
		COUNT
	}

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Mesh _Mesh;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Vector3> _Verts;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Vector2> _UV;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<int> _Tris;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OVROverlay _Overlay;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MeshFilter _MeshFilter;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MeshCollider _MeshCollider;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform _CameraRoot;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform _Transform;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private OVROverlay.OverlayShape _LastShape;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 _LastPosition;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Quaternion _LastRotation;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 _LastScale;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Rect _LastRectLeft;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Rect _LastRectRight;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private bool _Awake;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3[] BottomLeft;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly Vector3[] RightVector;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly Vector3[] UpVector;

	[Token(Token = "0x600037F")]
	[Address(RVA = "0xDDDAA8", Offset = "0xDDDAA8", VA = "0xDDDAA8")]
	protected void Awake()
	{
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0xDDDC34", Offset = "0xDDDC34", VA = "0xDDDC34")]
	private Rect GetBoundingRect(Rect a, Rect b)
	{
		return default(Rect);
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0xDDDDF0", Offset = "0xDDDDF0", VA = "0xDDDDF0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0xDDE300", Offset = "0xDDE300", VA = "0xDDE300")]
	private void UpdateMesh(OVROverlay.OverlayShape shape, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect)
	{
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0xDDE688", Offset = "0xDDE688", VA = "0xDDE688")]
	public static void GenerateMesh(List<Vector3> verts, List<Vector2> uvs, List<int> tris, OVROverlay.OverlayShape shape, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect)
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0xDDFC08", Offset = "0xDDFC08", VA = "0xDDFC08")]
	private static Vector2 GetSphereUV(float theta, float phi, float expand_coef)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0xDDFC68", Offset = "0xDDFC68", VA = "0xDDFC68")]
	private static Vector3 GetSphereVert(float theta, float phi)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0xDDEA08", Offset = "0xDDEA08", VA = "0xDDEA08")]
	public static void BuildSphere(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect, float worldScale = 800f, int latitudes = 128, int longitudes = 128, float expand_coef = 1f)
	{
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0xDDFD50", Offset = "0xDDFD50", VA = "0xDDFD50")]
	private static Vector2 GetCubeUV(CubeFace face, Vector2 sideUV, float expand_coef)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0xDDFF3C", Offset = "0xDDFF3C", VA = "0xDDFF3C")]
	private static Vector3 GetCubeVert(CubeFace face, Vector2 sideUV, float expand_coef)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0xDDEF7C", Offset = "0xDDEF7C", VA = "0xDDEF7C")]
	public static void BuildCube(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 position, Quaternion rotation, Vector3 scale, float worldScale = 800f, int subQuads = 1, float expand_coef = 1.01f)
	{
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0xDDF38C", Offset = "0xDDF38C", VA = "0xDDF38C")]
	public static void BuildQuad(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Rect rect)
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0xDDF7C8", Offset = "0xDDF7C8", VA = "0xDDF7C8")]
	public static void BuildHemicylinder(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 scale, Rect rect, int longitudes = 128)
	{
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0xDE0128", Offset = "0xDE0128", VA = "0xDE0128")]
	public OVROverlayMeshGenerator()
	{
	}
}
[Token(Token = "0x20000C0")]
public static class VectorUtil
{
	[Token(Token = "0x600038E")]
	[Address(RVA = "0xD7FCD0", Offset = "0xD7FCD0", VA = "0xD7FCD0")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x20000C1")]
public class DebugUISample : MonoBehaviour
{
	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inMenu;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text sliderText;

	[Token(Token = "0x600038F")]
	[Address(RVA = "0xC154BC", Offset = "0xC154BC", VA = "0xC154BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0xC15958", Offset = "0xC15958", VA = "0xC15958")]
	public void TogglePressed(UnityEngine.UI.Toggle t)
	{
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0xC15A20", Offset = "0xC15A20", VA = "0xC15A20")]
	public void RadioPressed(string radioLabel, string group, UnityEngine.UI.Toggle t)
	{
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0xC15CDC", Offset = "0xC15CDC", VA = "0xC15CDC")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0xC15DCC", Offset = "0xC15DCC", VA = "0xC15DCC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0xC15EC0", Offset = "0xC15EC0", VA = "0xC15EC0")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0xC15F2C", Offset = "0xC15F2C", VA = "0xC15F2C")]
	public DebugUISample()
	{
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0xC15F34", Offset = "0xC15F34", VA = "0xC15F34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984BBC", Offset = "0x984BBC")]
	private void <Start>b__2_0(UnityEngine.UI.Toggle t)
	{
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0xC15F90", Offset = "0xC15F90", VA = "0xC15F90")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984BCC", Offset = "0x984BCC")]
	private void <Start>b__2_1(UnityEngine.UI.Toggle t)
	{
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0xC15FEC", Offset = "0xC15FEC", VA = "0xC15FEC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984BDC", Offset = "0x984BDC")]
	private void <Start>b__2_2(UnityEngine.UI.Toggle t)
	{
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0xC16048", Offset = "0xC16048", VA = "0xC16048")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984BEC", Offset = "0x984BEC")]
	private void <Start>b__2_3(UnityEngine.UI.Toggle t)
	{
	}
}
[Token(Token = "0x20000C2")]
public class HandsActiveChecker : MonoBehaviour
{
	[Token(Token = "0x2000672")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x978E74", Offset = "0x978E74")]
	private sealed class <GetCenterEye>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandsActiveChecker <>4__this;

		[Token(Token = "0x17000333")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600227B")]
			[Address(RVA = "0xCA8A54", Offset = "0xCA8A54", VA = "0xCA8A54", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000334")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600227D")]
			[Address(RVA = "0xCA8AC4", Offset = "0xCA8AC4", VA = "0xCA8AC4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002278")]
		[Address(RVA = "0xCA88E0", Offset = "0xCA88E0", VA = "0xCA88E0")]
		[DebuggerHidden]
		public <GetCenterEye>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6002279")]
		[Address(RVA = "0xCA8914", Offset = "0xCA8914", VA = "0xCA8914", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600227A")]
		[Address(RVA = "0xCA8918", Offset = "0xCA8918", VA = "0xCA8918", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600227C")]
		[Address(RVA = "0xCA8A5C", Offset = "0xCA8A5C", VA = "0xCA8A5C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _notificationPrefab;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _notification;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRCameraRig _cameraRig;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _centerEye;

	[Token(Token = "0x600039A")]
	[Address(RVA = "0xCA8548", Offset = "0xCA8548", VA = "0xCA8548")]
	private void Awake()
	{
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0xCA864C", Offset = "0xCA864C", VA = "0xCA864C")]
	private void Update()
	{
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0xCA85D8", Offset = "0xCA85D8", VA = "0xCA85D8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x984BFC", Offset = "0x984BFC")]
	private IEnumerator GetCenterEye()
	{
		return null;
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0xCA890C", Offset = "0xCA890C", VA = "0xCA890C")]
	public HandsActiveChecker()
	{
	}
}
[Token(Token = "0x20000C3")]
[ExecuteInEditMode]
public class CharacterCapsule : MonoBehaviour
{
	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController _character;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _height;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _radius;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97DC4C", Offset = "0x97DC4C")]
	public int SubdivisionsU;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97DC68", Offset = "0x97DC68")]
	public int SubdivisionsV;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _subdivisionU;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _subdivisionV;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _vertices;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x600039E")]
	[Address(RVA = "0xC0F5C8", Offset = "0xC0F5C8", VA = "0xC0F5C8")]
	private void Update()
	{
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0xC10528", Offset = "0xC10528", VA = "0xC10528")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x20000C4")]
public class LocomotionSampleSupport : MonoBehaviour
{
	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocomotionController lc;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inMenu;

	[Token(Token = "0x17000034")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x60003A0")]
		[Address(RVA = "0xF89A98", Offset = "0xF89A98", VA = "0xF89A98")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0xF89AF8", Offset = "0xF89AF8", VA = "0xF89AF8")]
	public void Start()
	{
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0xF89EB8", Offset = "0xF89EB8", VA = "0xF89EB8")]
	public void Update()
	{
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0xF89FB4", Offset = "0xF89FB4", VA = "0xF89FB4")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x984C60", Offset = "0x984C60")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x60003A4")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x60003A5")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x60003A6")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x60003A7")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x60003A8")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x60003A9")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x60003AA")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x60003AB")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0xF8A01C", Offset = "0xF8A01C", VA = "0xF8A01C")]
	protected void UpdateToggle(UnityEngine.UI.Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0xF8A080", Offset = "0xF8A080", VA = "0xF8A080")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0xF8A130", Offset = "0xF8A130", VA = "0xF8A130")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0xF8A350", Offset = "0xF8A350", VA = "0xF8A350")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0xF8A440", Offset = "0xF8A440", VA = "0xF8A440")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0xF89D64", Offset = "0xF89D64", VA = "0xF89D64")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0xF8A528", Offset = "0xF8A528", VA = "0xF8A528")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0xF8A5B8", Offset = "0xF8A5B8", VA = "0xF8A5B8")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0xF8A6E8", Offset = "0xF8A6E8", VA = "0xF8A6E8")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x20000C5")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x96DC4C", Offset = "0x96DC4C")]
public class OVROverlayCanvas : MonoBehaviour
{
	[Token(Token = "0x2000673")]
	public enum DrawMode
	{
		[Token(Token = "0x4001CE5")]
		Opaque,
		[Token(Token = "0x4001CE6")]
		OpaqueWithClip,
		[Token(Token = "0x4001CE7")]
		TransparentDefaultAlpha,
		[Token(Token = "0x4001CE8")]
		TransparentCorrectAlpha
	}

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[HideInInspector]
	private Shader _transparentShader;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[HideInInspector]
	private Shader _opaqueShader;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform _rectTransform;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Canvas _canvas;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera _camera;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OVROverlay _overlay;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture _renderTexture;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh _quad;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material _defaultMat;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int MaxTextureSize;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int MinTextureSize;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float PixelsPerUnit;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int DrawRate;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int DrawFrameOffset;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool Expensive;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int Layer;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public DrawMode Opacity;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool ScaleViewport;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Plane[] _FrustumPlanes;

	[Token(Token = "0x17000035")]
	public bool overlayEnabled
	{
		[Token(Token = "0x60003BB")]
		[Address(RVA = "0xDDD840", Offset = "0xDDD840", VA = "0xDDD840")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003BC")]
		[Address(RVA = "0xDDD8DC", Offset = "0xDDD8DC", VA = "0xDDD8DC")]
		set
		{
		}
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0xDDBC2C", Offset = "0xDDBC2C", VA = "0xDDBC2C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0xDDCCB4", Offset = "0xDDCCB4", VA = "0xDDCCB4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0xDDCD38", Offset = "0xDDCD38", VA = "0xDDCD38")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0xDDCE4C", Offset = "0xDDCE4C", VA = "0xDDCE4C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0xDDCF60", Offset = "0xDDCF60", VA = "0xDDCF60", Slot = "4")]
	protected virtual bool ShouldRender()
	{
		return default(bool);
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0xDDD190", Offset = "0xDDD190", VA = "0xDDD190")]
	private void Update()
	{
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0xDDD9F4", Offset = "0xDDD9F4", VA = "0xDDD9F4")]
	public OVROverlayCanvas()
	{
	}
}
[Token(Token = "0x20000C6")]
public class StartMenu : MonoBehaviour
{
	[Token(Token = "0x2000674")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x978E84", Offset = "0x978E84")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x4001CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sceneIndex;

		[Token(Token = "0x4001CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StartMenu <>4__this;

		[Token(Token = "0x600227E")]
		[Address(RVA = "0xC77920", Offset = "0xC77920", VA = "0xC77920")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x600227F")]
		[Address(RVA = "0xC77A18", Offset = "0xC77A18", VA = "0xC77A18")]
		internal void <Start>b__0()
		{
		}
	}

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVROverlay overlay;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVROverlay text;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig vrRig;

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0xC7773C", Offset = "0xC7773C", VA = "0xC7773C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0xC77928", Offset = "0xC77928", VA = "0xC77928")]
	private void LoadScene(int idx)
	{
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0xC77A10", Offset = "0xC77A10", VA = "0xC77A10")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x20000C7")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x96DCB0", Offset = "0x96DCB0")]
public class MouseLook : MonoBehaviour
{
	[Token(Token = "0x2000675")]
	public enum RotationAxes
	{
		[Token(Token = "0x4001CEC")]
		MouseXAndY,
		[Token(Token = "0x4001CED")]
		MouseX,
		[Token(Token = "0x4001CEE")]
		MouseY
	}

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RotationAxes axes;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sensitivityX;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sensitivityY;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minimumX;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maximumX;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minimumY;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maximumY;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float rotationY;

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0xF56440", Offset = "0xF56440", VA = "0xF56440")]
	private void Update()
	{
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0xF566C4", Offset = "0xF566C4", VA = "0xF566C4")]
	private void Start()
	{
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0xF5678C", Offset = "0xF5678C", VA = "0xF5678C")]
	public MouseLook()
	{
	}
}
[Token(Token = "0x20000C8")]
public struct ReflectionSnapshot
{
	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float fadeTime;
}
[Token(Token = "0x20000C9")]
public class ONSPReflectionZone : MonoBehaviour
{
	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeTime;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Stack<ReflectionSnapshot> snapshotList;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ReflectionSnapshot currentSnapshot;

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0x1718B44", Offset = "0x1718B44", VA = "0x1718B44")]
	private void Start()
	{
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0x1718B48", Offset = "0x1718B48", VA = "0x1718B48")]
	private void Update()
	{
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0x1718B4C", Offset = "0x1718B4C", VA = "0x1718B4C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0x1718CD8", Offset = "0x1718CD8", VA = "0x1718CD8")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0x1718BA0", Offset = "0x1718BA0", VA = "0x1718BA0")]
	private bool CheckForAudioListener(GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0x1718C34", Offset = "0x1718C34", VA = "0x1718C34")]
	private void PushCurrentMixerShapshot()
	{
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0x1718D2C", Offset = "0x1718D2C", VA = "0x1718D2C")]
	private void PopCurrentMixerSnapshot()
	{
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0x1718DCC", Offset = "0x1718DCC", VA = "0x1718DCC")]
	private void SetReflectionValues()
	{
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0x1718F58", Offset = "0x1718F58", VA = "0x1718F58")]
	private void SetReflectionValues(ref ReflectionSnapshot mss)
	{
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0x17190E4", Offset = "0x17190E4", VA = "0x17190E4")]
	public ONSPReflectionZone()
	{
	}
}
[Token(Token = "0x20000CA")]
public class OculusSpatializerUnity : MonoBehaviour
{
	[Token(Token = "0x2000676")]
	public delegate void AudioRaycastCallback(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data);

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layerMask;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool visualizeRoom;

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool roomVisualizationInitialized;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int raysPerSecond;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float roomInterpSpeed;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxWallDistance;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int rayCacheSize;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool dynamicReflectionsEnabled;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioRaycastCallback _raycastCallback;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float particleSize;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float particleOffset;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject room;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Renderer[] wallRenderer;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] dims;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float[] coefs;

	[Token(Token = "0x4000460")]
	private const int HIT_COUNT = 2048;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] points;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3[] normals;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ParticleSystem sys;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LayerMask gLayerMask;

	[Token(Token = "0x4000466")]
	private const string strOSP = "AudioPluginOculusSpatializer";

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0xCBB34C", Offset = "0xCBB34C", VA = "0xCBB34C")]
	private static Vector3 swapHandedness(Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0xCBB384", Offset = "0xCBB384", VA = "0xCBB384")]
	private static void AudioRaycast(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data)
	{
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0xCBB554", Offset = "0xCBB554", VA = "0xCBB554")]
	private void Start()
	{
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0xCBB60C", Offset = "0xCBB60C", VA = "0xCBB60C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0xCBB71C", Offset = "0xCBB71C", VA = "0xCBB71C")]
	private void Update()
	{
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0xCBC354", Offset = "0xCBC354", VA = "0xCBC354")]
	private void inititalizeRoomVisualization()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60003D6")]
	[Address(RVA = "0xCBB5E8", Offset = "0xCBB5E8", VA = "0xCBB5E8")]
	private static extern int OSP_Unity_AssignRaycastCallback(MulticastDelegate callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x60003D7")]
	[Address(RVA = "0xCBB670", Offset = "0xCBB670", VA = "0xCBB670")]
	private static extern int OSP_Unity_AssignRaycastCallback(IntPtr callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x60003D8")]
	[Address(RVA = "0xCBC03C", Offset = "0xCBC03C", VA = "0xCBC03C")]
	private static extern int OSP_Unity_SetDynamicRoomRaysPerSecond(int RaysPerSecond);

	[PreserveSig]
	[Token(Token = "0x60003D9")]
	[Address(RVA = "0xCBC0D8", Offset = "0xCBC0D8", VA = "0xCBC0D8")]
	private static extern int OSP_Unity_SetDynamicRoomInterpSpeed(float InterpSpeed);

	[PreserveSig]
	[Token(Token = "0x60003DA")]
	[Address(RVA = "0xCBC178", Offset = "0xCBC178", VA = "0xCBC178")]
	private static extern int OSP_Unity_SetDynamicRoomMaxWallDistance(float MaxWallDistance);

	[PreserveSig]
	[Token(Token = "0x60003DB")]
	[Address(RVA = "0xCBC218", Offset = "0xCBC218", VA = "0xCBC218")]
	private static extern int OSP_Unity_SetDynamicRoomRaysRayCacheSize(int RayCacheSize);

	[PreserveSig]
	[Token(Token = "0x60003DC")]
	[Address(RVA = "0xCBC2B4", Offset = "0xCBC2B4", VA = "0xCBC2B4")]
	private static extern int OSP_Unity_UpdateRoomModel(float wetLevel);

	[PreserveSig]
	[Token(Token = "0x60003DD")]
	[Address(RVA = "0xCBD6BC", Offset = "0xCBD6BC", VA = "0xCBD6BC")]
	private static extern int OSP_Unity_GetRoomDimensions(float[] roomDimensions, float[] reflectionsCoefs, out Vector3 position);

	[PreserveSig]
	[Token(Token = "0x60003DE")]
	[Address(RVA = "0xCBD780", Offset = "0xCBD780", VA = "0xCBD780")]
	private static extern int OSP_Unity_GetRaycastHits(Vector3[] points, Vector3[] normals, int length);

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0xCBD844", Offset = "0xCBD844", VA = "0xCBD844")]
	public OculusSpatializerUnity()
	{
	}
}
[Token(Token = "0x20000CB")]
public class ONSPAmbisonicsNative : MonoBehaviour
{
	[Token(Token = "0x2000677")]
	public enum ovrAmbisonicsNativeStatus
	{
		[Token(Token = "0x4001CF0")]
		Uninitialized = -1,
		[Token(Token = "0x4001CF1")]
		NotEnabled,
		[Token(Token = "0x4001CF2")]
		Success,
		[Token(Token = "0x4001CF3")]
		StreamError,
		[Token(Token = "0x4001CF4")]
		ProcessError,
		[Token(Token = "0x4001CF5")]
		MaxStatValue
	}

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int numFOAChannels;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int paramVSpeakerMode;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int paramAmbiStat;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ovrAmbisonicsNativeStatus currentStatus;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private bool useVirtualSpeakers;

	[Token(Token = "0x17000036")]
	public bool UseVirtualSpeakers
	{
		[Token(Token = "0x60003E1")]
		[Address(RVA = "0x1705C68", Offset = "0x1705C68", VA = "0x1705C68")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003E2")]
		[Address(RVA = "0x1705C70", Offset = "0x1705C70", VA = "0x1705C70")]
		set
		{
		}
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0x1705C7C", Offset = "0x1705C7C", VA = "0x1705C7C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0x1705ECC", Offset = "0x1705ECC", VA = "0x1705ECC")]
	private void Update()
	{
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0x1706158", Offset = "0x1706158", VA = "0x1706158")]
	public ONSPAmbisonicsNative()
	{
	}
}
[Token(Token = "0x20000CC")]
public class ONSPAudioSource : MonoBehaviour
{
	[Token(Token = "0x2000678")]
	private enum Parameters
	{
		[Token(Token = "0x4001CF7")]
		P_GAIN,
		[Token(Token = "0x4001CF8")]
		P_USEINVSQR,
		[Token(Token = "0x4001CF9")]
		P_NEAR,
		[Token(Token = "0x4001CFA")]
		P_FAR,
		[Token(Token = "0x4001CFB")]
		P_RADIUS,
		[Token(Token = "0x4001CFC")]
		P_DISABLE_RFL,
		[Token(Token = "0x4001CFD")]
		P_VSPEAKERMODE,
		[Token(Token = "0x4001CFE")]
		P_AMBISTAT,
		[Token(Token = "0x4001CFF")]
		P_READONLY_GLOBAL_RFL_ENABLED,
		[Token(Token = "0x4001D00")]
		P_READONLY_NUM_VOICES,
		[Token(Token = "0x4001D01")]
		P_SENDLEVEL,
		[Token(Token = "0x4001D02")]
		P_NUM
	}

	[Token(Token = "0x400046C")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool enableSpatialization;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float gain;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool useInvSqr;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float near;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float far;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float volumetricRadius;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float reverbSend;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool enableRfl;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPAudioSource RoomReflectionGizmoAS;

	[Token(Token = "0x17000037")]
	public bool EnableSpatialization
	{
		[Token(Token = "0x60003E9")]
		[Address(RVA = "0x17064FC", Offset = "0x17064FC", VA = "0x17064FC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003EA")]
		[Address(RVA = "0x1706504", Offset = "0x1706504", VA = "0x1706504")]
		set
		{
		}
	}

	[Token(Token = "0x17000038")]
	public float Gain
	{
		[Token(Token = "0x60003EB")]
		[Address(RVA = "0x1706510", Offset = "0x1706510", VA = "0x1706510")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003EC")]
		[Address(RVA = "0x1706518", Offset = "0x1706518", VA = "0x1706518")]
		set
		{
		}
	}

	[Token(Token = "0x17000039")]
	public bool UseInvSqr
	{
		[Token(Token = "0x60003ED")]
		[Address(RVA = "0x170659C", Offset = "0x170659C", VA = "0x170659C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003EE")]
		[Address(RVA = "0x17065A4", Offset = "0x17065A4", VA = "0x17065A4")]
		set
		{
		}
	}

	[Token(Token = "0x1700003A")]
	public float Near
	{
		[Token(Token = "0x60003EF")]
		[Address(RVA = "0x17065B0", Offset = "0x17065B0", VA = "0x17065B0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003F0")]
		[Address(RVA = "0x17065B8", Offset = "0x17065B8", VA = "0x17065B8")]
		set
		{
		}
	}

	[Token(Token = "0x1700003B")]
	public float Far
	{
		[Token(Token = "0x60003F1")]
		[Address(RVA = "0x1706640", Offset = "0x1706640", VA = "0x1706640")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003F2")]
		[Address(RVA = "0x1706648", Offset = "0x1706648", VA = "0x1706648")]
		set
		{
		}
	}

	[Token(Token = "0x1700003C")]
	public float VolumetricRadius
	{
		[Token(Token = "0x60003F3")]
		[Address(RVA = "0x17066D0", Offset = "0x17066D0", VA = "0x17066D0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003F4")]
		[Address(RVA = "0x17066D8", Offset = "0x17066D8", VA = "0x17066D8")]
		set
		{
		}
	}

	[Token(Token = "0x1700003D")]
	public float ReverbSend
	{
		[Token(Token = "0x60003F5")]
		[Address(RVA = "0x1706760", Offset = "0x1706760", VA = "0x1706760")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003F6")]
		[Address(RVA = "0x1706768", Offset = "0x1706768", VA = "0x1706768")]
		set
		{
		}
	}

	[Token(Token = "0x1700003E")]
	public bool EnableRfl
	{
		[Token(Token = "0x60003F7")]
		[Address(RVA = "0x17067F0", Offset = "0x17067F0", VA = "0x17067F0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003F8")]
		[Address(RVA = "0x17067F8", Offset = "0x17067F8", VA = "0x17067F8")]
		set
		{
		}
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0x17061DC", Offset = "0x17061DC", VA = "0x17061DC")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x984C98", Offset = "0x984C98")]
	private static void OnBeforeSceneLoadRuntimeMethod()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60003E8")]
	[Address(RVA = "0x1706400", Offset = "0x1706400", VA = "0x1706400")]
	private static extern void ONSP_GetGlobalRoomReflectionValues(ref bool reflOn, ref bool reverbOn, ref float width, ref float height, ref float length);

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0x1706804", Offset = "0x1706804", VA = "0x1706804")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0x1706A04", Offset = "0x1706A04", VA = "0x1706A04")]
	private void Start()
	{
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0x1706A08", Offset = "0x1706A08", VA = "0x1706A08")]
	private void Update()
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0x1706870", Offset = "0x1706870", VA = "0x1706870")]
	public void SetParameters(ref AudioSource source)
	{
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0x1706AE8", Offset = "0x1706AE8", VA = "0x1706AE8")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0x1706FBC", Offset = "0x1706FBC", VA = "0x1706FBC")]
	private void OnDestroy()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60003FF")]
	[Address(RVA = "0x1706364", Offset = "0x1706364", VA = "0x1706364")]
	private static extern int OSP_SetGlobalVoiceLimit(int VoiceLimit);

	[Token(Token = "0x6000400")]
	[Address(RVA = "0x170708C", Offset = "0x170708C", VA = "0x170708C")]
	public ONSPAudioSource()
	{
	}
}
[Token(Token = "0x20000CD")]
public class ONSPProfiler : MonoBehaviour
{
	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool profilerEnabled;

	[Token(Token = "0x4000477")]
	private const int DEFAULT_PORT = 2121;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int port;

	[Token(Token = "0x4000479")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x6000402")]
	[Address(RVA = "0x17070AC", Offset = "0x17070AC", VA = "0x17070AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0x17070B8", Offset = "0x17070B8", VA = "0x17070B8")]
	private void Update()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000404")]
	[Address(RVA = "0x170718C", Offset = "0x170718C", VA = "0x170718C")]
	private static extern int ONSP_SetProfilerEnabled(bool enabled);

	[PreserveSig]
	[Token(Token = "0x6000405")]
	[Address(RVA = "0x17070F0", Offset = "0x17070F0", VA = "0x17070F0")]
	private static extern int ONSP_SetProfilerPort(int port);

	[Token(Token = "0x6000406")]
	[Address(RVA = "0x1707228", Offset = "0x1707228", VA = "0x1707228")]
	public ONSPProfiler()
	{
	}
}
[Token(Token = "0x20000CE")]
public class ONSPPropagationGeometry : MonoBehaviour
{
	[Token(Token = "0x2000679")]
	private struct MeshMaterial
	{
		[Token(Token = "0x4001D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MeshFilter meshFilter;

		[Token(Token = "0x4001D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;
	}

	[Token(Token = "0x200067A")]
	private struct TerrainMaterial
	{
		[Token(Token = "0x4001D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Terrain terrain;

		[Token(Token = "0x4001D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;

		[Token(Token = "0x4001D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh[] treePrototypeMeshes;
	}

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string GeometryAssetDirectory;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string filePathRelative;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool fileEnabled;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool includeChildMeshes;

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr geometryHandle;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int OSPSuccess;

	[Token(Token = "0x4000480")]
	public const string GEOMETRY_FILE_EXTENSION = "ovramesh";

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int terrainDecimation;

	[Token(Token = "0x1700003F")]
	public static string GeometryAssetPath
	{
		[Token(Token = "0x6000407")]
		[Address(RVA = "0x170A1B0", Offset = "0x170A1B0", VA = "0x170A1B0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000040")]
	public string filePath
	{
		[Token(Token = "0x6000408")]
		[Address(RVA = "0x170A23C", Offset = "0x170A23C", VA = "0x170A23C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0x170A2B4", Offset = "0x170A2B4", VA = "0x170A2B4")]
	private static string GetPath(Transform current)
	{
		return null;
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0x170A42C", Offset = "0x170A42C", VA = "0x170A42C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0x170A430", Offset = "0x170A430", VA = "0x170A430")]
	private void CreatePropagationGeometry()
	{
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0x170A9E0", Offset = "0x170A9E0", VA = "0x170A9E0")]
	private void Update()
	{
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0x170AEB8", Offset = "0x170AEB8", VA = "0x170AEB8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0x170B01C", Offset = "0x170B01C", VA = "0x170B01C")]
	private static void traverseMeshHierarchy(GameObject obj, ONSPPropagationMaterial[] currentMaterials, bool includeChildren, List<MeshMaterial> meshMaterials, List<TerrainMaterial> terrainMaterials, bool ignoreStatic, ref int ignoredMeshCount)
	{
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0x170B88C", Offset = "0x170B88C", VA = "0x170B88C")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal)
	{
		return default(int);
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0x170B8D8", Offset = "0x170B8D8", VA = "0x170B8D8")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal, bool ignoreStatic, ref int ignoredMeshCount)
	{
		return default(int);
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0x170D5A4", Offset = "0x170D5A4", VA = "0x170D5A4")]
	private static void uploadMeshFilter(List<Vector3> tempVertices, List<int> tempIndices, MeshGroup[] groups, float[] vertices, int[] indices, ref int vertexOffset, ref int indexOffset, ref int groupOffset, Mesh mesh, ONSPPropagationMaterial[] materials, Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0x170D458", Offset = "0x170D458", VA = "0x170D458")]
	private static void updateCountsForMesh(ref int totalVertexCount, ref uint totalIndexCount, ref int totalFaceCount, ref int totalMaterialCount, Mesh mesh)
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0x170A7F4", Offset = "0x170A7F4", VA = "0x170A7F4")]
	public void UploadGeometry()
	{
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0x170A614", Offset = "0x170A614", VA = "0x170A614")]
	public bool ReadFile()
	{
		return default(bool);
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0x170DD7C", Offset = "0x170DD7C", VA = "0x170DD7C")]
	public bool WriteToObj()
	{
		return default(bool);
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0x170E1F0", Offset = "0x170E1F0", VA = "0x170E1F0")]
	public ONSPPropagationGeometry()
	{
	}
}
[Token(Token = "0x20000CF")]
internal class ONSPPropagation
{
	[Token(Token = "0x200067B")]
	public enum ovrAudioScalarType : uint
	{
		[Token(Token = "0x4001D09")]
		Int8,
		[Token(Token = "0x4001D0A")]
		UInt8,
		[Token(Token = "0x4001D0B")]
		Int16,
		[Token(Token = "0x4001D0C")]
		UInt16,
		[Token(Token = "0x4001D0D")]
		Int32,
		[Token(Token = "0x4001D0E")]
		UInt32,
		[Token(Token = "0x4001D0F")]
		Int64,
		[Token(Token = "0x4001D10")]
		UInt64,
		[Token(Token = "0x4001D11")]
		Float16,
		[Token(Token = "0x4001D12")]
		Float32,
		[Token(Token = "0x4001D13")]
		Float64
	}

	[Token(Token = "0x200067C")]
	public class ClientType
	{
		[Token(Token = "0x4001D14")]
		public const uint OVRA_CLIENT_TYPE_NATIVE = 0u;

		[Token(Token = "0x4001D15")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2016 = 1u;

		[Token(Token = "0x4001D16")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_1 = 2u;

		[Token(Token = "0x4001D17")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_2 = 3u;

		[Token(Token = "0x4001D18")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2018_1 = 4u;

		[Token(Token = "0x4001D19")]
		public const uint OVRA_CLIENT_TYPE_FMOD = 5u;

		[Token(Token = "0x4001D1A")]
		public const uint OVRA_CLIENT_TYPE_UNITY = 6u;

		[Token(Token = "0x4001D1B")]
		public const uint OVRA_CLIENT_TYPE_UE4 = 7u;

		[Token(Token = "0x4001D1C")]
		public const uint OVRA_CLIENT_TYPE_VST = 8u;

		[Token(Token = "0x4001D1D")]
		public const uint OVRA_CLIENT_TYPE_AAX = 9u;

		[Token(Token = "0x4001D1E")]
		public const uint OVRA_CLIENT_TYPE_TEST = 10u;

		[Token(Token = "0x4001D1F")]
		public const uint OVRA_CLIENT_TYPE_OTHER = 11u;

		[Token(Token = "0x4001D20")]
		public const uint OVRA_CLIENT_TYPE_WWISE_UNKNOWN = 12u;

		[Token(Token = "0x4001D21")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_1 = 13u;

		[Token(Token = "0x4001D22")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_2 = 14u;

		[Token(Token = "0x6002284")]
		[Address(RVA = "0x170771C", Offset = "0x170771C", VA = "0x170771C")]
		public ClientType()
		{
		}
	}

	[Token(Token = "0x200067D")]
	public interface PropagationInterface
	{
		[Token(Token = "0x6002285")]
		int SetPropagationQuality(float quality);

		[Token(Token = "0x6002286")]
		int SetPropagationThreadAffinity(ulong cpuMask);

		[Token(Token = "0x6002287")]
		int CreateAudioGeometry(out IntPtr geometry);

		[Token(Token = "0x6002288")]
		int DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6002289")]
		int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount);

		[Token(Token = "0x600228A")]
		int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x600228B")]
		int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x600228C")]
		int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600228D")]
		int AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600228E")]
		int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x600228F")]
		int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6002290")]
		int CreateAudioMaterial(out IntPtr material);

		[Token(Token = "0x6002291")]
		int DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6002292")]
		int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6002293")]
		int AudioMaterialReset(IntPtr material, MaterialProperty property);
	}

	[Token(Token = "0x200067E")]
	public class UnityNativeInterface : PropagationInterface
	{
		[Token(Token = "0x4001D23")]
		public const string strOSPS = "AudioPluginOculusSpatializer";

		[Token(Token = "0x4001D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x17000335")]
		private IntPtr context
		{
			[Token(Token = "0x6002294")]
			[Address(RVA = "0x170851C", Offset = "0x170851C", VA = "0x170851C")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6002295")]
		[Address(RVA = "0x1708580", Offset = "0x1708580", VA = "0x1708580")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6002296")]
		[Address(RVA = "0x170862C", Offset = "0x170862C", VA = "0x170862C")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6002297")]
		[Address(RVA = "0x17086D8", Offset = "0x17086D8", VA = "0x17086D8", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002298")]
		[Address(RVA = "0x17086FC", Offset = "0x17086FC", VA = "0x17086FC")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6002299")]
		[Address(RVA = "0x17087A8", Offset = "0x17087A8", VA = "0x17087A8", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600229A")]
		[Address(RVA = "0x17087CC", Offset = "0x17087CC", VA = "0x17087CC")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x600229B")]
		[Address(RVA = "0x1708874", Offset = "0x1708874", VA = "0x1708874", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600229C")]
		[Address(RVA = "0x1708898", Offset = "0x1708898", VA = "0x1708898")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x600229D")]
		[Address(RVA = "0x1708934", Offset = "0x1708934", VA = "0x1708934", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600229E")]
		[Address(RVA = "0x170893C", Offset = "0x170893C", VA = "0x170893C")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x600229F")]
		[Address(RVA = "0x1708A64", Offset = "0x1708A64", VA = "0x1708A64", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60022A0")]
		[Address(RVA = "0x1708B5C", Offset = "0x1708B5C", VA = "0x1708B5C")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x60022A1")]
		[Address(RVA = "0x1708C10", Offset = "0x1708C10", VA = "0x1708C10", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60022A2")]
		[Address(RVA = "0x1708C1C", Offset = "0x1708C1C", VA = "0x1708C1C")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x60022A3")]
		[Address(RVA = "0x1708D64", Offset = "0x1708D64", VA = "0x1708D64", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60022A4")]
		[Address(RVA = "0x1708D70", Offset = "0x1708D70", VA = "0x1708D70")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60022A5")]
		[Address(RVA = "0x1708E38", Offset = "0x1708E38", VA = "0x1708E38", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60022A6")]
		[Address(RVA = "0x1708E44", Offset = "0x1708E44", VA = "0x1708E44")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60022A7")]
		[Address(RVA = "0x1708F0C", Offset = "0x1708F0C", VA = "0x1708F0C", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60022A8")]
		[Address(RVA = "0x1708F18", Offset = "0x1708F18", VA = "0x1708F18")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x60022A9")]
		[Address(RVA = "0x1708FE0", Offset = "0x1708FE0", VA = "0x1708FE0", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60022AA")]
		[Address(RVA = "0x1708FEC", Offset = "0x1708FEC", VA = "0x1708FEC")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x60022AB")]
		[Address(RVA = "0x1709094", Offset = "0x1709094", VA = "0x1709094", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60022AC")]
		[Address(RVA = "0x17090B8", Offset = "0x17090B8", VA = "0x17090B8")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x60022AD")]
		[Address(RVA = "0x1709154", Offset = "0x1709154", VA = "0x1709154", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60022AE")]
		[Address(RVA = "0x170915C", Offset = "0x170915C", VA = "0x170915C")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x60022AF")]
		[Address(RVA = "0x1709220", Offset = "0x1709220", VA = "0x1709220", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60022B0")]
		[Address(RVA = "0x170922C", Offset = "0x170922C", VA = "0x170922C")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x60022B1")]
		[Address(RVA = "0x17092F0", Offset = "0x17092F0", VA = "0x17092F0", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60022B2")]
		[Address(RVA = "0x1709300", Offset = "0x1709300", VA = "0x1709300")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x60022B3")]
		[Address(RVA = "0x17093AC", Offset = "0x17093AC", VA = "0x17093AC", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x60022B4")]
		[Address(RVA = "0x17076C8", Offset = "0x17076C8", VA = "0x17076C8")]
		public UnityNativeInterface()
		{
		}
	}

	[Token(Token = "0x200067F")]
	public class WwisePluginInterface : PropagationInterface
	{
		[Token(Token = "0x4001D25")]
		public const string strOSPS = "OculusSpatializerWwise";

		[Token(Token = "0x4001D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x17000336")]
		private IntPtr context
		{
			[Token(Token = "0x60022B5")]
			[Address(RVA = "0x17093B8", Offset = "0x17093B8", VA = "0x17093B8")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x60022B6")]
		[Address(RVA = "0x17074D8", Offset = "0x17074D8", VA = "0x17074D8")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x60022B7")]
		[Address(RVA = "0x170941C", Offset = "0x170941C", VA = "0x170941C")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x60022B8")]
		[Address(RVA = "0x17094C8", Offset = "0x17094C8", VA = "0x17094C8", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60022B9")]
		[Address(RVA = "0x17094EC", Offset = "0x17094EC", VA = "0x17094EC")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x60022BA")]
		[Address(RVA = "0x1709598", Offset = "0x1709598", VA = "0x1709598", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60022BB")]
		[Address(RVA = "0x17095BC", Offset = "0x17095BC", VA = "0x17095BC")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x60022BC")]
		[Address(RVA = "0x1709668", Offset = "0x1709668", VA = "0x1709668", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60022BD")]
		[Address(RVA = "0x170968C", Offset = "0x170968C", VA = "0x170968C")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x60022BE")]
		[Address(RVA = "0x1709728", Offset = "0x1709728", VA = "0x1709728", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60022BF")]
		[Address(RVA = "0x1709730", Offset = "0x1709730", VA = "0x1709730")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x60022C0")]
		[Address(RVA = "0x1709858", Offset = "0x1709858", VA = "0x1709858", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60022C1")]
		[Address(RVA = "0x1709950", Offset = "0x1709950", VA = "0x1709950")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x60022C2")]
		[Address(RVA = "0x1709A04", Offset = "0x1709A04", VA = "0x1709A04", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60022C3")]
		[Address(RVA = "0x1709A10", Offset = "0x1709A10", VA = "0x1709A10")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x60022C4")]
		[Address(RVA = "0x1709B58", Offset = "0x1709B58", VA = "0x1709B58", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60022C5")]
		[Address(RVA = "0x1709B64", Offset = "0x1709B64", VA = "0x1709B64")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60022C6")]
		[Address(RVA = "0x1709C2C", Offset = "0x1709C2C", VA = "0x1709C2C", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60022C7")]
		[Address(RVA = "0x1709C38", Offset = "0x1709C38", VA = "0x1709C38")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60022C8")]
		[Address(RVA = "0x1709D00", Offset = "0x1709D00", VA = "0x1709D00", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60022C9")]
		[Address(RVA = "0x1709D0C", Offset = "0x1709D0C", VA = "0x1709D0C")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x60022CA")]
		[Address(RVA = "0x1709DD4", Offset = "0x1709DD4", VA = "0x1709DD4", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60022CB")]
		[Address(RVA = "0x1709DE0", Offset = "0x1709DE0", VA = "0x1709DE0")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x60022CC")]
		[Address(RVA = "0x1709E8C", Offset = "0x1709E8C", VA = "0x1709E8C", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60022CD")]
		[Address(RVA = "0x1709EB0", Offset = "0x1709EB0", VA = "0x1709EB0")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x60022CE")]
		[Address(RVA = "0x1709F4C", Offset = "0x1709F4C", VA = "0x1709F4C", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60022CF")]
		[Address(RVA = "0x1709F54", Offset = "0x1709F54", VA = "0x1709F54")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x60022D0")]
		[Address(RVA = "0x170A018", Offset = "0x170A018", VA = "0x170A018", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60022D1")]
		[Address(RVA = "0x170A024", Offset = "0x170A024", VA = "0x170A024")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x60022D2")]
		[Address(RVA = "0x170A0E8", Offset = "0x170A0E8", VA = "0x170A0E8", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60022D3")]
		[Address(RVA = "0x170A0F8", Offset = "0x170A0F8", VA = "0x170A0F8")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x60022D4")]
		[Address(RVA = "0x170A1A4", Offset = "0x170A1A4", VA = "0x170A1A4", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x60022D5")]
		[Address(RVA = "0x1707584", Offset = "0x1707584", VA = "0x1707584")]
		public WwisePluginInterface()
		{
		}
	}

	[Token(Token = "0x2000680")]
	public class FMODPluginInterface : PropagationInterface
	{
		[Token(Token = "0x4001D27")]
		public const string strOSPS = "OculusSpatializerFMOD";

		[Token(Token = "0x4001D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x17000337")]
		private IntPtr context
		{
			[Token(Token = "0x60022D6")]
			[Address(RVA = "0x1707724", Offset = "0x1707724", VA = "0x1707724")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x60022D7")]
		[Address(RVA = "0x17075D0", Offset = "0x17075D0", VA = "0x17075D0")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x60022D8")]
		[Address(RVA = "0x1707788", Offset = "0x1707788", VA = "0x1707788")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x60022D9")]
		[Address(RVA = "0x1707834", Offset = "0x1707834", VA = "0x1707834", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60022DA")]
		[Address(RVA = "0x1707858", Offset = "0x1707858", VA = "0x1707858")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x60022DB")]
		[Address(RVA = "0x1707904", Offset = "0x1707904", VA = "0x1707904", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60022DC")]
		[Address(RVA = "0x1707928", Offset = "0x1707928", VA = "0x1707928")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x60022DD")]
		[Address(RVA = "0x17079D4", Offset = "0x17079D4", VA = "0x17079D4", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60022DE")]
		[Address(RVA = "0x17079F8", Offset = "0x17079F8", VA = "0x17079F8")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x60022DF")]
		[Address(RVA = "0x1707A94", Offset = "0x1707A94", VA = "0x1707A94", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60022E0")]
		[Address(RVA = "0x1707A9C", Offset = "0x1707A9C", VA = "0x1707A9C")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x60022E1")]
		[Address(RVA = "0x1707BC4", Offset = "0x1707BC4", VA = "0x1707BC4", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60022E2")]
		[Address(RVA = "0x1707CBC", Offset = "0x1707CBC", VA = "0x1707CBC")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x60022E3")]
		[Address(RVA = "0x1707D70", Offset = "0x1707D70", VA = "0x1707D70", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60022E4")]
		[Address(RVA = "0x1707D7C", Offset = "0x1707D7C", VA = "0x1707D7C")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x60022E5")]
		[Address(RVA = "0x1707EC4", Offset = "0x1707EC4", VA = "0x1707EC4", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60022E6")]
		[Address(RVA = "0x1707ED0", Offset = "0x1707ED0", VA = "0x1707ED0")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60022E7")]
		[Address(RVA = "0x1707F98", Offset = "0x1707F98", VA = "0x1707F98", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60022E8")]
		[Address(RVA = "0x1707FA4", Offset = "0x1707FA4", VA = "0x1707FA4")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60022E9")]
		[Address(RVA = "0x170806C", Offset = "0x170806C", VA = "0x170806C", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60022EA")]
		[Address(RVA = "0x1708078", Offset = "0x1708078", VA = "0x1708078")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x60022EB")]
		[Address(RVA = "0x1708140", Offset = "0x1708140", VA = "0x1708140", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60022EC")]
		[Address(RVA = "0x170814C", Offset = "0x170814C", VA = "0x170814C")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x60022ED")]
		[Address(RVA = "0x17081F8", Offset = "0x17081F8", VA = "0x17081F8", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60022EE")]
		[Address(RVA = "0x170821C", Offset = "0x170821C", VA = "0x170821C")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x60022EF")]
		[Address(RVA = "0x17082B8", Offset = "0x17082B8", VA = "0x17082B8", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60022F0")]
		[Address(RVA = "0x17082C0", Offset = "0x17082C0", VA = "0x17082C0")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x60022F1")]
		[Address(RVA = "0x1708384", Offset = "0x1708384", VA = "0x1708384", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60022F2")]
		[Address(RVA = "0x1708390", Offset = "0x1708390", VA = "0x1708390")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x60022F3")]
		[Address(RVA = "0x1708454", Offset = "0x1708454", VA = "0x1708454", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60022F4")]
		[Address(RVA = "0x1708464", Offset = "0x1708464", VA = "0x1708464")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x60022F5")]
		[Address(RVA = "0x1708510", Offset = "0x1708510", VA = "0x1708510", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x60022F6")]
		[Address(RVA = "0x170767C", Offset = "0x170767C", VA = "0x170767C")]
		public FMODPluginInterface()
		{
		}
	}

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PropagationInterface CachedInterface;

	[Token(Token = "0x17000041")]
	public static PropagationInterface Interface
	{
		[Token(Token = "0x6000418")]
		[Address(RVA = "0x1707238", Offset = "0x1707238", VA = "0x1707238")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0x17072A8", Offset = "0x17072A8", VA = "0x17072A8")]
	private static PropagationInterface FindInterface()
	{
		return null;
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0x1707714", Offset = "0x1707714", VA = "0x1707714")]
	public ONSPPropagation()
	{
	}
}
[Token(Token = "0x20000D0")]
public sealed class ONSPPropagationMaterial : MonoBehaviour
{
	[Token(Token = "0x2000681")]
	public enum Preset
	{
		[Token(Token = "0x4001D2A")]
		Custom,
		[Token(Token = "0x4001D2B")]
		AcousticTile,
		[Token(Token = "0x4001D2C")]
		Brick,
		[Token(Token = "0x4001D2D")]
		BrickPainted,
		[Token(Token = "0x4001D2E")]
		Carpet,
		[Token(Token = "0x4001D2F")]
		CarpetHeavy,
		[Token(Token = "0x4001D30")]
		CarpetHeavyPadded,
		[Token(Token = "0x4001D31")]
		CeramicTile,
		[Token(Token = "0x4001D32")]
		Concrete,
		[Token(Token = "0x4001D33")]
		ConcreteRough,
		[Token(Token = "0x4001D34")]
		ConcreteBlock,
		[Token(Token = "0x4001D35")]
		ConcreteBlockPainted,
		[Token(Token = "0x4001D36")]
		Curtain,
		[Token(Token = "0x4001D37")]
		Foliage,
		[Token(Token = "0x4001D38")]
		Glass,
		[Token(Token = "0x4001D39")]
		GlassHeavy,
		[Token(Token = "0x4001D3A")]
		Grass,
		[Token(Token = "0x4001D3B")]
		Gravel,
		[Token(Token = "0x4001D3C")]
		GypsumBoard,
		[Token(Token = "0x4001D3D")]
		PlasterOnBrick,
		[Token(Token = "0x4001D3E")]
		PlasterOnConcreteBlock,
		[Token(Token = "0x4001D3F")]
		Soil,
		[Token(Token = "0x4001D40")]
		SoundProof,
		[Token(Token = "0x4001D41")]
		Snow,
		[Token(Token = "0x4001D42")]
		Steel,
		[Token(Token = "0x4001D43")]
		Water,
		[Token(Token = "0x4001D44")]
		WoodThin,
		[Token(Token = "0x4001D45")]
		WoodThick,
		[Token(Token = "0x4001D46")]
		WoodFloor,
		[Token(Token = "0x4001D47")]
		WoodOnConcrete
	}

	[Serializable]
	[Token(Token = "0x2000682")]
	public sealed class Point
	{
		[Token(Token = "0x4001D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float frequency;

		[Token(Token = "0x4001D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float data;

		[Token(Token = "0x60022F7")]
		[Address(RVA = "0x171835C", Offset = "0x171835C", VA = "0x171835C")]
		public Point(float frequency = 0f, float data = 0f)
		{
		}

		[Token(Token = "0x60022F8")]
		[Address(RVA = "0x17184A4", Offset = "0x17184A4", VA = "0x17184A4")]
		public static implicit operator Point(Vector2 v)
		{
			return null;
		}

		[Token(Token = "0x60022F9")]
		[Address(RVA = "0x1718514", Offset = "0x1718514", VA = "0x1718514")]
		public static implicit operator Vector2(Point point)
		{
			return default(Vector2);
		}
	}

	[Serializable]
	[Token(Token = "0x2000683")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x978E94", Offset = "0x978E94")]
	public sealed class Spectrum
	{
		[Serializable]
		[Token(Token = "0x2001008")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97C080", Offset = "0x97C080")]
		private sealed class <>c
		{
			[Token(Token = "0x40025B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40025B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Point, float> <>9__3_0;

			[Token(Token = "0x40025B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Point, float> <>9__3_1;

			[Token(Token = "0x60035B8")]
			[Address(RVA = "0x1718A04", Offset = "0x1718A04", VA = "0x1718A04")]
			public <>c()
			{
			}

			[Token(Token = "0x60035B9")]
			[Address(RVA = "0x1718A0C", Offset = "0x1718A0C", VA = "0x1718A0C")]
			internal float <get_Item>b__3_0(Point p)
			{
				return default(float);
			}

			[Token(Token = "0x60035BA")]
			[Address(RVA = "0x1718A38", Offset = "0x1718A38", VA = "0x1718A38")]
			internal float <get_Item>b__3_1(Point p)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4001D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int selection;

		[Token(Token = "0x4001D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Point> points;

		[Token(Token = "0x17000338")]
		public float Item
		{
			[Token(Token = "0x60022FA")]
			[Address(RVA = "0x171857C", Offset = "0x171857C", VA = "0x171857C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60022FB")]
		[Address(RVA = "0x171842C", Offset = "0x171842C", VA = "0x171842C")]
		public Spectrum()
		{
		}
	}

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr materialHandle;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97DD84", Offset = "0x97DD84")]
	public Spectrum absorption;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97DDBC", Offset = "0x97DDBC")]
	public Spectrum transmission;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97DDF4", Offset = "0x97DDF4")]
	public Spectrum scattering;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Preset preset_;

	[Token(Token = "0x17000042")]
	public Preset preset
	{
		[Token(Token = "0x600041B")]
		[Address(RVA = "0x170E2C8", Offset = "0x170E2C8", VA = "0x170E2C8")]
		get
		{
			return default(Preset);
		}
		[Token(Token = "0x600041C")]
		[Address(RVA = "0x170E2D0", Offset = "0x170E2D0", VA = "0x170E2D0")]
		set
		{
		}
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0x170E2F8", Offset = "0x170E2F8", VA = "0x170E2F8")]
	private void Start()
	{
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0x170DC08", Offset = "0x170DC08", VA = "0x170DC08")]
	public void StartInternal()
	{
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0x170E9D4", Offset = "0x170E9D4", VA = "0x170E9D4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0x170E9D8", Offset = "0x170E9D8", VA = "0x170E9D8")]
	public void DestroyInternal()
	{
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0x170E2FC", Offset = "0x170E2FC", VA = "0x170E2FC")]
	public void UploadMaterial()
	{
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0x170D2C4", Offset = "0x170D2C4", VA = "0x170D2C4")]
	public void SetPreset(Preset preset)
	{
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0x170EABC", Offset = "0x170EABC", VA = "0x170EABC")]
	private static void AcousticTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0x170F050", Offset = "0x170F050", VA = "0x170F050")]
	private static void Brick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0x170F5EC", Offset = "0x170F5EC", VA = "0x170F5EC")]
	private static void BrickPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0x170FB88", Offset = "0x170FB88", VA = "0x170FB88")]
	private static void Carpet(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0x1710128", Offset = "0x1710128", VA = "0x1710128")]
	private static void CarpetHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0x17106C0", Offset = "0x17106C0", VA = "0x17106C0")]
	private static void CarpetHeavyPadded(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0x1710C58", Offset = "0x1710C58", VA = "0x1710C58")]
	private static void CeramicTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0x17111F8", Offset = "0x17111F8", VA = "0x17111F8")]
	private static void Concrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0x1711798", Offset = "0x1711798", VA = "0x1711798")]
	private static void ConcreteRough(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0x1711D34", Offset = "0x1711D34", VA = "0x1711D34")]
	private static void ConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0x17122D4", Offset = "0x17122D4", VA = "0x17122D4")]
	private static void ConcreteBlockPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0x1712874", Offset = "0x1712874", VA = "0x1712874")]
	private static void Curtain(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0x1712E0C", Offset = "0x1712E0C", VA = "0x1712E0C")]
	private static void Foliage(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0x17133A4", Offset = "0x17133A4", VA = "0x17133A4")]
	private static void Glass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0x171393C", Offset = "0x171393C", VA = "0x171393C")]
	private static void GlassHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0x1713EDC", Offset = "0x1713EDC", VA = "0x1713EDC")]
	private static void Grass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0x17142F8", Offset = "0x17142F8", VA = "0x17142F8")]
	private static void Gravel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0x171470C", Offset = "0x171470C", VA = "0x171470C")]
	private static void GypsumBoard(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0x1714CAC", Offset = "0x1714CAC", VA = "0x1714CAC")]
	private static void PlasterOnBrick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0x1715248", Offset = "0x1715248", VA = "0x1715248")]
	private static void PlasterOnConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0x17157E4", Offset = "0x17157E4", VA = "0x17157E4")]
	private static void Soil(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0x1715BFC", Offset = "0x1715BFC", VA = "0x1715BFC")]
	private static void SoundProof(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0x1715D90", Offset = "0x1715D90", VA = "0x1715D90")]
	private static void Snow(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0x17161A4", Offset = "0x17161A4", VA = "0x17161A4")]
	private static void Steel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0x1716740", Offset = "0x1716740", VA = "0x1716740")]
	private static void Water(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0x1716CE0", Offset = "0x1716CE0", VA = "0x1716CE0")]
	private static void WoodThin(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0x171727C", Offset = "0x171727C", VA = "0x171727C")]
	private static void WoodThick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0x171781C", Offset = "0x171781C", VA = "0x171781C")]
	private static void WoodFloor(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0x1717DBC", Offset = "0x1717DBC", VA = "0x1717DBC")]
	private static void WoodOnConcrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0x1718394", Offset = "0x1718394", VA = "0x1718394")]
	public ONSPPropagationMaterial()
	{
	}
}
[Token(Token = "0x20000D1")]
public class ONSPPropagationSettings : MonoBehaviour
{
	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float quality;

	[Token(Token = "0x6000441")]
	[Address(RVA = "0x1718A64", Offset = "0x1718A64", VA = "0x1718A64")]
	private void Update()
	{
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0x1718B34", Offset = "0x1718B34", VA = "0x1718B34")]
	public ONSPPropagationSettings()
	{
	}
}
[Token(Token = "0x20000D2")]
public sealed class ONSPSettings : ScriptableObject
{
	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public int voiceLimit;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPSettings instance;

	[Token(Token = "0x17000043")]
	public static ONSPSettings Instance
	{
		[Token(Token = "0x6000443")]
		[Address(RVA = "0x1706250", Offset = "0x1706250", VA = "0x1706250")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0x171916C", Offset = "0x171916C", VA = "0x171916C")]
	public ONSPSettings()
	{
	}
}
[Token(Token = "0x20000D3")]
public class ONSPVersion : MonoBehaviour
{
	[Token(Token = "0x400048B")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[PreserveSig]
	[Token(Token = "0x6000445")]
	[Address(RVA = "0x171917C", Offset = "0x171917C", VA = "0x171917C")]
	private static extern void ONSP_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[Token(Token = "0x6000446")]
	[Address(RVA = "0x1719230", Offset = "0x1719230", VA = "0x1719230")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0x171933C", Offset = "0x171933C", VA = "0x171933C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0x1719340", Offset = "0x1719340", VA = "0x1719340")]
	private void Update()
	{
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0x1719344", Offset = "0x1719344", VA = "0x1719344")]
	public ONSPVersion()
	{
	}
}
[Token(Token = "0x20000D4")]
public class Pvr_Controller : MonoBehaviour
{
	[Token(Token = "0x2000684")]
	public enum UserHandNess
	{
		[Token(Token = "0x4001D4D")]
		Right,
		[Token(Token = "0x4001D4E")]
		Left
	}

	[Token(Token = "0x2000685")]
	public enum GazeType
	{
		[Token(Token = "0x4001D50")]
		Never,
		[Token(Token = "0x4001D51")]
		DuringMotion,
		[Token(Token = "0x4001D52")]
		Always
	}

	[Token(Token = "0x2000686")]
	public enum ControllerAxis
	{
		[Token(Token = "0x4001D54")]
		Controller,
		[Token(Token = "0x4001D55")]
		Wrist,
		[Token(Token = "0x4001D56")]
		Elbow,
		[Token(Token = "0x4001D57")]
		Shoulder
	}

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject controller0;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject controller1;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static UserHandNess handness;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool controller0is3dof;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool controller1is3dof;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public ControllerAxis Axis;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GazeType Gazetype;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97DE4C", Offset = "0x97DE4C")]
	public float ElbowHeight;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97DE68", Offset = "0x97DE68")]
	public float ElbowDepth;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97DE84", Offset = "0x97DE84")]
	public float PointerTiltAngle;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float mouseX;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float mouseY;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float mouseZ;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] inputDirection;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97DE9C", Offset = "0x97DE9C")]
	private static Vector3 <pointerPosition>k__BackingField;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97DEAC", Offset = "0x97DEAC")]
	private static Quaternion <pointerRotation>k__BackingField;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97DEBC", Offset = "0x97DEBC")]
	private static Vector3 <elbowPosition>k__BackingField;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97DECC", Offset = "0x97DECC")]
	private static Quaternion <elbowRotation>k__BackingField;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97DEDC", Offset = "0x97DEDC")]
	private static Vector3 <wristPosition>k__BackingField;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97DEEC", Offset = "0x97DEEC")]
	private static Quaternion <wristRotation>k__BackingField;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97DEFC", Offset = "0x97DEFC")]
	private static Vector3 <shoulderPosition>k__BackingField;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97DF0C", Offset = "0x97DF0C")]
	private static Quaternion <shoulderRotation>k__BackingField;

	[Token(Token = "0x17000044")]
	public static Vector3 pointerPosition
	{
		[Token(Token = "0x600045C")]
		[Address(RVA = "0x126B124", Offset = "0x126B124", VA = "0x126B124")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984CAC", Offset = "0x984CAC")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600045D")]
		[Address(RVA = "0x126B040", Offset = "0x126B040", VA = "0x126B040")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984CBC", Offset = "0x984CBC")]
		set
		{
		}
	}

	[Token(Token = "0x17000045")]
	public static Quaternion pointerRotation
	{
		[Token(Token = "0x600045E")]
		[Address(RVA = "0x126B178", Offset = "0x126B178", VA = "0x126B178")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984CCC", Offset = "0x984CCC")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x600045F")]
		[Address(RVA = "0x126B0B0", Offset = "0x126B0B0", VA = "0x126B0B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984CDC", Offset = "0x984CDC")]
		set
		{
		}
	}

	[Token(Token = "0x17000046")]
	public static Vector3 elbowPosition
	{
		[Token(Token = "0x6000460")]
		[Address(RVA = "0x126B43C", Offset = "0x126B43C", VA = "0x126B43C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984CEC", Offset = "0x984CEC")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000461")]
		[Address(RVA = "0x126B358", Offset = "0x126B358", VA = "0x126B358")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984CFC", Offset = "0x984CFC")]
		set
		{
		}
	}

	[Token(Token = "0x17000047")]
	public static Quaternion elbowRotation
	{
		[Token(Token = "0x6000462")]
		[Address(RVA = "0x126B490", Offset = "0x126B490", VA = "0x126B490")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984D0C", Offset = "0x984D0C")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x6000463")]
		[Address(RVA = "0x126B3C8", Offset = "0x126B3C8", VA = "0x126B3C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984D1C", Offset = "0x984D1C")]
		set
		{
		}
	}

	[Token(Token = "0x17000048")]
	public static Vector3 wristPosition
	{
		[Token(Token = "0x6000464")]
		[Address(RVA = "0x126B2B0", Offset = "0x126B2B0", VA = "0x126B2B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984D2C", Offset = "0x984D2C")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000465")]
		[Address(RVA = "0x126B1CC", Offset = "0x126B1CC", VA = "0x126B1CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984D3C", Offset = "0x984D3C")]
		set
		{
		}
	}

	[Token(Token = "0x17000049")]
	public static Quaternion wristRotation
	{
		[Token(Token = "0x6000466")]
		[Address(RVA = "0x126B304", Offset = "0x126B304", VA = "0x126B304")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984D4C", Offset = "0x984D4C")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x6000467")]
		[Address(RVA = "0x126B23C", Offset = "0x126B23C", VA = "0x126B23C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984D5C", Offset = "0x984D5C")]
		set
		{
		}
	}

	[Token(Token = "0x1700004A")]
	public static Vector3 shoulderPosition
	{
		[Token(Token = "0x6000468")]
		[Address(RVA = "0x126B5C8", Offset = "0x126B5C8", VA = "0x126B5C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984D6C", Offset = "0x984D6C")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000469")]
		[Address(RVA = "0x126B4E4", Offset = "0x126B4E4", VA = "0x126B4E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984D7C", Offset = "0x984D7C")]
		set
		{
		}
	}

	[Token(Token = "0x1700004B")]
	public static Quaternion shoulderRotation
	{
		[Token(Token = "0x600046A")]
		[Address(RVA = "0x126B61C", Offset = "0x126B61C", VA = "0x126B61C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984D8C", Offset = "0x984D8C")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x600046B")]
		[Address(RVA = "0x126B554", Offset = "0x126B554", VA = "0x126B554")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984D9C", Offset = "0x984D9C")]
		set
		{
		}
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0x1267E3C", Offset = "0x1267E3C", VA = "0x1267E3C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0x1268428", Offset = "0x1268428", VA = "0x1268428")]
	private void Start()
	{
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0x1268640", Offset = "0x1268640", VA = "0x1268640")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0x1268C2C", Offset = "0x1268C2C", VA = "0x1268C2C")]
	private void MainControllerChanged(string index)
	{
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0x1268D64", Offset = "0x1268D64", VA = "0x1268D64")]
	private void HandnessChanged(string index)
	{
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0x1268E40", Offset = "0x1268E40", VA = "0x1268E40")]
	private void ServiceStartSuccess()
	{
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0x1269038", Offset = "0x1269038", VA = "0x1269038")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0x1269214", Offset = "0x1269214", VA = "0x1269214")]
	private void ShowController()
	{
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0x12693E0", Offset = "0x12693E0", VA = "0x12693E0")]
	private void CheckControllerState(string data)
	{
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0x1269518", Offset = "0x1269518", VA = "0x1269518")]
	private void Update()
	{
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0x1268D08", Offset = "0x1268D08", VA = "0x1268D08")]
	public static void ChangeHandNess()
	{
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0x1269828", Offset = "0x1269828", VA = "0x1269828")]
	private void DoUpdateControler0()
	{
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0x12698A4", Offset = "0x12698A4", VA = "0x12698A4")]
	private void DoUpdateControler1()
	{
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0x1269928", Offset = "0x1269928", VA = "0x1269928")]
	private void UpdateControlloerRay(bool update0 = true, bool update1 = true)
	{
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0x126AE5C", Offset = "0x126AE5C", VA = "0x126AE5C")]
	private Quaternion UpdateSimulatedFrameParams()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0x1269AAC", Offset = "0x1269AAC", VA = "0x1269AAC")]
	private void SetArmParaToSo(int hand, int gazeType, float elbowHeight, float elbowDepth, float pointerTiltAngle)
	{
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0x1269ABC", Offset = "0x1269ABC", VA = "0x1269ABC")]
	private void CalcArmModelfromSo(int hand)
	{
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0x126A1B0", Offset = "0x126A1B0", VA = "0x126A1B0")]
	public void UpdateControllerDataSO(int hand)
	{
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0x126B670", Offset = "0x126B670", VA = "0x126B670")]
	public Pvr_Controller()
	{
	}
}
[Token(Token = "0x20000D5")]
public class Pvr_ControllerDemo : MonoBehaviour
{
	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject HeadSetController;

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject controller0;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject controller1;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject cube;

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Ray ray;

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject currentController;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform lastHit;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform currentHit;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Material normat;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Material gazemat;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Material clickmat;

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool noClick;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GameObject referenceObj;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float rayDefaultLength;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private bool isHasController;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Transform dragObj;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float disX;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float disY;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float disZ;

	[Token(Token = "0x600046D")]
	[Address(RVA = "0x126B6D8", Offset = "0x126B6D8", VA = "0x126B6D8")]
	private void Start()
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0x126BAAC", Offset = "0x126BAAC", VA = "0x126BAAC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0x126BE18", Offset = "0x126BE18", VA = "0x126BE18")]
	private void Update()
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0x126E0B8", Offset = "0x126E0B8", VA = "0x126E0B8")]
	private void ServiceStartSuccess()
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0x126E164", Offset = "0x126E164", VA = "0x126E164")]
	private void ControllerStateListener(string data)
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0x126E210", Offset = "0x126E210", VA = "0x126E210")]
	private void CheckControllerStateForGoblin(string state)
	{
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0x126E2B4", Offset = "0x126E2B4", VA = "0x126E2B4")]
	public Pvr_ControllerDemo()
	{
	}
}
[Token(Token = "0x20000D6")]
public class Pvr_ControllerEventsExamples : MonoBehaviour
{
	[Token(Token = "0x6000474")]
	[Address(RVA = "0x126E2C4", Offset = "0x126E2C4", VA = "0x126E2C4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0x126E520", Offset = "0x126E520", VA = "0x126E520")]
	private void UIPointerElementEnter(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0x126E5C8", Offset = "0x126E5C8", VA = "0x126E5C8")]
	private void UIPointerElementExit(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0x126E670", Offset = "0x126E670", VA = "0x126E670")]
	private void UIPointerElementClick(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0x126E718", Offset = "0x126E718", VA = "0x126E718")]
	private void UIPointerElementDragStart(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0x126E7C0", Offset = "0x126E7C0", VA = "0x126E7C0")]
	private void UIPointerElementDragEnd(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0x126E868", Offset = "0x126E868", VA = "0x126E868")]
	public Pvr_ControllerEventsExamples()
	{
	}
}
[Token(Token = "0x20000D7")]
public class Pvr_ControllerInit : MonoBehaviour
{
	[Token(Token = "0x2000687")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x978ECC", Offset = "0x978ECC")]
	private sealed class <RefreshController>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pvr_ControllerInit <>4__this;

		[Token(Token = "0x17000339")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60022FF")]
			[Address(RVA = "0x1271138", Offset = "0x1271138", VA = "0x1271138", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002301")]
			[Address(RVA = "0x12711A8", Offset = "0x12711A8", VA = "0x12711A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022FC")]
		[Address(RVA = "0x126F6F8", Offset = "0x126F6F8", VA = "0x126F6F8")]
		[DebuggerHidden]
		public <RefreshController>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x60022FD")]
		[Address(RVA = "0x1270BF4", Offset = "0x1270BF4", VA = "0x1270BF4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022FE")]
		[Address(RVA = "0x1270BF8", Offset = "0x1270BF8", VA = "0x1270BF8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002300")]
		[Address(RVA = "0x1271140", Offset = "0x1271140", VA = "0x1271140", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ControllerVariety Variety;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool isCustomModel;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject goblin;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject neo;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject g2;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject neo2;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Material generalMat;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int controllerType;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[HideInInspector]
	public bool loadModelSuccess;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string modelFilePath;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int systemOrUnity;

	[Token(Token = "0x600047B")]
	[Address(RVA = "0x126E870", Offset = "0x126E870", VA = "0x126E870")]
	private void Awake()
	{
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0x126EDC8", Offset = "0x126EDC8", VA = "0x126EDC8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0x126EEC0", Offset = "0x126EEC0", VA = "0x126EEC0")]
	private void ServiceStartSuccess()
	{
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0x126F4A8", Offset = "0x126F4A8", VA = "0x126F4A8")]
	private void CheckControllerStateForGoblin(string state)
	{
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0x126F590", Offset = "0x126F590", VA = "0x126F590")]
	private void CheckControllerStateOfAbility(string data)
	{
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0x126F154", Offset = "0x126F154", VA = "0x126F154")]
	private void HideController()
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0x126EA14", Offset = "0x126EA14", VA = "0x126EA14")]
	private void DestroyController()
	{
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0x126F0E0", Offset = "0x126F0E0", VA = "0x126F0E0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x984DAC", Offset = "0x984DAC")]
	private IEnumerator RefreshController()
	{
		return null;
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0x126F724", Offset = "0x126F724", VA = "0x126F724")]
	private void LoadControllerFromSystem()
	{
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0x1270728", Offset = "0x1270728", VA = "0x1270728")]
	private void LoadControllerFromPrefab()
	{
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0x126FC2C", Offset = "0x126FC2C", VA = "0x126FC2C")]
	private void LoadTextureFromSystem(Pvr_ControllerVisual visual)
	{
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0x12709A0", Offset = "0x12709A0", VA = "0x12709A0")]
	private Texture2D LoadOneTexture(string filepath)
	{
		return null;
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0x1270A20", Offset = "0x1270A20", VA = "0x1270A20")]
	private byte[] ReadPNG(string path)
	{
		return null;
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0x1270B94", Offset = "0x1270B94", VA = "0x1270B94")]
	public Pvr_ControllerInit()
	{
	}
}
[Token(Token = "0x20000D8")]
public class Pvr_ControllerLink
{
	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AndroidJavaClass javaHummingbirdClass;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AndroidJavaClass javaPico2ReceiverClass;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AndroidJavaClass javaserviceClass;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AndroidJavaClass javavractivityclass;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AndroidJavaClass javaCVClass;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AndroidJavaObject activity;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string gameobjname;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool picoDevice;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string hummingBirdMac;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int hummingBirdRSSI;

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool goblinserviceStarted;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	public bool neoserviceStarted;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
	public bool controller0Connected;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5F")]
	public bool controller1Connected;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int mainHandID;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int controllerType;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ControllerHand Controller0;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ControllerHand Controller1;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int platFormType;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public int trackingmode;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int systemProp;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int enablehand6dofbyhead;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool switchHomeKey;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int iPhoneHMDModeEnabled;

	[Token(Token = "0x6000489")]
	[Address(RVA = "0x12711B0", Offset = "0x12711B0", VA = "0x12711B0")]
	public Pvr_ControllerLink(string name)
	{
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0x1271484", Offset = "0x1271484", VA = "0x1271484")]
	private void StartHummingBirdService()
	{
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0x1271E9C", Offset = "0x1271E9C", VA = "0x1271E9C")]
	public bool IsServiceExisted()
	{
		return default(bool);
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0x1271C00", Offset = "0x1271C00", VA = "0x1271C00")]
	public void SetGameObjectToJar(string name)
	{
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0x1271D20", Offset = "0x1271D20", VA = "0x1271D20")]
	public void BindService()
	{
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0x1272054", Offset = "0x1272054", VA = "0x1272054")]
	public void UnBindService()
	{
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0x12721D0", Offset = "0x12721D0", VA = "0x12721D0")]
	public void StopLark2Receiver()
	{
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0x1272368", Offset = "0x1272368", VA = "0x1272368")]
	public void StartLark2Receiver()
	{
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0x12724BC", Offset = "0x12724BC", VA = "0x12724BC")]
	public void StopLark2Service()
	{
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0x1272654", Offset = "0x1272654", VA = "0x1272654")]
	public void StartLark2Service()
	{
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0x12684D0", Offset = "0x12684D0", VA = "0x12684D0")]
	public int getHandness()
	{
		return default(int);
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0x1272838", Offset = "0x1272838", VA = "0x1272838")]
	public void StartScan()
	{
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0x1272964", Offset = "0x1272964", VA = "0x1272964")]
	public void StopScan()
	{
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0x1271B04", Offset = "0x1271B04", VA = "0x1271B04")]
	public int GetSysproc()
	{
		return default(int);
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0x1272A8C", Offset = "0x1272A8C", VA = "0x1272A8C")]
	public void ResetController(int num)
	{
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0x1272C24", Offset = "0x1272C24", VA = "0x1272C24")]
	public void ConnectBLE()
	{
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0x1272D68", Offset = "0x1272D68", VA = "0x1272D68")]
	public void DisConnectBLE()
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0x1272E08", Offset = "0x1272E08", VA = "0x1272E08")]
	public bool StartUpgrade()
	{
		return default(bool);
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0x1272E94", Offset = "0x1272E94", VA = "0x1272E94")]
	public void setBinPath(string path, bool isasset)
	{
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0x1272FD8", Offset = "0x1272FD8", VA = "0x1272FD8")]
	public string GetBLEImageType()
	{
		return null;
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0x1273078", Offset = "0x1273078", VA = "0x1273078")]
	public long GetBLEVersion()
	{
		return default(long);
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0x1273114", Offset = "0x1273114", VA = "0x1273114")]
	public string GetFileImageType()
	{
		return null;
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0x12731B4", Offset = "0x12731B4", VA = "0x12731B4")]
	public long GetFileVersion()
	{
		return default(long);
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0x1273250", Offset = "0x1273250", VA = "0x1273250")]
	public int GetControllerConnectionState(int num)
	{
		return default(int);
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0x127357C", Offset = "0x127357C", VA = "0x127357C")]
	public void RebackToLauncher()
	{
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0x1273668", Offset = "0x1273668", VA = "0x1273668")]
	public void TurnUpVolume()
	{
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0x1273810", Offset = "0x1273810", VA = "0x1273810")]
	public void TurnDownVolume()
	{
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0x12739B8", Offset = "0x12739B8", VA = "0x12739B8")]
	public float[] GetHBControllerPoseData()
	{
		return null;
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0x1273E64", Offset = "0x1273E64", VA = "0x1273E64")]
	public float[] GetControllerFixedSensorState(int hand)
	{
		return null;
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0x1274714", Offset = "0x1274714", VA = "0x1274714")]
	public float[] GetCvControllerPoseData(int hand)
	{
		return null;
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0x12754C0", Offset = "0x12754C0", VA = "0x12754C0")]
	public int[] GetHBControllerKeyData()
	{
		return null;
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0x1276B30", Offset = "0x1276B30", VA = "0x1276B30")]
	public int[] GetCvControllerKeyData(int hand)
	{
		return null;
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0x1278B90", Offset = "0x1278B90", VA = "0x1278B90")]
	public void AutoConnectHbController(int scanTimeMs)
	{
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0x1278D3C", Offset = "0x1278D3C", VA = "0x1278D3C")]
	public void StartControllerThread(int headSensorState, int handSensorState)
	{
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0x1278F34", Offset = "0x1278F34", VA = "0x1278F34")]
	public void StopControllerThread(int headSensorState, int handSensorState)
	{
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0x127912C", Offset = "0x127912C", VA = "0x127912C")]
	public void SetUnityVersionToJar(string version)
	{
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0x1279260", Offset = "0x1279260", VA = "0x1279260")]
	public Vector3 GetVelocity(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0x1279440", Offset = "0x1279440", VA = "0x1279440")]
	public Vector3 GetAngularVelocity(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0x1279A54", Offset = "0x1279A54", VA = "0x1279A54")]
	public Vector3 GetAcceleration(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0x1279F98", Offset = "0x1279F98", VA = "0x1279F98")]
	public string GetConnectedDeviceMac()
	{
		return null;
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0x127A084", Offset = "0x127A084", VA = "0x127A084")]
	public void VibateController(int hand, int strength)
	{
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0x127A26C", Offset = "0x127A26C", VA = "0x127A26C")]
	public void VibrateNeo2Controller(float strength, int time, int hand)
	{
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0x127A618", Offset = "0x127A618", VA = "0x127A618")]
	public int GetMainControllerIndex()
	{
		return default(int);
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0x127A718", Offset = "0x127A718", VA = "0x127A718")]
	public void SetMainController(int index)
	{
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0x127A878", Offset = "0x127A878", VA = "0x127A878")]
	public void ResetHeadSensorForController()
	{
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0x127A920", Offset = "0x127A920", VA = "0x127A920")]
	public void GetDeviceVersion(int deviceType)
	{
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0x127AA88", Offset = "0x127AA88", VA = "0x127AA88")]
	public void GetControllerSnCode(int controllerSerialNum)
	{
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0x127AB80", Offset = "0x127AB80", VA = "0x127AB80")]
	public void SetControllerUnbind(int controllerSerialNum)
	{
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0x127AC78", Offset = "0x127AC78", VA = "0x127AC78")]
	public void SetStationRestart()
	{
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0x127ACF8", Offset = "0x127ACF8", VA = "0x127ACF8")]
	public void StartStationOtaUpdate()
	{
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0x127AD78", Offset = "0x127AD78", VA = "0x127AD78")]
	public void StartControllerOtaUpdate(int mode, int controllerSerialNum)
	{
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0x127AED8", Offset = "0x127AED8", VA = "0x127AED8")]
	public void EnterPairMode(int controllerSerialNum)
	{
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0x127AFD0", Offset = "0x127AFD0", VA = "0x127AFD0")]
	public void SetControllerShutdown(int controllerSerialNum)
	{
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0x127B0C8", Offset = "0x127B0C8", VA = "0x127B0C8")]
	public int GetStationPairState()
	{
		return default(int);
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0x127B1CC", Offset = "0x127B1CC", VA = "0x127B1CC")]
	public int GetStationOtaUpdateProgress()
	{
		return default(int);
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0x127B2D0", Offset = "0x127B2D0", VA = "0x127B2D0")]
	public int GetControllerOtaUpdateProgress()
	{
		return default(int);
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0x127B3D4", Offset = "0x127B3D4", VA = "0x127B3D4")]
	public void GetControllerVersionAndSN(int controllerSerialNum)
	{
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0x127B4CC", Offset = "0x127B4CC", VA = "0x127B4CC")]
	public void GetControllerUniqueID()
	{
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0x127B54C", Offset = "0x127B54C", VA = "0x127B54C")]
	public void InterruptStationPairMode()
	{
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0x127B5CC", Offset = "0x127B5CC", VA = "0x127B5CC")]
	public int GetControllerAbility(int controllerSerialNum)
	{
		return default(int);
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0x127B750", Offset = "0x127B750", VA = "0x127B750")]
	public void SwitchHomeKey(bool state)
	{
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0x127B804", Offset = "0x127B804", VA = "0x127B804")]
	public void SetBootReconnect()
	{
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0x127B870", Offset = "0x127B870", VA = "0x127B870")]
	public int GetTemperature()
	{
		return default(int);
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0x127B96C", Offset = "0x127B96C", VA = "0x127B96C")]
	public int GetDeviceType()
	{
		return default(int);
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0x127BA68", Offset = "0x127BA68", VA = "0x127BA68")]
	public string GetHummingBird2SN()
	{
		return null;
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0x127BB4C", Offset = "0x127BB4C", VA = "0x127BB4C")]
	public string GetControllerVersion()
	{
		return null;
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0x127BC30", Offset = "0x127BC30", VA = "0x127BC30")]
	public bool IsEnbleTrigger()
	{
		return default(bool);
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0x127BD18", Offset = "0x127BD18", VA = "0x127BD18")]
	public void StartCV2PairingMode(int devicetype)
	{
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0x127BE10", Offset = "0x127BE10", VA = "0x127BE10")]
	public void StopCV2PairingMode(int devicetype)
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0x127BF08", Offset = "0x127BF08", VA = "0x127BF08")]
	public int GetControllerBindingState(int id)
	{
		return default(int);
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0x127C084", Offset = "0x127C084", VA = "0x127C084")]
	public void setIsEnbleHomeKey(bool state)
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0x127C1DC", Offset = "0x127C1DC", VA = "0x127C1DC")]
	public int getControllerSensorStatus(int id)
	{
		return default(int);
	}
}
[Token(Token = "0x20000D9")]
public class Pvr_ControllerManager : MonoBehaviour
{
	[Token(Token = "0x2000688")]
	public delegate void PvrServiceStartSuccess();

	[Token(Token = "0x2000689")]
	public delegate void PvrControllerStateChanged(string data);

	[Token(Token = "0x200068A")]
	public delegate void ChangeMainControllerCallBack(string index);

	[Token(Token = "0x200068B")]
	public delegate void ChangeHandNessCallBack(string index);

	[Token(Token = "0x200068C")]
	public delegate void SetHbServiceBindState();

	[Token(Token = "0x200068D")]
	public delegate void ControllerThreadStartedCallback();

	[Token(Token = "0x200068E")]
	public delegate void SetControllerServiceBindState();

	[Token(Token = "0x200068F")]
	public delegate void ControllerStatusChange(string isconnect);

	[Token(Token = "0x2000690")]
	public delegate void SetControllerAbility(string data);

	[Token(Token = "0x2000691")]
	public delegate void SetControllerStateChanged(string data);

	[Token(Token = "0x2000692")]
	public delegate void SetHbControllerMac(string mac);

	[Token(Token = "0x2000693")]
	public delegate void ControllerDeviceVersionCallback(string data);

	[Token(Token = "0x2000694")]
	public delegate void ControllerSnCodeCallback(string data);

	[Token(Token = "0x2000695")]
	public delegate void ControllerUnbindCallback(string status);

	[Token(Token = "0x2000696")]
	public delegate void ControllerStationStatusCallback(string status);

	[Token(Token = "0x2000697")]
	public delegate void ControllerStationBusyCallback(string status);

	[Token(Token = "0x2000698")]
	public delegate void ControllerOtaStartCodeCallback(string data);

	[Token(Token = "0x2000699")]
	public delegate void ControllerDeviceVersionAndSNCallback(string data);

	[Token(Token = "0x200069A")]
	public delegate void ControllerUniqueIDCallback(string data);

	[Token(Token = "0x200069B")]
	public delegate void ControllerCombinedKeyUnbindCallback(string data);

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_ControllerManager instance;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool longPressclock;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Pvr_ControllerLink controllerlink;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float cTime;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float longpresstime;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool stopConnect;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private SystemLanguage localanguage;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text toast;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool controllerServicestate;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float disConnectTime;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int triggernum;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private DateTime beginDT;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private DateTime endDT;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool LengthAdaptiveRay;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float rtime;

	[Token(Token = "0x1700004C")]
	public static Pvr_ControllerManager Instance
	{
		[Token(Token = "0x60004D1")]
		[Address(RVA = "0x126ABEC", Offset = "0x126ABEC", VA = "0x126ABEC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000011")]
	public static event PvrServiceStartSuccess PvrServiceStartSuccessEvent
	{
		[Token(Token = "0x60004D2")]
		[Address(RVA = "0x1267F68", Offset = "0x1267F68", VA = "0x1267F68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984E10", Offset = "0x984E10")]
		add
		{
		}
		[Token(Token = "0x60004D3")]
		[Address(RVA = "0x126876C", Offset = "0x126876C", VA = "0x126876C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984E20", Offset = "0x984E20")]
		remove
		{
		}
	}

	[Token(Token = "0x14000012")]
	public static event PvrControllerStateChanged PvrControllerStateChangedEvent
	{
		[Token(Token = "0x60004D4")]
		[Address(RVA = "0x127C358", Offset = "0x127C358", VA = "0x127C358")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984E30", Offset = "0x984E30")]
		add
		{
		}
		[Token(Token = "0x60004D5")]
		[Address(RVA = "0x127C488", Offset = "0x127C488", VA = "0x127C488")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984E40", Offset = "0x984E40")]
		remove
		{
		}
	}

	[Token(Token = "0x14000013")]
	public static event ChangeMainControllerCallBack ChangeMainControllerCallBackEvent
	{
		[Token(Token = "0x60004D6")]
		[Address(RVA = "0x12681C8", Offset = "0x12681C8", VA = "0x12681C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984E50", Offset = "0x984E50")]
		add
		{
		}
		[Token(Token = "0x60004D7")]
		[Address(RVA = "0x12689CC", Offset = "0x12689CC", VA = "0x12689CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984E60", Offset = "0x984E60")]
		remove
		{
		}
	}

	[Token(Token = "0x14000014")]
	public static event ChangeHandNessCallBack ChangeHandNessCallBackEvent
	{
		[Token(Token = "0x60004D8")]
		[Address(RVA = "0x12682F8", Offset = "0x12682F8", VA = "0x12682F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984E70", Offset = "0x984E70")]
		add
		{
		}
		[Token(Token = "0x60004D9")]
		[Address(RVA = "0x1268AFC", Offset = "0x1268AFC", VA = "0x1268AFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984E80", Offset = "0x984E80")]
		remove
		{
		}
	}

	[Token(Token = "0x14000015")]
	public static event SetHbServiceBindState SetHbServiceBindStateEvent
	{
		[Token(Token = "0x60004DA")]
		[Address(RVA = "0x127C5B8", Offset = "0x127C5B8", VA = "0x127C5B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984E90", Offset = "0x984E90")]
		add
		{
		}
		[Token(Token = "0x60004DB")]
		[Address(RVA = "0x127C6E8", Offset = "0x127C6E8", VA = "0x127C6E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984EA0", Offset = "0x984EA0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000016")]
	public static event ControllerThreadStartedCallback ControllerThreadStartedCallbackEvent
	{
		[Token(Token = "0x60004DC")]
		[Address(RVA = "0x127C818", Offset = "0x127C818", VA = "0x127C818")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984EB0", Offset = "0x984EB0")]
		add
		{
		}
		[Token(Token = "0x60004DD")]
		[Address(RVA = "0x127C948", Offset = "0x127C948", VA = "0x127C948")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984EC0", Offset = "0x984EC0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000017")]
	public static event SetControllerServiceBindState SetControllerServiceBindStateEvent
	{
		[Token(Token = "0x60004DE")]
		[Address(RVA = "0x127CA78", Offset = "0x127CA78", VA = "0x127CA78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984ED0", Offset = "0x984ED0")]
		add
		{
		}
		[Token(Token = "0x60004DF")]
		[Address(RVA = "0x127CBA8", Offset = "0x127CBA8", VA = "0x127CBA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984EE0", Offset = "0x984EE0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000018")]
	public static event ControllerStatusChange ControllerStatusChangeEvent
	{
		[Token(Token = "0x60004E0")]
		[Address(RVA = "0x126B97C", Offset = "0x126B97C", VA = "0x126B97C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984EF0", Offset = "0x984EF0")]
		add
		{
		}
		[Token(Token = "0x60004E1")]
		[Address(RVA = "0x126BCE8", Offset = "0x126BCE8", VA = "0x126BCE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984F00", Offset = "0x984F00")]
		remove
		{
		}
	}

	[Token(Token = "0x14000019")]
	public static event SetControllerAbility SetControllerAbilityEvent
	{
		[Token(Token = "0x60004E2")]
		[Address(RVA = "0x1268098", Offset = "0x1268098", VA = "0x1268098")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984F10", Offset = "0x984F10")]
		add
		{
		}
		[Token(Token = "0x60004E3")]
		[Address(RVA = "0x126889C", Offset = "0x126889C", VA = "0x126889C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984F20", Offset = "0x984F20")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001A")]
	public static event SetControllerStateChanged SetControllerStateChangedEvent
	{
		[Token(Token = "0x60004E4")]
		[Address(RVA = "0x126B84C", Offset = "0x126B84C", VA = "0x126B84C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984F30", Offset = "0x984F30")]
		add
		{
		}
		[Token(Token = "0x60004E5")]
		[Address(RVA = "0x126BBB8", Offset = "0x126BBB8", VA = "0x126BBB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984F40", Offset = "0x984F40")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001B")]
	public static event SetHbControllerMac SetHbControllerMacEvent
	{
		[Token(Token = "0x60004E6")]
		[Address(RVA = "0x127CCD8", Offset = "0x127CCD8", VA = "0x127CCD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984F50", Offset = "0x984F50")]
		add
		{
		}
		[Token(Token = "0x60004E7")]
		[Address(RVA = "0x127CE08", Offset = "0x127CE08", VA = "0x127CE08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984F60", Offset = "0x984F60")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001C")]
	public static event ControllerDeviceVersionCallback ControllerDeviceVersionCallbackEvent
	{
		[Token(Token = "0x60004E8")]
		[Address(RVA = "0x127CF38", Offset = "0x127CF38", VA = "0x127CF38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984F70", Offset = "0x984F70")]
		add
		{
		}
		[Token(Token = "0x60004E9")]
		[Address(RVA = "0x127D068", Offset = "0x127D068", VA = "0x127D068")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984F80", Offset = "0x984F80")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001D")]
	public static event ControllerSnCodeCallback ControllerSnCodeCallbackEvent
	{
		[Token(Token = "0x60004EA")]
		[Address(RVA = "0x127D198", Offset = "0x127D198", VA = "0x127D198")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984F90", Offset = "0x984F90")]
		add
		{
		}
		[Token(Token = "0x60004EB")]
		[Address(RVA = "0x127D2C8", Offset = "0x127D2C8", VA = "0x127D2C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984FA0", Offset = "0x984FA0")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001E")]
	public static event ControllerUnbindCallback ControllerUnbindCallbackEvent
	{
		[Token(Token = "0x60004EC")]
		[Address(RVA = "0x127D3F8", Offset = "0x127D3F8", VA = "0x127D3F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984FB0", Offset = "0x984FB0")]
		add
		{
		}
		[Token(Token = "0x60004ED")]
		[Address(RVA = "0x127D528", Offset = "0x127D528", VA = "0x127D528")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984FC0", Offset = "0x984FC0")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001F")]
	public static event ControllerStationStatusCallback ControllerStationStatusCallbackEvent
	{
		[Token(Token = "0x60004EE")]
		[Address(RVA = "0x127D658", Offset = "0x127D658", VA = "0x127D658")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984FD0", Offset = "0x984FD0")]
		add
		{
		}
		[Token(Token = "0x60004EF")]
		[Address(RVA = "0x127D788", Offset = "0x127D788", VA = "0x127D788")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984FE0", Offset = "0x984FE0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000020")]
	public static event ControllerStationBusyCallback ControllerStationBusyCallbackEvent
	{
		[Token(Token = "0x60004F0")]
		[Address(RVA = "0x127D8B8", Offset = "0x127D8B8", VA = "0x127D8B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x984FF0", Offset = "0x984FF0")]
		add
		{
		}
		[Token(Token = "0x60004F1")]
		[Address(RVA = "0x127D9E8", Offset = "0x127D9E8", VA = "0x127D9E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985000", Offset = "0x985000")]
		remove
		{
		}
	}

	[Token(Token = "0x14000021")]
	public static event ControllerOtaStartCodeCallback ControllerOtaStartCodeCallbackEvent
	{
		[Token(Token = "0x60004F2")]
		[Address(RVA = "0x127DB18", Offset = "0x127DB18", VA = "0x127DB18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985010", Offset = "0x985010")]
		add
		{
		}
		[Token(Token = "0x60004F3")]
		[Address(RVA = "0x127DC48", Offset = "0x127DC48", VA = "0x127DC48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985020", Offset = "0x985020")]
		remove
		{
		}
	}

	[Token(Token = "0x14000022")]
	public static event ControllerDeviceVersionAndSNCallback ControllerDeviceVersionAndSNCallbackEvent
	{
		[Token(Token = "0x60004F4")]
		[Address(RVA = "0x127DD78", Offset = "0x127DD78", VA = "0x127DD78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985030", Offset = "0x985030")]
		add
		{
		}
		[Token(Token = "0x60004F5")]
		[Address(RVA = "0x127DEA8", Offset = "0x127DEA8", VA = "0x127DEA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985040", Offset = "0x985040")]
		remove
		{
		}
	}

	[Token(Token = "0x14000023")]
	public static event ControllerUniqueIDCallback ControllerUniqueIDCallbackEvent
	{
		[Token(Token = "0x60004F6")]
		[Address(RVA = "0x127DFD8", Offset = "0x127DFD8", VA = "0x127DFD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985050", Offset = "0x985050")]
		add
		{
		}
		[Token(Token = "0x60004F7")]
		[Address(RVA = "0x127E108", Offset = "0x127E108", VA = "0x127E108")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985060", Offset = "0x985060")]
		remove
		{
		}
	}

	[Token(Token = "0x14000024")]
	public static event ControllerCombinedKeyUnbindCallback ControllerCombinedKeyUnbindCallbackEvent
	{
		[Token(Token = "0x60004F8")]
		[Address(RVA = "0x127E238", Offset = "0x127E238", VA = "0x127E238")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985070", Offset = "0x985070")]
		add
		{
		}
		[Token(Token = "0x60004F9")]
		[Address(RVA = "0x127E368", Offset = "0x127E368", VA = "0x127E368")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985080", Offset = "0x985080")]
		remove
		{
		}
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0x127E498", Offset = "0x127E498", VA = "0x127E498")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0x127E74C", Offset = "0x127E74C", VA = "0x127E74C")]
	private void Start()
	{
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0x127E800", Offset = "0x127E800", VA = "0x127E800")]
	private void Update()
	{
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0x1280828", Offset = "0x1280828", VA = "0x1280828")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0x1280CF4", Offset = "0x1280CF4", VA = "0x1280CF4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0x1280D6C", Offset = "0x1280D6C", VA = "0x1280D6C")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0x1280ED4", Offset = "0x1280ED4", VA = "0x1280ED4")]
	public void StopLark2Service()
	{
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0x1280F80", Offset = "0x1280F80", VA = "0x1280F80")]
	public Vector3 GetAngularVelocity(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0x1281068", Offset = "0x1281068", VA = "0x1281068")]
	public Vector3 GetAcceleration(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0x127E6A0", Offset = "0x127E6A0", VA = "0x127E6A0")]
	public void BindService()
	{
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0x1281150", Offset = "0x1281150", VA = "0x1281150")]
	public void StartScan()
	{
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0x12811FC", Offset = "0x12811FC", VA = "0x12811FC")]
	public void StopScan()
	{
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0x12812A8", Offset = "0x12812A8", VA = "0x12812A8")]
	public void ResetController(int num)
	{
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0x1280C74", Offset = "0x1280C74", VA = "0x1280C74")]
	public static int GetControllerConnectionState(int num)
	{
		return default(int);
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0x128135C", Offset = "0x128135C", VA = "0x128135C")]
	public void ConnectBLE()
	{
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0x1281408", Offset = "0x1281408", VA = "0x1281408")]
	public void DisConnectBLE()
	{
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0x12814B4", Offset = "0x12814B4", VA = "0x12814B4")]
	public void SetBinPath(string path, bool isAsset)
	{
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0x128157C", Offset = "0x128157C", VA = "0x128157C")]
	public void StartUpgrade()
	{
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0x1281628", Offset = "0x1281628", VA = "0x1281628")]
	public static string GetBLEImageType()
	{
		return null;
	}

	[Token(Token = "0x600050D")]
	[Address(RVA = "0x12816A0", Offset = "0x12816A0", VA = "0x12816A0")]
	public static long GetBLEVersion()
	{
		return default(long);
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0x1281718", Offset = "0x1281718", VA = "0x1281718")]
	public static string GetFileImageType()
	{
		return null;
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0x1281790", Offset = "0x1281790", VA = "0x1281790")]
	public static long GetFileVersion()
	{
		return default(long);
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0x1281808", Offset = "0x1281808", VA = "0x1281808")]
	public static void AutoConnectHbController(int scans)
	{
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0x12818BC", Offset = "0x12818BC", VA = "0x12818BC")]
	public static string GetConnectedDeviceMac()
	{
		return null;
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0x1281978", Offset = "0x1281978", VA = "0x1281978")]
	public void setHbControllerMac(string mac)
	{
	}

	[Token(Token = "0x6000513")]
	[Address(RVA = "0x1281B68", Offset = "0x1281B68", VA = "0x1281B68")]
	public int GetControllerRSSI()
	{
		return default(int);
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0x1281BE0", Offset = "0x1281BE0", VA = "0x1281BE0")]
	public void setHbServiceBindState(string state)
	{
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0x1281E68", Offset = "0x1281E68", VA = "0x1281E68")]
	public void setControllerServiceBindState(string state)
	{
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0x1282150", Offset = "0x1282150", VA = "0x1282150")]
	public void setHbControllerConnectState(string isconnect)
	{
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0x12823CC", Offset = "0x12823CC", VA = "0x12823CC")]
	public void setControllerStateChanged(string state)
	{
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0x1282A80", Offset = "0x1282A80", VA = "0x1282A80")]
	public void setControllerAbility(string data)
	{
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0x1282B84", Offset = "0x1282B84", VA = "0x1282B84")]
	public void controllerThreadStartedCallback()
	{
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0x1283000", Offset = "0x1283000", VA = "0x1283000")]
	public void controllerDeviceVersionCallback(string data)
	{
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0x1283104", Offset = "0x1283104", VA = "0x1283104")]
	public void controllerSnCodeCallback(string data)
	{
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0x1283208", Offset = "0x1283208", VA = "0x1283208")]
	public void controllerUnbindCallback(string status)
	{
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0x128330C", Offset = "0x128330C", VA = "0x128330C")]
	public void controllerStationStatusCallback(string status)
	{
	}

	[Token(Token = "0x600051E")]
	[Address(RVA = "0x1283410", Offset = "0x1283410", VA = "0x1283410")]
	public void controllerStationBusyCallback(string status)
	{
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0x1283514", Offset = "0x1283514", VA = "0x1283514")]
	public void controllerOTAStartCodeCallback(string data)
	{
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0x1283618", Offset = "0x1283618", VA = "0x1283618")]
	public void controllerDeviceVersionAndSNCallback(string data)
	{
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0x128371C", Offset = "0x128371C", VA = "0x128371C")]
	public void controllerUniqueIDCallback(string data)
	{
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0x1283820", Offset = "0x1283820", VA = "0x1283820")]
	public void controllerCombinedKeyUnbindCallback(string controllerSerialNum)
	{
	}

	[Token(Token = "0x6000523")]
	[Address(RVA = "0x12838D8", Offset = "0x12838D8", VA = "0x12838D8")]
	public void setupdateFailed()
	{
	}

	[Token(Token = "0x6000524")]
	[Address(RVA = "0x12838DC", Offset = "0x12838DC", VA = "0x12838DC")]
	public void setupdateSuccess()
	{
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0x12838E0", Offset = "0x12838E0", VA = "0x12838E0")]
	public void setupdateProgress(string progress)
	{
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0x12838E4", Offset = "0x12838E4", VA = "0x12838E4")]
	public void setHbAutoConnectState(string state)
	{
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0x1283F00", Offset = "0x1283F00", VA = "0x1283F00")]
	public void callbackControllerServiceState(string state)
	{
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0x128405C", Offset = "0x128405C", VA = "0x128405C")]
	public void changeMainControllerCallback(string index)
	{
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0x12841C4", Offset = "0x12841C4", VA = "0x12841C4")]
	public void changeHandnessCallback(string index)
	{
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0x1283A38", Offset = "0x1283A38", VA = "0x1283A38")]
	private void ShowToast(int type)
	{
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0x12842C8", Offset = "0x12842C8", VA = "0x12842C8")]
	private void HideToast()
	{
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0x1284378", Offset = "0x1284378", VA = "0x1284378")]
	private void CheckControllerService()
	{
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0x1282CD8", Offset = "0x1282CD8", VA = "0x1282CD8")]
	private void GetCVControllerState()
	{
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0x127FFA4", Offset = "0x127FFA4", VA = "0x127FFA4")]
	private void SetSystemKey()
	{
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0x127F0F0", Offset = "0x127F0F0", VA = "0x127F0F0")]
	private void TransformData(ControllerHand hand, int handid, int[] data)
	{
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0x128438C", Offset = "0x128438C", VA = "0x128438C")]
	public Pvr_ControllerManager()
	{
	}
}
[Token(Token = "0x20000DA")]
public class Pvr_ControllerModuleInit : MonoBehaviour
{
	[Token(Token = "0x200069C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x978EDC", Offset = "0x978EDC")]
	private sealed class <ShowOrHideRay>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pvr_ControllerModuleInit <>4__this;

		[Token(Token = "0x4001D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool state;

		[Token(Token = "0x1700033B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002355")]
			[Address(RVA = "0x11A1C30", Offset = "0x11A1C30", VA = "0x11A1C30", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002357")]
			[Address(RVA = "0x11A1CA0", Offset = "0x11A1CA0", VA = "0x11A1CA0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002352")]
		[Address(RVA = "0x11A16C8", Offset = "0x11A16C8", VA = "0x11A16C8")]
		[DebuggerHidden]
		public <ShowOrHideRay>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6002353")]
		[Address(RVA = "0x11A1B88", Offset = "0x11A1B88", VA = "0x11A1B88", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002354")]
		[Address(RVA = "0x11A1B8C", Offset = "0x11A1B8C", VA = "0x11A1B8C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002356")]
		[Address(RVA = "0x11A1C38", Offset = "0x11A1C38", VA = "0x11A1C38", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ControllerVariety Variety;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool IsCustomModel;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject dot;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject rayLine;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject controller;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int controllerDof;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int mainHand;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool moduleState;

	[Token(Token = "0x6000532")]
	[Address(RVA = "0x11A0FE8", Offset = "0x11A0FE8", VA = "0x11A0FE8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0x11A1220", Offset = "0x11A1220", VA = "0x11A1220")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0x11A1314", Offset = "0x11A1314", VA = "0x11A1314")]
	private void ServiceStartSuccess()
	{
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0x11A1454", Offset = "0x11A1454", VA = "0x11A1454")]
	private void ControllerStateChanged(string data)
	{
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0x11A15AC", Offset = "0x11A15AC", VA = "0x11A15AC")]
	private void MainControllerIDChanged(string data)
	{
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0x11A1318", Offset = "0x11A1318", VA = "0x11A1318")]
	private void RefreshRay()
	{
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0x11A162C", Offset = "0x11A162C", VA = "0x11A162C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x985090", Offset = "0x985090")]
	private IEnumerator ShowOrHideRay(bool state)
	{
		return null;
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0x11A16F4", Offset = "0x11A16F4", VA = "0x11A16F4")]
	public void ForceHideOrShow(bool state)
	{
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0x11A1820", Offset = "0x11A1820", VA = "0x11A1820")]
	public void UpdateRay()
	{
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0x11A1B70", Offset = "0x11A1B70", VA = "0x11A1B70")]
	public Pvr_ControllerModuleInit()
	{
	}
}
[Token(Token = "0x20000DB")]
public class Pvr_ControllerPower : MonoBehaviour
{
	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Sprite power1;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Sprite power2;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Sprite power3;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Sprite power4;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Sprite power5;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public ControllerVariety variety;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[HideInInspector]
	public ControllerDevice currentDevice;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Image powerImage;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int powerValue;

	[Token(Token = "0x600053C")]
	[Address(RVA = "0x11A1CA8", Offset = "0x11A1CA8", VA = "0x11A1CA8")]
	private void Start()
	{
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0x11A1DA0", Offset = "0x11A1DA0", VA = "0x11A1DA0")]
	private void Update()
	{
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0x11A1DD8", Offset = "0x11A1DD8", VA = "0x11A1DD8")]
	private void RefreshPower(int hand)
	{
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0x11A264C", Offset = "0x11A264C", VA = "0x11A264C")]
	public Pvr_ControllerPower()
	{
	}
}
[Token(Token = "0x20000DC")]
public class Pvr_ControllerVisual : MonoBehaviour
{
	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ControllerDevice currentDevice;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture2D m_idle;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture2D m_app;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture2D m_home;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture2D m_touchpad;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture2D m_volUp;

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture2D m_volDn;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Texture2D m_trigger;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Texture2D m_a;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Texture2D m_b;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Texture2D m_x;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Texture2D m_y;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Texture2D m_grab;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Renderer controllerRenderMat;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[HideInInspector]
	public ControllerVariety variety;

	[Token(Token = "0x6000540")]
	[Address(RVA = "0x11A2654", Offset = "0x11A2654", VA = "0x11A2654")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0x11A26AC", Offset = "0x11A26AC", VA = "0x11A26AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0x11A272C", Offset = "0x11A272C", VA = "0x11A272C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0x11A2764", Offset = "0x11A2764", VA = "0x11A2764")]
	private void ChangeKeyEffects(int hand)
	{
	}

	[Token(Token = "0x6000544")]
	[Address(RVA = "0x11A3564", Offset = "0x11A3564", VA = "0x11A3564")]
	public Pvr_ControllerVisual()
	{
	}
}
[Token(Token = "0x20000DD")]
public class Pvr_ToolTips : MonoBehaviour
{
	[Token(Token = "0x200069D")]
	public enum TipBtn
	{
		[Token(Token = "0x4001D60")]
		app,
		[Token(Token = "0x4001D61")]
		touchpad,
		[Token(Token = "0x4001D62")]
		home,
		[Token(Token = "0x4001D63")]
		volup,
		[Token(Token = "0x4001D64")]
		voldown,
		[Token(Token = "0x4001D65")]
		trigger,
		[Token(Token = "0x4001D66")]
		grip
	}

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ControllerDevice currentDevice;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float tipsAlpha;

	[Token(Token = "0x6000545")]
	[Address(RVA = "0x11A81C8", Offset = "0x11A81C8", VA = "0x11A81C8")]
	public void ChangeTipsText(TipBtn tip, string key)
	{
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0x11A8390", Offset = "0x11A8390", VA = "0x11A8390")]
	private void Start()
	{
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0x11A92A4", Offset = "0x11A92A4", VA = "0x11A92A4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0x11A9540", Offset = "0x11A9540", VA = "0x11A9540")]
	public Pvr_ToolTips()
	{
	}
}
[Token(Token = "0x20000DE")]
public class Pvr_TouchPadScroll : MonoBehaviour
{
	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ScrollRect scrollRect;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isHoving;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int mainHand;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SwipeDirection direction;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector2 currPos;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector2 tarPos;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float lerpSpeed;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform tranViewport;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float ignoreDis;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector2 lastTouchDownPos;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector2 lastTouchUpPos;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool isTouching;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	private bool isClosed;

	[Token(Token = "0x6000549")]
	[Address(RVA = "0x11A9548", Offset = "0x11A9548", VA = "0x11A9548")]
	private void Awake()
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0x11A95EC", Offset = "0x11A95EC", VA = "0x11A95EC")]
	private void Update()
	{
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0x11A9E48", Offset = "0x11A9E48", VA = "0x11A9E48")]
	private bool IsControllerConnect()
	{
		return default(bool);
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0x11A977C", Offset = "0x11A977C", VA = "0x11A977C")]
	private void UpdateTargetPos()
	{
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0x11A9BE0", Offset = "0x11A9BE0", VA = "0x11A9BE0")]
	private void UpdatePos()
	{
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0x11AA570", Offset = "0x11AA570", VA = "0x11AA570")]
	private void ResetParameter()
	{
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0x11A9618", Offset = "0x11A9618", VA = "0x11A9618")]
	private void Process()
	{
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0x11AA790", Offset = "0x11AA790", VA = "0x11AA790")]
	private bool IsHovering(Pvr_UIPointer pointer)
	{
		return default(bool);
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0x11AA9B8", Offset = "0x11AA9B8", VA = "0x11AA9B8")]
	private bool FindTree(Transform tran)
	{
		return default(bool);
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0x11AAAAC", Offset = "0x11AAAAC", VA = "0x11AAAAC")]
	public Pvr_TouchPadScroll()
	{
	}
}
[Token(Token = "0x20000DF")]
public class Pvr_TouchVisual : MonoBehaviour
{
	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public ControllerDevice currentDevice;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public ControllerVariety variety;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshRenderer touchRenderer;

	[Token(Token = "0x6000553")]
	[Address(RVA = "0x11AAACC", Offset = "0x11AAACC", VA = "0x11AAACC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0x11AAB8C", Offset = "0x11AAB8C", VA = "0x11AAB8C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0x11AABC4", Offset = "0x11AABC4", VA = "0x11AABC4")]
	private void ChangeEffects(int hand)
	{
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0x11AB040", Offset = "0x11AB040", VA = "0x11AB040")]
	public Pvr_TouchVisual()
	{
	}
}
[Token(Token = "0x20000E0")]
public class DemoController : MonoBehaviour
{
	[Token(Token = "0x200069E")]
	public delegate void showLoadingEventHandler();

	[Token(Token = "0x200069F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x978EEC", Offset = "0x978EEC")]
	private sealed class <>c__DisplayClass12_0
	{
		[Token(Token = "0x4001D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject btnObj;

		[Token(Token = "0x4001D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DemoController <>4__this;

		[Token(Token = "0x600235C")]
		[Address(RVA = "0xC1A3C4", Offset = "0xC1A3C4", VA = "0xC1A3C4")]
		public <>c__DisplayClass12_0()
		{
		}

		[Token(Token = "0x600235D")]
		[Address(RVA = "0xC1AD68", Offset = "0xC1AD68", VA = "0xC1AD68")]
		internal void <InitDelegate>b__0()
		{
		}
	}

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Callback callback;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject msg;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Pvr_UnitySDKManager picoVrManager;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string currentOrderID;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject loading;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject BG;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject InputPanel;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static showLoadingEventHandler showLoading;

	[Token(Token = "0x6000557")]
	[Address(RVA = "0xC19A40", Offset = "0xC19A40", VA = "0xC19A40")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0xC19C90", Offset = "0xC19C90", VA = "0xC19C90")]
	private void Start()
	{
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0xC1A23C", Offset = "0xC1A23C", VA = "0xC1A23C")]
	private void Update()
	{
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0xC19D64", Offset = "0xC19D64", VA = "0xC19D64")]
	private void InitDelegate()
	{
	}

	[Token(Token = "0x600055B")]
	[Address(RVA = "0xC1A3CC", Offset = "0xC1A3CC", VA = "0xC1A3CC")]
	private void OnClick(GameObject btnObj)
	{
	}

	[Token(Token = "0x600055C")]
	[Address(RVA = "0xC1A790", Offset = "0xC1A790", VA = "0xC1A790")]
	public string getRamdomTestOrderID()
	{
		return null;
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0xC1A738", Offset = "0xC1A738", VA = "0xC1A738")]
	private void StartLoading()
	{
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0xC1A7D4", Offset = "0xC1A7D4", VA = "0xC1A7D4")]
	public void StopLoading()
	{
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0xC1A8F8", Offset = "0xC1A8F8", VA = "0xC1A8F8")]
	public void DoPayByCode()
	{
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0xC1AC60", Offset = "0xC1AC60", VA = "0xC1AC60")]
	private bool VerifyLocalToken()
	{
		return default(bool);
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0xC1AD60", Offset = "0xC1AD60", VA = "0xC1AD60")]
	public DemoController()
	{
	}
}
[Token(Token = "0x20000E1")]
public class LoadingRatation : MonoBehaviour
{
	[Token(Token = "0x6000562")]
	[Address(RVA = "0xF88780", Offset = "0xF88780", VA = "0xF88780")]
	private void Start()
	{
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0xF88784", Offset = "0xF88784", VA = "0xF88784")]
	private void Update()
	{
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0xF88808", Offset = "0xF88808", VA = "0xF88808")]
	public LoadingRatation()
	{
	}
}
[Token(Token = "0x20000E2")]
public class InputManager : MonoBehaviour
{
	[Token(Token = "0x20006A0")]
	public delegate void doEnterEventHandler();

	[Token(Token = "0x20006A1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x978EFC", Offset = "0x978EFC")]
	private sealed class <>c__DisplayClass8_0
	{
		[Token(Token = "0x4001D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject btnObj;

		[Token(Token = "0x4001D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InputManager <>4__this;

		[Token(Token = "0x6002362")]
		[Address(RVA = "0xCAA4F4", Offset = "0xCAA4F4", VA = "0xCAA4F4")]
		public <>c__DisplayClass8_0()
		{
		}

		[Token(Token = "0x6002363")]
		[Address(RVA = "0xCAB558", Offset = "0xCAB558", VA = "0xCAB558")]
		internal void <InitKeyBoard>b__0()
		{
		}
	}

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static doEnterEventHandler doEnter;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private StringBuilder sb;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ArrayList btnsName;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject enter;

	[Token(Token = "0x6000565")]
	[Address(RVA = "0xCA9998", Offset = "0xCA9998", VA = "0xCA9998")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0xCAA4EC", Offset = "0xCAA4EC", VA = "0xCAA4EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0xCAA4F0", Offset = "0xCAA4F0", VA = "0xCAA4F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0xCA999C", Offset = "0xCA999C", VA = "0xCA999C")]
	private void InitKeyBoard()
	{
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0xCAA4FC", Offset = "0xCAA4FC", VA = "0xCAA4FC")]
	private void OnClick(GameObject btnObj)
	{
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0xCAB3A4", Offset = "0xCAB3A4", VA = "0xCAB3A4")]
	private void EnterChar(string s)
	{
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0xCAA800", Offset = "0xCAA800", VA = "0xCAA800")]
	private void DoCapslock(bool IsUpper)
	{
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0xCAAEF0", Offset = "0xCAAEF0", VA = "0xCAAEF0")]
	private void ClearBuffer()
	{
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0xCAB4D0", Offset = "0xCAB4D0", VA = "0xCAB4D0")]
	public InputManager()
	{
	}
}
[Token(Token = "0x20000E3")]
public class Callback : MonoBehaviour
{
	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string IS_SUCCESS;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string MSG;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static string CODE;

	[Token(Token = "0x600056E")]
	[Address(RVA = "0xC0E348", Offset = "0xC0E348", VA = "0xC0E348")]
	public void LoginCallback(string LoginInfo)
	{
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0xC0EB8C", Offset = "0xC0EB8C", VA = "0xC0EB8C")]
	public void QueryOrPayCallback(string queryOrPayInfo)
	{
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0xC0EE3C", Offset = "0xC0EE3C", VA = "0xC0EE3C")]
	public void UserInfoCallback(string userInfo)
	{
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0xC0E5D0", Offset = "0xC0E5D0", VA = "0xC0E5D0")]
	public void SetMassage(string massage)
	{
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0xC0EF20", Offset = "0xC0EF20", VA = "0xC0EF20")]
	public GameObject GetCurrentGameObject()
	{
		return null;
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0xC0EF6C", Offset = "0xC0EF6C", VA = "0xC0EF6C")]
	public void ActivityForResultCallback(string activity)
	{
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0xC0F074", Offset = "0xC0F074", VA = "0xC0F074")]
	public Callback()
	{
	}
}
[Token(Token = "0x20000E4")]
public class CommonDic
{
	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static CommonDic dic;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<string, string> mydic;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private string _app_ID;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string _app_Key;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string _user_token;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string _access_token;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string _open_id;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string _refresh_token;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string _expires_in;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string _user_info;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string _subject;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string _body;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string _order_id;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string _total;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string _goods_tag;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string _notify_url;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string _trade_type;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private string _pay_code;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private string _order_info;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private string _code;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private string _msg;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string _merchant_ID;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private string _payKey;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private string _isSuucess;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private string _loginMsg;

	[Token(Token = "0x1700004D")]
	public string subject
	{
		[Token(Token = "0x600057A")]
		[Address(RVA = "0xC11028", Offset = "0xC11028", VA = "0xC11028")]
		get
		{
			return null;
		}
		[Token(Token = "0x600057B")]
		[Address(RVA = "0xC10F78", Offset = "0xC10F78", VA = "0xC10F78")]
		set
		{
		}
	}

	[Token(Token = "0x1700004E")]
	public string body
	{
		[Token(Token = "0x600057C")]
		[Address(RVA = "0xC11030", Offset = "0xC11030", VA = "0xC11030")]
		get
		{
			return null;
		}
		[Token(Token = "0x600057D")]
		[Address(RVA = "0xC10F80", Offset = "0xC10F80", VA = "0xC10F80")]
		set
		{
		}
	}

	[Token(Token = "0x1700004F")]
	public string order_id
	{
		[Token(Token = "0x600057E")]
		[Address(RVA = "0xC11038", Offset = "0xC11038", VA = "0xC11038")]
		get
		{
			return null;
		}
		[Token(Token = "0x600057F")]
		[Address(RVA = "0xC10F88", Offset = "0xC10F88", VA = "0xC10F88")]
		set
		{
		}
	}

	[Token(Token = "0x17000050")]
	public string total
	{
		[Token(Token = "0x6000580")]
		[Address(RVA = "0xC11040", Offset = "0xC11040", VA = "0xC11040")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000581")]
		[Address(RVA = "0xC10F90", Offset = "0xC10F90", VA = "0xC10F90")]
		set
		{
		}
	}

	[Token(Token = "0x17000051")]
	public string goods_tag
	{
		[Token(Token = "0x6000582")]
		[Address(RVA = "0xC11048", Offset = "0xC11048", VA = "0xC11048")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000583")]
		[Address(RVA = "0xC10F98", Offset = "0xC10F98", VA = "0xC10F98")]
		set
		{
		}
	}

	[Token(Token = "0x17000052")]
	public string notify_url
	{
		[Token(Token = "0x6000584")]
		[Address(RVA = "0xC11050", Offset = "0xC11050", VA = "0xC11050")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000585")]
		[Address(RVA = "0xC10FA0", Offset = "0xC10FA0", VA = "0xC10FA0")]
		set
		{
		}
	}

	[Token(Token = "0x17000053")]
	public string pay_code
	{
		[Token(Token = "0x6000586")]
		[Address(RVA = "0xC11058", Offset = "0xC11058", VA = "0xC11058")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000587")]
		[Address(RVA = "0xC10FB0", Offset = "0xC10FB0", VA = "0xC10FB0")]
		set
		{
		}
	}

	[Token(Token = "0x17000054")]
	public string trade_type
	{
		[Token(Token = "0x6000588")]
		[Address(RVA = "0xC11060", Offset = "0xC11060", VA = "0xC11060")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000589")]
		[Address(RVA = "0xC10FA8", Offset = "0xC10FA8", VA = "0xC10FA8")]
		set
		{
		}
	}

	[Token(Token = "0x17000055")]
	public string user_token
	{
		[Token(Token = "0x600058A")]
		[Address(RVA = "0xC11068", Offset = "0xC11068", VA = "0xC11068")]
		get
		{
			return null;
		}
		[Token(Token = "0x600058B")]
		[Address(RVA = "0xC11070", Offset = "0xC11070", VA = "0xC11070")]
		set
		{
		}
	}

	[Token(Token = "0x17000056")]
	public string access_token
	{
		[Token(Token = "0x600058C")]
		[Address(RVA = "0xC11078", Offset = "0xC11078", VA = "0xC11078")]
		get
		{
			return null;
		}
		[Token(Token = "0x600058D")]
		[Address(RVA = "0xC11080", Offset = "0xC11080", VA = "0xC11080")]
		set
		{
		}
	}

	[Token(Token = "0x17000057")]
	public string open_id
	{
		[Token(Token = "0x600058E")]
		[Address(RVA = "0xC11088", Offset = "0xC11088", VA = "0xC11088")]
		get
		{
			return null;
		}
		[Token(Token = "0x600058F")]
		[Address(RVA = "0xC11090", Offset = "0xC11090", VA = "0xC11090")]
		set
		{
		}
	}

	[Token(Token = "0x17000058")]
	public string refresh_token
	{
		[Token(Token = "0x6000590")]
		[Address(RVA = "0xC11098", Offset = "0xC11098", VA = "0xC11098")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000591")]
		[Address(RVA = "0xC110A0", Offset = "0xC110A0", VA = "0xC110A0")]
		set
		{
		}
	}

	[Token(Token = "0x17000059")]
	public string expires_in
	{
		[Token(Token = "0x6000592")]
		[Address(RVA = "0xC110A8", Offset = "0xC110A8", VA = "0xC110A8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000593")]
		[Address(RVA = "0xC110B0", Offset = "0xC110B0", VA = "0xC110B0")]
		set
		{
		}
	}

	[Token(Token = "0x1700005A")]
	public string isSuccess
	{
		[Token(Token = "0x6000594")]
		[Address(RVA = "0xC110B8", Offset = "0xC110B8", VA = "0xC110B8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000595")]
		[Address(RVA = "0xC0EB7C", Offset = "0xC0EB7C", VA = "0xC0EB7C")]
		set
		{
		}
	}

	[Token(Token = "0x1700005B")]
	public string loginMsg
	{
		[Token(Token = "0x6000596")]
		[Address(RVA = "0xC110C0", Offset = "0xC110C0", VA = "0xC110C0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000597")]
		[Address(RVA = "0xC0EB84", Offset = "0xC0EB84", VA = "0xC0EB84")]
		set
		{
		}
	}

	[Token(Token = "0x1700005C")]
	public string user_info
	{
		[Token(Token = "0x6000598")]
		[Address(RVA = "0xC110C8", Offset = "0xC110C8", VA = "0xC110C8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000599")]
		[Address(RVA = "0xC0EF18", Offset = "0xC0EF18", VA = "0xC0EF18")]
		set
		{
		}
	}

	[Token(Token = "0x1700005D")]
	public string order_info
	{
		[Token(Token = "0x600059A")]
		[Address(RVA = "0xC110D0", Offset = "0xC110D0", VA = "0xC110D0")]
		get
		{
			return null;
		}
		[Token(Token = "0x600059B")]
		[Address(RVA = "0xC0EE34", Offset = "0xC0EE34", VA = "0xC0EE34")]
		set
		{
		}
	}

	[Token(Token = "0x1700005E")]
	public string code
	{
		[Token(Token = "0x600059C")]
		[Address(RVA = "0xC110D8", Offset = "0xC110D8", VA = "0xC110D8")]
		get
		{
			return null;
		}
		[Token(Token = "0x600059D")]
		[Address(RVA = "0xC0EE24", Offset = "0xC0EE24", VA = "0xC0EE24")]
		set
		{
		}
	}

	[Token(Token = "0x1700005F")]
	public string msg
	{
		[Token(Token = "0x600059E")]
		[Address(RVA = "0xC110E0", Offset = "0xC110E0", VA = "0xC110E0")]
		get
		{
			return null;
		}
		[Token(Token = "0x600059F")]
		[Address(RVA = "0xC0EE2C", Offset = "0xC0EE2C", VA = "0xC0EE2C")]
		set
		{
		}
	}

	[Token(Token = "0x17000060")]
	public string app_ID
	{
		[Token(Token = "0x60005A0")]
		[Address(RVA = "0xC110E8", Offset = "0xC110E8", VA = "0xC110E8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005A1")]
		[Address(RVA = "0xC110F0", Offset = "0xC110F0", VA = "0xC110F0")]
		set
		{
		}
	}

	[Token(Token = "0x17000061")]
	public string app_Key
	{
		[Token(Token = "0x60005A2")]
		[Address(RVA = "0xC110F8", Offset = "0xC110F8", VA = "0xC110F8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005A3")]
		[Address(RVA = "0xC11100", Offset = "0xC11100", VA = "0xC11100")]
		set
		{
		}
	}

	[Token(Token = "0x17000062")]
	public string merchant_ID
	{
		[Token(Token = "0x60005A4")]
		[Address(RVA = "0xC11108", Offset = "0xC11108", VA = "0xC11108")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005A5")]
		[Address(RVA = "0xC11110", Offset = "0xC11110", VA = "0xC11110")]
		set
		{
		}
	}

	[Token(Token = "0x17000063")]
	public string paykey
	{
		[Token(Token = "0x60005A6")]
		[Address(RVA = "0xC11118", Offset = "0xC11118", VA = "0xC11118")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005A7")]
		[Address(RVA = "0xC11120", Offset = "0xC11120", VA = "0xC11120")]
		set
		{
		}
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0xC0EAB8", Offset = "0xC0EAB8", VA = "0xC0EAB8")]
	public static CommonDic getInstance()
	{
		return null;
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0xC10D78", Offset = "0xC10D78", VA = "0xC10D78")]
	public Dictionary<string, string> getDic()
	{
		return null;
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0xC10DC8", Offset = "0xC10DC8", VA = "0xC10DC8")]
	public void setParameters(string name, string value)
	{
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0xC10FB8", Offset = "0xC10FB8", VA = "0xC10FB8")]
	public string PayOrderString()
	{
		return null;
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0xC1059C", Offset = "0xC1059C", VA = "0xC1059C")]
	public static void InitDicData(Dictionary<string, string> mydic)
	{
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0xC10530", Offset = "0xC10530", VA = "0xC10530")]
	public CommonDic()
	{
	}
}
[Token(Token = "0x20000E5")]
public class LoginSDK
{
	[Token(Token = "0x60005AA")]
	[Address(RVA = "0xF8DBC4", Offset = "0xF8DBC4", VA = "0xF8DBC4")]
	public static void Login()
	{
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0xF8DC24", Offset = "0xF8DC24", VA = "0xF8DC24")]
	public static void GetUserAPI()
	{
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0xF8DC84", Offset = "0xF8DC84", VA = "0xF8DC84")]
	public LoginSDK()
	{
	}
}
[Token(Token = "0x20000E6")]
public class PicoPaymentSDK
{
	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AndroidJavaObject _jo;

	[Token(Token = "0x17000064")]
	public static AndroidJavaObject jo
	{
		[Token(Token = "0x60005AD")]
		[Address(RVA = "0xF1B964", Offset = "0xF1B964", VA = "0xF1B964")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005AE")]
		[Address(RVA = "0xF1B9CC", Offset = "0xF1B9CC", VA = "0xF1B9CC")]
		set
		{
		}
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0xF1BA38", Offset = "0xF1BA38", VA = "0xF1BA38")]
	public static void Login()
	{
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0xF1BBDC", Offset = "0xF1BBDC", VA = "0xF1BBDC")]
	public static void Pay(string payOrderJson)
	{
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0xF1BDDC", Offset = "0xF1BDDC", VA = "0xF1BDDC")]
	public static void QueryOrder(string orderId)
	{
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0xF1BFDC", Offset = "0xF1BFDC", VA = "0xF1BFDC")]
	public static void GetUserAPI()
	{
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0xF1C180", Offset = "0xF1C180", VA = "0xF1C180")]
	public PicoPaymentSDK()
	{
	}
}
[Token(Token = "0x20000E7")]
public class PLOG : MonoBehaviour
{
	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int logLevel;

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0xB2F878", Offset = "0xB2F878", VA = "0xB2F878")]
	public static void getConfigTraceLevel()
	{
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0xB2F8E4", Offset = "0xB2F8E4", VA = "0xB2F8E4")]
	public static void D(string msg)
	{
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0xB2F98C", Offset = "0xB2F98C", VA = "0xB2F98C")]
	public static void I(string msg)
	{
	}

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0xB2FA34", Offset = "0xB2FA34", VA = "0xB2FA34")]
	public static void W(string msg)
	{
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0xB2FADC", Offset = "0xB2FADC", VA = "0xB2FADC")]
	public static void E(string msg)
	{
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0xB2FB44", Offset = "0xB2FB44", VA = "0xB2FB44")]
	public PLOG()
	{
	}
}
[Token(Token = "0x20000E8")]
public class CPicoSDKSettingAsset : ScriptableObject
{
	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool IgnoreSDKSetting;

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0xC0E340", Offset = "0xC0E340", VA = "0xC0E340")]
	public CPicoSDKSettingAsset()
	{
	}
}
[Token(Token = "0x20000E9")]
public sealed class Pvr_UnitySDKPlatformSetting : ScriptableObject
{
	[Token(Token = "0x20006A2")]
	public enum simulationType
	{
		[Token(Token = "0x4001D6C")]
		Null,
		[Token(Token = "0x4001D6D")]
		Invalid,
		[Token(Token = "0x4001D6E")]
		Valid
	}

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool entitlementchecksimulation;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<string> deviceSN;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_UnitySDKPlatformSetting instance;

	[Token(Token = "0x17000065")]
	public static bool Entitlementchecksimulation
	{
		[Token(Token = "0x60005BD")]
		[Address(RVA = "0xEADF80", Offset = "0xEADF80", VA = "0xEADF80")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005BE")]
		[Address(RVA = "0xEAE064", Offset = "0xEAE064", VA = "0xEAE064")]
		set
		{
		}
	}

	[Token(Token = "0x17000066")]
	public static Pvr_UnitySDKPlatformSetting Instance
	{
		[Token(Token = "0x60005BF")]
		[Address(RVA = "0xEADFAC", Offset = "0xEADFAC", VA = "0xEADFAC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005C0")]
		[Address(RVA = "0xEAE0BC", Offset = "0xEAE0BC", VA = "0xEAE0BC")]
		set
		{
		}
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0xEAE110", Offset = "0xEAE110", VA = "0xEAE110")]
	public Pvr_UnitySDKPlatformSetting()
	{
	}
}
[Token(Token = "0x20000EA")]
public class Pvr_UnitySDKManager : MonoBehaviour
{
	[Token(Token = "0x20006A3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x978F0C", Offset = "0x978F0C")]
	private sealed class <ToastManager>d__178 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x4001D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int type;

		[Token(Token = "0x4001D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Pvr_UnitySDKManager <>4__this;

		[Token(Token = "0x4001D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool state;

		[Token(Token = "0x1700033D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002367")]
			[Address(RVA = "0xEADF08", Offset = "0xEADF08", VA = "0xEADF08", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002369")]
			[Address(RVA = "0xEADF78", Offset = "0xEADF78", VA = "0xEADF78", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002364")]
		[Address(RVA = "0xEA7CA8", Offset = "0xEA7CA8", VA = "0xEA7CA8")]
		[DebuggerHidden]
		public <ToastManager>d__178(int <>1__state)
		{
		}

		[Token(Token = "0x6002365")]
		[Address(RVA = "0xEADDA4", Offset = "0xEADDA4", VA = "0xEADDA4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002366")]
		[Address(RVA = "0xEADDA8", Offset = "0xEADDA8", VA = "0xEADDA8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002368")]
		[Address(RVA = "0xEADF10", Offset = "0xEADF10", VA = "0xEADF10", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006A4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x978F1C", Offset = "0x978F1C")]
	private sealed class <Start>d__188 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pvr_UnitySDKManager <>4__this;

		[Token(Token = "0x1700033F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600236D")]
			[Address(RVA = "0xEADD2C", Offset = "0xEADD2C", VA = "0xEADD2C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000340")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600236F")]
			[Address(RVA = "0xEADD9C", Offset = "0xEADD9C", VA = "0xEADD9C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600236A")]
		[Address(RVA = "0xEAB098", Offset = "0xEAB098", VA = "0xEAB098")]
		[DebuggerHidden]
		public <Start>d__188(int <>1__state)
		{
		}

		[Token(Token = "0x600236B")]
		[Address(RVA = "0xEADC94", Offset = "0xEADC94", VA = "0xEADC94", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600236C")]
		[Address(RVA = "0xEADC98", Offset = "0xEADC98", VA = "0xEADC98", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600236E")]
		[Address(RVA = "0xEADD34", Offset = "0xEADD34", VA = "0xEADD34", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006A5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x978F2C", Offset = "0x978F2C")]
	private sealed class <InitRenderThreadRoutine>d__189 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <i>5__2;

		[Token(Token = "0x17000341")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002373")]
			[Address(RVA = "0xEAD68C", Offset = "0xEAD68C", VA = "0xEAD68C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000342")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002375")]
			[Address(RVA = "0xEAD6FC", Offset = "0xEAD6FC", VA = "0xEAD6FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002370")]
		[Address(RVA = "0xEAB124", Offset = "0xEAB124", VA = "0xEAB124")]
		[DebuggerHidden]
		public <InitRenderThreadRoutine>d__189(int <>1__state)
		{
		}

		[Token(Token = "0x6002371")]
		[Address(RVA = "0xEAD3B0", Offset = "0xEAD3B0", VA = "0xEAD3B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002372")]
		[Address(RVA = "0xEAD3B4", Offset = "0xEAD3B4", VA = "0xEAD3B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002374")]
		[Address(RVA = "0xEAD694", Offset = "0xEAD694", VA = "0xEAD694", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006A6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x978F3C", Offset = "0x978F3C")]
	private sealed class <OnResume>d__201 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pvr_UnitySDKManager <>4__this;

		[Token(Token = "0x17000343")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002379")]
			[Address(RVA = "0xEADC1C", Offset = "0xEADC1C", VA = "0xEADC1C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000344")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600237B")]
			[Address(RVA = "0xEADC8C", Offset = "0xEADC8C", VA = "0xEADC8C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002376")]
		[Address(RVA = "0xEAD228", Offset = "0xEAD228", VA = "0xEAD228")]
		[DebuggerHidden]
		public <OnResume>d__201(int <>1__state)
		{
		}

		[Token(Token = "0x6002377")]
		[Address(RVA = "0xEAD704", Offset = "0xEAD704", VA = "0xEAD704", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002378")]
		[Address(RVA = "0xEAD708", Offset = "0xEAD708", VA = "0xEAD708", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600237A")]
		[Address(RVA = "0xEADC24", Offset = "0xEADC24", VA = "0xEADC24", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PlatForm platform;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool BattEnable;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Pvr_UnitySDKManager sdk;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[HideInInspector]
	public static Pvr_UnitySDKSensor pvr_UnitySDKSensor;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public Pvr_UnitySDKPose HeadPose;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public bool reStartHead;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public static Pvr_UnitySDKRender pvr_UnitySDKRender;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float eyeVFov;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float eyeHFov;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public float EyesAspect;

	[Token(Token = "0x4000565")]
	[HideInInspector]
	public const int eyeTextureCount = 6;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public RenderTexture[] eyeTextures;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public int[] eyeTextureIds;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public int currEyeTextureIdx;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[HideInInspector]
	public int nextEyeTextureIdx;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public RenderTexture[] overlayTextures;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public int[] overlayTextureIds;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public int overlayCamNum;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[HideInInspector]
	public int resetRot;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[HideInInspector]
	public int resetPos;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[HideInInspector]
	public int posStatus;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public bool isPUI;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[HideInInspector]
	public Vector3 resetBasePos;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[HideInInspector]
	public Vector3 resetCol0Pos;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[HideInInspector]
	public Vector3 resetCol1Pos;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[HideInInspector]
	public int trackingmode;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[HideInInspector]
	public int systemprop;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[HideInInspector]
	public bool systemFPS;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[HideInInspector]
	public float[] headData;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private bool rotfoldout;

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
	[SerializeField]
	private bool hmdOnlyrot;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB2")]
	[SerializeField]
	private bool controllerOnlyrot;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[SerializeField]
	private TrackingOrigin trackingOrigin;

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public bool ResetTrackerOnLoad;

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[SerializeField]
	private RenderTextureAntiAliasing rtAntiAlising;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private RenderTextureDepth rtBitDepth;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[SerializeField]
	private RenderTextureFormat rtFormat;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private Vector2 defaultCustomRTSize;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private float rtScaleFactor;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[SerializeField]
	private bool defaultRenderTexture;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[HideInInspector]
	public int RenderviewNumber;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	[HideInInspector]
	public Vector3 leftEyeOffset;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[HideInInspector]
	public Vector3 rightEyeOffset;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	[HideInInspector]
	public Rect leftEyeRect;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	[HideInInspector]
	public Rect rightEyeRect;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	[HideInInspector]
	public Matrix4x4 leftEyeView;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	[HideInInspector]
	public Matrix4x4 rightEyeView;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[HideInInspector]
	public Pvr_UnitySDKEditor pvr_UnitySDKEditor;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	[SerializeField]
	private bool vrModeEnabled;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	[HideInInspector]
	public Material Eyematerial;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	[HideInInspector]
	public Material Middlematerial;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97E4BC", Offset = "0x97E4BC")]
	private bool <picovrTriggered>k__BackingField;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B9")]
	[HideInInspector]
	public bool newPicovrTriggered;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BA")]
	[SerializeField]
	private bool showFPS;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BB")]
	[SerializeField]
	private bool sixDofPosReset;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	[SerializeField]
	private bool showSafePanel;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BD")]
	[SerializeField]
	private bool defaultFPS;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	[SerializeField]
	private int customFPS;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	[SerializeField]
	private bool defaultRange;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	[SerializeField]
	private float customRange;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	[SerializeField]
	private float movingRatios;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	[SerializeField]
	private bool screenFade;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	[HideInInspector]
	public Vector3 neckOffset;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	[SerializeField]
	private bool pVRNeck;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E1")]
	[HideInInspector]
	public bool UseCustomNeckPara;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E2")]
	[HideInInspector]
	public bool onResume;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E3")]
	[HideInInspector]
	public bool isEnterVRMode;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private GameObject safeArea;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	[HideInInspector]
	public GameObject safeToast;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	[HideInInspector]
	public GameObject resetPanel;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private GameObject safePanel1;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public bool isHasController;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public Pvr_UnitySDKConfigProfile pvr_UnitySDKConfig;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private GameObject calltoast;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private GameObject msgtoast;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private GameObject lowhmdBatterytoast;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private GameObject lowphoneBatterytoast;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private GameObject LowPhoneHealthtoast;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	private GameObject LowcontrollerBatterytoast;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	private bool lowControllerpowerstate;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
	private float controllerpowershowtime;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	private bool UseToast;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
	private int iPhoneHMDModeEnabled;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	[SerializeField]
	private bool monoscopic;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x259")]
	[SerializeField]
	private bool copyrightprotection;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25A")]
	private bool mIsAndroid7;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static Func<bool> eventEnterVRMode;

	[Token(Token = "0x17000067")]
	public static Pvr_UnitySDKManager SDK
	{
		[Token(Token = "0x60005C2")]
		[Address(RVA = "0xE9DC18", Offset = "0xE9DC18", VA = "0xE9DC18")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000068")]
	[HideInInspector]
	public float EyeVFoV
	{
		[Token(Token = "0x60005C3")]
		[Address(RVA = "0xEA0B00", Offset = "0xEA0B00", VA = "0xEA0B00")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60005C4")]
		[Address(RVA = "0xE9EE64", Offset = "0xE9EE64", VA = "0xE9EE64")]
		set
		{
		}
	}

	[Token(Token = "0x17000069")]
	[HideInInspector]
	public float EyeHFoV
	{
		[Token(Token = "0x60005C5")]
		[Address(RVA = "0xEA590C", Offset = "0xEA590C", VA = "0xEA590C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60005C6")]
		[Address(RVA = "0xEA5914", Offset = "0xEA5914", VA = "0xEA5914")]
		set
		{
		}
	}

	[Token(Token = "0x1700006A")]
	public bool Rotfoldout
	{
		[Token(Token = "0x60005C7")]
		[Address(RVA = "0xEA5928", Offset = "0xEA5928", VA = "0xEA5928")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005C8")]
		[Address(RVA = "0xEA5930", Offset = "0xEA5930", VA = "0xEA5930")]
		set
		{
		}
	}

	[Token(Token = "0x1700006B")]
	public bool HmdOnlyrot
	{
		[Token(Token = "0x60005C9")]
		[Address(RVA = "0xE9F400", Offset = "0xE9F400", VA = "0xE9F400")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005CA")]
		[Address(RVA = "0xEA5950", Offset = "0xEA5950", VA = "0xEA5950")]
		set
		{
		}
	}

	[Token(Token = "0x1700006C")]
	public bool ControllerOnlyrot
	{
		[Token(Token = "0x60005CB")]
		[Address(RVA = "0xEA5970", Offset = "0xEA5970", VA = "0xEA5970")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005CC")]
		[Address(RVA = "0xEA5978", Offset = "0xEA5978", VA = "0xEA5978")]
		set
		{
		}
	}

	[Token(Token = "0x1700006D")]
	public TrackingOrigin TrackingOrigin
	{
		[Token(Token = "0x60005CD")]
		[Address(RVA = "0xEA5998", Offset = "0xEA5998", VA = "0xEA5998")]
		get
		{
			return default(TrackingOrigin);
		}
		[Token(Token = "0x60005CE")]
		[Address(RVA = "0xEA59A0", Offset = "0xEA59A0", VA = "0xEA59A0")]
		set
		{
		}
	}

	[Token(Token = "0x1700006E")]
	public RenderTextureAntiAliasing RtAntiAlising
	{
		[Token(Token = "0x60005CF")]
		[Address(RVA = "0xEA59C0", Offset = "0xEA59C0", VA = "0xEA59C0")]
		get
		{
			return default(RenderTextureAntiAliasing);
		}
		[Token(Token = "0x60005D0")]
		[Address(RVA = "0xEA59C8", Offset = "0xEA59C8", VA = "0xEA59C8")]
		set
		{
		}
	}

	[Token(Token = "0x1700006F")]
	public RenderTextureDepth RtBitDepth
	{
		[Token(Token = "0x60005D1")]
		[Address(RVA = "0xEA59DC", Offset = "0xEA59DC", VA = "0xEA59DC")]
		get
		{
			return default(RenderTextureDepth);
		}
		[Token(Token = "0x60005D2")]
		[Address(RVA = "0xEA59E4", Offset = "0xEA59E4", VA = "0xEA59E4")]
		set
		{
		}
	}

	[Token(Token = "0x17000070")]
	public RenderTextureFormat RtFormat
	{
		[Token(Token = "0x60005D3")]
		[Address(RVA = "0xEA59F8", Offset = "0xEA59F8", VA = "0xEA59F8")]
		get
		{
			return default(RenderTextureFormat);
		}
		[Token(Token = "0x60005D4")]
		[Address(RVA = "0xEA5A00", Offset = "0xEA5A00", VA = "0xEA5A00")]
		set
		{
		}
	}

	[Token(Token = "0x17000071")]
	public Vector2 RtSize
	{
		[Token(Token = "0x60005D5")]
		[Address(RVA = "0xEA5A14", Offset = "0xEA5A14", VA = "0xEA5A14")]
		get
		{
			return default(Vector2);
		}
		[Token(Token = "0x60005D6")]
		[Address(RVA = "0xEA5A1C", Offset = "0xEA5A1C", VA = "0xEA5A1C")]
		set
		{
		}
	}

	[Token(Token = "0x17000072")]
	public float RtScaleFactor
	{
		[Token(Token = "0x60005D8")]
		[Address(RVA = "0xEA5D58", Offset = "0xEA5D58", VA = "0xEA5D58")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60005D9")]
		[Address(RVA = "0xEA5D60", Offset = "0xEA5D60", VA = "0xEA5D60")]
		set
		{
		}
	}

	[Token(Token = "0x17000073")]
	public bool DefaultRenderTexture
	{
		[Token(Token = "0x60005DA")]
		[Address(RVA = "0xEA5E30", Offset = "0xEA5E30", VA = "0xEA5E30")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005DB")]
		[Address(RVA = "0xEA5E38", Offset = "0xEA5E38", VA = "0xEA5E38")]
		set
		{
		}
	}

	[Token(Token = "0x17000074")]
	[HideInInspector]
	public bool VRModeEnabled
	{
		[Token(Token = "0x60005DE")]
		[Address(RVA = "0xEA21BC", Offset = "0xEA21BC", VA = "0xEA21BC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005DF")]
		[Address(RVA = "0xE9F004", Offset = "0xE9F004", VA = "0xE9F004")]
		set
		{
		}
	}

	[Token(Token = "0x17000075")]
	[HideInInspector]
	public bool picovrTriggered
	{
		[Token(Token = "0x60005E0")]
		[Address(RVA = "0xEA5E94", Offset = "0xEA5E94", VA = "0xEA5E94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9850F4", Offset = "0x9850F4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005E1")]
		[Address(RVA = "0xE9DE8C", Offset = "0xE9DE8C", VA = "0xE9DE8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985104", Offset = "0x985104")]
		set
		{
		}
	}

	[Token(Token = "0x17000076")]
	public bool ShowFPS
	{
		[Token(Token = "0x60005E2")]
		[Address(RVA = "0xEA5E9C", Offset = "0xEA5E9C", VA = "0xEA5E9C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005E3")]
		[Address(RVA = "0xEA5EA4", Offset = "0xEA5EA4", VA = "0xEA5EA4")]
		set
		{
		}
	}

	[Token(Token = "0x17000077")]
	public bool SixDofPosReset
	{
		[Token(Token = "0x60005E4")]
		[Address(RVA = "0xEA5EC4", Offset = "0xEA5EC4", VA = "0xEA5EC4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005E5")]
		[Address(RVA = "0xEA5ECC", Offset = "0xEA5ECC", VA = "0xEA5ECC")]
		set
		{
		}
	}

	[Token(Token = "0x17000078")]
	public bool ShowSafePanel
	{
		[Token(Token = "0x60005E6")]
		[Address(RVA = "0xEA5EEC", Offset = "0xEA5EEC", VA = "0xEA5EEC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005E7")]
		[Address(RVA = "0xEA5EF4", Offset = "0xEA5EF4", VA = "0xEA5EF4")]
		set
		{
		}
	}

	[Token(Token = "0x17000079")]
	public bool DefaultFPS
	{
		[Token(Token = "0x60005E8")]
		[Address(RVA = "0xEA5F14", Offset = "0xEA5F14", VA = "0xEA5F14")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005E9")]
		[Address(RVA = "0xEA5F1C", Offset = "0xEA5F1C", VA = "0xEA5F1C")]
		set
		{
		}
	}

	[Token(Token = "0x1700007A")]
	public int CustomFPS
	{
		[Token(Token = "0x60005EA")]
		[Address(RVA = "0xEA5F3C", Offset = "0xEA5F3C", VA = "0xEA5F3C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60005EB")]
		[Address(RVA = "0xEA5F44", Offset = "0xEA5F44", VA = "0xEA5F44")]
		set
		{
		}
	}

	[Token(Token = "0x1700007B")]
	public bool DefaultRange
	{
		[Token(Token = "0x60005EC")]
		[Address(RVA = "0xE9FFF8", Offset = "0xE9FFF8", VA = "0xE9FFF8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005ED")]
		[Address(RVA = "0xEA5F58", Offset = "0xEA5F58", VA = "0xEA5F58")]
		set
		{
		}
	}

	[Token(Token = "0x1700007C")]
	public float CustomRange
	{
		[Token(Token = "0x60005EE")]
		[Address(RVA = "0xEA000C", Offset = "0xEA000C", VA = "0xEA000C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60005EF")]
		[Address(RVA = "0xEA5F78", Offset = "0xEA5F78", VA = "0xEA5F78")]
		set
		{
		}
	}

	[Token(Token = "0x1700007D")]
	public float MovingRatios
	{
		[Token(Token = "0x60005F0")]
		[Address(RVA = "0xEA5F8C", Offset = "0xEA5F8C", VA = "0xEA5F8C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60005F1")]
		[Address(RVA = "0xEA5F94", Offset = "0xEA5F94", VA = "0xEA5F94")]
		set
		{
		}
	}

	[Token(Token = "0x1700007E")]
	public bool ScreenFade
	{
		[Token(Token = "0x60005F2")]
		[Address(RVA = "0xEA021C", Offset = "0xEA021C", VA = "0xEA021C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005F3")]
		[Address(RVA = "0xEA5FA8", Offset = "0xEA5FA8", VA = "0xEA5FA8")]
		set
		{
		}
	}

	[Token(Token = "0x1700007F")]
	public bool PVRNeck
	{
		[Token(Token = "0x60005F4")]
		[Address(RVA = "0xEA5FC8", Offset = "0xEA5FC8", VA = "0xEA5FC8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005F5")]
		[Address(RVA = "0xEA5FD0", Offset = "0xEA5FD0", VA = "0xEA5FD0")]
		set
		{
		}
	}

	[Token(Token = "0x17000080")]
	[HideInInspector]
	public bool Monoscopic
	{
		[Token(Token = "0x60005F6")]
		[Address(RVA = "0xE9F904", Offset = "0xE9F904", VA = "0xE9F904")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005F7")]
		[Address(RVA = "0xEA5FF0", Offset = "0xEA5FF0", VA = "0xEA5FF0")]
		set
		{
		}
	}

	[Token(Token = "0x17000081")]
	[HideInInspector]
	public bool Copyrightprotection
	{
		[Token(Token = "0x60005F8")]
		[Address(RVA = "0xEA601C", Offset = "0xEA601C", VA = "0xEA601C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005F9")]
		[Address(RVA = "0xEA6024", Offset = "0xEA6024", VA = "0xEA6024")]
		set
		{
		}
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0xEA5D44", Offset = "0xEA5D44", VA = "0xEA5D44")]
	public void ChangeDefaultCustomRtSize(int w, int h)
	{
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0xEA0AC8", Offset = "0xEA0AC8", VA = "0xEA0AC8")]
	public Vector3 EyeOffset(Eye eye)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0xEA5E58", Offset = "0xEA5E58", VA = "0xEA5E58")]
	public Rect EyeRect(Eye eye)
	{
		return default(Rect);
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0xEA6044", Offset = "0xEA6044", VA = "0xEA6044")]
	private bool SDKManagerInit()
	{
		return default(bool);
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0xEA619C", Offset = "0xEA619C", VA = "0xEA619C")]
	private bool SDKManagerInitCoreAbility()
	{
		return default(bool);
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0xEA69BC", Offset = "0xEA69BC", VA = "0xEA69BC")]
	public void smsReceivedCallback(string msg)
	{
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0xEA742C", Offset = "0xEA742C", VA = "0xEA742C")]
	public void phoneStateCallback(string state)
	{
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0xEA7888", Offset = "0xEA7888", VA = "0xEA7888")]
	public void phoneBatteryStateCallback(string state)
	{
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0xEA7B64", Offset = "0xEA7B64", VA = "0xEA7B64")]
	public void hmdLowBatteryCallback(string level)
	{
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0xEA6E64", Offset = "0xEA6E64", VA = "0xEA6E64")]
	private string TransformNumber(string number)
	{
		return null;
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0xEA7CA4", Offset = "0xEA7CA4", VA = "0xEA7CA4")]
	public void onHmdOrientationReseted()
	{
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0xEA7358", Offset = "0xEA7358", VA = "0xEA7358")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x985114", Offset = "0x985114")]
	private IEnumerator ToastManager(int type, bool state, float time)
	{
		return null;
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0xEA7CD4", Offset = "0xEA7CD4", VA = "0xEA7CD4")]
	private void CheckControllerStateForG2(string state)
	{
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0xEA7E8C", Offset = "0xEA7E8C", VA = "0xEA7E8C")]
	private bool SDKManagerInitFPS()
	{
		return default(bool);
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0xEA6128", Offset = "0xEA6128", VA = "0xEA6128")]
	private bool SDKManagerInitConfigProfile()
	{
		return default(bool);
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0xEA806C", Offset = "0xEA806C", VA = "0xEA806C")]
	private bool SDKManagerInitEditor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0xEA81E8", Offset = "0xEA81E8", VA = "0xEA81E8")]
	private bool SDKManagerInitPara()
	{
		return default(bool);
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0xEA81F0", Offset = "0xEA81F0", VA = "0xEA81F0")]
	public void SDKManagerLongHomeKey()
	{
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0xEA8654", Offset = "0xEA8654", VA = "0xEA8654")]
	private void setLongHomeKey()
	{
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0xEA8AB8", Offset = "0xEA8AB8", VA = "0xEA8AB8")]
	public void verifyAPPCallback(string code)
	{
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0xEA8B40", Offset = "0xEA8B40", VA = "0xEA8B40")]
	private void Awake()
	{
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0xEAB024", Offset = "0xEAB024", VA = "0xEAB024")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x985178", Offset = "0x985178")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0xEAB0C4", Offset = "0xEAB0C4", VA = "0xEAB0C4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9851DC", Offset = "0x9851DC")]
	private IEnumerator InitRenderThreadRoutine()
	{
		return null;
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0xEAB150", Offset = "0xEAB150", VA = "0xEAB150")]
	private void Update()
	{
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0xEACBAC", Offset = "0xEACBAC", VA = "0xEACBAC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0xEACD0C", Offset = "0xEACD0C", VA = "0xEACD0C")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0xEACD10", Offset = "0xEACD10", VA = "0xEACD10")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0xEACD18", Offset = "0xEACD18", VA = "0xEACD18")]
	private void OnPause()
	{
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0xEACF64", Offset = "0xEACF64", VA = "0xEACF64")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0xEAD148", Offset = "0xEAD148", VA = "0xEAD148")]
	public void EnterVRMode()
	{
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0xEACDE8", Offset = "0xEACDE8", VA = "0xEACDE8")]
	public void LeaveVRMode()
	{
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0xEAD220", Offset = "0xEAD220", VA = "0xEAD220")]
	public void SixDofForceQuit()
	{
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0xEA918C", Offset = "0xEA918C", VA = "0xEA918C")]
	private void InitUI()
	{
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0xEA9644", Offset = "0xEA9644", VA = "0xEA9644")]
	private void RefreshTextByLanguage()
	{
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0xEAD0D4", Offset = "0xEAD0D4", VA = "0xEAD0D4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x985240", Offset = "0x985240")]
	private IEnumerator OnResume()
	{
		return null;
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0xEAD254", Offset = "0xEAD254", VA = "0xEAD254")]
	public Pvr_UnitySDKManager()
	{
	}
}
[Token(Token = "0x20000EB")]
public class QuitGame : MonoBehaviour
{
	[Token(Token = "0x600061C")]
	[Address(RVA = "0xEB3BE4", Offset = "0xEB3BE4", VA = "0xEB3BE4")]
	private void Start()
	{
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0xEB3BE8", Offset = "0xEB3BE8", VA = "0xEB3BE8")]
	private void Update()
	{
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0xEB3C14", Offset = "0xEB3C14", VA = "0xEB3C14")]
	public QuitGame()
	{
	}
}
[Token(Token = "0x20000EC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x96DCE8", Offset = "0x96DCE8")]
public class Pvr_UnitySDKEye : MonoBehaviour
{
	[Token(Token = "0x20006A7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x978F4C", Offset = "0x978F4C")]
	private sealed class <ScreenFade>d__45 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pvr_UnitySDKEye <>4__this;

		[Token(Token = "0x4001D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color <color>5__2;

		[Token(Token = "0x17000345")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600237F")]
			[Address(RVA = "0xEA14C4", Offset = "0xEA14C4", VA = "0xEA14C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000346")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002381")]
			[Address(RVA = "0xEA1534", Offset = "0xEA1534", VA = "0xEA1534", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600237C")]
		[Address(RVA = "0xEA0EC4", Offset = "0xEA0EC4", VA = "0xEA0EC4")]
		[DebuggerHidden]
		public <ScreenFade>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x600237D")]
		[Address(RVA = "0xEA12B4", Offset = "0xEA12B4", VA = "0xEA12B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600237E")]
		[Address(RVA = "0xEA12B8", Offset = "0xEA12B8", VA = "0xEA12B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002380")]
		[Address(RVA = "0xEA14CC", Offset = "0xEA14CC", VA = "0xEA14CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<Pvr_UnitySDKEye> Instances;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Eye eyeSide;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97E5FC", Offset = "0x97E5FC")]
	private Camera <eyecamera>k__BackingField;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int eyeCameraOriginCullingMask;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private CameraClearFlags eyeCameraOriginClearFlag;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Color eyeCameraOriginBackgroundColor;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int applicationOriginFrameRate;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool boundaryFrameRate;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Pvr_UnitySDKEyeManager controller;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Matrix4x4 realProj;

	[Token(Token = "0x40005BC")]
	private const int bufferSize = 3;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int IDIndex;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private RenderEventType eventType;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private RenderEventType boundaryEventType;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public bool isFadeUSing;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float elapsedTime;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float fadeTime;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Color fadeColor;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Material fadeMaterial;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool isFading;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Vector2 FoveationGainValue;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static float FoveationAreaValue;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static float FoveationMinimumValue;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int previousId;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static bool setLevel;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Material mat_Vignette;

	[Token(Token = "0x17000082")]
	public Camera eyecamera
	{
		[Token(Token = "0x600061F")]
		[Address(RVA = "0xE9F0C0", Offset = "0xE9F0C0", VA = "0xE9F0C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9852A4", Offset = "0x9852A4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000620")]
		[Address(RVA = "0xE9F0C8", Offset = "0xE9F0C8", VA = "0xE9F0C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9852B4", Offset = "0x9852B4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000083")]
	public Pvr_UnitySDKEyeManager Controller
	{
		[Token(Token = "0x6000621")]
		[Address(RVA = "0xE9F0D0", Offset = "0xE9F0D0", VA = "0xE9F0D0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0xE9F214", Offset = "0xE9F214", VA = "0xE9F214")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0xE9F5F8", Offset = "0xE9F5F8", VA = "0xE9F5F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0xE9F90C", Offset = "0xE9F90C", VA = "0xE9F90C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0xEA0014", Offset = "0xEA0014", VA = "0xEA0014")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0xEA0298", Offset = "0xEA0298", VA = "0xEA0298")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0xEA0364", Offset = "0xEA0364", VA = "0xEA0364")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0xEA03F0", Offset = "0xEA03F0", VA = "0xEA03F0")]
	public void MyPreRender(Camera camera)
	{
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0xEA03F4", Offset = "0xEA03F4", VA = "0xEA03F4")]
	private void OnPreRender()
	{
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0xEA05BC", Offset = "0xEA05BC", VA = "0xEA05BC")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x600062B")]
	[Address(RVA = "0xEA07D8", Offset = "0xEA07D8", VA = "0xEA07D8")]
	public void EyeRender()
	{
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0xE9F75C", Offset = "0xE9F75C", VA = "0xE9F75C")]
	private void Setup(Eye eyeSide)
	{
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0xEA09B0", Offset = "0xEA09B0", VA = "0xEA09B0")]
	private void SetupUpdate()
	{
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0xEA0B08", Offset = "0xEA0B08", VA = "0xEA0B08")]
	private void DrawVignetteLine()
	{
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0xEA06D8", Offset = "0xEA06D8", VA = "0xEA06D8")]
	private void screenFade()
	{
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0xEA0224", Offset = "0xEA0224", VA = "0xEA0224")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9852C4", Offset = "0x9852C4")]
	private IEnumerator ScreenFade()
	{
		return null;
	}

	[Token(Token = "0x6000631")]
	[Address(RVA = "0xEA0C44", Offset = "0xEA0C44", VA = "0xEA0C44")]
	private void vignette()
	{
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0xE9F408", Offset = "0xE9F408", VA = "0xE9F408")]
	private void SetFFRParamByLevel()
	{
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0xEA0418", Offset = "0xEA0418", VA = "0xEA0418")]
	private void SetFFRParameter()
	{
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0xEA0FEC", Offset = "0xEA0FEC", VA = "0xEA0FEC")]
	public static void GetFoveatedRenderingParameters(ref Vector2 ffrGainValue, ref float ffrAreaValue, ref float ffrMinimumValue)
	{
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0xEA108C", Offset = "0xEA108C", VA = "0xEA108C")]
	public static void SetFoveatedRenderingParameters(Vector2 ffrGainValue, float ffrAreaValue, float ffrMinimumValue)
	{
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0xEA1124", Offset = "0xEA1124", VA = "0xEA1124")]
	public Pvr_UnitySDKEye()
	{
	}
}
[Token(Token = "0x20000ED")]
public class Pvr_UnitySDKEyeManager : MonoBehaviour
{
	[Token(Token = "0x20006A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x978F5C", Offset = "0x978F5C")]
	private sealed class <EndOfFrame>d__41 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pvr_UnitySDKEyeManager <>4__this;

		[Token(Token = "0x17000347")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002385")]
			[Address(RVA = "0xEA4698", Offset = "0xEA4698", VA = "0xEA4698", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000348")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002387")]
			[Address(RVA = "0xEA4708", Offset = "0xEA4708", VA = "0xEA4708", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002382")]
		[Address(RVA = "0xEA24B8", Offset = "0xEA24B8", VA = "0xEA24B8")]
		[DebuggerHidden]
		public <EndOfFrame>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x6002383")]
		[Address(RVA = "0xEA2F30", Offset = "0xEA2F30", VA = "0xEA2F30", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002384")]
		[Address(RVA = "0xEA2F34", Offset = "0xEA2F34", VA = "0xEA2F34", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002386")]
		[Address(RVA = "0xEA46A0", Offset = "0xEA46A0", VA = "0xEA46A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_UnitySDKEyeManager instance;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Pvr_UnitySDKEye[] eyes;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Pvr_UnitySDKEyeOverlay[] overlays;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public Camera LeftEyeCamera;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Camera RightEyeCamera;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public Camera MonoEyeCamera;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int MonoEyeTextureID;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private readonly int WaitSplashScreenFrames;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool isFirstStartup;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int frameNum;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int MaxCompositorLayers;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	[HideInInspector]
	private EFoveationLevel foveationLevel;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Action FFRLevelChanged;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public Vector2 FoveationGainValue;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public float FoveationAreaValue;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[HideInInspector]
	public float FoveationMinimumValue;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int eyeTextureId;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private RenderEventType eventType;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private RenderEventType boundaryEventType;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int overlayLayerDepth;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int underlayLayerDepth;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private bool isHeadLocked;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	[HideInInspector]
	public bool trackEyes;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[HideInInspector]
	public Vector3 eyePoint;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private EyeTrackingData eyePoseData;

	[Token(Token = "0x17000084")]
	public static Pvr_UnitySDKEyeManager Instance
	{
		[Token(Token = "0x6000638")]
		[Address(RVA = "0xEA0EF0", Offset = "0xEA0EF0", VA = "0xEA0EF0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000085")]
	public Pvr_UnitySDKEye[] Eyes
	{
		[Token(Token = "0x6000639")]
		[Address(RVA = "0xEA153C", Offset = "0xEA153C", VA = "0xEA153C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000086")]
	public Pvr_UnitySDKEyeOverlay[] Overlays
	{
		[Token(Token = "0x600063A")]
		[Address(RVA = "0xEA15D4", Offset = "0xEA15D4", VA = "0xEA15D4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000087")]
	[HideInInspector]
	public EFoveationLevel FoveationLevel
	{
		[Token(Token = "0x600063B")]
		[Address(RVA = "0xEA0FE4", Offset = "0xEA0FE4", VA = "0xEA0FE4")]
		get
		{
			return default(EFoveationLevel);
		}
		[Token(Token = "0x600063C")]
		[Address(RVA = "0xEA166C", Offset = "0xEA166C", VA = "0xEA166C")]
		set
		{
		}
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0xEA1700", Offset = "0xEA1700", VA = "0xEA1700")]
	private void SetupMonoCamera()
	{
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0xEA1864", Offset = "0xEA1864", VA = "0xEA1864")]
	private void SetupUpdate()
	{
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0xEA1970", Offset = "0xEA1970", VA = "0xEA1970")]
	private void MonoEyeRender()
	{
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0xEA1B48", Offset = "0xEA1B48", VA = "0xEA1B48")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0xEA1E0C", Offset = "0xEA1E0C", VA = "0xEA1E0C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0xEA1E60", Offset = "0xEA1E60", VA = "0xEA1E60")]
	private void Start()
	{
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0xEA1EFC", Offset = "0xEA1EFC", VA = "0xEA1EFC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0xEA21C4", Offset = "0xEA21C4", VA = "0xEA21C4")]
	private void OnPause()
	{
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0xEA22EC", Offset = "0xEA22EC", VA = "0xEA22EC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0xEA22F4", Offset = "0xEA22F4", VA = "0xEA22F4")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0xEA2444", Offset = "0xEA2444", VA = "0xEA2444")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x985328", Offset = "0x985328")]
	private IEnumerator EndOfFrame()
	{
		return null;
	}

	[Token(Token = "0x6000648")]
	[Address(RVA = "0xEA24E4", Offset = "0xEA24E4", VA = "0xEA24E4")]
	private void CreateExternalSurface(Pvr_UnitySDKEyeOverlay overlayInstance, int layerDepth)
	{
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0xEA2B14", Offset = "0xEA2B14", VA = "0xEA2B14")]
	public bool SetEyeTrackingMode()
	{
		return default(bool);
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0xEA2BFC", Offset = "0xEA2BFC", VA = "0xEA2BFC")]
	public Vector3 GetEyeTrackingPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0xEA2E6C", Offset = "0xEA2E6C", VA = "0xEA2E6C")]
	private EyeDeviceInfo GetDeviceInfo()
	{
		return default(EyeDeviceInfo);
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0xEA2E90", Offset = "0xEA2E90", VA = "0xEA2E90")]
	public Pvr_UnitySDKEyeManager()
	{
	}
}
[Token(Token = "0x20000EE")]
public class Pvr_UnitySDKEyeOverlay : MonoBehaviour, IComparable<Pvr_UnitySDKEyeOverlay>
{
	[Token(Token = "0x20006A9")]
	public delegate void ExternalAndroidSurfaceObjectCreated();

	[Token(Token = "0x20006AA")]
	public enum ImageType
	{
		[Token(Token = "0x4001D86")]
		StandardTexture = 0,
		[Token(Token = "0x4001D87")]
		EquirectangularTexture = 2
	}

	[Token(Token = "0x20006AB")]
	public enum OverlayType
	{
		[Token(Token = "0x4001D89")]
		Overlay,
		[Token(Token = "0x4001D8A")]
		Underlay
	}

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<Pvr_UnitySDKEyeOverlay> Instances;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int layerIndex;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public OverlayType overlayType;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ImageType imageType;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform layerTransform;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture[] layerTextures;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int[] layerTextureIds;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Matrix4x4[] MVMatrixs;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Camera[] layerEyeCamera;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool isExternalAndroidSurface;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public IntPtr externalAndroidSurfaceObject;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ExternalAndroidSurfaceObjectCreated externalAndroidSurfaceObjectCreated;

	[Token(Token = "0x600064D")]
	[Address(RVA = "0xEA4710", Offset = "0xEA4710", VA = "0xEA4710", Slot = "4")]
	public int CompareTo(Pvr_UnitySDKEyeOverlay other)
	{
		return default(int);
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0xEA4748", Offset = "0xEA4748", VA = "0xEA4748")]
	private void Awake()
	{
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0xEA4B28", Offset = "0xEA4B28", VA = "0xEA4B28")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0xEA4E04", Offset = "0xEA4E04", VA = "0xEA4E04")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0xEA4A2C", Offset = "0xEA4A2C", VA = "0xEA4A2C")]
	private void InitializeBuffer()
	{
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0xEA4B2C", Offset = "0xEA4B2C", VA = "0xEA4B2C")]
	private void UpdateCoords()
	{
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0xEA4E90", Offset = "0xEA4E90", VA = "0xEA4E90")]
	public void SetTexture(Texture texture)
	{
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0xEA4F54", Offset = "0xEA4F54", VA = "0xEA4F54")]
	public Pvr_UnitySDKEyeOverlay()
	{
	}
}
[Token(Token = "0x20000EF")]
public class Pvr_UnitySDKRender
{
	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AndroidJavaObject activity;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AndroidJavaClass javaVrActivityClass;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static AndroidJavaClass javaSysActivityClass;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static AndroidJavaClass javaserviceClass;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static AndroidJavaClass javaVrActivityLongReceiver;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static AndroidJavaClass javaVrActivityClientClass;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool canConnecttoActivity;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool isInitrenderThread;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string model;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector2 prefinger1;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector2 prefinger2;

	[Token(Token = "0x17000088")]
	public bool CanConnecttoActivity
	{
		[Token(Token = "0x6000657")]
		[Address(RVA = "0xEAEFA8", Offset = "0xEAEFA8", VA = "0xEAEFA8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000658")]
		[Address(RVA = "0xEAEFB0", Offset = "0xEAEFB0", VA = "0xEAEFB0")]
		set
		{
		}
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0xEA64A4", Offset = "0xEA64A4", VA = "0xEA64A4")]
	public Pvr_UnitySDKRender()
	{
	}

	[Token(Token = "0x6000659")]
	[Address(RVA = "0xEAE7E4", Offset = "0xEAE7E4", VA = "0xEAE7E4")]
	public void ConnectToAndriod()
	{
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0xEA6590", Offset = "0xEA6590", VA = "0xEA6590")]
	public void Init()
	{
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0xEAEFD0", Offset = "0xEAEFD0", VA = "0xEAEFD0")]
	private bool InitRenderAbility()
	{
		return default(bool);
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0xEAF13C", Offset = "0xEAF13C", VA = "0xEAF13C")]
	private bool UpdateRenderParaFrame()
	{
		return default(bool);
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0xEAF240", Offset = "0xEAF240", VA = "0xEAF240")]
	private bool CreateEyeBuffer()
	{
		return default(bool);
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0xEAF70C", Offset = "0xEAF70C", VA = "0xEAF70C")]
	public float GetEyeVFOV()
	{
		return default(float);
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0xEAF878", Offset = "0xEAF878", VA = "0xEAF878")]
	public float GetEyeHFOV()
	{
		return default(float);
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0xEAFE2C", Offset = "0xEAFE2C", VA = "0xEAFE2C")]
	private void ConfigureEyeBuffer(int eyeTextureIndex, Vector2 resolution)
	{
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0xEA5B30", Offset = "0xEA5B30", VA = "0xEA5B30")]
	public bool ReCreateEyeBuffer()
	{
		return default(bool);
	}

	[Token(Token = "0x6000662")]
	[Address(RVA = "0xEAD570", Offset = "0xEAD570", VA = "0xEAD570")]
	public void IssueRenderThread()
	{
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0xEB0290", Offset = "0xEB0290", VA = "0xEB0290")]
	private void AutoAdpatForPico1s()
	{
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0xEAF9E4", Offset = "0xEAF9E4", VA = "0xEAF9E4")]
	public Vector2 GetEyeBufferResolution()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0xEB0554", Offset = "0xEB0554", VA = "0xEB0554")]
	public bool GetUsePredictedMatrix()
	{
		return default(bool);
	}
}
[Token(Token = "0x20000F0")]
public class HighlightAtGaze : MonoBehaviour
{
	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color HighlightColor;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float AnimationTime;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer myRenderer;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Color originalColor;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Color targetColor;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private EyeTrackingGazeRay gazeRay;

	[Token(Token = "0x6000666")]
	[Address(RVA = "0xCA8ACC", Offset = "0xCA8ACC", VA = "0xCA8ACC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0xCA8B64", Offset = "0xCA8B64", VA = "0xCA8B64")]
	private void Update()
	{
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0xCA8DA4", Offset = "0xCA8DA4", VA = "0xCA8DA4")]
	public HighlightAtGaze()
	{
	}
}
[Token(Token = "0x20000F1")]
public class RayVisualizer : MonoBehaviour
{
	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LineRenderer _line;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private EyeTrackingGazeRay gazeRay;

	[Token(Token = "0x6000669")]
	[Address(RVA = "0xEB3C1C", Offset = "0xEB3C1C", VA = "0xEB3C1C")]
	private void Start()
	{
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0xEB3CD4", Offset = "0xEB3CD4", VA = "0xEB3CD4")]
	private void Update()
	{
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0xEB3EB8", Offset = "0xEB3EB8", VA = "0xEB3EB8")]
	public RayVisualizer()
	{
	}
}
[Token(Token = "0x20000F2")]
public class MoveCylinder : MonoBehaviour
{
	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 startingPosition;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Quaternion startingRotation;

	[Token(Token = "0x600066C")]
	[Address(RVA = "0xF567AC", Offset = "0xF567AC", VA = "0xF567AC")]
	private void Start()
	{
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0xF5681C", Offset = "0xF5681C", VA = "0xF5681C")]
	public void Reset()
	{
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0xF568B4", Offset = "0xF568B4", VA = "0xF568B4")]
	public MoveCylinder()
	{
	}
}
[Token(Token = "0x20000F3")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x96DD4C", Offset = "0x96DD4C")]
public class MoveSphere : MonoBehaviour
{
	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 startingPosition;

	[Token(Token = "0x600066F")]
	[Address(RVA = "0xF568BC", Offset = "0xF568BC", VA = "0xF568BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000670")]
	[Address(RVA = "0xF56AB0", Offset = "0xF56AB0", VA = "0xF56AB0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0xF569DC", Offset = "0xF569DC", VA = "0xF569DC")]
	public void SetGazedAt(bool gazedAt)
	{
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0xF56AB4", Offset = "0xF56AB4", VA = "0xF56AB4")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0xF56C24", Offset = "0xF56C24", VA = "0xF56C24")]
	public void TeleportRandomly()
	{
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0xF56D4C", Offset = "0xF56D4C", VA = "0xF56D4C")]
	public MoveSphere()
	{
	}
}
[Token(Token = "0x20000F4")]
public class Resetbutton : MonoBehaviour
{
	[Token(Token = "0x6000675")]
	[Address(RVA = "0xEB4CB0", Offset = "0xEB4CB0", VA = "0xEB4CB0")]
	public void DemoResetTracking()
	{
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0xEB4DEC", Offset = "0xEB4DEC", VA = "0xEB4DEC")]
	public Resetbutton()
	{
	}
}
[Token(Token = "0x20000F5")]
public class Pvr_UnitySDKHeadTrack : MonoBehaviour
{
	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool trackRotation;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool trackPosition;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform target;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool updated;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool dataClock;

	[Token(Token = "0x17000089")]
	public Ray Gaze
	{
		[Token(Token = "0x6000677")]
		[Address(RVA = "0xEA5318", Offset = "0xEA5318", VA = "0xEA5318")]
		get
		{
			return default(Ray);
		}
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0xEA58E8", Offset = "0xEA58E8", VA = "0xEA58E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0xEA53D0", Offset = "0xEA53D0", VA = "0xEA53D0")]
	private void UpdateHead()
	{
	}

	[Token(Token = "0x600067A")]
	[Address(RVA = "0xEA58FC", Offset = "0xEA58FC", VA = "0xEA58FC")]
	public Pvr_UnitySDKHeadTrack()
	{
	}
}
[Token(Token = "0x20000F6")]
public class Pvr_UnitySDKPose
{
	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static readonly Matrix4x4 flipZ;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97E6C4", Offset = "0x97E6C4")]
	private Vector3 <Position>k__BackingField;

	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97E6D4", Offset = "0x97E6D4")]
	private Quaternion <Orientation>k__BackingField;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97E6E4", Offset = "0x97E6E4")]
	private Matrix4x4 <Matrix>k__BackingField;

	[Token(Token = "0x1700008A")]
	public Matrix4x4 RightHandedMatrix
	{
		[Token(Token = "0x600067B")]
		[Address(RVA = "0xEAE1BC", Offset = "0xEAE1BC", VA = "0xEAE1BC")]
		get
		{
			return default(Matrix4x4);
		}
	}

	[Token(Token = "0x1700008B")]
	public Vector3 Position
	{
		[Token(Token = "0x600067C")]
		[Address(RVA = "0xEA0000", Offset = "0xEA0000", VA = "0xEA0000")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98538C", Offset = "0x98538C")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600067D")]
		[Address(RVA = "0xEAE34C", Offset = "0xEAE34C", VA = "0xEAE34C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98539C", Offset = "0x98539C")]
		protected set
		{
		}
	}

	[Token(Token = "0x1700008C")]
	public Quaternion Orientation
	{
		[Token(Token = "0x600067E")]
		[Address(RVA = "0xEA58F0", Offset = "0xEA58F0", VA = "0xEA58F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9853AC", Offset = "0x9853AC")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x600067F")]
		[Address(RVA = "0xEAE358", Offset = "0xEAE358", VA = "0xEAE358")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9853BC", Offset = "0x9853BC")]
		protected set
		{
		}
	}

	[Token(Token = "0x1700008D")]
	public Matrix4x4 Matrix
	{
		[Token(Token = "0x6000680")]
		[Address(RVA = "0xEAE328", Offset = "0xEAE328", VA = "0xEAE328")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9853CC", Offset = "0x9853CC")]
		get
		{
			return default(Matrix4x4);
		}
		[Token(Token = "0x6000681")]
		[Address(RVA = "0xEAE364", Offset = "0xEAE364", VA = "0xEAE364")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9853DC", Offset = "0x9853DC")]
		protected set
		{
		}
	}

	[Token(Token = "0x6000682")]
	[Address(RVA = "0xE9EFA8", Offset = "0xE9EFA8", VA = "0xE9EFA8")]
	public Pvr_UnitySDKPose(Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0xEA6610", Offset = "0xEA6610", VA = "0xEA6610")]
	public Pvr_UnitySDKPose(Vector3 position, Quaternion orientation)
	{
	}

	[Token(Token = "0x6000684")]
	[Address(RVA = "0xEAE4EC", Offset = "0xEAE4EC", VA = "0xEAE4EC")]
	public void Set(Vector3 position, Quaternion orientation)
	{
	}

	[Token(Token = "0x6000685")]
	[Address(RVA = "0xEAE380", Offset = "0xEAE380", VA = "0xEAE380")]
	protected void Set(Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0xEAE62C", Offset = "0xEAE62C", VA = "0xEAE62C")]
	private Quaternion NormalizeQuaternion(ref Quaternion q)
	{
		return default(Quaternion);
	}
}
[Token(Token = "0x20000F7")]
public class Pvr_UnitySDKSensor
{
	[Token(Token = "0x20006AC")]
	public delegate void Enter3DofModel();

	[Token(Token = "0x20006AD")]
	public delegate void Exit3DofModel();

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Pvr_UnitySDKPose SensorValvue;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool HMDUsing;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool SensorStart;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	private bool SensorInit;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	private bool Sensor6dofInit;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Quaternion UnityQuaternion;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 EulerAngles;

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 UnityPosition;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Sensorindex sensorIndex;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool dofClock;

	[Token(Token = "0x14000025")]
	public static event Enter3DofModel Enter3DofModelEvent
	{
		[Token(Token = "0x6000689")]
		[Address(RVA = "0xEB05A4", Offset = "0xEB05A4", VA = "0xEB05A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9853EC", Offset = "0x9853EC")]
		add
		{
		}
		[Token(Token = "0x600068A")]
		[Address(RVA = "0xEB06A0", Offset = "0xEB06A0", VA = "0xEB06A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9853FC", Offset = "0x9853FC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000026")]
	public static event Exit3DofModel Exit3DofModelEvent
	{
		[Token(Token = "0x600068B")]
		[Address(RVA = "0xEB079C", Offset = "0xEB079C", VA = "0xEB079C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98540C", Offset = "0x98540C")]
		add
		{
		}
		[Token(Token = "0x600068C")]
		[Address(RVA = "0xEB089C", Offset = "0xEB089C", VA = "0xEB089C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98541C", Offset = "0x98541C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000688")]
	[Address(RVA = "0xEA6690", Offset = "0xEA6690", VA = "0xEA6690")]
	public Pvr_UnitySDKSensor()
	{
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0xEB055C", Offset = "0xEB055C", VA = "0xEB055C")]
	public void Init()
	{
	}

	[Token(Token = "0x600068E")]
	[Address(RVA = "0xEACAB4", Offset = "0xEACAB4", VA = "0xEACAB4")]
	public void SensorUpdate()
	{
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0xEB099C", Offset = "0xEB099C", VA = "0xEB099C")]
	public bool InitUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0xEA6758", Offset = "0xEA6758", VA = "0xEA6758")]
	public bool InitUnitySDK6DofSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0xEADAD4", Offset = "0xEADAD4", VA = "0xEADAD4")]
	public bool StartUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000692")]
	[Address(RVA = "0xEACE1C", Offset = "0xEACE1C", VA = "0xEACE1C")]
	public bool StopUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0xEA8930", Offset = "0xEA8930", VA = "0xEA8930")]
	public bool ResetUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0xEA8414", Offset = "0xEA8414", VA = "0xEA8414")]
	public bool OptionalResetUnitySDKSensor(int resetRot, int resetPos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000695")]
	[Address(RVA = "0xEB0AE4", Offset = "0xEB0AE4", VA = "0xEB0AE4")]
	public bool GetUnitySDKSensorState()
	{
		return default(bool);
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0xEB2364", Offset = "0xEB2364", VA = "0xEB2364")]
	public bool GetUnitySDKPSensorState()
	{
		return default(bool);
	}
}
[Token(Token = "0x20000F8")]
public class CLoadingAsset : ScriptableObject
{
	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int SplashScreenType;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Texture2D> splashImage;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture2D Inside_background;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool UseSplashText;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string DefaultText;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string ChineseText;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string EnglishText;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string JapaneseText;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string KoreanText;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string FontSize;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Color FontColor;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string TextHeight;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool UseCarousel;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int SplashTextAlignment;

	[Token(Token = "0x6000697")]
	[Address(RVA = "0xC0E2D0", Offset = "0xC0E2D0", VA = "0xC0E2D0")]
	public CLoadingAsset()
	{
	}
}
[Serializable]
[Token(Token = "0x20000F9")]
public class Pvr_UnitySDKConfigProfile
{
	[Token(Token = "0x20006AE")]
	public struct Lenses
	{
		[Token(Token = "0x4001D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float separation;

		[Token(Token = "0x4001D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float offset;

		[Token(Token = "0x4001D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float distance;

		[Token(Token = "0x4001D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int alignment;

		[Token(Token = "0x4001D8F")]
		public const int AlignTop = -1;

		[Token(Token = "0x4001D90")]
		public const int AlignCenter = 0;

		[Token(Token = "0x4001D91")]
		public const int AlignBottom = 1;
	}

	[Token(Token = "0x20006AF")]
	public struct MaxFOV
	{
		[Token(Token = "0x4001D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float upper;

		[Token(Token = "0x4001D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float lower;

		[Token(Token = "0x4001D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float inner;

		[Token(Token = "0x4001D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float outer;
	}

	[Token(Token = "0x20006B0")]
	public struct Distortion
	{
		[Token(Token = "0x4001D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float k1;

		[Token(Token = "0x4001D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float k2;

		[Token(Token = "0x4001D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float k3;

		[Token(Token = "0x4001D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float k4;

		[Token(Token = "0x4001D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float k5;

		[Token(Token = "0x4001D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float k6;

		[Token(Token = "0x6002394")]
		[Address(RVA = "0xA34A28", Offset = "0xA34A28", VA = "0xA34A28")]
		public float distort(float r)
		{
			return default(float);
		}

		[Token(Token = "0x6002395")]
		[Address(RVA = "0xA34A30", Offset = "0xA34A30", VA = "0xA34A30")]
		public float distort(float r, float dist)
		{
			return default(float);
		}

		[Token(Token = "0x6002396")]
		[Address(RVA = "0xA34A38", Offset = "0xA34A38", VA = "0xA34A38")]
		public float diatortInv(float radious)
		{
			return default(float);
		}
	}

	[Token(Token = "0x20006B1")]
	public struct Device
	{
		[Token(Token = "0x4001D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Lenses devLenses;

		[Token(Token = "0x4001D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MaxFOV devMaxFov;

		[Token(Token = "0x4001D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Distortion devDistortion;

		[Token(Token = "0x4001D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Distortion devDistortionInv;
	}

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly Device SimulateDevice;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Device device;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static readonly Pvr_UnitySDKConfigProfile Default;

	[Token(Token = "0x6000698")]
	[Address(RVA = "0xE9CF00", Offset = "0xE9CF00", VA = "0xE9CF00")]
	public Pvr_UnitySDKConfigProfile Clone()
	{
		return null;
	}

	[Token(Token = "0x6000699")]
	[Address(RVA = "0xE9CF9C", Offset = "0xE9CF9C", VA = "0xE9CF9C")]
	public static Pvr_UnitySDKConfigProfile GetPicoProfile()
	{
		return null;
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0xE9D048", Offset = "0xE9D048", VA = "0xE9D048")]
	public float[] GetLeftEyeVisibleTanAngles(float width, float height)
	{
		return null;
	}

	[Token(Token = "0x600069B")]
	[Address(RVA = "0xE9D3DC", Offset = "0xE9D3DC", VA = "0xE9D3DC")]
	public float[] GetLeftEyeNoLensTanAngles(float width, float height)
	{
		return null;
	}

	[Token(Token = "0x600069C")]
	[Address(RVA = "0xE9D650", Offset = "0xE9D650", VA = "0xE9D650")]
	public Rect GetLeftEyeVisibleScreenRect(float[] undistortedFrustum, float width, float height)
	{
		return default(Rect);
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0xE9CF94", Offset = "0xE9CF94", VA = "0xE9CF94")]
	public Pvr_UnitySDKConfigProfile()
	{
	}
}
[Token(Token = "0x20000FA")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x96DDB0", Offset = "0x96DDB0")]
public class Pvr_UnitySDKFPS : MonoBehaviour
{
	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text fpsText;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float fps;

	[Token(Token = "0x600069F")]
	[Address(RVA = "0xEA50C4", Offset = "0xEA50C4", VA = "0xEA50C4")]
	private void Start()
	{
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0xEA50D0", Offset = "0xEA50D0", VA = "0xEA50D0")]
	private void Update()
	{
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0xEA51A0", Offset = "0xEA51A0", VA = "0xEA51A0")]
	public string ShowFps()
	{
		return null;
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0xEA5308", Offset = "0xEA5308", VA = "0xEA5308")]
	public Pvr_UnitySDKFPS()
	{
	}
}
[Token(Token = "0x20000FB")]
public class Pvr_GazeFuse : MonoBehaviour
{
	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject gazeGameObject;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Image image;

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0x11A3574", Offset = "0x11A3574", VA = "0x11A3574")]
	private void Start()
	{
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0x11A35CC", Offset = "0x11A35CC", VA = "0x11A35CC")]
	private void Update()
	{
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0x11A37A0", Offset = "0x11A37A0", VA = "0x11A37A0")]
	private void FuseAmountChanged(float fuseAmount)
	{
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0x11A3850", Offset = "0x11A3850", VA = "0x11A3850")]
	public Pvr_GazeFuse()
	{
	}
}
[Token(Token = "0x20000FC")]
public class Pvr_GazeInputModule : PointerInputModule
{
	[Token(Token = "0x20006B2")]
	public enum Mode
	{
		[Token(Token = "0x4001DA1")]
		Click,
		[Token(Token = "0x4001DA2")]
		Gaze
	}

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Mode mode;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97E714", Offset = "0x97E714")]
	public string ClickInputName;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97E74C", Offset = "0x97E74C")]
	public float GazeTimeInSeconds;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97E784", Offset = "0x97E784")]
	private static float <gazeFraction>k__BackingField;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97E794", Offset = "0x97E794")]
	private static GameObject <gazeGameObject>k__BackingField;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public RaycastResult CurrentRaycast;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private PointerEventData pointerEventData;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private GameObject currentLookAtHandler;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float currentLookAtHandlerClickTime;

	[Token(Token = "0x1700008E")]
	public static float gazeFraction
	{
		[Token(Token = "0x60006A7")]
		[Address(RVA = "0x11A3750", Offset = "0x11A3750", VA = "0x11A3750")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98542C", Offset = "0x98542C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60006A8")]
		[Address(RVA = "0x11A3858", Offset = "0x11A3858", VA = "0x11A3858")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98543C", Offset = "0x98543C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700008F")]
	public static GameObject gazeGameObject
	{
		[Token(Token = "0x60006A9")]
		[Address(RVA = "0x11A3700", Offset = "0x11A3700", VA = "0x11A3700")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98544C", Offset = "0x98544C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006AA")]
		[Address(RVA = "0x11A38B4", Offset = "0x11A38B4", VA = "0x11A38B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98545C", Offset = "0x98545C")]
		private set
		{
		}
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0x11A3908", Offset = "0x11A3908", VA = "0x11A3908", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0x11A392C", Offset = "0x11A392C", VA = "0x11A392C")]
	private void HandleLook()
	{
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0x11A3B6C", Offset = "0x11A3B6C", VA = "0x11A3B6C")]
	private void HandleSelection()
	{
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0x11A4004", Offset = "0x11A4004", VA = "0x11A4004")]
	public Pvr_GazeInputModule()
	{
	}
}
[Token(Token = "0x20000FD")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x96DE14", Offset = "0x96DE14")]
public class Pvr_GazeInputModuleCrosshair : MonoBehaviour
{
	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool DisplayCrosshair;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97E7A4", Offset = "0x97E7A4")]
	public Transform Crosshair;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Pvr_GazeInputModule gazeInputModule;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 CrosshairOriginalScale;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float CrosshairOriginalDistance;

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0x11A4064", Offset = "0x11A4064", VA = "0x11A4064")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0x11A40BC", Offset = "0x11A40BC", VA = "0x11A40BC")]
	private void Start()
	{
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0x11A4150", Offset = "0x11A4150", VA = "0x11A4150")]
	private void Update()
	{
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0x11A4288", Offset = "0x11A4288", VA = "0x11A4288")]
	private void SetCrossHairAtDistance(float dist)
	{
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0x11A43B0", Offset = "0x11A43B0", VA = "0x11A43B0")]
	public Pvr_GazeInputModuleCrosshair()
	{
	}
}
[Token(Token = "0x20000FE")]
public enum RenderEventType
{
	[Token(Token = "0x4000640")]
	InitRenderThread = 1024,
	[Token(Token = "0x4000641")]
	Pause,
	[Token(Token = "0x4000642")]
	Resume,
	[Token(Token = "0x4000643")]
	LeftEyeEndFrame,
	[Token(Token = "0x4000644")]
	RightEyeEndFrame,
	[Token(Token = "0x4000645")]
	TimeWarp,
	[Token(Token = "0x4000646")]
	ResetVrModeParms,
	[Token(Token = "0x4000647")]
	ShutdownRenderThread,
	[Token(Token = "0x4000648")]
	BeginEye,
	[Token(Token = "0x4000649")]
	EndEye,
	[Token(Token = "0x400064A")]
	BoundaryRenderLeft,
	[Token(Token = "0x400064B")]
	BoundaryRenderRight
}
[Token(Token = "0x20000FF")]
public static class Pvr_UnitySDKPluginEvent
{
	[Token(Token = "0x400064C")]
	private const uint IS_DATA_FLAG = 2147483648u;

	[Token(Token = "0x400064D")]
	private const uint DATA_POS_MASK = 1073741824u;

	[Token(Token = "0x400064E")]
	private const int DATA_POS_SHIFT = 30;

	[Token(Token = "0x400064F")]
	private const uint EVENT_TYPE_MASK = 1056899072u;

	[Token(Token = "0x4000650")]
	private const int EVENT_TYPE_SHIFT = 17;

	[Token(Token = "0x4000651")]
	private const uint PAYLOAD_MASK = 65535u;

	[Token(Token = "0x4000652")]
	private const int PAYLOAD_SHIFT = 16;

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0xEA0590", Offset = "0xEA0590", VA = "0xEA0590")]
	public static void Issue(RenderEventType eventType)
	{
	}

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0xEAE180", Offset = "0xEAE180", VA = "0xEAE180")]
	private static int EncodeType(int eventType)
	{
		return default(int);
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0xEAE188", Offset = "0xEAE188", VA = "0xEAE188")]
	private static int EncodeData(int eventId, int eventData, int pos)
	{
		return default(int);
	}

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0xEAE1A8", Offset = "0xEAE1A8", VA = "0xEAE1A8")]
	private static int DecodeData(int eventData)
	{
		return default(int);
	}
}
[Token(Token = "0x2000100")]
public class Pvr_UnitySDKSightInputModule : BaseInputModule
{
	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97E7DC", Offset = "0x97E7DC")]
	public GameObject cursor;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int trigger;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[HideInInspector]
	public float clickTime;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public Vector2 hotspot;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private PointerEventData pointerData;

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0xEB254C", Offset = "0xEB254C", VA = "0xEB254C", Slot = "21")]
	public override bool ShouldActivateModule()
	{
		return default(bool);
	}

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0xEB25E0", Offset = "0xEB25E0", VA = "0xEB25E0", Slot = "22")]
	public override void DeactivateModule()
	{
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0xEB292C", Offset = "0xEB292C", VA = "0xEB292C", Slot = "20")]
	public override bool IsPointerOverGameObject(int pointerId)
	{
		return default(bool);
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0xEB29BC", Offset = "0xEB29BC", VA = "0xEB29BC", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0xEB29F8", Offset = "0xEB29F8", VA = "0xEB29F8")]
	private void CastRayFromGaze()
	{
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0xEB2BA0", Offset = "0xEB2BA0", VA = "0xEB2BA0")]
	private void UpdateCurrentObject()
	{
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0xEB2D9C", Offset = "0xEB2D9C", VA = "0xEB2D9C")]
	private void PlaceCursor()
	{
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0xEB2708", Offset = "0xEB2708", VA = "0xEB2708")]
	private void HandlePendingClick()
	{
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0xEB3094", Offset = "0xEB3094", VA = "0xEB3094")]
	private void HandleTrigger()
	{
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0xEB3428", Offset = "0xEB3428", VA = "0xEB3428")]
	public Pvr_UnitySDKSightInputModule()
	{
	}
}
[Token(Token = "0x2000101")]
public class Pvr_ObjImporter
{
	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_ObjImporter _instance;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<int> triangles;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Vector3> vertices;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Vector2> uv;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Vector3> normals;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<Vector3Int> faceData;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<int> intArray;

	[Token(Token = "0x400065F")]
	private const int MIN_POW_10 = -16;

	[Token(Token = "0x4000660")]
	private const int MAX_POW_10 = 16;

	[Token(Token = "0x4000661")]
	private const int NUM_POWS_10 = 33;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly float[] pow10;

	[Token(Token = "0x17000090")]
	public static Pvr_ObjImporter Instance
	{
		[Token(Token = "0x60006C3")]
		[Address(RVA = "0x11A6AE8", Offset = "0x11A6AE8", VA = "0x11A6AE8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0x11A6B94", Offset = "0x11A6B94", VA = "0x11A6B94")]
	public Mesh ImportFile(string filePath)
	{
		return null;
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0x11A712C", Offset = "0x11A712C", VA = "0x11A712C")]
	private void LoadMeshData(string fileName)
	{
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0x11A7990", Offset = "0x11A7990", VA = "0x11A7990")]
	private float GetFloat(StringBuilder sb, ref int start, ref StringBuilder sbFloat)
	{
		return default(float);
	}

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0x11A7B70", Offset = "0x11A7B70", VA = "0x11A7B70")]
	private int GetInt(StringBuilder sb, ref int start, ref StringBuilder sbInt)
	{
		return default(int);
	}

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0x11A805C", Offset = "0x11A805C", VA = "0x11A805C")]
	private static float[] GenerateLookupTable()
	{
		return null;
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0x11A7CF8", Offset = "0x11A7CF8", VA = "0x11A7CF8")]
	private float ParseFloat(StringBuilder value)
	{
		return default(float);
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0x11A7FD8", Offset = "0x11A7FD8", VA = "0x11A7FD8")]
	private int IntParseFast(StringBuilder value)
	{
		return default(int);
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0x11A6B8C", Offset = "0x11A6B8C", VA = "0x11A6B8C")]
	public Pvr_ObjImporter()
	{
	}
}
[Token(Token = "0x2000102")]
public sealed class Vector3Int
{
	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97E834", Offset = "0x97E834")]
	private int <x>k__BackingField;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97E844", Offset = "0x97E844")]
	private int <y>k__BackingField;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97E854", Offset = "0x97E854")]
	private int <z>k__BackingField;

	[Token(Token = "0x17000091")]
	public int x
	{
		[Token(Token = "0x60006CD")]
		[Address(RVA = "0xD7FC58", Offset = "0xD7FC58", VA = "0xD7FC58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98546C", Offset = "0x98546C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60006CE")]
		[Address(RVA = "0xD7FC60", Offset = "0xD7FC60", VA = "0xD7FC60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98547C", Offset = "0x98547C")]
		set
		{
		}
	}

	[Token(Token = "0x17000092")]
	public int y
	{
		[Token(Token = "0x60006CF")]
		[Address(RVA = "0xD7FC68", Offset = "0xD7FC68", VA = "0xD7FC68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98548C", Offset = "0x98548C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60006D0")]
		[Address(RVA = "0xD7FC70", Offset = "0xD7FC70", VA = "0xD7FC70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98549C", Offset = "0x98549C")]
		set
		{
		}
	}

	[Token(Token = "0x17000093")]
	public int z
	{
		[Token(Token = "0x60006D1")]
		[Address(RVA = "0xD7FC78", Offset = "0xD7FC78", VA = "0xD7FC78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9854AC", Offset = "0x9854AC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60006D2")]
		[Address(RVA = "0xD7FC80", Offset = "0xD7FC80", VA = "0xD7FC80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9854BC", Offset = "0x9854BC")]
		set
		{
		}
	}

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0xD7FC88", Offset = "0xD7FC88", VA = "0xD7FC88")]
	public Vector3Int()
	{
	}

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0xD7FC90", Offset = "0xD7FC90", VA = "0xD7FC90")]
	public Vector3Int(int x, int y, int z)
	{
	}
}
[Token(Token = "0x2000103")]
public class Pvr_EnumFlags : PropertyAttribute
{
	[Token(Token = "0x60006D5")]
	[Address(RVA = "0x11A356C", Offset = "0x11A356C", VA = "0x11A356C")]
	public Pvr_EnumFlags()
	{
	}
}
[Token(Token = "0x2000104")]
public enum ConfirmBtn
{
	[Token(Token = "0x4000667")]
	App = 1,
	[Token(Token = "0x4000668")]
	TouchPad = 2,
	[Token(Token = "0x4000669")]
	Trigger = 4
}
[Token(Token = "0x2000105")]
public class Pvr_InputModule : PointerInputModule
{
	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<Pvr_UIPointer> pointers;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Pvr_EnumFlags]
	public ConfirmBtn confirmBtn;

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0x11A440C", Offset = "0x11A440C", VA = "0x11A440C", Slot = "30")]
	public virtual void Initialise()
	{
	}

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0x11A4490", Offset = "0x11A4490", VA = "0x11A4490")]
	public static void AddPoint(Pvr_UIPointer point)
	{
	}

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0x11A4580", Offset = "0x11A4580", VA = "0x11A4580")]
	public static void RemovePoint(Pvr_UIPointer point)
	{
	}

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0x11A4670", Offset = "0x11A4670", VA = "0x11A4670", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0x11A4A50", Offset = "0x11A4A50", VA = "0x11A4A50", Slot = "31")]
	protected virtual List<RaycastResult> CheckRaycasts(Pvr_UIPointer pointer)
	{
		return null;
	}

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0x11A4C08", Offset = "0x11A4C08", VA = "0x11A4C08", Slot = "32")]
	protected virtual bool CheckTransformTree(Transform target, Transform source)
	{
		return default(bool);
	}

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0x11A4D08", Offset = "0x11A4D08", VA = "0x11A4D08", Slot = "33")]
	protected virtual bool NoValidCollision(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
		return default(bool);
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0x11A4E60", Offset = "0x11A4E60", VA = "0x11A4E60", Slot = "34")]
	protected virtual bool IsHovering(Pvr_UIPointer pointer)
	{
		return default(bool);
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0x11A50C4", Offset = "0x11A50C4", VA = "0x11A50C4", Slot = "35")]
	protected virtual bool ValidElement(GameObject obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0x11A5180", Offset = "0x11A5180", VA = "0x11A5180", Slot = "36")]
	protected virtual void CheckPointerHoverClick(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0x11A5220", Offset = "0x11A5220", VA = "0x11A5220", Slot = "37")]
	protected virtual void Hover(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0x11A5A34", Offset = "0x11A5A34", VA = "0x11A5A34", Slot = "38")]
	protected virtual void Click(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0x11A5AD0", Offset = "0x11A5AD0", VA = "0x11A5AD0", Slot = "39")]
	protected virtual void ClickOnUp(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0x11A5BA8", Offset = "0x11A5BA8", VA = "0x11A5BA8", Slot = "40")]
	protected virtual void ClickOnDown(Pvr_UIPointer pointer, List<RaycastResult> results, bool forceClick = false)
	{
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0x11A5CA0", Offset = "0x11A5CA0", VA = "0x11A5CA0", Slot = "41")]
	protected virtual bool IsEligibleClick(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
		return default(bool);
	}

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0x11A5FD4", Offset = "0x11A5FD4", VA = "0x11A5FD4", Slot = "42")]
	protected virtual bool AttemptClick(Pvr_UIPointer pointer)
	{
		return default(bool);
	}

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0x11A62FC", Offset = "0x11A62FC", VA = "0x11A62FC", Slot = "43")]
	protected virtual void Drag(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0x11A6A64", Offset = "0x11A6A64", VA = "0x11A6A64")]
	public Pvr_InputModule()
	{
	}
}
[Token(Token = "0x2000106")]
public class Pvr_UICanvas : MonoBehaviour
{
	[Token(Token = "0x20006B3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x978F6C", Offset = "0x978F6C")]
	private sealed class <CreateDraggablePanel>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Canvas canvas;

		[Token(Token = "0x4001DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2 canvasSize;

		[Token(Token = "0x17000349")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600239A")]
			[Address(RVA = "0x11ABE68", Offset = "0x11ABE68", VA = "0x11ABE68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600239C")]
			[Address(RVA = "0x11ABED8", Offset = "0x11ABED8", VA = "0x11ABED8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002397")]
		[Address(RVA = "0x11AB5F4", Offset = "0x11AB5F4", VA = "0x11AB5F4")]
		[DebuggerHidden]
		public <CreateDraggablePanel>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6002398")]
		[Address(RVA = "0x11AB964", Offset = "0x11AB964", VA = "0x11AB964", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002399")]
		[Address(RVA = "0x11AB968", Offset = "0x11AB968", VA = "0x11AB968", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600239B")]
		[Address(RVA = "0x11ABE70", Offset = "0x11ABE70", VA = "0x11ABE70", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool clickOnPointerCollision;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float autoActivateWithinDistance;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected BoxCollider canvasBoxCollider;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected Rigidbody canvasRigidBody;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected Coroutine draggablePanelCreation;

	[Token(Token = "0x4000671")]
	protected const string CANVAS_DRAGGABLE_PANEL = "UICANVAS_DRAGGABLE_PANEL";

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0x11AB048", Offset = "0x11AB048", VA = "0x11AB048", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0x11AB054", Offset = "0x11AB054", VA = "0x11AB054", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0x11AB060", Offset = "0x11AB060", VA = "0x11AB060", Slot = "6")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0x11AB06C", Offset = "0x11AB06C", VA = "0x11AB06C", Slot = "7")]
	protected virtual void SetupCanvas()
	{
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0x11AB558", Offset = "0x11AB558", VA = "0x11AB558", Slot = "8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9854CC", Offset = "0x9854CC")]
	protected virtual IEnumerator CreateDraggablePanel(Canvas canvas, Vector2 canvasSize)
	{
		return null;
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0x11AB620", Offset = "0x11AB620", VA = "0x11AB620", Slot = "9")]
	protected virtual void RemoveCanvas()
	{
	}

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0x11AB95C", Offset = "0x11AB95C", VA = "0x11AB95C")]
	public Pvr_UICanvas()
	{
	}
}
[Token(Token = "0x2000107")]
public struct UIDraggableItemEventArgs
{
	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject target;
}
[Token(Token = "0x2000108")]
public delegate void UIDraggableItemEventHandler(object sender, UIDraggableItemEventArgs e);
[Token(Token = "0x2000109")]
public class Pvr_UIDraggableItem : MonoBehaviour, IBeginDragHandler, IEventSystemHandler, IDragHandler, IEndDragHandler
{
	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool restrictToDropZone;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool restrictToOriginalCanvas;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float moveOffset;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public GameObject validDropZone;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected RectTransform dragTransform;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected Vector3 startPosition;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	protected Quaternion startRotation;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected GameObject startDropZone;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Transform startParent;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Canvas startCanvas;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected UnityEngine.CanvasGroup canvasGroup;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected Pvr_InputModule currentInputmodule;

	[Token(Token = "0x14000027")]
	public event UIDraggableItemEventHandler DraggableItemDropped
	{
		[Token(Token = "0x60006F4")]
		[Address(RVA = "0x11ABEE0", Offset = "0x11ABEE0", VA = "0x11ABEE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985530", Offset = "0x985530")]
		add
		{
		}
		[Token(Token = "0x60006F5")]
		[Address(RVA = "0x11ABFCC", Offset = "0x11ABFCC", VA = "0x11ABFCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985540", Offset = "0x985540")]
		remove
		{
		}
	}

	[Token(Token = "0x14000028")]
	public event UIDraggableItemEventHandler DraggableItemReset
	{
		[Token(Token = "0x60006F6")]
		[Address(RVA = "0x11AC0B8", Offset = "0x11AC0B8", VA = "0x11AC0B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985550", Offset = "0x985550")]
		add
		{
		}
		[Token(Token = "0x60006F7")]
		[Address(RVA = "0x11AC1A4", Offset = "0x11AC1A4", VA = "0x11AC1A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985560", Offset = "0x985560")]
		remove
		{
		}
	}

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0x11AC290", Offset = "0x11AC290", VA = "0x11AC290", Slot = "7")]
	public virtual void OnDraggableItemDropped(UIDraggableItemEventArgs e)
	{
	}

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0x11AC2B4", Offset = "0x11AC2B4", VA = "0x11AC2B4", Slot = "8")]
	public virtual void OnDraggableItemReset(UIDraggableItemEventArgs e)
	{
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0x11AC2D8", Offset = "0x11AC2D8", VA = "0x11AC2D8", Slot = "4")]
	public void OnBeginDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0x11AC540", Offset = "0x11AC540", VA = "0x11AC540", Slot = "5")]
	public void OnDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0x11AC54C", Offset = "0x11AC54C", VA = "0x11AC54C", Slot = "6")]
	public void OnEndDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0x11ACA34", Offset = "0x11ACA34", VA = "0x11ACA34", Slot = "9")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0x11ACB28", Offset = "0x11ACB28", VA = "0x11ACB28", Slot = "10")]
	protected virtual Pvr_UIPointer GetPointer()
	{
		return null;
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0x11ACCE0", Offset = "0x11ACCE0", VA = "0x11ACCE0", Slot = "11")]
	protected virtual void SetDragPosition(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0x11AD090", Offset = "0x11AD090", VA = "0x11AD090", Slot = "12")]
	protected virtual void ResetElement()
	{
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0x11AD1A0", Offset = "0x11AD1A0", VA = "0x11AD1A0", Slot = "13")]
	protected virtual UIDraggableItemEventArgs SetEventPayload(GameObject target)
	{
		return default(UIDraggableItemEventArgs);
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0x11AD1A8", Offset = "0x11AD1A8", VA = "0x11AD1A8")]
	public Pvr_UIDraggableItem()
	{
	}
}
[Token(Token = "0x200010A")]
public class Pvr_UIDropZone : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
{
	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected Pvr_UIDraggableItem droppableItem;

	[Token(Token = "0x6000703")]
	[Address(RVA = "0x11AD1BC", Offset = "0x11AD1BC", VA = "0x11AD1BC", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000704")]
	[Address(RVA = "0x11AD2E8", Offset = "0x11AD2E8", VA = "0x11AD2E8", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0x11AD374", Offset = "0x11AD374", VA = "0x11AD374")]
	public Pvr_UIDropZone()
	{
	}
}
[Token(Token = "0x200010B")]
public class Pvr_UIGraphicRaycaster : GraphicRaycaster
{
	[Serializable]
	[Token(Token = "0x20006B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x978F7C", Offset = "0x978F7C")]
	private sealed class <>c
	{
		[Token(Token = "0x4001DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<RaycastResult> <>9__7_0;

		[Token(Token = "0x600239E")]
		[Address(RVA = "0x11AE478", Offset = "0x11AE478", VA = "0x11AE478")]
		public <>c()
		{
		}

		[Token(Token = "0x600239F")]
		[Address(RVA = "0x11AE480", Offset = "0x11AE480", VA = "0x11AE480")]
		internal int <Raycast>b__7_0(RaycastResult g1, RaycastResult g2)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected Canvas currentCanvas;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected Vector2 lastKnownPosition;

	[Token(Token = "0x4000684")]
	protected const float UI_CONTROL_OFFSET = 1E-05f;

	[NonSerialized]
	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<RaycastResult> s_RaycastResults;

	[Token(Token = "0x17000094")]
	protected virtual Canvas canvas
	{
		[Token(Token = "0x600070A")]
		[Address(RVA = "0x11AE288", Offset = "0x11AE288", VA = "0x11AE288", Slot = "25")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0x11AD37C", Offset = "0x11AD37C", VA = "0x11AD37C", Slot = "17")]
	public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
	{
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0x11AD590", Offset = "0x11AD590", VA = "0x11AD590", Slot = "22")]
	protected virtual void SetNearestRaycast(ref PointerEventData eventData, ref List<RaycastResult> resultAppendList, ref List<RaycastResult> raycastResults)
	{
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0x11AD8E8", Offset = "0x11AD8E8", VA = "0x11AD8E8", Slot = "23")]
	protected virtual float GetHitDistance(Ray ray)
	{
		return default(float);
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0x11ADC58", Offset = "0x11ADC58", VA = "0x11ADC58", Slot = "24")]
	protected virtual void Raycast(Canvas canvas, Camera eventCamera, Ray ray, ref List<RaycastResult> results)
	{
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0x11AE338", Offset = "0x11AE338", VA = "0x11AE338")]
	public Pvr_UIGraphicRaycaster()
	{
	}
}
[Token(Token = "0x200010C")]
public struct UIPointerEventArgs
{
	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool isActive;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public GameObject currentTarget;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject previousTarget;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RaycastResult raycastResult;
}
[Token(Token = "0x200010D")]
public delegate void UIPointerEventHandler(object sender, UIPointerEventArgs e);
[Token(Token = "0x200010E")]
public class Pvr_UIPointer : MonoBehaviour
{
	[Token(Token = "0x20006B5")]
	public enum ClickMethods
	{
		[Token(Token = "0x4001DAA")]
		ClickOnButtonUp,
		[Token(Token = "0x4001DAB")]
		ClickOnButtonDown
	}

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ClickMethods clickMethod;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public bool collisionClick;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public GameObject autoActivatingCanvas;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public PointerEventData pointerEventData;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public GameObject hoveringElement;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public float hoverDurationTimer;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	public bool canClickOnHover;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform pointerOriginTransform;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected bool pointerClicked;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	protected bool beamEnabledState;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	protected bool lastPointerPressState;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
	protected bool lastPointerClickState;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected GameObject currentTarget;

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected EventSystem cachedEventSystem;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected Pvr_InputModule cachedVRInputModule;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Transform originalPointerOriginTransform;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool TouchBtnValue;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool AppBtnValue;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	public static bool TriggerBtnValue;

	[Token(Token = "0x14000029")]
	public event UIPointerEventHandler UIPointerElementEnter
	{
		[Token(Token = "0x6000711")]
		[Address(RVA = "0x11AE490", Offset = "0x11AE490", VA = "0x11AE490")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985570", Offset = "0x985570")]
		add
		{
		}
		[Token(Token = "0x6000712")]
		[Address(RVA = "0x11AE57C", Offset = "0x11AE57C", VA = "0x11AE57C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985580", Offset = "0x985580")]
		remove
		{
		}
	}

	[Token(Token = "0x1400002A")]
	public event UIPointerEventHandler UIPointerElementExit
	{
		[Token(Token = "0x6000713")]
		[Address(RVA = "0x11AE668", Offset = "0x11AE668", VA = "0x11AE668")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985590", Offset = "0x985590")]
		add
		{
		}
		[Token(Token = "0x6000714")]
		[Address(RVA = "0x11AE754", Offset = "0x11AE754", VA = "0x11AE754")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9855A0", Offset = "0x9855A0")]
		remove
		{
		}
	}

	[Token(Token = "0x1400002B")]
	public event UIPointerEventHandler UIPointerElementClick
	{
		[Token(Token = "0x6000715")]
		[Address(RVA = "0x11AE840", Offset = "0x11AE840", VA = "0x11AE840")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9855B0", Offset = "0x9855B0")]
		add
		{
		}
		[Token(Token = "0x6000716")]
		[Address(RVA = "0x11AE92C", Offset = "0x11AE92C", VA = "0x11AE92C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9855C0", Offset = "0x9855C0")]
		remove
		{
		}
	}

	[Token(Token = "0x1400002C")]
	public event UIPointerEventHandler UIPointerElementDragStart
	{
		[Token(Token = "0x6000717")]
		[Address(RVA = "0x11AEA18", Offset = "0x11AEA18", VA = "0x11AEA18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9855D0", Offset = "0x9855D0")]
		add
		{
		}
		[Token(Token = "0x6000718")]
		[Address(RVA = "0x11AEB04", Offset = "0x11AEB04", VA = "0x11AEB04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9855E0", Offset = "0x9855E0")]
		remove
		{
		}
	}

	[Token(Token = "0x1400002D")]
	public event UIPointerEventHandler UIPointerElementDragEnd
	{
		[Token(Token = "0x6000719")]
		[Address(RVA = "0x11AEBF0", Offset = "0x11AEBF0", VA = "0x11AEBF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9855F0", Offset = "0x9855F0")]
		add
		{
		}
		[Token(Token = "0x600071A")]
		[Address(RVA = "0x11AECDC", Offset = "0x11AECDC", VA = "0x11AECDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985600", Offset = "0x985600")]
		remove
		{
		}
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0x11AEDC8", Offset = "0x11AEDC8", VA = "0x11AEDC8", Slot = "4")]
	public virtual bool PointerActive()
	{
		return default(bool);
	}

	[Token(Token = "0x600071C")]
	[Address(RVA = "0x11AEDD0", Offset = "0x11AEDD0", VA = "0x11AEDD0", Slot = "5")]
	public virtual bool IsSelectionButtonPressed()
	{
		return default(bool);
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0x11AEEB0", Offset = "0x11AEEB0", VA = "0x11AEEB0", Slot = "6")]
	public virtual Vector3 GetOriginPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600071E")]
	[Address(RVA = "0x11AEF4C", Offset = "0x11AEF4C", VA = "0x11AEF4C", Slot = "7")]
	public virtual Vector3 GetOriginForward()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0x11AEFE8", Offset = "0x11AEFE8", VA = "0x11AEFE8", Slot = "8")]
	public virtual bool ValidClick(bool checkLastClick, bool lastClickState = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000720")]
	[Address(RVA = "0x11AF004", Offset = "0x11AF004", VA = "0x11AF004", Slot = "9")]
	protected virtual void ResetHoverTimer()
	{
	}

	[Token(Token = "0x6000721")]
	[Address(RVA = "0x11AF010", Offset = "0x11AF010", VA = "0x11AF010", Slot = "10")]
	public virtual void OnUIPointerElementEnter(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000722")]
	[Address(RVA = "0x11AF0F4", Offset = "0x11AF0F4", VA = "0x11AF0F4", Slot = "11")]
	public virtual void OnUIPointerElementExit(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000723")]
	[Address(RVA = "0x11AF1C0", Offset = "0x11AF1C0", VA = "0x11AF1C0", Slot = "12")]
	public virtual void OnUIPointerElementClick(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000724")]
	[Address(RVA = "0x11AF28C", Offset = "0x11AF28C", VA = "0x11AF28C", Slot = "13")]
	public virtual void OnUIPointerElementDragStart(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000725")]
	[Address(RVA = "0x11AF2D8", Offset = "0x11AF2D8", VA = "0x11AF2D8", Slot = "14")]
	public virtual void OnUIPointerElementDragEnd(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000726")]
	[Address(RVA = "0x11AF324", Offset = "0x11AF324", VA = "0x11AF324", Slot = "15")]
	public virtual UIPointerEventArgs SetUIPointerEvent(RaycastResult currentRaycastResult, GameObject currentTarget, [Optional] GameObject lastTarget)
	{
		return default(UIPointerEventArgs);
	}

	[Token(Token = "0x6000727")]
	[Address(RVA = "0x11AF388", Offset = "0x11AF388", VA = "0x11AF388", Slot = "16")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000728")]
	[Address(RVA = "0x11AF394", Offset = "0x11AF394", VA = "0x11AF394", Slot = "17")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000729")]
	[Address(RVA = "0x11AF3CC", Offset = "0x11AF3CC", VA = "0x11AF3CC", Slot = "18")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x600072A")]
	[Address(RVA = "0x11AF430", Offset = "0x11AF430", VA = "0x11AF430", Slot = "19")]
	protected virtual void ConfigureEventSystem()
	{
	}

	[Token(Token = "0x600072B")]
	[Address(RVA = "0x11AF5D8", Offset = "0x11AF5D8", VA = "0x11AF5D8")]
	public Pvr_UIPointer()
	{
	}
}
[Token(Token = "0x200010F")]
[ExecuteInEditMode]
public class Pvr_UnitySDKEditor : MonoBehaviour
{
	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool vrModeEnabled;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float mouseX;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float mouseY;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float mouseZ;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float neckModelScale;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool autoUntiltHead;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 neckOffset;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Matrix4x4 headView;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public Matrix4x4 leftEyeUndistortedProj;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[HideInInspector]
	public Matrix4x4 rightEyeUndistortedProj;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[HideInInspector]
	public Matrix4x4 leftEyeProj;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[HideInInspector]
	public Matrix4x4 rightEyeProj;

	[Token(Token = "0x40006AE")]
	private const float TOUCH_TIME_LIMIT = 0.2f;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private float touchStartTime;

	[Token(Token = "0x600072D")]
	[Address(RVA = "0xE9D888", Offset = "0xE9D888", VA = "0xE9D888")]
	public Matrix4x4 UndistortedProjection(Eye eye)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x600072E")]
	[Address(RVA = "0xE9D8D4", Offset = "0xE9D8D4", VA = "0xE9D8D4")]
	public Matrix4x4 Projection(Eye eye)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x600072F")]
	[Address(RVA = "0xE9D920", Offset = "0xE9D920", VA = "0xE9D920")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000730")]
	[Address(RVA = "0xE9DA68", Offset = "0xE9DA68", VA = "0xE9DA68")]
	private void Update()
	{
	}

	[Token(Token = "0x6000731")]
	[Address(RVA = "0xE9D934", Offset = "0xE9D934", VA = "0xE9D934")]
	public void InitEyePara()
	{
	}

	[Token(Token = "0x6000732")]
	[Address(RVA = "0xE9D9CC", Offset = "0xE9D9CC", VA = "0xE9D9CC")]
	private void InitEditorSensorPara()
	{
	}

	[Token(Token = "0x6000733")]
	[Address(RVA = "0xE9E780", Offset = "0xE9E780", VA = "0xE9E780")]
	public static Matrix4x4 MakeProjection(float l, float t, float r, float b, float n, float f)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000734")]
	[Address(RVA = "0xE9E924", Offset = "0xE9E924", VA = "0xE9E924")]
	public bool UpdateStatesensor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000735")]
	[Address(RVA = "0xE9DE98", Offset = "0xE9DE98", VA = "0xE9DE98")]
	public void ComputeEyesFromProfile()
	{
	}

	[Token(Token = "0x6000736")]
	[Address(RVA = "0xE9EDB0", Offset = "0xE9EDB0", VA = "0xE9EDB0")]
	public bool ResetUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000737")]
	[Address(RVA = "0xE9DB10", Offset = "0xE9DB10", VA = "0xE9DB10")]
	private void SimulateInput()
	{
	}

	[Token(Token = "0x6000738")]
	[Address(RVA = "0xE9E6D0", Offset = "0xE9E6D0", VA = "0xE9E6D0")]
	private void FovAdjust()
	{
	}

	[Token(Token = "0x6000739")]
	[Address(RVA = "0xE9EE78", Offset = "0xE9EE78", VA = "0xE9EE78")]
	private Rect RectAdjust(Rect eyeRect)
	{
		return default(Rect);
	}

	[Token(Token = "0x600073A")]
	[Address(RVA = "0xE9E93C", Offset = "0xE9E93C", VA = "0xE9E93C")]
	private void UpdateSimulatedSensor()
	{
	}

	[Token(Token = "0x600073B")]
	[Address(RVA = "0xE9E560", Offset = "0xE9E560", VA = "0xE9E560")]
	private void InitForEye(ref Material mat, ref Material mat1)
	{
	}

	[Token(Token = "0x600073C")]
	[Address(RVA = "0xE9EDC4", Offset = "0xE9EDC4", VA = "0xE9EDC4")]
	private void EnableVEmodel()
	{
	}

	[Token(Token = "0x600073D")]
	[Address(RVA = "0xE9F024", Offset = "0xE9F024", VA = "0xE9F024")]
	public Pvr_UnitySDKEditor()
	{
	}
}
[Token(Token = "0x2000110")]
public class Pvr_VolumePowerBrightness : MonoBehaviour
{
	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool VolEnable;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool BattEnable;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text showResult;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text setVolumnum;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text setBrightnum;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string MusicPath;

	[Token(Token = "0x600073F")]
	[Address(RVA = "0xEB347C", Offset = "0xEB347C", VA = "0xEB347C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000740")]
	[Address(RVA = "0xEB353C", Offset = "0xEB353C", VA = "0xEB353C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000741")]
	[Address(RVA = "0xEB3580", Offset = "0xEB3580", VA = "0xEB3580")]
	public void GetMaxVolumeNumber()
	{
	}

	[Token(Token = "0x6000742")]
	[Address(RVA = "0xEB3624", Offset = "0xEB3624", VA = "0xEB3624")]
	public void GetCurrentVolumeNumber()
	{
	}

	[Token(Token = "0x6000743")]
	[Address(RVA = "0xEB36C8", Offset = "0xEB36C8", VA = "0xEB36C8")]
	public void VolumeUp()
	{
	}

	[Token(Token = "0x6000744")]
	[Address(RVA = "0xEB3748", Offset = "0xEB3748", VA = "0xEB3748")]
	public void VolumeDown()
	{
	}

	[Token(Token = "0x6000745")]
	[Address(RVA = "0xEB37C8", Offset = "0xEB37C8", VA = "0xEB37C8")]
	public void SetVolumeNum()
	{
	}

	[Token(Token = "0x6000746")]
	[Address(RVA = "0xEB38EC", Offset = "0xEB38EC", VA = "0xEB38EC")]
	public void SetBrightness()
	{
	}

	[Token(Token = "0x6000747")]
	[Address(RVA = "0xEB3A10", Offset = "0xEB3A10", VA = "0xEB3A10")]
	public void GetCurrentBrightness()
	{
	}

	[Token(Token = "0x6000748")]
	[Address(RVA = "0xEB3AB4", Offset = "0xEB3AB4", VA = "0xEB3AB4")]
	public bool setAudio(string s)
	{
		return default(bool);
	}

	[Token(Token = "0x6000749")]
	[Address(RVA = "0xEB3B48", Offset = "0xEB3B48", VA = "0xEB3B48")]
	public bool setBattery(string s)
	{
		return default(bool);
	}

	[Token(Token = "0x600074A")]
	[Address(RVA = "0xEB34E0", Offset = "0xEB34E0", VA = "0xEB34E0")]
	private bool InitBatteryVolClass()
	{
		return default(bool);
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0xEB34E4", Offset = "0xEB34E4", VA = "0xEB34E4")]
	private bool StartBatteryReceiver(string startreceivre)
	{
		return default(bool);
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0xEB357C", Offset = "0xEB357C", VA = "0xEB357C")]
	private bool StopBatteryReceiver()
	{
		return default(bool);
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0xEB3510", Offset = "0xEB3510", VA = "0xEB3510")]
	private bool StartAudioReceiver(string startreceivre)
	{
		return default(bool);
	}

	[Token(Token = "0x600074E")]
	[Address(RVA = "0xEB3578", Offset = "0xEB3578", VA = "0xEB3578")]
	private bool StopAudioReceiver()
	{
		return default(bool);
	}

	[Token(Token = "0x600074F")]
	[Address(RVA = "0xEB3BDC", Offset = "0xEB3BDC", VA = "0xEB3BDC")]
	public Pvr_VolumePowerBrightness()
	{
	}
}
[Token(Token = "0x2000111")]
[DisallowMultipleComponent]
public class SteamManager : MonoBehaviour
{
	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SteamManager s_instance;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool s_EverInialized;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool m_bInitialized;

	[Token(Token = "0x17000095")]
	private static SteamManager Instance
	{
		[Token(Token = "0x6000750")]
		[Address(RVA = "0xC77A48", Offset = "0xC77A48", VA = "0xC77A48")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000096")]
	public static bool Initialized
	{
		[Token(Token = "0x6000751")]
		[Address(RVA = "0xC77B24", Offset = "0xC77B24", VA = "0xC77B24")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000752")]
	[Address(RVA = "0xC77B50", Offset = "0xC77B50", VA = "0xC77B50")]
	private static void SteamAPIDebugTextHook(int nSeverity, StringBuilder pchDebugText)
	{
	}

	[Token(Token = "0x6000753")]
	[Address(RVA = "0xC77BB8", Offset = "0xC77BB8", VA = "0xC77BB8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000754")]
	[Address(RVA = "0xC77C0C", Offset = "0xC77C0C", VA = "0xC77C0C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000755")]
	[Address(RVA = "0xC77C10", Offset = "0xC77C10", VA = "0xC77C10")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000756")]
	[Address(RVA = "0xC77C14", Offset = "0xC77C14", VA = "0xC77C14")]
	private void Update()
	{
	}

	[Token(Token = "0x6000757")]
	[Address(RVA = "0xC77C18", Offset = "0xC77C18", VA = "0xC77C18")]
	public SteamManager()
	{
	}
}
[Token(Token = "0x2000112")]
public class SubtitlePositionGroup : MonoBehaviour
{
	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] positions;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int m_positionsCount;

	[Token(Token = "0x6000758")]
	[Address(RVA = "0xC7E3C8", Offset = "0xC7E3C8", VA = "0xC7E3C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000759")]
	[Address(RVA = "0xC7E3FC", Offset = "0xC7E3FC", VA = "0xC7E3FC")]
	public Transform GetPositionClosestTo(Vector3 position)
	{
		return null;
	}

	[Token(Token = "0x600075A")]
	[Address(RVA = "0xC7E558", Offset = "0xC7E558", VA = "0xC7E558")]
	public Transform GetPositionAtDirection(Vector3 direction, Vector3 fromPosition)
	{
		return null;
	}

	[Token(Token = "0x600075B")]
	[Address(RVA = "0xC7E6F8", Offset = "0xC7E6F8", VA = "0xC7E6F8")]
	public SubtitlePositionGroup()
	{
	}
}
namespace WaterBuoyancy
{
	[Token(Token = "0x2000113")]
	public class FloatingObject : MonoBehaviour
	{
		[Token(Token = "0x40006BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool calculateDensity;

		[Token(Token = "0x40006BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float density;

		[Token(Token = "0x40006BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97E9C4", Offset = "0x97E9C4")]
		private float normalizedVoxelSize;

		[Token(Token = "0x40006BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float dragInWater;

		[Token(Token = "0x40006BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float angularDragInWater;

		[Token(Token = "0x40006C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 buoyancyCentreOffset;

		[Token(Token = "0x40006C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float bounceDamp;

		[Token(Token = "0x40006C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private WaterVolume water;

		[Token(Token = "0x40006C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Collider m_collider;

		[Token(Token = "0x40006C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Rigidbody m_rigidBody;

		[Token(Token = "0x40006C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float m_initialDrag;

		[Token(Token = "0x40006C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float m_initialAngularDrag;

		[Token(Token = "0x40006C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 voxelSize;

		[Token(Token = "0x40006C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3[] voxels;

		[Token(Token = "0x40006C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Bounds m_bounds;

		[Token(Token = "0x600075C")]
		private T FindComponent<T>() where T : UnityEngine.Component
		{
			return null;
		}

		[Token(Token = "0x600075D")]
		[Address(RVA = "0xD8F77C", Offset = "0xD8F77C", VA = "0xD8F77C")]
		protected void Awake()
		{
		}

		[Token(Token = "0x600075E")]
		[Address(RVA = "0xD90008", Offset = "0xD90008", VA = "0xD90008")]
		protected void FixedUpdate()
		{
		}

		[Token(Token = "0x600075F")]
		[Address(RVA = "0xD900B0", Offset = "0xD900B0", VA = "0xD900B0")]
		private void applySimpleBuoyancy()
		{
		}

		[Token(Token = "0x6000760")]
		[Address(RVA = "0xD903D0", Offset = "0xD903D0", VA = "0xD903D0")]
		private void applyBuoyancy()
		{
		}

		[Token(Token = "0x6000761")]
		[Address(RVA = "0xD90EF4", Offset = "0xD90EF4", VA = "0xD90EF4", Slot = "4")]
		protected virtual void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000762")]
		[Address(RVA = "0xD90F8C", Offset = "0xD90F8C", VA = "0xD90F8C", Slot = "5")]
		protected virtual void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000763")]
		[Address(RVA = "0xD91004", Offset = "0xD91004", VA = "0xD91004", Slot = "6")]
		protected virtual void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000764")]
		[Address(RVA = "0xD908A0", Offset = "0xD908A0", VA = "0xD908A0")]
		private Vector3 CalculateMaxBuoyancyForce()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000765")]
		[Address(RVA = "0xD8FC70", Offset = "0xD8FC70", VA = "0xD8FC70")]
		private Vector3[] CutIntoVoxels()
		{
			return null;
		}

		[Token(Token = "0x6000766")]
		[Address(RVA = "0xD91208", Offset = "0xD91208", VA = "0xD91208")]
		public FloatingObject()
		{
		}
	}
	[Token(Token = "0x2000114")]
	public static class ColliderUtils
	{
		[Token(Token = "0x6000767")]
		[Address(RVA = "0xD8F1BC", Offset = "0xD8F1BC", VA = "0xD8F1BC")]
		public static bool IsPointInsideCollider(Vector3 point, Collider collider, ref Bounds colliderBounds)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000115")]
	public static class DebugUtils
	{
		[Token(Token = "0x6000768")]
		[Address(RVA = "0xD8F394", Offset = "0xD8F394", VA = "0xD8F394")]
		public static void DrawPoint(Vector3 point)
		{
		}

		[Token(Token = "0x6000769")]
		[Address(RVA = "0xD8F3F4", Offset = "0xD8F3F4", VA = "0xD8F3F4")]
		public static void DrawPoint(Vector3 point, Color color)
		{
		}

		[Token(Token = "0x600076A")]
		[Address(RVA = "0xD8F6DC", Offset = "0xD8F6DC", VA = "0xD8F6DC")]
		public static void DrawPoint(float x, float y, float z)
		{
		}

		[Token(Token = "0x600076B")]
		[Address(RVA = "0xD8F714", Offset = "0xD8F714", VA = "0xD8F714")]
		public static void DrawPoint(float x, float y, float z, Color color)
		{
		}
	}
	[Token(Token = "0x2000116")]
	public static class MathfUtils
	{
		[Token(Token = "0x600076C")]
		[Address(RVA = "0xD9127C", Offset = "0xD9127C", VA = "0xD9127C")]
		public static float GetAverageValue(params float[] values)
		{
			return default(float);
		}

		[Token(Token = "0x600076D")]
		[Address(RVA = "0xD91318", Offset = "0xD91318", VA = "0xD91318")]
		public static Vector3 GetAveratePoint(params Vector3[] points)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600076E")]
		[Address(RVA = "0xD91494", Offset = "0xD91494", VA = "0xD91494")]
		public static bool IsPointInsideTriangle(Vector3 point, Vector3 tp1, Vector3 tp2, Vector3 tp3)
		{
			return default(bool);
		}

		[Token(Token = "0x600076F")]
		[Address(RVA = "0xD917F4", Offset = "0xD917F4", VA = "0xD917F4")]
		public static bool IsPointInsideTriangle(Vector3 point, Vector3 tp1, Vector3 tp2, Vector3 tp3, bool ignoreX, bool ignoreY, bool ignoreZ)
		{
			return default(bool);
		}

		[Token(Token = "0x6000770")]
		[Address(RVA = "0xD91858", Offset = "0xD91858", VA = "0xD91858")]
		public static bool IsPointInsideTriangle(Vector3 point, Vector3[] triangle)
		{
			return default(bool);
		}

		[Token(Token = "0x6000771")]
		[Address(RVA = "0xD91948", Offset = "0xD91948", VA = "0xD91948")]
		public static bool IsPointInsideTriangle(Vector3 point, Vector3[] triangle, bool ignoreX, bool ignoreY, bool ignoreZ)
		{
			return default(bool);
		}

		[Token(Token = "0x6000772")]
		[Address(RVA = "0xD91630", Offset = "0xD91630", VA = "0xD91630")]
		public static float CalculateArea_Triangle(Vector3 p1, Vector3 p2, Vector3 p3)
		{
			return default(float);
		}

		[Token(Token = "0x6000773")]
		[Address(RVA = "0xD91A58", Offset = "0xD91A58", VA = "0xD91A58")]
		public static float CalculateArea_Triangle(Vector3[] triangle)
		{
			return default(float);
		}

		[Token(Token = "0x6000774")]
		[Address(RVA = "0xD8F944", Offset = "0xD8F944", VA = "0xD8F944")]
		public static float CalculateVolume_Mesh(Mesh mesh, Transform trans)
		{
			return default(float);
		}

		[Token(Token = "0x6000775")]
		[Address(RVA = "0xD91B28", Offset = "0xD91B28", VA = "0xD91B28")]
		public static float CalculateVolume_Tetrahedron(Vector3 p1, Vector3 p2, Vector3 p3, Vector3 p4)
		{
			return default(float);
		}

		[Token(Token = "0x6000776")]
		[Address(RVA = "0xD91CA8", Offset = "0xD91CA8", VA = "0xD91CA8")]
		public static float CalculateVolume_Tetrahedron(Vector3[] tetrahedron)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000117")]
	public static class StringUtils
	{
		[Token(Token = "0x6000777")]
		[Address(RVA = "0xD91DB0", Offset = "0xD91DB0", VA = "0xD91DB0")]
		public static string Vector3ToString(Vector3 vector)
		{
			return null;
		}
	}
	[Token(Token = "0x2000118")]
	[ExecuteInEditMode]
	public class WaterFX : MonoBehaviour
	{
		[Token(Token = "0x20006B6")]
		public enum WaterMode
		{
			[Token(Token = "0x4001DAD")]
			Simple,
			[Token(Token = "0x4001DAE")]
			Reflective,
			[Token(Token = "0x4001DAF")]
			Refractive
		}

		[Token(Token = "0x40006CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private WaterMode waterMode;

		[Token(Token = "0x40006CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool disablePixelLights;

		[Token(Token = "0x40006CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int textureSize;

		[Token(Token = "0x40006CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float clipPlaneOffset;

		[Token(Token = "0x40006CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private LayerMask reflectLayers;

		[Token(Token = "0x40006CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private LayerMask refractLayers;

		[Token(Token = "0x40006D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<Camera, Camera> m_ReflectionCameras;

		[Token(Token = "0x40006D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<Camera, Camera> m_RefractionCameras;

		[Token(Token = "0x40006D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RenderTexture m_ReflectionTexture;

		[Token(Token = "0x40006D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RenderTexture m_RefractionTexture;

		[Token(Token = "0x40006D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private WaterMode m_HardwareWaterSupport;

		[Token(Token = "0x40006D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_OldReflectionTextureSize;

		[Token(Token = "0x40006D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_OldRefractionTextureSize;

		[Token(Token = "0x40006D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool s_InsideWater;

		[Token(Token = "0x40006D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x40006D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private WaterMode m_mode;

		[Token(Token = "0x40006DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Camera m_reflectionCamera;

		[Token(Token = "0x40006DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Camera m_refractionCamera;

		[Token(Token = "0x40006DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector4 reflectionPlane;

		[Token(Token = "0x40006DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector4 m_waveScale4;

		[Token(Token = "0x6000778")]
		[Address(RVA = "0xD91E7C", Offset = "0xD91E7C", VA = "0xD91E7C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000779")]
		[Address(RVA = "0xD92138", Offset = "0xD92138", VA = "0xD92138")]
		public void OnWillRenderObject()
		{
		}

		[Token(Token = "0x600077A")]
		[Address(RVA = "0xD93FD0", Offset = "0xD93FD0", VA = "0xD93FD0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600077B")]
		[Address(RVA = "0xD9437C", Offset = "0xD9437C", VA = "0xD9437C")]
		private void Update()
		{
		}

		[Token(Token = "0x600077C")]
		[Address(RVA = "0xD9373C", Offset = "0xD9373C", VA = "0xD9373C")]
		private void UpdateCameraModes(Camera src, Camera dest)
		{
		}

		[Token(Token = "0x600077D")]
		[Address(RVA = "0xD92970", Offset = "0xD92970", VA = "0xD92970")]
		private void CreateWaterObjects(Camera currentCamera, out Camera reflectionCamera, out Camera refractionCamera)
		{
		}

		[Token(Token = "0x600077E")]
		[Address(RVA = "0xD92124", Offset = "0xD92124", VA = "0xD92124")]
		private WaterMode GetWaterMode()
		{
			return default(WaterMode);
		}

		[Token(Token = "0x600077F")]
		[Address(RVA = "0xD92020", Offset = "0xD92020", VA = "0xD92020")]
		private WaterMode FindHardwareWaterSupport()
		{
			return default(WaterMode);
		}

		[Token(Token = "0x6000780")]
		[Address(RVA = "0xD93DB4", Offset = "0xD93DB4", VA = "0xD93DB4")]
		private Vector4 CameraSpacePlane(Camera cam, Vector3 pos, Vector3 normal, float sideSign)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6000781")]
		[Address(RVA = "0xD93B10", Offset = "0xD93B10", VA = "0xD93B10")]
		private static void CalculateReflectionMatrix(ref Matrix4x4 reflectionMat, Vector4 plane)
		{
		}

		[Token(Token = "0x6000782")]
		[Address(RVA = "0xD94634", Offset = "0xD94634", VA = "0xD94634")]
		public WaterFX()
		{
		}
	}
	[Token(Token = "0x2000119")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x96DEA8", Offset = "0x96DEA8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x96DEA8", Offset = "0x96DEA8")]
	public class WaterVolume : MonoBehaviour
	{
		[Token(Token = "0x40006DE")]
		public const string TAG = "Water Volume";

		[Token(Token = "0x40006DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform surfaceReference;

		[Token(Token = "0x40006E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float density;

		[Token(Token = "0x40006E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private int rows;

		[Token(Token = "0x40006E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int columns;

		[Token(Token = "0x40006E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float quadSegmentSize;

		[Token(Token = "0x40006E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool autoUpdateWaterMesh;

		[Token(Token = "0x40006E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Mesh mesh;

		[Token(Token = "0x40006E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Vector3> meshLocalVertices;

		[Token(Token = "0x40006E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3[] meshWorldVertices;

		[Token(Token = "0x40006E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3[] m_meshPolygon;

		[Token(Token = "0x17000097")]
		public float Density
		{
			[Token(Token = "0x6000783")]
			[Address(RVA = "0xD91200", Offset = "0xD91200", VA = "0xD91200")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000098")]
		public int Rows
		{
			[Token(Token = "0x6000784")]
			[Address(RVA = "0xD94750", Offset = "0xD94750", VA = "0xD94750")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000099")]
		public int Columns
		{
			[Token(Token = "0x6000785")]
			[Address(RVA = "0xD94758", Offset = "0xD94758", VA = "0xD94758")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700009A")]
		public float QuadSegmentSize
		{
			[Token(Token = "0x6000786")]
			[Address(RVA = "0xD94760", Offset = "0xD94760", VA = "0xD94760")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700009B")]
		public Mesh Mesh
		{
			[Token(Token = "0x6000787")]
			[Address(RVA = "0xD94768", Offset = "0xD94768", VA = "0xD94768")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000788")]
		[Address(RVA = "0xD94818", Offset = "0xD94818", VA = "0xD94818")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000789")]
		[Address(RVA = "0xD94994", Offset = "0xD94994", VA = "0xD94994")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x600078A")]
		[Address(RVA = "0xD94AC4", Offset = "0xD94AC4", VA = "0xD94AC4")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x600078B")]
		[Address(RVA = "0xD94DD0", Offset = "0xD94DD0", VA = "0xD94DD0")]
		private void Update()
		{
		}

		[Token(Token = "0x600078C")]
		[Address(RVA = "0xD94DE0", Offset = "0xD94DE0", VA = "0xD94DE0")]
		private bool GetSurroundingTrianglePolygon(Vector3 worldPoint, ref Vector3[] trianglePolygon)
		{
			return default(bool);
		}

		[Token(Token = "0x600078D")]
		[Address(RVA = "0xD90C94", Offset = "0xD90C94", VA = "0xD90C94")]
		public Vector3 GetSurfaceNormal(Vector3 worldPoint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600078E")]
		[Address(RVA = "0xD9099C", Offset = "0xD9099C", VA = "0xD9099C")]
		public float GetWaterLevel(Vector3 worldPoint)
		{
			return default(float);
		}

		[Token(Token = "0x600078F")]
		[Address(RVA = "0xD951E8", Offset = "0xD951E8", VA = "0xD951E8")]
		private bool IsPointUnderWater(Vector3 worldPoint)
		{
			return default(bool);
		}

		[Token(Token = "0x6000790")]
		[Address(RVA = "0xD951D8", Offset = "0xD951D8", VA = "0xD951D8")]
		private int GetIndex(int row, int column)
		{
			return default(int);
		}

		[Token(Token = "0x6000791")]
		[Address(RVA = "0xD9483C", Offset = "0xD9483C", VA = "0xD9483C")]
		private void initVertices()
		{
		}

		[Token(Token = "0x6000792")]
		[Address(RVA = "0xD94940", Offset = "0xD94940", VA = "0xD94940")]
		private void updateMeshWorldVertices()
		{
		}

		[Token(Token = "0x6000793")]
		[Address(RVA = "0xD95214", Offset = "0xD95214", VA = "0xD95214")]
		private void ConvertPointsToWorldSpace(List<Vector3> localPoints, ref Vector3[] worldPoints)
		{
		}

		[Token(Token = "0x6000794")]
		[Address(RVA = "0xD95370", Offset = "0xD95370", VA = "0xD95370")]
		public WaterVolume()
		{
		}
	}
	[Token(Token = "0x200011A")]
	public class WaterWaves : MonoBehaviour
	{
		[Token(Token = "0x40006E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float speed;

		[Token(Token = "0x40006EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float height;

		[Token(Token = "0x40006EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float noiseWalk;

		[Token(Token = "0x40006EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float noiseStrength;

		[Token(Token = "0x40006ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Mesh mesh;

		[Token(Token = "0x40006EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3[] baseVertices;

		[Token(Token = "0x40006EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] vertices;

		[Token(Token = "0x6000795")]
		[Address(RVA = "0xD953EC", Offset = "0xD953EC", VA = "0xD953EC", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000796")]
		[Address(RVA = "0xD9549C", Offset = "0xD9549C", VA = "0xD9549C", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000797")]
		[Address(RVA = "0xD9560C", Offset = "0xD9560C", VA = "0xD9560C", Slot = "6")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000798")]
		[Address(RVA = "0xD954A0", Offset = "0xD954A0", VA = "0xD954A0")]
		private void ResizeBoxCollider()
		{
		}

		[Token(Token = "0x6000799")]
		[Address(RVA = "0xD95904", Offset = "0xD95904", VA = "0xD95904")]
		public WaterWaves()
		{
		}
	}
}
namespace WaterBuoyancy.Collections
{
	[Token(Token = "0x200011B")]
	public class MinHeap<T>
	{
		[Token(Token = "0x40006F0")]
		private const int INITIAL_CAPACITY = 4;

		[Token(Token = "0x40006F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T[] arr;

		[Token(Token = "0x40006F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int lastItemIndex;

		[Token(Token = "0x40006F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IComparer<T> comparer;

		[Token(Token = "0x1700009C")]
		public int Count
		{
			[Token(Token = "0x600079E")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600079A")]
		public MinHeap()
		{
		}

		[Token(Token = "0x600079B")]
		public MinHeap(int capacity)
		{
		}

		[Token(Token = "0x600079C")]
		public MinHeap(IComparer<T> comparer)
		{
		}

		[Token(Token = "0x600079D")]
		public MinHeap(int capacity, IComparer<T> comparer)
		{
		}

		[Token(Token = "0x600079F")]
		public void Add(T item)
		{
		}

		[Token(Token = "0x60007A0")]
		public T Remove()
		{
			return (T)null;
		}

		[Token(Token = "0x60007A1")]
		public T Peek()
		{
			return (T)null;
		}

		[Token(Token = "0x60007A2")]
		public void Clear()
		{
		}

		[Token(Token = "0x60007A3")]
		private void MinHeapifyUp(int index)
		{
		}

		[Token(Token = "0x60007A4")]
		private void MinHeapifyDown(int index)
		{
		}

		[Token(Token = "0x60007A5")]
		private void Resize()
		{
		}
	}
}
namespace PublicKeyConvert
{
	[Token(Token = "0x200011C")]
	public class PEMKeyLoader
	{
		[Token(Token = "0x40006F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static byte[] SeqOID;

		[Token(Token = "0x60007A6")]
		[Address(RVA = "0x126769C", Offset = "0x126769C", VA = "0x126769C")]
		private static bool CompareBytearrays(byte[] a, byte[] b)
		{
			return default(bool);
		}

		[Token(Token = "0x60007A7")]
		[Address(RVA = "0x1267768", Offset = "0x1267768", VA = "0x1267768")]
		public static RSACryptoServiceProvider CryptoServiceProviderFromPublicKeyInfo(byte[] x509key)
		{
			return null;
		}

		[Token(Token = "0x60007A8")]
		[Address(RVA = "0x1267CA8", Offset = "0x1267CA8", VA = "0x1267CA8")]
		public static RSACryptoServiceProvider CryptoServiceProviderFromPublicKeyInfo(string base64EncodedKey)
		{
			return null;
		}

		[Token(Token = "0x60007A9")]
		[Address(RVA = "0x1267DB8", Offset = "0x1267DB8", VA = "0x1267DB8")]
		public PEMKeyLoader()
		{
		}
	}
}
namespace Viveport
{
	[Token(Token = "0x200011D")]
	public class MainThreadDispatcher : MonoBehaviour
	{
		[Token(Token = "0x20006B7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x978F8C", Offset = "0x978F8C")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4001DB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MainThreadDispatcher <>4__this;

			[Token(Token = "0x4001DB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public IEnumerator action;

			[Token(Token = "0x60023A0")]
			[Address(RVA = "0xD8D134", Offset = "0xD8D134", VA = "0xD8D134")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x60023A1")]
			[Address(RVA = "0xD8D28C", Offset = "0xD8D28C", VA = "0xD8D28C")]
			internal void <Enqueue>b__0()
			{
			}
		}

		[Token(Token = "0x20006B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x978F9C", Offset = "0x978F9C")]
		private sealed class <ActionWrapper>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action action;

			[Token(Token = "0x1700034B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60023A5")]
				[Address(RVA = "0xD8D330", Offset = "0xD8D330", VA = "0xD8D330", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700034C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023A7")]
				[Address(RVA = "0xD8D3A0", Offset = "0xD8D3A0", VA = "0xD8D3A0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023A2")]
			[Address(RVA = "0xD8D1D8", Offset = "0xD8D1D8", VA = "0xD8D1D8")]
			[DebuggerHidden]
			public <ActionWrapper>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x60023A3")]
			[Address(RVA = "0xD8D2C0", Offset = "0xD8D2C0", VA = "0xD8D2C0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023A4")]
			[Address(RVA = "0xD8D2C4", Offset = "0xD8D2C4", VA = "0xD8D2C4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023A6")]
			[Address(RVA = "0xD8D338", Offset = "0xD8D338", VA = "0xD8D338", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006B9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x978FAC", Offset = "0x978FAC")]
		private sealed class <ActionWrapper>d__13<T1> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4001DB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4001DB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1> action;

			[Token(Token = "0x4001DB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x1700034D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60023AB")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700034E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023AD")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023A8")]
			[DebuggerHidden]
			public <ActionWrapper>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x60023A9")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023AA")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023AC")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006BA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x978FBC", Offset = "0x978FBC")]
		private sealed class <ActionWrapper>d__14<T1, T2> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4001DBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4001DBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1, T2> action;

			[Token(Token = "0x4001DBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x4001DBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T2 param2;

			[Token(Token = "0x1700034F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60023B1")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000350")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023B3")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023AE")]
			[DebuggerHidden]
			public <ActionWrapper>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x60023AF")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023B0")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023B2")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006BB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x978FCC", Offset = "0x978FCC")]
		private sealed class <ActionWrapper>d__15<T1, T2, T3> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4001DBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4001DC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1, T2, T3> action;

			[Token(Token = "0x4001DC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x4001DC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T2 param2;

			[Token(Token = "0x4001DC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T3 param3;

			[Token(Token = "0x17000351")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60023B7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000352")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023B9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023B4")]
			[DebuggerHidden]
			public <ActionWrapper>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x60023B5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023B6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023B8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x978FDC", Offset = "0x978FDC")]
		private sealed class <ActionWrapper>d__16<T1, T2, T3, T4> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4001DC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4001DC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1, T2, T3, T4> action;

			[Token(Token = "0x4001DC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x4001DC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T2 param2;

			[Token(Token = "0x4001DC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T3 param3;

			[Token(Token = "0x4001DCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T4 param4;

			[Token(Token = "0x17000353")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60023BD")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000354")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023BF")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023BA")]
			[DebuggerHidden]
			public <ActionWrapper>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x60023BB")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023BC")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023BE")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40006F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Queue<Action> actions;

		[Token(Token = "0x40006F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static MainThreadDispatcher instance;

		[Token(Token = "0x60007AB")]
		[Address(RVA = "0xD8CB54", Offset = "0xD8CB54", VA = "0xD8CB54")]
		private void Awake()
		{
		}

		[Token(Token = "0x60007AC")]
		[Address(RVA = "0xD8CC68", Offset = "0xD8CC68", VA = "0xD8CC68")]
		public void Update()
		{
		}

		[Token(Token = "0x60007AD")]
		[Address(RVA = "0xD8CE10", Offset = "0xD8CE10", VA = "0xD8CE10")]
		public static MainThreadDispatcher Instance()
		{
			return null;
		}

		[Token(Token = "0x60007AE")]
		[Address(RVA = "0xD8CF18", Offset = "0xD8CF18", VA = "0xD8CF18")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60007AF")]
		[Address(RVA = "0xD8CF80", Offset = "0xD8CF80", VA = "0xD8CF80")]
		public void Enqueue(IEnumerator action)
		{
		}

		[Token(Token = "0x60007B0")]
		[Address(RVA = "0xD8D13C", Offset = "0xD8D13C", VA = "0xD8D13C")]
		public void Enqueue(Action action)
		{
		}

		[Token(Token = "0x60007B1")]
		public void Enqueue<T1>(Action<T1> action, T1 param1)
		{
		}

		[Token(Token = "0x60007B2")]
		public void Enqueue<T1, T2>(Action<T1, T2> action, T1 param1, T2 param2)
		{
		}

		[Token(Token = "0x60007B3")]
		public void Enqueue<T1, T2, T3>(Action<T1, T2, T3> action, T1 param1, T2 param2, T3 param3)
		{
		}

		[Token(Token = "0x60007B4")]
		public void Enqueue<T1, T2, T3, T4>(Action<T1, T2, T3, T4> action, T1 param1, T2 param2, T3 param3, T4 param4)
		{
		}

		[Token(Token = "0x60007B5")]
		[Address(RVA = "0xD8D164", Offset = "0xD8D164", VA = "0xD8D164")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x985610", Offset = "0x985610")]
		private IEnumerator ActionWrapper(Action action)
		{
			return null;
		}

		[Token(Token = "0x60007B6")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x985674", Offset = "0x985674")]
		private IEnumerator ActionWrapper<T1>(Action<T1> action, T1 param1)
		{
			return null;
		}

		[Token(Token = "0x60007B7")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9856D8", Offset = "0x9856D8")]
		private IEnumerator ActionWrapper<T1, T2>(Action<T1, T2> action, T1 param1, T2 param2)
		{
			return null;
		}

		[Token(Token = "0x60007B8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98573C", Offset = "0x98573C")]
		private IEnumerator ActionWrapper<T1, T2, T3>(Action<T1, T2, T3> action, T1 param1, T2 param2, T3 param3)
		{
			return null;
		}

		[Token(Token = "0x60007B9")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9857A0", Offset = "0x9857A0")]
		private IEnumerator ActionWrapper<T1, T2, T3, T4>(Action<T1, T2, T3, T4> action, T1 param1, T2 param2, T3 param3, T4 param4)
		{
			return null;
		}

		[Token(Token = "0x60007BA")]
		[Address(RVA = "0xD8D204", Offset = "0xD8D204", VA = "0xD8D204")]
		public MainThreadDispatcher()
		{
		}
	}
	[Token(Token = "0x200011E")]
	public enum Locale
	{
		[Token(Token = "0x40006F8")]
		US,
		[Token(Token = "0x40006F9")]
		DE,
		[Token(Token = "0x40006FA")]
		JP,
		[Token(Token = "0x40006FB")]
		KR,
		[Token(Token = "0x40006FC")]
		RU,
		[Token(Token = "0x40006FD")]
		CN,
		[Token(Token = "0x40006FE")]
		TW,
		[Token(Token = "0x40006FF")]
		FR
	}
	[Token(Token = "0x200011F")]
	public delegate void StatusCallback(int nResult);
	[Token(Token = "0x2000120")]
	public delegate void StatusCallback2(int nResult, string message);
	[Token(Token = "0x2000121")]
	public delegate void QueryRuntimeModeCallback(int nResult, int emu);
	[Token(Token = "0x2000122")]
	public class Leaderboard
	{
		[Token(Token = "0x4000700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97EB14", Offset = "0x97EB14")]
		private int <Rank>k__BackingField;

		[Token(Token = "0x4000701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97EB24", Offset = "0x97EB24")]
		private int <Score>k__BackingField;

		[Token(Token = "0x4000702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97EB34", Offset = "0x97EB34")]
		private string <UserName>k__BackingField;

		[Token(Token = "0x1700009D")]
		public int Rank
		{
			[Token(Token = "0x60007C8")]
			[Address(RVA = "0xD8CB3C", Offset = "0xD8CB3C", VA = "0xD8CB3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985804", Offset = "0x985804")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60007C9")]
			[Address(RVA = "0xD8C98C", Offset = "0xD8C98C", VA = "0xD8C98C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985814", Offset = "0x985814")]
			set
			{
			}
		}

		[Token(Token = "0x1700009E")]
		public int Score
		{
			[Token(Token = "0x60007CA")]
			[Address(RVA = "0xD8CB44", Offset = "0xD8CB44", VA = "0xD8CB44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985824", Offset = "0x985824")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60007CB")]
			[Address(RVA = "0xD8C994", Offset = "0xD8C994", VA = "0xD8C994")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985834", Offset = "0x985834")]
			set
			{
			}
		}

		[Token(Token = "0x1700009F")]
		public string UserName
		{
			[Token(Token = "0x60007CC")]
			[Address(RVA = "0xD8CB4C", Offset = "0xD8CB4C", VA = "0xD8CB4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985844", Offset = "0x985844")]
			get
			{
				return null;
			}
			[Token(Token = "0x60007CD")]
			[Address(RVA = "0xD8C984", Offset = "0xD8C984", VA = "0xD8C984")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985854", Offset = "0x985854")]
			set
			{
			}
		}

		[Token(Token = "0x60007CE")]
		[Address(RVA = "0xD8C97C", Offset = "0xD8C97C", VA = "0xD8C97C")]
		public Leaderboard()
		{
		}
	}
	[Token(Token = "0x2000123")]
	public class Api
	{
		[Token(Token = "0x20006BD")]
		public abstract class LicenseChecker
		{
			[Token(Token = "0x60023C0")]
			public abstract void OnSuccess(long issueTime, long expirationTime, int latestVersion, bool updateRequired);

			[Token(Token = "0x60023C1")]
			public abstract void OnFailure(int errorCode, string errorMessage);

			[Token(Token = "0x60023C2")]
			[Address(RVA = "0xD807D8", Offset = "0xD807D8", VA = "0xD807D8")]
			protected LicenseChecker()
			{
			}
		}

		[Token(Token = "0x4000703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static readonly List<GetLicenseCallback> InternalGetLicenseCallbacks;

		[Token(Token = "0x4000704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal static readonly List<Viveport.Internal.StatusCallback> InternalStatusCallbacks;

		[Token(Token = "0x4000705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal static readonly List<Viveport.Internal.QueryRuntimeModeCallback> InternalQueryRunTimeCallbacks;

		[Token(Token = "0x4000706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal static readonly List<Viveport.Internal.StatusCallback2> InternalStatusCallback2s;

		[Token(Token = "0x4000707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal static readonly List<LicenseChecker> InternalLicenseCheckers;

		[Token(Token = "0x4000708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static readonly string VERSION;

		[Token(Token = "0x4000709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static string _appId;

		[Token(Token = "0x400070A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static string _appKey;

		[Token(Token = "0x60007CF")]
		[Address(RVA = "0xD7FD64", Offset = "0xD7FD64", VA = "0xD7FD64")]
		public static void GetLicense(LicenseChecker checker, string appId, string appKey)
		{
		}

		[Token(Token = "0x60007D0")]
		[Address(RVA = "0xD80050", Offset = "0xD80050", VA = "0xD80050")]
		public static int Init(StatusCallback callback, string appId)
		{
			return default(int);
		}

		[Token(Token = "0x60007D1")]
		[Address(RVA = "0xD80338", Offset = "0xD80338", VA = "0xD80338")]
		public static int Shutdown(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x60007D2")]
		[Address(RVA = "0xD80550", Offset = "0xD80550", VA = "0xD80550")]
		public static string Version()
		{
			return null;
		}

		[Token(Token = "0x60007D3")]
		[Address(RVA = "0xD8066C", Offset = "0xD8066C", VA = "0xD8066C")]
		public Api()
		{
		}
	}
	[Token(Token = "0x2000124")]
	public class User
	{
		[Token(Token = "0x60007D5")]
		[Address(RVA = "0xD8E2D8", Offset = "0xD8E2D8", VA = "0xD8E2D8")]
		public static string GetUserId()
		{
			return null;
		}

		[Token(Token = "0x60007D6")]
		[Address(RVA = "0xD8E30C", Offset = "0xD8E30C", VA = "0xD8E30C")]
		public static string GetUserName()
		{
			return null;
		}

		[Token(Token = "0x60007D7")]
		[Address(RVA = "0xD8E340", Offset = "0xD8E340", VA = "0xD8E340")]
		public static string GetUserAvatarUrl()
		{
			return null;
		}

		[Token(Token = "0x60007D8")]
		[Address(RVA = "0xD8E374", Offset = "0xD8E374", VA = "0xD8E374")]
		public User()
		{
		}
	}
	[Token(Token = "0x2000125")]
	public class UserStats
	{
		[Token(Token = "0x20006BE")]
		public enum LeaderBoardRequestType
		{
			[Token(Token = "0x4001DCC")]
			GlobalData,
			[Token(Token = "0x4001DCD")]
			GlobalDataAroundUser,
			[Token(Token = "0x4001DCE")]
			LocalData,
			[Token(Token = "0x4001DCF")]
			LocalDataAroundUser
		}

		[Token(Token = "0x20006BF")]
		public enum LeaderBoardTimeRange
		{
			[Token(Token = "0x4001DD1")]
			AllTime,
			[Token(Token = "0x4001DD2")]
			Daily,
			[Token(Token = "0x4001DD3")]
			Weekly,
			[Token(Token = "0x4001DD4")]
			Monthly
		}

		[Token(Token = "0x20006C0")]
		public enum LeaderBoardSortMethod
		{
			[Token(Token = "0x4001DD6")]
			None,
			[Token(Token = "0x4001DD7")]
			Ascending,
			[Token(Token = "0x4001DD8")]
			Descending
		}

		[Token(Token = "0x20006C1")]
		public enum LeaderBoardDiaplayType
		{
			[Token(Token = "0x4001DDA")]
			None,
			[Token(Token = "0x4001DDB")]
			Numeric,
			[Token(Token = "0x4001DDC")]
			TimeSeconds,
			[Token(Token = "0x4001DDD")]
			TimeMilliSeconds
		}

		[Token(Token = "0x20006C2")]
		public enum LeaderBoardScoreMethod
		{
			[Token(Token = "0x4001DDF")]
			None,
			[Token(Token = "0x4001DE0")]
			KeepBest,
			[Token(Token = "0x4001DE1")]
			ForceUpdate
		}

		[Token(Token = "0x20006C3")]
		public enum AchievementDisplayAttribute
		{
			[Token(Token = "0x4001DE3")]
			Name,
			[Token(Token = "0x4001DE4")]
			Desc,
			[Token(Token = "0x4001DE5")]
			Hidden
		}

		[Token(Token = "0x60007D9")]
		[Address(RVA = "0xD8E37C", Offset = "0xD8E37C", VA = "0xD8E37C")]
		public static int IsReady(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x60007DA")]
		[Address(RVA = "0xD8E484", Offset = "0xD8E484", VA = "0xD8E484")]
		public static int DownloadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x60007DB")]
		[Address(RVA = "0xD8E58C", Offset = "0xD8E58C", VA = "0xD8E58C")]
		public static int GetStat(string name, int defaultValue)
		{
			return default(int);
		}

		[Token(Token = "0x60007DC")]
		[Address(RVA = "0xD8E590", Offset = "0xD8E590", VA = "0xD8E590")]
		public static float GetStat(string name, float defaultValue)
		{
			return default(float);
		}

		[Token(Token = "0x60007DD")]
		[Address(RVA = "0xD8E594", Offset = "0xD8E594", VA = "0xD8E594")]
		public static void SetStat(string name, int value)
		{
		}

		[Token(Token = "0x60007DE")]
		[Address(RVA = "0xD8E598", Offset = "0xD8E598", VA = "0xD8E598")]
		public static void SetStat(string name, float value)
		{
		}

		[Token(Token = "0x60007DF")]
		[Address(RVA = "0xD8E59C", Offset = "0xD8E59C", VA = "0xD8E59C")]
		public static int UploadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x60007E0")]
		[Address(RVA = "0xD8E6A4", Offset = "0xD8E6A4", VA = "0xD8E6A4")]
		public static bool GetAchievement(string pchName)
		{
			return default(bool);
		}

		[Token(Token = "0x60007E1")]
		[Address(RVA = "0xD8E6A8", Offset = "0xD8E6A8", VA = "0xD8E6A8")]
		public static int GetAchievementUnlockTime(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x60007E2")]
		[Address(RVA = "0xD8E6AC", Offset = "0xD8E6AC", VA = "0xD8E6AC")]
		public static string GetAchievementIcon(string pchName)
		{
			return null;
		}

		[Token(Token = "0x60007E3")]
		[Address(RVA = "0xD8E6B0", Offset = "0xD8E6B0", VA = "0xD8E6B0")]
		public static string GetAchievementDisplayAttribute(string pchName, AchievementDisplayAttribute attr)
		{
			return null;
		}

		[Token(Token = "0x60007E4")]
		[Address(RVA = "0xD8E6B4", Offset = "0xD8E6B4", VA = "0xD8E6B4")]
		public static string GetAchievementDisplayAttribute(string pchName, AchievementDisplayAttribute attr, Locale locale)
		{
			return null;
		}

		[Token(Token = "0x60007E5")]
		[Address(RVA = "0xD8E6B8", Offset = "0xD8E6B8", VA = "0xD8E6B8")]
		public static int SetAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x60007E6")]
		[Address(RVA = "0xD8E6BC", Offset = "0xD8E6BC", VA = "0xD8E6BC")]
		public static int ClearAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x60007E7")]
		[Address(RVA = "0xD8E6C0", Offset = "0xD8E6C0", VA = "0xD8E6C0")]
		public static int DownloadLeaderboardScores(StatusCallback callback, string pchLeaderboardName, LeaderBoardRequestType eLeaderboardDataRequest, LeaderBoardTimeRange eLeaderboardDataTimeRange, int nRangeStart, int nRangeEnd)
		{
			return default(int);
		}

		[Token(Token = "0x60007E8")]
		[Address(RVA = "0xD8E808", Offset = "0xD8E808", VA = "0xD8E808")]
		public static int UploadLeaderboardScore(StatusCallback callback, string pchLeaderboardName, int nScore)
		{
			return default(int);
		}

		[Token(Token = "0x60007E9")]
		[Address(RVA = "0xD8E928", Offset = "0xD8E928", VA = "0xD8E928")]
		public static Leaderboard GetLeaderboardScore(int index)
		{
			return null;
		}

		[Token(Token = "0x60007EA")]
		[Address(RVA = "0xD8E92C", Offset = "0xD8E92C", VA = "0xD8E92C")]
		public static int GetLeaderboardScoreCount()
		{
			return default(int);
		}

		[Token(Token = "0x60007EB")]
		[Address(RVA = "0xD8E930", Offset = "0xD8E930", VA = "0xD8E930")]
		public static LeaderBoardSortMethod GetLeaderboardSortMethod()
		{
			return default(LeaderBoardSortMethod);
		}

		[Token(Token = "0x60007EC")]
		[Address(RVA = "0xD8E934", Offset = "0xD8E934", VA = "0xD8E934")]
		public static LeaderBoardDiaplayType GetLeaderboardDisplayType()
		{
			return default(LeaderBoardDiaplayType);
		}

		[Token(Token = "0x60007ED")]
		[Address(RVA = "0xD8E938", Offset = "0xD8E938", VA = "0xD8E938")]
		public UserStats()
		{
		}
	}
	[Token(Token = "0x2000126")]
	public class ArcadeLeaderboard
	{
		[Token(Token = "0x60007EE")]
		[Address(RVA = "0xD807E8", Offset = "0xD807E8", VA = "0xD807E8")]
		public ArcadeLeaderboard()
		{
		}
	}
	[Token(Token = "0x2000127")]
	public class IAPurchase
	{
		[Token(Token = "0x20006C4")]
		private class IAPHandler : BaseHandler
		{
			[Token(Token = "0x4001DE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static IAPurchaseListener listener;

			[Token(Token = "0x60023C3")]
			[Address(RVA = "0xD80F04", Offset = "0xD80F04", VA = "0xD80F04")]
			public IAPHandler(IAPurchaseListener cb)
			{
			}

			[Token(Token = "0x60023C4")]
			[Address(RVA = "0xD80F70", Offset = "0xD80F70", VA = "0xD80F70")]
			public IAPurchaseCallback getIsReadyHandler()
			{
				return null;
			}

			[Token(Token = "0x60023C5")]
			[Address(RVA = "0xD83018", Offset = "0xD83018", VA = "0xD83018", Slot = "4")]
			protected override void IsReadyHandler(int code, string message)
			{
			}

			[Token(Token = "0x60023C6")]
			[Address(RVA = "0xD81210", Offset = "0xD81210", VA = "0xD81210")]
			public IAPurchaseCallback getRequestHandler()
			{
				return null;
			}

			[Token(Token = "0x60023C7")]
			[Address(RVA = "0xD8355C", Offset = "0xD8355C", VA = "0xD8355C", Slot = "5")]
			protected override void RequestHandler(int code, string message)
			{
			}

			[Token(Token = "0x60023C8")]
			[Address(RVA = "0xD8172C", Offset = "0xD8172C", VA = "0xD8172C")]
			public IAPurchaseCallback getPurchaseHandler()
			{
				return null;
			}

			[Token(Token = "0x60023C9")]
			[Address(RVA = "0xD83AA0", Offset = "0xD83AA0", VA = "0xD83AA0", Slot = "6")]
			protected override void PurchaseHandler(int code, string message)
			{
			}

			[Token(Token = "0x60023CA")]
			[Address(RVA = "0xD819CC", Offset = "0xD819CC", VA = "0xD819CC")]
			public IAPurchaseCallback getQueryHandler()
			{
				return null;
			}

			[Token(Token = "0x60023CB")]
			[Address(RVA = "0xD8418C", Offset = "0xD8418C", VA = "0xD8418C", Slot = "7")]
			protected override void QueryHandler(int code, string message)
			{
			}

			[Token(Token = "0x60023CC")]
			[Address(RVA = "0xD81C5C", Offset = "0xD81C5C", VA = "0xD81C5C")]
			public IAPurchaseCallback getQueryListHandler()
			{
				return null;
			}

			[Token(Token = "0x60023CD")]
			[Address(RVA = "0xD84D70", Offset = "0xD84D70", VA = "0xD84D70", Slot = "8")]
			protected override void QueryListHandler(int code, string message)
			{
			}

			[Token(Token = "0x60023CE")]
			[Address(RVA = "0xD81E98", Offset = "0xD81E98", VA = "0xD81E98")]
			public IAPurchaseCallback getBalanceHandler()
			{
				return null;
			}

			[Token(Token = "0x60023CF")]
			[Address(RVA = "0xD85F84", Offset = "0xD85F84", VA = "0xD85F84", Slot = "9")]
			protected override void BalanceHandler(int code, string message)
			{
			}

			[Token(Token = "0x60023D0")]
			[Address(RVA = "0xD8212C", Offset = "0xD8212C", VA = "0xD8212C")]
			public IAPurchaseCallback getRequestSubscriptionHandler()
			{
				return null;
			}

			[Token(Token = "0x60023D1")]
			[Address(RVA = "0xD86674", Offset = "0xD86674", VA = "0xD86674", Slot = "10")]
			protected override void RequestSubscriptionHandler(int code, string message)
			{
			}

			[Token(Token = "0x60023D2")]
			[Address(RVA = "0xD825F8", Offset = "0xD825F8", VA = "0xD825F8")]
			public IAPurchaseCallback getRequestSubscriptionWithPlanIDHandler()
			{
				return null;
			}

			[Token(Token = "0x60023D3")]
			[Address(RVA = "0xD86B9C", Offset = "0xD86B9C", VA = "0xD86B9C", Slot = "11")]
			protected override void RequestSubscriptionWithPlanIDHandler(int code, string message)
			{
			}

			[Token(Token = "0x60023D4")]
			[Address(RVA = "0xD82898", Offset = "0xD82898", VA = "0xD82898")]
			public IAPurchaseCallback getSubscribeHandler()
			{
				return null;
			}

			[Token(Token = "0x60023D5")]
			[Address(RVA = "0xD870C4", Offset = "0xD870C4", VA = "0xD870C4", Slot = "12")]
			protected override void SubscribeHandler(int code, string message)
			{
			}

			[Token(Token = "0x60023D6")]
			[Address(RVA = "0xD82B38", Offset = "0xD82B38", VA = "0xD82B38")]
			public IAPurchaseCallback getQuerySubscriptionHandler()
			{
				return null;
			}

			[Token(Token = "0x60023D7")]
			[Address(RVA = "0xD87878", Offset = "0xD87878", VA = "0xD87878", Slot = "13")]
			protected override void QuerySubscriptionHandler(int code, string message)
			{
			}

			[Token(Token = "0x60023D8")]
			[Address(RVA = "0xD82DD8", Offset = "0xD82DD8", VA = "0xD82DD8")]
			public IAPurchaseCallback getCancelSubscriptionHandler()
			{
				return null;
			}

			[Token(Token = "0x60023D9")]
			[Address(RVA = "0xD87E20", Offset = "0xD87E20", VA = "0xD87E20", Slot = "14")]
			protected override void CancelSubscriptionHandler(int code, string message)
			{
			}
		}

		[Token(Token = "0x20006C5")]
		private abstract class BaseHandler
		{
			[Token(Token = "0x60023DA")]
			protected abstract void IsReadyHandler(int code, string message);

			[Token(Token = "0x60023DB")]
			protected abstract void RequestHandler(int code, string message);

			[Token(Token = "0x60023DC")]
			protected abstract void PurchaseHandler(int code, string message);

			[Token(Token = "0x60023DD")]
			protected abstract void QueryHandler(int code, string message);

			[Token(Token = "0x60023DE")]
			protected abstract void QueryListHandler(int code, string message);

			[Token(Token = "0x60023DF")]
			protected abstract void BalanceHandler(int code, string message);

			[Token(Token = "0x60023E0")]
			protected abstract void RequestSubscriptionHandler(int code, string message);

			[Token(Token = "0x60023E1")]
			protected abstract void RequestSubscriptionWithPlanIDHandler(int code, string message);

			[Token(Token = "0x60023E2")]
			protected abstract void SubscribeHandler(int code, string message);

			[Token(Token = "0x60023E3")]
			protected abstract void QuerySubscriptionHandler(int code, string message);

			[Token(Token = "0x60023E4")]
			protected abstract void CancelSubscriptionHandler(int code, string message);

			[Token(Token = "0x60023E5")]
			[Address(RVA = "0xD83000", Offset = "0xD83000", VA = "0xD83000")]
			protected BaseHandler()
			{
			}
		}

		[Token(Token = "0x20006C6")]
		public class IAPurchaseListener
		{
			[Token(Token = "0x60023E6")]
			[Address(RVA = "0xD88298", Offset = "0xD88298", VA = "0xD88298", Slot = "4")]
			public virtual void OnSuccess(string pchCurrencyName)
			{
			}

			[Token(Token = "0x60023E7")]
			[Address(RVA = "0xD8829C", Offset = "0xD8829C", VA = "0xD8829C", Slot = "5")]
			public virtual void OnRequestSuccess(string pchPurchaseId)
			{
			}

			[Token(Token = "0x60023E8")]
			[Address(RVA = "0xD882A0", Offset = "0xD882A0", VA = "0xD882A0", Slot = "6")]
			public virtual void OnPurchaseSuccess(string pchPurchaseId)
			{
			}

			[Token(Token = "0x60023E9")]
			[Address(RVA = "0xD882A4", Offset = "0xD882A4", VA = "0xD882A4", Slot = "7")]
			public virtual void OnQuerySuccess(QueryResponse response)
			{
			}

			[Token(Token = "0x60023EA")]
			[Address(RVA = "0xD882A8", Offset = "0xD882A8", VA = "0xD882A8", Slot = "8")]
			public virtual void OnQuerySuccess(QueryListResponse response)
			{
			}

			[Token(Token = "0x60023EB")]
			[Address(RVA = "0xD882AC", Offset = "0xD882AC", VA = "0xD882AC", Slot = "9")]
			public virtual void OnBalanceSuccess(string pchBalance)
			{
			}

			[Token(Token = "0x60023EC")]
			[Address(RVA = "0xD882B0", Offset = "0xD882B0", VA = "0xD882B0", Slot = "10")]
			public virtual void OnFailure(int nCode, string pchMessage)
			{
			}

			[Token(Token = "0x60023ED")]
			[Address(RVA = "0xD882B4", Offset = "0xD882B4", VA = "0xD882B4", Slot = "11")]
			public virtual void OnRequestSubscriptionSuccess(string pchSubscriptionId)
			{
			}

			[Token(Token = "0x60023EE")]
			[Address(RVA = "0xD882B8", Offset = "0xD882B8", VA = "0xD882B8", Slot = "12")]
			public virtual void OnRequestSubscriptionWithPlanIDSuccess(string pchSubscriptionId)
			{
			}

			[Token(Token = "0x60023EF")]
			[Address(RVA = "0xD882BC", Offset = "0xD882BC", VA = "0xD882BC", Slot = "13")]
			public virtual void OnSubscribeSuccess(string pchSubscriptionId)
			{
			}

			[Token(Token = "0x60023F0")]
			[Address(RVA = "0xD882C0", Offset = "0xD882C0", VA = "0xD882C0", Slot = "14")]
			public virtual void OnQuerySubscriptionSuccess(Subscription[] subscriptionlist)
			{
			}

			[Token(Token = "0x60023F1")]
			[Address(RVA = "0xD882C4", Offset = "0xD882C4", VA = "0xD882C4", Slot = "15")]
			public virtual void OnCancelSubscriptionSuccess(bool bCanceled)
			{
			}

			[Token(Token = "0x60023F2")]
			[Address(RVA = "0xD882C8", Offset = "0xD882C8", VA = "0xD882C8")]
			public IAPurchaseListener()
			{
			}
		}

		[Token(Token = "0x20006C7")]
		public class QueryResponse
		{
			[Token(Token = "0x4001DE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x983A7C", Offset = "0x983A7C")]
			private string <order_id>k__BackingField;

			[Token(Token = "0x4001DE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x983A8C", Offset = "0x983A8C")]
			private string <purchase_id>k__BackingField;

			[Token(Token = "0x4001DE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x983A9C", Offset = "0x983A9C")]
			private string <status>k__BackingField;

			[Token(Token = "0x4001DEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x983AAC", Offset = "0x983AAC")]
			private string <price>k__BackingField;

			[Token(Token = "0x4001DEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x983ABC", Offset = "0x983ABC")]
			private string <currency>k__BackingField;

			[Token(Token = "0x4001DEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x983ACC", Offset = "0x983ACC")]
			private long <paid_timestamp>k__BackingField;

			[Token(Token = "0x17000355")]
			public string order_id
			{
				[Token(Token = "0x60023F3")]
				[Address(RVA = "0xD882E8", Offset = "0xD882E8", VA = "0xD882E8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A480", Offset = "0x98A480")]
				get
				{
					return null;
				}
				[Token(Token = "0x60023F4")]
				[Address(RVA = "0xD84D48", Offset = "0xD84D48", VA = "0xD84D48")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A490", Offset = "0x98A490")]
				set
				{
				}
			}

			[Token(Token = "0x17000356")]
			public string purchase_id
			{
				[Token(Token = "0x60023F5")]
				[Address(RVA = "0xD882F0", Offset = "0xD882F0", VA = "0xD882F0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A4A0", Offset = "0x98A4A0")]
				get
				{
					return null;
				}
				[Token(Token = "0x60023F6")]
				[Address(RVA = "0xD84D40", Offset = "0xD84D40", VA = "0xD84D40")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A4B0", Offset = "0x98A4B0")]
				set
				{
				}
			}

			[Token(Token = "0x17000357")]
			public string status
			{
				[Token(Token = "0x60023F7")]
				[Address(RVA = "0xD882F8", Offset = "0xD882F8", VA = "0xD882F8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A4C0", Offset = "0x98A4C0")]
				get
				{
					return null;
				}
				[Token(Token = "0x60023F8")]
				[Address(RVA = "0xD84D68", Offset = "0xD84D68", VA = "0xD84D68")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A4D0", Offset = "0x98A4D0")]
				set
				{
				}
			}

			[Token(Token = "0x17000358")]
			public string price
			{
				[Token(Token = "0x60023F9")]
				[Address(RVA = "0xD88300", Offset = "0xD88300", VA = "0xD88300")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A4E0", Offset = "0x98A4E0")]
				get
				{
					return null;
				}
				[Token(Token = "0x60023FA")]
				[Address(RVA = "0xD84D50", Offset = "0xD84D50", VA = "0xD84D50")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A4F0", Offset = "0x98A4F0")]
				set
				{
				}
			}

			[Token(Token = "0x17000359")]
			public string currency
			{
				[Token(Token = "0x60023FB")]
				[Address(RVA = "0xD88308", Offset = "0xD88308", VA = "0xD88308")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A500", Offset = "0x98A500")]
				get
				{
					return null;
				}
				[Token(Token = "0x60023FC")]
				[Address(RVA = "0xD84D58", Offset = "0xD84D58", VA = "0xD84D58")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A510", Offset = "0x98A510")]
				set
				{
				}
			}

			[Token(Token = "0x1700035A")]
			public long paid_timestamp
			{
				[Token(Token = "0x60023FD")]
				[Address(RVA = "0xD88310", Offset = "0xD88310", VA = "0xD88310")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A520", Offset = "0x98A520")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x60023FE")]
				[Address(RVA = "0xD84D60", Offset = "0xD84D60", VA = "0xD84D60")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A530", Offset = "0x98A530")]
				set
				{
				}
			}

			[Token(Token = "0x60023FF")]
			[Address(RVA = "0xD84D38", Offset = "0xD84D38", VA = "0xD84D38")]
			public QueryResponse()
			{
			}
		}

		[Token(Token = "0x20006C8")]
		public class QueryResponse2
		{
			[Token(Token = "0x4001DED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x983ADC", Offset = "0x983ADC")]
			private string <order_id>k__BackingField;

			[Token(Token = "0x4001DEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x983AEC", Offset = "0x983AEC")]
			private string <app_id>k__BackingField;

			[Token(Token = "0x4001DEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x983AFC", Offset = "0x983AFC")]
			private string <purchase_id>k__BackingField;

			[Token(Token = "0x4001DF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x983B0C", Offset = "0x983B0C")]
			private string <user_data>k__BackingField;

			[Token(Token = "0x4001DF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x983B1C", Offset = "0x983B1C")]
			private string <price>k__BackingField;

			[Token(Token = "0x4001DF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x983B2C", Offset = "0x983B2C")]
			private string <currency>k__BackingField;

			[Token(Token = "0x4001DF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x983B3C", Offset = "0x983B3C")]
			private long <paid_timestamp>k__BackingField;

			[Token(Token = "0x1700035B")]
			public string order_id
			{
				[Token(Token = "0x6002400")]
				[Address(RVA = "0xD88318", Offset = "0xD88318", VA = "0xD88318")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A540", Offset = "0x98A540")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002401")]
				[Address(RVA = "0xD85F44", Offset = "0xD85F44", VA = "0xD85F44")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A550", Offset = "0x98A550")]
				set
				{
				}
			}

			[Token(Token = "0x1700035C")]
			public string app_id
			{
				[Token(Token = "0x6002402")]
				[Address(RVA = "0xD88320", Offset = "0xD88320", VA = "0xD88320")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A560", Offset = "0x98A560")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002403")]
				[Address(RVA = "0xD85F2C", Offset = "0xD85F2C", VA = "0xD85F2C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A570", Offset = "0x98A570")]
				set
				{
				}
			}

			[Token(Token = "0x1700035D")]
			public string purchase_id
			{
				[Token(Token = "0x6002404")]
				[Address(RVA = "0xD88328", Offset = "0xD88328", VA = "0xD88328")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A580", Offset = "0x98A580")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002405")]
				[Address(RVA = "0xD85F3C", Offset = "0xD85F3C", VA = "0xD85F3C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A590", Offset = "0x98A590")]
				set
				{
				}
			}

			[Token(Token = "0x1700035E")]
			public string user_data
			{
				[Token(Token = "0x6002406")]
				[Address(RVA = "0xD88330", Offset = "0xD88330", VA = "0xD88330")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A5A0", Offset = "0x98A5A0")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002407")]
				[Address(RVA = "0xD85F54", Offset = "0xD85F54", VA = "0xD85F54")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A5B0", Offset = "0x98A5B0")]
				set
				{
				}
			}

			[Token(Token = "0x1700035F")]
			public string price
			{
				[Token(Token = "0x6002408")]
				[Address(RVA = "0xD88338", Offset = "0xD88338", VA = "0xD88338")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A5C0", Offset = "0x98A5C0")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002409")]
				[Address(RVA = "0xD85F4C", Offset = "0xD85F4C", VA = "0xD85F4C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A5D0", Offset = "0x98A5D0")]
				set
				{
				}
			}

			[Token(Token = "0x17000360")]
			public string currency
			{
				[Token(Token = "0x600240A")]
				[Address(RVA = "0xD88340", Offset = "0xD88340", VA = "0xD88340")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A5E0", Offset = "0x98A5E0")]
				get
				{
					return null;
				}
				[Token(Token = "0x600240B")]
				[Address(RVA = "0xD85F34", Offset = "0xD85F34", VA = "0xD85F34")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A5F0", Offset = "0x98A5F0")]
				set
				{
				}
			}

			[Token(Token = "0x17000361")]
			public long paid_timestamp
			{
				[Token(Token = "0x600240C")]
				[Address(RVA = "0xD88348", Offset = "0xD88348", VA = "0xD88348")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A600", Offset = "0x98A600")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x600240D")]
				[Address(RVA = "0xD85F5C", Offset = "0xD85F5C", VA = "0xD85F5C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A610", Offset = "0x98A610")]
				set
				{
				}
			}

			[Token(Token = "0x600240E")]
			[Address(RVA = "0xD85F24", Offset = "0xD85F24", VA = "0xD85F24")]
			public QueryResponse2()
			{
			}
		}

		[Token(Token = "0x20006C9")]
		public class QueryListResponse
		{
			[Token(Token = "0x4001DF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x983B4C", Offset = "0x983B4C")]
			private int <total>k__BackingField;

			[Token(Token = "0x4001DF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x983B5C", Offset = "0x983B5C")]
			private int <from>k__BackingField;

			[Token(Token = "0x4001DF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x983B6C", Offset = "0x983B6C")]
			private int <to>k__BackingField;

			[Token(Token = "0x4001DF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<QueryResponse2> purchaseList;

			[Token(Token = "0x17000362")]
			public int total
			{
				[Token(Token = "0x600240F")]
				[Address(RVA = "0xD882D0", Offset = "0xD882D0", VA = "0xD882D0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A620", Offset = "0x98A620")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6002410")]
				[Address(RVA = "0xD85F6C", Offset = "0xD85F6C", VA = "0xD85F6C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A630", Offset = "0x98A630")]
				set
				{
				}
			}

			[Token(Token = "0x17000363")]
			public int from
			{
				[Token(Token = "0x6002411")]
				[Address(RVA = "0xD882D8", Offset = "0xD882D8", VA = "0xD882D8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A640", Offset = "0x98A640")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6002412")]
				[Address(RVA = "0xD85F74", Offset = "0xD85F74", VA = "0xD85F74")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A650", Offset = "0x98A650")]
				set
				{
				}
			}

			[Token(Token = "0x17000364")]
			public int to
			{
				[Token(Token = "0x6002413")]
				[Address(RVA = "0xD882E0", Offset = "0xD882E0", VA = "0xD882E0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A660", Offset = "0x98A660")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6002414")]
				[Address(RVA = "0xD85F7C", Offset = "0xD85F7C", VA = "0xD85F7C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A670", Offset = "0x98A670")]
				set
				{
				}
			}

			[Token(Token = "0x6002415")]
			[Address(RVA = "0xD85F64", Offset = "0xD85F64", VA = "0xD85F64")]
			public QueryListResponse()
			{
			}
		}

		[Token(Token = "0x20006CA")]
		public class StatusDetailTransaction
		{
			[Token(Token = "0x4001DF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x983B7C", Offset = "0x983B7C")]
			private long <create_time>k__BackingField;

			[Token(Token = "0x4001DF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x983B8C", Offset = "0x983B8C")]
			private string <payment_method>k__BackingField;

			[Token(Token = "0x4001DFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x983B9C", Offset = "0x983B9C")]
			private string <status>k__BackingField;

			[Token(Token = "0x17000365")]
			public long create_time
			{
				[Token(Token = "0x6002416")]
				[Address(RVA = "0xD883B8", Offset = "0xD883B8", VA = "0xD883B8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A680", Offset = "0x98A680")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x6002417")]
				[Address(RVA = "0xD883C0", Offset = "0xD883C0", VA = "0xD883C0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A690", Offset = "0x98A690")]
				set
				{
				}
			}

			[Token(Token = "0x17000366")]
			public string payment_method
			{
				[Token(Token = "0x6002418")]
				[Address(RVA = "0xD883C8", Offset = "0xD883C8", VA = "0xD883C8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A6A0", Offset = "0x98A6A0")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002419")]
				[Address(RVA = "0xD883D0", Offset = "0xD883D0", VA = "0xD883D0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A6B0", Offset = "0x98A6B0")]
				set
				{
				}
			}

			[Token(Token = "0x17000367")]
			public string status
			{
				[Token(Token = "0x600241A")]
				[Address(RVA = "0xD883D8", Offset = "0xD883D8", VA = "0xD883D8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A6C0", Offset = "0x98A6C0")]
				get
				{
					return null;
				}
				[Token(Token = "0x600241B")]
				[Address(RVA = "0xD883E0", Offset = "0xD883E0", VA = "0xD883E0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A6D0", Offset = "0x98A6D0")]
				set
				{
				}
			}

			[Token(Token = "0x600241C")]
			[Address(RVA = "0xD883E8", Offset = "0xD883E8", VA = "0xD883E8")]
			public StatusDetailTransaction()
			{
			}
		}

		[Token(Token = "0x20006CB")]
		public class StatusDetail
		{
			[Token(Token = "0x4001DFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x983BAC", Offset = "0x983BAC")]
			private long <date_next_charge>k__BackingField;

			[Token(Token = "0x4001DFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x983BBC", Offset = "0x983BBC")]
			private StatusDetailTransaction[] <transactions>k__BackingField;

			[Token(Token = "0x4001DFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x983BCC", Offset = "0x983BCC")]
			private string <cancel_reason>k__BackingField;

			[Token(Token = "0x17000368")]
			public long date_next_charge
			{
				[Token(Token = "0x600241D")]
				[Address(RVA = "0xD88380", Offset = "0xD88380", VA = "0xD88380")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A6E0", Offset = "0x98A6E0")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x600241E")]
				[Address(RVA = "0xD88388", Offset = "0xD88388", VA = "0xD88388")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A6F0", Offset = "0x98A6F0")]
				set
				{
				}
			}

			[Token(Token = "0x17000369")]
			public StatusDetailTransaction[] transactions
			{
				[Token(Token = "0x600241F")]
				[Address(RVA = "0xD88390", Offset = "0xD88390", VA = "0xD88390")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A700", Offset = "0x98A700")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002420")]
				[Address(RVA = "0xD88398", Offset = "0xD88398", VA = "0xD88398")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A710", Offset = "0x98A710")]
				set
				{
				}
			}

			[Token(Token = "0x1700036A")]
			public string cancel_reason
			{
				[Token(Token = "0x6002421")]
				[Address(RVA = "0xD883A0", Offset = "0xD883A0", VA = "0xD883A0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A720", Offset = "0x98A720")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002422")]
				[Address(RVA = "0xD883A8", Offset = "0xD883A8", VA = "0xD883A8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A730", Offset = "0x98A730")]
				set
				{
				}
			}

			[Token(Token = "0x6002423")]
			[Address(RVA = "0xD883B0", Offset = "0xD883B0", VA = "0xD883B0")]
			public StatusDetail()
			{
			}
		}

		[Token(Token = "0x20006CC")]
		public class TimePeriod
		{
			[Token(Token = "0x4001DFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x983BDC", Offset = "0x983BDC")]
			private string <time_type>k__BackingField;

			[Token(Token = "0x4001DFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x983BEC", Offset = "0x983BEC")]
			private int <value>k__BackingField;

			[Token(Token = "0x1700036B")]
			public string time_type
			{
				[Token(Token = "0x6002424")]
				[Address(RVA = "0xD884C8", Offset = "0xD884C8", VA = "0xD884C8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A740", Offset = "0x98A740")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002425")]
				[Address(RVA = "0xD884D0", Offset = "0xD884D0", VA = "0xD884D0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A750", Offset = "0x98A750")]
				set
				{
				}
			}

			[Token(Token = "0x1700036C")]
			public int value
			{
				[Token(Token = "0x6002426")]
				[Address(RVA = "0xD884D8", Offset = "0xD884D8", VA = "0xD884D8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A760", Offset = "0x98A760")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6002427")]
				[Address(RVA = "0xD884E0", Offset = "0xD884E0", VA = "0xD884E0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A770", Offset = "0x98A770")]
				set
				{
				}
			}

			[Token(Token = "0x6002428")]
			[Address(RVA = "0xD884E8", Offset = "0xD884E8", VA = "0xD884E8")]
			public TimePeriod()
			{
			}
		}

		[Token(Token = "0x20006CD")]
		public class Subscription
		{
			[Token(Token = "0x4001E00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x983BFC", Offset = "0x983BFC")]
			private string <app_id>k__BackingField;

			[Token(Token = "0x4001E01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x983C0C", Offset = "0x983C0C")]
			private string <order_id>k__BackingField;

			[Token(Token = "0x4001E02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x983C1C", Offset = "0x983C1C")]
			private string <subscription_id>k__BackingField;

			[Token(Token = "0x4001E03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x983C2C", Offset = "0x983C2C")]
			private string <price>k__BackingField;

			[Token(Token = "0x4001E04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x983C3C", Offset = "0x983C3C")]
			private string <currency>k__BackingField;

			[Token(Token = "0x4001E05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x983C4C", Offset = "0x983C4C")]
			private long <subscribed_timestamp>k__BackingField;

			[Token(Token = "0x4001E06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x983C5C", Offset = "0x983C5C")]
			private TimePeriod <free_trial_period>k__BackingField;

			[Token(Token = "0x4001E07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x983C6C", Offset = "0x983C6C")]
			private TimePeriod <charge_period>k__BackingField;

			[Token(Token = "0x4001E08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x983C7C", Offset = "0x983C7C")]
			private int <number_of_charge_period>k__BackingField;

			[Token(Token = "0x4001E09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x983C8C", Offset = "0x983C8C")]
			private string <plan_id>k__BackingField;

			[Token(Token = "0x4001E0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x983C9C", Offset = "0x983C9C")]
			private string <plan_name>k__BackingField;

			[Token(Token = "0x4001E0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x983CAC", Offset = "0x983CAC")]
			private string <status>k__BackingField;

			[Token(Token = "0x4001E0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x983CBC", Offset = "0x983CBC")]
			private StatusDetail <status_detail>k__BackingField;

			[Token(Token = "0x1700036D")]
			public string app_id
			{
				[Token(Token = "0x6002429")]
				[Address(RVA = "0xD883F0", Offset = "0xD883F0", VA = "0xD883F0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A780", Offset = "0x98A780")]
				get
				{
					return null;
				}
				[Token(Token = "0x600242A")]
				[Address(RVA = "0xD883F8", Offset = "0xD883F8", VA = "0xD883F8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A790", Offset = "0x98A790")]
				set
				{
				}
			}

			[Token(Token = "0x1700036E")]
			public string order_id
			{
				[Token(Token = "0x600242B")]
				[Address(RVA = "0xD88400", Offset = "0xD88400", VA = "0xD88400")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A7A0", Offset = "0x98A7A0")]
				get
				{
					return null;
				}
				[Token(Token = "0x600242C")]
				[Address(RVA = "0xD88408", Offset = "0xD88408", VA = "0xD88408")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A7B0", Offset = "0x98A7B0")]
				set
				{
				}
			}

			[Token(Token = "0x1700036F")]
			public string subscription_id
			{
				[Token(Token = "0x600242D")]
				[Address(RVA = "0xD88410", Offset = "0xD88410", VA = "0xD88410")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A7C0", Offset = "0x98A7C0")]
				get
				{
					return null;
				}
				[Token(Token = "0x600242E")]
				[Address(RVA = "0xD88418", Offset = "0xD88418", VA = "0xD88418")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A7D0", Offset = "0x98A7D0")]
				set
				{
				}
			}

			[Token(Token = "0x17000370")]
			public string price
			{
				[Token(Token = "0x600242F")]
				[Address(RVA = "0xD88420", Offset = "0xD88420", VA = "0xD88420")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A7E0", Offset = "0x98A7E0")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002430")]
				[Address(RVA = "0xD88428", Offset = "0xD88428", VA = "0xD88428")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A7F0", Offset = "0x98A7F0")]
				set
				{
				}
			}

			[Token(Token = "0x17000371")]
			public string currency
			{
				[Token(Token = "0x6002431")]
				[Address(RVA = "0xD88430", Offset = "0xD88430", VA = "0xD88430")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A800", Offset = "0x98A800")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002432")]
				[Address(RVA = "0xD88438", Offset = "0xD88438", VA = "0xD88438")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A810", Offset = "0x98A810")]
				set
				{
				}
			}

			[Token(Token = "0x17000372")]
			public long subscribed_timestamp
			{
				[Token(Token = "0x6002433")]
				[Address(RVA = "0xD88440", Offset = "0xD88440", VA = "0xD88440")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A820", Offset = "0x98A820")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x6002434")]
				[Address(RVA = "0xD88448", Offset = "0xD88448", VA = "0xD88448")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A830", Offset = "0x98A830")]
				set
				{
				}
			}

			[Token(Token = "0x17000373")]
			public TimePeriod free_trial_period
			{
				[Token(Token = "0x6002435")]
				[Address(RVA = "0xD88450", Offset = "0xD88450", VA = "0xD88450")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A840", Offset = "0x98A840")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002436")]
				[Address(RVA = "0xD88458", Offset = "0xD88458", VA = "0xD88458")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A850", Offset = "0x98A850")]
				set
				{
				}
			}

			[Token(Token = "0x17000374")]
			public TimePeriod charge_period
			{
				[Token(Token = "0x6002437")]
				[Address(RVA = "0xD88460", Offset = "0xD88460", VA = "0xD88460")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A860", Offset = "0x98A860")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002438")]
				[Address(RVA = "0xD88468", Offset = "0xD88468", VA = "0xD88468")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A870", Offset = "0x98A870")]
				set
				{
				}
			}

			[Token(Token = "0x17000375")]
			public int number_of_charge_period
			{
				[Token(Token = "0x6002439")]
				[Address(RVA = "0xD88470", Offset = "0xD88470", VA = "0xD88470")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A880", Offset = "0x98A880")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x600243A")]
				[Address(RVA = "0xD88478", Offset = "0xD88478", VA = "0xD88478")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A890", Offset = "0x98A890")]
				set
				{
				}
			}

			[Token(Token = "0x17000376")]
			public string plan_id
			{
				[Token(Token = "0x600243B")]
				[Address(RVA = "0xD88480", Offset = "0xD88480", VA = "0xD88480")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A8A0", Offset = "0x98A8A0")]
				get
				{
					return null;
				}
				[Token(Token = "0x600243C")]
				[Address(RVA = "0xD88488", Offset = "0xD88488", VA = "0xD88488")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A8B0", Offset = "0x98A8B0")]
				set
				{
				}
			}

			[Token(Token = "0x17000377")]
			public string plan_name
			{
				[Token(Token = "0x600243D")]
				[Address(RVA = "0xD88490", Offset = "0xD88490", VA = "0xD88490")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A8C0", Offset = "0x98A8C0")]
				get
				{
					return null;
				}
				[Token(Token = "0x600243E")]
				[Address(RVA = "0xD88498", Offset = "0xD88498", VA = "0xD88498")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A8D0", Offset = "0x98A8D0")]
				set
				{
				}
			}

			[Token(Token = "0x17000378")]
			public string status
			{
				[Token(Token = "0x600243F")]
				[Address(RVA = "0xD884A0", Offset = "0xD884A0", VA = "0xD884A0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A8E0", Offset = "0x98A8E0")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002440")]
				[Address(RVA = "0xD884A8", Offset = "0xD884A8", VA = "0xD884A8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A8F0", Offset = "0x98A8F0")]
				set
				{
				}
			}

			[Token(Token = "0x17000379")]
			public StatusDetail status_detail
			{
				[Token(Token = "0x6002441")]
				[Address(RVA = "0xD884B0", Offset = "0xD884B0", VA = "0xD884B0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A900", Offset = "0x98A900")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002442")]
				[Address(RVA = "0xD884B8", Offset = "0xD884B8", VA = "0xD884B8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A910", Offset = "0x98A910")]
				set
				{
				}
			}

			[Token(Token = "0x6002443")]
			[Address(RVA = "0xD884C0", Offset = "0xD884C0", VA = "0xD884C0")]
			public Subscription()
			{
			}
		}

		[Token(Token = "0x20006CE")]
		public class QuerySubscritionResponse
		{
			[Token(Token = "0x4001E0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x983CCC", Offset = "0x983CCC")]
			private int <statusCode>k__BackingField;

			[Token(Token = "0x4001E0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x983CDC", Offset = "0x983CDC")]
			private string <message>k__BackingField;

			[Token(Token = "0x4001E0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x983CEC", Offset = "0x983CEC")]
			private List<Subscription> <subscriptions>k__BackingField;

			[Token(Token = "0x1700037A")]
			public int statusCode
			{
				[Token(Token = "0x6002444")]
				[Address(RVA = "0xD88350", Offset = "0xD88350", VA = "0xD88350")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A920", Offset = "0x98A920")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6002445")]
				[Address(RVA = "0xD88358", Offset = "0xD88358", VA = "0xD88358")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A930", Offset = "0x98A930")]
				set
				{
				}
			}

			[Token(Token = "0x1700037B")]
			public string message
			{
				[Token(Token = "0x6002446")]
				[Address(RVA = "0xD88360", Offset = "0xD88360", VA = "0xD88360")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A940", Offset = "0x98A940")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002447")]
				[Address(RVA = "0xD88368", Offset = "0xD88368", VA = "0xD88368")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A950", Offset = "0x98A950")]
				set
				{
				}
			}

			[Token(Token = "0x1700037C")]
			public List<Subscription> subscriptions
			{
				[Token(Token = "0x6002448")]
				[Address(RVA = "0xD87E18", Offset = "0xD87E18", VA = "0xD87E18")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A960", Offset = "0x98A960")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002449")]
				[Address(RVA = "0xD88370", Offset = "0xD88370", VA = "0xD88370")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A970", Offset = "0x98A970")]
				set
				{
				}
			}

			[Token(Token = "0x600244A")]
			[Address(RVA = "0xD88378", Offset = "0xD88378", VA = "0xD88378")]
			public QuerySubscritionResponse()
			{
			}
		}

		[Token(Token = "0x60007EF")]
		[Address(RVA = "0xD80E84", Offset = "0xD80E84", VA = "0xD80E84")]
		public static void IsReady(IAPurchaseListener listener, string pchAppKey)
		{
		}

		[Token(Token = "0x60007F0")]
		[Address(RVA = "0xD81190", Offset = "0xD81190", VA = "0xD81190")]
		public static void Request(IAPurchaseListener listener, string pchPrice)
		{
		}

		[Token(Token = "0x60007F1")]
		[Address(RVA = "0xD81430", Offset = "0xD81430", VA = "0xD81430")]
		public static void Request(IAPurchaseListener listener, string pchPrice, string pchUserData)
		{
		}

		[Token(Token = "0x60007F2")]
		[Address(RVA = "0xD816AC", Offset = "0xD816AC", VA = "0xD816AC")]
		public static void Purchase(IAPurchaseListener listener, string pchPurchaseId)
		{
		}

		[Token(Token = "0x60007F3")]
		[Address(RVA = "0xD8194C", Offset = "0xD8194C", VA = "0xD8194C")]
		public static void Query(IAPurchaseListener listener, string pchPurchaseId)
		{
		}

		[Token(Token = "0x60007F4")]
		[Address(RVA = "0xD81BEC", Offset = "0xD81BEC", VA = "0xD81BEC")]
		public static void Query(IAPurchaseListener listener)
		{
		}

		[Token(Token = "0x60007F5")]
		[Address(RVA = "0xD81E28", Offset = "0xD81E28", VA = "0xD81E28")]
		public static void GetBalance(IAPurchaseListener listener)
		{
		}

		[Token(Token = "0x60007F6")]
		[Address(RVA = "0xD82064", Offset = "0xD82064", VA = "0xD82064")]
		public static void RequestSubscription(IAPurchaseListener listener, string pchPrice, string pchFreeTrialType, int nFreeTrialValue, string pchChargePeriodType, int nChargePeriodValue, int nNumberOfChargePeriod, string pchPlanId)
		{
		}

		[Token(Token = "0x60007F7")]
		[Address(RVA = "0xD82578", Offset = "0xD82578", VA = "0xD82578")]
		public static void RequestSubscriptionWithPlanID(IAPurchaseListener listener, string pchPlanId)
		{
		}

		[Token(Token = "0x60007F8")]
		[Address(RVA = "0xD82818", Offset = "0xD82818", VA = "0xD82818")]
		public static void Subscribe(IAPurchaseListener listener, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x60007F9")]
		[Address(RVA = "0xD82AB8", Offset = "0xD82AB8", VA = "0xD82AB8")]
		public static void QuerySubscription(IAPurchaseListener listener, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x60007FA")]
		[Address(RVA = "0xD82D58", Offset = "0xD82D58", VA = "0xD82D58")]
		public static void CancelSubscription(IAPurchaseListener listener, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x60007FB")]
		[Address(RVA = "0xD82FF8", Offset = "0xD82FF8", VA = "0xD82FF8")]
		public IAPurchase()
		{
		}
	}
	[Token(Token = "0x2000128")]
	public class DLC
	{
		[Token(Token = "0x60007FC")]
		[Address(RVA = "0xD80E7C", Offset = "0xD80E7C", VA = "0xD80E7C")]
		public DLC()
		{
		}
	}
	[Token(Token = "0x2000129")]
	internal class Token
	{
		[Token(Token = "0x60007FD")]
		[Address(RVA = "0xD8E2D0", Offset = "0xD8E2D0", VA = "0xD8E2D0")]
		public Token()
		{
		}
	}
}
namespace Viveport.Internal
{
	[Token(Token = "0x200012A")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x96DF34", Offset = "0x96DF34")]
	internal delegate void GetLicenseCallback(string message, string signature);
	[Token(Token = "0x200012B")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x96DF48", Offset = "0x96DF48")]
	internal delegate void StatusCallback(int nResult);
	[Token(Token = "0x200012C")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x96DF5C", Offset = "0x96DF5C")]
	internal delegate void StatusCallback2(int nResult, string message);
	[Token(Token = "0x200012D")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x96DF70", Offset = "0x96DF70")]
	internal delegate void QueryRuntimeModeCallback(int nResult, int nMode);
	[Token(Token = "0x200012E")]
	internal enum ELeaderboardDataRequest
	{
		[Token(Token = "0x400070C")]
		k_ELeaderboardDataRequestGlobal,
		[Token(Token = "0x400070D")]
		k_ELeaderboardDataRequestGlobalAroundUser,
		[Token(Token = "0x400070E")]
		k_ELeaderboardDataRequestLocal,
		[Token(Token = "0x400070F")]
		k_ELeaderboardDataRequestLocaleAroundUser
	}
	[Token(Token = "0x200012F")]
	internal enum ELeaderboardDataTimeRange
	{
		[Token(Token = "0x4000711")]
		k_ELeaderboardDataScropeAllTime,
		[Token(Token = "0x4000712")]
		k_ELeaderboardDataScropeDaily,
		[Token(Token = "0x4000713")]
		k_ELeaderboardDataScropeWeekly,
		[Token(Token = "0x4000714")]
		k_ELeaderboardDataScropeMonthly
	}
	[Token(Token = "0x2000130")]
	internal enum ELeaderboardSortMethod
	{
		[Token(Token = "0x4000716")]
		k_ELeaderboardSortMethodNone,
		[Token(Token = "0x4000717")]
		k_ELeaderboardSortMethodAscending,
		[Token(Token = "0x4000718")]
		k_ELeaderboardSortMethodDescending
	}
	[Token(Token = "0x2000131")]
	internal enum ELeaderboardDisplayType
	{
		[Token(Token = "0x400071A")]
		k_ELeaderboardDisplayTypeNone,
		[Token(Token = "0x400071B")]
		k_ELeaderboardDisplayTypeNumeric,
		[Token(Token = "0x400071C")]
		k_ELeaderboardDisplayTypeTimeSeconds,
		[Token(Token = "0x400071D")]
		k_ELeaderboardDisplayTypeTimeMilliSeconds
	}
	[Token(Token = "0x2000132")]
	internal enum ELeaderboardUploadScoreMethod
	{
		[Token(Token = "0x400071F")]
		k_ELeaderboardUploadScoreMethodNone,
		[Token(Token = "0x4000720")]
		k_ELeaderboardUploadScoreMethodKeepBest,
		[Token(Token = "0x4000721")]
		k_ELeaderboardUploadScoreMethodForceUpdate
	}
	[Token(Token = "0x2000133")]
	internal enum ELocale
	{
		[Token(Token = "0x4000723")]
		k_ELocaleUS,
		[Token(Token = "0x4000724")]
		k_ELocaleDE,
		[Token(Token = "0x4000725")]
		k_ELocaleJP,
		[Token(Token = "0x4000726")]
		k_ELocaleKR,
		[Token(Token = "0x4000727")]
		k_ELocaleRU,
		[Token(Token = "0x4000728")]
		k_ELocaleCN,
		[Token(Token = "0x4000729")]
		k_ELocaleTW,
		[Token(Token = "0x400072A")]
		k_ELocaleFR
	}
	[Token(Token = "0x2000134")]
	internal enum EAchievementDisplayAttribute
	{
		[Token(Token = "0x400072C")]
		k_EAchievementDisplayAttributeName,
		[Token(Token = "0x400072D")]
		k_EAchievementDisplayAttributeDesc,
		[Token(Token = "0x400072E")]
		k_EAchievementDisplayAttributeHidden
	}
	[Token(Token = "0x2000135")]
	internal struct LeaderboardEntry_t
	{
		[Token(Token = "0x400072F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal int m_nGlobalRank;

		[Token(Token = "0x4000730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal int m_nScore;

		[Token(Token = "0x4000731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal string m_pUserName;
	}
	[Token(Token = "0x2000136")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x96DF84", Offset = "0x96DF84")]
	internal delegate void IAPurchaseCallback(int code, string message);
	[Token(Token = "0x2000137")]
	internal struct IAPCurrency_t
	{
		[Token(Token = "0x4000732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal string m_pName;

		[Token(Token = "0x4000733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal string m_pSymbol;
	}
	[Token(Token = "0x2000138")]
	internal class Api
	{
		[Token(Token = "0x20006CF")]
		internal class AndroidLicenseChecker : AndroidJavaProxy
		{
			[Token(Token = "0x4001E10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Viveport.Api.LicenseChecker checker;

			[Token(Token = "0x600244B")]
			[Address(RVA = "0xD894A8", Offset = "0xD894A8", VA = "0xD894A8")]
			internal AndroidLicenseChecker(Viveport.Api.LicenseChecker checker)
			{
			}

			[Token(Token = "0x600244C")]
			[Address(RVA = "0xD89538", Offset = "0xD89538", VA = "0xD89538")]
			internal void onSuccess(long issueTime, long expirationTime, int latestVersion, bool updateRequired)
			{
			}

			[Token(Token = "0x600244D")]
			[Address(RVA = "0xD89784", Offset = "0xD89784", VA = "0xD89784")]
			internal void onFailure(int errorCode, string errorMessage)
			{
			}
		}

		[Token(Token = "0x6000812")]
		[Address(RVA = "0xD80188", Offset = "0xD80188", VA = "0xD80188")]
		internal static int Init(StatusCallback callback, string pchAppKey)
		{
			return default(int);
		}

		[Token(Token = "0x6000813")]
		[Address(RVA = "0xD80440", Offset = "0xD80440", VA = "0xD80440")]
		internal static int Shutdown(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6000814")]
		[Address(RVA = "0xD805E4", Offset = "0xD805E4", VA = "0xD805E4")]
		internal static string Version()
		{
			return null;
		}

		[Token(Token = "0x6000815")]
		[Address(RVA = "0xD7FE5C", Offset = "0xD7FE5C", VA = "0xD7FE5C")]
		internal static void GetLicense(Viveport.Api.LicenseChecker checker, string appId, string appKey)
		{
		}

		[Token(Token = "0x6000816")]
		[Address(RVA = "0xD89530", Offset = "0xD89530", VA = "0xD89530")]
		public Api()
		{
		}
	}
	[Token(Token = "0x2000139")]
	internal class User
	{
		[Token(Token = "0x6000817")]
		[Address(RVA = "0xD8ACF4", Offset = "0xD8ACF4", VA = "0xD8ACF4")]
		internal static string GetUserId()
		{
			return null;
		}

		[Token(Token = "0x6000818")]
		[Address(RVA = "0xD8ADE8", Offset = "0xD8ADE8", VA = "0xD8ADE8")]
		internal static string GetUserName()
		{
			return null;
		}

		[Token(Token = "0x6000819")]
		[Address(RVA = "0xD8AEDC", Offset = "0xD8AEDC", VA = "0xD8AEDC")]
		internal static string GetUserAvatarUrl()
		{
			return null;
		}

		[Token(Token = "0x600081A")]
		[Address(RVA = "0xD8AFD0", Offset = "0xD8AFD0", VA = "0xD8AFD0")]
		public User()
		{
		}
	}
	[Token(Token = "0x200013A")]
	internal class UserStats
	{
		[Token(Token = "0x600081B")]
		[Address(RVA = "0xD8AFD8", Offset = "0xD8AFD8", VA = "0xD8AFD8")]
		internal static int IsReady(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x600081C")]
		[Address(RVA = "0xD8B134", Offset = "0xD8B134", VA = "0xD8B134")]
		internal static int DownloadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x600081D")]
		[Address(RVA = "0xD8B290", Offset = "0xD8B290", VA = "0xD8B290")]
		internal static int UploadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x600081E")]
		[Address(RVA = "0xD8B3EC", Offset = "0xD8B3EC", VA = "0xD8B3EC")]
		internal static int SetStat(string pchName, int nData)
		{
			return default(int);
		}

		[Token(Token = "0x600081F")]
		[Address(RVA = "0xD8B54C", Offset = "0xD8B54C", VA = "0xD8B54C")]
		internal static int SetStat(string pchName, float fData)
		{
			return default(int);
		}

		[Token(Token = "0x6000820")]
		[Address(RVA = "0xD8B6B4", Offset = "0xD8B6B4", VA = "0xD8B6B4")]
		internal static int GetStat(string pchName, int nData)
		{
			return default(int);
		}

		[Token(Token = "0x6000821")]
		[Address(RVA = "0xD8B814", Offset = "0xD8B814", VA = "0xD8B814")]
		internal static float GetStat(string pchName, float fData)
		{
			return default(float);
		}

		[Token(Token = "0x6000822")]
		[Address(RVA = "0xD8B97C", Offset = "0xD8B97C", VA = "0xD8B97C")]
		internal static bool GetAchievement(string pchName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000823")]
		[Address(RVA = "0xD8BA68", Offset = "0xD8BA68", VA = "0xD8BA68")]
		internal static int GetAchievementUnlockTime(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x6000824")]
		[Address(RVA = "0xD8BB54", Offset = "0xD8BB54", VA = "0xD8BB54")]
		internal static int SetAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x6000825")]
		[Address(RVA = "0xD8BC40", Offset = "0xD8BC40", VA = "0xD8BC40")]
		internal static int ClearAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x6000826")]
		[Address(RVA = "0xD8BD2C", Offset = "0xD8BD2C", VA = "0xD8BD2C")]
		internal static string GetAchievementDisplayAttribute(string pchName, EAchievementDisplayAttribute attr)
		{
			return null;
		}

		[Token(Token = "0x6000827")]
		[Address(RVA = "0xD8BE8C", Offset = "0xD8BE8C", VA = "0xD8BE8C")]
		internal static string GetAchievementDisplayAttribute(string pchName, EAchievementDisplayAttribute attr, ELocale locale)
		{
			return null;
		}

		[Token(Token = "0x6000828")]
		[Address(RVA = "0xD8C04C", Offset = "0xD8C04C", VA = "0xD8C04C")]
		internal static string GetAchievementIcon(string pchName)
		{
			return null;
		}

		[Token(Token = "0x6000829")]
		[Address(RVA = "0xD8C138", Offset = "0xD8C138", VA = "0xD8C138")]
		internal static int DownloadLeaderboardScores(StatusCallback callback, string pchLeaderboardName, ELeaderboardDataRequest nDataRequest, ELeaderboardDataTimeRange nTimeRange, int nRangeStart, int nRangeEnd)
		{
			return default(int);
		}

		[Token(Token = "0x600082A")]
		[Address(RVA = "0xD8C48C", Offset = "0xD8C48C", VA = "0xD8C48C")]
		internal static int UploadLeaderboardScore(StatusCallback callback, string pchLeaderboardName, int nScores)
		{
			return default(int);
		}

		[Token(Token = "0x600082B")]
		[Address(RVA = "0xD8C6B0", Offset = "0xD8C6B0", VA = "0xD8C6B0")]
		internal static Leaderboard GetLeaderboardScore(int nIndex)
		{
			return null;
		}

		[Token(Token = "0x600082C")]
		[Address(RVA = "0xD8C99C", Offset = "0xD8C99C", VA = "0xD8C99C")]
		internal static int GetLeaderboardScoreCount()
		{
			return default(int);
		}

		[Token(Token = "0x600082D")]
		[Address(RVA = "0xD8CA24", Offset = "0xD8CA24", VA = "0xD8CA24")]
		internal static ELeaderboardSortMethod GetLeaderboardSortMethod()
		{
			return default(ELeaderboardSortMethod);
		}

		[Token(Token = "0x600082E")]
		[Address(RVA = "0xD8CAAC", Offset = "0xD8CAAC", VA = "0xD8CAAC")]
		internal static ELeaderboardDisplayType GetLeaderboardDisplayType()
		{
			return default(ELeaderboardDisplayType);
		}

		[Token(Token = "0x600082F")]
		[Address(RVA = "0xD8CB34", Offset = "0xD8CB34", VA = "0xD8CB34")]
		public UserStats()
		{
		}
	}
	[Token(Token = "0x200013B")]
	internal class IAPurchase
	{
		[Token(Token = "0x6000830")]
		[Address(RVA = "0xD80FE8", Offset = "0xD80FE8", VA = "0xD80FE8")]
		internal static void IsReady(IAPurchaseCallback callback, string pchAppKey)
		{
		}

		[Token(Token = "0x6000831")]
		[Address(RVA = "0xD81288", Offset = "0xD81288", VA = "0xD81288")]
		internal static void Request(IAPurchaseCallback callback, string pchPrice)
		{
		}

		[Token(Token = "0x6000832")]
		[Address(RVA = "0xD814B8", Offset = "0xD814B8", VA = "0xD814B8")]
		internal static void Request(IAPurchaseCallback callback, string pchPrice, string pchUserData)
		{
		}

		[Token(Token = "0x6000833")]
		[Address(RVA = "0xD817A4", Offset = "0xD817A4", VA = "0xD817A4")]
		internal static void Purchase(IAPurchaseCallback callback, string pchPurchaseId)
		{
		}

		[Token(Token = "0x6000834")]
		[Address(RVA = "0xD81A44", Offset = "0xD81A44", VA = "0xD81A44")]
		internal static void Query(IAPurchaseCallback callback, string pchPurchaseId)
		{
		}

		[Token(Token = "0x6000835")]
		[Address(RVA = "0xD81CD4", Offset = "0xD81CD4", VA = "0xD81CD4")]
		internal static void Query(IAPurchaseCallback callback)
		{
		}

		[Token(Token = "0x6000836")]
		[Address(RVA = "0xD81F10", Offset = "0xD81F10", VA = "0xD81F10")]
		internal static void GetBalance(IAPurchaseCallback callback)
		{
		}

		[Token(Token = "0x6000837")]
		[Address(RVA = "0xD821A4", Offset = "0xD821A4", VA = "0xD821A4")]
		internal static void RequestSubscription(IAPurchaseCallback callback, string pchPrice, string pchFreeTrialType, int nFreeTrialValue, string pchChargePeriodType, int nChargePeriodValue, int nNumberOfChargePeriod, string pchPlanId)
		{
		}

		[Token(Token = "0x6000838")]
		[Address(RVA = "0xD82670", Offset = "0xD82670", VA = "0xD82670")]
		internal static void RequestSubscriptionWithPlanID(IAPurchaseCallback callback, string pchPlanId)
		{
		}

		[Token(Token = "0x6000839")]
		[Address(RVA = "0xD82910", Offset = "0xD82910", VA = "0xD82910")]
		internal static void Subscribe(IAPurchaseCallback callback, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x600083A")]
		[Address(RVA = "0xD82BB0", Offset = "0xD82BB0", VA = "0xD82BB0")]
		internal static void QuerySubscription(IAPurchaseCallback callback, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x600083B")]
		[Address(RVA = "0xD82E50", Offset = "0xD82E50", VA = "0xD82E50")]
		internal static void CancelSubscription(IAPurchaseCallback callback, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x600083C")]
		[Address(RVA = "0xD8A170", Offset = "0xD8A170", VA = "0xD8A170")]
		public IAPurchase()
		{
		}
	}
	[Token(Token = "0x200013C")]
	internal class Android
	{
		[Token(Token = "0x4000734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AndroidJavaObject _api;

		[Token(Token = "0x4000735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static AndroidJavaObject _iAPurchase;

		[Token(Token = "0x4000736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static AndroidJavaClass _unityPlayer;

		[Token(Token = "0x4000737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static AndroidJavaObject _user;

		[Token(Token = "0x4000738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static AndroidJavaObject _userStats;

		[Token(Token = "0x170000A0")]
		internal static AndroidJavaClass UnityPlayer
		{
			[Token(Token = "0x6000841")]
			[Address(RVA = "0xD887C4", Offset = "0xD887C4", VA = "0xD887C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A1")]
		internal static AndroidJavaObject CurrentActivity
		{
			[Token(Token = "0x6000842")]
			[Address(RVA = "0xD88854", Offset = "0xD88854", VA = "0xD88854")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A2")]
		internal static AndroidJavaObject CurrentContext
		{
			[Token(Token = "0x6000843")]
			[Address(RVA = "0xD888BC", Offset = "0xD888BC", VA = "0xD888BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600083D")]
		[Address(RVA = "0xD884F0", Offset = "0xD884F0", VA = "0xD884F0")]
		internal static AndroidJavaObject GetJavaAPI()
		{
			return null;
		}

		[Token(Token = "0x600083E")]
		[Address(RVA = "0xD885A8", Offset = "0xD885A8", VA = "0xD885A8")]
		internal static AndroidJavaObject GetJavaUser()
		{
			return null;
		}

		[Token(Token = "0x600083F")]
		[Address(RVA = "0xD8865C", Offset = "0xD8865C", VA = "0xD8865C")]
		internal static AndroidJavaObject GetJavaUserStats()
		{
			return null;
		}

		[Token(Token = "0x6000840")]
		[Address(RVA = "0xD88710", Offset = "0xD88710", VA = "0xD88710")]
		internal static AndroidJavaObject GetJavaIAPurchase()
		{
			return null;
		}

		[Token(Token = "0x6000844")]
		[Address(RVA = "0xD888C0", Offset = "0xD888C0", VA = "0xD888C0")]
		public Android()
		{
		}
	}
	[Token(Token = "0x200013D")]
	internal class AndroidPluginCallback : AndroidJavaProxy
	{
		[Token(Token = "0x4000739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IAPurchaseCallback callback;

		[Token(Token = "0x400073A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private StatusCallback statusCallback;

		[Token(Token = "0x6000845")]
		[Address(RVA = "0xD888C8", Offset = "0xD888C8", VA = "0xD888C8")]
		internal AndroidPluginCallback(IAPurchaseCallback callback)
		{
		}

		[Token(Token = "0x6000846")]
		[Address(RVA = "0xD88950", Offset = "0xD88950", VA = "0xD88950")]
		internal AndroidPluginCallback(StatusCallback callback)
		{
		}

		[Token(Token = "0x6000847")]
		[Address(RVA = "0xD889D8", Offset = "0xD889D8", VA = "0xD889D8")]
		internal void onResult(int statusCode, string result)
		{
		}
	}
}
namespace Viveport.Arcade
{
	[Token(Token = "0x200013E")]
	internal class Session
	{
		[Token(Token = "0x6000848")]
		[Address(RVA = "0xD807E0", Offset = "0xD807E0", VA = "0xD807E0")]
		public Session()
		{
		}
	}
}
namespace Viveport.Core
{
	[Token(Token = "0x200013F")]
	public class Logger
	{
		[Token(Token = "0x400073B")]
		private const string LoggerTypeNameUnity = "UnityEngine.Debug";

		[Token(Token = "0x400073C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool _hasDetected;

		[Token(Token = "0x400073D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		private static bool _usingUnityLog;

		[Token(Token = "0x400073E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Type _unityLogType;

		[Token(Token = "0x6000849")]
		[Address(RVA = "0xD807F0", Offset = "0xD807F0", VA = "0xD807F0")]
		public static void Log(string message)
		{
		}

		[Token(Token = "0x600084A")]
		[Address(RVA = "0xD80C04", Offset = "0xD80C04", VA = "0xD80C04")]
		private static void ConsoleLog(string message)
		{
		}

		[Token(Token = "0x600084B")]
		[Address(RVA = "0xD808C0", Offset = "0xD808C0", VA = "0xD808C0")]
		private static void UnityLog(string message)
		{
		}

		[Token(Token = "0x600084C")]
		[Address(RVA = "0xD80CA0", Offset = "0xD80CA0", VA = "0xD80CA0")]
		private static Type GetType(string typeName)
		{
			return null;
		}

		[Token(Token = "0x600084D")]
		[Address(RVA = "0xD80E20", Offset = "0xD80E20", VA = "0xD80E20")]
		public Logger()
		{
		}
	}
}
namespace LitJson
{
	[Token(Token = "0x2000140")]
	public enum JsonType
	{
		[Token(Token = "0x4000740")]
		None,
		[Token(Token = "0x4000741")]
		Object,
		[Token(Token = "0x4000742")]
		Array,
		[Token(Token = "0x4000743")]
		String,
		[Token(Token = "0x4000744")]
		Int,
		[Token(Token = "0x4000745")]
		Long,
		[Token(Token = "0x4000746")]
		Double,
		[Token(Token = "0x4000747")]
		Boolean
	}
	[Token(Token = "0x2000141")]
	public interface IJsonWrapper : IList, ICollection, IEnumerable, IOrderedDictionary, IDictionary
	{
		[Token(Token = "0x170000A3")]
		bool IsArray
		{
			[Token(Token = "0x600084F")]
			get;
		}

		[Token(Token = "0x170000A4")]
		bool IsBoolean
		{
			[Token(Token = "0x6000850")]
			get;
		}

		[Token(Token = "0x170000A5")]
		bool IsDouble
		{
			[Token(Token = "0x6000851")]
			get;
		}

		[Token(Token = "0x170000A6")]
		bool IsInt
		{
			[Token(Token = "0x6000852")]
			get;
		}

		[Token(Token = "0x170000A7")]
		bool IsLong
		{
			[Token(Token = "0x6000853")]
			get;
		}

		[Token(Token = "0x170000A8")]
		bool IsObject
		{
			[Token(Token = "0x6000854")]
			get;
		}

		[Token(Token = "0x170000A9")]
		bool IsString
		{
			[Token(Token = "0x6000855")]
			get;
		}

		[Token(Token = "0x6000856")]
		bool GetBoolean();

		[Token(Token = "0x6000857")]
		double GetDouble();

		[Token(Token = "0x6000858")]
		int GetInt();

		[Token(Token = "0x6000859")]
		JsonType GetJsonType();

		[Token(Token = "0x600085A")]
		long GetLong();

		[Token(Token = "0x600085B")]
		string GetString();

		[Token(Token = "0x600085C")]
		void SetBoolean(bool val);

		[Token(Token = "0x600085D")]
		void SetDouble(double val);

		[Token(Token = "0x600085E")]
		void SetInt(int val);

		[Token(Token = "0x600085F")]
		void SetJsonType(JsonType type);

		[Token(Token = "0x6000860")]
		void SetLong(long val);

		[Token(Token = "0x6000861")]
		void SetString(string val);

		[Token(Token = "0x6000862")]
		string ToJson();

		[Token(Token = "0x6000863")]
		void ToJson(JsonWriter writer);
	}
	[Token(Token = "0x2000142")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x96DF98", Offset = "0x96DF98")]
	public class JsonData : IJsonWrapper, IList, ICollection, IEnumerable, IOrderedDictionary, IDictionary, IEquatable<JsonData>
	{
		[Token(Token = "0x4000748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IList<JsonData> inst_array;

		[Token(Token = "0x4000749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inst_boolean;

		[Token(Token = "0x400074A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private double inst_double;

		[Token(Token = "0x400074B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int inst_int;

		[Token(Token = "0x400074C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private long inst_long;

		[Token(Token = "0x400074D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private IDictionary<string, JsonData> inst_object;

		[Token(Token = "0x400074E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string inst_string;

		[Token(Token = "0x400074F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string json;

		[Token(Token = "0x4000750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private JsonType type;

		[Token(Token = "0x4000751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private IList<KeyValuePair<string, JsonData>> object_list;

		[Token(Token = "0x170000AA")]
		public int Count
		{
			[Token(Token = "0x6000864")]
			[Address(RVA = "0xF73710", Offset = "0xF73710", VA = "0xF73710")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000AB")]
		public bool IsArray
		{
			[Token(Token = "0x6000865")]
			[Address(RVA = "0xF738EC", Offset = "0xF738EC", VA = "0xF738EC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000AC")]
		public bool IsBoolean
		{
			[Token(Token = "0x6000866")]
			[Address(RVA = "0xF738FC", Offset = "0xF738FC", VA = "0xF738FC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000AD")]
		public bool IsDouble
		{
			[Token(Token = "0x6000867")]
			[Address(RVA = "0xF7390C", Offset = "0xF7390C", VA = "0xF7390C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000AE")]
		public bool IsInt
		{
			[Token(Token = "0x6000868")]
			[Address(RVA = "0xF7391C", Offset = "0xF7391C", VA = "0xF7391C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000AF")]
		public bool IsLong
		{
			[Token(Token = "0x6000869")]
			[Address(RVA = "0xF7392C", Offset = "0xF7392C", VA = "0xF7392C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000B0")]
		public bool IsObject
		{
			[Token(Token = "0x600086A")]
			[Address(RVA = "0xF7393C", Offset = "0xF7393C", VA = "0xF7393C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000B1")]
		public bool IsString
		{
			[Token(Token = "0x600086B")]
			[Address(RVA = "0xF7394C", Offset = "0xF7394C", VA = "0xF7394C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000B2")]
		private int System.Collections.ICollection.Count
		{
			[Token(Token = "0x600086C")]
			[Address(RVA = "0xF7395C", Offset = "0xF7395C", VA = "0xF7395C", Slot = "37")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000B3")]
		private bool System.Collections.ICollection.IsSynchronized
		{
			[Token(Token = "0x600086D")]
			[Address(RVA = "0xF73960", Offset = "0xF73960", VA = "0xF73960", Slot = "39")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000B4")]
		private object System.Collections.ICollection.SyncRoot
		{
			[Token(Token = "0x600086E")]
			[Address(RVA = "0xF73A1C", Offset = "0xF73A1C", VA = "0xF73A1C", Slot = "38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B5")]
		private bool System.Collections.IDictionary.IsFixedSize
		{
			[Token(Token = "0x600086F")]
			[Address(RVA = "0xF73AD8", Offset = "0xF73AD8", VA = "0xF73AD8", Slot = "54")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000B6")]
		private bool System.Collections.IDictionary.IsReadOnly
		{
			[Token(Token = "0x6000870")]
			[Address(RVA = "0xF73D08", Offset = "0xF73D08", VA = "0xF73D08", Slot = "53")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000B7")]
		private ICollection System.Collections.IDictionary.Keys
		{
			[Token(Token = "0x6000871")]
			[Address(RVA = "0xF73DC4", Offset = "0xF73DC4", VA = "0xF73DC4", Slot = "48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B8")]
		private ICollection System.Collections.IDictionary.Values
		{
			[Token(Token = "0x6000872")]
			[Address(RVA = "0xF74190", Offset = "0xF74190", VA = "0xF74190", Slot = "49")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B9")]
		private bool LitJson.IJsonWrapper.IsArray
		{
			[Token(Token = "0x6000873")]
			[Address(RVA = "0xF7455C", Offset = "0xF7455C", VA = "0xF7455C", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000BA")]
		private bool LitJson.IJsonWrapper.IsBoolean
		{
			[Token(Token = "0x6000874")]
			[Address(RVA = "0xF7456C", Offset = "0xF7456C", VA = "0xF7456C", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000BB")]
		private bool LitJson.IJsonWrapper.IsDouble
		{
			[Token(Token = "0x6000875")]
			[Address(RVA = "0xF7457C", Offset = "0xF7457C", VA = "0xF7457C", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000BC")]
		private bool LitJson.IJsonWrapper.IsInt
		{
			[Token(Token = "0x6000876")]
			[Address(RVA = "0xF7458C", Offset = "0xF7458C", VA = "0xF7458C", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000BD")]
		private bool LitJson.IJsonWrapper.IsLong
		{
			[Token(Token = "0x6000877")]
			[Address(RVA = "0xF7459C", Offset = "0xF7459C", VA = "0xF7459C", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000BE")]
		private bool LitJson.IJsonWrapper.IsObject
		{
			[Token(Token = "0x6000878")]
			[Address(RVA = "0xF745AC", Offset = "0xF745AC", VA = "0xF745AC", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000BF")]
		private bool LitJson.IJsonWrapper.IsString
		{
			[Token(Token = "0x6000879")]
			[Address(RVA = "0xF745BC", Offset = "0xF745BC", VA = "0xF745BC", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000C0")]
		private bool System.Collections.IList.IsFixedSize
		{
			[Token(Token = "0x600087A")]
			[Address(RVA = "0xF745CC", Offset = "0xF745CC", VA = "0xF745CC", Slot = "31")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000C1")]
		private bool System.Collections.IList.IsReadOnly
		{
			[Token(Token = "0x600087B")]
			[Address(RVA = "0xF747D0", Offset = "0xF747D0", VA = "0xF747D0", Slot = "30")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000C2")]
		private object System.Collections.IDictionary.Item
		{
			[Token(Token = "0x600087C")]
			[Address(RVA = "0xF7488C", Offset = "0xF7488C", VA = "0xF7488C", Slot = "46")]
			get
			{
				return null;
			}
			[Token(Token = "0x600087D")]
			[Address(RVA = "0xF74954", Offset = "0xF74954", VA = "0xF74954", Slot = "47")]
			set
			{
			}
		}

		[Token(Token = "0x170000C3")]
		private object System.Collections.Specialized.IOrderedDictionary.Item
		{
			[Token(Token = "0x600087E")]
			[Address(RVA = "0xF74F04", Offset = "0xF74F04", VA = "0xF74F04", Slot = "41")]
			get
			{
				return null;
			}
			[Token(Token = "0x600087F")]
			[Address(RVA = "0xF74FFC", Offset = "0xF74FFC", VA = "0xF74FFC", Slot = "42")]
			set
			{
			}
		}

		[Token(Token = "0x170000C4")]
		private object System.Collections.IList.Item
		{
			[Token(Token = "0x6000880")]
			[Address(RVA = "0xF75248", Offset = "0xF75248", VA = "0xF75248", Slot = "25")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000881")]
			[Address(RVA = "0xF75310", Offset = "0xF75310", VA = "0xF75310", Slot = "26")]
			set
			{
			}
		}

		[Token(Token = "0x170000C5")]
		public JsonData Item
		{
			[Token(Token = "0x6000882")]
			[Address(RVA = "0xF75630", Offset = "0xF75630", VA = "0xF75630")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000883")]
			[Address(RVA = "0xF74B1C", Offset = "0xF74B1C", VA = "0xF74B1C")]
			set
			{
			}
		}

		[Token(Token = "0x170000C6")]
		public JsonData Item
		{
			[Token(Token = "0x6000884")]
			[Address(RVA = "0xF756FC", Offset = "0xF756FC", VA = "0xF756FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000885")]
			[Address(RVA = "0xF75354", Offset = "0xF75354", VA = "0xF75354")]
			set
			{
			}
		}

		[Token(Token = "0x6000886")]
		[Address(RVA = "0xF75880", Offset = "0xF75880", VA = "0xF75880")]
		public JsonData()
		{
		}

		[Token(Token = "0x6000887")]
		[Address(RVA = "0xF75888", Offset = "0xF75888", VA = "0xF75888")]
		public JsonData(bool boolean)
		{
		}

		[Token(Token = "0x6000888")]
		[Address(RVA = "0xF758C0", Offset = "0xF758C0", VA = "0xF758C0")]
		public JsonData(double number)
		{
		}

		[Token(Token = "0x6000889")]
		[Address(RVA = "0xF758FC", Offset = "0xF758FC", VA = "0xF758FC")]
		public JsonData(int number)
		{
		}

		[Token(Token = "0x600088A")]
		[Address(RVA = "0xF75930", Offset = "0xF75930", VA = "0xF75930")]
		public JsonData(long number)
		{
		}

		[Token(Token = "0x600088B")]
		[Address(RVA = "0xF75964", Offset = "0xF75964", VA = "0xF75964")]
		public JsonData(object obj)
		{
		}

		[Token(Token = "0x600088C")]
		[Address(RVA = "0xF75B40", Offset = "0xF75B40", VA = "0xF75B40")]
		public JsonData(string str)
		{
		}

		[Token(Token = "0x600088D")]
		[Address(RVA = "0xF75B74", Offset = "0xF75B74", VA = "0xF75B74")]
		public static implicit operator JsonData(bool data)
		{
			return null;
		}

		[Token(Token = "0x600088E")]
		[Address(RVA = "0xF75BE4", Offset = "0xF75BE4", VA = "0xF75BE4")]
		public static implicit operator JsonData(double data)
		{
			return null;
		}

		[Token(Token = "0x600088F")]
		[Address(RVA = "0xF75C58", Offset = "0xF75C58", VA = "0xF75C58")]
		public static implicit operator JsonData(int data)
		{
			return null;
		}

		[Token(Token = "0x6000890")]
		[Address(RVA = "0xF75CC4", Offset = "0xF75CC4", VA = "0xF75CC4")]
		public static implicit operator JsonData(long data)
		{
			return null;
		}

		[Token(Token = "0x6000891")]
		[Address(RVA = "0xF75D30", Offset = "0xF75D30", VA = "0xF75D30")]
		public static implicit operator JsonData(string data)
		{
			return null;
		}

		[Token(Token = "0x6000892")]
		[Address(RVA = "0xF75D9C", Offset = "0xF75D9C", VA = "0xF75D9C")]
		public static explicit operator bool(JsonData data)
		{
			return default(bool);
		}

		[Token(Token = "0x6000893")]
		[Address(RVA = "0xF75E3C", Offset = "0xF75E3C", VA = "0xF75E3C")]
		public static explicit operator double(JsonData data)
		{
			return default(double);
		}

		[Token(Token = "0x6000894")]
		[Address(RVA = "0xF75EDC", Offset = "0xF75EDC", VA = "0xF75EDC")]
		public static explicit operator int(JsonData data)
		{
			return default(int);
		}

		[Token(Token = "0x6000895")]
		[Address(RVA = "0xF75F7C", Offset = "0xF75F7C", VA = "0xF75F7C")]
		public static explicit operator long(JsonData data)
		{
			return default(long);
		}

		[Token(Token = "0x6000896")]
		[Address(RVA = "0xF7601C", Offset = "0xF7601C", VA = "0xF7601C")]
		public static explicit operator string(JsonData data)
		{
			return null;
		}

		[Token(Token = "0x6000897")]
		[Address(RVA = "0xF760BC", Offset = "0xF760BC", VA = "0xF760BC", Slot = "36")]
		private void System.Collections.ICollection.CopyTo(Array array, int index)
		{
		}

		[Token(Token = "0x6000898")]
		[Address(RVA = "0xF7618C", Offset = "0xF7618C", VA = "0xF7618C", Slot = "51")]
		private void System.Collections.IDictionary.Add(object key, object value)
		{
		}

		[Token(Token = "0x6000899")]
		[Address(RVA = "0xF76388", Offset = "0xF76388", VA = "0xF76388", Slot = "52")]
		private void System.Collections.IDictionary.Clear()
		{
		}

		[Token(Token = "0x600089A")]
		[Address(RVA = "0xF764C8", Offset = "0xF764C8", VA = "0xF764C8", Slot = "50")]
		private bool System.Collections.IDictionary.Contains(object key)
		{
			return default(bool);
		}

		[Token(Token = "0x600089B")]
		[Address(RVA = "0xF76594", Offset = "0xF76594", VA = "0xF76594", Slot = "55")]
		private IDictionaryEnumerator System.Collections.IDictionary.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x600089C")]
		[Address(RVA = "0xF7663C", Offset = "0xF7663C", VA = "0xF7663C", Slot = "56")]
		private void System.Collections.IDictionary.Remove(object key)
		{
		}

		[Token(Token = "0x600089D")]
		[Address(RVA = "0xF7694C", Offset = "0xF7694C", VA = "0xF7694C", Slot = "40")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x600089E")]
		[Address(RVA = "0xF76A04", Offset = "0xF76A04", VA = "0xF76A04", Slot = "11")]
		private bool LitJson.IJsonWrapper.GetBoolean()
		{
			return default(bool);
		}

		[Token(Token = "0x600089F")]
		[Address(RVA = "0xF76A98", Offset = "0xF76A98", VA = "0xF76A98", Slot = "12")]
		private double LitJson.IJsonWrapper.GetDouble()
		{
			return default(double);
		}

		[Token(Token = "0x60008A0")]
		[Address(RVA = "0xF76B2C", Offset = "0xF76B2C", VA = "0xF76B2C", Slot = "13")]
		private int LitJson.IJsonWrapper.GetInt()
		{
			return default(int);
		}

		[Token(Token = "0x60008A1")]
		[Address(RVA = "0xF76BC0", Offset = "0xF76BC0", VA = "0xF76BC0", Slot = "15")]
		private long LitJson.IJsonWrapper.GetLong()
		{
			return default(long);
		}

		[Token(Token = "0x60008A2")]
		[Address(RVA = "0xF76C54", Offset = "0xF76C54", VA = "0xF76C54", Slot = "16")]
		private string LitJson.IJsonWrapper.GetString()
		{
			return null;
		}

		[Token(Token = "0x60008A3")]
		[Address(RVA = "0xF76CE8", Offset = "0xF76CE8", VA = "0xF76CE8", Slot = "17")]
		private void LitJson.IJsonWrapper.SetBoolean(bool val)
		{
		}

		[Token(Token = "0x60008A4")]
		[Address(RVA = "0xF76D00", Offset = "0xF76D00", VA = "0xF76D00", Slot = "18")]
		private void LitJson.IJsonWrapper.SetDouble(double val)
		{
		}

		[Token(Token = "0x60008A5")]
		[Address(RVA = "0xF76D14", Offset = "0xF76D14", VA = "0xF76D14", Slot = "19")]
		private void LitJson.IJsonWrapper.SetInt(int val)
		{
		}

		[Token(Token = "0x60008A6")]
		[Address(RVA = "0xF76D28", Offset = "0xF76D28", VA = "0xF76D28", Slot = "21")]
		private void LitJson.IJsonWrapper.SetLong(long val)
		{
		}

		[Token(Token = "0x60008A7")]
		[Address(RVA = "0xF76D3C", Offset = "0xF76D3C", VA = "0xF76D3C", Slot = "22")]
		private void LitJson.IJsonWrapper.SetString(string val)
		{
		}

		[Token(Token = "0x60008A8")]
		[Address(RVA = "0xF76D4C", Offset = "0xF76D4C", VA = "0xF76D4C", Slot = "23")]
		private string LitJson.IJsonWrapper.ToJson()
		{
			return null;
		}

		[Token(Token = "0x60008A9")]
		[Address(RVA = "0xF76E14", Offset = "0xF76E14", VA = "0xF76E14", Slot = "24")]
		private void LitJson.IJsonWrapper.ToJson(JsonWriter writer)
		{
		}

		[Token(Token = "0x60008AA")]
		[Address(RVA = "0xF76E8C", Offset = "0xF76E8C", VA = "0xF76E8C", Slot = "27")]
		private int System.Collections.IList.Add(object value)
		{
			return default(int);
		}

		[Token(Token = "0x60008AB")]
		[Address(RVA = "0xF76F6C", Offset = "0xF76F6C", VA = "0xF76F6C", Slot = "29")]
		private void System.Collections.IList.Clear()
		{
		}

		[Token(Token = "0x60008AC")]
		[Address(RVA = "0xF77030", Offset = "0xF77030", VA = "0xF77030", Slot = "28")]
		private bool System.Collections.IList.Contains(object value)
		{
			return default(bool);
		}

		[Token(Token = "0x60008AD")]
		[Address(RVA = "0xF770FC", Offset = "0xF770FC", VA = "0xF770FC", Slot = "32")]
		private int System.Collections.IList.IndexOf(object value)
		{
			return default(int);
		}

		[Token(Token = "0x60008AE")]
		[Address(RVA = "0xF771C8", Offset = "0xF771C8", VA = "0xF771C8", Slot = "33")]
		private void System.Collections.IList.Insert(int index, object value)
		{
		}

		[Token(Token = "0x60008AF")]
		[Address(RVA = "0xF772A4", Offset = "0xF772A4", VA = "0xF772A4", Slot = "34")]
		private void System.Collections.IList.Remove(object value)
		{
		}

		[Token(Token = "0x60008B0")]
		[Address(RVA = "0xF77378", Offset = "0xF77378", VA = "0xF77378", Slot = "35")]
		private void System.Collections.IList.RemoveAt(int index)
		{
		}

		[Token(Token = "0x60008B1")]
		[Address(RVA = "0xF7744C", Offset = "0xF7744C", VA = "0xF7744C", Slot = "43")]
		private IDictionaryEnumerator System.Collections.Specialized.IOrderedDictionary.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60008B2")]
		[Address(RVA = "0xF77564", Offset = "0xF77564", VA = "0xF77564", Slot = "44")]
		private void System.Collections.Specialized.IOrderedDictionary.Insert(int idx, object key, object value)
		{
		}

		[Token(Token = "0x60008B3")]
		[Address(RVA = "0xF776F4", Offset = "0xF776F4", VA = "0xF776F4", Slot = "45")]
		private void System.Collections.Specialized.IOrderedDictionary.RemoveAt(int idx)
		{
		}

		[Token(Token = "0x60008B4")]
		[Address(RVA = "0xF737CC", Offset = "0xF737CC", VA = "0xF737CC")]
		private ICollection EnsureCollection()
		{
			return null;
		}

		[Token(Token = "0x60008B5")]
		[Address(RVA = "0xF73B94", Offset = "0xF73B94", VA = "0xF73B94")]
		private IDictionary EnsureDictionary()
		{
			return null;
		}

		[Token(Token = "0x60008B6")]
		[Address(RVA = "0xF74688", Offset = "0xF74688", VA = "0xF74688")]
		private IList EnsureList()
		{
			return null;
		}

		[Token(Token = "0x60008B7")]
		[Address(RVA = "0xF74A80", Offset = "0xF74A80", VA = "0xF74A80")]
		private JsonData ToJsonData(object obj)
		{
			return null;
		}

		[Token(Token = "0x60008B8")]
		[Address(RVA = "0xF778F0", Offset = "0xF778F0", VA = "0xF778F0")]
		private static void WriteJson(IJsonWrapper obj, JsonWriter writer)
		{
		}

		[Token(Token = "0x60008B9")]
		[Address(RVA = "0xF76E90", Offset = "0xF76E90", VA = "0xF76E90")]
		public int Add(object value)
		{
			return default(int);
		}

		[Token(Token = "0x60008BA")]
		[Address(RVA = "0xF78FDC", Offset = "0xF78FDC", VA = "0xF78FDC")]
		public void Clear()
		{
		}

		[Token(Token = "0x60008BB")]
		[Address(RVA = "0xF790F8", Offset = "0xF790F8", VA = "0xF790F8", Slot = "57")]
		public bool Equals(JsonData x)
		{
			return default(bool);
		}

		[Token(Token = "0x60008BC")]
		[Address(RVA = "0xF7921C", Offset = "0xF7921C", VA = "0xF7921C", Slot = "14")]
		public JsonType GetJsonType()
		{
			return default(JsonType);
		}

		[Token(Token = "0x60008BD")]
		[Address(RVA = "0xF79224", Offset = "0xF79224", VA = "0xF79224", Slot = "20")]
		public void SetJsonType(JsonType type)
		{
		}

		[Token(Token = "0x60008BE")]
		[Address(RVA = "0xF76D50", Offset = "0xF76D50", VA = "0xF76D50")]
		public string ToJson()
		{
			return null;
		}

		[Token(Token = "0x60008BF")]
		[Address(RVA = "0xF76E18", Offset = "0xF76E18", VA = "0xF76E18")]
		public void ToJson(JsonWriter writer)
		{
		}

		[Token(Token = "0x60008C0")]
		[Address(RVA = "0xF79400", Offset = "0xF79400", VA = "0xF79400", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000143")]
	internal class OrderedDictionaryEnumerator : IDictionaryEnumerator, IEnumerator
	{
		[Token(Token = "0x4000752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IEnumerator<KeyValuePair<string, JsonData>> list_enumerator;

		[Token(Token = "0x170000C7")]
		public object Current
		{
			[Token(Token = "0x60008C1")]
			[Address(RVA = "0xF88294", Offset = "0xF88294", VA = "0xF88294", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C8")]
		public DictionaryEntry Entry
		{
			[Token(Token = "0x60008C2")]
			[Address(RVA = "0xF88300", Offset = "0xF88300", VA = "0xF88300", Slot = "6")]
			get
			{
				return default(DictionaryEntry);
			}
		}

		[Token(Token = "0x170000C9")]
		public object Key
		{
			[Token(Token = "0x60008C3")]
			[Address(RVA = "0xF88414", Offset = "0xF88414", VA = "0xF88414", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CA")]
		public object Value
		{
			[Token(Token = "0x60008C4")]
			[Address(RVA = "0xF884F4", Offset = "0xF884F4", VA = "0xF884F4", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008C5")]
		[Address(RVA = "0xF77538", Offset = "0xF77538", VA = "0xF77538")]
		public OrderedDictionaryEnumerator(IEnumerator<KeyValuePair<string, JsonData>> enumerator)
		{
		}

		[Token(Token = "0x60008C6")]
		[Address(RVA = "0xF885D4", Offset = "0xF885D4", VA = "0xF885D4", Slot = "7")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008C7")]
		[Address(RVA = "0xF88688", Offset = "0xF88688", VA = "0xF88688", Slot = "9")]
		public void Reset()
		{
		}
	}
	[Token(Token = "0x2000144")]
	public class JsonException : ApplicationException
	{
		[Token(Token = "0x60008C8")]
		[Address(RVA = "0xF794E0", Offset = "0xF794E0", VA = "0xF794E0")]
		public JsonException()
		{
		}

		[Token(Token = "0x60008C9")]
		[Address(RVA = "0xF794E8", Offset = "0xF794E8", VA = "0xF794E8")]
		internal JsonException(ParserToken token)
		{
		}

		[Token(Token = "0x60008CA")]
		[Address(RVA = "0xF79578", Offset = "0xF79578", VA = "0xF79578")]
		internal JsonException(ParserToken token, Exception inner_exception)
		{
		}

		[Token(Token = "0x60008CB")]
		[Address(RVA = "0xF79618", Offset = "0xF79618", VA = "0xF79618")]
		internal JsonException(int c)
		{
		}

		[Token(Token = "0x60008CC")]
		[Address(RVA = "0xF796A8", Offset = "0xF796A8", VA = "0xF796A8")]
		internal JsonException(int c, Exception inner_exception)
		{
		}

		[Token(Token = "0x60008CD")]
		[Address(RVA = "0xF79748", Offset = "0xF79748", VA = "0xF79748")]
		public JsonException(string message)
		{
		}

		[Token(Token = "0x60008CE")]
		[Address(RVA = "0xF79750", Offset = "0xF79750", VA = "0xF79750")]
		public JsonException(string message, Exception inner_exception)
		{
		}
	}
	[Token(Token = "0x2000145")]
	internal struct PropertyMetadata
	{
		[Token(Token = "0x4000753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MemberInfo Info;

		[Token(Token = "0x4000754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsField;

		[Token(Token = "0x4000755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Type Type;
	}
	[Token(Token = "0x2000146")]
	internal struct ArrayMetadata
	{
		[Token(Token = "0x4000756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Type element_type;

		[Token(Token = "0x4000757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private bool is_array;

		[Token(Token = "0x4000758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		private bool is_list;

		[Token(Token = "0x170000CB")]
		public Type ElementType
		{
			[Token(Token = "0x60008CF")]
			[Address(RVA = "0xA3B5C8", Offset = "0xA3B5C8", VA = "0xA3B5C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008D0")]
			[Address(RVA = "0xA3B5D0", Offset = "0xA3B5D0", VA = "0xA3B5D0")]
			set
			{
			}
		}

		[Token(Token = "0x170000CC")]
		public bool IsArray
		{
			[Token(Token = "0x60008D1")]
			[Address(RVA = "0xA3B5D8", Offset = "0xA3B5D8", VA = "0xA3B5D8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60008D2")]
			[Address(RVA = "0xA3B5E0", Offset = "0xA3B5E0", VA = "0xA3B5E0")]
			set
			{
			}
		}

		[Token(Token = "0x170000CD")]
		public bool IsList
		{
			[Token(Token = "0x60008D3")]
			[Address(RVA = "0xA3B5EC", Offset = "0xA3B5EC", VA = "0xA3B5EC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60008D4")]
			[Address(RVA = "0xA3B5F4", Offset = "0xA3B5F4", VA = "0xA3B5F4")]
			set
			{
			}
		}
	}
	[Token(Token = "0x2000147")]
	internal struct ObjectMetadata
	{
		[Token(Token = "0x4000759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Type element_type;

		[Token(Token = "0x400075A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private bool is_dictionary;

		[Token(Token = "0x400075B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IDictionary<string, PropertyMetadata> properties;

		[Token(Token = "0x170000CE")]
		public Type ElementType
		{
			[Token(Token = "0x60008D5")]
			[Address(RVA = "0xA3B64C", Offset = "0xA3B64C", VA = "0xA3B64C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008D6")]
			[Address(RVA = "0xA3B654", Offset = "0xA3B654", VA = "0xA3B654")]
			set
			{
			}
		}

		[Token(Token = "0x170000CF")]
		public bool IsDictionary
		{
			[Token(Token = "0x60008D7")]
			[Address(RVA = "0xA3B65C", Offset = "0xA3B65C", VA = "0xA3B65C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60008D8")]
			[Address(RVA = "0xA3B664", Offset = "0xA3B664", VA = "0xA3B664")]
			set
			{
			}
		}

		[Token(Token = "0x170000D0")]
		public IDictionary<string, PropertyMetadata> Properties
		{
			[Token(Token = "0x60008D9")]
			[Address(RVA = "0xA3B670", Offset = "0xA3B670", VA = "0xA3B670")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008DA")]
			[Address(RVA = "0xA3B678", Offset = "0xA3B678", VA = "0xA3B678")]
			set
			{
			}
		}
	}
	[Token(Token = "0x2000148")]
	internal delegate void ExporterFunc(object obj, JsonWriter writer);
	[Token(Token = "0x2000149")]
	public delegate void ExporterFunc<T>(T obj, JsonWriter writer);
	[Token(Token = "0x200014A")]
	internal delegate object ImporterFunc(object input);
	[Token(Token = "0x200014B")]
	public delegate TValue ImporterFunc<TJson, TValue>(TJson input);
	[Token(Token = "0x200014C")]
	public delegate IJsonWrapper WrapperFactory();
	[Token(Token = "0x200014D")]
	public class JsonMapper
	{
		[Serializable]
		[Token(Token = "0x20006D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x978FEC", Offset = "0x978FEC")]
		private sealed class <>c
		{
			[Token(Token = "0x4001E11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001E12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static ExporterFunc <>9__23_0;

			[Token(Token = "0x4001E13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static ExporterFunc <>9__23_1;

			[Token(Token = "0x4001E14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static ExporterFunc <>9__23_2;

			[Token(Token = "0x4001E15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static ExporterFunc <>9__23_3;

			[Token(Token = "0x4001E16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static ExporterFunc <>9__23_4;

			[Token(Token = "0x4001E17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static ExporterFunc <>9__23_5;

			[Token(Token = "0x4001E18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static ExporterFunc <>9__23_6;

			[Token(Token = "0x4001E19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static ExporterFunc <>9__23_7;

			[Token(Token = "0x4001E1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public static ExporterFunc <>9__23_8;

			[Token(Token = "0x4001E1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public static ExporterFunc <>9__23_9;

			[Token(Token = "0x4001E1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public static ImporterFunc <>9__24_0;

			[Token(Token = "0x4001E1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public static ImporterFunc <>9__24_1;

			[Token(Token = "0x4001E1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public static ImporterFunc <>9__24_2;

			[Token(Token = "0x4001E1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public static ImporterFunc <>9__24_3;

			[Token(Token = "0x4001E20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public static ImporterFunc <>9__24_4;

			[Token(Token = "0x4001E21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public static ImporterFunc <>9__24_5;

			[Token(Token = "0x4001E22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public static ImporterFunc <>9__24_6;

			[Token(Token = "0x4001E23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public static ImporterFunc <>9__24_7;

			[Token(Token = "0x4001E24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			public static ImporterFunc <>9__24_8;

			[Token(Token = "0x4001E25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			public static ImporterFunc <>9__24_9;

			[Token(Token = "0x4001E26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			public static ImporterFunc <>9__24_10;

			[Token(Token = "0x4001E27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			public static ImporterFunc <>9__24_11;

			[Token(Token = "0x4001E28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public static ImporterFunc <>9__24_12;

			[Token(Token = "0x4001E29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public static WrapperFactory <>9__29_0;

			[Token(Token = "0x4001E2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			public static WrapperFactory <>9__30_0;

			[Token(Token = "0x4001E2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			public static WrapperFactory <>9__31_0;

			[Token(Token = "0x600244F")]
			[Address(RVA = "0xF81F04", Offset = "0xF81F04", VA = "0xF81F04")]
			public <>c()
			{
			}

			[Token(Token = "0x6002450")]
			[Address(RVA = "0xF81F0C", Offset = "0xF81F0C", VA = "0xF81F0C")]
			internal void <RegisterBaseExporters>b__23_0(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6002451")]
			[Address(RVA = "0xF81FB0", Offset = "0xF81FB0", VA = "0xF81FB0")]
			internal void <RegisterBaseExporters>b__23_1(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6002452")]
			[Address(RVA = "0xF82054", Offset = "0xF82054", VA = "0xF82054")]
			internal void <RegisterBaseExporters>b__23_2(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6002453")]
			[Address(RVA = "0xF8212C", Offset = "0xF8212C", VA = "0xF8212C")]
			internal void <RegisterBaseExporters>b__23_3(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6002454")]
			[Address(RVA = "0xF8228C", Offset = "0xF8228C", VA = "0xF8228C")]
			internal void <RegisterBaseExporters>b__23_4(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6002455")]
			[Address(RVA = "0xF82330", Offset = "0xF82330", VA = "0xF82330")]
			internal void <RegisterBaseExporters>b__23_5(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6002456")]
			[Address(RVA = "0xF823D4", Offset = "0xF823D4", VA = "0xF823D4")]
			internal void <RegisterBaseExporters>b__23_6(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6002457")]
			[Address(RVA = "0xF82478", Offset = "0xF82478", VA = "0xF82478")]
			internal void <RegisterBaseExporters>b__23_7(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6002458")]
			[Address(RVA = "0xF8251C", Offset = "0xF8251C", VA = "0xF8251C")]
			internal void <RegisterBaseExporters>b__23_8(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6002459")]
			[Address(RVA = "0xF82590", Offset = "0xF82590", VA = "0xF82590")]
			internal void <RegisterBaseExporters>b__23_9(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x600245A")]
			[Address(RVA = "0xF82608", Offset = "0xF82608", VA = "0xF82608")]
			internal object <RegisterBaseImporters>b__24_0(object input)
			{
				return null;
			}

			[Token(Token = "0x600245B")]
			[Address(RVA = "0xF826AC", Offset = "0xF826AC", VA = "0xF826AC")]
			internal object <RegisterBaseImporters>b__24_1(object input)
			{
				return null;
			}

			[Token(Token = "0x600245C")]
			[Address(RVA = "0xF82750", Offset = "0xF82750", VA = "0xF82750")]
			internal object <RegisterBaseImporters>b__24_2(object input)
			{
				return null;
			}

			[Token(Token = "0x600245D")]
			[Address(RVA = "0xF827F4", Offset = "0xF827F4", VA = "0xF827F4")]
			internal object <RegisterBaseImporters>b__24_3(object input)
			{
				return null;
			}

			[Token(Token = "0x600245E")]
			[Address(RVA = "0xF82898", Offset = "0xF82898", VA = "0xF82898")]
			internal object <RegisterBaseImporters>b__24_4(object input)
			{
				return null;
			}

			[Token(Token = "0x600245F")]
			[Address(RVA = "0xF8293C", Offset = "0xF8293C", VA = "0xF8293C")]
			internal object <RegisterBaseImporters>b__24_5(object input)
			{
				return null;
			}

			[Token(Token = "0x6002460")]
			[Address(RVA = "0xF829E0", Offset = "0xF829E0", VA = "0xF829E0")]
			internal object <RegisterBaseImporters>b__24_6(object input)
			{
				return null;
			}

			[Token(Token = "0x6002461")]
			[Address(RVA = "0xF82A80", Offset = "0xF82A80", VA = "0xF82A80")]
			internal object <RegisterBaseImporters>b__24_7(object input)
			{
				return null;
			}

			[Token(Token = "0x6002462")]
			[Address(RVA = "0xF82B24", Offset = "0xF82B24", VA = "0xF82B24")]
			internal object <RegisterBaseImporters>b__24_8(object input)
			{
				return null;
			}

			[Token(Token = "0x6002463")]
			[Address(RVA = "0xF82BC4", Offset = "0xF82BC4", VA = "0xF82BC4")]
			internal object <RegisterBaseImporters>b__24_9(object input)
			{
				return null;
			}

			[Token(Token = "0x6002464")]
			[Address(RVA = "0xF82C68", Offset = "0xF82C68", VA = "0xF82C68")]
			internal object <RegisterBaseImporters>b__24_10(object input)
			{
				return null;
			}

			[Token(Token = "0x6002465")]
			[Address(RVA = "0xF82D0C", Offset = "0xF82D0C", VA = "0xF82D0C")]
			internal object <RegisterBaseImporters>b__24_11(object input)
			{
				return null;
			}

			[Token(Token = "0x6002466")]
			[Address(RVA = "0xF82E08", Offset = "0xF82E08", VA = "0xF82E08")]
			internal object <RegisterBaseImporters>b__24_12(object input)
			{
				return null;
			}

			[Token(Token = "0x6002467")]
			[Address(RVA = "0xF82F38", Offset = "0xF82F38", VA = "0xF82F38")]
			internal IJsonWrapper <ToObject>b__29_0()
			{
				return null;
			}

			[Token(Token = "0x6002468")]
			[Address(RVA = "0xF82F94", Offset = "0xF82F94", VA = "0xF82F94")]
			internal IJsonWrapper <ToObject>b__30_0()
			{
				return null;
			}

			[Token(Token = "0x6002469")]
			[Address(RVA = "0xF82FF0", Offset = "0xF82FF0", VA = "0xF82FF0")]
			internal IJsonWrapper <ToObject>b__31_0()
			{
				return null;
			}
		}

		[Token(Token = "0x20006D1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x978FFC", Offset = "0x978FFC")]
		private sealed class <>c__DisplayClass37_0<T>
		{
			[Token(Token = "0x4001E2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ExporterFunc<T> exporter;

			[Token(Token = "0x600246A")]
			public <>c__DisplayClass37_0()
			{
			}

			[Token(Token = "0x600246B")]
			internal void <RegisterExporter>b__0(object obj, JsonWriter writer)
			{
			}
		}

		[Token(Token = "0x20006D2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97900C", Offset = "0x97900C")]
		private sealed class <>c__DisplayClass38_0<TJson, TValue>
		{
			[Token(Token = "0x4001E2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ImporterFunc<TJson, TValue> importer;

			[Token(Token = "0x600246C")]
			public <>c__DisplayClass38_0()
			{
			}

			[Token(Token = "0x600246D")]
			internal object <RegisterImporter>b__0(object input)
			{
				return null;
			}
		}

		[Token(Token = "0x400075C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int max_nesting_depth;

		[Token(Token = "0x400075D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IFormatProvider datetime_format;

		[Token(Token = "0x400075E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IDictionary<Type, ExporterFunc> base_exporters_table;

		[Token(Token = "0x400075F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IDictionary<Type, ExporterFunc> custom_exporters_table;

		[Token(Token = "0x4000760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static IDictionary<Type, IDictionary<Type, ImporterFunc>> base_importers_table;

		[Token(Token = "0x4000761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static IDictionary<Type, IDictionary<Type, ImporterFunc>> custom_importers_table;

		[Token(Token = "0x4000762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static IDictionary<Type, ArrayMetadata> array_metadata;

		[Token(Token = "0x4000763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static readonly object array_metadata_lock;

		[Token(Token = "0x4000764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static IDictionary<Type, IDictionary<Type, MethodInfo>> conv_ops;

		[Token(Token = "0x4000765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static readonly object conv_ops_lock;

		[Token(Token = "0x4000766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static IDictionary<Type, ObjectMetadata> object_metadata;

		[Token(Token = "0x4000767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static readonly object object_metadata_lock;

		[Token(Token = "0x4000768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private static IDictionary<Type, IList<PropertyMetadata>> type_properties;

		[Token(Token = "0x4000769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private static readonly object type_properties_lock;

		[Token(Token = "0x400076A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private static JsonWriter static_writer;

		[Token(Token = "0x400076B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private static readonly object static_writer_lock;

		[Token(Token = "0x60008EF")]
		[Address(RVA = "0xF79758", Offset = "0xF79758", VA = "0xF79758")]
		static JsonMapper()
		{
		}

		[Token(Token = "0x60008F0")]
		[Address(RVA = "0xF7B624", Offset = "0xF7B624", VA = "0xF7B624")]
		private static void AddArrayMetadata(Type type)
		{
		}

		[Token(Token = "0x60008F1")]
		[Address(RVA = "0xF7BB2C", Offset = "0xF7BB2C", VA = "0xF7BB2C")]
		private static void AddObjectMetadata(Type type)
		{
		}

		[Token(Token = "0x60008F2")]
		[Address(RVA = "0xF7C324", Offset = "0xF7C324", VA = "0xF7C324")]
		private static void AddTypeProperties(Type type)
		{
		}

		[Token(Token = "0x60008F3")]
		[Address(RVA = "0xF7C8B8", Offset = "0xF7C8B8", VA = "0xF7C8B8")]
		private static MethodInfo GetConvOp(Type t1, Type t2)
		{
			return null;
		}

		[Token(Token = "0x60008F4")]
		[Address(RVA = "0xF7D1C8", Offset = "0xF7D1C8", VA = "0xF7D1C8")]
		private static object ReadValue(Type inst_type, JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x60008F5")]
		[Address(RVA = "0xF7EADC", Offset = "0xF7EADC", VA = "0xF7EADC")]
		private static IJsonWrapper ReadValue(WrapperFactory factory, JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x60008F6")]
		[Address(RVA = "0xF79AB0", Offset = "0xF79AB0", VA = "0xF79AB0")]
		private static void RegisterBaseExporters()
		{
		}

		[Token(Token = "0x60008F7")]
		[Address(RVA = "0xF7A8E0", Offset = "0xF7A8E0", VA = "0xF7A8E0")]
		private static void RegisterBaseImporters()
		{
		}

		[Token(Token = "0x60008F8")]
		[Address(RVA = "0xF7F65C", Offset = "0xF7F65C", VA = "0xF7F65C")]
		private static void RegisterImporter(IDictionary<Type, IDictionary<Type, ImporterFunc>> table, Type json_type, Type value_type, ImporterFunc importer)
		{
		}

		[Token(Token = "0x60008F9")]
		[Address(RVA = "0xF7F8C0", Offset = "0xF7F8C0", VA = "0xF7F8C0")]
		private static void WriteValue(object obj, JsonWriter writer, bool writer_is_private, int depth)
		{
		}

		[Token(Token = "0x60008FA")]
		[Address(RVA = "0xF813B8", Offset = "0xF813B8", VA = "0xF813B8")]
		public static string ToJson(object obj)
		{
			return null;
		}

		[Token(Token = "0x60008FB")]
		[Address(RVA = "0xF81624", Offset = "0xF81624", VA = "0xF81624")]
		public static void ToJson(object obj, JsonWriter writer)
		{
		}

		[Token(Token = "0x60008FC")]
		[Address(RVA = "0xF816A0", Offset = "0xF816A0", VA = "0xF816A0")]
		public static JsonData ToObject(JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x60008FD")]
		[Address(RVA = "0xF818A8", Offset = "0xF818A8", VA = "0xF818A8")]
		public static JsonData ToObject(TextReader reader)
		{
			return null;
		}

		[Token(Token = "0x60008FE")]
		[Address(RVA = "0xF81A54", Offset = "0xF81A54", VA = "0xF81A54")]
		public static JsonData ToObject(string json)
		{
			return null;
		}

		[Token(Token = "0x60008FF")]
		public static T ToObject<T>(JsonReader reader)
		{
			return (T)null;
		}

		[Token(Token = "0x6000900")]
		public static T ToObject<T>(TextReader reader)
		{
			return (T)null;
		}

		[Token(Token = "0x6000901")]
		public static T ToObject<T>(string json)
		{
			return (T)null;
		}

		[Token(Token = "0x6000902")]
		[Address(RVA = "0xF81834", Offset = "0xF81834", VA = "0xF81834")]
		public static IJsonWrapper ToWrapper(WrapperFactory factory, JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x6000903")]
		[Address(RVA = "0xF81BD8", Offset = "0xF81BD8", VA = "0xF81BD8")]
		public static IJsonWrapper ToWrapper(WrapperFactory factory, string json)
		{
			return null;
		}

		[Token(Token = "0x6000904")]
		public static void RegisterExporter<T>(ExporterFunc<T> exporter)
		{
		}

		[Token(Token = "0x6000905")]
		public static void RegisterImporter<TJson, TValue>(ImporterFunc<TJson, TValue> importer)
		{
		}

		[Token(Token = "0x6000906")]
		[Address(RVA = "0xF81CE0", Offset = "0xF81CE0", VA = "0xF81CE0")]
		public static void UnregisterExporters()
		{
		}

		[Token(Token = "0x6000907")]
		[Address(RVA = "0xF81DBC", Offset = "0xF81DBC", VA = "0xF81DBC")]
		public static void UnregisterImporters()
		{
		}

		[Token(Token = "0x6000908")]
		[Address(RVA = "0xF81E98", Offset = "0xF81E98", VA = "0xF81E98")]
		public JsonMapper()
		{
		}
	}
	[Token(Token = "0x200014E")]
	public enum JsonToken
	{
		[Token(Token = "0x400076D")]
		None,
		[Token(Token = "0x400076E")]
		ObjectStart,
		[Token(Token = "0x400076F")]
		PropertyName,
		[Token(Token = "0x4000770")]
		ObjectEnd,
		[Token(Token = "0x4000771")]
		ArrayStart,
		[Token(Token = "0x4000772")]
		ArrayEnd,
		[Token(Token = "0x4000773")]
		Int,
		[Token(Token = "0x4000774")]
		Long,
		[Token(Token = "0x4000775")]
		Double,
		[Token(Token = "0x4000776")]
		String,
		[Token(Token = "0x4000777")]
		Boolean,
		[Token(Token = "0x4000778")]
		Null
	}
	[Token(Token = "0x200014F")]
	public class JsonReader
	{
		[Token(Token = "0x4000779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IDictionary<int, IDictionary<int, int[]>> parse_table;

		[Token(Token = "0x400077A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Stack<int> automaton_stack;

		[Token(Token = "0x400077B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int current_input;

		[Token(Token = "0x400077C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int current_symbol;

		[Token(Token = "0x400077D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool end_of_json;

		[Token(Token = "0x400077E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool end_of_input;

		[Token(Token = "0x400077F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Lexer lexer;

		[Token(Token = "0x4000780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool parser_in_string;

		[Token(Token = "0x4000781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool parser_return;

		[Token(Token = "0x4000782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		private bool read_started;

		[Token(Token = "0x4000783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TextReader reader;

		[Token(Token = "0x4000784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool reader_is_owned;

		[Token(Token = "0x4000785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private object token_value;

		[Token(Token = "0x4000786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private JsonToken token;

		[Token(Token = "0x170000D1")]
		public bool AllowComments
		{
			[Token(Token = "0x6000909")]
			[Address(RVA = "0xF8304C", Offset = "0xF8304C", VA = "0xF8304C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600090A")]
			[Address(RVA = "0xF83080", Offset = "0xF83080", VA = "0xF83080")]
			set
			{
			}
		}

		[Token(Token = "0x170000D2")]
		public bool AllowSingleQuotedStrings
		{
			[Token(Token = "0x600090B")]
			[Address(RVA = "0xF830C0", Offset = "0xF830C0", VA = "0xF830C0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600090C")]
			[Address(RVA = "0xF830F4", Offset = "0xF830F4", VA = "0xF830F4")]
			set
			{
			}
		}

		[Token(Token = "0x170000D3")]
		public bool EndOfInput
		{
			[Token(Token = "0x600090D")]
			[Address(RVA = "0xF83134", Offset = "0xF83134", VA = "0xF83134")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000D4")]
		public bool EndOfJson
		{
			[Token(Token = "0x600090E")]
			[Address(RVA = "0xF8313C", Offset = "0xF8313C", VA = "0xF8313C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000D5")]
		public JsonToken Token
		{
			[Token(Token = "0x600090F")]
			[Address(RVA = "0xF7EA04", Offset = "0xF7EA04", VA = "0xF7EA04")]
			get
			{
				return default(JsonToken);
			}
		}

		[Token(Token = "0x170000D6")]
		public object Value
		{
			[Token(Token = "0x6000910")]
			[Address(RVA = "0xF7EA0C", Offset = "0xF7EA0C", VA = "0xF7EA0C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000911")]
		[Address(RVA = "0xF83144", Offset = "0xF83144", VA = "0xF83144")]
		static JsonReader()
		{
		}

		[Token(Token = "0x6000912")]
		[Address(RVA = "0xF81C68", Offset = "0xF81C68", VA = "0xF81C68")]
		public JsonReader(string json_text)
		{
		}

		[Token(Token = "0x6000913")]
		[Address(RVA = "0xF81A4C", Offset = "0xF81A4C", VA = "0xF81A4C")]
		public JsonReader(TextReader reader)
		{
		}

		[Token(Token = "0x6000914")]
		[Address(RVA = "0xF8393C", Offset = "0xF8393C", VA = "0xF8393C")]
		private JsonReader(TextReader reader, bool owned)
		{
		}

		[Token(Token = "0x6000915")]
		[Address(RVA = "0xF83148", Offset = "0xF83148", VA = "0xF83148")]
		private static void PopulateParseTable()
		{
		}

		[Token(Token = "0x6000916")]
		[Address(RVA = "0xF83C74", Offset = "0xF83C74", VA = "0xF83C74")]
		private static void TableAddCol(ParserToken row, int col, params int[] symbols)
		{
		}

		[Token(Token = "0x6000917")]
		[Address(RVA = "0xF83B60", Offset = "0xF83B60", VA = "0xF83B60")]
		private static void TableAddRow(ParserToken rule)
		{
		}

		[Token(Token = "0x6000918")]
		[Address(RVA = "0xF83DE4", Offset = "0xF83DE4", VA = "0xF83DE4")]
		private void ProcessNumber(string number)
		{
		}

		[Token(Token = "0x6000919")]
		[Address(RVA = "0xF83F80", Offset = "0xF83F80", VA = "0xF83F80")]
		private void ProcessSymbol()
		{
		}

		[Token(Token = "0x600091A")]
		[Address(RVA = "0xF84138", Offset = "0xF84138", VA = "0xF84138")]
		private bool ReadToken()
		{
			return default(bool);
		}

		[Token(Token = "0x600091B")]
		[Address(RVA = "0xF84430", Offset = "0xF84430", VA = "0xF84430")]
		public void Close()
		{
		}

		[Token(Token = "0x600091C")]
		[Address(RVA = "0xF7E558", Offset = "0xF7E558", VA = "0xF7E558")]
		public bool Read()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000150")]
	internal enum Condition
	{
		[Token(Token = "0x4000788")]
		InArray,
		[Token(Token = "0x4000789")]
		InObject,
		[Token(Token = "0x400078A")]
		NotAProperty,
		[Token(Token = "0x400078B")]
		Property,
		[Token(Token = "0x400078C")]
		Value
	}
	[Token(Token = "0x2000151")]
	internal class WriterContext
	{
		[Token(Token = "0x400078D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Count;

		[Token(Token = "0x400078E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool InArray;

		[Token(Token = "0x400078F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public bool InObject;

		[Token(Token = "0x4000790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		public bool ExpectingValue;

		[Token(Token = "0x4000791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Padding;

		[Token(Token = "0x600091D")]
		[Address(RVA = "0xF848EC", Offset = "0xF848EC", VA = "0xF848EC")]
		public WriterContext()
		{
		}
	}
	[Token(Token = "0x2000152")]
	public class JsonWriter
	{
		[Token(Token = "0x4000792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static NumberFormatInfo number_format;

		[Token(Token = "0x4000793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private WriterContext context;

		[Token(Token = "0x4000794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Stack<WriterContext> ctx_stack;

		[Token(Token = "0x4000795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool has_reached_end;

		[Token(Token = "0x4000796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private char[] hex_seq;

		[Token(Token = "0x4000797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int indentation;

		[Token(Token = "0x4000798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int indent_value;

		[Token(Token = "0x4000799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private StringBuilder inst_string_builder;

		[Token(Token = "0x400079A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool pretty_print;

		[Token(Token = "0x400079B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool validate;

		[Token(Token = "0x400079C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TextWriter writer;

		[Token(Token = "0x170000D7")]
		public int IndentValue
		{
			[Token(Token = "0x600091E")]
			[Address(RVA = "0xF84490", Offset = "0xF84490", VA = "0xF84490")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600091F")]
			[Address(RVA = "0xF84498", Offset = "0xF84498", VA = "0xF84498")]
			set
			{
			}
		}

		[Token(Token = "0x170000D8")]
		public bool PrettyPrint
		{
			[Token(Token = "0x6000920")]
			[Address(RVA = "0xF844AC", Offset = "0xF844AC", VA = "0xF844AC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000921")]
			[Address(RVA = "0xF844B4", Offset = "0xF844B4", VA = "0xF844B4")]
			set
			{
			}
		}

		[Token(Token = "0x170000D9")]
		public TextWriter TextWriter
		{
			[Token(Token = "0x6000922")]
			[Address(RVA = "0xF812CC", Offset = "0xF812CC", VA = "0xF812CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DA")]
		public bool Validate
		{
			[Token(Token = "0x6000923")]
			[Address(RVA = "0xF793F8", Offset = "0xF793F8", VA = "0xF793F8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000924")]
			[Address(RVA = "0xF793EC", Offset = "0xF793EC", VA = "0xF793EC")]
			set
			{
			}
		}

		[Token(Token = "0x6000925")]
		[Address(RVA = "0xF844C0", Offset = "0xF844C0", VA = "0xF844C0")]
		static JsonWriter()
		{
		}

		[Token(Token = "0x6000926")]
		[Address(RVA = "0xF79A14", Offset = "0xF79A14", VA = "0xF79A14")]
		public JsonWriter()
		{
		}

		[Token(Token = "0x6000927")]
		[Address(RVA = "0xF845F4", Offset = "0xF845F4", VA = "0xF845F4")]
		public JsonWriter(StringBuilder sb)
		{
		}

		[Token(Token = "0x6000928")]
		[Address(RVA = "0xF79344", Offset = "0xF79344", VA = "0xF79344")]
		public JsonWriter(TextWriter writer)
		{
		}

		[Token(Token = "0x6000929")]
		[Address(RVA = "0xF84668", Offset = "0xF84668", VA = "0xF84668")]
		private void DoValidation(Condition cond)
		{
		}

		[Token(Token = "0x600092A")]
		[Address(RVA = "0xF84518", Offset = "0xF84518", VA = "0xF84518")]
		private void Init()
		{
		}

		[Token(Token = "0x600092B")]
		[Address(RVA = "0xF848F4", Offset = "0xF848F4", VA = "0xF848F4")]
		private static void IntToHex(int n, char[] hex)
		{
		}

		[Token(Token = "0x600092C")]
		[Address(RVA = "0xF849A4", Offset = "0xF849A4", VA = "0xF849A4")]
		private void Indent()
		{
		}

		[Token(Token = "0x600092D")]
		[Address(RVA = "0xF849BC", Offset = "0xF849BC", VA = "0xF849BC")]
		private void Put(string str)
		{
		}

		[Token(Token = "0x600092E")]
		[Address(RVA = "0xF84A6C", Offset = "0xF84A6C", VA = "0xF84A6C")]
		private void PutNewline()
		{
		}

		[Token(Token = "0x600092F")]
		[Address(RVA = "0xF84A74", Offset = "0xF84A74", VA = "0xF84A74")]
		private void PutNewline(bool add_comma)
		{
		}

		[Token(Token = "0x6000930")]
		[Address(RVA = "0xF84B38", Offset = "0xF84B38", VA = "0xF84B38")]
		private void PutString(string str)
		{
		}

		[Token(Token = "0x6000931")]
		[Address(RVA = "0xF84EA4", Offset = "0xF84EA4", VA = "0xF84EA4")]
		private void Unindent()
		{
		}

		[Token(Token = "0x6000932")]
		[Address(RVA = "0xF84EBC", Offset = "0xF84EBC", VA = "0xF84EBC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000933")]
		[Address(RVA = "0xF81538", Offset = "0xF81538", VA = "0xF81538")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000934")]
		[Address(RVA = "0xF78670", Offset = "0xF78670", VA = "0xF78670")]
		public void Write(bool boolean)
		{
		}

		[Token(Token = "0x6000935")]
		[Address(RVA = "0xF821A0", Offset = "0xF821A0", VA = "0xF821A0")]
		public void Write(decimal number)
		{
		}

		[Token(Token = "0x6000936")]
		[Address(RVA = "0xF7871C", Offset = "0xF7871C", VA = "0xF7871C")]
		public void Write(double number)
		{
		}

		[Token(Token = "0x6000937")]
		[Address(RVA = "0xF7887C", Offset = "0xF7887C", VA = "0xF7887C")]
		public void Write(int number)
		{
		}

		[Token(Token = "0x6000938")]
		[Address(RVA = "0xF78960", Offset = "0xF78960", VA = "0xF78960")]
		public void Write(long number)
		{
		}

		[Token(Token = "0x6000939")]
		[Address(RVA = "0xF785D0", Offset = "0xF785D0", VA = "0xF785D0")]
		public void Write(string str)
		{
		}

		[Token(Token = "0x600093A")]
		[Address(RVA = "0xF812D4", Offset = "0xF812D4", VA = "0xF812D4")]
		public void Write(ulong number)
		{
		}

		[Token(Token = "0x600093B")]
		[Address(RVA = "0xF78B28", Offset = "0xF78B28", VA = "0xF78B28")]
		public void WriteArrayEnd()
		{
		}

		[Token(Token = "0x600093C")]
		[Address(RVA = "0xF78A44", Offset = "0xF78A44", VA = "0xF78A44")]
		public void WriteArrayStart()
		{
		}

		[Token(Token = "0x600093D")]
		[Address(RVA = "0xF78ECC", Offset = "0xF78ECC", VA = "0xF78ECC")]
		public void WriteObjectEnd()
		{
		}

		[Token(Token = "0x600093E")]
		[Address(RVA = "0xF78C38", Offset = "0xF78C38", VA = "0xF78C38")]
		public void WriteObjectStart()
		{
		}

		[Token(Token = "0x600093F")]
		[Address(RVA = "0xF78D1C", Offset = "0xF78D1C", VA = "0xF78D1C")]
		public void WritePropertyName(string property_name)
		{
		}
	}
	[Token(Token = "0x2000153")]
	internal class FsmContext
	{
		[Token(Token = "0x400079D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool Return;

		[Token(Token = "0x400079E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int NextState;

		[Token(Token = "0x400079F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Lexer L;

		[Token(Token = "0x40007A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int StateStack;

		[Token(Token = "0x6000940")]
		[Address(RVA = "0xF72F78", Offset = "0xF72F78", VA = "0xF72F78")]
		public FsmContext()
		{
		}
	}
	[Token(Token = "0x2000154")]
	internal class Lexer
	{
		[Token(Token = "0x20006D3")]
		private delegate bool StateHandler(FsmContext ctx);

		[Token(Token = "0x40007A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int[] fsm_return_table;

		[Token(Token = "0x40007A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static StateHandler[] fsm_handler_table;

		[Token(Token = "0x40007A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool allow_comments;

		[Token(Token = "0x40007A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool allow_single_quoted_strings;

		[Token(Token = "0x40007A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		private bool end_of_input;

		[Token(Token = "0x40007A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private FsmContext fsm_context;

		[Token(Token = "0x40007A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int input_buffer;

		[Token(Token = "0x40007A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int input_char;

		[Token(Token = "0x40007A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextReader reader;

		[Token(Token = "0x40007AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int state;

		[Token(Token = "0x40007AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private StringBuilder string_buffer;

		[Token(Token = "0x40007AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string string_value;

		[Token(Token = "0x40007AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int token;

		[Token(Token = "0x40007AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int unichar;

		[Token(Token = "0x170000DB")]
		public bool AllowComments
		{
			[Token(Token = "0x6000941")]
			[Address(RVA = "0xF83078", Offset = "0xF83078", VA = "0xF83078")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000942")]
			[Address(RVA = "0xF830B4", Offset = "0xF830B4", VA = "0xF830B4")]
			set
			{
			}
		}

		[Token(Token = "0x170000DC")]
		public bool AllowSingleQuotedStrings
		{
			[Token(Token = "0x6000943")]
			[Address(RVA = "0xF830EC", Offset = "0xF830EC", VA = "0xF830EC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000944")]
			[Address(RVA = "0xF83128", Offset = "0xF83128", VA = "0xF83128")]
			set
			{
			}
		}

		[Token(Token = "0x170000DD")]
		public bool EndOfInput
		{
			[Token(Token = "0x6000945")]
			[Address(RVA = "0xF84428", Offset = "0xF84428", VA = "0xF84428")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000DE")]
		public int Token
		{
			[Token(Token = "0x6000946")]
			[Address(RVA = "0xF84488", Offset = "0xF84488", VA = "0xF84488")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000DF")]
		public string StringValue
		{
			[Token(Token = "0x6000947")]
			[Address(RVA = "0xF84130", Offset = "0xF84130", VA = "0xF84130")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000948")]
		[Address(RVA = "0xF84F2C", Offset = "0xF84F2C", VA = "0xF84F2C")]
		static Lexer()
		{
		}

		[Token(Token = "0x6000949")]
		[Address(RVA = "0xF83A98", Offset = "0xF83A98", VA = "0xF83A98")]
		public Lexer(TextReader reader)
		{
		}

		[Token(Token = "0x600094A")]
		[Address(RVA = "0xF85BDC", Offset = "0xF85BDC", VA = "0xF85BDC")]
		private static int HexValue(int digit)
		{
			return default(int);
		}

		[Token(Token = "0x600094B")]
		[Address(RVA = "0xF84F30", Offset = "0xF84F30", VA = "0xF84F30")]
		private static void PopulateFsmTables()
		{
		}

		[Token(Token = "0x600094C")]
		[Address(RVA = "0xF85C68", Offset = "0xF85C68", VA = "0xF85C68")]
		private static char ProcessEscChar(int esc_char)
		{
			return default(char);
		}

		[Token(Token = "0x600094D")]
		[Address(RVA = "0xF85D68", Offset = "0xF85D68", VA = "0xF85D68")]
		private static bool State1(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600094E")]
		[Address(RVA = "0xF860BC", Offset = "0xF860BC", VA = "0xF860BC")]
		private static bool State2(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600094F")]
		[Address(RVA = "0xF8620C", Offset = "0xF8620C", VA = "0xF8620C")]
		private static bool State3(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000950")]
		[Address(RVA = "0xF8646C", Offset = "0xF8646C", VA = "0xF8646C")]
		private static bool State4(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000951")]
		[Address(RVA = "0xF8663C", Offset = "0xF8663C", VA = "0xF8663C")]
		private static bool State5(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000952")]
		[Address(RVA = "0xF86728", Offset = "0xF86728", VA = "0xF86728")]
		private static bool State6(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000953")]
		[Address(RVA = "0xF8692C", Offset = "0xF8692C", VA = "0xF8692C")]
		private static bool State7(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000954")]
		[Address(RVA = "0xF86A3C", Offset = "0xF86A3C", VA = "0xF86A3C")]
		private static bool State8(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000955")]
		[Address(RVA = "0xF86BD4", Offset = "0xF86BD4", VA = "0xF86BD4")]
		private static bool State9(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000956")]
		[Address(RVA = "0xF86C54", Offset = "0xF86C54", VA = "0xF86C54")]
		private static bool State10(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000957")]
		[Address(RVA = "0xF86CD4", Offset = "0xF86CD4", VA = "0xF86CD4")]
		private static bool State11(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000958")]
		[Address(RVA = "0xF86D54", Offset = "0xF86D54", VA = "0xF86D54")]
		private static bool State12(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000959")]
		[Address(RVA = "0xF86DD4", Offset = "0xF86DD4", VA = "0xF86DD4")]
		private static bool State13(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600095A")]
		[Address(RVA = "0xF86E54", Offset = "0xF86E54", VA = "0xF86E54")]
		private static bool State14(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600095B")]
		[Address(RVA = "0xF86ED4", Offset = "0xF86ED4", VA = "0xF86ED4")]
		private static bool State15(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600095C")]
		[Address(RVA = "0xF86F54", Offset = "0xF86F54", VA = "0xF86F54")]
		private static bool State16(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600095D")]
		[Address(RVA = "0xF86FD4", Offset = "0xF86FD4", VA = "0xF86FD4")]
		private static bool State17(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600095E")]
		[Address(RVA = "0xF87054", Offset = "0xF87054", VA = "0xF87054")]
		private static bool State18(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600095F")]
		[Address(RVA = "0xF870D4", Offset = "0xF870D4", VA = "0xF870D4")]
		private static bool State19(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000960")]
		[Address(RVA = "0xF871E4", Offset = "0xF871E4", VA = "0xF871E4")]
		private static bool State20(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000961")]
		[Address(RVA = "0xF87264", Offset = "0xF87264", VA = "0xF87264")]
		private static bool State21(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000962")]
		[Address(RVA = "0xF873F8", Offset = "0xF873F8", VA = "0xF873F8")]
		private static bool State22(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000963")]
		[Address(RVA = "0xF876B8", Offset = "0xF876B8", VA = "0xF876B8")]
		private static bool State23(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000964")]
		[Address(RVA = "0xF877C8", Offset = "0xF877C8", VA = "0xF877C8")]
		private static bool State24(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000965")]
		[Address(RVA = "0xF87860", Offset = "0xF87860", VA = "0xF87860")]
		private static bool State25(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000966")]
		[Address(RVA = "0xF878F0", Offset = "0xF878F0", VA = "0xF878F0")]
		private static bool State26(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000967")]
		[Address(RVA = "0xF87970", Offset = "0xF87970", VA = "0xF87970")]
		private static bool State27(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000968")]
		[Address(RVA = "0xF879F0", Offset = "0xF879F0", VA = "0xF879F0")]
		private static bool State28(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000969")]
		[Address(RVA = "0xF86084", Offset = "0xF86084", VA = "0xF86084")]
		private bool GetChar()
		{
			return default(bool);
		}

		[Token(Token = "0x600096A")]
		[Address(RVA = "0xF87A94", Offset = "0xF87A94", VA = "0xF87A94")]
		private int NextChar()
		{
			return default(int);
		}

		[Token(Token = "0x600096B")]
		[Address(RVA = "0xF841B8", Offset = "0xF841B8", VA = "0xF841B8")]
		public bool NextToken()
		{
			return default(bool);
		}

		[Token(Token = "0x600096C")]
		[Address(RVA = "0xF86460", Offset = "0xF86460", VA = "0xF86460")]
		private void UngetChar()
		{
		}
	}
	[Token(Token = "0x2000155")]
	internal enum ParserToken
	{
		[Token(Token = "0x40007B0")]
		None = 65536,
		[Token(Token = "0x40007B1")]
		Number,
		[Token(Token = "0x40007B2")]
		True,
		[Token(Token = "0x40007B3")]
		False,
		[Token(Token = "0x40007B4")]
		Null,
		[Token(Token = "0x40007B5")]
		CharSeq,
		[Token(Token = "0x40007B6")]
		Char,
		[Token(Token = "0x40007B7")]
		Text,
		[Token(Token = "0x40007B8")]
		Object,
		[Token(Token = "0x40007B9")]
		ObjectPrime,
		[Token(Token = "0x40007BA")]
		Pair,
		[Token(Token = "0x40007BB")]
		PairRest,
		[Token(Token = "0x40007BC")]
		Array,
		[Token(Token = "0x40007BD")]
		ArrayPrime,
		[Token(Token = "0x40007BE")]
		Value,
		[Token(Token = "0x40007BF")]
		ValueRest,
		[Token(Token = "0x40007C0")]
		String,
		[Token(Token = "0x40007C1")]
		End,
		[Token(Token = "0x40007C2")]
		Epsilon
	}
}
namespace StylizedWater
{
	[Token(Token = "0x2000156")]
	public class OrbitCamera : MonoBehaviour
	{
		[Token(Token = "0x40007C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97EB44", Offset = "0x97EB44")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x97EB44", Offset = "0x97EB44")]
		public Transform pivot;

		[Token(Token = "0x40007C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x97EB90", Offset = "0x97EB90")]
		public bool enableMouse;

		[Token(Token = "0x40007C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float idleRotationSpeed;

		[Token(Token = "0x40007C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform cam;

		[Token(Token = "0x40007C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float cameraRotSide;

		[Token(Token = "0x40007C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float cameraRotUp;

		[Token(Token = "0x40007C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float cameraRotSideCur;

		[Token(Token = "0x40007CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float cameraRotUpCur;

		[Token(Token = "0x40007CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float distance;

		[Token(Token = "0x600096D")]
		[Address(RVA = "0xC77D08", Offset = "0xC77D08", VA = "0xC77D08")]
		private void Start()
		{
		}

		[Token(Token = "0x600096E")]
		[Address(RVA = "0xC77E0C", Offset = "0xC77E0C", VA = "0xC77E0C")]
		private void Update()
		{
		}

		[Token(Token = "0x600096F")]
		[Address(RVA = "0xC78264", Offset = "0xC78264", VA = "0xC78264")]
		public OrbitCamera()
		{
		}
	}
	[Token(Token = "0x2000157")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x96DFD0", Offset = "0x96DFD0")]
	[ExecuteInEditMode]
	public class EnableDepthBuffer : MonoBehaviour
	{
		[Token(Token = "0x40007CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Camera cam;

		[Token(Token = "0x6000970")]
		[Address(RVA = "0xC77C20", Offset = "0xC77C20", VA = "0xC77C20")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000971")]
		[Address(RVA = "0xC77C24", Offset = "0xC77C24", VA = "0xC77C24")]
		private void Set()
		{
		}

		[Token(Token = "0x6000972")]
		[Address(RVA = "0xC77D00", Offset = "0xC77D00", VA = "0xC77D00")]
		public EnableDepthBuffer()
		{
		}
	}
	[Token(Token = "0x2000158")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x96E044", Offset = "0x96E044")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x96E044", Offset = "0x96E044")]
	public class StylizedWater : MonoBehaviour
	{
		[Token(Token = "0x40007CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] shaderNames;

		[Token(Token = "0x40007CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int shaderIndex;

		[Token(Token = "0x40007CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Shader shader;

		[Token(Token = "0x40007D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Shader DesktopShader;

		[Token(Token = "0x40007D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Shader MobileAdvancedShader;

		[Token(Token = "0x40007D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97EBA0", Offset = "0x97EBA0")]
		public int renderQueue;

		[Token(Token = "0x40007D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool enableVertexColors;

		[Token(Token = "0x40007D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		public bool isUnlit;

		[Token(Token = "0x40007D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
		public bool enableGradient;

		[Token(Token = "0x40007D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Gradient colorGradient;

		[Token(Token = "0x40007D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Color waterShallowColor;

		[Token(Token = "0x40007D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97EBC0", Offset = "0x97EBC0")]
		public float depth;

		[Token(Token = "0x40007D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Color waterColor;

		[Token(Token = "0x40007DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public Color fresnelColor;

		[Token(Token = "0x40007DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float fresnel;

		[Token(Token = "0x40007DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Color rimColor;

		[Token(Token = "0x40007DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97EBDC", Offset = "0x97EBDC")]
		public float waveTint;

		[Token(Token = "0x40007DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public bool pixelate;

		[Token(Token = "0x40007DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97EBF4", Offset = "0x97EBF4")]
		public float transparency;

		[Token(Token = "0x40007E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97EC0C", Offset = "0x97EC0C")]
		public float glossiness;

		[Token(Token = "0x40007E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97EC28", Offset = "0x97EC28")]
		public float edgeFade;

		[Token(Token = "0x40007E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public string[] tilingMethodNames;

		[Token(Token = "0x40007E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float worldSpaceTiling;

		[Token(Token = "0x40007E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97EC40", Offset = "0x97EC40")]
		public float refractionAmount;

		[Token(Token = "0x40007E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public bool enableNormalMap;

		[Token(Token = "0x40007E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97EC5C", Offset = "0x97EC5C")]
		public float normalStrength;

		[Token(Token = "0x40007E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public bool enableMacroNormals;

		[Token(Token = "0x40007E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97EC74", Offset = "0x97EC74")]
		public float macroNormalsDistance;

		[Token(Token = "0x40007E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97EC94", Offset = "0x97EC94")]
		public float normalTiling;

		[Token(Token = "0x40007EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public int intersectionSolver;

		[Token(Token = "0x40007EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public string[] intersectionSolverNames;

		[Token(Token = "0x40007EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97ECAC", Offset = "0x97ECAC")]
		public float rimSize;

		[Token(Token = "0x40007ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97ECC4", Offset = "0x97ECC4")]
		public float rimFalloff;

		[Token(Token = "0x40007EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public float rimTiling;

		[Token(Token = "0x40007EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97ECE0", Offset = "0x97ECE0")]
		public float rimDistortion;

		[Token(Token = "0x40007F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public bool enableVCIntersection;

		[Token(Token = "0x40007F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public int foamSolver;

		[Token(Token = "0x40007F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public string[] foamSolverNames;

		[Token(Token = "0x40007F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97ECF8", Offset = "0x97ECF8")]
		public float foamOpacity;

		[Token(Token = "0x40007F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		public float foamTiling;

		[Token(Token = "0x40007F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97ED10", Offset = "0x97ED10")]
		public float foamSize;

		[Token(Token = "0x40007F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97ED28", Offset = "0x97ED28")]
		public float foamDistortion;

		[Token(Token = "0x40007F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97ED40", Offset = "0x97ED40")]
		public float foamSpeed;

		[Token(Token = "0x40007F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97ED58", Offset = "0x97ED58")]
		public float waveFoam;

		[Token(Token = "0x40007F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97ED70", Offset = "0x97ED70")]
		public float reflectionStrength;

		[Token(Token = "0x40007FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97ED88", Offset = "0x97ED88")]
		public float reflectionFresnel;

		[Token(Token = "0x40007FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public bool showReflection;

		[Token(Token = "0x40007FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97EDA0", Offset = "0x97EDA0")]
		public float reflectionRefraction;

		[Token(Token = "0x40007FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97EDBC", Offset = "0x97EDBC")]
		public float waveSpeed;

		[Token(Token = "0x40007FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97EDD8", Offset = "0x97EDD8")]
		public float waveStrength;

		[Token(Token = "0x40007FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97EDF0", Offset = "0x97EDF0")]
		public Vector4 waveDirectionXZ;

		[Token(Token = "0x4000800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public bool enableSecondaryWaves;

		[Token(Token = "0x4000801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public Texture2D customIntersection;

		[Token(Token = "0x4000802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public Texture2D customNormal;

		[Token(Token = "0x4000803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public Texture2D customHeightmap;

		[Token(Token = "0x4000804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97EE08", Offset = "0x97EE08")]
		public float tessellation;

		[Token(Token = "0x4000805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public string[] intersectionStyleNames;

		[Token(Token = "0x4000806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public int intersectionStyle;

		[Token(Token = "0x4000807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public string[] waveStyleNames;

		[Token(Token = "0x4000808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public int waveStyle;

		[Token(Token = "0x4000809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public string[] waveHeightmapNames;

		[Token(Token = "0x400080A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public int waveHeightmapStyle;

		[Token(Token = "0x400080B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		public float waveSize;

		[Token(Token = "0x400080C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public bool useCustomIntersection;

		[Token(Token = "0x400080D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x199")]
		public bool useCustomNormals;

		[Token(Token = "0x400080E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19A")]
		public bool useCustomHeightmap;

		[Token(Token = "0x400080F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public Texture2D normals;

		[Token(Token = "0x4000810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public Texture2D shadermap;

		[Token(Token = "0x4000811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public Texture2D colorGradientTex;

		[Token(Token = "0x4000812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public bool useCompression;

		[Token(Token = "0x4000813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private Camera reflectionCamera;

		[Token(Token = "0x4000814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private Camera refractCamera;

		[Token(Token = "0x4000815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		public bool useReflection;

		[Token(Token = "0x4000816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D1")]
		public bool useRefractionCam;

		[Token(Token = "0x4000817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D2")]
		public bool enableReflectionBlur;

		[Token(Token = "0x4000818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97EE24", Offset = "0x97EE24")]
		public float reflectionBlurLength;

		[Token(Token = "0x4000819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97EE3C", Offset = "0x97EE3C")]
		public int reflectionBlurPasses;

		[Token(Token = "0x400081A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private StylizedWaterBlur reflectionBlurRenderer;

		[Token(Token = "0x400081B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		public string[] refractionSolverNames;

		[Token(Token = "0x400081C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		public int refractionSolver;

		[Token(Token = "0x400081D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		public string[] resolutionNames;

		[Token(Token = "0x400081E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		public int reflectionRes;

		[Token(Token = "0x400081F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		public int refractRes;

		[Token(Token = "0x4000820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		public int reflectionTextureSize;

		[Token(Token = "0x4000821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		public int refractTextureSize;

		[Token(Token = "0x4000822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x97EE54", Offset = "0x97EE54")]
		public float clipPlaneOffset;

		[Token(Token = "0x4000823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		public LayerMask reflectLayers;

		[Token(Token = "0x4000824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		public LayerMask refractLayers;

		[Token(Token = "0x4000825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private Dictionary<Camera, Camera> m_ReflectionCameras;

		[Token(Token = "0x4000826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private Dictionary<Camera, StylizedWaterBlur> m_BlurRenderers;

		[Token(Token = "0x4000827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private Dictionary<Camera, Camera> m_RefractCameras;

		[Token(Token = "0x4000828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		private RenderTexture m_ReflectionTexture;

		[Token(Token = "0x4000829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		private RenderTexture m_RefractTexture;

		[Token(Token = "0x400082A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		private int m_OldReflectionTextureSize;

		[Token(Token = "0x400082B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
		private int m_OldRefractTextureSize;

		[Token(Token = "0x400082C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		private bool s_InsideRendering;

		[Token(Token = "0x400082D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x251")]
		public bool enableMaskRendering;

		[Token(Token = "0x400082E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		private StylizedWaterRenderer swsRenderer;

		[Token(Token = "0x400082F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		private StylizedWaterRenderer.RendererSettings swsRenderSettings;

		[Token(Token = "0x4000830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		public int swsRendererTextureSize;

		[Token(Token = "0x4000831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
		public LayerMask swsMaskRenderLayers;

		[Token(Token = "0x4000832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static LayerMask s_swsMaskRenderLayers;

		[Token(Token = "0x4000833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		public Camera renderCam;

		[Token(Token = "0x4000834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		public Vector4 targetMeshInfo;

		[Token(Token = "0x4000835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		public int lightingMethod;

		[Token(Token = "0x4000836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		public string[] lightingMethodNames;

		[Token(Token = "0x4000837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		public bool enableShadows;

		[Token(Token = "0x4000838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		private StylizedWaterShadowCaster shadowRenderer;

		[Token(Token = "0x4000839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		public Light shadowCaster;

		[NonSerialized]
		[Token(Token = "0x400083A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		private MeshRenderer meshRenderer;

		[Token(Token = "0x400083B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		public Material material;

		[Token(Token = "0x400083C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		public bool isMobileAdvanced;

		[Token(Token = "0x400083D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C1")]
		public bool isMobilePlatform;

		[Token(Token = "0x400083E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C2")]
		public bool isMobileBasic;

		[Token(Token = "0x400083F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		public string shaderName;

		[Token(Token = "0x4000840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		public bool isWaterLayer;

		[Token(Token = "0x4000841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D1")]
		public bool hasShaderParams;

		[Token(Token = "0x4000842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D2")]
		public bool hasMaterial;

		[Token(Token = "0x4000843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D3")]
		public bool usingSinglePassRendering;

		[Token(Token = "0x4000844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x97EE6C", Offset = "0x97EE6C")]
		public bool showLighting;

		[Token(Token = "0x4000845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D5")]
		public bool showColors;

		[Token(Token = "0x4000846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D6")]
		public bool showSurface;

		[Token(Token = "0x4000847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D7")]
		public bool showNormals;

		[Token(Token = "0x4000848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		public bool showIntersection;

		[Token(Token = "0x4000849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D9")]
		public bool showHighlights;

		[Token(Token = "0x400084A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2DA")]
		public bool showDepth;

		[Token(Token = "0x400084B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2DB")]
		public bool showWaves;

		[Token(Token = "0x400084C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2DC")]
		public bool showAdvanced;

		[Token(Token = "0x400084D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2DD")]
		public bool hideMaterialInspector;

		[Token(Token = "0x400084E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2DE")]
		public bool hideMeshRenderer;

		[Token(Token = "0x400084F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2DF")]
		public bool realtimeEditing;

		[Token(Token = "0x6000973")]
		[Address(RVA = "0xC78280", Offset = "0xC78280", VA = "0xC78280")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6000974")]
		[Address(RVA = "0xC7844C", Offset = "0xC7844C", VA = "0xC7844C")]
		public void Init()
		{
		}

		[Token(Token = "0x6000975")]
		[Address(RVA = "0xC78310", Offset = "0xC78310", VA = "0xC78310")]
		public void GetProperties()
		{
		}

		[Token(Token = "0x6000976")]
		[Address(RVA = "0xC78450", Offset = "0xC78450", VA = "0xC78450")]
		private void GetShaderProperties()
		{
		}

		[Token(Token = "0x6000977")]
		[Address(RVA = "0xC78E2C", Offset = "0xC78E2C", VA = "0xC78E2C")]
		private void GetShaderType()
		{
		}

		[Token(Token = "0x6000978")]
		[Address(RVA = "0xC78E30", Offset = "0xC78E30", VA = "0xC78E30")]
		private void SetShaderType()
		{
		}

		[Token(Token = "0x6000979")]
		[Address(RVA = "0xC78314", Offset = "0xC78314", VA = "0xC78314")]
		public void SetProperties()
		{
		}

		[Token(Token = "0x600097A")]
		[Address(RVA = "0xC7934C", Offset = "0xC7934C", VA = "0xC7934C")]
		private void SetShaderProperties()
		{
		}

		[Token(Token = "0x600097B")]
		[Address(RVA = "0xC7A15C", Offset = "0xC7A15C", VA = "0xC7A15C")]
		public void DisableReflectionCam()
		{
		}

		[Token(Token = "0x600097C")]
		[Address(RVA = "0xC79F50", Offset = "0xC79F50", VA = "0xC79F50")]
		public void DisableRefractionCam()
		{
		}

		[Token(Token = "0x600097D")]
		[Address(RVA = "0xC78E34", Offset = "0xC78E34", VA = "0xC78E34")]
		private void EnableMaskRendering()
		{
		}

		[Token(Token = "0x600097E")]
		[Address(RVA = "0xC78F7C", Offset = "0xC78F7C", VA = "0xC78F7C")]
		private void DisableMaskRendering()
		{
		}

		[Token(Token = "0x600097F")]
		[Address(RVA = "0xC79078", Offset = "0xC79078", VA = "0xC79078")]
		private void EnableShadowRendering()
		{
		}

		[Token(Token = "0x6000980")]
		[Address(RVA = "0xC79158", Offset = "0xC79158", VA = "0xC79158")]
		private void DisableShadowRendering()
		{
		}

		[Token(Token = "0x6000981")]
		[Address(RVA = "0xC7A490", Offset = "0xC7A490", VA = "0xC7A490")]
		public void SetVegetationStudioWaterLevel()
		{
		}

		[Token(Token = "0x6000982")]
		[Address(RVA = "0xC7A494", Offset = "0xC7A494", VA = "0xC7A494")]
		public void OnWillRenderObject()
		{
		}

		[Token(Token = "0x6000983")]
		[Address(RVA = "0xC7C470", Offset = "0xC7C470", VA = "0xC7C470")]
		public void CreateReflectionTexture()
		{
		}

		[Token(Token = "0x6000984")]
		[Address(RVA = "0xC7C5D8", Offset = "0xC7C5D8", VA = "0xC7C5D8")]
		public void CreateRefractionTexture()
		{
		}

		[Token(Token = "0x6000985")]
		[Address(RVA = "0xC7AD48", Offset = "0xC7AD48", VA = "0xC7AD48")]
		private void CreateWaterObjects(Camera currentCamera, out Camera reflectionCamera, out Camera refractCamera)
		{
		}

		[Token(Token = "0x6000986")]
		[Address(RVA = "0xC7C778", Offset = "0xC7C778", VA = "0xC7C778")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000987")]
		[Address(RVA = "0xC7C840", Offset = "0xC7C840", VA = "0xC7C840")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000988")]
		[Address(RVA = "0xC7C864", Offset = "0xC7C864", VA = "0xC7C864")]
		public StylizedWater()
		{
		}
	}
	[Token(Token = "0x2000159")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x96E0DC", Offset = "0x96E0DC")]
	[ExecuteInEditMode]
	public class StylizedWaterBlur : MonoBehaviour
	{
		[Token(Token = "0x4000850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera cam;

		[Token(Token = "0x4000851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float length;

		[Token(Token = "0x4000852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int passes;

		[Token(Token = "0x4000853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Shader m_BlurRenderShader;

		[Token(Token = "0x4000854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Material m_BlurRenderMat;

		[Token(Token = "0x4000855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CommandBuffer cmd;

		[Token(Token = "0x170000E0")]
		private static Shader BlurRenderShader
		{
			[Token(Token = "0x6000989")]
			[Address(RVA = "0xC7C9A4", Offset = "0xC7C9A4", VA = "0xC7C9A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E1")]
		private static Material BlurRenderMat
		{
			[Token(Token = "0x600098A")]
			[Address(RVA = "0xC7CA54", Offset = "0xC7CA54", VA = "0xC7CA54")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600098B")]
		[Address(RVA = "0xC7CB48", Offset = "0xC7CB48", VA = "0xC7CB48")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600098C")]
		[Address(RVA = "0xC7CBD8", Offset = "0xC7CBD8", VA = "0xC7CBD8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600098D")]
		[Address(RVA = "0xC7C064", Offset = "0xC7C064", VA = "0xC7C064")]
		public void Render()
		{
		}

		[Token(Token = "0x600098E")]
		[Address(RVA = "0xC7CC90", Offset = "0xC7CC90", VA = "0xC7CC90")]
		public StylizedWaterBlur()
		{
		}
	}
	[Token(Token = "0x200015A")]
	public class StylizedWaterRenderer : UnityEngine.Object
	{
		[Token(Token = "0x20006D4")]
		public class RendererSettings
		{
			[Token(Token = "0x4001E2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LayerMask renderLayer;

			[Token(Token = "0x4001E2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int renderTexureSize;

			[Token(Token = "0x6002472")]
			[Address(RVA = "0xC7A404", Offset = "0xC7A404", VA = "0xC7A404")]
			public RendererSettings()
			{
			}
		}

		[Token(Token = "0x4000856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool debug;

		[Token(Token = "0x4000857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private RendererSettings settings;

		[Token(Token = "0x4000858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject targetObject;

		[Token(Token = "0x4000859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 targetSize;

		[Token(Token = "0x400085A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 targetCenterPosition;

		[Token(Token = "0x400085B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RenderTexture _rt;

		[Token(Token = "0x400085C")]
		private const int CLIP_PLANE_PADDING = 20;

		[Token(Token = "0x400085D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Material _intersectionMaskMat;

		[Token(Token = "0x400085E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Material _opacityMaskMat;

		[Token(Token = "0x170000E2")]
		private RenderTexture rt
		{
			[Token(Token = "0x600098F")]
			[Address(RVA = "0xC7CCA4", Offset = "0xC7CCA4", VA = "0xC7CCA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E3")]
		public static Material intersectionMaskMat
		{
			[Token(Token = "0x6000990")]
			[Address(RVA = "0xC7CD9C", Offset = "0xC7CD9C", VA = "0xC7CD9C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E4")]
		public static Material opacityMaskMat
		{
			[Token(Token = "0x6000991")]
			[Address(RVA = "0xC7CF50", Offset = "0xC7CF50", VA = "0xC7CF50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000992")]
		[Address(RVA = "0xC7A414", Offset = "0xC7A414", VA = "0xC7A414")]
		public void SetupMaskRenderer(RendererSettings settings, MeshRenderer r, out Camera renderCam, out Vector4 targetMeshInfo)
		{
		}

		[Token(Token = "0x6000993")]
		[Address(RVA = "0xC7D104", Offset = "0xC7D104", VA = "0xC7D104")]
		private Vector4 GetMeshInfo(MeshRenderer r)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6000994")]
		[Address(RVA = "0xC7D774", Offset = "0xC7D774", VA = "0xC7D774")]
		private Camera SetupRenderCam()
		{
			return null;
		}

		[Token(Token = "0x6000995")]
		[Address(RVA = "0xC7DBC0", Offset = "0xC7DBC0", VA = "0xC7DBC0")]
		private RenderTexture RenderCamToTexture(Camera renderCam)
		{
			return null;
		}

		[Token(Token = "0x6000996")]
		[Address(RVA = "0xC7A39C", Offset = "0xC7A39C", VA = "0xC7A39C")]
		public StylizedWaterRenderer()
		{
		}
	}
	[Token(Token = "0x200015B")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x96E150", Offset = "0x96E150")]
	[ExecuteInEditMode]
	public class StylizedWaterShadowCaster : MonoBehaviour
	{
		[Token(Token = "0x400085F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CommandBuffer cmd;

		[Token(Token = "0x4000860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Light dirLight;

		[Token(Token = "0x6000998")]
		[Address(RVA = "0xC7DCF4", Offset = "0xC7DCF4", VA = "0xC7DCF4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000999")]
		[Address(RVA = "0xC7DEC8", Offset = "0xC7DEC8", VA = "0xC7DEC8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600099A")]
		[Address(RVA = "0xC7DF60", Offset = "0xC7DF60", VA = "0xC7DF60")]
		public StylizedWaterShadowCaster()
		{
		}
	}
	[Token(Token = "0x200015C")]
	public static class StylizedWaterUtilities
	{
		[Token(Token = "0x20006D5")]
		public static class CameraUtils
		{
			[Token(Token = "0x6002473")]
			[Address(RVA = "0xC7BE80", Offset = "0xC7BE80", VA = "0xC7BE80")]
			public static Vector4 CameraSpacePlane(Camera cam, Vector3 pos, Vector3 normal, float sideSign, float clipPlaneOffset)
			{
				return default(Vector4);
			}

			[Token(Token = "0x6002474")]
			[Address(RVA = "0xC7BBDC", Offset = "0xC7BBDC", VA = "0xC7BBDC")]
			public static void CalculateReflectionMatrix(ref Matrix4x4 reflectionMat, Vector4 plane)
			{
			}

			[Token(Token = "0x6002475")]
			[Address(RVA = "0xC7B8F0", Offset = "0xC7B8F0", VA = "0xC7B8F0")]
			public static void CopyCameraSettings(Camera src, Camera dest)
			{
			}
		}

		[Token(Token = "0x4000861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool DEBUG;

		[Token(Token = "0x600099B")]
		[Address(RVA = "0xC7DF68", Offset = "0xC7DF68", VA = "0xC7DF68")]
		public static string[] ComposeDropdown(Texture2D[] resource, string replaceFilter)
		{
			return null;
		}

		[Token(Token = "0x600099C")]
		[Address(RVA = "0xC7DC6C", Offset = "0xC7DC6C", VA = "0xC7DC6C")]
		public static bool IsApproximatelyEqual(float a, float b)
		{
			return default(bool);
		}

		[Token(Token = "0x600099D")]
		[Address(RVA = "0xC7E1F0", Offset = "0xC7E1F0", VA = "0xC7E1F0")]
		public static bool HasVertexColors(Mesh mesh)
		{
			return default(bool);
		}
	}
}
namespace Polybrush
{
	[Token(Token = "0x200015D")]
	[Flags]
	public enum z_BrushMirror
	{
		[Token(Token = "0x4000863")]
		None = 0,
		[Token(Token = "0x4000864")]
		X = 1,
		[Token(Token = "0x4000865")]
		Y = 2,
		[Token(Token = "0x4000866")]
		Z = 4
	}
	[Token(Token = "0x200015E")]
	public static class z_BrushMirrorUtility
	{
		[Token(Token = "0x600099F")]
		[Address(RVA = "0xF1DE44", Offset = "0xF1DE44", VA = "0xF1DE44")]
		public static Vector3 ToVector3(this z_BrushMirror mirror)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x200015F")]
	public enum z_ComponentIndex
	{
		[Token(Token = "0x4000868")]
		R = 0,
		[Token(Token = "0x4000869")]
		X = 0,
		[Token(Token = "0x400086A")]
		G = 1,
		[Token(Token = "0x400086B")]
		Y = 1,
		[Token(Token = "0x400086C")]
		B = 2,
		[Token(Token = "0x400086D")]
		Z = 2,
		[Token(Token = "0x400086E")]
		A = 3,
		[Token(Token = "0x400086F")]
		W = 3
	}
	[Token(Token = "0x2000160")]
	public enum z_ComponentIndexType
	{
		[Token(Token = "0x4000871")]
		Vector,
		[Token(Token = "0x4000872")]
		Color,
		[Token(Token = "0x4000873")]
		Index
	}
	[Token(Token = "0x2000161")]
	public static class z_ComponentIndexUtility
	{
		[Token(Token = "0x4000874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly GUIContent[] ComponentIndexPopupDescriptions;

		[Token(Token = "0x4000875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly int[] ComponentIndexPopupValues;

		[Token(Token = "0x60009A0")]
		[Address(RVA = "0xF1E974", Offset = "0xF1E974", VA = "0xF1E974")]
		public static float GetValueAtIndex(this Vector3 value, z_ComponentIndex index)
		{
			return default(float);
		}

		[Token(Token = "0x60009A1")]
		[Address(RVA = "0xF1E9A0", Offset = "0xF1E9A0", VA = "0xF1E9A0")]
		public static float GetValueAtIndex(this Vector4 value, z_ComponentIndex index)
		{
			return default(float);
		}

		[Token(Token = "0x60009A2")]
		[Address(RVA = "0xF1E9E0", Offset = "0xF1E9E0", VA = "0xF1E9E0")]
		public static float GetValueAtIndex(this Color value, z_ComponentIndex index)
		{
			return default(float);
		}

		[Token(Token = "0x60009A3")]
		[Address(RVA = "0xF1EA20", Offset = "0xF1EA20", VA = "0xF1EA20")]
		public static uint ToFlag(this z_ComponentIndex e)
		{
			return default(uint);
		}

		[Token(Token = "0x60009A4")]
		[Address(RVA = "0xF1CCE8", Offset = "0xF1CCE8", VA = "0xF1CCE8")]
		public static string GetString(this z_ComponentIndex component, z_ComponentIndexType type = z_ComponentIndexType.Vector)
		{
			return null;
		}
	}
	[Token(Token = "0x2000162")]
	public enum Culling
	{
		[Token(Token = "0x4000877")]
		Back = 1,
		[Token(Token = "0x4000878")]
		Front = 2,
		[Token(Token = "0x4000879")]
		FrontBack = 4
	}
	[Token(Token = "0x2000163")]
	public enum z_Direction
	{
		[Token(Token = "0x400087B")]
		BrushNormal,
		[Token(Token = "0x400087C")]
		VertexNormal,
		[Token(Token = "0x400087D")]
		Up,
		[Token(Token = "0x400087E")]
		Right,
		[Token(Token = "0x400087F")]
		Forward
	}
	[Token(Token = "0x2000164")]
	public static class z_DirectionUtil
	{
		[Token(Token = "0x60009A6")]
		[Address(RVA = "0xF1ECA0", Offset = "0xF1ECA0", VA = "0xF1ECA0")]
		public static Vector3 ToVector3(this z_Direction dir)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x2000165")]
	[Flags]
	public enum z_MeshChannel
	{
		[Token(Token = "0x4000881")]
		Null = 0,
		[Token(Token = "0x4000882")]
		Position = 0,
		[Token(Token = "0x4000883")]
		Normal = 1,
		[Token(Token = "0x4000884")]
		Color = 2,
		[Token(Token = "0x4000885")]
		Tangent = 4,
		[Token(Token = "0x4000886")]
		UV0 = 8,
		[Token(Token = "0x4000887")]
		UV2 = 0x10,
		[Token(Token = "0x4000888")]
		UV3 = 0x20,
		[Token(Token = "0x4000889")]
		UV4 = 0x40,
		[Token(Token = "0x400088A")]
		All = 0xFF
	}
	[Token(Token = "0x2000166")]
	public static class z_MeshChannelUtility
	{
		[Token(Token = "0x60009A7")]
		[Address(RVA = "0xF22A44", Offset = "0xF22A44", VA = "0xF22A44")]
		public static z_MeshChannel StringToEnum(string str)
		{
			return default(z_MeshChannel);
		}

		[Token(Token = "0x60009A8")]
		[Address(RVA = "0xF22E10", Offset = "0xF22E10", VA = "0xF22E10")]
		public static int UVChannelToIndex(z_MeshChannel channel)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000167")]
	public enum z_MirrorCoordinateSpace
	{
		[Token(Token = "0x400088C")]
		World,
		[Token(Token = "0x400088D")]
		Camera
	}
	[Token(Token = "0x2000168")]
	public enum z_ModelSource
	{
		[Token(Token = "0x400088F")]
		Imported,
		[Token(Token = "0x4000890")]
		Asset,
		[Token(Token = "0x4000891")]
		Scene,
		[Token(Token = "0x4000892")]
		AdditionalVertexStreams
	}
	[Token(Token = "0x2000169")]
	public enum z_PaintMode
	{
		[Token(Token = "0x4000894")]
		Brush,
		[Token(Token = "0x4000895")]
		Fill,
		[Token(Token = "0x4000896")]
		Flood
	}
	[Token(Token = "0x200016A")]
	public enum z_PlacementDirection
	{
		[Token(Token = "0x4000898")]
		SurfaceNormal,
		[Token(Token = "0x4000899")]
		Up,
		[Token(Token = "0x400089A")]
		Down,
		[Token(Token = "0x400089B")]
		Left,
		[Token(Token = "0x400089C")]
		Right,
		[Token(Token = "0x400089D")]
		Forward,
		[Token(Token = "0x400089E")]
		Backward
	}
	[Token(Token = "0x200016B")]
	[Flags]
	public enum z_SelectionRenderState
	{
		[Token(Token = "0x40008A0")]
		None = 0,
		[Token(Token = "0x40008A1")]
		Wireframe = 1,
		[Token(Token = "0x40008A2")]
		Outline = 2
	}
	[Token(Token = "0x200016C")]
	[ExecuteInEditMode]
	public class z_AdditionalVertexStreams : MonoBehaviour
	{
		[Token(Token = "0x40008A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Mesh m_AdditionalVertexStreamMesh;

		[Token(Token = "0x40008A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x170000E5")]
		private MeshRenderer meshRenderer
		{
			[Token(Token = "0x60009A9")]
			[Address(RVA = "0xF1C658", Offset = "0xF1C658", VA = "0xF1C658")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009AA")]
		[Address(RVA = "0xF1C708", Offset = "0xF1C708", VA = "0xF1C708")]
		private void Start()
		{
		}

		[Token(Token = "0x60009AB")]
		[Address(RVA = "0xF1C710", Offset = "0xF1C710", VA = "0xF1C710")]
		public void SetAdditionalVertexStreamsMesh(Mesh mesh)
		{
		}

		[Token(Token = "0x60009AC")]
		[Address(RVA = "0xF1C74C", Offset = "0xF1C74C", VA = "0xF1C74C")]
		public z_AdditionalVertexStreams()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200016D")]
	public class z_AttributeLayoutContainer : ScriptableObject, IEquatable<z_AttributeLayoutContainer>
	{
		[Token(Token = "0x40008A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Shader shader;

		[Token(Token = "0x40008A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public z_AttributeLayout[] attributes;

		[Token(Token = "0x60009AD")]
		[Address(RVA = "0xF1DC38", Offset = "0xF1DC38", VA = "0xF1DC38")]
		public static z_AttributeLayoutContainer Create(Shader shader, z_AttributeLayout[] attributes)
		{
			return null;
		}

		[Token(Token = "0x60009AE")]
		[Address(RVA = "0xF1DCC0", Offset = "0xF1DCC0", VA = "0xF1DCC0", Slot = "4")]
		public bool Equals(z_AttributeLayoutContainer other)
		{
			return default(bool);
		}

		[Token(Token = "0x60009AF")]
		[Address(RVA = "0xF1DE3C", Offset = "0xF1DE3C", VA = "0xF1DE3C")]
		public z_AttributeLayoutContainer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200016E")]
	public class z_AttributeLayout : IEquatable<z_AttributeLayout>
	{
		[Token(Token = "0x40008A7")]
		public const int NoMask = -1;

		[Token(Token = "0x40008A8")]
		public const int DefaultMask = 0;

		[Token(Token = "0x40008A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int[] DefaultMaskValues;

		[Token(Token = "0x40008AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly GUIContent[] DefaultMaskDescriptions;

		[Token(Token = "0x40008AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Vector2 NormalizedRange;

		[Token(Token = "0x40008AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public z_MeshChannel channel;

		[Token(Token = "0x40008AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public z_ComponentIndex index;

		[Token(Token = "0x40008AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2 range;

		[Token(Token = "0x40008AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string propertyTarget;

		[Token(Token = "0x40008B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int mask;

		[NonSerialized]
		[Token(Token = "0x40008B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Texture2D previewTexture;

		[Token(Token = "0x170000E6")]
		public float min
		{
			[Token(Token = "0x60009B0")]
			[Address(RVA = "0xF1C754", Offset = "0xF1C754", VA = "0xF1C754")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60009B1")]
			[Address(RVA = "0xF1C75C", Offset = "0xF1C75C", VA = "0xF1C75C")]
			set
			{
			}
		}

		[Token(Token = "0x170000E7")]
		public float max
		{
			[Token(Token = "0x60009B2")]
			[Address(RVA = "0xF1C764", Offset = "0xF1C764", VA = "0xF1C764")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60009B3")]
			[Address(RVA = "0xF1C76C", Offset = "0xF1C76C", VA = "0xF1C76C")]
			set
			{
			}
		}

		[Token(Token = "0x60009B4")]
		[Address(RVA = "0xF1C774", Offset = "0xF1C774", VA = "0xF1C774")]
		public z_AttributeLayout(z_MeshChannel channel, z_ComponentIndex index)
		{
		}

		[Token(Token = "0x60009B5")]
		[Address(RVA = "0xF1C7FC", Offset = "0xF1C7FC", VA = "0xF1C7FC")]
		public z_AttributeLayout(z_MeshChannel channel, z_ComponentIndex index, Vector2 range, int mask)
		{
		}

		[Token(Token = "0x60009B6")]
		[Address(RVA = "0xF1C87C", Offset = "0xF1C87C", VA = "0xF1C87C")]
		public z_AttributeLayout(z_MeshChannel channel, z_ComponentIndex index, Vector2 range, int mask, string targetProperty, [Optional] Texture2D texture)
		{
		}

		[Token(Token = "0x60009B7")]
		[Address(RVA = "0xF1C8B4", Offset = "0xF1C8B4", VA = "0xF1C8B4", Slot = "4")]
		public bool Equals(z_AttributeLayout other)
		{
			return default(bool);
		}

		[Token(Token = "0x60009B8")]
		[Address(RVA = "0xF1C9C0", Offset = "0xF1C9C0", VA = "0xF1C9C0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200016F")]
	public struct z_ColorMask
	{
		[Token(Token = "0x40008B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool r;

		[Token(Token = "0x40008B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public bool g;

		[Token(Token = "0x40008B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public bool b;

		[Token(Token = "0x40008B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		public bool a;

		[Token(Token = "0x60009BA")]
		[Address(RVA = "0xA38BDC", Offset = "0xA38BDC", VA = "0xA38BDC")]
		public z_ColorMask(bool r, bool g, bool b, bool a)
		{
		}
	}
	[Token(Token = "0x2000170")]
	public struct z_CommonEdge : IEquatable<z_CommonEdge>
	{
		[Token(Token = "0x40008B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public z_Edge edge;

		[Token(Token = "0x40008B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public z_Edge common;

		[Token(Token = "0x170000E8")]
		public int x
		{
			[Token(Token = "0x60009BB")]
			[Address(RVA = "0xA38C00", Offset = "0xA38C00", VA = "0xA38C00")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000E9")]
		public int y
		{
			[Token(Token = "0x60009BC")]
			[Address(RVA = "0xA38C08", Offset = "0xA38C08", VA = "0xA38C08")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000EA")]
		public int cx
		{
			[Token(Token = "0x60009BD")]
			[Address(RVA = "0xA38C10", Offset = "0xA38C10", VA = "0xA38C10")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000EB")]
		public int cy
		{
			[Token(Token = "0x60009BE")]
			[Address(RVA = "0xA38C18", Offset = "0xA38C18", VA = "0xA38C18")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60009BF")]
		[Address(RVA = "0xA38C20", Offset = "0xA38C20", VA = "0xA38C20")]
		public z_CommonEdge(int _x, int _y, int _cx, int _cy)
		{
		}

		[Token(Token = "0x60009C0")]
		[Address(RVA = "0xA38C38", Offset = "0xA38C38", VA = "0xA38C38", Slot = "4")]
		public bool Equals(z_CommonEdge b)
		{
			return default(bool);
		}

		[Token(Token = "0x60009C1")]
		[Address(RVA = "0xA38C80", Offset = "0xA38C80", VA = "0xA38C80", Slot = "0")]
		public override bool Equals(object b)
		{
			return default(bool);
		}

		[Token(Token = "0x60009C2")]
		[Address(RVA = "0xF1E074", Offset = "0xF1E074", VA = "0xF1E074")]
		public static bool operator ==(z_CommonEdge a, z_CommonEdge b)
		{
			return default(bool);
		}

		[Token(Token = "0x60009C3")]
		[Address(RVA = "0xF1E0B8", Offset = "0xF1E0B8", VA = "0xF1E0B8")]
		public static bool operator !=(z_CommonEdge a, z_CommonEdge b)
		{
			return default(bool);
		}

		[Token(Token = "0x60009C4")]
		[Address(RVA = "0xA38C88", Offset = "0xA38C88", VA = "0xA38C88", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60009C5")]
		[Address(RVA = "0xA38C90", Offset = "0xA38C90", VA = "0xA38C90", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60009C6")]
		[Address(RVA = "0xF1E3AC", Offset = "0xF1E3AC", VA = "0xF1E3AC")]
		public static List<int> ToList(IEnumerable<z_CommonEdge> edges)
		{
			return null;
		}

		[Token(Token = "0x60009C7")]
		[Address(RVA = "0xF1E690", Offset = "0xF1E690", VA = "0xF1E690")]
		public static HashSet<int> ToHashSet(IEnumerable<z_CommonEdge> edges)
		{
			return null;
		}
	}
	[Token(Token = "0x2000171")]
	public struct z_Edge : IEquatable<z_Edge>
	{
		[Token(Token = "0x40008B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int x;

		[Token(Token = "0x40008B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int y;

		[Token(Token = "0x60009C8")]
		[Address(RVA = "0xA38C98", Offset = "0xA38C98", VA = "0xA38C98")]
		public z_Edge(int _x, int _y)
		{
		}

		[Token(Token = "0x60009C9")]
		[Address(RVA = "0xA38CA0", Offset = "0xA38CA0", VA = "0xA38CA0", Slot = "4")]
		public bool Equals(z_Edge p)
		{
			return default(bool);
		}

		[Token(Token = "0x60009CA")]
		[Address(RVA = "0xA38CE8", Offset = "0xA38CE8", VA = "0xA38CE8", Slot = "0")]
		public override bool Equals(object b)
		{
			return default(bool);
		}

		[Token(Token = "0x60009CB")]
		[Address(RVA = "0xF1EE4C", Offset = "0xF1EE4C", VA = "0xF1EE4C")]
		public static bool operator ==(z_Edge a, z_Edge b)
		{
			return default(bool);
		}

		[Token(Token = "0x60009CC")]
		[Address(RVA = "0xF1EE84", Offset = "0xF1EE84", VA = "0xF1EE84")]
		public static bool operator !=(z_Edge a, z_Edge b)
		{
			return default(bool);
		}

		[Token(Token = "0x60009CD")]
		[Address(RVA = "0xA38CF0", Offset = "0xA38CF0", VA = "0xA38CF0", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60009CE")]
		[Address(RVA = "0xA38CF8", Offset = "0xA38CF8", VA = "0xA38CF8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60009CF")]
		[Address(RVA = "0xF1EF58", Offset = "0xF1EF58", VA = "0xF1EF58")]
		public static List<int> ToList(IEnumerable<z_Edge> edges)
		{
			return null;
		}

		[Token(Token = "0x60009D0")]
		[Address(RVA = "0xF1F23C", Offset = "0xF1F23C", VA = "0xF1F23C")]
		public static HashSet<int> ToHashSet(IEnumerable<z_Edge> edges)
		{
			return null;
		}
	}
	[Token(Token = "0x2000172")]
	public static class z_GradientSerializer
	{
		[Token(Token = "0x60009D1")]
		[Address(RVA = "0xF1F520", Offset = "0xF1F520", VA = "0xF1F520")]
		public static string Serialize(this Gradient gradient)
		{
			return null;
		}

		[Token(Token = "0x60009D2")]
		[Address(RVA = "0xF1F85C", Offset = "0xF1F85C", VA = "0xF1F85C")]
		public static bool Deserialize(string str, out Gradient gradient)
		{
			return default(bool);
		}

		[Token(Token = "0x60009D3")]
		[Address(RVA = "0xF1FDA0", Offset = "0xF1FDA0", VA = "0xF1FDA0")]
		private static bool TryParseColor(string str, out Color value)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000173")]
	public interface z_IHasDefault
	{
		[Token(Token = "0x60009D4")]
		void SetDefaultValues();
	}
	[Token(Token = "0x2000174")]
	public interface z_IValid
	{
		[Token(Token = "0x170000EC")]
		bool IsValid
		{
			[Token(Token = "0x60009D5")]
			get;
		}
	}
	[Token(Token = "0x2000175")]
	public class z_Mesh
	{
		[Serializable]
		[Token(Token = "0x20006D6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97901C", Offset = "0x97901C")]
		private sealed class <>c
		{
			[Token(Token = "0x4001E30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001E31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<int[], IEnumerable<int>> <>9__22_0;

			[Token(Token = "0x6002477")]
			[Address(RVA = "0xF22A34", Offset = "0xF22A34", VA = "0xF22A34")]
			public <>c()
			{
			}

			[Token(Token = "0x6002478")]
			[Address(RVA = "0xF22A3C", Offset = "0xF22A3C", VA = "0xF22A3C")]
			internal IEnumerable<int> <GetTriangles>b__22_0(int[] x)
			{
				return null;
			}
		}

		[Token(Token = "0x40008BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x40008BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3[] vertices;

		[Token(Token = "0x40008BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3[] normals;

		[Token(Token = "0x40008BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color32[] colors;

		[Token(Token = "0x40008BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector4[] tangents;

		[Token(Token = "0x40008BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<Vector4> uv0;

		[Token(Token = "0x40008C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<Vector4> uv1;

		[Token(Token = "0x40008C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<Vector4> uv2;

		[Token(Token = "0x40008C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<Vector4> uv3;

		[Token(Token = "0x40008C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int _subMeshCount;

		[Token(Token = "0x40008C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int[] triangles;

		[Token(Token = "0x40008C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int[][] indices;

		[Token(Token = "0x40008C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private MeshTopology[] meshTopology;

		[Token(Token = "0x170000ED")]
		public int subMeshCount
		{
			[Token(Token = "0x60009D7")]
			[Address(RVA = "0xF21C94", Offset = "0xF21C94", VA = "0xF21C94")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60009D8")]
			[Address(RVA = "0xF21C9C", Offset = "0xF21C9C", VA = "0xF21C9C")]
			set
			{
			}
		}

		[Token(Token = "0x170000EE")]
		public int vertexCount
		{
			[Token(Token = "0x60009D9")]
			[Address(RVA = "0xF21D68", Offset = "0xF21D68", VA = "0xF21D68")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60009D6")]
		[Address(RVA = "0xF21C40", Offset = "0xF21C40", VA = "0xF21C40")]
		public MeshTopology GetTopology(int index)
		{
			return default(MeshTopology);
		}

		[Token(Token = "0x60009DA")]
		[Address(RVA = "0xF21D80", Offset = "0xF21D80", VA = "0xF21D80")]
		public List<Vector4> GetUVs(int index)
		{
			return null;
		}

		[Token(Token = "0x60009DB")]
		[Address(RVA = "0xF21DCC", Offset = "0xF21DCC", VA = "0xF21DCC")]
		public void SetUVs(int index, List<Vector4> uvs)
		{
		}

		[Token(Token = "0x60009DC")]
		[Address(RVA = "0xF21E10", Offset = "0xF21E10", VA = "0xF21E10")]
		public void Clear()
		{
		}

		[Token(Token = "0x60009DD")]
		[Address(RVA = "0xF21E48", Offset = "0xF21E48", VA = "0xF21E48")]
		public int[] GetTriangles()
		{
			return null;
		}

		[Token(Token = "0x60009DE")]
		[Address(RVA = "0xF21F60", Offset = "0xF21F60", VA = "0xF21F60")]
		public int[] GetIndices(int index)
		{
			return null;
		}

		[Token(Token = "0x60009DF")]
		[Address(RVA = "0xF21FB4", Offset = "0xF21FB4", VA = "0xF21FB4")]
		public void SetTriangles(int[] triangles, int index)
		{
		}

		[Token(Token = "0x60009E0")]
		[Address(RVA = "0xF22044", Offset = "0xF22044", VA = "0xF22044")]
		public void RecalculateNormals()
		{
		}

		[Token(Token = "0x60009E1")]
		[Address(RVA = "0xF2269C", Offset = "0xF2269C", VA = "0xF2269C")]
		public void ApplyAttributesToUnityMesh(Mesh m, z_MeshChannel attrib = z_MeshChannel.All)
		{
		}

		[Token(Token = "0x60009E2")]
		[Address(RVA = "0xF22960", Offset = "0xF22960", VA = "0xF22960")]
		public z_Mesh()
		{
		}
	}
	[Token(Token = "0x2000176")]
	public struct z_RndVec3 : IEquatable<z_RndVec3>
	{
		[Token(Token = "0x40008C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x40008C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x40008C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float z;

		[Token(Token = "0x40008CA")]
		private const float resolution = 0.0001f;

		[Token(Token = "0x60009E3")]
		[Address(RVA = "0xA411C8", Offset = "0xA411C8", VA = "0xA411C8")]
		public z_RndVec3(Vector3 vector)
		{
		}

		[Token(Token = "0x60009E4")]
		[Address(RVA = "0xA411D4", Offset = "0xA411D4", VA = "0xA411D4", Slot = "4")]
		public bool Equals(z_RndVec3 p)
		{
			return default(bool);
		}

		[Token(Token = "0x60009E5")]
		[Address(RVA = "0xA411DC", Offset = "0xA411DC", VA = "0xA411DC")]
		public bool Equals(Vector3 p)
		{
			return default(bool);
		}

		[Token(Token = "0x60009E6")]
		[Address(RVA = "0xA411E4", Offset = "0xA411E4", VA = "0xA411E4", Slot = "0")]
		public override bool Equals(object b)
		{
			return default(bool);
		}

		[Token(Token = "0x60009E7")]
		[Address(RVA = "0xA411EC", Offset = "0xA411EC", VA = "0xA411EC", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60009E8")]
		[Address(RVA = "0xA41230", Offset = "0xA41230", VA = "0xA41230", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60009E9")]
		[Address(RVA = "0xA41238", Offset = "0xA41238", VA = "0xA41238")]
		private int round(float v)
		{
			return default(int);
		}

		[Token(Token = "0x60009EA")]
		[Address(RVA = "0x12607DC", Offset = "0x12607DC", VA = "0x12607DC")]
		public static implicit operator Vector3(z_RndVec3 p)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60009EB")]
		[Address(RVA = "0x1260384", Offset = "0x1260384", VA = "0x1260384")]
		public static implicit operator z_RndVec3(Vector3 p)
		{
			return default(z_RndVec3);
		}
	}
	[Token(Token = "0x2000177")]
	public class z_SplatSet
	{
		[Serializable]
		[Token(Token = "0x20006D7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97902C", Offset = "0x97902C")]
		private sealed class <>c
		{
			[Token(Token = "0x4001E32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001E33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Converter<Color32, Vector4> <>9__11_0;

			[Token(Token = "0x4001E34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Converter<Vector4, Color32> <>9__17_0;

			[Token(Token = "0x600247A")]
			[Address(RVA = "0x12630C4", Offset = "0x12630C4", VA = "0x12630C4")]
			public <>c()
			{
			}

			[Token(Token = "0x600247B")]
			[Address(RVA = "0x12630CC", Offset = "0x12630CC", VA = "0x12630CC")]
			internal Vector4 <.ctor>b__11_0(Color32 x)
			{
				return default(Vector4);
			}

			[Token(Token = "0x600247C")]
			[Address(RVA = "0x12630D4", Offset = "0x12630D4", VA = "0x12630D4")]
			internal Color32 <Apply>b__17_0(Vector4 x)
			{
				return default(Color32);
			}
		}

		[Token(Token = "0x40008CB")]
		private const float WEIGHT_EPSILON = 0.0001f;

		[Token(Token = "0x40008CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int weightCount;

		[Token(Token = "0x40008CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<z_MeshChannel, int> channelMap;

		[Token(Token = "0x40008CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector4[][] weights;

		[Token(Token = "0x40008CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public z_AttributeLayout[] attributeLayout;

		[Token(Token = "0x170000EF")]
		public int attributeCount
		{
			[Token(Token = "0x60009EC")]
			[Address(RVA = "0x1260810", Offset = "0x1260810", VA = "0x1260810")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60009ED")]
		[Address(RVA = "0x126083C", Offset = "0x126083C", VA = "0x126083C")]
		public z_SplatSet(int vertexCount, z_AttributeLayout[] attributes, bool preAlloc = true)
		{
		}

		[Token(Token = "0x60009EE")]
		[Address(RVA = "0x1260D40", Offset = "0x1260D40", VA = "0x1260D40")]
		public z_SplatSet(z_SplatSet other)
		{
		}

		[Token(Token = "0x60009EF")]
		[Address(RVA = "0x12610DC", Offset = "0x12610DC", VA = "0x12610DC")]
		private static Vector4 Color32ToVec4(Color32 color)
		{
			return default(Vector4);
		}

		[Token(Token = "0x60009F0")]
		[Address(RVA = "0x1261144", Offset = "0x1261144", VA = "0x1261144")]
		private static Color32 Vec4ToColor32(Vector4 vec)
		{
			return default(Color32);
		}

		[Token(Token = "0x60009F1")]
		[Address(RVA = "0x1261198", Offset = "0x1261198", VA = "0x1261198")]
		public z_SplatSet(z_Mesh mesh, z_AttributeLayout[] attributes)
		{
		}

		[Token(Token = "0x60009F2")]
		[Address(RVA = "0x126173C", Offset = "0x126173C", VA = "0x126173C")]
		public z_SplatWeight GetMinWeights()
		{
			return null;
		}

		[Token(Token = "0x60009F3")]
		[Address(RVA = "0x1261BC8", Offset = "0x1261BC8", VA = "0x1261BC8")]
		public z_SplatWeight GetMaxWeights()
		{
			return null;
		}

		[Token(Token = "0x60009F4")]
		[Address(RVA = "0x1261D28", Offset = "0x1261D28", VA = "0x1261D28")]
		public void LerpWeights(z_SplatSet lhs, z_SplatSet rhs, int mask, float[] alpha)
		{
		}

		[Token(Token = "0x60009F5")]
		[Address(RVA = "0x1262644", Offset = "0x1262644", VA = "0x1262644")]
		public void LerpWeights(z_SplatSet lhs, z_SplatWeight rhs, float alpha)
		{
		}

		[Token(Token = "0x60009F6")]
		[Address(RVA = "0x12629C8", Offset = "0x12629C8", VA = "0x12629C8")]
		public void CopyTo(z_SplatSet other)
		{
		}

		[Token(Token = "0x60009F7")]
		[Address(RVA = "0x1262B3C", Offset = "0x1262B3C", VA = "0x1262B3C")]
		public void Apply(z_Mesh mesh)
		{
		}

		[Token(Token = "0x60009F8")]
		[Address(RVA = "0x1262E9C", Offset = "0x1262E9C", VA = "0x1262E9C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000178")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x96E244", Offset = "0x96E244")]
	public class z_SplatWeight
	{
		[Serializable]
		[Token(Token = "0x20006D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97903C", Offset = "0x97903C")]
		private sealed class <>c
		{
			[Token(Token = "0x4001E35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001E36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<z_AttributeLayout, z_MeshChannel> <>9__13_0;

			[Token(Token = "0x600247E")]
			[Address(RVA = "0x1266340", Offset = "0x1266340", VA = "0x1266340")]
			public <>c()
			{
			}

			[Token(Token = "0x600247F")]
			[Address(RVA = "0x1266348", Offset = "0x1266348", VA = "0x1266348")]
			internal z_MeshChannel <GetChannelMap>b__13_0(z_AttributeLayout x)
			{
				return default(z_MeshChannel);
			}
		}

		[Token(Token = "0x40008D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<z_MeshChannel, int> map;

		[Token(Token = "0x40008D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float[] values;

		[Token(Token = "0x170000F0")]
		public Vector4 Item
		{
			[Token(Token = "0x60009F9")]
			[Address(RVA = "0x1261AA0", Offset = "0x1261AA0", VA = "0x1261AA0")]
			get
			{
				return default(Vector4);
			}
			[Token(Token = "0x60009FA")]
			[Address(RVA = "0x1261B1C", Offset = "0x1261B1C", VA = "0x1261B1C")]
			set
			{
			}
		}

		[Token(Token = "0x170000F1")]
		public float Item
		{
			[Token(Token = "0x60009FB")]
			[Address(RVA = "0x1263378", Offset = "0x1263378", VA = "0x1263378")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60009FC")]
			[Address(RVA = "0x1263440", Offset = "0x1263440", VA = "0x1263440")]
			set
			{
			}
		}

		[Token(Token = "0x170000F2")]
		public float Item
		{
			[Token(Token = "0x60009FD")]
			[Address(RVA = "0x1263514", Offset = "0x1263514", VA = "0x1263514")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60009FE")]
			[Address(RVA = "0x1263568", Offset = "0x1263568", VA = "0x1263568")]
			set
			{
			}
		}

		[Token(Token = "0x60009FF")]
		[Address(RVA = "0x126189C", Offset = "0x126189C", VA = "0x126189C")]
		public z_SplatWeight(Dictionary<z_MeshChannel, int> map)
		{
		}

		[Token(Token = "0x6000A00")]
		[Address(RVA = "0x12635C8", Offset = "0x12635C8", VA = "0x12635C8")]
		public z_SplatWeight(z_SplatWeight rhs)
		{
		}

		[Token(Token = "0x6000A01")]
		[Address(RVA = "0x12609AC", Offset = "0x12609AC", VA = "0x12609AC")]
		public static Dictionary<z_MeshChannel, int> GetChannelMap(z_AttributeLayout[] attributes)
		{
			return null;
		}

		[Token(Token = "0x6000A02")]
		[Address(RVA = "0x12637F0", Offset = "0x12637F0", VA = "0x12637F0")]
		public List<int> GetAffectedIndicesWithMask(z_AttributeLayout[] attributes, int mask)
		{
			return null;
		}

		[Token(Token = "0x6000A03")]
		[Address(RVA = "0x1263938", Offset = "0x1263938", VA = "0x1263938")]
		public bool MatchesAttributes(z_AttributeLayout[] attributes)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A04")]
		[Address(RVA = "0x12630EC", Offset = "0x12630EC", VA = "0x12630EC")]
		private Vector4 GetVec4(int index)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6000A05")]
		[Address(RVA = "0x1263240", Offset = "0x1263240", VA = "0x1263240")]
		private void SetVec4(int index, Vector4 value)
		{
		}

		[Token(Token = "0x6000A06")]
		[Address(RVA = "0x126337C", Offset = "0x126337C", VA = "0x126337C")]
		public float GetAttributeValue(z_AttributeLayout attrib)
		{
			return default(float);
		}

		[Token(Token = "0x6000A07")]
		[Address(RVA = "0x1263444", Offset = "0x1263444", VA = "0x1263444")]
		public void SetAttributeValue(z_AttributeLayout attrib, float value)
		{
		}

		[Token(Token = "0x6000A08")]
		[Address(RVA = "0x1263A18", Offset = "0x1263A18", VA = "0x1263A18")]
		public void CopyTo(z_SplatWeight other)
		{
		}

		[Token(Token = "0x6000A09")]
		[Address(RVA = "0x1263AE8", Offset = "0x1263AE8", VA = "0x1263AE8")]
		public void Lerp(z_SplatWeight lhs, z_SplatWeight rhs, float alpha)
		{
		}

		[Token(Token = "0x6000A0A")]
		[Address(RVA = "0x1264F30", Offset = "0x1264F30", VA = "0x1264F30")]
		public void Lerp(z_SplatWeight lhs, z_SplatWeight rhs, float alpha, List<int> mask)
		{
		}

		[Token(Token = "0x6000A0B")]
		[Address(RVA = "0x126603C", Offset = "0x126603C", VA = "0x126603C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000179")]
	public static class z_Math
	{
		[Token(Token = "0x40008D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 tv1;

		[Token(Token = "0x40008D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static Vector3 tv2;

		[Token(Token = "0x40008D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Vector3 tv3;

		[Token(Token = "0x40008D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private static Vector3 tv4;

		[Token(Token = "0x6000A0C")]
		[Address(RVA = "0xF1FFBC", Offset = "0xF1FFBC", VA = "0xF1FFBC")]
		public static bool RayIntersectsTriangle2(Vector3 origin, Vector3 dir, Vector3 vert0, Vector3 vert1, Vector3 vert2, ref float distance, ref Vector3 normal)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A0D")]
		[Address(RVA = "0xF20338", Offset = "0xF20338", VA = "0xF20338")]
		public static bool RayIntersectsTriangle(Vector3 origin, Vector3 direction, Vector3 InTriangleA, Vector3 InTriangleB, Vector3 InTriangleC, out float OutDistance, out Vector3 OutPoint)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0xF2079C", Offset = "0xF2079C", VA = "0xF2079C")]
		public static Vector3 Normal(Vector3 p0, Vector3 p1, Vector3 p2)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0xF2092C", Offset = "0xF2092C", VA = "0xF2092C")]
		public static Vector3 Normal(Vector3[] p)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A10")]
		[Address(RVA = "0xF20D24", Offset = "0xF20D24", VA = "0xF20D24")]
		public static void NormalTangentBitangent(Vector3[] vertices, Vector2[] uv, int[] tri, out Vector3 normal, out Vector3 tangent, out Vector3 bitangent)
		{
		}

		[Token(Token = "0x6000A11")]
		[Address(RVA = "0xF2130C", Offset = "0xF2130C", VA = "0xF2130C")]
		public static int Clamp(int value, int min, int max)
		{
			return default(int);
		}

		[Token(Token = "0x6000A12")]
		[Address(RVA = "0xF21328", Offset = "0xF21328", VA = "0xF21328")]
		public static Vector3 Average(Vector3[] array, IEnumerable<int> indices)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A13")]
		[Address(RVA = "0xF216C4", Offset = "0xF216C4", VA = "0xF216C4")]
		public static Vector3 WeightedAverage(Vector3[] array, IList<int> indices, float[] weightLookup)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A14")]
		[Address(RVA = "0xF21B74", Offset = "0xF21B74", VA = "0xF21B74")]
		public static bool VectorIsUniform(Vector3 vec)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200017A")]
	public static class z_MeshUtility
	{
		[Token(Token = "0x20006D9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97904C", Offset = "0x97904C")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4001E37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3[] v;

			[Token(Token = "0x6002480")]
			[Address(RVA = "0x1260388", Offset = "0x1260388", VA = "0x1260388")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6002481")]
			[Address(RVA = "0x1260390", Offset = "0x1260390", VA = "0x1260390")]
			internal z_RndVec3 <GetCommonVertices>b__1(int x)
			{
				return default(z_RndVec3);
			}
		}

		[Serializable]
		[Token(Token = "0x20006DA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97905C", Offset = "0x97905C")]
		private sealed class <>c
		{
			[Token(Token = "0x4001E38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001E39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<int, int> <>9__7_0;

			[Token(Token = "0x4001E3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<IGrouping<z_RndVec3, int>, List<int>> <>9__7_2;

			[Token(Token = "0x4001E3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<IGrouping<z_RndVec3, int>, bool> <>9__17_1;

			[Token(Token = "0x4001E3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<IGrouping<z_RndVec3, int>, List<int>> <>9__17_2;

			[Token(Token = "0x6002483")]
			[Address(RVA = "0xF28320", Offset = "0xF28320", VA = "0xF28320")]
			public <>c()
			{
			}

			[Token(Token = "0x6002484")]
			[Address(RVA = "0xF28328", Offset = "0xF28328", VA = "0xF28328")]
			internal int <GetCommonVertices>b__7_0(int x)
			{
				return default(int);
			}

			[Token(Token = "0x6002485")]
			[Address(RVA = "0xF28330", Offset = "0xF28330", VA = "0xF28330")]
			internal List<int> <GetCommonVertices>b__7_2(IGrouping<z_RndVec3, int> y)
			{
				return null;
			}

			[Token(Token = "0x6002486")]
			[Address(RVA = "0xF28380", Offset = "0xF28380", VA = "0xF28380")]
			internal bool <GetSmoothSeamLookup>b__17_1(IGrouping<z_RndVec3, int> n)
			{
				return default(bool);
			}

			[Token(Token = "0x6002487")]
			[Address(RVA = "0xF283DC", Offset = "0xF283DC", VA = "0xF283DC")]
			internal List<int> <GetSmoothSeamLookup>b__17_2(IGrouping<z_RndVec3, int> t)
			{
				return null;
			}
		}

		[Token(Token = "0x20006DB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97906C", Offset = "0x97906C")]
		private sealed class <>c__DisplayClass17_0
		{
			[Token(Token = "0x4001E3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3[] normals;

			[Token(Token = "0x4001E3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Func<int, z_RndVec3> <>9__3;

			[Token(Token = "0x6002488")]
			[Address(RVA = "0x1260280", Offset = "0x1260280", VA = "0x1260280")]
			public <>c__DisplayClass17_0()
			{
			}

			[Token(Token = "0x6002489")]
			[Address(RVA = "0x1260288", Offset = "0x1260288", VA = "0x1260288")]
			internal IEnumerable<IGrouping<z_RndVec3, int>> <GetSmoothSeamLookup>b__0(List<int> x)
			{
				return null;
			}

			[Token(Token = "0x600248A")]
			[Address(RVA = "0x1260328", Offset = "0x1260328", VA = "0x1260328")]
			internal z_RndVec3 <GetSmoothSeamLookup>b__3(int i)
			{
				return default(z_RndVec3);
			}
		}

		[Token(Token = "0x40008D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Color clear;

		[Token(Token = "0x40008D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Dictionary<z_Mesh, List<List<int>>> commonVerticesCache;

		[Token(Token = "0x40008D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Dictionary<z_Mesh, Dictionary<z_Edge, List<int>>> adjacentTrianglesCache;

		[Token(Token = "0x40008D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Dictionary<z_Mesh, List<List<int>>> commonNormalsCache;

		[Token(Token = "0x6000A15")]
		[Address(RVA = "0xF22E50", Offset = "0xF22E50", VA = "0xF22E50")]
		public static Mesh DeepCopy(Mesh src)
		{
			return null;
		}

		[Token(Token = "0x6000A16")]
		[Address(RVA = "0xF22EDC", Offset = "0xF22EDC", VA = "0xF22EDC")]
		public static void Copy(Mesh dest, Mesh src)
		{
		}

		[Token(Token = "0x6000A17")]
		[Address(RVA = "0xF23328", Offset = "0xF23328", VA = "0xF23328")]
		public static Mesh CreateOverlayMesh(z_Mesh src)
		{
			return null;
		}

		[Token(Token = "0x6000A18")]
		[Address(RVA = "0xF2385C", Offset = "0xF2385C", VA = "0xF2385C")]
		public static Mesh CreateVertexBillboardMesh(z_Mesh src, List<List<int>> common)
		{
			return null;
		}

		[Token(Token = "0x6000A19")]
		[Address(RVA = "0xF24350", Offset = "0xF24350", VA = "0xF24350")]
		public static Dictionary<int, Vector3> GetSmoothNormalLookup(z_Mesh mesh)
		{
			return null;
		}

		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0xF24858", Offset = "0xF24858", VA = "0xF24858")]
		public static List<List<int>> GetCommonVertices(z_Mesh mesh)
		{
			return null;
		}

		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0xF24C0C", Offset = "0xF24C0C", VA = "0xF24C0C")]
		public static List<z_CommonEdge> GetEdges(z_Mesh m)
		{
			return null;
		}

		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0xF24C8C", Offset = "0xF24C8C", VA = "0xF24C8C")]
		public static List<z_CommonEdge> GetEdges(z_Mesh m, Dictionary<int, int> lookup)
		{
			return null;
		}

		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0xF25098", Offset = "0xF25098", VA = "0xF25098")]
		public static HashSet<z_CommonEdge> GetEdgesDistinct(z_Mesh mesh, out List<z_CommonEdge> duplicates)
		{
			return null;
		}

		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0xF25128", Offset = "0xF25128", VA = "0xF25128")]
		private static HashSet<z_CommonEdge> GetEdgesDistinct(z_Mesh m, Dictionary<int, int> lookup, out List<z_CommonEdge> duplicates)
		{
			return null;
		}

		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0xF25648", Offset = "0xF25648", VA = "0xF25648")]
		public static HashSet<int> GetNonManifoldIndices(z_Mesh mesh)
		{
			return null;
		}

		[Token(Token = "0x6000A20")]
		[Address(RVA = "0xF256F0", Offset = "0xF256F0", VA = "0xF256F0")]
		public static Dictionary<int, List<int>> GetAdjacentVertices(z_Mesh mesh)
		{
			return null;
		}

		[Token(Token = "0x6000A21")]
		[Address(RVA = "0xF25C98", Offset = "0xF25C98", VA = "0xF25C98")]
		public static Dictionary<z_Edge, List<int>> GetAdjacentTriangles(z_Mesh m)
		{
			return null;
		}

		[Token(Token = "0x6000A22")]
		[Address(RVA = "0xF26284", Offset = "0xF26284", VA = "0xF26284")]
		public static List<List<int>> GetSmoothSeamLookup(z_Mesh m)
		{
			return null;
		}

		[Token(Token = "0x6000A23")]
		[Address(RVA = "0xF265E4", Offset = "0xF265E4", VA = "0xF265E4")]
		public static void RecalculateNormals(z_Mesh m)
		{
		}

		[Token(Token = "0x6000A24")]
		[Address(RVA = "0xF26908", Offset = "0xF26908", VA = "0xF26908")]
		public static string Print(Mesh m, int maxAttributesToList = 8)
		{
			return null;
		}
	}
	[Token(Token = "0x200017B")]
	public static class z_Util
	{
		[Serializable]
		[Token(Token = "0x20006DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97907C", Offset = "0x97907C")]
		private sealed class <>c__4<T>
		{
			[Token(Token = "0x4001E3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c__4<T> <>9;

			[Token(Token = "0x4001E40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<T, string> <>9__4_0;

			[Token(Token = "0x600248C")]
			public <>c__4()
			{
			}

			[Token(Token = "0x600248D")]
			internal string <ToString>b__4_0(T x)
			{
				return null;
			}
		}

		[Token(Token = "0x6000A26")]
		public static T[] Fill<T>(T value, int count)
		{
			return null;
		}

		[Token(Token = "0x6000A27")]
		public static T[] Fill<T>(Func<int, T> constructor, int count)
		{
			return null;
		}

		[Token(Token = "0x6000A28")]
		public static T[] Duplicate<T>(T[] array)
		{
			return null;
		}

		[Token(Token = "0x6000A29")]
		public static Dictionary<K, V> InitDictionary<K, V>(Func<int, K> keyFunc, Func<int, V> valueFunc, int count)
		{
			return null;
		}

		[Token(Token = "0x6000A2A")]
		public static string ToString<T>(this IEnumerable<T> enumerable, string delim)
		{
			return null;
		}

		[Token(Token = "0x6000A2B")]
		public static string ToString<K, V>(this Dictionary<K, V> dictionary, string delim)
		{
			return null;
		}

		[Token(Token = "0x6000A2C")]
		public static void Resize<T>(ref T[] array, int newSize)
		{
		}

		[Token(Token = "0x6000A2D")]
		public static Dictionary<K, T> SetValuesAsKey<T, K>(this Dictionary<T, IEnumerable<K>> dic)
		{
			return null;
		}

		[Token(Token = "0x6000A2E")]
		public static Dictionary<T, int> GetCommonLookup<T>(this List<List<T>> lists)
		{
			return null;
		}

		[Token(Token = "0x6000A2F")]
		[Address(RVA = "0x1266374", Offset = "0x1266374", VA = "0x1266374")]
		public static Color32 Lerp(Color32 lhs, Color32 rhs, z_ColorMask mask, float alpha)
		{
			return default(Color32);
		}

		[Token(Token = "0x6000A30")]
		[Address(RVA = "0x1266480", Offset = "0x1266480", VA = "0x1266480")]
		public static Color32 Lerp(Color32 lhs, Color32 rhs, float alpha)
		{
			return default(Color32);
		}

		[Token(Token = "0x6000A31")]
		[Address(RVA = "0x1266534", Offset = "0x1266534", VA = "0x1266534")]
		public static AnimationCurve ClampAnimationKeys(AnimationCurve curve, float firstKeyTime, float firstKeyValue, float secondKeyTime, float secondKeyValue)
		{
			return null;
		}

		[Token(Token = "0x6000A32")]
		[Address(RVA = "0x12666F0", Offset = "0x12666F0", VA = "0x12666F0")]
		public static Enum Next(this Enum value)
		{
			return null;
		}

		[Token(Token = "0x6000A33")]
		public static bool IsValid<T>(this T target) where T : z_IValid
		{
			return default(bool);
		}

		[Token(Token = "0x6000A34")]
		[Address(RVA = "0x1266878", Offset = "0x1266878", VA = "0x1266878")]
		internal static string IncrementPrefix(string prefix, string name)
		{
			return null;
		}

		[Token(Token = "0x6000A35")]
		[Address(RVA = "0x1266A6C", Offset = "0x1266A6C", VA = "0x1266A6C")]
		public static Mesh GetMesh(this GameObject gameObject)
		{
			return null;
		}

		[Token(Token = "0x6000A36")]
		[Address(RVA = "0x1266C48", Offset = "0x1266C48", VA = "0x1266C48")]
		public static List<Material> GetMaterials(this GameObject gameObject)
		{
			return null;
		}

		[Token(Token = "0x6000A37")]
		public static Dictionary<T, List<K>> ToDictionary<T, K>(this IEnumerable<IGrouping<T, K>> groups)
		{
			return null;
		}
	}
	[Token(Token = "0x200017C")]
	public static class z_Vector
	{
		[Token(Token = "0x6000A38")]
		[Address(RVA = "0x1266D6C", Offset = "0x1266D6C", VA = "0x1266D6C")]
		public static void Cross(Vector3 a, Vector3 b, ref float x, ref float y, ref float z)
		{
		}

		[Token(Token = "0x6000A39")]
		[Address(RVA = "0x1266DA0", Offset = "0x1266DA0", VA = "0x1266DA0")]
		public static void Cross(Vector3 a, Vector3 b, ref Vector3 res)
		{
		}

		[Token(Token = "0x6000A3A")]
		[Address(RVA = "0x1266DD0", Offset = "0x1266DD0", VA = "0x1266DD0")]
		public static void Cross(float ax, float ay, float az, float bx, float by, float bz, ref float x, ref float y, ref float z)
		{
		}

		[Token(Token = "0x6000A3B")]
		[Address(RVA = "0x1266E04", Offset = "0x1266E04", VA = "0x1266E04")]
		public static void Subtract(Vector3 a, Vector3 b, ref Vector3 res)
		{
		}
	}
}
namespace Pvr_UnitySDKAPI
{
	[Token(Token = "0x200017D")]
	public class PvrControllerKey
	{
		[Token(Token = "0x40008DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool State;

		[Token(Token = "0x40008DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool PressedDown;

		[Token(Token = "0x40008DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool PressedUp;

		[Token(Token = "0x40008DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		public bool LongPressed;

		[Token(Token = "0x6000A3C")]
		[Address(RVA = "0x11B257C", Offset = "0x11B257C", VA = "0x11B257C")]
		public PvrControllerKey()
		{
		}
	}
	[Token(Token = "0x200017E")]
	public class ControllerHand
	{
		[Token(Token = "0x40008DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PvrControllerKey App;

		[Token(Token = "0x40008DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PvrControllerKey Touch;

		[Token(Token = "0x40008E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PvrControllerKey Home;

		[Token(Token = "0x40008E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PvrControllerKey VolumeDown;

		[Token(Token = "0x40008E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PvrControllerKey VolumeUp;

		[Token(Token = "0x40008E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public PvrControllerKey Trigger;

		[Token(Token = "0x40008E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public PvrControllerKey X;

		[Token(Token = "0x40008E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public PvrControllerKey Y;

		[Token(Token = "0x40008E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public PvrControllerKey A;

		[Token(Token = "0x40008E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public PvrControllerKey B;

		[Token(Token = "0x40008E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public PvrControllerKey Left;

		[Token(Token = "0x40008E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public PvrControllerKey Right;

		[Token(Token = "0x40008EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Vector2 TouchPadPosition;

		[Token(Token = "0x40008EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public int TriggerNum;

		[Token(Token = "0x40008EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public Quaternion Rotation;

		[Token(Token = "0x40008ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public Vector3 Position;

		[Token(Token = "0x40008EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int Battery;

		[Token(Token = "0x40008EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public ControllerState ConnectState;

		[Token(Token = "0x40008F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public SwipeDirection SwipeDirection;

		[Token(Token = "0x40008F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public TouchPadClick TouchPadClick;

		[Token(Token = "0x6000A3D")]
		[Address(RVA = "0x11B23B4", Offset = "0x11B23B4", VA = "0x11B23B4")]
		public ControllerHand()
		{
		}
	}
	[Token(Token = "0x200017F")]
	public enum ControllerState
	{
		[Token(Token = "0x40008F3")]
		Error = -1,
		[Token(Token = "0x40008F4")]
		DisConnected,
		[Token(Token = "0x40008F5")]
		Connected
	}
	[Token(Token = "0x2000180")]
	public enum Pvr_KeyCode
	{
		[Token(Token = "0x40008F7")]
		APP = 1,
		[Token(Token = "0x40008F8")]
		TOUCHPAD,
		[Token(Token = "0x40008F9")]
		HOME,
		[Token(Token = "0x40008FA")]
		VOLUMEUP,
		[Token(Token = "0x40008FB")]
		VOLUMEDOWN,
		[Token(Token = "0x40008FC")]
		TRIGGER,
		[Token(Token = "0x40008FD")]
		A,
		[Token(Token = "0x40008FE")]
		B,
		[Token(Token = "0x40008FF")]
		X,
		[Token(Token = "0x4000900")]
		Y,
		[Token(Token = "0x4000901")]
		Left,
		[Token(Token = "0x4000902")]
		Right
	}
	[Token(Token = "0x2000181")]
	public enum SwipeDirection
	{
		[Token(Token = "0x4000904")]
		No,
		[Token(Token = "0x4000905")]
		SwipeUp,
		[Token(Token = "0x4000906")]
		SwipeDown,
		[Token(Token = "0x4000907")]
		SwipeLeft,
		[Token(Token = "0x4000908")]
		SwipeRight
	}
	[Token(Token = "0x2000182")]
	public enum TouchPadClick
	{
		[Token(Token = "0x400090A")]
		No,
		[Token(Token = "0x400090B")]
		ClickUp,
		[Token(Token = "0x400090C")]
		ClickDown,
		[Token(Token = "0x400090D")]
		ClickLeft,
		[Token(Token = "0x400090E")]
		ClickRight
	}
	[Token(Token = "0x2000183")]
	public struct Controller
	{
		[Token(Token = "0x400090F")]
		public const string LibFileName = "Pvr_UnitySDK";

		[Token(Token = "0x6000A3E")]
		[Address(RVA = "0x11AA680", Offset = "0x11AA680", VA = "0x11AA680")]
		public static Vector2 UPvr_GetTouchPadPosition(int hand)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000A3F")]
		[Address(RVA = "0x11AF844", Offset = "0x11AF844", VA = "0x11AF844")]
		public static Vector2 UPvr_GetAxis2D(int hand)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000A40")]
		[Address(RVA = "0x11AFB00", Offset = "0x11AFB00", VA = "0x11AFB00")]
		public static ControllerState UPvr_GetControllerState(int hand)
		{
			return default(ControllerState);
		}

		[Token(Token = "0x6000A41")]
		[Address(RVA = "0x11AFCD0", Offset = "0x11AFCD0", VA = "0x11AFCD0")]
		public static Quaternion UPvr_GetControllerQUA(int hand)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000A42")]
		[Address(RVA = "0x11AFDFC", Offset = "0x11AFDFC", VA = "0x11AFDFC")]
		public static Vector3 UPvr_GetControllerPOS(int hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A43")]
		[Address(RVA = "0x11A3484", Offset = "0x11A3484", VA = "0x11A3484")]
		public static int UPvr_GetControllerTriggerValue(int hand)
		{
			return default(int);
		}

		[Token(Token = "0x6000A44")]
		[Address(RVA = "0x11A256C", Offset = "0x11A256C", VA = "0x11A256C")]
		public static int UPvr_GetControllerPower(int hand)
		{
			return default(int);
		}

		[Token(Token = "0x6000A45")]
		[Address(RVA = "0x11AFF24", Offset = "0x11AFF24", VA = "0x11AFF24")]
		public static SwipeDirection UPvr_GetSwipeDirection(int hand)
		{
			return default(SwipeDirection);
		}

		[Token(Token = "0x6000A46")]
		[Address(RVA = "0x11B0004", Offset = "0x11B0004", VA = "0x11B0004")]
		public static TouchPadClick UPvr_GetTouchPadClick(int hand)
		{
			return default(TouchPadClick);
		}

		[Token(Token = "0x6000A47")]
		[Address(RVA = "0x11A2E44", Offset = "0x11A2E44", VA = "0x11A2E44")]
		public static bool UPvr_GetKey(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A48")]
		[Address(RVA = "0x11A9F30", Offset = "0x11A9F30", VA = "0x11A9F30")]
		public static bool UPvr_GetKeyDown(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A49")]
		[Address(RVA = "0x11B00E4", Offset = "0x11B00E4", VA = "0x11B00E4")]
		public static bool UPvr_GetKeyUp(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A4A")]
		[Address(RVA = "0x11B0724", Offset = "0x11B0724", VA = "0x11B0724")]
		public static bool UPvr_GetKeyLongPressed(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A4B")]
		[Address(RVA = "0x11AAE38", Offset = "0x11AAE38", VA = "0x11AAE38")]
		public static bool UPvr_IsTouching(int hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A4C")]
		[Address(RVA = "0x11B0D64", Offset = "0x11B0D64", VA = "0x11B0D64")]
		public static void UPvr_SetHandNess(Pvr_Controller.UserHandNess hand)
		{
		}

		[Token(Token = "0x6000A4D")]
		[Address(RVA = "0x11B0DAC", Offset = "0x11B0DAC", VA = "0x11B0DAC")]
		public static Pvr_Controller.UserHandNess UPvr_GetHandNess()
		{
			return default(Pvr_Controller.UserHandNess);
		}

		[Token(Token = "0x6000A4E")]
		[Address(RVA = "0x11B0E28", Offset = "0x11B0E28", VA = "0x11B0E28")]
		public static int UPvr_GetPreferenceDevice()
		{
			return default(int);
		}

		[Token(Token = "0x6000A4F")]
		[Address(RVA = "0x11B0F00", Offset = "0x11B0F00", VA = "0x11B0F00")]
		public static bool UPvr_IsEnbleTrigger()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A50")]
		[Address(RVA = "0x11A1AF4", Offset = "0x11A1AF4", VA = "0x11A1AF4")]
		public static int UPvr_GetDeviceType()
		{
			return default(int);
		}

		[Token(Token = "0x6000A51")]
		[Address(RVA = "0x11A15B0", Offset = "0x11A15B0", VA = "0x11A15B0")]
		public static int UPvr_GetMainHandNess()
		{
			return default(int);
		}

		[Token(Token = "0x6000A52")]
		[Address(RVA = "0x11B0F7C", Offset = "0x11B0F7C", VA = "0x11B0F7C")]
		public static void UPvr_SetMainHandNess(int hand)
		{
		}

		[Token(Token = "0x6000A53")]
		[Address(RVA = "0x11B1000", Offset = "0x11B1000", VA = "0x11B1000")]
		public static int UPvr_GetControllerAbility(int hand)
		{
			return default(int);
		}

		[Token(Token = "0x6000A54")]
		[Address(RVA = "0x11B1084", Offset = "0x11B1084", VA = "0x11B1084")]
		public static void UPvr_VibrateNeo2Controller(float strength, int time, int hand)
		{
		}

		[Token(Token = "0x6000A55")]
		[Address(RVA = "0x11B1128", Offset = "0x11B1128", VA = "0x11B1128")]
		public static int UPvr_GetControllerBindingState(int id)
		{
			return default(int);
		}

		[Token(Token = "0x6000A56")]
		[Address(RVA = "0x11B11AC", Offset = "0x11B11AC", VA = "0x11B11AC")]
		public static Vector3 UPvr_GetVelocity(int hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A57")]
		[Address(RVA = "0x11B1230", Offset = "0x11B1230", VA = "0x11B1230")]
		public static Vector3 UPvr_GetAngularVelocity(int num)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A58")]
		[Address(RVA = "0x11B12DC", Offset = "0x11B12DC", VA = "0x11B12DC")]
		public static Vector3 UPvr_GetAcceleration(int num)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A59")]
		[Address(RVA = "0x11B1388", Offset = "0x11B1388", VA = "0x11B1388")]
		public static void UPvr_ScanController()
		{
		}

		[Token(Token = "0x6000A5A")]
		[Address(RVA = "0x11B1404", Offset = "0x11B1404", VA = "0x11B1404")]
		public static void UPvr_ConnectController(string mac)
		{
		}

		[Token(Token = "0x6000A5B")]
		[Address(RVA = "0x11B14DC", Offset = "0x11B14DC", VA = "0x11B14DC")]
		public static string UPvr_GetControllerVersion()
		{
			return null;
		}

		[Token(Token = "0x6000A5C")]
		[Address(RVA = "0x11B1558", Offset = "0x11B1558", VA = "0x11B1558")]
		public static void UPvr_GetDeviceVersion(int deviceType)
		{
		}

		[Token(Token = "0x6000A5D")]
		[Address(RVA = "0x11B15DC", Offset = "0x11B15DC", VA = "0x11B15DC")]
		public static void UPvr_GetControllerSnCode(int controllerSerialNum)
		{
		}

		[Token(Token = "0x6000A5E")]
		[Address(RVA = "0x11B1660", Offset = "0x11B1660", VA = "0x11B1660")]
		public static void UPvr_SetControllerUnbind(int controllerSerialNum)
		{
		}

		[Token(Token = "0x6000A5F")]
		[Address(RVA = "0x11B16E4", Offset = "0x11B16E4", VA = "0x11B16E4")]
		public static void UPvr_SetStationRestart()
		{
		}

		[Token(Token = "0x6000A60")]
		[Address(RVA = "0x11B1760", Offset = "0x11B1760", VA = "0x11B1760")]
		public static void UPvr_StartStationOtaUpdate()
		{
		}

		[Token(Token = "0x6000A61")]
		[Address(RVA = "0x11B17DC", Offset = "0x11B17DC", VA = "0x11B17DC")]
		public static void UPvr_StartControllerOtaUpdate(int mode, int controllerSerialNum)
		{
		}

		[Token(Token = "0x6000A62")]
		[Address(RVA = "0x11B1870", Offset = "0x11B1870", VA = "0x11B1870")]
		public static void UPvr_EnterPairMode(int controllerSerialNum)
		{
		}

		[Token(Token = "0x6000A63")]
		[Address(RVA = "0x11B18F4", Offset = "0x11B18F4", VA = "0x11B18F4")]
		public static void UPvr_SetControllerShutdown(int controllerSerialNum)
		{
		}

		[Token(Token = "0x6000A64")]
		[Address(RVA = "0x11B1978", Offset = "0x11B1978", VA = "0x11B1978")]
		public static int UPvr_GetStationPairState()
		{
			return default(int);
		}

		[Token(Token = "0x6000A65")]
		[Address(RVA = "0x11B19F4", Offset = "0x11B19F4", VA = "0x11B19F4")]
		public static int UPvr_GetStationOtaUpdateProgress()
		{
			return default(int);
		}

		[Token(Token = "0x6000A66")]
		[Address(RVA = "0x11B1A70", Offset = "0x11B1A70", VA = "0x11B1A70")]
		public static int UPvr_GetControllerOtaUpdateProgress()
		{
			return default(int);
		}

		[Token(Token = "0x6000A67")]
		[Address(RVA = "0x11B1AEC", Offset = "0x11B1AEC", VA = "0x11B1AEC")]
		public static void UPvr_GetControllerVersionAndSN(int controllerSerialNum)
		{
		}

		[Token(Token = "0x6000A68")]
		[Address(RVA = "0x11B1B70", Offset = "0x11B1B70", VA = "0x11B1B70")]
		public static void UPvr_GetControllerUniqueID()
		{
		}

		[Token(Token = "0x6000A69")]
		[Address(RVA = "0xA3F0D0", Offset = "0xA3F0D0", VA = "0xA3F0D0")]
		public void UPvr_InterruptStationPairMode()
		{
		}

		[Token(Token = "0x6000A6A")]
		[Address(RVA = "0xA3F0D4", Offset = "0xA3F0D4", VA = "0xA3F0D4")]
		public void UPvr_StartCV2PairingMode(int deviceType)
		{
		}

		[Token(Token = "0x6000A6B")]
		[Address(RVA = "0xA3F0D8", Offset = "0xA3F0D8", VA = "0xA3F0D8")]
		public void UPvr_StopCV2PairingMode(int deviceType)
		{
		}

		[Token(Token = "0x6000A6C")]
		[Address(RVA = "0x11B1D70", Offset = "0x11B1D70", VA = "0x11B1D70")]
		public static void UPvr_SetArmModelParameters(int hand, int gazeType, float elbowHeight, float elbowDepth, float pointerTiltAngle)
		{
		}

		[Token(Token = "0x6000A6D")]
		[Address(RVA = "0x11B1E4C", Offset = "0x11B1E4C", VA = "0x11B1E4C")]
		public static void UPvr_CalcArmModelParameters(float[] headOrientation, float[] controllerOrientation, float[] controllerPrimary)
		{
		}

		[Token(Token = "0x6000A6E")]
		[Address(RVA = "0x11B1F20", Offset = "0x11B1F20", VA = "0x11B1F20")]
		public static void UPvr_GetPointerPose(float[] rotation, float[] position)
		{
		}

		[Token(Token = "0x6000A6F")]
		[Address(RVA = "0x11B1FE4", Offset = "0x11B1FE4", VA = "0x11B1FE4")]
		public static void UPvr_GetElbowPose(float[] rotation, float[] position)
		{
		}

		[Token(Token = "0x6000A70")]
		[Address(RVA = "0x11B20A4", Offset = "0x11B20A4", VA = "0x11B20A4")]
		public static void UPvr_GetWristPose(float[] rotation, float[] position)
		{
		}

		[Token(Token = "0x6000A71")]
		[Address(RVA = "0x11B2164", Offset = "0x11B2164", VA = "0x11B2164")]
		public static void UPvr_GetShoulderPose(float[] rotation, float[] position)
		{
		}

		[Token(Token = "0x6000A72")]
		[Address(RVA = "0x11B2228", Offset = "0x11B2228", VA = "0x11B2228")]
		public static void UPvr_IsEnbleHomeKey(bool state)
		{
		}

		[Token(Token = "0x6000A73")]
		[Address(RVA = "0x11B22AC", Offset = "0x11B22AC", VA = "0x11B22AC")]
		public static void UPvr_SwitchHomeKey(bool state)
		{
		}

		[Token(Token = "0x6000A74")]
		[Address(RVA = "0x11B2330", Offset = "0x11B2330", VA = "0x11B2330")]
		public static int UPvr_GetControllerSensorStatus(int id)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000A75")]
		[Address(RVA = "0x11B1E50", Offset = "0x11B1E50", VA = "0x11B1E50")]
		private static extern void Pvr_CalcArmModelParameters(float[] headOrientation, float[] controllerOrientation, float[] gyro);

		[PreserveSig]
		[Token(Token = "0x6000A76")]
		[Address(RVA = "0x11B1F24", Offset = "0x11B1F24", VA = "0x11B1F24")]
		private static extern void Pvr_GetPointerPose(float[] rotation, float[] position);

		[PreserveSig]
		[Token(Token = "0x6000A77")]
		[Address(RVA = "0x11B1FE8", Offset = "0x11B1FE8", VA = "0x11B1FE8")]
		private static extern void Pvr_GetElbowPose(float[] rotation, float[] position);

		[PreserveSig]
		[Token(Token = "0x6000A78")]
		[Address(RVA = "0x11B20A8", Offset = "0x11B20A8", VA = "0x11B20A8")]
		private static extern void Pvr_GetWristPose(float[] rotation, float[] position);

		[PreserveSig]
		[Token(Token = "0x6000A79")]
		[Address(RVA = "0x11B2168", Offset = "0x11B2168", VA = "0x11B2168")]
		private static extern void Pvr_GetShoulderPose(float[] rotation, float[] position);

		[PreserveSig]
		[Token(Token = "0x6000A7A")]
		[Address(RVA = "0x11B1D74", Offset = "0x11B1D74", VA = "0x11B1D74")]
		private static extern void Pvr_SetArmModelParameters(int hand, int gazeType, float elbowHeight, float elbowDepth, float pointerTiltAngle);
	}
	[Token(Token = "0x2000184")]
	public enum ControllerVariety
	{
		[Token(Token = "0x4000911")]
		Controller0,
		[Token(Token = "0x4000912")]
		Controller1
	}
	[Token(Token = "0x2000185")]
	public enum ControllerDevice
	{
		[Token(Token = "0x4000914")]
		Goblin,
		[Token(Token = "0x4000915")]
		Neo,
		[Token(Token = "0x4000916")]
		G2,
		[Token(Token = "0x4000917")]
		Neo2,
		[Token(Token = "0x4000918")]
		NewController
	}
	[Token(Token = "0x2000186")]
	public enum GlobalIntConfigs
	{
		[Token(Token = "0x400091A")]
		EYE_TEXTURE_RESOLUTION0,
		[Token(Token = "0x400091B")]
		EYE_TEXTURE_RESOLUTION1,
		[Token(Token = "0x400091C")]
		SEENSOR_COUNT,
		[Token(Token = "0x400091D")]
		ABILITY6DOF,
		[Token(Token = "0x400091E")]
		PLATFORM_TYPE,
		[Token(Token = "0x400091F")]
		TRACKING_MODE,
		[Token(Token = "0x4000920")]
		LOG_LEVEL,
		[Token(Token = "0x4000921")]
		ENBLE_HAND6DOF_BY_HEAD,
		[Token(Token = "0x4000922")]
		ENBLE_6DOF_GLOBAL_TRACKING,
		[Token(Token = "0x4000923")]
		TARGET_FRAME_RATE,
		[Token(Token = "0x4000924")]
		iShowFPS,
		[Token(Token = "0x4000925")]
		SensorMode,
		[Token(Token = "0x4000926")]
		LOGICFLOW,
		[Token(Token = "0x4000927")]
		EYE_TEXTURE_RES_HIGH,
		[Token(Token = "0x4000928")]
		EYE_TEXTURE_RES_NORMAL,
		[Token(Token = "0x4000929")]
		iCtrlModelLoadingPri,
		[Token(Token = "0x400092A")]
		iPhoneHMDModeEnabled
	}
	[Token(Token = "0x2000187")]
	public enum GlobalFloatConfigs
	{
		[Token(Token = "0x400092C")]
		IPD,
		[Token(Token = "0x400092D")]
		VFOV,
		[Token(Token = "0x400092E")]
		HFOV,
		[Token(Token = "0x400092F")]
		NECK_MODEL_X,
		[Token(Token = "0x4000930")]
		NECK_MODEL_Y,
		[Token(Token = "0x4000931")]
		NECK_MODEL_Z,
		[Token(Token = "0x4000932")]
		DISPLAY_REFRESH_RATE
	}
	[Token(Token = "0x2000188")]
	public enum RenderTextureAntiAliasing
	{
		[Token(Token = "0x4000934")]
		X_1 = 1,
		[Token(Token = "0x4000935")]
		X_2 = 2,
		[Token(Token = "0x4000936")]
		X_4 = 4,
		[Token(Token = "0x4000937")]
		X_8 = 8
	}
	[Token(Token = "0x2000189")]
	public enum PlatForm
	{
		[Token(Token = "0x4000939")]
		Android = 1,
		[Token(Token = "0x400093A")]
		IOS,
		[Token(Token = "0x400093B")]
		Win,
		[Token(Token = "0x400093C")]
		Notsupport
	}
	[Token(Token = "0x200018A")]
	public enum RenderTextureDepth
	{
		[Token(Token = "0x400093E")]
		BD_0 = 0,
		[Token(Token = "0x400093F")]
		BD_16 = 16,
		[Token(Token = "0x4000940")]
		BD_24 = 24
	}
	[Token(Token = "0x200018B")]
	public enum RenderTextureLevel
	{
		[Token(Token = "0x4000942")]
		Normal,
		[Token(Token = "0x4000943")]
		High
	}
	[Token(Token = "0x200018C")]
	public enum Sensorindex
	{
		[Token(Token = "0x4000945")]
		Default,
		[Token(Token = "0x4000946")]
		FirstSensor,
		[Token(Token = "0x4000947")]
		SecondSensor
	}
	[Token(Token = "0x200018D")]
	public enum Eye
	{
		[Token(Token = "0x4000949")]
		LeftEye,
		[Token(Token = "0x400094A")]
		RightEye
	}
	[Token(Token = "0x200018E")]
	public enum HeadDofNum
	{
		[Token(Token = "0x400094C")]
		ThreeDof,
		[Token(Token = "0x400094D")]
		SixDof
	}
	[Token(Token = "0x200018F")]
	public enum HandDofNum
	{
		[Token(Token = "0x400094F")]
		ThreeDof,
		[Token(Token = "0x4000950")]
		SixDof
	}
	[Token(Token = "0x2000190")]
	public enum HandNum
	{
		[Token(Token = "0x4000952")]
		One,
		[Token(Token = "0x4000953")]
		Two
	}
	[Token(Token = "0x2000191")]
	public enum TrackingOrigin
	{
		[Token(Token = "0x4000955")]
		EyeLevel,
		[Token(Token = "0x4000956")]
		FloorLevel
	}
	[Token(Token = "0x2000192")]
	public enum EFoveationLevel
	{
		[Token(Token = "0x4000958")]
		None = -1,
		[Token(Token = "0x4000959")]
		Low,
		[Token(Token = "0x400095A")]
		Med,
		[Token(Token = "0x400095B")]
		High
	}
	[Token(Token = "0x2000193")]
	public enum pvrEyePoseStatus
	{
		[Token(Token = "0x400095D")]
		kGazePointValid = 1,
		[Token(Token = "0x400095E")]
		kGazeVectorValid = 2,
		[Token(Token = "0x400095F")]
		kEyeOpennessValid = 4,
		[Token(Token = "0x4000960")]
		kEyePupilDilationValid = 8,
		[Token(Token = "0x4000961")]
		kEyePositionGuideValid = 0x10
	}
	[Token(Token = "0x2000194")]
	public enum TrackingMode
	{
		[Token(Token = "0x4000963")]
		PVR_TRACKING_MODE_ROTATION = 1,
		[Token(Token = "0x4000964")]
		PVR_TRACKING_MODE_POSITION = 2,
		[Token(Token = "0x4000965")]
		PVR_TRACKING_MODE_EYE = 4
	}
	[Token(Token = "0x2000195")]
	public struct EyeTrackingData
	{
		[Token(Token = "0x4000966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int leftEyePoseStatus;

		[Token(Token = "0x4000967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int rightEyePoseStatus;

		[Token(Token = "0x4000968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int combinedEyePoseStatus;

		[Token(Token = "0x4000969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 leftEyeGazePoint;

		[Token(Token = "0x400096A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 rightEyeGazePoint;

		[Token(Token = "0x400096B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 combinedEyeGazePoint;

		[Token(Token = "0x400096C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 leftEyeGazeVector;

		[Token(Token = "0x400096D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 rightEyeGazeVector;

		[Token(Token = "0x400096E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 combinedEyeGazeVector;

		[Token(Token = "0x400096F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float leftEyeOpenness;

		[Token(Token = "0x4000970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float rightEyeOpenness;

		[Token(Token = "0x4000971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float leftEyePupilDilation;

		[Token(Token = "0x4000972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float rightEyePupilDilation;

		[Token(Token = "0x4000973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Vector3 leftEyePositionGuide;

		[Token(Token = "0x4000974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Vector3 rightEyePositionGuide;

		[Token(Token = "0x4000975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public byte[] reserved;
	}
	[Token(Token = "0x2000196")]
	public struct EyeTrackingGazeRay
	{
		[Token(Token = "0x4000976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 Direction;

		[Token(Token = "0x4000977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool IsValid;

		[Token(Token = "0x4000978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Origin;
	}
	[Token(Token = "0x2000197")]
	public struct EyeDeviceInfo
	{
		[Token(Token = "0x4000979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ViewFrustum targetFrustumLeft;

		[Token(Token = "0x400097A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ViewFrustum targetFrustumRight;
	}
	[Token(Token = "0x2000198")]
	public struct ViewFrustum
	{
		[Token(Token = "0x400097B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float left;

		[Token(Token = "0x400097C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float right;

		[Token(Token = "0x400097D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float top;

		[Token(Token = "0x400097E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float bottom;

		[Token(Token = "0x400097F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float near;

		[Token(Token = "0x4000980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float far;
	}
	[Token(Token = "0x2000199")]
	public struct EyeSetting
	{
		[Token(Token = "0x4000981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform eyelocalPosition;

		[Token(Token = "0x4000982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Rect eyeRect;

		[Token(Token = "0x4000983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float eyeFov;

		[Token(Token = "0x4000984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float eyeAspect;

		[Token(Token = "0x4000985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Matrix4x4 eyeProjectionMatrix;

		[Token(Token = "0x4000986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Shader eyeShader;
	}
	[Token(Token = "0x200019A")]
	public struct Sensor
	{
		[Token(Token = "0x4000987")]
		public const string LibFileName = "Pvr_UnitySDK";

		[PreserveSig]
		[Token(Token = "0x6000A7B")]
		[Address(RVA = "0x11B3C80", Offset = "0x11B3C80", VA = "0x11B3C80")]
		private static extern int Pvr_Enable6DofModule(bool enable);

		[PreserveSig]
		[Token(Token = "0x6000A7C")]
		[Address(RVA = "0x11B3D20", Offset = "0x11B3D20", VA = "0x11B3D20")]
		private static extern int Pvr_OptionalResetSensor(int index, int resetRot, int resetPos);

		[PreserveSig]
		[Token(Token = "0x6000A7D")]
		[Address(RVA = "0x11B3DD4", Offset = "0x11B3DD4", VA = "0x11B3DD4")]
		private static extern int Pvr_Init(int index);

		[PreserveSig]
		[Token(Token = "0x6000A7E")]
		[Address(RVA = "0x11B3E74", Offset = "0x11B3E74", VA = "0x11B3E74")]
		private static extern int Pvr_StartSensor(int index);

		[PreserveSig]
		[Token(Token = "0x6000A7F")]
		[Address(RVA = "0x11B3F14", Offset = "0x11B3F14", VA = "0x11B3F14")]
		private static extern int Pvr_StopSensor(int index);

		[PreserveSig]
		[Token(Token = "0x6000A80")]
		[Address(RVA = "0x11B3FB4", Offset = "0x11B3FB4", VA = "0x11B3FB4")]
		private static extern int Pvr_ResetSensor(int index);

		[PreserveSig]
		[Token(Token = "0x6000A81")]
		[Address(RVA = "0x11B4054", Offset = "0x11B4054", VA = "0x11B4054")]
		private static extern int Pvr_ResetSensorAll(int index);

		[PreserveSig]
		[Token(Token = "0x6000A82")]
		[Address(RVA = "0x11B40F4", Offset = "0x11B40F4", VA = "0x11B40F4")]
		private static extern int Pvr_GetSensorState(int index, ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz);

		[PreserveSig]
		[Token(Token = "0x6000A83")]
		[Address(RVA = "0x11B41EC", Offset = "0x11B41EC", VA = "0x11B41EC")]
		private static extern int Pvr_GetMainSensorState(ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz, ref float vfov, ref float hfov, ref int viewNumber);

		[PreserveSig]
		[Token(Token = "0x6000A84")]
		[Address(RVA = "0x11B42EC", Offset = "0x11B42EC", VA = "0x11B42EC")]
		private static extern int Pvr_GetPsensorState();

		[PreserveSig]
		[Token(Token = "0x6000A85")]
		[Address(RVA = "0x11B437C", Offset = "0x11B437C", VA = "0x11B437C")]
		private static extern int Pvr_GetHmdPSensorStatus();

		[PreserveSig]
		[Token(Token = "0x6000A86")]
		[Address(RVA = "0x11B440C", Offset = "0x11B440C", VA = "0x11B440C")]
		private static extern int Pvr_GetSensorAcceleration(int index, ref float x, ref float y, ref float z);

		[PreserveSig]
		[Token(Token = "0x6000A87")]
		[Address(RVA = "0x11B44D4", Offset = "0x11B44D4", VA = "0x11B44D4")]
		private static extern int Pvr_GetSensorGyroscope(int index, ref float x, ref float y, ref float z);

		[PreserveSig]
		[Token(Token = "0x6000A88")]
		[Address(RVA = "0x11B459C", Offset = "0x11B459C", VA = "0x11B459C")]
		private static extern int Pvr_GetSensorMagnet(int index, ref float x, ref float y, ref float z);

		[PreserveSig]
		[Token(Token = "0x6000A89")]
		[Address(RVA = "0x11B4664", Offset = "0x11B4664", VA = "0x11B4664")]
		private static extern int Pvr_Get6DofSensorQualityStatus();

		[PreserveSig]
		[Token(Token = "0x6000A8A")]
		[Address(RVA = "0x11B46F4", Offset = "0x11B46F4", VA = "0x11B46F4")]
		private static extern bool Pvr_Get6DofSafePanelFlag();

		[PreserveSig]
		[Token(Token = "0x6000A8B")]
		[Address(RVA = "0x11B478C", Offset = "0x11B478C", VA = "0x11B478C")]
		private static extern void Pvr_SetReinPosition(float x, float y, float z, int hand, bool valid);

		[PreserveSig]
		[Token(Token = "0x6000A8C")]
		[Address(RVA = "0x11B4864", Offset = "0x11B4864", VA = "0x11B4864")]
		private static extern bool Pvr_SetTrackingOriginType(TrackingOrigin trackingOriginType);

		[Token(Token = "0x6000A8D")]
		[Address(RVA = "0x11B490C", Offset = "0x11B490C", VA = "0x11B490C")]
		public static bool UPvr_Pvr_Get6DofSafePanelFlag()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A8E")]
		[Address(RVA = "0x11B4910", Offset = "0x11B4910", VA = "0x11B4910")]
		public static int UPvr_Init(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6000A8F")]
		[Address(RVA = "0x11B4914", Offset = "0x11B4914", VA = "0x11B4914")]
		public static void UPvr_InitPsensor()
		{
		}

		[Token(Token = "0x6000A90")]
		[Address(RVA = "0x11B4B1C", Offset = "0x11B4B1C", VA = "0x11B4B1C")]
		public static int UPvr_GetPsensorState()
		{
			return default(int);
		}

		[Token(Token = "0x6000A91")]
		[Address(RVA = "0x11B4CEC", Offset = "0x11B4CEC", VA = "0x11B4CEC")]
		public static int UPvr_GetPSensorStatus()
		{
			return default(int);
		}

		[Token(Token = "0x6000A92")]
		[Address(RVA = "0x11B4CF0", Offset = "0x11B4CF0", VA = "0x11B4CF0")]
		public static void UPvr_UnregisterPsensor()
		{
		}

		[Token(Token = "0x6000A93")]
		[Address(RVA = "0x11B4E50", Offset = "0x11B4E50", VA = "0x11B4E50")]
		public static int UPvr_StartSensor(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6000A94")]
		[Address(RVA = "0x11B4E54", Offset = "0x11B4E54", VA = "0x11B4E54")]
		public static int UPvr_StopSensor(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6000A95")]
		[Address(RVA = "0x11B4E58", Offset = "0x11B4E58", VA = "0x11B4E58")]
		public static int UPvr_ResetSensor(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6000A96")]
		[Address(RVA = "0x11B4ED8", Offset = "0x11B4ED8", VA = "0x11B4ED8")]
		public static int UPvr_OptionalResetSensor(int index, int resetRot, int resetPos)
		{
			return default(int);
		}

		[Token(Token = "0x6000A97")]
		[Address(RVA = "0x11B4EDC", Offset = "0x11B4EDC", VA = "0x11B4EDC")]
		public static int UPvr_GetSensorState(int index, ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz)
		{
			return default(int);
		}

		[Token(Token = "0x6000A98")]
		[Address(RVA = "0x11B4EE0", Offset = "0x11B4EE0", VA = "0x11B4EE0")]
		public static int UPvr_GetMainSensorState(ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz, ref float vfov, ref float hfov, ref int viewNumber)
		{
			return default(int);
		}

		[Token(Token = "0x6000A99")]
		[Address(RVA = "0x11B4EEC", Offset = "0x11B4EEC", VA = "0x11B4EEC")]
		public static int UPvr_GetSensorAcceleration(int index, ref float x, ref float y, ref float z)
		{
			return default(int);
		}

		[Token(Token = "0x6000A9A")]
		[Address(RVA = "0x11B4EF0", Offset = "0x11B4EF0", VA = "0x11B4EF0")]
		public static int UPvr_GetSensorGyroscope(int index, ref float x, ref float y, ref float z)
		{
			return default(int);
		}

		[Token(Token = "0x6000A9B")]
		[Address(RVA = "0x11B4EF4", Offset = "0x11B4EF4", VA = "0x11B4EF4")]
		public static int UPvr_GetSensorMagnet(int index, ref float x, ref float y, ref float z)
		{
			return default(int);
		}

		[Token(Token = "0x6000A9C")]
		[Address(RVA = "0x11B4EF8", Offset = "0x11B4EF8", VA = "0x11B4EF8")]
		public static int UPvr_Get6DofSensorQualityStatus()
		{
			return default(int);
		}

		[Token(Token = "0x6000A9D")]
		[Address(RVA = "0x11B4EFC", Offset = "0x11B4EFC", VA = "0x11B4EFC")]
		public static int UPvr_Enable6DofModule(bool enable)
		{
			return default(int);
		}

		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0x11B4918", Offset = "0x11B4918", VA = "0x11B4918")]
		public static void Pvr_InitPsensor()
		{
		}

		[Token(Token = "0x6000A9F")]
		[Address(RVA = "0x11B5180", Offset = "0x11B5180", VA = "0x11B5180")]
		public static bool Pvr_IsHead6dofReset()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0x11B4B70", Offset = "0x11B4B70", VA = "0x11B4B70")]
		public static int Pvr_GetAndroidPsensorState()
		{
			return default(int);
		}

		[Token(Token = "0x6000AA1")]
		[Address(RVA = "0x11B4CF4", Offset = "0x11B4CF4", VA = "0x11B4CF4")]
		public static void Pvr_UnregisterPsensor()
		{
		}

		[Token(Token = "0x6000AA2")]
		[Address(RVA = "0x11B5394", Offset = "0x11B5394", VA = "0x11B5394")]
		public static int UPvr_ResetSensorAll(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6000AA3")]
		[Address(RVA = "0x11B5398", Offset = "0x11B5398", VA = "0x11B5398")]
		public static void UPvr_SetReinPosition(float x, float y, float z, int hand, bool valid)
		{
		}

		[Token(Token = "0x6000AA4")]
		[Address(RVA = "0x11B56AC", Offset = "0x11B56AC", VA = "0x11B56AC")]
		public static bool UPvr_SetTrackingOriginType(TrackingOrigin trackingOriginType)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200019B")]
	public struct Render
	{
		[Token(Token = "0x4000988")]
		public const string LibFileName = "Pvr_UnitySDK";

		[PreserveSig]
		[Token(Token = "0x6000AA5")]
		[Address(RVA = "0x11B2E38", Offset = "0x11B2E38", VA = "0x11B2E38")]
		private static extern void Pvr_ChangeScreenParameters(string model, int width, int height, double xppi, double yppi, double densityDpi);

		[PreserveSig]
		[Token(Token = "0x6000AA6")]
		[Address(RVA = "0x11B2F28", Offset = "0x11B2F28", VA = "0x11B2F28")]
		private static extern int Pvr_SetRatio(float midH, float midV);

		[PreserveSig]
		[Token(Token = "0x6000AA7")]
		[Address(RVA = "0x11B2FD0", Offset = "0x11B2FD0", VA = "0x11B2FD0")]
		private static extern int Pvr_SetPupillaryPoint(bool enable);

		[PreserveSig]
		[Token(Token = "0x6000AA8")]
		[Address(RVA = "0x11B3070", Offset = "0x11B3070", VA = "0x11B3070")]
		private static extern IntPtr Pvr_GetSupportHMDTypes();

		[PreserveSig]
		[Token(Token = "0x6000AA9")]
		[Address(RVA = "0x11B3100", Offset = "0x11B3100", VA = "0x11B3100")]
		private static extern void Pvr_SetCurrentHMDType(string type);

		[PreserveSig]
		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0x11B31B0", Offset = "0x11B31B0", VA = "0x11B31B0")]
		private static extern int Pvr_GetIntConfig(int configsenum, ref int res);

		[PreserveSig]
		[Token(Token = "0x6000AAB")]
		[Address(RVA = "0x11B325C", Offset = "0x11B325C", VA = "0x11B325C")]
		private static extern int Pvr_GetFloatConfig(int configsenum, ref float res);

		[PreserveSig]
		[Token(Token = "0x6000AAC")]
		[Address(RVA = "0x11B3308", Offset = "0x11B3308", VA = "0x11B3308")]
		private static extern void Pvr_SetupLayerData(int layerIndex, int sideMask, int textureId, int textureType, int layerFlags);

		[PreserveSig]
		[Token(Token = "0x6000AAD")]
		[Address(RVA = "0x11B33D8", Offset = "0x11B33D8", VA = "0x11B33D8")]
		private static extern void Pvr_SetupLayerCoords(int layerIndex, int sideMask, float[] lowerLeft, float[] lowerRight, float[] upperLeft, float[] upperRight);

		[PreserveSig]
		[Token(Token = "0x6000AAE")]
		[Address(RVA = "0x11B34D8", Offset = "0x11B34D8", VA = "0x11B34D8")]
		private static extern void Pvr_SetOverlayModelViewMatrix(int overlayType, int texId, int eye, int layerIndex, bool isHeadLocked, float m0, float m1, float m2, float m3, float m4, float m5, float m6, float m7, float m8, float m9, float m10, float m11, float m12, float m13, float m14, float m15);

		[PreserveSig]
		[Token(Token = "0x6000AAF")]
		[Address(RVA = "0x11B3648", Offset = "0x11B3648", VA = "0x11B3648")]
		private static extern void Pvr_SetFoveationParameters(int textureId, int previousId, float focalPointX, float focalPointY, float foveationGainX, float foveationGainY, float foveationArea, float foveationMinimum);

		[PreserveSig]
		[Token(Token = "0x6000AB0")]
		[Address(RVA = "0x11B3740", Offset = "0x11B3740", VA = "0x11B3740")]
		private static extern void Pvr_SetColorspaceType(int colorspaceType);

		[PreserveSig]
		[Token(Token = "0x6000AB1")]
		[Address(RVA = "0x11B37E0", Offset = "0x11B37E0", VA = "0x11B37E0")]
		private static extern IntPtr Pvr_CreateLayerAndroidSurface(int layerType, int layerIndex);

		[PreserveSig]
		[Token(Token = "0x6000AB2")]
		[Address(RVA = "0x11B3890", Offset = "0x11B3890", VA = "0x11B3890")]
		private static extern IntPtr Pvr_GetLayerAndroidSurface(int layerType, int layerIndex);

		[PreserveSig]
		[Token(Token = "0x6000AB3")]
		[Address(RVA = "0x11B3940", Offset = "0x11B3940", VA = "0x11B3940")]
		private static extern void Pvr_SetMonoMode(bool openMono);

		[Token(Token = "0x6000AB4")]
		[Address(RVA = "0x11B39E0", Offset = "0x11B39E0", VA = "0x11B39E0")]
		public static void UPvr_ChangeScreenParameters(string model, int width, int height, double xppi, double yppi, double densityDpi)
		{
		}

		[Token(Token = "0x6000AB5")]
		[Address(RVA = "0x11B39E4", Offset = "0x11B39E4", VA = "0x11B39E4")]
		public static int UPvr_SetRatio(float midH, float midV)
		{
			return default(int);
		}

		[Token(Token = "0x6000AB6")]
		[Address(RVA = "0x11B39E8", Offset = "0x11B39E8", VA = "0x11B39E8")]
		public static EFoveationLevel GetFoveatedRenderingLevel()
		{
			return default(EFoveationLevel);
		}

		[Token(Token = "0x6000AB7")]
		[Address(RVA = "0x11B3A1C", Offset = "0x11B3A1C", VA = "0x11B3A1C")]
		public static void SetFoveatedRenderingLevel(EFoveationLevel level)
		{
		}

		[Token(Token = "0x6000AB8")]
		[Address(RVA = "0x11B3A58", Offset = "0x11B3A58", VA = "0x11B3A58")]
		public static void GetFoveatedRenderingParameters(ref Vector2 ffrGainValue, ref float ffrAreaValue, ref float ffrMinimumValue)
		{
		}

		[Token(Token = "0x6000AB9")]
		[Address(RVA = "0x11B3AD8", Offset = "0x11B3AD8", VA = "0x11B3AD8")]
		public static void SetFoveatedRenderingParameters(Vector2 ffrGainValue, float ffrAreaValue, float ffrMinimumValue)
		{
		}

		[Token(Token = "0x6000ABA")]
		[Address(RVA = "0x11B3B68", Offset = "0x11B3B68", VA = "0x11B3B68")]
		public static void UPvr_SetFoveationParameters(int textureId, int previousId, float focalPointX, float focalPointY, float foveationGainX, float foveationGainY, float foveationArea, float foveationMinimum)
		{
		}

		[Token(Token = "0x6000ABB")]
		[Address(RVA = "0x11B3B6C", Offset = "0x11B3B6C", VA = "0x11B3B6C")]
		public static int UPvr_GetIntConfig(int configsenum, ref int res)
		{
			return default(int);
		}

		[Token(Token = "0x6000ABC")]
		[Address(RVA = "0x11B3B70", Offset = "0x11B3B70", VA = "0x11B3B70")]
		public static int UPvr_GetFloatConfig(int configsenum, ref float res)
		{
			return default(int);
		}

		[Token(Token = "0x6000ABD")]
		[Address(RVA = "0x11B3B74", Offset = "0x11B3B74", VA = "0x11B3B74")]
		public static string UPvr_GetSupportHMDTypes()
		{
			return null;
		}

		[Token(Token = "0x6000ABE")]
		[Address(RVA = "0x11B3C00", Offset = "0x11B3C00", VA = "0x11B3C00")]
		public static void UPvr_SetCurrentHMDType(string type)
		{
		}

		[Token(Token = "0x6000ABF")]
		[Address(RVA = "0x11B3C04", Offset = "0x11B3C04", VA = "0x11B3C04")]
		public static void UPvr_SetupLayerData(int layerIndex, int sideMask, int textureId, int textureType, int layerFlags)
		{
		}

		[Token(Token = "0x6000AC0")]
		[Address(RVA = "0x11B3C08", Offset = "0x11B3C08", VA = "0x11B3C08")]
		public static void UPvr_SetupLayerCoords(int layerIndex, int sideMask, float[] lowerLeft, float[] lowerRight, float[] upperLeft, float[] upperRight)
		{
		}

		[Token(Token = "0x6000AC1")]
		[Address(RVA = "0x11B3C0C", Offset = "0x11B3C0C", VA = "0x11B3C0C")]
		public static void UPvr_SetOverlayModelViewMatrix(int overlayType, int texId, int eye, int layerIndex, bool isHeadLocked, Matrix4x4 MV)
		{
		}

		[Token(Token = "0x6000AC2")]
		[Address(RVA = "0x11B3C6C", Offset = "0x11B3C6C", VA = "0x11B3C6C")]
		public static void UPvr_SetColorspaceType(int colorspaceType)
		{
		}

		[Token(Token = "0x6000AC3")]
		[Address(RVA = "0x11B3C70", Offset = "0x11B3C70", VA = "0x11B3C70")]
		public static IntPtr UPvr_CreateLayerAndroidSurface(int layerType, int layerIndex)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0x11B3C74", Offset = "0x11B3C74", VA = "0x11B3C74")]
		public static IntPtr UPvr_GetLayerAndroidSurface(int layerType, int layerIndex)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0x11B3C78", Offset = "0x11B3C78", VA = "0x11B3C78")]
		public static void UPvr_SetMonoMode(bool openMono)
		{
		}
	}
	[Token(Token = "0x200019C")]
	public struct System
	{
		[Token(Token = "0x4000989")]
		public const string LibFileName = "Pvr_UnitySDK";

		[Token(Token = "0x400098A")]
		public const string UnitySDKVersion = "2.8.3.3";

		[PreserveSig]
		[Token(Token = "0x6000AC6")]
		[Address(RVA = "0x11B56B0", Offset = "0x11B56B0", VA = "0x11B56B0")]
		public static extern void Pvr_SetInitActivity(IntPtr activity, IntPtr vrActivityClass);

		[PreserveSig]
		[Token(Token = "0x6000AC7")]
		[Address(RVA = "0x11B5760", Offset = "0x11B5760", VA = "0x11B5760")]
		private static extern IntPtr Pvr_GetSDKVersion();

		[PreserveSig]
		[Token(Token = "0x6000AC8")]
		[Address(RVA = "0x11B57F0", Offset = "0x11B57F0", VA = "0x11B57F0")]
		public static extern int Pvr_GetHmdHardwareVersion();

		[PreserveSig]
		[Token(Token = "0x6000AC9")]
		[Address(RVA = "0x11B5880", Offset = "0x11B5880", VA = "0x11B5880")]
		public static extern IntPtr Pvr_GetHmdFirmwareVersion();

		[PreserveSig]
		[Token(Token = "0x6000ACA")]
		[Address(RVA = "0x11B5910", Offset = "0x11B5910", VA = "0x11B5910")]
		public static extern IntPtr Pvr_GetHmdSerialNumber();

		[PreserveSig]
		[Token(Token = "0x6000ACB")]
		[Address(RVA = "0x11B59A0", Offset = "0x11B59A0", VA = "0x11B59A0")]
		public static extern int PVR_GetHmdBatteryLevel();

		[PreserveSig]
		[Token(Token = "0x6000ACC")]
		[Address(RVA = "0x11B5A30", Offset = "0x11B5A30", VA = "0x11B5A30")]
		public static extern int PVR_GetHmdBatteryStatus();

		[PreserveSig]
		[Token(Token = "0x6000ACD")]
		[Address(RVA = "0x11B5AC0", Offset = "0x11B5AC0", VA = "0x11B5AC0")]
		public static extern float PVR_GetHmdBatteryTemperature();

		[PreserveSig]
		[Token(Token = "0x6000ACE")]
		[Address(RVA = "0x11B5B50", Offset = "0x11B5B50", VA = "0x11B5B50")]
		public static extern int PVR_SetHmdAudioStatus(bool enable);

		[PreserveSig]
		[Token(Token = "0x6000ACF")]
		[Address(RVA = "0x11B5BF0", Offset = "0x11B5BF0", VA = "0x11B5BF0")]
		public static extern bool Pvr_GetEyeTrackingData(ref int leftEyePoseStatus, ref int rightEyePoseStatus, ref int combinedEyePoseStatus, ref float leftEyeGazePointX, ref float leftEyeGazePointY, ref float leftEyeGazePointZ, ref float rightEyeGazePointX, ref float rightEyeGazePointY, ref float rightEyeGazePointZ, ref float combinedEyeGazePointX, ref float combinedEyeGazePointY, ref float combinedEyeGazePointZ, ref float leftEyeGazeVectorX, ref float leftEyeGazeVectorY, ref float leftEyeGazeVectorZ, ref float rightEyeGazeVectorX, ref float rightEyeGazeVectorY, ref float rightEyeGazeVectorZ, ref float combinedEyeGazeVectorX, ref float combinedEyeGazeVectorY, ref float combinedEyeGazeVectorZ, ref float leftEyeOpenness, ref float rightEyeOpenness, ref float leftEyePupilDilation, ref float rightEyePupilDilation, ref float leftEyePositionGuideX, ref float leftEyePositionGuideY, ref float leftEyePositionGuideZ, ref float rightEyePositionGuideX, ref float rightEyePositionGuideY, ref float rightEyePositionGuideZ);

		[PreserveSig]
		[Token(Token = "0x6000AD0")]
		[Address(RVA = "0x11B5D48", Offset = "0x11B5D48", VA = "0x11B5D48")]
		public static extern bool Pvr_SetTrackingMode(int trackingMode);

		[PreserveSig]
		[Token(Token = "0x6000AD1")]
		[Address(RVA = "0x11B5DF0", Offset = "0x11B5DF0", VA = "0x11B5DF0")]
		public static extern int Pvr_GetPvrHandnessExt();

		[PreserveSig]
		[Token(Token = "0x6000AD2")]
		[Address(RVA = "0x11B5E80", Offset = "0x11B5E80", VA = "0x11B5E80")]
		public static extern void Pvr_SetPvrHandnessExt(int value);

		[PreserveSig]
		[Token(Token = "0x6000AD3")]
		[Address(RVA = "0x11B5F20", Offset = "0x11B5F20", VA = "0x11B5F20")]
		public static extern IntPtr GetRenderEventFunc();

		[PreserveSig]
		[Token(Token = "0x6000AD4")]
		[Address(RVA = "0x11B5FB0", Offset = "0x11B5FB0", VA = "0x11B5FB0")]
		public static extern void UnityEventData(int data);

		[Token(Token = "0x6000AD5")]
		public static bool UPvr_CallStaticMethod<T>(ref T result, AndroidJavaClass jclass, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AD6")]
		[Address(RVA = "0x11B4F04", Offset = "0x11B4F04", VA = "0x11B4F04")]
		public static bool UPvr_CallStaticMethod(AndroidJavaObject jobj, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AD7")]
		public static bool UPvr_CallMethod<T>(ref T result, AndroidJavaObject jobj, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AD8")]
		[Address(RVA = "0x11B6050", Offset = "0x11B6050", VA = "0x11B6050")]
		public static bool UPvr_CallMethod(AndroidJavaObject jobj, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0x11B62CC", Offset = "0x11B62CC", VA = "0x11B62CC")]
		public static string UPvr_GetSDKVersion()
		{
			return null;
		}

		[Token(Token = "0x6000ADA")]
		[Address(RVA = "0x11B6360", Offset = "0x11B6360", VA = "0x11B6360")]
		public static string UPvr_GetUnitySDKVersion()
		{
			return null;
		}

		[Token(Token = "0x6000ADB")]
		[Address(RVA = "0x11B63A8", Offset = "0x11B63A8", VA = "0x11B63A8")]
		public static string UPvr_GetDeviceMode()
		{
			return null;
		}

		[Token(Token = "0x6000ADC")]
		[Address(RVA = "0x11B63B0", Offset = "0x11B63B0", VA = "0x11B63B0")]
		public static string UPvr_GetDeviceModel()
		{
			return null;
		}

		[Token(Token = "0x6000ADD")]
		[Address(RVA = "0x11B2740", Offset = "0x11B2740", VA = "0x11B2740")]
		public static string UPvr_GetDeviceSN()
		{
			return null;
		}

		[Token(Token = "0x6000ADE")]
		[Address(RVA = "0x11B2AC4", Offset = "0x11B2AC4", VA = "0x11B2AC4")]
		public static AndroidJavaObject UPvr_GetCurrentActivity()
		{
			return null;
		}

		[Token(Token = "0x6000ADF")]
		[Address(RVA = "0x11B63B8", Offset = "0x11B63B8", VA = "0x11B63B8")]
		public static void UPvr_ShutDown()
		{
		}

		[Token(Token = "0x6000AE0")]
		[Address(RVA = "0x11B642C", Offset = "0x11B642C", VA = "0x11B642C")]
		public static bool UPvr_SetMonoPresentation()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AE1")]
		[Address(RVA = "0x11B6498", Offset = "0x11B6498", VA = "0x11B6498")]
		public static bool UPvr_IsPresentationExisted()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AE2")]
		[Address(RVA = "0x11B6528", Offset = "0x11B6528", VA = "0x11B6528")]
		public static bool UPvr_GetMainActivityPauseStatus()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AE3")]
		[Address(RVA = "0x11B65B8", Offset = "0x11B65B8", VA = "0x11B65B8")]
		public static void UPvr_Reboot()
		{
		}

		[Token(Token = "0x6000AE4")]
		[Address(RVA = "0x11B669C", Offset = "0x11B669C", VA = "0x11B669C")]
		public static void UPvr_Sleep()
		{
		}

		[Token(Token = "0x6000AE5")]
		[Address(RVA = "0x11B6710", Offset = "0x11B6710", VA = "0x11B6710")]
		public static bool UPvr_StartHomeKeyReceiver(string startreceivre)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AE6")]
		[Address(RVA = "0x11B69C4", Offset = "0x11B69C4", VA = "0x11B69C4")]
		public static bool UPvr_StopHomeKeyReceiver()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AE7")]
		[Address(RVA = "0x11B6C28", Offset = "0x11B6C28", VA = "0x11B6C28")]
		public static void UPvr_StartVRModel()
		{
		}

		[Token(Token = "0x6000AE8")]
		[Address(RVA = "0x11B6C9C", Offset = "0x11B6C9C", VA = "0x11B6C9C")]
		public static void UPvr_RemovePlatformLogo()
		{
		}

		[Token(Token = "0x6000AE9")]
		[Address(RVA = "0x11B6D10", Offset = "0x11B6D10", VA = "0x11B6D10")]
		public static void UPvr_ShowPlatformLogo()
		{
		}

		[Token(Token = "0x6000AEA")]
		[Address(RVA = "0x11B6D84", Offset = "0x11B6D84", VA = "0x11B6D84")]
		public static bool UPvr_IsPicoActivity()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AEB")]
		[Address(RVA = "0x11B6E8C", Offset = "0x11B6E8C", VA = "0x11B6E8C")]
		public static void UPvr_StopVRModel()
		{
		}

		[Token(Token = "0x6000AEC")]
		[Address(RVA = "0x11B6F00", Offset = "0x11B6F00", VA = "0x11B6F00")]
		public static string UPvr_GetCountryCode()
		{
			return null;
		}

		[Token(Token = "0x6000AED")]
		[Address(RVA = "0x11B700C", Offset = "0x11B700C", VA = "0x11B700C")]
		public static void UPvr_UnityEventData(int data)
		{
		}

		[Token(Token = "0x6000AEE")]
		[Address(RVA = "0x11B7010", Offset = "0x11B7010", VA = "0x11B7010")]
		public static bool UPvr_checkDevice(string packagename)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AEF")]
		[Address(RVA = "0x11B7158", Offset = "0x11B7158", VA = "0x11B7158")]
		public static int UPvr_GetHmdHardwareVersion()
		{
			return default(int);
		}

		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0x11B715C", Offset = "0x11B715C", VA = "0x11B715C")]
		public static string UPvr_GetHmdFirmwareVersion()
		{
			return null;
		}

		[Token(Token = "0x6000AF1")]
		[Address(RVA = "0x11B71F0", Offset = "0x11B71F0", VA = "0x11B71F0")]
		public static string UPvr_GetHmdSerialNumber()
		{
			return null;
		}

		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0x11B7284", Offset = "0x11B7284", VA = "0x11B7284")]
		public static int UPvr_GetHmdBatteryLevel()
		{
			return default(int);
		}

		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0x11B7288", Offset = "0x11B7288", VA = "0x11B7288")]
		public static int UPvr_GetHmdBatteryStatus()
		{
			return default(int);
		}

		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0x11B728C", Offset = "0x11B728C", VA = "0x11B728C")]
		public static float UPvr_GetHmdBatteryTemperature()
		{
			return default(float);
		}

		[Token(Token = "0x6000AF5")]
		[Address(RVA = "0x11B7290", Offset = "0x11B7290", VA = "0x11B7290")]
		public static int UPvr_SetHmdAudioStatus(bool enable)
		{
			return default(int);
		}

		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0x11B7298", Offset = "0x11B7298", VA = "0x11B7298")]
		public static bool UPvr_setTrackingMode(int trackingMode)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AF7")]
		[Address(RVA = "0x11B729C", Offset = "0x11B729C", VA = "0x11B729C")]
		public static bool UPvr_getEyeTrackingData(ref EyeTrackingData trackingData)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AF8")]
		[Address(RVA = "0x11B742C", Offset = "0x11B742C", VA = "0x11B742C")]
		public static bool UPvr_getEyeTrackingGazeRay(ref EyeTrackingGazeRay gazeRay)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AF9")]
		[Address(RVA = "0x11B75D0", Offset = "0x11B75D0", VA = "0x11B75D0")]
		public static bool UPvr_getEyeTrackingGazeRayWorld(ref EyeTrackingGazeRay gazeRay)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AFA")]
		[Address(RVA = "0x11B780C", Offset = "0x11B780C", VA = "0x11B780C")]
		public static Vector3 UPvr_getEyeTrackingPos()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000AFB")]
		[Address(RVA = "0x11B7840", Offset = "0x11B7840", VA = "0x11B7840")]
		public static int UPvr_GetPhoneScreenBrightness()
		{
			return default(int);
		}

		[Token(Token = "0x6000AFC")]
		[Address(RVA = "0x11B7940", Offset = "0x11B7940", VA = "0x11B7940")]
		public static void UPvr_SetPhoneScreenBrightness(int level)
		{
		}

		[Token(Token = "0x6000AFD")]
		[Address(RVA = "0x11B7A98", Offset = "0x11B7A98", VA = "0x11B7A98")]
		public static bool UPvr_IsPicoDefaultActivity()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AFE")]
		[Address(RVA = "0x11B0DA4", Offset = "0x11B0DA4", VA = "0x11B0DA4")]
		public static int UPvr_GetPvrHandnessExt()
		{
			return default(int);
		}

		[Token(Token = "0x6000AFF")]
		[Address(RVA = "0x11B0DA8", Offset = "0x11B0DA8", VA = "0x11B0DA8")]
		public static void UPvr_SetPvrHandnessExt(int value)
		{
		}
	}
	[Token(Token = "0x200019D")]
	public struct BoundarySystem
	{
		[Token(Token = "0x400098B")]
		public const string LibFileName = "Pvr_UnitySDK";

		[PreserveSig]
		[Token(Token = "0x6000B00")]
		[Address(RVA = "0x11AF5E4", Offset = "0x11AF5E4", VA = "0x11AF5E4")]
		private static extern float Pvr_GetFloorHeight();

		[PreserveSig]
		[Token(Token = "0x6000B01")]
		[Address(RVA = "0x11AF674", Offset = "0x11AF674", VA = "0x11AF674")]
		private static extern int Pvr_GetSeeThroughState();

		[PreserveSig]
		[Token(Token = "0x6000B02")]
		[Address(RVA = "0x11AF704", Offset = "0x11AF704", VA = "0x11AF704")]
		private static extern bool Pvr_GetFrameRateLimit();

		[PreserveSig]
		[Token(Token = "0x6000B03")]
		[Address(RVA = "0x11AF79C", Offset = "0x11AF79C", VA = "0x11AF79C")]
		private static extern bool Pvr_IsBoundaryEnable();

		[Token(Token = "0x6000B04")]
		[Address(RVA = "0x11AF834", Offset = "0x11AF834", VA = "0x11AF834")]
		public static float UPvr_GetFloorHeight()
		{
			return default(float);
		}

		[Token(Token = "0x6000B05")]
		[Address(RVA = "0x11AF838", Offset = "0x11AF838", VA = "0x11AF838")]
		public static int UPvr_GetSeeThroughState()
		{
			return default(int);
		}

		[Token(Token = "0x6000B06")]
		[Address(RVA = "0x11AF83C", Offset = "0x11AF83C", VA = "0x11AF83C")]
		public static bool UPvr_GetFrameRateLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B07")]
		[Address(RVA = "0x11AF840", Offset = "0x11AF840", VA = "0x11AF840")]
		public static bool UPvr_IsBoundaryEnable()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200019E")]
	public struct PlatformSettings
	{
		[Token(Token = "0x6000B08")]
		[Address(RVA = "0x11B25A4", Offset = "0x11B25A4", VA = "0x11B25A4")]
		public static Pvr_UnitySDKPlatformSetting.simulationType UPvr_IsCurrentDeviceValid()
		{
			return default(Pvr_UnitySDKPlatformSetting.simulationType);
		}

		[Token(Token = "0x6000B09")]
		[Address(RVA = "0x11B27DC", Offset = "0x11B27DC", VA = "0x11B27DC")]
		public static bool UPvr_AppEntitlementCheck(string appid)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B0A")]
		[Address(RVA = "0x11B2B50", Offset = "0x11B2B50", VA = "0x11B2B50")]
		public static bool UPvr_KeyEntitlementCheck(string publicKey)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200019F")]
	public enum DeviceCommand
	{
		[Token(Token = "0x400098D")]
		SET_PICO_NEO_HMD_BRIGHTNESS = 12,
		[Token(Token = "0x400098E")]
		SET_PICO_NEO_HMD_SLEEPDELAY
	}
	[Token(Token = "0x20001A0")]
	public enum BrightnessLevel
	{
		[Token(Token = "0x4000990")]
		VR_BRIGHTNESS_LEVEL_MIN = 1,
		[Token(Token = "0x4000991")]
		VR_BRIGHTNESS_LEVEL_MAX = 100,
		[Token(Token = "0x4000992")]
		VR_BRIGHTNESS_LEVEL_DOWN = 1000,
		[Token(Token = "0x4000993")]
		VR_BRIGHTNESS_LEVEL_UP = 1001,
		[Token(Token = "0x4000994")]
		VR_BRIGHTNESS_LEVEL_SCREEN_OFF = -100
	}
	[Token(Token = "0x20001A1")]
	public struct VolumePowerBrightness
	{
		[Token(Token = "0x4000995")]
		public const string LibFileName = "Pvr_UnitySDK";

		[Token(Token = "0x4000996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AndroidJavaObject activity;

		[Token(Token = "0x4000997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static AndroidJavaClass javaSysActivityClass;

		[Token(Token = "0x4000998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static AndroidJavaClass batteryjavaVrActivityClass;

		[Token(Token = "0x4000999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static AndroidJavaClass volumejavaVrActivityClass;

		[PreserveSig]
		[Token(Token = "0x6000B0B")]
		[Address(RVA = "0xE9AB94", Offset = "0xE9AB94", VA = "0xE9AB94")]
		public static extern void Pvr_SetInitActivity(IntPtr activity, IntPtr vrActivityClass);

		[PreserveSig]
		[Token(Token = "0x6000B0C")]
		[Address(RVA = "0xE9AC44", Offset = "0xE9AC44", VA = "0xE9AC44")]
		private static extern bool Pvr_IsHmdExist();

		[PreserveSig]
		[Token(Token = "0x6000B0D")]
		[Address(RVA = "0xE9ACDC", Offset = "0xE9ACDC", VA = "0xE9ACDC")]
		private static extern int Pvr_GetHmdScreenBrightness();

		[PreserveSig]
		[Token(Token = "0x6000B0E")]
		[Address(RVA = "0xE9AD6C", Offset = "0xE9AD6C", VA = "0xE9AD6C")]
		private static extern bool Pvr_SetHmdScreenBrightness(int brightness);

		[Token(Token = "0x6000B0F")]
		[Address(RVA = "0xE9AE14", Offset = "0xE9AE14", VA = "0xE9AE14")]
		public static bool UPvr_IsHmdExist()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B10")]
		[Address(RVA = "0xE9AE18", Offset = "0xE9AE18", VA = "0xE9AE18")]
		public static int UPvr_GetHmdScreenBrightness()
		{
			return default(int);
		}

		[Token(Token = "0x6000B11")]
		[Address(RVA = "0xE9AE1C", Offset = "0xE9AE1C", VA = "0xE9AE1C")]
		public static bool UPvr_SetHmdScreenBrightness(int brightness)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B12")]
		[Address(RVA = "0xE9AE20", Offset = "0xE9AE20", VA = "0xE9AE20")]
		public static bool UPvr_SetCommonBrightness(int brightness)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B13")]
		[Address(RVA = "0xE9B0D0", Offset = "0xE9B0D0", VA = "0xE9B0D0")]
		public static int UPvr_GetCommonBrightness()
		{
			return default(int);
		}

		[Token(Token = "0x6000B14")]
		[Address(RVA = "0xE9B304", Offset = "0xE9B304", VA = "0xE9B304")]
		public static int[] UPvr_GetScreenBrightnessLevel()
		{
			return null;
		}

		[Token(Token = "0x6000B15")]
		[Address(RVA = "0xE9B494", Offset = "0xE9B494", VA = "0xE9B494")]
		public static void UPvr_SetScreenBrightnessLevel(int vrBrightness, int level)
		{
		}

		[Token(Token = "0x6000B16")]
		[Address(RVA = "0xE9B6E8", Offset = "0xE9B6E8", VA = "0xE9B6E8")]
		public static bool UPvr_SetDevicePropForUser(DeviceCommand deviceid, string number)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B17")]
		[Address(RVA = "0xE9B858", Offset = "0xE9B858", VA = "0xE9B858")]
		public static string UPvr_GetDevicePropForUser(DeviceCommand deviceid)
		{
			return null;
		}

		[Token(Token = "0x6000B18")]
		[Address(RVA = "0xE9B984", Offset = "0xE9B984", VA = "0xE9B984")]
		public static bool UPvr_InitBatteryClass()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B19")]
		[Address(RVA = "0xE9BB98", Offset = "0xE9BB98", VA = "0xE9BB98")]
		public static bool UPvr_InitBatteryVolClass()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B1A")]
		[Address(RVA = "0xE9BE90", Offset = "0xE9BE90", VA = "0xE9BE90")]
		public static bool UPvr_StartBatteryReceiver(string startreceivre)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B1B")]
		[Address(RVA = "0xE9C0E8", Offset = "0xE9C0E8", VA = "0xE9C0E8")]
		public static bool UPvr_StopBatteryReceiver()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B1C")]
		[Address(RVA = "0xE9AE58", Offset = "0xE9AE58", VA = "0xE9AE58")]
		public static bool UPvr_SetBrightness(int brightness)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B1D")]
		[Address(RVA = "0xE9B0F0", Offset = "0xE9B0F0", VA = "0xE9B0F0")]
		public static int UPvr_GetCurrentBrightness()
		{
			return default(int);
		}

		[Token(Token = "0x6000B1E")]
		[Address(RVA = "0xE9B308", Offset = "0xE9B308", VA = "0xE9B308")]
		public static int[] Pvr_GetScreenBrightnessLevel()
		{
			return null;
		}

		[Token(Token = "0x6000B1F")]
		[Address(RVA = "0xE9B498", Offset = "0xE9B498", VA = "0xE9B498")]
		public static void Pvr_SetScreenBrightnessLevel(int vrBrightness, int level)
		{
		}

		[Token(Token = "0x6000B20")]
		[Address(RVA = "0xE9C2F0", Offset = "0xE9C2F0", VA = "0xE9C2F0")]
		public static bool UPvr_StartAudioReceiver(string startreceivre)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B21")]
		[Address(RVA = "0xE9C548", Offset = "0xE9C548", VA = "0xE9C548")]
		public static bool UPvr_StopAudioReceiver()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B22")]
		[Address(RVA = "0xE9C750", Offset = "0xE9C750", VA = "0xE9C750")]
		public static int UPvr_GetMaxVolumeNumber()
		{
			return default(int);
		}

		[Token(Token = "0x6000B23")]
		[Address(RVA = "0xE9C8C8", Offset = "0xE9C8C8", VA = "0xE9C8C8")]
		public static int UPvr_GetCurrentVolumeNumber()
		{
			return default(int);
		}

		[Token(Token = "0x6000B24")]
		[Address(RVA = "0xE9CA40", Offset = "0xE9CA40", VA = "0xE9CA40")]
		public static bool UPvr_VolumeUp()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B25")]
		[Address(RVA = "0xE9CBA4", Offset = "0xE9CBA4", VA = "0xE9CBA4")]
		public static bool UPvr_VolumeDown()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B26")]
		[Address(RVA = "0xE9CD08", Offset = "0xE9CD08", VA = "0xE9CD08")]
		public static bool UPvr_SetVolumeNum(int volume)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B27")]
		[Address(RVA = "0xE9CEF0", Offset = "0xE9CEF0", VA = "0xE9CEF0")]
		public static bool UPvr_SetAudio(string s)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B28")]
		[Address(RVA = "0xE9CEF8", Offset = "0xE9CEF8", VA = "0xE9CEF8")]
		public static bool UPvr_SetBattery(string s)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B29")]
		[Address(RVA = "0xE9B85C", Offset = "0xE9B85C", VA = "0xE9B85C")]
		private static string getDevicePropForUser(DeviceCommand deviceid)
		{
			return null;
		}

		[Token(Token = "0x6000B2A")]
		[Address(RVA = "0xE9B6EC", Offset = "0xE9B6EC", VA = "0xE9B6EC")]
		private static bool setDevicePropForUser(DeviceCommand deviceid, string number)
		{
			return default(bool);
		}
	}
}
namespace FlowCanvas
{
	[Token(Token = "0x20001A2")]
	public class BinderConnection<T> : BinderConnection
	{
		[Token(Token = "0x6000B2B")]
		public override void Bind()
		{
		}

		[Token(Token = "0x6000B2C")]
		public override void UnBind()
		{
		}

		[Token(Token = "0x6000B2D")]
		private void DoNormalBinding(Port source, Port target)
		{
		}

		[Token(Token = "0x6000B2E")]
		public BinderConnection()
		{
		}
	}
	[Token(Token = "0x20001A3")]
	public class BinderConnection : Connection
	{
		[Token(Token = "0x400099A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "fsSerializeAsAttribute", RVA = "0x97EEA4", Offset = "0x97EEA4")]
		private string _sourcePortID;

		[Token(Token = "0x400099B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "fsSerializeAsAttribute", RVA = "0x97EEDC", Offset = "0x97EEDC")]
		private string _targetPortID;

		[NonSerialized]
		[Token(Token = "0x400099C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Port _sourcePort;

		[NonSerialized]
		[Token(Token = "0x400099D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Port _targetPort;

		[Token(Token = "0x170000F3")]
		public string sourcePortID
		{
			[Token(Token = "0x6000B2F")]
			[Address(RVA = "0xC1B1E8", Offset = "0xC1B1E8", VA = "0xC1B1E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B30")]
			[Address(RVA = "0xC1B364", Offset = "0xC1B364", VA = "0xC1B364")]
			private set
			{
			}
		}

		[Token(Token = "0x170000F4")]
		public string targetPortID
		{
			[Token(Token = "0x6000B31")]
			[Address(RVA = "0xC1B36C", Offset = "0xC1B36C", VA = "0xC1B36C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B32")]
			[Address(RVA = "0xC1B4E8", Offset = "0xC1B4E8", VA = "0xC1B4E8")]
			private set
			{
			}
		}

		[Token(Token = "0x170000F5")]
		public Port sourcePort
		{
			[Token(Token = "0x6000B33")]
			[Address(RVA = "0xC1B238", Offset = "0xC1B238", VA = "0xC1B238")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F6")]
		public Port targetPort
		{
			[Token(Token = "0x6000B34")]
			[Address(RVA = "0xC1B3BC", Offset = "0xC1B3BC", VA = "0xC1B3BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F7")]
		public Type bindingType
		{
			[Token(Token = "0x6000B35")]
			[Address(RVA = "0xC1B770", Offset = "0xC1B770", VA = "0xC1B770")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B36")]
		[Address(RVA = "0xC1B8A0", Offset = "0xC1B8A0", VA = "0xC1B8A0")]
		public static BinderConnection Create(Port source, Port target)
		{
			return null;
		}

		[Token(Token = "0x6000B37")]
		[Address(RVA = "0xC1C3E8", Offset = "0xC1C3E8", VA = "0xC1C3E8")]
		public void SetSourcePort(Port newSourcePort)
		{
		}

		[Token(Token = "0x6000B38")]
		[Address(RVA = "0xC1C078", Offset = "0xC1C078", VA = "0xC1C078")]
		private void SetSourcePort(Port newSourcePort, bool isNew)
		{
		}

		[Token(Token = "0x6000B39")]
		[Address(RVA = "0xC1C5D8", Offset = "0xC1C5D8", VA = "0xC1C5D8")]
		public void SetTargetPort(Port newTargetPort)
		{
		}

		[Token(Token = "0x6000B3A")]
		[Address(RVA = "0xC1C230", Offset = "0xC1C230", VA = "0xC1C230")]
		private void SetTargetPort(Port newTargetPort, bool isNew)
		{
		}

		[Token(Token = "0x6000B3B")]
		[Address(RVA = "0xC1C3F0", Offset = "0xC1C3F0", VA = "0xC1C3F0")]
		public void GatherAndValidateSourcePort()
		{
		}

		[Token(Token = "0x6000B3C")]
		[Address(RVA = "0xC1C5E0", Offset = "0xC1C5E0", VA = "0xC1C5E0")]
		public void GatherAndValidateTargetPort()
		{
		}

		[Token(Token = "0x6000B3D")]
		[Address(RVA = "0xC1C930", Offset = "0xC1C930", VA = "0xC1C930")]
		public static bool CanBeBound(Port source, Port target, [Optional] BinderConnection refConnection)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B3E")]
		[Address(RVA = "0xC1BDD4", Offset = "0xC1BDD4", VA = "0xC1BDD4")]
		public static string CanBeBoundVerbosed(Port source, Port target, [Optional] BinderConnection refConnection)
		{
			return null;
		}

		[Token(Token = "0x6000B3F")]
		[Address(RVA = "0xC1C94C", Offset = "0xC1C94C", VA = "0xC1C94C", Slot = "7")]
		public sealed override void OnDestroy()
		{
		}

		[Token(Token = "0x6000B40")]
		[Address(RVA = "0xC1CB14", Offset = "0xC1CB14", VA = "0xC1CB14", Slot = "8")]
		public virtual void Bind()
		{
		}

		[Token(Token = "0x6000B41")]
		[Address(RVA = "0xC1CD18", Offset = "0xC1CD18", VA = "0xC1CD18", Slot = "9")]
		public virtual void UnBind()
		{
		}

		[Token(Token = "0x6000B42")]
		[Address(RVA = "0xC1C070", Offset = "0xC1C070", VA = "0xC1C070")]
		public BinderConnection()
		{
		}
	}
	[Token(Token = "0x20001A4")]
	public delegate void FlowHandler(Flow f);
	[Token(Token = "0x20001A5")]
	[SpoofAOT]
	public delegate T ValueHandler<T>();
	[Token(Token = "0x20001A6")]
	public delegate object ValueHandlerObject();
	[Token(Token = "0x20001A7")]
	public delegate void FlowBreak();
	[Token(Token = "0x20001A8")]
	public delegate void FlowReturn(object value);
	[Serializable]
	[Token(Token = "0x20001A9")]
	public class DynamicPortDefinition : ISerializationCallbackReceiver
	{
		[Token(Token = "0x400099E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private string _ID;

		[Token(Token = "0x400099F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string _name;

		[Token(Token = "0x40009A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string _type;

		[NonSerialized]
		[Token(Token = "0x40009A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Type resolvedType;

		[Token(Token = "0x170000F8")]
		public string ID
		{
			[Token(Token = "0x6000B59")]
			[Address(RVA = "0xC1CF48", Offset = "0xC1CF48", VA = "0xC1CF48")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B5A")]
			[Address(RVA = "0xC1CF8C", Offset = "0xC1CF8C", VA = "0xC1CF8C")]
			private set
			{
			}
		}

		[Token(Token = "0x170000F9")]
		public string name
		{
			[Token(Token = "0x6000B5B")]
			[Address(RVA = "0xC1CF84", Offset = "0xC1CF84", VA = "0xC1CF84")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B5C")]
			[Address(RVA = "0xC1CF94", Offset = "0xC1CF94", VA = "0xC1CF94")]
			set
			{
			}
		}

		[Token(Token = "0x170000FA")]
		public Type type
		{
			[Token(Token = "0x6000B5D")]
			[Address(RVA = "0xC1CF9C", Offset = "0xC1CF9C", VA = "0xC1CF9C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B5E")]
			[Address(RVA = "0xC1CFA4", Offset = "0xC1CFA4", VA = "0xC1CFA4")]
			set
			{
			}
		}

		[Token(Token = "0x6000B57")]
		[Address(RVA = "0xC1CE24", Offset = "0xC1CE24", VA = "0xC1CE24", Slot = "4")]
		private void UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6000B58")]
		[Address(RVA = "0xC1CECC", Offset = "0xC1CECC", VA = "0xC1CECC", Slot = "5")]
		private void UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6000B5F")]
		[Address(RVA = "0xC1CFAC", Offset = "0xC1CFAC", VA = "0xC1CFAC")]
		public DynamicPortDefinition()
		{
		}

		[Token(Token = "0x6000B60")]
		[Address(RVA = "0xC1CFB4", Offset = "0xC1CFB4", VA = "0xC1CFB4")]
		public DynamicPortDefinition(string name, Type type)
		{
		}
	}
	[Token(Token = "0x20001AA")]
	[SpoofAOT]
	public struct Flow
	{
		[Token(Token = "0x20006DD")]
		public struct ReturnData
		{
			[Token(Token = "0x4001E41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x983CFC", Offset = "0x983CFC")]
			private FlowReturn <returnCall>k__BackingField;

			[Token(Token = "0x4001E42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x983D0C", Offset = "0x983D0C")]
			private Type <returnType>k__BackingField;

			[Token(Token = "0x1700037D")]
			public FlowReturn returnCall
			{
				[Token(Token = "0x600248E")]
				[Address(RVA = "0xA2A088", Offset = "0xA2A088", VA = "0xA2A088")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A980", Offset = "0x98A980")]
				get
				{
					return null;
				}
				[Token(Token = "0x600248F")]
				[Address(RVA = "0xA2A090", Offset = "0xA2A090", VA = "0xA2A090")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A990", Offset = "0x98A990")]
				private set
				{
				}
			}

			[Token(Token = "0x1700037E")]
			public Type returnType
			{
				[Token(Token = "0x6002490")]
				[Address(RVA = "0xA2A098", Offset = "0xA2A098", VA = "0xA2A098")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A9A0", Offset = "0x98A9A0")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002491")]
				[Address(RVA = "0xA2A0A0", Offset = "0xA2A0A0", VA = "0xA2A0A0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98A9B0", Offset = "0x98A9B0")]
				private set
				{
				}
			}

			[Token(Token = "0x6002492")]
			[Address(RVA = "0xA2A0A8", Offset = "0xA2A0A8", VA = "0xA2A0A8")]
			public ReturnData(FlowReturn call, Type type)
			{
			}
		}

		[Token(Token = "0x40009A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int ticks;

		[Token(Token = "0x40009A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private Dictionary<string, object> parameters;

		[Token(Token = "0x40009A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ReturnData returnData;

		[Token(Token = "0x40009A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FlowBreak breakCall;

		[Token(Token = "0x170000FB")]
		public static Flow New
		{
			[Token(Token = "0x6000B61")]
			[Address(RVA = "0xC1D05C", Offset = "0xC1D05C", VA = "0xC1D05C")]
			get
			{
				return default(Flow);
			}
		}

		[Token(Token = "0x6000B62")]
		[Address(RVA = "0xA2A00C", Offset = "0xA2A00C", VA = "0xA2A00C")]
		public void Call(FlowOutput port)
		{
		}

		[Token(Token = "0x6000B63")]
		public T ReadParameter<T>(string name)
		{
			return (T)null;
		}

		[Token(Token = "0x6000B64")]
		public void WriteParameter<T>(string name, T value)
		{
		}

		[Token(Token = "0x6000B65")]
		[Address(RVA = "0xA2A014", Offset = "0xA2A014", VA = "0xA2A014")]
		public void SetReturnData(FlowReturn call, Type expectedType)
		{
		}

		[Token(Token = "0x6000B66")]
		[Address(RVA = "0xA2A01C", Offset = "0xA2A01C", VA = "0xA2A01C")]
		public void Return(object value, FlowNode context)
		{
		}

		[Token(Token = "0x6000B67")]
		[Address(RVA = "0xA2A024", Offset = "0xA2A024", VA = "0xA2A024")]
		public void BeginBreakBlock(FlowBreak callback)
		{
		}

		[Token(Token = "0x6000B68")]
		[Address(RVA = "0xA2A02C", Offset = "0xA2A02C", VA = "0xA2A02C")]
		public void EndBreakBlock()
		{
		}

		[Token(Token = "0x6000B69")]
		[Address(RVA = "0xA2A034", Offset = "0xA2A034", VA = "0xA2A034")]
		public void Break(FlowNode context)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001AB")]
	[GraphInfo]
	public abstract class FlowGraph : Graph
	{
		[Token(Token = "0x40009A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool hasInitialized;

		[Token(Token = "0x40009A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private List<IUpdatable> updatableNodes;

		[Token(Token = "0x40009A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Dictionary<string, IInvokable> functions;

		[Token(Token = "0x40009A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Dictionary<Type, UnityEngine.Component> cachedAgentComponents;

		[Token(Token = "0x170000FC")]
		public override Type baseNodeType
		{
			[Token(Token = "0x6000B6A")]
			[Address(RVA = "0xC1D8A4", Offset = "0xC1D8A4", VA = "0xC1D8A4", Slot = "16")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FD")]
		public override bool useLocalBlackboard
		{
			[Token(Token = "0x6000B6B")]
			[Address(RVA = "0xC1D914", Offset = "0xC1D914", VA = "0xC1D914", Slot = "20")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000FE")]
		public override bool requiresAgent
		{
			[Token(Token = "0x6000B6C")]
			[Address(RVA = "0xC1D91C", Offset = "0xC1D91C", VA = "0xC1D91C", Slot = "17")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000FF")]
		public override bool requiresPrimeNode
		{
			[Token(Token = "0x6000B6D")]
			[Address(RVA = "0xC1D924", Offset = "0xC1D924", VA = "0xC1D924", Slot = "18")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000100")]
		public override bool isTree
		{
			[Token(Token = "0x6000B6E")]
			[Address(RVA = "0xC1D92C", Offset = "0xC1D92C", VA = "0xC1D92C", Slot = "19")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000101")]
		public override bool canAcceptVariableDrops
		{
			[Token(Token = "0x6000B6F")]
			[Address(RVA = "0xC1D934", Offset = "0xC1D934", VA = "0xC1D934", Slot = "21")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000B70")]
		public T CallFunction<T>(string name, params object[] args)
		{
			return (T)null;
		}

		[Token(Token = "0x6000B71")]
		[Address(RVA = "0xC1D93C", Offset = "0xC1D93C", VA = "0xC1D93C")]
		public object CallFunction(string name, params object[] args)
		{
			return null;
		}

		[Token(Token = "0x6000B72")]
		[Address(RVA = "0xC1DA50", Offset = "0xC1DA50", VA = "0xC1DA50")]
		public void CallFunctionAsync(string name, Action<object> callback, params object[] args)
		{
		}

		[Token(Token = "0x6000B73")]
		[Address(RVA = "0xC1DB64", Offset = "0xC1DB64", VA = "0xC1DB64")]
		public UnityEngine.Object GetAgentComponent(Type type)
		{
			return null;
		}

		[Token(Token = "0x6000B74")]
		[Address(RVA = "0xC1DEAC", Offset = "0xC1DEAC", VA = "0xC1DEAC", Slot = "22")]
		protected override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6000B75")]
		[Address(RVA = "0xC1E800", Offset = "0xC1E800", VA = "0xC1E800", Slot = "23")]
		protected override void OnGraphUpdate()
		{
		}

		[Token(Token = "0x6000B76")]
		[Address(RVA = "0xC1E93C", Offset = "0xC1E93C", VA = "0xC1E93C", Slot = "24")]
		protected override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6000B77")]
		[Address(RVA = "0xC1EAB0", Offset = "0xC1EAB0", VA = "0xC1EAB0")]
		protected FlowGraph()
		{
		}
	}
	[Token(Token = "0x20001AC")]
	public abstract class FlowNode : Node, ISerializationCallbackReceiver
	{
		[Token(Token = "0x20006DE")]
		[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x97908C", Offset = "0x97908C")]
		public class ContextDefinedInputsAttribute : Attribute
		{
			[Token(Token = "0x4001E43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public readonly Type[] types;

			[Token(Token = "0x6002493")]
			[Address(RVA = "0xDF3CFC", Offset = "0xDF3CFC", VA = "0xDF3CFC")]
			public ContextDefinedInputsAttribute(params Type[] types)
			{
			}
		}

		[Token(Token = "0x20006DF")]
		[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x9790A0", Offset = "0x9790A0")]
		public class ContextDefinedOutputsAttribute : Attribute
		{
			[Token(Token = "0x4001E44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public readonly Type[] types;

			[Token(Token = "0x6002494")]
			[Address(RVA = "0xDF3D28", Offset = "0xDF3D28", VA = "0xDF3D28")]
			public ContextDefinedOutputsAttribute(params Type[] types)
			{
			}
		}

		[Token(Token = "0x20006E0")]
		[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x9790B4", Offset = "0x9790B4")]
		public class HasRefreshButtonAttribute : Attribute
		{
			[Token(Token = "0x6002495")]
			[Address(RVA = "0xDF3DA8", Offset = "0xDF3DA8", VA = "0xDF3DA8")]
			public HasRefreshButtonAttribute()
			{
			}
		}

		[Token(Token = "0x20006E1")]
		[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x9790C8", Offset = "0x9790C8")]
		public class GatherPortsCallbackAttribute : CallbackAttribute
		{
			[Token(Token = "0x6002496")]
			[Address(RVA = "0xDF3D54", Offset = "0xDF3D54", VA = "0xDF3D54")]
			public GatherPortsCallbackAttribute()
			{
			}
		}

		[Token(Token = "0x20006E2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9790DC", Offset = "0x9790DC")]
		private sealed class <>c__DisplayClass34_0
		{
			[Token(Token = "0x4001E45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FlowNode <>4__this;

			[Token(Token = "0x4001E46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string ID;

			[Token(Token = "0x6002497")]
			[Address(RVA = "0xDF3A88", Offset = "0xDF3A88", VA = "0xDF3A88")]
			public <>c__DisplayClass34_0()
			{
			}

			[Token(Token = "0x6002498")]
			[Address(RVA = "0xDF3A90", Offset = "0xDF3A90", VA = "0xDF3A90")]
			internal bool <GetInputPort>b__0(Port p)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20006E3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9790EC", Offset = "0x9790EC")]
		private sealed class <>c__DisplayClass35_0
		{
			[Token(Token = "0x4001E47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FlowNode <>4__this;

			[Token(Token = "0x4001E48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string ID;

			[Token(Token = "0x6002499")]
			[Address(RVA = "0xDF3AD4", Offset = "0xDF3AD4", VA = "0xDF3AD4")]
			public <>c__DisplayClass35_0()
			{
			}

			[Token(Token = "0x600249A")]
			[Address(RVA = "0xDF3ADC", Offset = "0xDF3ADC", VA = "0xDF3ADC")]
			internal bool <GetOutputPort>b__0(Port p)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20006E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9790FC", Offset = "0x9790FC")]
		private sealed class <>c__DisplayClass41_0
		{
			[Token(Token = "0x4001E49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Type type;

			[Token(Token = "0x600249B")]
			[Address(RVA = "0xDF3B20", Offset = "0xDF3B20", VA = "0xDF3B20")]
			public <>c__DisplayClass41_0()
			{
			}

			[Token(Token = "0x600249C")]
			[Address(RVA = "0xDF3B28", Offset = "0xDF3B28", VA = "0xDF3B28")]
			internal bool <GetFirstInputOfType>b__1(Port p)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20006E5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97910C", Offset = "0x97910C")]
		private sealed class <>c
		{
			[Token(Token = "0x4001E4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001E4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Port, int> <>9__41_0;

			[Token(Token = "0x4001E4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Port, int> <>9__42_0;

			[Token(Token = "0x4001E4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<ValueInput, bool> <>9__43_0;

			[Token(Token = "0x4001E4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<KeyValuePair<string, object>, string> <>9__65_0;

			[Token(Token = "0x4001E4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<KeyValuePair<string, object>, object> <>9__65_1;

			[Token(Token = "0x600249E")]
			[Address(RVA = "0xDF3868", Offset = "0xDF3868", VA = "0xDF3868")]
			public <>c()
			{
			}

			[Token(Token = "0x600249F")]
			[Address(RVA = "0xDF3870", Offset = "0xDF3870", VA = "0xDF3870")]
			internal int <GetFirstInputOfType>b__41_0(Port p)
			{
				return default(int);
			}

			[Token(Token = "0x60024A0")]
			[Address(RVA = "0xDF38F0", Offset = "0xDF38F0", VA = "0xDF38F0")]
			internal int <GetFirstOutputOfType>b__42_0(Port p)
			{
				return default(int);
			}

			[Token(Token = "0x60024A1")]
			[Address(RVA = "0xDF3970", Offset = "0xDF3970", VA = "0xDF3970")]
			internal bool <AssignSelfInstancePort>b__43_0(ValueInput p)
			{
				return default(bool);
			}

			[Token(Token = "0x60024A2")]
			[Address(RVA = "0xDF39D0", Offset = "0xDF39D0", VA = "0xDF39D0")]
			internal string <ReplaceWith>b__65_0(KeyValuePair<string, object> k)
			{
				return null;
			}

			[Token(Token = "0x60024A3")]
			[Address(RVA = "0xDF3A2C", Offset = "0xDF3A2C", VA = "0xDF3A2C")]
			internal object <ReplaceWith>b__65_1(KeyValuePair<string, object> v)
			{
				return null;
			}
		}

		[Token(Token = "0x20006E6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97911C", Offset = "0x97911C")]
		private sealed class <>c__DisplayClass42_0
		{
			[Token(Token = "0x4001E50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Type type;

			[Token(Token = "0x60024A4")]
			[Address(RVA = "0xDF3BC8", Offset = "0xDF3BC8", VA = "0xDF3BC8")]
			public <>c__DisplayClass42_0()
			{
			}

			[Token(Token = "0x60024A5")]
			[Address(RVA = "0xDF3BD0", Offset = "0xDF3BD0", VA = "0xDF3BD0")]
			internal bool <GetFirstOutputOfType>b__1(Port p)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20006E7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97912C", Offset = "0x97912C")]
		private sealed class <>c__DisplayClass46_0
		{
			[Token(Token = "0x4001E51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public KeyValuePair<string, object> pair;

			[Token(Token = "0x4001E52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FlowNode <>4__this;

			[Token(Token = "0x60024A6")]
			[Address(RVA = "0xDF3C70", Offset = "0xDF3C70", VA = "0xDF3C70")]
			public <>c__DisplayClass46_0()
			{
			}

			[Token(Token = "0x60024A7")]
			[Address(RVA = "0xDF3C78", Offset = "0xDF3C78", VA = "0xDF3C78")]
			internal bool <DeserializeInputPortValues>b__0(Port p)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40009AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Dictionary<string, object> _inputPortValues;

		[NonSerialized]
		[Token(Token = "0x40009AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Dictionary<string, Port> inputPorts;

		[NonSerialized]
		[Token(Token = "0x40009AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Dictionary<string, Port> outputPorts;

		[Token(Token = "0x17000102")]
		public sealed override int maxInConnections
		{
			[Token(Token = "0x6000B78")]
			[Address(RVA = "0xC1F2CC", Offset = "0xC1F2CC", VA = "0xC1F2CC", Slot = "9")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000103")]
		public sealed override int maxOutConnections
		{
			[Token(Token = "0x6000B79")]
			[Address(RVA = "0xC1F2D4", Offset = "0xC1F2D4", VA = "0xC1F2D4", Slot = "10")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000104")]
		public sealed override bool allowAsPrime
		{
			[Token(Token = "0x6000B7A")]
			[Address(RVA = "0xC1F2DC", Offset = "0xC1F2DC", VA = "0xC1F2DC", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000105")]
		public sealed override Type outConnectionType
		{
			[Token(Token = "0x6000B7B")]
			[Address(RVA = "0xC1F2E4", Offset = "0xC1F2E4", VA = "0xC1F2E4", Slot = "11")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000106")]
		public sealed override Alignment2x2 commentsAlignment
		{
			[Token(Token = "0x6000B7C")]
			[Address(RVA = "0xC1F354", Offset = "0xC1F354", VA = "0xC1F354", Slot = "13")]
			get
			{
				return default(Alignment2x2);
			}
		}

		[Token(Token = "0x17000107")]
		public override Alignment2x2 iconAlignment
		{
			[Token(Token = "0x6000B7D")]
			[Address(RVA = "0xC1F35C", Offset = "0xC1F35C", VA = "0xC1F35C", Slot = "14")]
			get
			{
				return default(Alignment2x2);
			}
		}

		[Token(Token = "0x17000108")]
		public FlowGraph flowGraph
		{
			[Token(Token = "0x6000B7E")]
			[Address(RVA = "0xC1F364", Offset = "0xC1F364", VA = "0xC1F364")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000109")]
		public virtual bool ignoreSelfInstancePortAssignment
		{
			[Token(Token = "0x6000B7F")]
			[Address(RVA = "0xC1F438", Offset = "0xC1F438", VA = "0xC1F438", Slot = "34")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000B80")]
		[Address(RVA = "0xC1F440", Offset = "0xC1F440", VA = "0xC1F440", Slot = "32")]
		private void UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6000B81")]
		[Address(RVA = "0xC1F610", Offset = "0xC1F610", VA = "0xC1F610", Slot = "33")]
		private void UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6000B82")]
		[Address(RVA = "0xC1F614", Offset = "0xC1F614", VA = "0xC1F614", Slot = "16")]
		public sealed override void OnValidate(Graph flowGraph)
		{
		}

		[Token(Token = "0x6000B83")]
		[Address(RVA = "0xC1F760", Offset = "0xC1F760", VA = "0xC1F760", Slot = "22")]
		public sealed override void OnParentConnected(int i)
		{
		}

		[Token(Token = "0x6000B84")]
		[Address(RVA = "0xC1F764", Offset = "0xC1F764", VA = "0xC1F764", Slot = "24")]
		public sealed override void OnChildConnected(int i)
		{
		}

		[Token(Token = "0x6000B85")]
		[Address(RVA = "0xC1F768", Offset = "0xC1F768", VA = "0xC1F768", Slot = "23")]
		public sealed override void OnParentDisconnected(int i)
		{
		}

		[Token(Token = "0x6000B86")]
		[Address(RVA = "0xC1F76C", Offset = "0xC1F76C", VA = "0xC1F76C", Slot = "25")]
		public sealed override void OnChildDisconnected(int i)
		{
		}

		[Token(Token = "0x6000B87")]
		[Address(RVA = "0xC1F770", Offset = "0xC1F770", VA = "0xC1F770", Slot = "35")]
		public virtual void OnPortConnected(Port port, Port otherPort)
		{
		}

		[Token(Token = "0x6000B88")]
		[Address(RVA = "0xC1F8C4", Offset = "0xC1F8C4", VA = "0xC1F8C4", Slot = "36")]
		public virtual void OnPortDisconnected(Port port, Port otherPort)
		{
		}

		[Token(Token = "0x6000B89")]
		[Address(RVA = "0xC1E6B8", Offset = "0xC1E6B8", VA = "0xC1E6B8")]
		public void BindPorts()
		{
		}

		[Token(Token = "0x6000B8A")]
		[Address(RVA = "0xC1F8C8", Offset = "0xC1F8C8", VA = "0xC1F8C8")]
		public void UnBindPorts()
		{
		}

		[Token(Token = "0x6000B8B")]
		[Address(RVA = "0xC1B630", Offset = "0xC1B630", VA = "0xC1B630")]
		public Port GetInputPort(string ID)
		{
			return null;
		}

		[Token(Token = "0x6000B8C")]
		[Address(RVA = "0xC1B4F0", Offset = "0xC1B4F0", VA = "0xC1B4F0")]
		public Port GetOutputPort(string ID)
		{
			return null;
		}

		[Token(Token = "0x6000B8D")]
		[Address(RVA = "0xC1FA10", Offset = "0xC1FA10", VA = "0xC1FA10")]
		public Port[] GetAllPorts()
		{
			return null;
		}

		[Token(Token = "0x6000B8E")]
		[Address(RVA = "0xC1FAC0", Offset = "0xC1FAC0", VA = "0xC1FAC0")]
		public FlowOutput[] GetOutputFlowPorts()
		{
			return null;
		}

		[Token(Token = "0x6000B8F")]
		[Address(RVA = "0xC1FB40", Offset = "0xC1FB40", VA = "0xC1FB40")]
		public ValueOutput[] GetOutputValuePorts()
		{
			return null;
		}

		[Token(Token = "0x6000B90")]
		[Address(RVA = "0xC1FBC0", Offset = "0xC1FBC0", VA = "0xC1FBC0")]
		public FlowInput[] GetInputFlowPorts()
		{
			return null;
		}

		[Token(Token = "0x6000B91")]
		[Address(RVA = "0xC1FC40", Offset = "0xC1FC40", VA = "0xC1FC40")]
		public ValueInput[] GetInputValuePorts()
		{
			return null;
		}

		[Token(Token = "0x6000B92")]
		[Address(RVA = "0xC1FCC0", Offset = "0xC1FCC0", VA = "0xC1FCC0")]
		public Port GetFirstInputOfType(Type type)
		{
			return null;
		}

		[Token(Token = "0x6000B93")]
		[Address(RVA = "0xC1FE68", Offset = "0xC1FE68", VA = "0xC1FE68")]
		public Port GetFirstOutputOfType(Type type)
		{
			return null;
		}

		[Token(Token = "0x6000B94")]
		[Address(RVA = "0xC1E4A4", Offset = "0xC1E4A4", VA = "0xC1E4A4")]
		public void AssignSelfInstancePort()
		{
		}

		[Token(Token = "0x6000B95")]
		[Address(RVA = "0xC1F618", Offset = "0xC1F618", VA = "0xC1F618")]
		public void GatherPorts()
		{
		}

		[Token(Token = "0x6000B96")]
		protected abstract void RegisterPorts();

		[Token(Token = "0x6000B97")]
		[Address(RVA = "0xC20010", Offset = "0xC20010", VA = "0xC20010")]
		private void DeserializeInputPortValues()
		{
		}

		[Token(Token = "0x6000B98")]
		[Address(RVA = "0xC20400", Offset = "0xC20400", VA = "0xC20400")]
		private void ValidateConnections()
		{
		}

		[Token(Token = "0x6000B99")]
		[Address(RVA = "0xC205A8", Offset = "0xC205A8", VA = "0xC205A8")]
		public FlowInput AddFlowInput(string name, string ID, FlowHandler pointer)
		{
			return null;
		}

		[Token(Token = "0x6000B9A")]
		[Address(RVA = "0xC205B8", Offset = "0xC205B8", VA = "0xC205B8")]
		public FlowInput AddFlowInput(string name, FlowHandler pointer, string ID = "")
		{
			return null;
		}

		[Token(Token = "0x6000B9B")]
		[Address(RVA = "0xC2083C", Offset = "0xC2083C", VA = "0xC2083C")]
		public FlowOutput AddFlowOutput(string name, string ID = "")
		{
			return null;
		}

		[Token(Token = "0x6000B9C")]
		public ValueInput<T> AddValueInput<T>(string name, string ID = "")
		{
			return null;
		}

		[Token(Token = "0x6000B9D")]
		public ValueOutput<T> AddValueOutput<T>(string name, string ID, ValueHandler<T> getter)
		{
			return null;
		}

		[Token(Token = "0x6000B9E")]
		public ValueOutput<T> AddValueOutput<T>(string name, ValueHandler<T> getter, string ID = "")
		{
			return null;
		}

		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0xC20980", Offset = "0xC20980", VA = "0xC20980")]
		public ValueInput AddValueInput(string name, string ID, Type type)
		{
			return null;
		}

		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0xC20990", Offset = "0xC20990", VA = "0xC20990")]
		public ValueInput AddValueInput(string name, Type type, string ID = "")
		{
			return null;
		}

		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0xC20AD4", Offset = "0xC20AD4", VA = "0xC20AD4")]
		public ValueOutput AddValueOutput(string name, string ID, Type type, ValueHandlerObject getter)
		{
			return null;
		}

		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0xC20AE8", Offset = "0xC20AE8", VA = "0xC20AE8")]
		public ValueOutput AddValueOutput(string name, Type type, ValueHandlerObject getter, string ID = "")
		{
			return null;
		}

		[Token(Token = "0x6000BA3")]
		[Address(RVA = "0xC2070C", Offset = "0xC2070C", VA = "0xC2070C")]
		private void QualifyPortNameAndID(ref string name, ref string ID, IDictionary dict)
		{
		}

		[Token(Token = "0x6000BA4")]
		[Address(RVA = "0xC20C34", Offset = "0xC20C34", VA = "0xC20C34")]
		private bool CheckReverseIDEquality(Port port, string requestedID)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BA5")]
		[Address(RVA = "0xC20DE0", Offset = "0xC20DE0", VA = "0xC20DE0")]
		public void TryAddReflectionBasedRegistrationForObject(object instance)
		{
		}

		[Token(Token = "0x6000BA6")]
		[Address(RVA = "0xC20FE0", Offset = "0xC20FE0", VA = "0xC20FE0")]
		public FlowInput TryAddMethodFlowInput(MethodInfo method, object instance)
		{
			return null;
		}

		[Token(Token = "0x6000BA7")]
		[Address(RVA = "0xC2172C", Offset = "0xC2172C", VA = "0xC2172C")]
		public FlowOutput TryAddFieldDelegateFlowOutput(FieldInfo field, object instance)
		{
			return null;
		}

		[Token(Token = "0x6000BA8")]
		[Address(RVA = "0xC218B4", Offset = "0xC218B4", VA = "0xC218B4")]
		public ValueInput TryAddFieldDelegateValueInput(FieldInfo field, object instance)
		{
			return null;
		}

		[Token(Token = "0x6000BA9")]
		[Address(RVA = "0xC21218", Offset = "0xC21218", VA = "0xC21218")]
		public ValueOutput TryAddPropertyValueOutput(PropertyInfo prop, object instance)
		{
			return null;
		}

		[Token(Token = "0x6000BAA")]
		[Address(RVA = "0xC21E7C", Offset = "0xC21E7C", VA = "0xC21E7C")]
		public FlowNode ReplaceWith(Type t)
		{
			return null;
		}

		[Token(Token = "0x6000BAB")]
		[Address(RVA = "0xC22230", Offset = "0xC22230", VA = "0xC22230", Slot = "38")]
		public virtual Type GetNodeWildDefinitionType()
		{
			return null;
		}

		[Token(Token = "0x6000BAC")]
		[Address(RVA = "0xC1F7E4", Offset = "0xC1F7E4", VA = "0xC1F7E4")]
		private void TryHandleWildPortConnection(Type currentType, Type targetType)
		{
		}

		[Token(Token = "0x6000BAD")]
		[Address(RVA = "0xC222AC", Offset = "0xC222AC", VA = "0xC222AC")]
		public static Type TryGetNewGenericTypeForWild(Type wildType, Type currentType, Type targetType, Type content, Type context)
		{
			return null;
		}

		[Token(Token = "0x6000BAE")]
		[Address(RVA = "0xC22774", Offset = "0xC22774", VA = "0xC22774")]
		public static MethodInfo TryGetNewGenericMethodForWild(Type wildType, Type currentType, Type targetType, MethodInfo content)
		{
			return null;
		}

		[Token(Token = "0x6000BAF")]
		[Address(RVA = "0xC22AB4", Offset = "0xC22AB4", VA = "0xC22AB4")]
		protected FlowNode()
		{
		}
	}
	[Token(Token = "0x20001AD")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x96E318", Offset = "0x96E318")]
	public class FlowScript : FlowScriptBase
	{
		[Token(Token = "0x6000BB0")]
		[Address(RVA = "0xDF4780", Offset = "0xDF4780", VA = "0xDF4780")]
		public FlowScript()
		{
		}
	}
	[Token(Token = "0x20001AE")]
	public abstract class FlowScriptBase : FlowGraph
	{
		[Token(Token = "0x6000BB1")]
		[Address(RVA = "0xDF4788", Offset = "0xDF4788", VA = "0xDF4788")]
		protected FlowScriptBase()
		{
		}
	}
	[Token(Token = "0x20001AF")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x96E35C", Offset = "0x96E35C")]
	public class FlowScriptController : GraphOwner<FlowScript>
	{
		[Token(Token = "0x6000BB2")]
		[Address(RVA = "0xDF4790", Offset = "0xDF4790", VA = "0xDF4790")]
		public object CallFunction(string name, params object[] args)
		{
			return null;
		}

		[Token(Token = "0x6000BB3")]
		[Address(RVA = "0xDF4810", Offset = "0xDF4810", VA = "0xDF4810")]
		public void CallFunctionAsync(string name, Action<object> callback, params object[] args)
		{
		}

		[Token(Token = "0x6000BB4")]
		[Address(RVA = "0xDF48A0", Offset = "0xDF48A0", VA = "0xDF48A0")]
		public FlowScriptController()
		{
		}
	}
	[Token(Token = "0x20001B0")]
	public interface IEditorMenuCallbackReceiver
	{
	}
	[Token(Token = "0x20001B1")]
	[SpoofAOT]
	public abstract class Port
	{
		[Token(Token = "0x40009AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97EF54", Offset = "0x97EF54")]
		private FlowNode <parent>k__BackingField;

		[Token(Token = "0x40009AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97EF64", Offset = "0x97EF64")]
		private string <ID>k__BackingField;

		[Token(Token = "0x40009AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97EF74", Offset = "0x97EF74")]
		private string <name>k__BackingField;

		[Token(Token = "0x40009B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97EF84", Offset = "0x97EF84")]
		private int <connections>k__BackingField;

		[Token(Token = "0x1700010A")]
		public FlowNode parent
		{
			[Token(Token = "0x6000BB7")]
			[Address(RVA = "0xCA59F0", Offset = "0xCA59F0", VA = "0xCA59F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985974", Offset = "0x985974")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BB8")]
			[Address(RVA = "0xCA59D8", Offset = "0xCA59D8", VA = "0xCA59D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985984", Offset = "0x985984")]
			private set
			{
			}
		}

		[Token(Token = "0x1700010B")]
		public string ID
		{
			[Token(Token = "0x6000BB9")]
			[Address(RVA = "0xCA59F8", Offset = "0xCA59F8", VA = "0xCA59F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985994", Offset = "0x985994")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BBA")]
			[Address(RVA = "0xCA59E8", Offset = "0xCA59E8", VA = "0xCA59E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9859A4", Offset = "0x9859A4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700010C")]
		public string name
		{
			[Token(Token = "0x6000BBB")]
			[Address(RVA = "0xCA5A00", Offset = "0xCA5A00", VA = "0xCA5A00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9859B4", Offset = "0x9859B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BBC")]
			[Address(RVA = "0xCA59E0", Offset = "0xCA59E0", VA = "0xCA59E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9859C4", Offset = "0x9859C4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700010D")]
		public int connections
		{
			[Token(Token = "0x6000BBD")]
			[Address(RVA = "0xCA5A08", Offset = "0xCA5A08", VA = "0xCA5A08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9859D4", Offset = "0x9859D4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000BBE")]
			[Address(RVA = "0xCA5A10", Offset = "0xCA5A10", VA = "0xCA5A10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9859E4", Offset = "0x9859E4")]
			set
			{
			}
		}

		[Token(Token = "0x1700010E")]
		public bool isConnected
		{
			[Token(Token = "0x6000BBF")]
			[Address(RVA = "0xCA5A18", Offset = "0xCA5A18", VA = "0xCA5A18")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700010F")]
		public abstract Type type
		{
			[Token(Token = "0x6000BC0")]
			get;
		}

		[Token(Token = "0x6000BB5")]
		[Address(RVA = "0xCA5990", Offset = "0xCA5990", VA = "0xCA5990")]
		public Port()
		{
		}

		[Token(Token = "0x6000BB6")]
		[Address(RVA = "0xCA5998", Offset = "0xCA5998", VA = "0xCA5998")]
		public Port(FlowNode parent, string name, string ID)
		{
		}

		[Token(Token = "0x6000BC1")]
		[Address(RVA = "0xCA5A28", Offset = "0xCA5A28", VA = "0xCA5A28")]
		public bool CanAcceptConnections()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BC2")]
		[Address(RVA = "0xCA5B48", Offset = "0xCA5B48", VA = "0xCA5B48")]
		public BinderConnection[] GetPortConnections()
		{
			return null;
		}

		[Token(Token = "0x6000BC3")]
		[Address(RVA = "0xCA5D24", Offset = "0xCA5D24", VA = "0xCA5D24")]
		public BinderConnection GetFirstInputConnection()
		{
			return null;
		}

		[Token(Token = "0x6000BC4")]
		[Address(RVA = "0xCA5DE8", Offset = "0xCA5DE8", VA = "0xCA5DE8")]
		public BinderConnection GetFirstOutputConnection()
		{
			return null;
		}

		[Token(Token = "0x6000BC5")]
		[Address(RVA = "0xCA5EAC", Offset = "0xCA5EAC", VA = "0xCA5EAC")]
		public bool IsFlowPort()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BC6")]
		[Address(RVA = "0xCA5F60", Offset = "0xCA5F60", VA = "0xCA5F60")]
		public bool IsValuePort()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BC7")]
		[Address(RVA = "0xCA5C70", Offset = "0xCA5C70", VA = "0xCA5C70")]
		public bool IsInputPort()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BC8")]
		[Address(RVA = "0xCA6014", Offset = "0xCA6014", VA = "0xCA6014")]
		public bool IsOutputPort()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BC9")]
		[Address(RVA = "0xCA60C8", Offset = "0xCA60C8", VA = "0xCA60C8")]
		public bool IsUnityObject()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BCA")]
		[Address(RVA = "0xCA6188", Offset = "0xCA6188", VA = "0xCA6188")]
		public bool IsUnitySceneObject()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0xCA62C0", Offset = "0xCA62C0", VA = "0xCA62C0")]
		public bool IsDelegate()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BCC")]
		[Address(RVA = "0xCA6380", Offset = "0xCA6380", VA = "0xCA6380")]
		public bool IsEnumerableCollection()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BCD")]
		[Address(RVA = "0xCA6400", Offset = "0xCA6400", VA = "0xCA6400")]
		public bool IsWild()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BCE")]
		[Address(RVA = "0xCA649C", Offset = "0xCA649C", VA = "0xCA649C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000BCF")]
		[Address(RVA = "0xCA6508", Offset = "0xCA6508", VA = "0xCA6508")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9859F4", Offset = "0x9859F4")]
		private bool <GetPortConnections>b__23_0(BinderConnection c)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BD0")]
		[Address(RVA = "0xCA6548", Offset = "0xCA6548", VA = "0xCA6548")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985A04", Offset = "0x985A04")]
		private bool <GetPortConnections>b__23_1(BinderConnection c)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BD1")]
		[Address(RVA = "0xCA6588", Offset = "0xCA6588", VA = "0xCA6588")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985A14", Offset = "0x985A14")]
		private bool <GetFirstInputConnection>b__24_0(BinderConnection c)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BD2")]
		[Address(RVA = "0xCA65C8", Offset = "0xCA65C8", VA = "0xCA65C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985A24", Offset = "0x985A24")]
		private bool <GetFirstOutputConnection>b__25_0(BinderConnection c)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001B2")]
	public class FlowInput : Port
	{
		[Token(Token = "0x40009B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97EF94", Offset = "0x97EF94")]
		private FlowHandler <pointer>k__BackingField;

		[Token(Token = "0x17000110")]
		public FlowHandler pointer
		{
			[Token(Token = "0x6000BD4")]
			[Address(RVA = "0xC1F254", Offset = "0xC1F254", VA = "0xC1F254")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985A34", Offset = "0x985A34")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BD5")]
			[Address(RVA = "0xC1F24C", Offset = "0xC1F24C", VA = "0xC1F24C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985A44", Offset = "0x985A44")]
			private set
			{
			}
		}

		[Token(Token = "0x17000111")]
		public override Type type
		{
			[Token(Token = "0x6000BD6")]
			[Address(RVA = "0xC1F25C", Offset = "0xC1F25C", VA = "0xC1F25C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BD3")]
		[Address(RVA = "0xC1F220", Offset = "0xC1F220", VA = "0xC1F220")]
		public FlowInput(FlowNode parent, string name, string ID, FlowHandler pointer)
		{
		}
	}
	[Token(Token = "0x20001B3")]
	public class FlowOutput : Port
	{
		[Token(Token = "0x40009B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97EFA4", Offset = "0x97EFA4")]
		private FlowHandler <pointer>k__BackingField;

		[Token(Token = "0x17000112")]
		public FlowHandler pointer
		{
			[Token(Token = "0x6000BD8")]
			[Address(RVA = "0xDF3DB8", Offset = "0xDF3DB8", VA = "0xDF3DB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985A54", Offset = "0x985A54")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BD9")]
			[Address(RVA = "0xDF3DC0", Offset = "0xDF3DC0", VA = "0xDF3DC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985A64", Offset = "0x985A64")]
			private set
			{
			}
		}

		[Token(Token = "0x17000113")]
		public override Type type
		{
			[Token(Token = "0x6000BDA")]
			[Address(RVA = "0xDF3DC8", Offset = "0xDF3DC8", VA = "0xDF3DC8", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BD7")]
		[Address(RVA = "0xDF3DB0", Offset = "0xDF3DB0", VA = "0xDF3DB0")]
		public FlowOutput(FlowNode parent, string name, string ID)
		{
		}

		[Token(Token = "0x6000BDB")]
		[Address(RVA = "0xDF3E38", Offset = "0xDF3E38", VA = "0xDF3E38")]
		public void Call(Flow f)
		{
		}

		[Token(Token = "0x6000BDC")]
		[Address(RVA = "0xDF3F04", Offset = "0xDF3F04", VA = "0xDF3F04")]
		public void BindTo(FlowInput target)
		{
		}

		[Token(Token = "0x6000BDD")]
		[Address(RVA = "0xDF3F40", Offset = "0xDF3F40", VA = "0xDF3F40")]
		public void Append(FlowHandler action)
		{
		}

		[Token(Token = "0x6000BDE")]
		[Address(RVA = "0xDF4004", Offset = "0xDF4004", VA = "0xDF4004")]
		public void UnBind()
		{
		}
	}
	[Token(Token = "0x20001B4")]
	public abstract class ValueInput : Port
	{
		[Token(Token = "0x40009B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97EFB4", Offset = "0x97EFB4")]
		private bool <skipSelfInstanceAssignment>k__BackingField;

		[Token(Token = "0x17000114")]
		public object value
		{
			[Token(Token = "0x6000BE3")]
			[Address(RVA = "0xC926B4", Offset = "0xC926B4", VA = "0xC926B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000115")]
		public bool skipSelfInstanceAssignment
		{
			[Token(Token = "0x6000BE6")]
			[Address(RVA = "0xCA704C", Offset = "0xCA704C", VA = "0xCA704C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985A74", Offset = "0x985A74")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000BE7")]
			[Address(RVA = "0xCA7040", Offset = "0xCA7040", VA = "0xCA7040")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985A84", Offset = "0x985A84")]
			set
			{
			}
		}

		[Token(Token = "0x17000116")]
		public abstract object defaultValue
		{
			[Token(Token = "0x6000BE8")]
			get;
			[Token(Token = "0x6000BE9")]
			set;
		}

		[Token(Token = "0x17000117")]
		public abstract object serializedValue
		{
			[Token(Token = "0x6000BEA")]
			get;
			[Token(Token = "0x6000BEB")]
			set;
		}

		[Token(Token = "0x17000118")]
		public abstract bool isDefaultValue
		{
			[Token(Token = "0x6000BEC")]
			get;
		}

		[Token(Token = "0x17000119")]
		public abstract override Type type
		{
			[Token(Token = "0x6000BED")]
			get;
		}

		[Token(Token = "0x6000BDF")]
		[Address(RVA = "0xCA6CE4", Offset = "0xCA6CE4", VA = "0xCA6CE4")]
		public ValueInput()
		{
		}

		[Token(Token = "0x6000BE0")]
		[Address(RVA = "0xCA6CEC", Offset = "0xCA6CEC", VA = "0xCA6CEC")]
		public ValueInput(FlowNode parent, string name, string ID)
		{
		}

		[Token(Token = "0x6000BE1")]
		public static ValueInput<T> CreateInstance<T>(FlowNode parent, string name, string ID)
		{
			return null;
		}

		[Token(Token = "0x6000BE2")]
		[Address(RVA = "0xCA6D2C", Offset = "0xCA6D2C", VA = "0xCA6D2C")]
		public static ValueInput CreateInstance(Type t, FlowNode parent, string name, string ID)
		{
			return null;
		}

		[Token(Token = "0x6000BE4")]
		[Address(RVA = "0xCA6FF0", Offset = "0xCA6FF0", VA = "0xCA6FF0")]
		public ValueInput SetDefaultAndSerializedValue(object v)
		{
			return null;
		}

		[Token(Token = "0x6000BE5")]
		[Address(RVA = "0xCA7034", Offset = "0xCA7034", VA = "0xCA7034")]
		public ValueInput SkipSelfInstanceAssignment(bool skip)
		{
			return null;
		}

		[Token(Token = "0x6000BEE")]
		public abstract void BindTo(ValueOutput target);

		[Token(Token = "0x6000BEF")]
		public abstract void UnBind();

		[Token(Token = "0x6000BF0")]
		public abstract object GetObjectValue();
	}
	[Token(Token = "0x20001B5")]
	public class ValueInput<T> : ValueInput
	{
		[Token(Token = "0x40009B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97EFC4", Offset = "0x97EFC4")]
		private ValueHandler<T> <getter>k__BackingField;

		[Token(Token = "0x40009B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T _value;

		[Token(Token = "0x40009B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T _defaultValue;

		[Token(Token = "0x1700011A")]
		public ValueHandler<T> getter
		{
			[Token(Token = "0x6000BF3")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985A94", Offset = "0x985A94")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985AA4", Offset = "0x985AA4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700011B")]
		public new T value
		{
			[Token(Token = "0x6000BF5")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x1700011C")]
		public override object defaultValue
		{
			[Token(Token = "0x6000BF6")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BF7")]
			set
			{
			}
		}

		[Token(Token = "0x1700011D")]
		public override object serializedValue
		{
			[Token(Token = "0x6000BF8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BF9")]
			set
			{
			}
		}

		[Token(Token = "0x1700011E")]
		public override bool isDefaultValue
		{
			[Token(Token = "0x6000BFA")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700011F")]
		public override Type type
		{
			[Token(Token = "0x6000BFB")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BF1")]
		public ValueInput()
		{
		}

		[Token(Token = "0x6000BF2")]
		public ValueInput(FlowNode parent, string name, string ID)
		{
		}

		[Token(Token = "0x6000BFC")]
		public ValueInput<T> SetDefaultAndSerializedValue(T v)
		{
			return null;
		}

		[Token(Token = "0x6000BFD")]
		public T GetValue()
		{
			return (T)null;
		}

		[Token(Token = "0x6000BFE")]
		public override object GetObjectValue()
		{
			return null;
		}

		[Token(Token = "0x6000BFF")]
		public override void BindTo(ValueOutput source)
		{
		}

		[Token(Token = "0x6000C00")]
		public void BindTo(ValueHandler<T> getter)
		{
		}

		[Token(Token = "0x6000C01")]
		public override void UnBind()
		{
		}

		[Token(Token = "0x6000C02")]
		public static explicit operator T(ValueInput<T> port)
		{
			return (T)null;
		}
	}
	[Token(Token = "0x20001B6")]
	public abstract class ValueOutput : Port
	{
		[Token(Token = "0x6000C03")]
		[Address(RVA = "0xCA7054", Offset = "0xCA7054", VA = "0xCA7054")]
		public ValueOutput()
		{
		}

		[Token(Token = "0x6000C04")]
		[Address(RVA = "0xCA705C", Offset = "0xCA705C", VA = "0xCA705C")]
		public ValueOutput(FlowNode parent, string name, string ID)
		{
		}

		[Token(Token = "0x6000C05")]
		public static ValueOutput<T> CreateInstance<T>(FlowNode parent, string name, string ID, ValueHandler<T> getter)
		{
			return null;
		}

		[Token(Token = "0x6000C06")]
		[Address(RVA = "0xCA709C", Offset = "0xCA709C", VA = "0xCA709C")]
		public static ValueOutput CreateInstance(Type t, FlowNode parent, string name, string ID, ValueHandlerObject getter)
		{
			return null;
		}

		[Token(Token = "0x6000C07")]
		public abstract object GetObjectValue();
	}
	[Token(Token = "0x20001B7")]
	public class ValueOutput<T> : ValueOutput
	{
		[Token(Token = "0x20006E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97913C", Offset = "0x97913C")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4001E53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueHandlerObject getter;

			[Token(Token = "0x60024A8")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x60024A9")]
			internal T <.ctor>b__0()
			{
				return (T)null;
			}
		}

		[Token(Token = "0x40009B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97EFD4", Offset = "0x97EFD4")]
		private ValueHandler<T> <getter>k__BackingField;

		[Token(Token = "0x17000120")]
		public ValueHandler<T> getter
		{
			[Token(Token = "0x6000C0B")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985AB4", Offset = "0x985AB4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985AC4", Offset = "0x985AC4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000121")]
		public override Type type
		{
			[Token(Token = "0x6000C0E")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C08")]
		public ValueOutput()
		{
		}

		[Token(Token = "0x6000C09")]
		public ValueOutput(FlowNode parent, string name, string ID, ValueHandler<T> getter)
		{
		}

		[Token(Token = "0x6000C0A")]
		public ValueOutput(FlowNode parent, string name, string ID, ValueHandlerObject getter)
		{
		}

		[Token(Token = "0x6000C0D")]
		public override object GetObjectValue()
		{
			return null;
		}

		[Token(Token = "0x6000C0F")]
		public static explicit operator T(ValueOutput<T> port)
		{
			return (T)null;
		}
	}
	[Token(Token = "0x20001B8")]
	[SpoofAOT]
	public static class TypeConverter
	{
		[Token(Token = "0x20006E9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97914C", Offset = "0x97914C")]
		private sealed class <>c__DisplayClass0_0<T>
		{
			[Token(Token = "0x4001E54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueHandler<object> func;

			[Token(Token = "0x4001E55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Type targetType;

			[Token(Token = "0x4001E56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public UnaryExpression exp;

			[Token(Token = "0x60024AA")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x60024AB")]
			internal T <GetConverterFuncFromTo>b__0()
			{
				return (T)null;
			}

			[Token(Token = "0x60024AC")]
			internal T <GetConverterFuncFromTo>b__1()
			{
				return (T)null;
			}

			[Token(Token = "0x60024AD")]
			internal T <GetConverterFuncFromTo>b__2()
			{
				return (T)null;
			}

			[Token(Token = "0x60024AE")]
			internal T <GetConverterFuncFromTo>b__3()
			{
				return (T)null;
			}

			[Token(Token = "0x60024AF")]
			internal T <GetConverterFuncFromTo>b__4()
			{
				return (T)null;
			}

			[Token(Token = "0x60024B0")]
			internal T <GetConverterFuncFromTo>b__5()
			{
				return (T)null;
			}

			[Token(Token = "0x60024B1")]
			internal T <GetConverterFuncFromTo>b__6()
			{
				return (T)null;
			}

			[Token(Token = "0x60024B2")]
			internal T <GetConverterFuncFromTo>b__7()
			{
				return (T)null;
			}

			[Token(Token = "0x60024B3")]
			internal T <GetConverterFuncFromTo>b__8()
			{
				return (T)null;
			}

			[Token(Token = "0x60024B4")]
			internal T <GetConverterFuncFromTo>b__9()
			{
				return (T)null;
			}

			[Token(Token = "0x60024B5")]
			internal T <GetConverterFuncFromTo>b__10()
			{
				return (T)null;
			}

			[Token(Token = "0x60024B6")]
			internal T <GetConverterFuncFromTo>b__11()
			{
				return (T)null;
			}

			[Token(Token = "0x60024B7")]
			internal T <GetConverterFuncFromTo>b__12()
			{
				return (T)null;
			}

			[Token(Token = "0x60024B8")]
			internal T <GetConverterFuncFromTo>b__13()
			{
				return (T)null;
			}

			[Token(Token = "0x60024B9")]
			internal T <GetConverterFuncFromTo>b__14()
			{
				return (T)null;
			}
		}

		[Token(Token = "0x20006EA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97915C", Offset = "0x97915C")]
		private sealed class <>c__DisplayClass0_1<T>
		{
			[Token(Token = "0x4001E57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Type listType;

			[Token(Token = "0x4001E58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public <>c__DisplayClass0_0<T> CS$<>8__locals1;

			[Token(Token = "0x60024BA")]
			public <>c__DisplayClass0_1()
			{
			}

			[Token(Token = "0x60024BB")]
			internal T <GetConverterFuncFromTo>b__15()
			{
				return (T)null;
			}
		}

		[Token(Token = "0x20006EB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97916C", Offset = "0x97916C")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4001E59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public object obj;

			[Token(Token = "0x60024BC")]
			[Address(RVA = "0xCA6878", Offset = "0xCA6878", VA = "0xCA6878")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x60024BD")]
			[Address(RVA = "0xCA6880", Offset = "0xCA6880", VA = "0xCA6880")]
			internal object <QuickConvert>b__0()
			{
				return null;
			}
		}

		[Token(Token = "0x6000C10")]
		public static ValueHandler<T> GetConverterFuncFromTo<T>(Type sourceType, Type targetType, ValueHandler<object> func)
		{
			return null;
		}

		[Token(Token = "0x6000C11")]
		[Address(RVA = "0xCA6608", Offset = "0xCA6608", VA = "0xCA6608")]
		public static bool HasConvertion(Type sourceType, Type targetType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C12")]
		public static T QuickConvert<T>(object obj)
		{
			return (T)null;
		}

		[Token(Token = "0x6000C13")]
		[Address(RVA = "0xCA66F8", Offset = "0xCA66F8", VA = "0xCA66F8")]
		public static object QuickConvert(object obj, Type type)
		{
			return null;
		}
	}
	[Token(Token = "0x20001B9")]
	public class Wild
	{
		[Token(Token = "0x6000C14")]
		[Address(RVA = "0xCA73AC", Offset = "0xCA73AC", VA = "0xCA73AC")]
		public Wild()
		{
		}
	}
}
namespace FlowCanvas.Nodes
{
	[Token(Token = "0x20001BA")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x96E3B4", Offset = "0x96E3B4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x96E3B4", Offset = "0x96E3B4")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x96E3B4", Offset = "0x96E3B4")]
	public abstract class CodeEventBase : EventNode<Transform>
	{
		[Token(Token = "0x40009B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		protected string eventName;

		[Token(Token = "0x40009B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		protected Type targetType;

		[Token(Token = "0x40009BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected UnityEngine.Component targetComponent;

		[Token(Token = "0x17000122")]
		protected System.Reflection.EventInfo eventInfo
		{
			[Token(Token = "0x6000C15")]
			[Address(RVA = "0xDFB4F0", Offset = "0xDFB4F0", VA = "0xDFB4F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C16")]
		[Address(RVA = "0xDFB7C4", Offset = "0xDFB7C4", VA = "0xDFB7C4")]
		public void SetEvent(System.Reflection.EventInfo e, [Optional] object instace)
		{
		}

		[Token(Token = "0x6000C17")]
		[Address(RVA = "0xDFB338", Offset = "0xDFB338", VA = "0xDFB338", Slot = "26")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6000C18")]
		[Address(RVA = "0xDFB774", Offset = "0xDFB774", VA = "0xDFB774")]
		protected CodeEventBase()
		{
		}
	}
	[Token(Token = "0x20001BB")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x96E424", Offset = "0x96E424")]
	public class CodeEvent : CodeEventBase
	{
		[Token(Token = "0x40009BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private FlowOutput o;

		[Token(Token = "0x40009BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Action pointer;

		[Token(Token = "0x6000C19")]
		[Address(RVA = "0xDFB284", Offset = "0xDFB284", VA = "0xDFB284", Slot = "26")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0xDFB5A8", Offset = "0xDFB5A8", VA = "0xDFB5A8", Slot = "27")]
		public override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6000C1B")]
		[Address(RVA = "0xDFB6A4", Offset = "0xDFB6A4", VA = "0xDFB6A4", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0xDFB714", Offset = "0xDFB714", VA = "0xDFB714")]
		private void Call()
		{
		}

		[Token(Token = "0x6000C1D")]
		[Address(RVA = "0xDFB770", Offset = "0xDFB770", VA = "0xDFB770")]
		public CodeEvent()
		{
		}
	}
	[Token(Token = "0x20001BC")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x96E434", Offset = "0x96E434")]
	public class CodeEvent<T> : CodeEventBase
	{
		[Token(Token = "0x40009BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private FlowOutput o;

		[Token(Token = "0x40009BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Action<T> pointer;

		[Token(Token = "0x40009BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T eventValue;

		[Token(Token = "0x6000C1E")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6000C1F")]
		public override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6000C20")]
		private void Call(T eventValue)
		{
		}

		[Token(Token = "0x6000C21")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000C22")]
		public CodeEvent()
		{
		}

		[Token(Token = "0x6000C23")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985AD4", Offset = "0x985AD4")]
		private T <RegisterPorts>b__6_0()
		{
			return (T)null;
		}
	}
	[Token(Token = "0x20001BD")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x96E444", Offset = "0x96E444")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x96E444", Offset = "0x96E444")]
	public class NewGameObject : CallableFunctionNode<GameObject, string, Vector3, Quaternion>
	{
		[Token(Token = "0x6000C24")]
		[Address(RVA = "0xE0C5FC", Offset = "0xE0C5FC", VA = "0xE0C5FC", Slot = "12")]
		public override GameObject Invoke(string name, Vector3 position, Quaternion rotation)
		{
			return null;
		}

		[Token(Token = "0x6000C25")]
		[Address(RVA = "0xE0C718", Offset = "0xE0C718", VA = "0xE0C718")]
		public NewGameObject()
		{
		}
	}
	[Token(Token = "0x20001BE")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x96E490", Offset = "0x96E490")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x96E490", Offset = "0x96E490")]
	public class NewVector2 : PureFunctionNode<Vector2, float, float>
	{
		[Token(Token = "0x6000C26")]
		[Address(RVA = "0xE0C8CC", Offset = "0xE0C8CC", VA = "0xE0C8CC", Slot = "12")]
		public override Vector2 Invoke(float x, float y)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000C27")]
		[Address(RVA = "0xE0C8F8", Offset = "0xE0C8F8", VA = "0xE0C8F8")]
		public NewVector2()
		{
		}
	}
	[Token(Token = "0x20001BF")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x96E4DC", Offset = "0x96E4DC")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x96E4DC", Offset = "0x96E4DC")]
	public class NewVector3 : PureFunctionNode<Vector3, float, float, float>
	{
		[Token(Token = "0x6000C28")]
		[Address(RVA = "0xE0C948", Offset = "0xE0C948", VA = "0xE0C948", Slot = "12")]
		public override Vector3 Invoke(float x, float y, float z)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C29")]
		[Address(RVA = "0xE0C97C", Offset = "0xE0C97C", VA = "0xE0C97C")]
		public NewVector3()
		{
		}
	}
	[Token(Token = "0x20001C0")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x96E528", Offset = "0x96E528")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x96E528", Offset = "0x96E528")]
	public class NewVector4 : PureFunctionNode<Vector4, float, float, float, float>
	{
		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0xE0C9CC", Offset = "0xE0C9CC", VA = "0xE0C9CC", Slot = "12")]
		public override Vector4 Invoke(float x, float y, float z, float w)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6000C2B")]
		[Address(RVA = "0xE0C9FC", Offset = "0xE0C9FC", VA = "0xE0C9FC")]
		public NewVector4()
		{
		}
	}
	[Token(Token = "0x20001C1")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x96E574", Offset = "0x96E574")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x96E574", Offset = "0x96E574")]
	public class NewQuaternion : PureFunctionNode<Quaternion, float, float, float, float>
	{
		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0xE0C768", Offset = "0xE0C768", VA = "0xE0C768", Slot = "12")]
		public override Quaternion Invoke(float x, float y, float z, float w)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0xE0C798", Offset = "0xE0C798", VA = "0xE0C798")]
		public NewQuaternion()
		{
		}
	}
	[Token(Token = "0x20001C2")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x96E5C0", Offset = "0x96E5C0")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x96E5C0", Offset = "0x96E5C0")]
	public class NewColor : PureFunctionNode<Color, float, float, float, float>
	{
		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0xE0C57C", Offset = "0xE0C57C", VA = "0xE0C57C", Slot = "12")]
		public override Color Invoke(float r, float g, float b, float a = 1f)
		{
			return default(Color);
		}

		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0xE0C5AC", Offset = "0xE0C5AC", VA = "0xE0C5AC")]
		public NewColor()
		{
		}
	}
	[Token(Token = "0x20001C3")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x96E60C", Offset = "0x96E60C")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x96E60C", Offset = "0x96E60C")]
	public class NewBounds : PureFunctionNode<Bounds, Vector3, Vector3>
	{
		[Token(Token = "0x6000C30")]
		[Address(RVA = "0xE0C518", Offset = "0xE0C518", VA = "0xE0C518", Slot = "12")]
		public override Bounds Invoke(Vector3 center, Vector3 size)
		{
			return default(Bounds);
		}

		[Token(Token = "0x6000C31")]
		[Address(RVA = "0xE0C52C", Offset = "0xE0C52C", VA = "0xE0C52C")]
		public NewBounds()
		{
		}
	}
	[Token(Token = "0x20001C4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x96E658", Offset = "0x96E658")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x96E658", Offset = "0x96E658")]
	public class NewRect : PureFunctionNode<Rect, float, float, float, float>
	{
		[Token(Token = "0x6000C32")]
		[Address(RVA = "0xE0C84C", Offset = "0xE0C84C", VA = "0xE0C84C", Slot = "12")]
		public override Rect Invoke(float left, float top, float width, float height)
		{
			return default(Rect);
		}

		[Token(Token = "0x6000C33")]
		[Address(RVA = "0xE0C87C", Offset = "0xE0C87C", VA = "0xE0C87C")]
		public NewRect()
		{
		}
	}
	[Token(Token = "0x20001C5")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x96E6A4", Offset = "0x96E6A4")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x96E6A4", Offset = "0x96E6A4")]
	public class NewRay : PureFunctionNode<Ray, Vector3, Vector3>
	{
		[Token(Token = "0x6000C34")]
		[Address(RVA = "0xE0C7E8", Offset = "0xE0C7E8", VA = "0xE0C7E8", Slot = "12")]
		public override Ray Invoke(Vector3 origin, Vector3 direction)
		{
			return default(Ray);
		}

		[Token(Token = "0x6000C35")]
		[Address(RVA = "0xE0C7FC", Offset = "0xE0C7FC", VA = "0xE0C7FC")]
		public NewRay()
		{
		}
	}
	[Token(Token = "0x20001C6")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x96E6F0", Offset = "0x96E6F0")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x96E6F0", Offset = "0x96E6F0")]
	public class ConvertTo<T> : PureFunctionNode<T, IConvertible> where T : IConvertible
	{
		[Token(Token = "0x6000C36")]
		public override T Invoke(IConvertible obj)
		{
			return (T)null;
		}

		[Token(Token = "0x6000C37")]
		public ConvertTo()
		{
		}
	}
	[Token(Token = "0x20001C7")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x96E73C", Offset = "0x96E73C")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x96E73C", Offset = "0x96E73C")]
	public class CastTo<T> : PureFunctionNode<T, object>
	{
		[Token(Token = "0x6000C38")]
		public override T Invoke(object obj)
		{
			return (T)null;
		}

		[Token(Token = "0x6000C39")]
		public CastTo()
		{
		}
	}
	[Token(Token = "0x20001C8")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x96E788", Offset = "0x96E788")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x96E788", Offset = "0x96E788")]
	public class ToArray<T> : PureFunctionNode<T[], IList<T>>
	{
		[Token(Token = "0x6000C3A")]
		public override T[] Invoke(IList<T> list)
		{
			return null;
		}

		[Token(Token = "0x6000C3B")]
		public ToArray()
		{
		}
	}
	[Token(Token = "0x20001C9")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x96E7D4", Offset = "0x96E7D4")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x96E7D4", Offset = "0x96E7D4")]
	public class ToList<T> : PureFunctionNode<List<T>, IList<T>>
	{
		[Token(Token = "0x6000C3C")]
		public override List<T> Invoke(IList<T> list)
		{
			return null;
		}

		[Token(Token = "0x6000C3D")]
		public ToList()
		{
		}
	}
	[Token(Token = "0x20001CA")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x96E820", Offset = "0x96E820")]
	public class ExtractVector2 : ExtractorNode<Vector2, float, float>
	{
		[Token(Token = "0x6000C3E")]
		[Address(RVA = "0xE01B80", Offset = "0xE01B80", VA = "0xE01B80", Slot = "12")]
		public override void Invoke(Vector2 vector, out float x, out float y)
		{
		}

		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0xE01B8C", Offset = "0xE01B8C", VA = "0xE01B8C")]
		public ExtractVector2()
		{
		}
	}
	[Token(Token = "0x20001CB")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x96E830", Offset = "0x96E830")]
	public class ExtractVector3 : ExtractorNode<Vector3, float, float, float>
	{
		[Token(Token = "0x6000C40")]
		[Address(RVA = "0xE01BDC", Offset = "0xE01BDC", VA = "0xE01BDC", Slot = "12")]
		public override void Invoke(Vector3 vector, out float x, out float y, out float z)
		{
		}

		[Token(Token = "0x6000C41")]
		[Address(RVA = "0xE01BEC", Offset = "0xE01BEC", VA = "0xE01BEC")]
		public ExtractVector3()
		{
		}
	}
	[Token(Token = "0x20001CC")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x96E840", Offset = "0x96E840")]
	public class ExtractVector4 : ExtractorNode<Vector4, float, float, float, float>
	{
		[Token(Token = "0x6000C42")]
		[Address(RVA = "0xE01C3C", Offset = "0xE01C3C", VA = "0xE01C3C", Slot = "12")]
		public override void Invoke(Vector4 vector, out float x, out float y, out float z, out float w)
		{
		}

		[Token(Token = "0x6000C43")]
		[Address(RVA = "0xE01C50", Offset = "0xE01C50", VA = "0xE01C50")]
		public ExtractVector4()
		{
		}
	}
	[Token(Token = "0x20001CD")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x96E850", Offset = "0x96E850")]
	public class ExtractQuaternion : ExtractorNode<Quaternion, float, float, float, float, Vector3>
	{
		[Token(Token = "0x6000C44")]
		[Address(RVA = "0xE0162C", Offset = "0xE0162C", VA = "0xE0162C", Slot = "12")]
		public override void Invoke(Quaternion quaternion, out float x, out float y, out float z, out float w, out Vector3 eulerAngles)
		{
		}

		[Token(Token = "0x6000C45")]
		[Address(RVA = "0xE0167C", Offset = "0xE0167C", VA = "0xE0167C")]
		public ExtractQuaternion()
		{
		}
	}
	[Token(Token = "0x20001CE")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x96E860", Offset = "0x96E860")]
	public class ExtractRect : ExtractorNode<Rect, Vector2, float, float, float, float>
	{
		[Token(Token = "0x6000C46")]
		[Address(RVA = "0xE01A94", Offset = "0xE01A94", VA = "0xE01A94", Slot = "12")]
		public override void Invoke(Rect rect, out Vector2 center, out float xMin, out float xMax, out float yMin, out float yMax)
		{
		}

		[Token(Token = "0x6000C47")]
		[Address(RVA = "0xE01B30", Offset = "0xE01B30", VA = "0xE01B30")]
		public ExtractRect()
		{
		}
	}
	[Token(Token = "0x20001CF")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x96E870", Offset = "0x96E870")]
	public class ExtractColor : ExtractorNode<Color, float, float, float, float>
	{
		[Token(Token = "0x6000C48")]
		[Address(RVA = "0xE0135C", Offset = "0xE0135C", VA = "0xE0135C", Slot = "12")]
		public override void Invoke(Color color, out float r, out float g, out float b, out float a)
		{
		}

		[Token(Token = "0x6000C49")]
		[Address(RVA = "0xE01370", Offset = "0xE01370", VA = "0xE01370")]
		public ExtractColor()
		{
		}
	}
	[Token(Token = "0x20001D0")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x96E880", Offset = "0x96E880")]
	public class ExtractRaycastHit : ExtractorNode<RaycastHit, GameObject, float, Vector3, Vector3>
	{
		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0xE01770", Offset = "0xE01770", VA = "0xE01770", Slot = "12")]
		public override void Invoke(RaycastHit hit, out GameObject gameObject, out float distance, out Vector3 normal, out Vector3 point)
		{
		}

		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0xE01880", Offset = "0xE01880", VA = "0xE01880")]
		public ExtractRaycastHit()
		{
		}
	}
	[Token(Token = "0x20001D1")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x96E890", Offset = "0x96E890")]
	public class ExtractRaycastHit2D : ExtractorNode<RaycastHit2D, GameObject, float, float, Vector3, Vector3>
	{
		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0xE018D0", Offset = "0xE018D0", VA = "0xE018D0", Slot = "12")]
		public override void Invoke(RaycastHit2D hit, out GameObject gameObject, out float distance, out float fraction, out Vector3 normal, out Vector3 point)
		{
		}

		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0xE01A44", Offset = "0xE01A44", VA = "0xE01A44")]
		public ExtractRaycastHit2D()
		{
		}
	}
	[Token(Token = "0x20001D2")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x96E8A0", Offset = "0x96E8A0")]
	public class ExtractRay : ExtractorNode<Ray, Vector3, Vector3>
	{
		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0xE016CC", Offset = "0xE016CC", VA = "0xE016CC", Slot = "12")]
		public override void Invoke(Ray ray, out Vector3 origin, out Vector3 direction)
		{
		}

		[Token(Token = "0x6000C4F")]
		[Address(RVA = "0xE01720", Offset = "0xE01720", VA = "0xE01720")]
		public ExtractRay()
		{
		}
	}
	[Token(Token = "0x20001D3")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x96E8B0", Offset = "0x96E8B0")]
	public class ExtractBounds : ExtractorNode<Bounds, Vector3, Vector3, Vector3, Vector3, Vector3>
	{
		[Token(Token = "0x6000C50")]
		[Address(RVA = "0xE00FC4", Offset = "0xE00FC4", VA = "0xE00FC4", Slot = "12")]
		public override void Invoke(Bounds bounds, out Vector3 center, out Vector3 extents, out Vector3 max, out Vector3 min, out Vector3 size)
		{
		}

		[Token(Token = "0x6000C51")]
		[Address(RVA = "0xE01068", Offset = "0xE01068", VA = "0xE01068")]
		public ExtractBounds()
		{
		}
	}
	[Token(Token = "0x20001D4")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x96E8C0", Offset = "0x96E8C0")]
	public class ExtractCollision : ExtractorNode<Collision, ContactPoint[], ContactPoint, GameObject, Vector3>
	{
		[Token(Token = "0x6000C52")]
		[Address(RVA = "0xE010B8", Offset = "0xE010B8", VA = "0xE010B8", Slot = "12")]
		public override void Invoke(Collision collision, out ContactPoint[] contacts, out ContactPoint firstContact, out GameObject gameObject, out Vector3 velocity)
		{
		}

		[Token(Token = "0x6000C53")]
		[Address(RVA = "0xE011B8", Offset = "0xE011B8", VA = "0xE011B8")]
		public ExtractCollision()
		{
		}
	}
	[Token(Token = "0x20001D5")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x96E8D0", Offset = "0x96E8D0")]
	public class ExtractCollision2D : ExtractorNode<Collision2D, ContactPoint2D[], ContactPoint2D, GameObject, Vector2>
	{
		[Token(Token = "0x6000C54")]
		[Address(RVA = "0xE01208", Offset = "0xE01208", VA = "0xE01208", Slot = "12")]
		public override void Invoke(Collision2D collision, out ContactPoint2D[] contacts, out ContactPoint2D firstContact, out GameObject gameObject, out Vector2 velocity)
		{
		}

		[Token(Token = "0x6000C55")]
		[Address(RVA = "0xE0130C", Offset = "0xE0130C", VA = "0xE0130C")]
		public ExtractCollision2D()
		{
		}
	}
	[Token(Token = "0x20001D6")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x96E8E0", Offset = "0x96E8E0")]
	public class ExtractContactPoint : ExtractorNode<ContactPoint, Vector3, Vector3, Collider, Collider>
	{
		[Token(Token = "0x6000C56")]
		[Address(RVA = "0xE013C0", Offset = "0xE013C0", VA = "0xE013C0", Slot = "12")]
		public override void Invoke(ContactPoint contactPoint, out Vector3 normal, out Vector3 point, out Collider colliderA, out Collider colliderB)
		{
		}

		[Token(Token = "0x6000C57")]
		[Address(RVA = "0xE01444", Offset = "0xE01444", VA = "0xE01444")]
		public ExtractContactPoint()
		{
		}
	}
	[Token(Token = "0x20001D7")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x96E8F0", Offset = "0x96E8F0")]
	public class ExtractContactPoint2D : ExtractorNode<ContactPoint2D, Vector2, Vector2, Collider2D, Collider2D>
	{
		[Token(Token = "0x6000C58")]
		[Address(RVA = "0xE01494", Offset = "0xE01494", VA = "0xE01494", Slot = "12")]
		public override void Invoke(ContactPoint2D contactPoint, out Vector2 normal, out Vector2 point, out Collider2D colliderA, out Collider2D colliderB)
		{
		}

		[Token(Token = "0x6000C59")]
		[Address(RVA = "0xE01510", Offset = "0xE01510", VA = "0xE01510")]
		public ExtractContactPoint2D()
		{
		}
	}
	[Token(Token = "0x20001D8")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x96E900", Offset = "0x96E900")]
	public class ExtractAnimationCurve : ExtractorNode<AnimationCurve, Keyframe[], float, WrapMode, WrapMode>
	{
		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0xE00E98", Offset = "0xE00E98", VA = "0xE00E98", Slot = "12")]
		public override void Invoke(AnimationCurve curve, out Keyframe[] keys, out float length, out WrapMode postWrapMode, out WrapMode preWrapMode)
		{
		}

		[Token(Token = "0x6000C5B")]
		[Address(RVA = "0xE00F74", Offset = "0xE00F74", VA = "0xE00F74")]
		public ExtractAnimationCurve()
		{
		}
	}
	[Token(Token = "0x20001D9")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x96E910", Offset = "0x96E910")]
	public class ExtractKeyFrame : ExtractorNode<Keyframe, float, float, float, float>
	{
		[Token(Token = "0x6000C5C")]
		[Address(RVA = "0xE01560", Offset = "0xE01560", VA = "0xE01560", Slot = "12")]
		public override void Invoke(Keyframe key, out float inTangent, out float outTangent, out float time, out float value)
		{
		}

		[Token(Token = "0x6000C5D")]
		[Address(RVA = "0xE015DC", Offset = "0xE015DC", VA = "0xE015DC")]
		public ExtractKeyFrame()
		{
		}
	}
	[Token(Token = "0x20001DA")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x96E920", Offset = "0x96E920")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x96E920", Offset = "0x96E920")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x96E920", Offset = "0x96E920")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x96E920", Offset = "0x96E920")]
	[ExposeAsDefinition]
	public class SwitchValue<T> : PureFunctionNode<T, bool, T, T>
	{
		[Token(Token = "0x6000C5E")]
		public override T Invoke(bool condition, T isTrue, T isFalse)
		{
			return (T)null;
		}

		[Token(Token = "0x6000C5F")]
		public SwitchValue()
		{
		}
	}
	[Token(Token = "0x20001DB")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x96E9C8", Offset = "0x96E9C8")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x96E9C8", Offset = "0x96E9C8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x96E9C8", Offset = "0x96E9C8")]
	[ExposeAsDefinition]
	public class PickValue<T> : PureFunctionNode<T, int, IList<T>>
	{
		[Token(Token = "0x6000C60")]
		public override T Invoke(int index, IList<T> values)
		{
			return (T)null;
		}

		[Token(Token = "0x6000C61")]
		public PickValue()
		{
		}
	}
	[Token(Token = "0x20001DC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x96EA48", Offset = "0x96EA48")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x96EA48", Offset = "0x96EA48")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x96EA48", Offset = "0x96EA48")]
	public abstract class StaticCodeEventBase : EventNode
	{
		[Token(Token = "0x40009C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		protected string eventName;

		[Token(Token = "0x40009C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		protected Type targetType;

		[Token(Token = "0x17000123")]
		protected System.Reflection.EventInfo eventInfo
		{
			[Token(Token = "0x6000C62")]
			[Address(RVA = "0xC9AC58", Offset = "0xC9AC58", VA = "0xC9AC58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C63")]
		[Address(RVA = "0xC9AE70", Offset = "0xC9AE70", VA = "0xC9AE70")]
		public void SetEvent(System.Reflection.EventInfo e)
		{
		}

		[Token(Token = "0x6000C64")]
		[Address(RVA = "0xC9AB60", Offset = "0xC9AB60", VA = "0xC9AB60", Slot = "26")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6000C65")]
		[Address(RVA = "0xC9AE68", Offset = "0xC9AE68", VA = "0xC9AE68")]
		protected StaticCodeEventBase()
		{
		}
	}
	[Token(Token = "0x20001DD")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x96EAB8", Offset = "0x96EAB8")]
	public class StaticCodeEvent : StaticCodeEventBase
	{
		[Token(Token = "0x40009C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private FlowOutput o;

		[Token(Token = "0x40009C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Action pointer;

		[Token(Token = "0x6000C66")]
		[Address(RVA = "0xC9AAB8", Offset = "0xC9AAB8", VA = "0xC9AAB8", Slot = "26")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6000C67")]
		[Address(RVA = "0xC9AD10", Offset = "0xC9AD10", VA = "0xC9AD10", Slot = "27")]
		public override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6000C68")]
		[Address(RVA = "0xC9AD90", Offset = "0xC9AD90", VA = "0xC9AD90")]
		private void Call()
		{
		}

		[Token(Token = "0x6000C69")]
		[Address(RVA = "0xC9ADF0", Offset = "0xC9ADF0", VA = "0xC9ADF0", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0xC9AE60", Offset = "0xC9AE60", VA = "0xC9AE60")]
		public StaticCodeEvent()
		{
		}
	}
	[Token(Token = "0x20001DE")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x96EAC8", Offset = "0x96EAC8")]
	public class StaticCodeEvent<T> : StaticCodeEventBase
	{
		[Token(Token = "0x40009C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private FlowOutput o;

		[Token(Token = "0x40009C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Action<T> pointer;

		[Token(Token = "0x40009C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T eventValue;

		[Token(Token = "0x6000C6B")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6000C6C")]
		public override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6000C6D")]
		private void Call(T value)
		{
		}

		[Token(Token = "0x6000C6E")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000C6F")]
		public StaticCodeEvent()
		{
		}

		[Token(Token = "0x6000C70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985AE4", Offset = "0x985AE4")]
		private T <RegisterPorts>b__6_0()
		{
			return (T)null;
		}
	}
	[Token(Token = "0x20001DF")]
	public abstract class CustomObjectWrapper : FlowNode
	{
		[Token(Token = "0x6000C71")]
		[Address(RVA = "0xDFF78C", Offset = "0xDFF78C", VA = "0xDFF78C")]
		public static Type[] FindCustomObjectWrappersForType(Type targetType)
		{
			return null;
		}

		[Token(Token = "0x6000C72")]
		public abstract void SetTarget(UnityEngine.Object target);

		[Token(Token = "0x6000C73")]
		[Address(RVA = "0xDFF988", Offset = "0xDFF988", VA = "0xDFF988")]
		protected CustomObjectWrapper()
		{
		}
	}
	[Token(Token = "0x20001E0")]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0x96EAD8", Offset = "0x96EAD8")]
	public abstract class CustomObjectWrapper<T> : CustomObjectWrapper where T : UnityEngine.Object
	{
		[Token(Token = "0x40009C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private T _target;

		[Token(Token = "0x17000124")]
		public T target
		{
			[Token(Token = "0x6000C74")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C75")]
			set
			{
			}
		}

		[Token(Token = "0x17000125")]
		public override string name
		{
			[Token(Token = "0x6000C76")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C77")]
		public override void SetTarget(UnityEngine.Object target)
		{
		}

		[Token(Token = "0x6000C78")]
		protected Type GetRuntimeIconType()
		{
			return null;
		}

		[Token(Token = "0x6000C79")]
		protected CustomObjectWrapper()
		{
		}
	}
	[Token(Token = "0x20001E1")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x96EB28", Offset = "0x96EB28")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x96EB28", Offset = "0x96EB28")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x96EB28", Offset = "0x96EB28")]
	public class ApplicationPauseEvent : EventNode
	{
		[Token(Token = "0x40009C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private FlowOutput pause;

		[Token(Token = "0x40009C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool isPause;

		[Token(Token = "0x6000C7A")]
		[Address(RVA = "0xDF7B20", Offset = "0xDF7B20", VA = "0xDF7B20", Slot = "26")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0xDF7BC4", Offset = "0xDF7BC4", VA = "0xDF7BC4", Slot = "27")]
		public override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0xDF7C68", Offset = "0xDF7C68", VA = "0xDF7C68")]
		private void ApplicationPause(bool isPause)
		{
		}

		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0xDF7CCC", Offset = "0xDF7CCC", VA = "0xDF7CCC", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000C7E")]
		[Address(RVA = "0xDF7D94", Offset = "0xDF7D94", VA = "0xDF7D94")]
		public ApplicationPauseEvent()
		{
		}

		[Token(Token = "0x6000C7F")]
		[Address(RVA = "0xDF7DA4", Offset = "0xDF7DA4", VA = "0xDF7DA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985AF4", Offset = "0x985AF4")]
		private bool <RegisterPorts>b__5_0()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001E2")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x96EBB0", Offset = "0x96EBB0")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x96EBB0", Offset = "0x96EBB0")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x96EBB0", Offset = "0x96EBB0")]
	public class ApplicationQuitEvent : EventNode
	{
		[Token(Token = "0x40009CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private FlowOutput quit;

		[Token(Token = "0x6000C80")]
		[Address(RVA = "0xDF7DAC", Offset = "0xDF7DAC", VA = "0xDF7DAC", Slot = "26")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6000C81")]
		[Address(RVA = "0xDF7E48", Offset = "0xDF7E48", VA = "0xDF7E48", Slot = "27")]
		public override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6000C82")]
		[Address(RVA = "0xDF7EE4", Offset = "0xDF7EE4", VA = "0xDF7EE4")]
		private void ApplicationQuit()
		{
		}

		[Token(Token = "0x6000C83")]
		[Address(RVA = "0xDF7F40", Offset = "0xDF7F40", VA = "0xDF7F40", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000C84")]
		[Address(RVA = "0xDF7FA8", Offset = "0xDF7FA8", VA = "0xDF7FA8")]
		public ApplicationQuitEvent()
		{
		}
	}
	[Token(Token = "0x20001E3")]
	[DoNotList]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x96EC38", Offset = "0x96EC38")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x96EC38", Offset = "0x96EC38")]
	public class CSharpAutoCallbackEvent : EventNode
	{
		[Token(Token = "0x20006EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97917C", Offset = "0x97917C")]
		private sealed class <>c__DisplayClass13_0
		{
			[Token(Token = "0x4001E5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int i;

			[Token(Token = "0x4001E5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CSharpAutoCallbackEvent <>4__this;

			[Token(Token = "0x60024BE")]
			[Address(RVA = "0xDF99AC", Offset = "0xDF99AC", VA = "0xDF99AC")]
			public <>c__DisplayClass13_0()
			{
			}

			[Token(Token = "0x60024BF")]
			[Address(RVA = "0xDF9CC4", Offset = "0xDF9CC4", VA = "0xDF9CC4")]
			internal object <RegisterPorts>b__0()
			{
				return null;
			}
		}

		[Token(Token = "0x40009CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private SerializedEventInfo _event;

		[Token(Token = "0x40009CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private ReflectedDelegateEvent reflectedEvent;

		[Token(Token = "0x40009CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private ValueInput instancePort;

		[Token(Token = "0x40009CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private FlowOutput callback;

		[Token(Token = "0x40009CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private object instance;

		[Token(Token = "0x40009D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private object[] args;

		[Token(Token = "0x17000126")]
		private System.Reflection.EventInfo eventInfo
		{
			[Token(Token = "0x6000C85")]
			[Address(RVA = "0xDF9350", Offset = "0xDF9350", VA = "0xDF9350")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000127")]
		private bool isStaticEvent
		{
			[Token(Token = "0x6000C86")]
			[Address(RVA = "0xDF9364", Offset = "0xDF9364", VA = "0xDF9364")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000128")]
		public override string name
		{
			[Token(Token = "0x6000C87")]
			[Address(RVA = "0xDF9418", Offset = "0xDF9418", VA = "0xDF9418", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C88")]
		[Address(RVA = "0xDF9590", Offset = "0xDF9590", VA = "0xDF9590")]
		public void SetEvent(System.Reflection.EventInfo info, [Optional] object instance)
		{
		}

		[Token(Token = "0x6000C89")]
		[Address(RVA = "0xDF9608", Offset = "0xDF9608", VA = "0xDF9608", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0xDF99B4", Offset = "0xDF99B4", VA = "0xDF99B4", Slot = "26")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6000C8B")]
		[Address(RVA = "0xDF9B34", Offset = "0xDF9B34", VA = "0xDF9B34", Slot = "27")]
		public override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0xDF9C5C", Offset = "0xDF9C5C", VA = "0xDF9C5C")]
		private void OnEventRaised(params object[] args)
		{
		}

		[Token(Token = "0x6000C8D")]
		[Address(RVA = "0xDF9CBC", Offset = "0xDF9CBC", VA = "0xDF9CBC")]
		public CSharpAutoCallbackEvent()
		{
		}
	}
	[Token(Token = "0x20001E4")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x96ECAC", Offset = "0x96ECAC")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x96ECAC", Offset = "0x96ECAC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x96ECAC", Offset = "0x96ECAC")]
	[AttributeAttribute(Name = "ContextDefinedInputsAttribute", RVA = "0x96ECAC", Offset = "0x96ECAC")]
	public class CSharpEventCallback : EventNode
	{
		[Token(Token = "0x20006ED")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97918C", Offset = "0x97918C")]
		private sealed class <>c__DisplayClass13_0
		{
			[Token(Token = "0x4001E5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int i;

			[Token(Token = "0x4001E5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CSharpEventCallback <>4__this;

			[Token(Token = "0x60024C0")]
			[Address(RVA = "0xDFA528", Offset = "0xDFA528", VA = "0xDFA528")]
			public <>c__DisplayClass13_0()
			{
			}

			[Token(Token = "0x60024C1")]
			[Address(RVA = "0xDFA730", Offset = "0xDFA730", VA = "0xDFA730")]
			internal object <RegisterPorts>b__0()
			{
				return null;
			}
		}

		[Token(Token = "0x40009D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		[ExposeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97F044", Offset = "0x97F044")]
		[GatherPortsCallback]
		protected bool _autoHandleRegistration;

		[Token(Token = "0x40009D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private SerializedTypeInfo _type;

		[Token(Token = "0x40009D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private object[] argValues;

		[Token(Token = "0x40009D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private ValueInput eventInput;

		[Token(Token = "0x40009D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private FlowOutput flowCallback;

		[Token(Token = "0x40009D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private ReflectedDelegateEvent reflectedEvent;

		[Token(Token = "0x17000129")]
		private Type type
		{
			[Token(Token = "0x6000C8E")]
			[Address(RVA = "0xDF9D28", Offset = "0xDF9D28", VA = "0xDF9D28")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C8F")]
			[Address(RVA = "0xDF9D3C", Offset = "0xDF9D3C", VA = "0xDF9D3C")]
			set
			{
			}
		}

		[Token(Token = "0x1700012A")]
		private bool autoHandleRegistration
		{
			[Token(Token = "0x6000C90")]
			[Address(RVA = "0xDF9DF8", Offset = "0xDF9DF8", VA = "0xDF9DF8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000C91")]
		[Address(RVA = "0xDF9E00", Offset = "0xDF9E00", VA = "0xDF9E00", Slot = "26")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6000C92")]
		[Address(RVA = "0xDF9F58", Offset = "0xDF9F58", VA = "0xDF9F58", Slot = "27")]
		public override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6000C93")]
		[Address(RVA = "0xDFA064", Offset = "0xDFA064", VA = "0xDFA064", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000C94")]
		[Address(RVA = "0xDF9E10", Offset = "0xDF9E10", VA = "0xDF9E10")]
		private void Register([Optional] Flow f)
		{
		}

		[Token(Token = "0x6000C95")]
		[Address(RVA = "0xDF9F68", Offset = "0xDF9F68", VA = "0xDF9F68")]
		private void Unregister([Optional] Flow f)
		{
		}

		[Token(Token = "0x6000C96")]
		[Address(RVA = "0xDFA530", Offset = "0xDFA530", VA = "0xDFA530")]
		private void Callback(params object[] args)
		{
		}

		[Token(Token = "0x6000C97")]
		[Address(RVA = "0xDFA590", Offset = "0xDFA590", VA = "0xDFA590", Slot = "38")]
		public override Type GetNodeWildDefinitionType()
		{
			return null;
		}

		[Token(Token = "0x6000C98")]
		[Address(RVA = "0xDFA600", Offset = "0xDFA600", VA = "0xDFA600", Slot = "35")]
		public override void OnPortConnected(Port port, Port otherPort)
		{
		}

		[Token(Token = "0x6000C99")]
		[Address(RVA = "0xDFA728", Offset = "0xDFA728", VA = "0xDFA728")]
		public CSharpEventCallback()
		{
		}
	}
	[Token(Token = "0x20001E5")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x96ED9C", Offset = "0x96ED9C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x96ED9C", Offset = "0x96ED9C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x96ED9C", Offset = "0x96ED9C")]
	public class CustomEvent : MessageEventNode<GraphOwner>
	{
		[Token(Token = "0x40009D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0x97F0C0", Offset = "0x97F0C0")]
		[DelayedField]
		public BBParameter<string> eventName;

		[Token(Token = "0x40009D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private FlowOutput onReceived;

		[Token(Token = "0x40009D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private GraphOwner sender;

		[Token(Token = "0x40009DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private GraphOwner receiver;

		[Token(Token = "0x1700012B")]
		public override string name
		{
			[Token(Token = "0x6000C9A")]
			[Address(RVA = "0xDFDA8C", Offset = "0xDFDA8C", VA = "0xDFDA8C", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0xDFDB0C", Offset = "0xDFDB0C", VA = "0xDFDB0C", Slot = "39")]
		protected override string[] GetTargetMessageEvents()
		{
			return null;
		}

		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0xDFDBBC", Offset = "0xDFDBBC", VA = "0xDFDBBC", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000C9D")]
		[Address(RVA = "0xDFDCD0", Offset = "0xDFDCD0", VA = "0xDFDCD0")]
		public void OnCustomEvent(MessageRouter.MessageData<EventData> msg)
		{
		}

		[Token(Token = "0x6000C9E")]
		[Address(RVA = "0xDFDF24", Offset = "0xDFDF24", VA = "0xDFDF24")]
		public CustomEvent()
		{
		}

		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0xDFDF94", Offset = "0xDFDF94", VA = "0xDFDF94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985B04", Offset = "0x985B04")]
		private GraphOwner <RegisterPorts>b__7_0()
		{
			return null;
		}

		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0xDFDF9C", Offset = "0xDFDF9C", VA = "0xDFDF9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985B14", Offset = "0x985B14")]
		private GraphOwner <RegisterPorts>b__7_1()
		{
			return null;
		}
	}
	[Token(Token = "0x20001E6")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x96EE24", Offset = "0x96EE24")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x96EE24", Offset = "0x96EE24")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x96EE24", Offset = "0x96EE24")]
	[AttributeAttribute(Name = "ContextDefinedOutputsAttribute", RVA = "0x96EE24", Offset = "0x96EE24")]
	public class CustomEvent<T> : MessageEventNode<GraphOwner>
	{
		[Token(Token = "0x40009DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0x97F0F8", Offset = "0x97F0F8")]
		public BBParameter<string> eventName;

		[Token(Token = "0x40009DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private FlowOutput onReceived;

		[Token(Token = "0x40009DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private GraphOwner sender;

		[Token(Token = "0x40009DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private GraphOwner receiver;

		[Token(Token = "0x40009DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T receivedValue;

		[Token(Token = "0x1700012C")]
		public override string name
		{
			[Token(Token = "0x6000CA1")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CA2")]
		protected override string[] GetTargetMessageEvents()
		{
			return null;
		}

		[Token(Token = "0x6000CA3")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000CA4")]
		public void OnCustomEvent(MessageRouter.MessageData<EventData> msg)
		{
		}

		[Token(Token = "0x6000CA5")]
		public CustomEvent()
		{
		}

		[Token(Token = "0x6000CA6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985B24", Offset = "0x985B24")]
		private GraphOwner <RegisterPorts>b__8_0()
		{
			return null;
		}

		[Token(Token = "0x6000CA7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985B34", Offset = "0x985B34")]
		private GraphOwner <RegisterPorts>b__8_1()
		{
			return null;
		}

		[Token(Token = "0x6000CA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985B44", Offset = "0x985B44")]
		private T <RegisterPorts>b__8_2()
		{
			return (T)null;
		}
	}
	[Token(Token = "0x20001E7")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x96EF14", Offset = "0x96EF14")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x96EF14", Offset = "0x96EF14")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x96EF14", Offset = "0x96EF14")]
	[AttributeAttribute(Name = "ContextDefinedOutputsAttribute", RVA = "0x96EF14", Offset = "0x96EF14")]
	public class DelegateCallbackEvent : EventNode
	{
		[Token(Token = "0x20006EE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97919C", Offset = "0x97919C")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4001E5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int i;

			[Token(Token = "0x4001E5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public DelegateCallbackEvent <>4__this;

			[Token(Token = "0x60024C2")]
			[Address(RVA = "0xE00170", Offset = "0xE00170", VA = "0xE00170")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x60024C3")]
			[Address(RVA = "0xE00338", Offset = "0xE00338", VA = "0xE00338")]
			internal object <RegisterPorts>b__1()
			{
				return null;
			}
		}

		[Token(Token = "0x40009E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private SerializedTypeInfo _type;

		[Token(Token = "0x40009E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private ReflectedDelegateEvent reflectedEvent;

		[Token(Token = "0x40009E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private ValueOutput delegatePort;

		[Token(Token = "0x40009E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private FlowOutput callbackPort;

		[Token(Token = "0x40009E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private object[] args;

		[Token(Token = "0x1700012D")]
		private Type delegateType
		{
			[Token(Token = "0x6000CA9")]
			[Address(RVA = "0xDFFBF4", Offset = "0xDFFBF4", VA = "0xDFFBF4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CAA")]
			[Address(RVA = "0xDFFC08", Offset = "0xDFFC08", VA = "0xDFFC08")]
			set
			{
			}
		}

		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0xDFFCC4", Offset = "0xDFFCC4", VA = "0xDFFCC4", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0xE00178", Offset = "0xE00178", VA = "0xE00178")]
		private void Callback(params object[] args)
		{
		}

		[Token(Token = "0x6000CAD")]
		[Address(RVA = "0xE001D8", Offset = "0xE001D8", VA = "0xE001D8", Slot = "35")]
		public override void OnPortConnected(Port port, Port otherPort)
		{
		}

		[Token(Token = "0x6000CAE")]
		[Address(RVA = "0xE00300", Offset = "0xE00300", VA = "0xE00300")]
		public DelegateCallbackEvent()
		{
		}

		[Token(Token = "0x6000CAF")]
		[Address(RVA = "0xE00308", Offset = "0xE00308", VA = "0xE00308")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985B54", Offset = "0x985B54")]
		private object <RegisterPorts>b__8_0()
		{
			return null;
		}
	}
	[Token(Token = "0x20001E8")]
	[DoNotList]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x96F018", Offset = "0x96F018")]
	public class GetSharpEvent : FlowNode
	{
		[Token(Token = "0x20006EF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9791AC", Offset = "0x9791AC")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4001E60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SharpEvent wrapper;

			[Token(Token = "0x4001E61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GetSharpEvent <>4__this;

			[Token(Token = "0x60024C4")]
			[Address(RVA = "0xE04568", Offset = "0xE04568", VA = "0xE04568")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x60024C5")]
			[Address(RVA = "0xE04578", Offset = "0xE04578", VA = "0xE04578")]
			internal object <RegisterPorts>b__0()
			{
				return null;
			}
		}

		[Token(Token = "0x40009E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private SerializedEventInfo _event;

		[Token(Token = "0x40009E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private ValueInput instancePort;

		[Token(Token = "0x1700012E")]
		private System.Reflection.EventInfo eventInfo
		{
			[Token(Token = "0x6000CB0")]
			[Address(RVA = "0xE04130", Offset = "0xE04130", VA = "0xE04130")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012F")]
		public override string name
		{
			[Token(Token = "0x6000CB1")]
			[Address(RVA = "0xE04144", Offset = "0xE04144", VA = "0xE04144", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0xE042D8", Offset = "0xE042D8", VA = "0xE042D8")]
		public void SetEvent(System.Reflection.EventInfo info, [Optional] object instance)
		{
		}

		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0xE04350", Offset = "0xE04350", VA = "0xE04350", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0xE04570", Offset = "0xE04570", VA = "0xE04570")]
		public GetSharpEvent()
		{
		}
	}
	[Token(Token = "0x20001E9")]
	[DoNotList]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x96F064", Offset = "0x96F064")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x96F064", Offset = "0x96F064")]
	public class UnityEventAutoCallbackEvent : EventNode
	{
		[Token(Token = "0x20006F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9791BC", Offset = "0x9791BC")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x4001E62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int i;

			[Token(Token = "0x4001E63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UnityEventAutoCallbackEvent <>4__this;

			[Token(Token = "0x60024C6")]
			[Address(RVA = "0xCA1BCC", Offset = "0xCA1BCC", VA = "0xCA1BCC")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x60024C7")]
			[Address(RVA = "0xCA1EE4", Offset = "0xCA1EE4", VA = "0xCA1EE4")]
			internal object <RegisterPorts>b__0()
			{
				return null;
			}
		}

		[Token(Token = "0x40009E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private SerializedFieldInfo _field;

		[Token(Token = "0x40009E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private ReflectedUnityEvent reflectedEvent;

		[Token(Token = "0x40009E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private UnityEventBase unityEvent;

		[Token(Token = "0x40009EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private ValueInput instancePort;

		[Token(Token = "0x40009EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private FlowOutput callback;

		[Token(Token = "0x40009EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private object[] args;

		[Token(Token = "0x17000130")]
		private FieldInfo field
		{
			[Token(Token = "0x6000CB5")]
			[Address(RVA = "0xCA1644", Offset = "0xCA1644", VA = "0xCA1644")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000131")]
		public override string name
		{
			[Token(Token = "0x6000CB6")]
			[Address(RVA = "0xCA1658", Offset = "0xCA1658", VA = "0xCA1658", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0xCA177C", Offset = "0xCA177C", VA = "0xCA177C")]
		public void SetEvent(FieldInfo field, [Optional] object instance)
		{
		}

		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0xCA17F4", Offset = "0xCA17F4", VA = "0xCA17F4", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0xCA1BD4", Offset = "0xCA1BD4", VA = "0xCA1BD4", Slot = "26")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0xCA1DD0", Offset = "0xCA1DD0", VA = "0xCA1DD0", Slot = "27")]
		public override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0xCA1E78", Offset = "0xCA1E78", VA = "0xCA1E78")]
		private void OnEventRaised(params object[] args)
		{
		}

		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0xCA1EDC", Offset = "0xCA1EDC", VA = "0xCA1EDC")]
		public UnityEventAutoCallbackEvent()
		{
		}
	}
	[Token(Token = "0x20001EA")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x96F0D8", Offset = "0x96F0D8")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x96F0D8", Offset = "0x96F0D8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x96F0D8", Offset = "0x96F0D8")]
	[AttributeAttribute(Name = "ContextDefinedInputsAttribute", RVA = "0x96F0D8", Offset = "0x96F0D8")]
	public class UnityEventCallbackEvent : EventNode
	{
		[Token(Token = "0x20006F1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9791CC", Offset = "0x9791CC")]
		private sealed class <>c__DisplayClass13_0
		{
			[Token(Token = "0x4001E64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int i;

			[Token(Token = "0x4001E65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UnityEventCallbackEvent <>4__this;

			[Token(Token = "0x60024C8")]
			[Address(RVA = "0xCA27B8", Offset = "0xCA27B8", VA = "0xCA27B8")]
			public <>c__DisplayClass13_0()
			{
			}

			[Token(Token = "0x60024C9")]
			[Address(RVA = "0xCA29C4", Offset = "0xCA29C4", VA = "0xCA29C4")]
			internal object <RegisterPorts>b__0()
			{
				return null;
			}
		}

		[Token(Token = "0x40009ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		[ExposeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97F138", Offset = "0x97F138")]
		[GatherPortsCallback]
		protected bool _autoHandleRegistration;

		[Token(Token = "0x40009EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private SerializedTypeInfo _type;

		[Token(Token = "0x40009EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private object[] argValues;

		[Token(Token = "0x40009F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private ValueInput eventInput;

		[Token(Token = "0x40009F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private FlowOutput flowCallback;

		[Token(Token = "0x40009F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private ReflectedUnityEvent reflectedEvent;

		[Token(Token = "0x17000132")]
		private Type eventType
		{
			[Token(Token = "0x6000CBD")]
			[Address(RVA = "0xCA1F48", Offset = "0xCA1F48", VA = "0xCA1F48")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CBE")]
			[Address(RVA = "0xCA1F5C", Offset = "0xCA1F5C", VA = "0xCA1F5C")]
			set
			{
			}
		}

		[Token(Token = "0x17000133")]
		public bool autoHandleRegistration
		{
			[Token(Token = "0x6000CBF")]
			[Address(RVA = "0xCA2018", Offset = "0xCA2018", VA = "0xCA2018")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0xCA2020", Offset = "0xCA2020", VA = "0xCA2020", Slot = "26")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0xCA2174", Offset = "0xCA2174", VA = "0xCA2174", Slot = "27")]
		public override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0xCA2280", Offset = "0xCA2280", VA = "0xCA2280", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000CC3")]
		[Address(RVA = "0xCA2030", Offset = "0xCA2030", VA = "0xCA2030")]
		private void Register([Optional] Flow f)
		{
		}

		[Token(Token = "0x6000CC4")]
		[Address(RVA = "0xCA2184", Offset = "0xCA2184", VA = "0xCA2184")]
		private void Unregister([Optional] Flow f)
		{
		}

		[Token(Token = "0x6000CC5")]
		[Address(RVA = "0xCA27C0", Offset = "0xCA27C0", VA = "0xCA27C0")]
		private void OnEventRaised(params object[] args)
		{
		}

		[Token(Token = "0x6000CC6")]
		[Address(RVA = "0xCA2824", Offset = "0xCA2824", VA = "0xCA2824", Slot = "38")]
		public override Type GetNodeWildDefinitionType()
		{
			return null;
		}

		[Token(Token = "0x6000CC7")]
		[Address(RVA = "0xCA2894", Offset = "0xCA2894", VA = "0xCA2894", Slot = "35")]
		public override void OnPortConnected(Port port, Port otherPort)
		{
		}

		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0xCA29BC", Offset = "0xCA29BC", VA = "0xCA29BC")]
		public UnityEventCallbackEvent()
		{
		}
	}
	[Token(Token = "0x20001EB")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x96F1C8", Offset = "0x96F1C8")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0x96F1C8", Offset = "0x96F1C8")]
	[AttributeAttribute(Name = "ContextDefinedOutputsAttribute", RVA = "0x96F1C8", Offset = "0x96F1C8")]
	[AttributeAttribute(Name = "ExecutionPriorityAttribute", RVA = "0x96F1C8", Offset = "0x96F1C8")]
	public abstract class EventNode : FlowNode
	{
		[Token(Token = "0x17000134")]
		public override string name
		{
			[Token(Token = "0x6000CC9")]
			[Address(RVA = "0xDF9514", Offset = "0xDF9514", VA = "0xDF9514", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0xDF7D9C", Offset = "0xDF7D9C", VA = "0xDF7D9C")]
		protected EventNode()
		{
		}
	}
	[Token(Token = "0x20001EC")]
	[AttributeAttribute(Name = "ContextDefinedOutputsAttribute", RVA = "0x96F2A4", Offset = "0x96F2A4")]
	public abstract class EventNode<T> : EventNode where T : UnityEngine.Component
	{
		[Token(Token = "0x40009F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T> target;

		[Token(Token = "0x17000135")]
		public override string name
		{
			[Token(Token = "0x6000CCB")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CCC")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6000CCD")]
		protected void ResolveSelf()
		{
		}

		[Token(Token = "0x6000CCE")]
		protected EventNode()
		{
		}
	}
	[Token(Token = "0x20001ED")]
	[AttributeAttribute(Name = "ContextDefinedOutputsAttribute", RVA = "0x96F324", Offset = "0x96F324")]
	public abstract class MessageEventNode<T> : EventNode where T : UnityEngine.Component
	{
		[Token(Token = "0x20006F2")]
		public enum TargetMode
		{
			[Token(Token = "0x4001E67")]
			SingleTarget,
			[Token(Token = "0x4001E68")]
			MultipleTargets
		}

		[Token(Token = "0x20006F3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9791DC", Offset = "0x9791DC")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x4001E69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject receiver;

			[Token(Token = "0x60024CA")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x60024CB")]
			internal bool <ResolveReceiver>b__0(T t)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40009F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TargetMode targetMode;

		[Token(Token = "0x40009F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x97F1B4", Offset = "0x97F1B4")]
		public BBParameter<T> target;

		[Token(Token = "0x40009F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "ShowIfAttribute", RVA = "0x97F1F0", Offset = "0x97F1F0")]
		public BBParameter<List<T>> targets;

		[Token(Token = "0x17000136")]
		public override string name
		{
			[Token(Token = "0x6000CCF")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CD0")]
		protected abstract string[] GetTargetMessageEvents();

		[Token(Token = "0x6000CD1")]
		public sealed override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6000CD2")]
		public sealed override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6000CD3")]
		protected T ResolveReceiver(GameObject receiver)
		{
			return null;
		}

		[Token(Token = "0x6000CD4")]
		protected MessageEventNode()
		{
		}
	}
	[Token(Token = "0x20001EE")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x96F3A4", Offset = "0x96F3A4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x96F3A4", Offset = "0x96F3A4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x96F3A4", Offset = "0x96F3A4")]
	[AttributeAttribute(Name = "ExecutionPriorityAttribute", RVA = "0x96F3A4", Offset = "0x96F3A4")]
	public class ConstructionEvent : EventNode
	{
		[Token(Token = "0x40009F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private FlowOutput awake;

		[Token(Token = "0x40009F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool called;

		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0xDFC99C", Offset = "0xDFC99C", VA = "0xDFC99C", Slot = "26")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6000CD6")]
		[Address(RVA = "0xDFCA0C", Offset = "0xDFCA0C", VA = "0xDFCA0C", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0xDFCA74", Offset = "0xDFCA74", VA = "0xDFCA74")]
		public ConstructionEvent()
		{
		}
	}
	[Token(Token = "0x20001EF")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x96F440", Offset = "0x96F440")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x96F440", Offset = "0x96F440")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x96F440", Offset = "0x96F440")]
	[AttributeAttribute(Name = "ExecutionPriorityAttribute", RVA = "0x96F440", Offset = "0x96F440")]
	public class DisableEvent : EventNode
	{
		[Token(Token = "0x40009F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private FlowOutput disable;

		[Token(Token = "0x6000CD8")]
		[Address(RVA = "0xE00528", Offset = "0xE00528", VA = "0xE00528", Slot = "27")]
		public override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6000CD9")]
		[Address(RVA = "0xE00584", Offset = "0xE00584", VA = "0xE00584", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000CDA")]
		[Address(RVA = "0xE005EC", Offset = "0xE005EC", VA = "0xE005EC")]
		public DisableEvent()
		{
		}
	}
	[Token(Token = "0x20001F0")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x96F4DC", Offset = "0x96F4DC")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x96F4DC", Offset = "0x96F4DC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x96F4DC", Offset = "0x96F4DC")]
	[AttributeAttribute(Name = "ExecutionPriorityAttribute", RVA = "0x96F4DC", Offset = "0x96F4DC")]
	public class EnableEvent : EventNode
	{
		[Token(Token = "0x40009FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private FlowOutput enable;

		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0xE0097C", Offset = "0xE0097C", VA = "0xE0097C", Slot = "26")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6000CDC")]
		[Address(RVA = "0xE009D8", Offset = "0xE009D8", VA = "0xE009D8", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000CDD")]
		[Address(RVA = "0xE00A40", Offset = "0xE00A40", VA = "0xE00A40")]
		public EnableEvent()
		{
		}
	}
	[Token(Token = "0x20001F1")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x96F578", Offset = "0x96F578")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x96F578", Offset = "0x96F578")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x96F578", Offset = "0x96F578")]
	[AttributeAttribute(Name = "ExecutionPriorityAttribute", RVA = "0x96F578", Offset = "0x96F578")]
	public class FixedUpdateEvent : EventNode
	{
		[Token(Token = "0x40009FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private FlowOutput fixedUpdate;

		[Token(Token = "0x6000CDE")]
		[Address(RVA = "0xE0242C", Offset = "0xE0242C", VA = "0xE0242C", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0xE02494", Offset = "0xE02494", VA = "0xE02494", Slot = "26")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0xE02530", Offset = "0xE02530", VA = "0xE02530", Slot = "27")]
		public override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6000CE1")]
		[Address(RVA = "0xE025CC", Offset = "0xE025CC", VA = "0xE025CC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0xE02628", Offset = "0xE02628", VA = "0xE02628")]
		public FixedUpdateEvent()
		{
		}
	}
	[Token(Token = "0x20001F2")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x96F614", Offset = "0x96F614")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x96F614", Offset = "0x96F614")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x96F614", Offset = "0x96F614")]
	[AttributeAttribute(Name = "ExecutionPriorityAttribute", RVA = "0x96F614", Offset = "0x96F614")]
	public class LateUpdateEvent : EventNode
	{
		[Token(Token = "0x40009FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private FlowOutput lateUpdate;

		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0xE065BC", Offset = "0xE065BC", VA = "0xE065BC", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0xE06624", Offset = "0xE06624", VA = "0xE06624", Slot = "26")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0xE066C0", Offset = "0xE066C0", VA = "0xE066C0", Slot = "27")]
		public override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0xE0675C", Offset = "0xE0675C", VA = "0xE0675C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0xE067B8", Offset = "0xE067B8", VA = "0xE067B8")]
		public LateUpdateEvent()
		{
		}
	}
	[Token(Token = "0x20001F3")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x96F6B0", Offset = "0x96F6B0")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x96F6B0", Offset = "0x96F6B0")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x96F6B0", Offset = "0x96F6B0")]
	[AttributeAttribute(Name = "ExecutionPriorityAttribute", RVA = "0x96F6B0", Offset = "0x96F6B0")]
	public class StartEvent : EventNode
	{
		[Token(Token = "0x40009FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private FlowOutput start;

		[Token(Token = "0x40009FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool called;

		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0xC9A9D4", Offset = "0xC9A9D4", VA = "0xC9A9D4", Slot = "26")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6000CE9")]
		[Address(RVA = "0xC9AA48", Offset = "0xC9AA48", VA = "0xC9AA48", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000CEA")]
		[Address(RVA = "0xC9AAB0", Offset = "0xC9AAB0", VA = "0xC9AAB0")]
		public StartEvent()
		{
		}
	}
	[Token(Token = "0x20001F4")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x96F74C", Offset = "0x96F74C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x96F74C", Offset = "0x96F74C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x96F74C", Offset = "0x96F74C")]
	[AttributeAttribute(Name = "ExecutionPriorityAttribute", RVA = "0x96F74C", Offset = "0x96F74C")]
	public class UpdateEvent : EventNode, IUpdatable
	{
		[Token(Token = "0x40009FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public BBParameter<float> updateInterval;

		[Token(Token = "0x4000A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private FlowOutput update;

		[Token(Token = "0x4000A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float lastUpdatedTime;

		[Token(Token = "0x6000CEB")]
		[Address(RVA = "0xCA31A4", Offset = "0xCA31A4", VA = "0xCA31A4", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000CEC")]
		[Address(RVA = "0xCA320C", Offset = "0xCA320C", VA = "0xCA320C", Slot = "26")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6000CED")]
		[Address(RVA = "0xCA3218", Offset = "0xCA3218", VA = "0xCA3218", Slot = "39")]
		public void Update()
		{
		}

		[Token(Token = "0x6000CEE")]
		[Address(RVA = "0xCA3364", Offset = "0xCA3364", VA = "0xCA3364")]
		public UpdateEvent()
		{
		}
	}
	[Token(Token = "0x20001F5")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x96F7E8", Offset = "0x96F7E8")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x96F7E8", Offset = "0x96F7E8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x96F7E8", Offset = "0x96F7E8")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x96F7E8", Offset = "0x96F7E8")]
	public class InputAxisEvent : EventNode, IUpdatable
	{
		[Token(Token = "0x4000A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private FlowOutput o;

		[Token(Token = "0x4000A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float horizontal;

		[Token(Token = "0x4000A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float vertical;

		[Token(Token = "0x4000A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool calledLastFrame;

		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0xE04B10", Offset = "0xE04B10", VA = "0xE04B10", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0xE04C24", Offset = "0xE04C24", VA = "0xE04C24", Slot = "39")]
		public void Update()
		{
		}

		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0xE04D5C", Offset = "0xE04D5C", VA = "0xE04D5C")]
		public InputAxisEvent()
		{
		}

		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0xE04D64", Offset = "0xE04D64", VA = "0xE04D64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985B64", Offset = "0x985B64")]
		private float <RegisterPorts>b__4_0()
		{
			return default(float);
		}

		[Token(Token = "0x6000CF3")]
		[Address(RVA = "0xE04D6C", Offset = "0xE04D6C", VA = "0xE04D6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985B74", Offset = "0x985B74")]
		private float <RegisterPorts>b__4_1()
		{
			return default(float);
		}
	}
	[Token(Token = "0x20001F6")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x96F894", Offset = "0x96F894")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x96F894", Offset = "0x96F894")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x96F894", Offset = "0x96F894")]
	public class InputButtonEvents : EventNode, IUpdatable
	{
		[Token(Token = "0x4000A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0x97F22C", Offset = "0x97F22C")]
		public BBParameter<string> buttonName;

		[Token(Token = "0x4000A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private FlowOutput down;

		[Token(Token = "0x4000A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private FlowOutput up;

		[Token(Token = "0x4000A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private FlowOutput pressed;

		[Token(Token = "0x17000137")]
		public override string name
		{
			[Token(Token = "0x6000CF4")]
			[Address(RVA = "0xE04D74", Offset = "0xE04D74", VA = "0xE04D74", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0xE04DD8", Offset = "0xE04DD8", VA = "0xE04DD8", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0xE04E80", Offset = "0xE04E80", VA = "0xE04E80", Slot = "39")]
		public void Update()
		{
		}

		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0xE04FD0", Offset = "0xE04FD0", VA = "0xE04FD0")]
		public InputButtonEvents()
		{
		}
	}
	[Token(Token = "0x20001F7")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x96F91C", Offset = "0x96F91C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x96F91C", Offset = "0x96F91C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x96F91C", Offset = "0x96F91C")]
	public class InputCustomAxisEvent : EventNode, IUpdatable
	{
		[Token(Token = "0x20006F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9791EC", Offset = "0x9791EC")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4001E6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int i;

			[Token(Token = "0x4001E6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public InputCustomAxisEvent <>4__this;

			[Token(Token = "0x60024CC")]
			[Address(RVA = "0xE052A4", Offset = "0xE052A4", VA = "0xE052A4")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x60024CD")]
			[Address(RVA = "0xE055A8", Offset = "0xE055A8", VA = "0xE055A8")]
			internal float <RegisterPorts>b__0()
			{
				return default(float);
			}
		}

		[Token(Token = "0x4000A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public BBParameter<List<string>> axis;

		[Token(Token = "0x4000A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float[] axisValues;

		[Token(Token = "0x4000A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool calledLastFrame;

		[Token(Token = "0x4000A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private FlowOutput o;

		[Token(Token = "0x6000CF8")]
		[Address(RVA = "0xE05038", Offset = "0xE05038", VA = "0xE05038", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000CF9")]
		[Address(RVA = "0xE052AC", Offset = "0xE052AC", VA = "0xE052AC", Slot = "39")]
		public void Update()
		{
		}

		[Token(Token = "0x6000CFA")]
		[Address(RVA = "0xE054AC", Offset = "0xE054AC", VA = "0xE054AC")]
		public InputCustomAxisEvent()
		{
		}
	}
	[Token(Token = "0x20001F8")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x96F9A4", Offset = "0x96F9A4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x96F9A4", Offset = "0x96F9A4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x96F9A4", Offset = "0x96F9A4")]
	public class KeyboardEvents : EventNode, IUpdatable
	{
		[Token(Token = "0x4000A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public BBParameter<KeyCode> keyCode;

		[Token(Token = "0x4000A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private FlowOutput down;

		[Token(Token = "0x4000A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private FlowOutput up;

		[Token(Token = "0x4000A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private FlowOutput pressed;

		[Token(Token = "0x17000138")]
		public override string name
		{
			[Token(Token = "0x6000CFB")]
			[Address(RVA = "0xE05D30", Offset = "0xE05D30", VA = "0xE05D30", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CFC")]
		[Address(RVA = "0xE05D94", Offset = "0xE05D94", VA = "0xE05D94", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000CFD")]
		[Address(RVA = "0xE05E3C", Offset = "0xE05E3C", VA = "0xE05E3C", Slot = "39")]
		public void Update()
		{
		}

		[Token(Token = "0x6000CFE")]
		[Address(RVA = "0xE05F8C", Offset = "0xE05F8C", VA = "0xE05F8C")]
		public KeyboardEvents()
		{
		}
	}
	[Token(Token = "0x20001F9")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x96FA2C", Offset = "0x96FA2C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x96FA2C", Offset = "0x96FA2C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x96FA2C", Offset = "0x96FA2C")]
	public class MouseEvents : EventNode, IUpdatable
	{
		[Token(Token = "0x20006F5")]
		public enum ButtonKeys
		{
			[Token(Token = "0x4001E6D")]
			Left,
			[Token(Token = "0x4001E6E")]
			Right,
			[Token(Token = "0x4001E6F")]
			Middle
		}

		[Token(Token = "0x4000A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public BBParameter<ButtonKeys> buttonKey;

		[Token(Token = "0x4000A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private FlowOutput down;

		[Token(Token = "0x4000A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private FlowOutput pressed;

		[Token(Token = "0x4000A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private FlowOutput up;

		[Token(Token = "0x17000139")]
		public override string name
		{
			[Token(Token = "0x6000CFF")]
			[Address(RVA = "0xE0B55C", Offset = "0xE0B55C", VA = "0xE0B55C", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D00")]
		[Address(RVA = "0xE0B5C0", Offset = "0xE0B5C0", VA = "0xE0B5C0", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000D01")]
		[Address(RVA = "0xE0B668", Offset = "0xE0B668", VA = "0xE0B668", Slot = "39")]
		public void Update()
		{
		}

		[Token(Token = "0x6000D02")]
		[Address(RVA = "0xE0B7B8", Offset = "0xE0B7B8", VA = "0xE0B7B8")]
		public MouseEvents()
		{
		}
	}
	[Token(Token = "0x20001FA")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x96FAB4", Offset = "0x96FAB4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x96FAB4", Offset = "0x96FAB4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x96FAB4", Offset = "0x96FAB4")]
	public class MousePickEvent : EventNode, IUpdatable
	{
		[Token(Token = "0x20006F6")]
		public enum ButtonKeys
		{
			[Token(Token = "0x4001E71")]
			Left,
			[Token(Token = "0x4001E72")]
			Right,
			[Token(Token = "0x4001E73")]
			Middle
		}

		[Token(Token = "0x4000A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public BBParameter<ButtonKeys> buttonKey;

		[Token(Token = "0x4000A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public BBParameter<LayerMask> mask;

		[Token(Token = "0x4000A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private FlowOutput o;

		[Token(Token = "0x4000A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private RaycastHit hit;

		[Token(Token = "0x1700013A")]
		public override string name
		{
			[Token(Token = "0x6000D03")]
			[Address(RVA = "0xE0B7C0", Offset = "0xE0B7C0", VA = "0xE0B7C0", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D04")]
		[Address(RVA = "0xE0B824", Offset = "0xE0B824", VA = "0xE0B824", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000D05")]
		[Address(RVA = "0xE0B8EC", Offset = "0xE0B8EC", VA = "0xE0B8EC", Slot = "39")]
		public void Update()
		{
		}

		[Token(Token = "0x6000D06")]
		[Address(RVA = "0xE0BA68", Offset = "0xE0BA68", VA = "0xE0BA68")]
		public MousePickEvent()
		{
		}

		[Token(Token = "0x6000D07")]
		[Address(RVA = "0xE0BAF8", Offset = "0xE0BAF8", VA = "0xE0BAF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985B84", Offset = "0x985B84")]
		private RaycastHit <RegisterPorts>b__7_0()
		{
			return default(RaycastHit);
		}
	}
	[Token(Token = "0x20001FB")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x96FB3C", Offset = "0x96FB3C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x96FB3C", Offset = "0x96FB3C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x96FB3C", Offset = "0x96FB3C")]
	public class AnimatorEvents : MessageEventNode<Animator>
	{
		[Token(Token = "0x4000A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private FlowOutput onAnimatorMove;

		[Token(Token = "0x4000A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private FlowOutput onAnimatorIK;

		[Token(Token = "0x4000A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Animator receiver;

		[Token(Token = "0x4000A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int layerIndex;

		[Token(Token = "0x6000D08")]
		[Address(RVA = "0xDF7118", Offset = "0xDF7118", VA = "0xDF7118", Slot = "39")]
		protected override string[] GetTargetMessageEvents()
		{
			return null;
		}

		[Token(Token = "0x6000D09")]
		[Address(RVA = "0xDF721C", Offset = "0xDF721C", VA = "0xDF721C", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0xDF7360", Offset = "0xDF7360", VA = "0xDF7360")]
		private void OnAnimatorMove(MessageRouter.MessageData msg)
		{
		}

		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0xDF7428", Offset = "0xDF7428", VA = "0xDF7428")]
		private void OnAnimatorIK(MessageRouter.MessageData<int> msg)
		{
		}

		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0xDF753C", Offset = "0xDF753C", VA = "0xDF753C")]
		public AnimatorEvents()
		{
		}

		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0xDF758C", Offset = "0xDF758C", VA = "0xDF758C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985B94", Offset = "0x985B94")]
		private Animator <RegisterPorts>b__5_0()
		{
			return null;
		}

		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0xDF7594", Offset = "0xDF7594", VA = "0xDF7594")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985BA4", Offset = "0x985BA4")]
		private int <RegisterPorts>b__5_1()
		{
			return default(int);
		}
	}
	[Token(Token = "0x20001FC")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x96FBC4", Offset = "0x96FBC4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x96FBC4", Offset = "0x96FBC4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x96FBC4", Offset = "0x96FBC4")]
	public class CharacterControllerEvents : MessageEventNode<CharacterController>
	{
		[Token(Token = "0x4000A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private FlowOutput onHit;

		[Token(Token = "0x4000A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private CharacterController receiver;

		[Token(Token = "0x4000A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private ControllerColliderHit hitInfo;

		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0xDFAC0C", Offset = "0xDFAC0C", VA = "0xDFAC0C", Slot = "39")]
		protected override string[] GetTargetMessageEvents()
		{
			return null;
		}

		[Token(Token = "0x6000D10")]
		[Address(RVA = "0xDFACBC", Offset = "0xDFACBC", VA = "0xDFACBC", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000D11")]
		[Address(RVA = "0xDFAE98", Offset = "0xDFAE98", VA = "0xDFAE98")]
		private void OnControllerColliderHit(MessageRouter.MessageData<ControllerColliderHit> msg)
		{
		}

		[Token(Token = "0x6000D12")]
		[Address(RVA = "0xDFAFAC", Offset = "0xDFAFAC", VA = "0xDFAFAC")]
		public CharacterControllerEvents()
		{
		}

		[Token(Token = "0x6000D13")]
		[Address(RVA = "0xDFAFFC", Offset = "0xDFAFFC", VA = "0xDFAFFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985BB4", Offset = "0x985BB4")]
		private CharacterController <RegisterPorts>b__4_0()
		{
			return null;
		}

		[Token(Token = "0x6000D14")]
		[Address(RVA = "0xDFB004", Offset = "0xDFB004", VA = "0xDFB004")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985BC4", Offset = "0x985BC4")]
		private GameObject <RegisterPorts>b__4_1()
		{
			return null;
		}

		[Token(Token = "0x6000D15")]
		[Address(RVA = "0xDFB034", Offset = "0xDFB034", VA = "0xDFB034")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985BD4", Offset = "0x985BD4")]
		private Vector3 <RegisterPorts>b__4_2()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D16")]
		[Address(RVA = "0xDFB064", Offset = "0xDFB064", VA = "0xDFB064")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985BE4", Offset = "0x985BE4")]
		private ControllerColliderHit <RegisterPorts>b__4_3()
		{
			return null;
		}
	}
	[Token(Token = "0x20001FD")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x96FC4C", Offset = "0x96FC4C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x96FC4C", Offset = "0x96FC4C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x96FC4C", Offset = "0x96FC4C")]
	public class Collision2DEvents : MessageEventNode<Collider2D>
	{
		[Token(Token = "0x4000A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private FlowOutput onEnter;

		[Token(Token = "0x4000A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private FlowOutput onStay;

		[Token(Token = "0x4000A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private FlowOutput onExit;

		[Token(Token = "0x4000A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Collider2D receiver;

		[Token(Token = "0x4000A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Collision2D collision;

		[Token(Token = "0x6000D17")]
		[Address(RVA = "0xDFB868", Offset = "0xDFB868", VA = "0xDFB868", Slot = "39")]
		protected override string[] GetTargetMessageEvents()
		{
			return null;
		}

		[Token(Token = "0x6000D18")]
		[Address(RVA = "0xDFB9C0", Offset = "0xDFB9C0", VA = "0xDFB9C0", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000D19")]
		[Address(RVA = "0xDFBBDC", Offset = "0xDFBBDC", VA = "0xDFBBDC")]
		private void OnCollisionEnter2D(MessageRouter.MessageData<Collision2D> msg)
		{
		}

		[Token(Token = "0x6000D1A")]
		[Address(RVA = "0xDFBCF0", Offset = "0xDFBCF0", VA = "0xDFBCF0")]
		private void OnCollisionStay2D(MessageRouter.MessageData<Collision2D> msg)
		{
		}

		[Token(Token = "0x6000D1B")]
		[Address(RVA = "0xDFBE04", Offset = "0xDFBE04", VA = "0xDFBE04")]
		private void OnCollisionExit2D(MessageRouter.MessageData<Collision2D> msg)
		{
		}

		[Token(Token = "0x6000D1C")]
		[Address(RVA = "0xDFBF18", Offset = "0xDFBF18", VA = "0xDFBF18")]
		public Collision2DEvents()
		{
		}

		[Token(Token = "0x6000D1D")]
		[Address(RVA = "0xDFBF68", Offset = "0xDFBF68", VA = "0xDFBF68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985BF4", Offset = "0x985BF4")]
		private Collider2D <RegisterPorts>b__6_0()
		{
			return null;
		}

		[Token(Token = "0x6000D1E")]
		[Address(RVA = "0xDFBF70", Offset = "0xDFBF70", VA = "0xDFBF70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985C04", Offset = "0x985C04")]
		private GameObject <RegisterPorts>b__6_1()
		{
			return null;
		}

		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0xDFBFA0", Offset = "0xDFBFA0", VA = "0xDFBFA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985C14", Offset = "0x985C14")]
		private ContactPoint2D <RegisterPorts>b__6_2()
		{
			return default(ContactPoint2D);
		}

		[Token(Token = "0x6000D20")]
		[Address(RVA = "0xDFC01C", Offset = "0xDFC01C", VA = "0xDFC01C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985C24", Offset = "0x985C24")]
		private Collision2D <RegisterPorts>b__6_3()
		{
			return null;
		}
	}
	[Token(Token = "0x20001FE")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x96FCD4", Offset = "0x96FCD4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x96FCD4", Offset = "0x96FCD4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x96FCD4", Offset = "0x96FCD4")]
	public class CollisionEvents : MessageEventNode<Collider>
	{
		[Token(Token = "0x4000A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private FlowOutput onEnter;

		[Token(Token = "0x4000A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private FlowOutput onStay;

		[Token(Token = "0x4000A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private FlowOutput onExit;

		[Token(Token = "0x4000A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Collider receiver;

		[Token(Token = "0x4000A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Collision collision;

		[Token(Token = "0x6000D21")]
		[Address(RVA = "0xDFC024", Offset = "0xDFC024", VA = "0xDFC024", Slot = "39")]
		protected override string[] GetTargetMessageEvents()
		{
			return null;
		}

		[Token(Token = "0x6000D22")]
		[Address(RVA = "0xDFC17C", Offset = "0xDFC17C", VA = "0xDFC17C", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000D23")]
		[Address(RVA = "0xDFC398", Offset = "0xDFC398", VA = "0xDFC398")]
		private void OnCollisionEnter(MessageRouter.MessageData<Collision> msg)
		{
		}

		[Token(Token = "0x6000D24")]
		[Address(RVA = "0xDFC4AC", Offset = "0xDFC4AC", VA = "0xDFC4AC")]
		private void OnCollisionStay(MessageRouter.MessageData<Collision> msg)
		{
		}

		[Token(Token = "0x6000D25")]
		[Address(RVA = "0xDFC5C0", Offset = "0xDFC5C0", VA = "0xDFC5C0")]
		private void OnCollisionExit(MessageRouter.MessageData<Collision> msg)
		{
		}

		[Token(Token = "0x6000D26")]
		[Address(RVA = "0xDFC6D4", Offset = "0xDFC6D4", VA = "0xDFC6D4")]
		public CollisionEvents()
		{
		}

		[Token(Token = "0x6000D27")]
		[Address(RVA = "0xDFC724", Offset = "0xDFC724", VA = "0xDFC724")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985C34", Offset = "0x985C34")]
		private Collider <RegisterPorts>b__6_0()
		{
			return null;
		}

		[Token(Token = "0x6000D28")]
		[Address(RVA = "0xDFC72C", Offset = "0xDFC72C", VA = "0xDFC72C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985C44", Offset = "0x985C44")]
		private GameObject <RegisterPorts>b__6_1()
		{
			return null;
		}

		[Token(Token = "0x6000D29")]
		[Address(RVA = "0xDFC75C", Offset = "0xDFC75C", VA = "0xDFC75C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985C54", Offset = "0x985C54")]
		private ContactPoint <RegisterPorts>b__6_2()
		{
			return default(ContactPoint);
		}

		[Token(Token = "0x6000D2A")]
		[Address(RVA = "0xDFC7D0", Offset = "0xDFC7D0", VA = "0xDFC7D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985C64", Offset = "0x985C64")]
		private Collision <RegisterPorts>b__6_3()
		{
			return null;
		}
	}
	[Token(Token = "0x20001FF")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x96FD5C", Offset = "0x96FD5C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x96FD5C", Offset = "0x96FD5C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x96FD5C", Offset = "0x96FD5C")]
	public class MouseAgent2DEvents : MessageEventNode<Collider2D>
	{
		[Token(Token = "0x4000A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private FlowOutput onEnter;

		[Token(Token = "0x4000A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private FlowOutput onOver;

		[Token(Token = "0x4000A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private FlowOutput onExit;

		[Token(Token = "0x4000A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private FlowOutput onDown;

		[Token(Token = "0x4000A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private FlowOutput onUp;

		[Token(Token = "0x4000A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private FlowOutput onDrag;

		[Token(Token = "0x4000A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Collider2D receiver;

		[Token(Token = "0x4000A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private RaycastHit2D hit;

		[Token(Token = "0x6000D2B")]
		[Address(RVA = "0xE09FB0", Offset = "0xE09FB0", VA = "0xE09FB0", Slot = "39")]
		protected override string[] GetTargetMessageEvents()
		{
			return null;
		}

		[Token(Token = "0x6000D2C")]
		[Address(RVA = "0xE0A204", Offset = "0xE0A204", VA = "0xE0A204", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000D2D")]
		[Address(RVA = "0xE0A3C8", Offset = "0xE0A3C8", VA = "0xE0A3C8")]
		private void OnMouseEnter(MessageRouter.MessageData msg)
		{
		}

		[Token(Token = "0x6000D2E")]
		[Address(RVA = "0xE0A660", Offset = "0xE0A660", VA = "0xE0A660")]
		private void OnMouseOver(MessageRouter.MessageData msg)
		{
		}

		[Token(Token = "0x6000D2F")]
		[Address(RVA = "0xE0A730", Offset = "0xE0A730", VA = "0xE0A730")]
		private void OnMouseExit(MessageRouter.MessageData msg)
		{
		}

		[Token(Token = "0x6000D30")]
		[Address(RVA = "0xE0A800", Offset = "0xE0A800", VA = "0xE0A800")]
		private void OnMouseDown(MessageRouter.MessageData msg)
		{
		}

		[Token(Token = "0x6000D31")]
		[Address(RVA = "0xE0A8D0", Offset = "0xE0A8D0", VA = "0xE0A8D0")]
		private void OnMouseUp(MessageRouter.MessageData msg)
		{
		}

		[Token(Token = "0x6000D32")]
		[Address(RVA = "0xE0A9A0", Offset = "0xE0A9A0", VA = "0xE0A9A0")]
		private void OnMouseDrag(MessageRouter.MessageData msg)
		{
		}

		[Token(Token = "0x6000D33")]
		[Address(RVA = "0xE0A498", Offset = "0xE0A498", VA = "0xE0A498")]
		private void StoreHit()
		{
		}

		[Token(Token = "0x6000D34")]
		[Address(RVA = "0xE0AA70", Offset = "0xE0AA70", VA = "0xE0AA70")]
		public MouseAgent2DEvents()
		{
		}

		[Token(Token = "0x6000D35")]
		[Address(RVA = "0xE0AAC0", Offset = "0xE0AAC0", VA = "0xE0AAC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985C74", Offset = "0x985C74")]
		private Collider2D <RegisterPorts>b__9_0()
		{
			return null;
		}

		[Token(Token = "0x6000D36")]
		[Address(RVA = "0xE0AAC8", Offset = "0xE0AAC8", VA = "0xE0AAC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985C84", Offset = "0x985C84")]
		private RaycastHit2D <RegisterPorts>b__9_1()
		{
			return default(RaycastHit2D);
		}
	}
	[Token(Token = "0x2000200")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x96FDE4", Offset = "0x96FDE4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x96FDE4", Offset = "0x96FDE4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x96FDE4", Offset = "0x96FDE4")]
	public class MouseAgentEvents : MessageEventNode<Collider>
	{
		[Token(Token = "0x4000A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private FlowOutput onEnter;

		[Token(Token = "0x4000A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private FlowOutput onOver;

		[Token(Token = "0x4000A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private FlowOutput onExit;

		[Token(Token = "0x4000A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private FlowOutput onDown;

		[Token(Token = "0x4000A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private FlowOutput onUp;

		[Token(Token = "0x4000A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private FlowOutput onDrag;

		[Token(Token = "0x4000A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Collider receiver;

		[Token(Token = "0x4000A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private RaycastHit hit;

		[Token(Token = "0x6000D37")]
		[Address(RVA = "0xE0AAE4", Offset = "0xE0AAE4", VA = "0xE0AAE4", Slot = "39")]
		protected override string[] GetTargetMessageEvents()
		{
			return null;
		}

		[Token(Token = "0x6000D38")]
		[Address(RVA = "0xE0AD38", Offset = "0xE0AD38", VA = "0xE0AD38", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000D39")]
		[Address(RVA = "0xE0AEFC", Offset = "0xE0AEFC", VA = "0xE0AEFC")]
		private void OnMouseEnter(MessageRouter.MessageData msg)
		{
		}

		[Token(Token = "0x6000D3A")]
		[Address(RVA = "0xE0B0D8", Offset = "0xE0B0D8", VA = "0xE0B0D8")]
		private void OnMouseOver(MessageRouter.MessageData msg)
		{
		}

		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0xE0B1A8", Offset = "0xE0B1A8", VA = "0xE0B1A8")]
		private void OnMouseExit(MessageRouter.MessageData msg)
		{
		}

		[Token(Token = "0x6000D3C")]
		[Address(RVA = "0xE0B278", Offset = "0xE0B278", VA = "0xE0B278")]
		private void OnMouseDown(MessageRouter.MessageData msg)
		{
		}

		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0xE0B348", Offset = "0xE0B348", VA = "0xE0B348")]
		private void OnMouseUp(MessageRouter.MessageData msg)
		{
		}

		[Token(Token = "0x6000D3E")]
		[Address(RVA = "0xE0B418", Offset = "0xE0B418", VA = "0xE0B418")]
		private void OnMouseDrag(MessageRouter.MessageData msg)
		{
		}

		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0xE0AFCC", Offset = "0xE0AFCC", VA = "0xE0AFCC")]
		private void StoreHit()
		{
		}

		[Token(Token = "0x6000D40")]
		[Address(RVA = "0xE0B4E8", Offset = "0xE0B4E8", VA = "0xE0B4E8")]
		public MouseAgentEvents()
		{
		}

		[Token(Token = "0x6000D41")]
		[Address(RVA = "0xE0B538", Offset = "0xE0B538", VA = "0xE0B538")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985C94", Offset = "0x985C94")]
		private Collider <RegisterPorts>b__9_0()
		{
			return null;
		}

		[Token(Token = "0x6000D42")]
		[Address(RVA = "0xE0B540", Offset = "0xE0B540", VA = "0xE0B540")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985CA4", Offset = "0x985CA4")]
		private RaycastHit <RegisterPorts>b__9_1()
		{
			return default(RaycastHit);
		}
	}
	[Token(Token = "0x2000201")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x96FE6C", Offset = "0x96FE6C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x96FE6C", Offset = "0x96FE6C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x96FE6C", Offset = "0x96FE6C")]
	public class ObjectStateEvents : MessageEventNode<Transform>
	{
		[Token(Token = "0x4000A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private FlowOutput onEnable;

		[Token(Token = "0x4000A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private FlowOutput onDisable;

		[Token(Token = "0x4000A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private FlowOutput onDestroy;

		[Token(Token = "0x4000A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private GameObject receiver;

		[Token(Token = "0x6000D43")]
		[Address(RVA = "0xE0CD08", Offset = "0xE0CD08", VA = "0xE0CD08", Slot = "39")]
		protected override string[] GetTargetMessageEvents()
		{
			return null;
		}

		[Token(Token = "0x6000D44")]
		[Address(RVA = "0xE0CE60", Offset = "0xE0CE60", VA = "0xE0CE60", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000D45")]
		[Address(RVA = "0xE0CF68", Offset = "0xE0CF68", VA = "0xE0CF68")]
		private void OnEnable(MessageRouter.MessageData msg)
		{
		}

		[Token(Token = "0x6000D46")]
		[Address(RVA = "0xE0D048", Offset = "0xE0D048", VA = "0xE0D048")]
		private void OnDisable(MessageRouter.MessageData msg)
		{
		}

		[Token(Token = "0x6000D47")]
		[Address(RVA = "0xE0D128", Offset = "0xE0D128", VA = "0xE0D128")]
		private void OnDestroy(MessageRouter.MessageData msg)
		{
		}

		[Token(Token = "0x6000D48")]
		[Address(RVA = "0xE0D208", Offset = "0xE0D208", VA = "0xE0D208")]
		public ObjectStateEvents()
		{
		}

		[Token(Token = "0x6000D49")]
		[Address(RVA = "0xE0D258", Offset = "0xE0D258", VA = "0xE0D258")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985CB4", Offset = "0x985CB4")]
		private GameObject <RegisterPorts>b__5_0()
		{
			return null;
		}
	}
	[Token(Token = "0x2000202")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x96FEF4", Offset = "0x96FEF4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x96FEF4", Offset = "0x96FEF4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x96FEF4", Offset = "0x96FEF4")]
	public class ParticleCollision2DEvents : MessageEventNode<Collider2D>
	{
		[Token(Token = "0x4000A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private FlowOutput onCollision;

		[Token(Token = "0x4000A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Collider2D receiver;

		[Token(Token = "0x4000A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private ParticleSystem particle;

		[Token(Token = "0x4000A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private List<ParticleCollisionEvent> collisionEvents;

		[Token(Token = "0x6000D4A")]
		[Address(RVA = "0xE0D880", Offset = "0xE0D880", VA = "0xE0D880", Slot = "39")]
		protected override string[] GetTargetMessageEvents()
		{
			return null;
		}

		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0xE0D930", Offset = "0xE0D930", VA = "0xE0D930", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000D4C")]
		[Address(RVA = "0xE0DB40", Offset = "0xE0DB40", VA = "0xE0DB40")]
		private void OnParticleCollision(MessageRouter.MessageData<GameObject> msg)
		{
		}

		[Token(Token = "0x6000D4D")]
		[Address(RVA = "0xE0DCDC", Offset = "0xE0DCDC", VA = "0xE0DCDC")]
		public ParticleCollision2DEvents()
		{
		}

		[Token(Token = "0x6000D4E")]
		[Address(RVA = "0xE0DD2C", Offset = "0xE0DD2C", VA = "0xE0DD2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985CC4", Offset = "0x985CC4")]
		private Collider2D <RegisterPorts>b__5_0()
		{
			return null;
		}

		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0xE0DD34", Offset = "0xE0DD34", VA = "0xE0DD34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985CD4", Offset = "0x985CD4")]
		private ParticleSystem <RegisterPorts>b__5_1()
		{
			return null;
		}

		[Token(Token = "0x6000D50")]
		[Address(RVA = "0xE0DD3C", Offset = "0xE0DD3C", VA = "0xE0DD3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985CE4", Offset = "0x985CE4")]
		private Vector3 <RegisterPorts>b__5_2()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D51")]
		[Address(RVA = "0xE0DDDC", Offset = "0xE0DDDC", VA = "0xE0DDDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985CF4", Offset = "0x985CF4")]
		private Vector3 <RegisterPorts>b__5_3()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D52")]
		[Address(RVA = "0xE0DE7C", Offset = "0xE0DE7C", VA = "0xE0DE7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985D04", Offset = "0x985D04")]
		private Vector3 <RegisterPorts>b__5_4()
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x2000203")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x96FF7C", Offset = "0x96FF7C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x96FF7C", Offset = "0x96FF7C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x96FF7C", Offset = "0x96FF7C")]
	public class ParticleCollisionEvents : MessageEventNode<Collider>
	{
		[Token(Token = "0x4000A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private FlowOutput onCollision;

		[Token(Token = "0x4000A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Collider receiver;

		[Token(Token = "0x4000A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private ParticleSystem particle;

		[Token(Token = "0x4000A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private List<ParticleCollisionEvent> collisionEvents;

		[Token(Token = "0x6000D53")]
		[Address(RVA = "0xC91AC8", Offset = "0xC91AC8", VA = "0xC91AC8", Slot = "39")]
		protected override string[] GetTargetMessageEvents()
		{
			return null;
		}

		[Token(Token = "0x6000D54")]
		[Address(RVA = "0xC91B78", Offset = "0xC91B78", VA = "0xC91B78", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000D55")]
		[Address(RVA = "0xC91D88", Offset = "0xC91D88", VA = "0xC91D88")]
		private void OnParticleCollision(MessageRouter.MessageData<GameObject> msg)
		{
		}

		[Token(Token = "0x6000D56")]
		[Address(RVA = "0xC91F28", Offset = "0xC91F28", VA = "0xC91F28")]
		public ParticleCollisionEvents()
		{
		}

		[Token(Token = "0x6000D57")]
		[Address(RVA = "0xC91F78", Offset = "0xC91F78", VA = "0xC91F78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985D14", Offset = "0x985D14")]
		private Collider <RegisterPorts>b__5_0()
		{
			return null;
		}

		[Token(Token = "0x6000D58")]
		[Address(RVA = "0xC91F80", Offset = "0xC91F80", VA = "0xC91F80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985D24", Offset = "0x985D24")]
		private ParticleSystem <RegisterPorts>b__5_1()
		{
			return null;
		}

		[Token(Token = "0x6000D59")]
		[Address(RVA = "0xC91F88", Offset = "0xC91F88", VA = "0xC91F88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985D34", Offset = "0x985D34")]
		private Vector3 <RegisterPorts>b__5_2()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D5A")]
		[Address(RVA = "0xC92028", Offset = "0xC92028", VA = "0xC92028")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985D44", Offset = "0x985D44")]
		private Vector3 <RegisterPorts>b__5_3()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D5B")]
		[Address(RVA = "0xC920C8", Offset = "0xC920C8", VA = "0xC920C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985D54", Offset = "0x985D54")]
		private Vector3 <RegisterPorts>b__5_4()
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x2000204")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x970004", Offset = "0x970004")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x970004", Offset = "0x970004")]
	public class TransformEvents : MessageEventNode<Transform>
	{
		[Token(Token = "0x4000A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private FlowOutput onParentChanged;

		[Token(Token = "0x4000A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private FlowOutput onChildrenChanged;

		[Token(Token = "0x4000A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Transform receiver;

		[Token(Token = "0x4000A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Transform parent;

		[Token(Token = "0x4000A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private IEnumerable<Transform> children;

		[Token(Token = "0x6000D5C")]
		[Address(RVA = "0xC9D978", Offset = "0xC9D978", VA = "0xC9D978", Slot = "39")]
		protected override string[] GetTargetMessageEvents()
		{
			return null;
		}

		[Token(Token = "0x6000D5D")]
		[Address(RVA = "0xC9DA7C", Offset = "0xC9DA7C", VA = "0xC9DA7C", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000D5E")]
		[Address(RVA = "0xC9DC0C", Offset = "0xC9DC0C", VA = "0xC9DC0C")]
		private void OnTransformParentChanged(MessageRouter.MessageData msg)
		{
		}

		[Token(Token = "0x6000D5F")]
		[Address(RVA = "0xC9DD0C", Offset = "0xC9DD0C", VA = "0xC9DD0C")]
		private void OnTransformChildrenChanged(MessageRouter.MessageData msg)
		{
		}

		[Token(Token = "0x6000D60")]
		[Address(RVA = "0xC9DE0C", Offset = "0xC9DE0C", VA = "0xC9DE0C")]
		public TransformEvents()
		{
		}

		[Token(Token = "0x6000D61")]
		[Address(RVA = "0xC9DE5C", Offset = "0xC9DE5C", VA = "0xC9DE5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985D64", Offset = "0x985D64")]
		private Transform <RegisterPorts>b__6_0()
		{
			return null;
		}

		[Token(Token = "0x6000D62")]
		[Address(RVA = "0xC9DE64", Offset = "0xC9DE64", VA = "0xC9DE64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985D74", Offset = "0x985D74")]
		private Transform <RegisterPorts>b__6_1()
		{
			return null;
		}

		[Token(Token = "0x6000D63")]
		[Address(RVA = "0xC9DE6C", Offset = "0xC9DE6C", VA = "0xC9DE6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985D84", Offset = "0x985D84")]
		private IEnumerable<Transform> <RegisterPorts>b__6_2()
		{
			return null;
		}
	}
	[Token(Token = "0x2000205")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x970064", Offset = "0x970064")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x970064", Offset = "0x970064")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x970064", Offset = "0x970064")]
	public class Trigger2DEvents : MessageEventNode<Collider2D>
	{
		[Token(Token = "0x4000A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private FlowOutput onEnter;

		[Token(Token = "0x4000A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private FlowOutput onStay;

		[Token(Token = "0x4000A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private FlowOutput onExit;

		[Token(Token = "0x4000A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Collider2D receiver;

		[Token(Token = "0x4000A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private GameObject other;

		[Token(Token = "0x6000D64")]
		[Address(RVA = "0xC9DE74", Offset = "0xC9DE74", VA = "0xC9DE74", Slot = "39")]
		protected override string[] GetTargetMessageEvents()
		{
			return null;
		}

		[Token(Token = "0x6000D65")]
		[Address(RVA = "0xC9DFCC", Offset = "0xC9DFCC", VA = "0xC9DFCC", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000D66")]
		[Address(RVA = "0xC9E130", Offset = "0xC9E130", VA = "0xC9E130")]
		private void OnTriggerEnter2D(MessageRouter.MessageData<Collider2D> msg)
		{
		}

		[Token(Token = "0x6000D67")]
		[Address(RVA = "0xC9E260", Offset = "0xC9E260", VA = "0xC9E260")]
		private void OnTriggerStay2D(MessageRouter.MessageData<Collider2D> msg)
		{
		}

		[Token(Token = "0x6000D68")]
		[Address(RVA = "0xC9E390", Offset = "0xC9E390", VA = "0xC9E390")]
		private void OnTriggerExit2D(MessageRouter.MessageData<Collider2D> msg)
		{
		}

		[Token(Token = "0x6000D69")]
		[Address(RVA = "0xC9E4C0", Offset = "0xC9E4C0", VA = "0xC9E4C0")]
		public Trigger2DEvents()
		{
		}

		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0xC9E510", Offset = "0xC9E510", VA = "0xC9E510")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985D94", Offset = "0x985D94")]
		private Collider2D <RegisterPorts>b__6_0()
		{
			return null;
		}

		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0xC9E518", Offset = "0xC9E518", VA = "0xC9E518")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985DA4", Offset = "0x985DA4")]
		private GameObject <RegisterPorts>b__6_1()
		{
			return null;
		}
	}
	[Token(Token = "0x2000206")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x9700EC", Offset = "0x9700EC")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x9700EC", Offset = "0x9700EC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9700EC", Offset = "0x9700EC")]
	public class TriggerEvents : MessageEventNode<Collider>
	{
		[Token(Token = "0x4000A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private FlowOutput onEnter;

		[Token(Token = "0x4000A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private FlowOutput onStay;

		[Token(Token = "0x4000A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private FlowOutput onExit;

		[Token(Token = "0x4000A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Collider receiver;

		[Token(Token = "0x4000A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private GameObject other;

		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0xC9E520", Offset = "0xC9E520", VA = "0xC9E520", Slot = "39")]
		protected override string[] GetTargetMessageEvents()
		{
			return null;
		}

		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0xC9E678", Offset = "0xC9E678", VA = "0xC9E678", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0xC9E7DC", Offset = "0xC9E7DC", VA = "0xC9E7DC")]
		private void OnTriggerEnter(MessageRouter.MessageData<Collider> msg)
		{
		}

		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0xC9E90C", Offset = "0xC9E90C", VA = "0xC9E90C")]
		private void OnTriggerStay(MessageRouter.MessageData<Collider> msg)
		{
		}

		[Token(Token = "0x6000D70")]
		[Address(RVA = "0xC9EA3C", Offset = "0xC9EA3C", VA = "0xC9EA3C")]
		private void OnTriggerExit(MessageRouter.MessageData<Collider> msg)
		{
		}

		[Token(Token = "0x6000D71")]
		[Address(RVA = "0xC9EB6C", Offset = "0xC9EB6C", VA = "0xC9EB6C")]
		public TriggerEvents()
		{
		}

		[Token(Token = "0x6000D72")]
		[Address(RVA = "0xC9EBBC", Offset = "0xC9EBBC", VA = "0xC9EBBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985DB4", Offset = "0x985DB4")]
		private Collider <RegisterPorts>b__6_0()
		{
			return null;
		}

		[Token(Token = "0x6000D73")]
		[Address(RVA = "0xC9EBC4", Offset = "0xC9EBC4", VA = "0xC9EBC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985DC4", Offset = "0x985DC4")]
		private GameObject <RegisterPorts>b__6_1()
		{
			return null;
		}
	}
	[Token(Token = "0x2000207")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x970174", Offset = "0x970174")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x970174", Offset = "0x970174")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x970174", Offset = "0x970174")]
	public class UIButtonEvent : EventNode<Button>
	{
		[Token(Token = "0x4000A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private FlowOutput o;

		[Token(Token = "0x6000D74")]
		[Address(RVA = "0xC9EF50", Offset = "0xC9EF50", VA = "0xC9EF50", Slot = "26")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6000D75")]
		[Address(RVA = "0xC9F064", Offset = "0xC9F064", VA = "0xC9F064", Slot = "27")]
		public override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6000D76")]
		[Address(RVA = "0xC9F164", Offset = "0xC9F164", VA = "0xC9F164", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000D77")]
		[Address(RVA = "0xC9F22C", Offset = "0xC9F22C", VA = "0xC9F22C")]
		private void OnClick()
		{
		}

		[Token(Token = "0x6000D78")]
		[Address(RVA = "0xC9F28C", Offset = "0xC9F28C", VA = "0xC9F28C")]
		public UIButtonEvent()
		{
		}

		[Token(Token = "0x6000D79")]
		[Address(RVA = "0xC9F2DC", Offset = "0xC9F2DC", VA = "0xC9F2DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985DD4", Offset = "0x985DD4")]
		private Button <RegisterPorts>b__3_0()
		{
			return null;
		}
	}
	[Token(Token = "0x2000208")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x9701FC", Offset = "0x9701FC")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x9701FC", Offset = "0x9701FC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9701FC", Offset = "0x9701FC")]
	public class UIDropdownEvent : EventNode<Dropdown>
	{
		[Token(Token = "0x4000A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private FlowOutput o;

		[Token(Token = "0x4000A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private int value;

		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0xC9F33C", Offset = "0xC9F33C", VA = "0xC9F33C", Slot = "26")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0xC9F460", Offset = "0xC9F460", VA = "0xC9F460", Slot = "27")]
		public override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6000D7C")]
		[Address(RVA = "0xC9F570", Offset = "0xC9F570", VA = "0xC9F570", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0xC9F694", Offset = "0xC9F694", VA = "0xC9F694")]
		private void OnValueChanged(int value)
		{
		}

		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0xC9F6F8", Offset = "0xC9F6F8", VA = "0xC9F6F8")]
		public UIDropdownEvent()
		{
		}

		[Token(Token = "0x6000D7F")]
		[Address(RVA = "0xC9F748", Offset = "0xC9F748", VA = "0xC9F748")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985DE4", Offset = "0x985DE4")]
		private Dropdown <RegisterPorts>b__4_0()
		{
			return null;
		}

		[Token(Token = "0x6000D80")]
		[Address(RVA = "0xC9F7A8", Offset = "0xC9F7A8", VA = "0xC9F7A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985DF4", Offset = "0x985DF4")]
		private int <RegisterPorts>b__4_1()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000209")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x970284", Offset = "0x970284")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x970284", Offset = "0x970284")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x970284", Offset = "0x970284")]
	public class UIInputFieldEvent : EventNode<InputField>
	{
		[Token(Token = "0x4000A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private FlowOutput onValueChanged;

		[Token(Token = "0x4000A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private FlowOutput onEndEdit;

		[Token(Token = "0x4000A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private string value;

		[Token(Token = "0x6000D81")]
		[Address(RVA = "0xC9F7B0", Offset = "0xC9F7B0", VA = "0xC9F7B0", Slot = "26")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6000D82")]
		[Address(RVA = "0xC9F968", Offset = "0xC9F968", VA = "0xC9F968", Slot = "27")]
		public override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6000D83")]
		[Address(RVA = "0xC9FB0C", Offset = "0xC9FB0C", VA = "0xC9FB0C", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000D84")]
		[Address(RVA = "0xC9FC50", Offset = "0xC9FC50", VA = "0xC9FC50")]
		private void OnValueChanged(string value)
		{
		}

		[Token(Token = "0x6000D85")]
		[Address(RVA = "0xC9FCB4", Offset = "0xC9FCB4", VA = "0xC9FCB4")]
		private void OnEndEdit(string value)
		{
		}

		[Token(Token = "0x6000D86")]
		[Address(RVA = "0xC9FD18", Offset = "0xC9FD18", VA = "0xC9FD18")]
		public UIInputFieldEvent()
		{
		}

		[Token(Token = "0x6000D87")]
		[Address(RVA = "0xC9FD68", Offset = "0xC9FD68", VA = "0xC9FD68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985E04", Offset = "0x985E04")]
		private InputField <RegisterPorts>b__5_0()
		{
			return null;
		}

		[Token(Token = "0x6000D88")]
		[Address(RVA = "0xC9FDC8", Offset = "0xC9FDC8", VA = "0xC9FDC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985E14", Offset = "0x985E14")]
		private string <RegisterPorts>b__5_1()
		{
			return null;
		}
	}
	[Token(Token = "0x200020A")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x97030C", Offset = "0x97030C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x97030C", Offset = "0x97030C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x97030C", Offset = "0x97030C")]
	public class UIPointerEvents : MessageEventNode<Transform>
	{
		[Token(Token = "0x20006F7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9791FC", Offset = "0x9791FC")]
		private sealed class <UpdatePressed>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIPointerEvents <>4__this;

			[Token(Token = "0x1700037F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60024D1")]
				[Address(RVA = "0xCA088C", Offset = "0xCA088C", VA = "0xCA088C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000380")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60024D3")]
				[Address(RVA = "0xCA08FC", Offset = "0xCA08FC", VA = "0xCA08FC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024CE")]
			[Address(RVA = "0xCA043C", Offset = "0xCA043C", VA = "0xCA043C")]
			[DebuggerHidden]
			public <UpdatePressed>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x60024CF")]
			[Address(RVA = "0xCA07E0", Offset = "0xCA07E0", VA = "0xCA07E0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60024D0")]
			[Address(RVA = "0xCA07E4", Offset = "0xCA07E4", VA = "0xCA07E4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60024D2")]
			[Address(RVA = "0xCA0894", Offset = "0xCA0894", VA = "0xCA0894", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private FlowOutput onPointerDown;

		[Token(Token = "0x4000A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private FlowOutput onPointerPressed;

		[Token(Token = "0x4000A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private FlowOutput onPointerUp;

		[Token(Token = "0x4000A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private FlowOutput onPointerEnter;

		[Token(Token = "0x4000A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private FlowOutput onPointerExit;

		[Token(Token = "0x4000A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private FlowOutput onPointerClick;

		[Token(Token = "0x4000A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private GameObject receiver;

		[Token(Token = "0x4000A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private PointerEventData eventData;

		[Token(Token = "0x4000A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private bool updatePressed;

		[Token(Token = "0x6000D89")]
		[Address(RVA = "0xC9FDD0", Offset = "0xC9FDD0", VA = "0xC9FDD0", Slot = "39")]
		protected override string[] GetTargetMessageEvents()
		{
			return null;
		}

		[Token(Token = "0x6000D8A")]
		[Address(RVA = "0xC9FFD0", Offset = "0xC9FFD0", VA = "0xC9FFD0", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000D8B")]
		[Address(RVA = "0xCA0194", Offset = "0xCA0194", VA = "0xCA0194")]
		private void OnPointerDown(MessageRouter.MessageData<PointerEventData> msg)
		{
		}

		[Token(Token = "0x6000D8C")]
		[Address(RVA = "0xCA0330", Offset = "0xCA0330", VA = "0xCA0330")]
		private void OnPointerUp(MessageRouter.MessageData<PointerEventData> msg)
		{
		}

		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0xCA02BC", Offset = "0xCA02BC", VA = "0xCA02BC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x985E24", Offset = "0x985E24")]
		private IEnumerator UpdatePressed()
		{
			return null;
		}

		[Token(Token = "0x6000D8E")]
		[Address(RVA = "0xCA0468", Offset = "0xCA0468", VA = "0xCA0468")]
		private void OnPointerEnter(MessageRouter.MessageData<PointerEventData> msg)
		{
		}

		[Token(Token = "0x6000D8F")]
		[Address(RVA = "0xCA0570", Offset = "0xCA0570", VA = "0xCA0570")]
		private void OnPointerExit(MessageRouter.MessageData<PointerEventData> msg)
		{
		}

		[Token(Token = "0x6000D90")]
		[Address(RVA = "0xCA0678", Offset = "0xCA0678", VA = "0xCA0678")]
		private void OnPointerClick(MessageRouter.MessageData<PointerEventData> msg)
		{
		}

		[Token(Token = "0x6000D91")]
		[Address(RVA = "0xCA0780", Offset = "0xCA0780", VA = "0xCA0780")]
		public UIPointerEvents()
		{
		}

		[Token(Token = "0x6000D92")]
		[Address(RVA = "0xCA07D0", Offset = "0xCA07D0", VA = "0xCA07D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985E88", Offset = "0x985E88")]
		private GameObject <RegisterPorts>b__10_0()
		{
			return null;
		}

		[Token(Token = "0x6000D93")]
		[Address(RVA = "0xCA07D8", Offset = "0xCA07D8", VA = "0xCA07D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985E98", Offset = "0x985E98")]
		private PointerEventData <RegisterPorts>b__10_1()
		{
			return null;
		}
	}
	[Token(Token = "0x200020B")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x970394", Offset = "0x970394")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x970394", Offset = "0x970394")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x970394", Offset = "0x970394")]
	public class UIScrollbarEvent : EventNode<Scrollbar>
	{
		[Token(Token = "0x4000A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private FlowOutput o;

		[Token(Token = "0x4000A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float value;

		[Token(Token = "0x6000D94")]
		[Address(RVA = "0xCA0904", Offset = "0xCA0904", VA = "0xCA0904", Slot = "26")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6000D95")]
		[Address(RVA = "0xCA0A28", Offset = "0xCA0A28", VA = "0xCA0A28", Slot = "27")]
		public override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6000D96")]
		[Address(RVA = "0xCA0B38", Offset = "0xCA0B38", VA = "0xCA0B38", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000D97")]
		[Address(RVA = "0xCA0C5C", Offset = "0xCA0C5C", VA = "0xCA0C5C")]
		private void OnValueChanged(float value)
		{
		}

		[Token(Token = "0x6000D98")]
		[Address(RVA = "0xCA0CC0", Offset = "0xCA0CC0", VA = "0xCA0CC0")]
		public UIScrollbarEvent()
		{
		}

		[Token(Token = "0x6000D99")]
		[Address(RVA = "0xCA0D10", Offset = "0xCA0D10", VA = "0xCA0D10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985EA8", Offset = "0x985EA8")]
		private Scrollbar <RegisterPorts>b__4_0()
		{
			return null;
		}

		[Token(Token = "0x6000D9A")]
		[Address(RVA = "0xCA0D70", Offset = "0xCA0D70", VA = "0xCA0D70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985EB8", Offset = "0x985EB8")]
		private float <RegisterPorts>b__4_1()
		{
			return default(float);
		}
	}
	[Token(Token = "0x200020C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x97041C", Offset = "0x97041C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x97041C", Offset = "0x97041C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x97041C", Offset = "0x97041C")]
	public class UISliderEvent : EventNode<Slider>
	{
		[Token(Token = "0x4000A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private FlowOutput o;

		[Token(Token = "0x4000A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float value;

		[Token(Token = "0x6000D9B")]
		[Address(RVA = "0xCA0D78", Offset = "0xCA0D78", VA = "0xCA0D78", Slot = "26")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6000D9C")]
		[Address(RVA = "0xCA0E9C", Offset = "0xCA0E9C", VA = "0xCA0E9C", Slot = "27")]
		public override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6000D9D")]
		[Address(RVA = "0xCA0FAC", Offset = "0xCA0FAC", VA = "0xCA0FAC", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000D9E")]
		[Address(RVA = "0xCA10D0", Offset = "0xCA10D0", VA = "0xCA10D0")]
		private void OnValueChanged(float value)
		{
		}

		[Token(Token = "0x6000D9F")]
		[Address(RVA = "0xCA1134", Offset = "0xCA1134", VA = "0xCA1134")]
		public UISliderEvent()
		{
		}

		[Token(Token = "0x6000DA0")]
		[Address(RVA = "0xCA1184", Offset = "0xCA1184", VA = "0xCA1184")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985EC8", Offset = "0x985EC8")]
		private Slider <RegisterPorts>b__4_0()
		{
			return null;
		}

		[Token(Token = "0x6000DA1")]
		[Address(RVA = "0xCA11E4", Offset = "0xCA11E4", VA = "0xCA11E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985ED8", Offset = "0x985ED8")]
		private float <RegisterPorts>b__4_1()
		{
			return default(float);
		}
	}
	[Token(Token = "0x200020D")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x9704A4", Offset = "0x9704A4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x9704A4", Offset = "0x9704A4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9704A4", Offset = "0x9704A4")]
	public class UIToggleEvent : EventNode<UnityEngine.UI.Toggle>
	{
		[Token(Token = "0x4000A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private FlowOutput o;

		[Token(Token = "0x4000A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool state;

		[Token(Token = "0x6000DA2")]
		[Address(RVA = "0xCA11EC", Offset = "0xCA11EC", VA = "0xCA11EC", Slot = "26")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6000DA3")]
		[Address(RVA = "0xCA1300", Offset = "0xCA1300", VA = "0xCA1300", Slot = "27")]
		public override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0xCA1400", Offset = "0xCA1400", VA = "0xCA1400", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0xCA1524", Offset = "0xCA1524", VA = "0xCA1524")]
		private void OnValueChanged(bool state)
		{
		}

		[Token(Token = "0x6000DA6")]
		[Address(RVA = "0xCA158C", Offset = "0xCA158C", VA = "0xCA158C")]
		public UIToggleEvent()
		{
		}

		[Token(Token = "0x6000DA7")]
		[Address(RVA = "0xCA15DC", Offset = "0xCA15DC", VA = "0xCA15DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985EE8", Offset = "0x985EE8")]
		private UnityEngine.UI.Toggle <RegisterPorts>b__4_0()
		{
			return null;
		}

		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0xCA163C", Offset = "0xCA163C", VA = "0xCA163C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985EF8", Offset = "0x985EF8")]
		private bool <RegisterPorts>b__4_1()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200020E")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x97052C", Offset = "0x97052C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x97052C", Offset = "0x97052C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x97052C", Offset = "0x97052C")]
	public class VisibilityEvents : MessageEventNode<Transform>
	{
		[Token(Token = "0x4000A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private FlowOutput onVisible;

		[Token(Token = "0x4000A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private FlowOutput onInvisible;

		[Token(Token = "0x4000A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private GameObject receiver;

		[Token(Token = "0x6000DA9")]
		[Address(RVA = "0xCA3E48", Offset = "0xCA3E48", VA = "0xCA3E48", Slot = "39")]
		protected override string[] GetTargetMessageEvents()
		{
			return null;
		}

		[Token(Token = "0x6000DAA")]
		[Address(RVA = "0xCA3F4C", Offset = "0xCA3F4C", VA = "0xCA3F4C", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000DAB")]
		[Address(RVA = "0xCA4034", Offset = "0xCA4034", VA = "0xCA4034")]
		private void OnBecameVisible(MessageRouter.MessageData msg)
		{
		}

		[Token(Token = "0x6000DAC")]
		[Address(RVA = "0xCA4118", Offset = "0xCA4118", VA = "0xCA4118")]
		private void OnBecameInvisible(MessageRouter.MessageData msg)
		{
		}

		[Token(Token = "0x6000DAD")]
		[Address(RVA = "0xCA41FC", Offset = "0xCA41FC", VA = "0xCA41FC")]
		public VisibilityEvents()
		{
		}

		[Token(Token = "0x6000DAE")]
		[Address(RVA = "0xCA424C", Offset = "0xCA424C", VA = "0xCA424C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985F08", Offset = "0x985F08")]
		private GameObject <RegisterPorts>b__4_0()
		{
			return null;
		}
	}
	[Token(Token = "0x200020F")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x9705B4", Offset = "0x9705B4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x9705B4", Offset = "0x9705B4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9705B4", Offset = "0x9705B4")]
	public class ConditionalUpdateEvent : EventNode, IUpdatable
	{
		[Token(Token = "0x4000A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private FlowOutput becameTrue;

		[Token(Token = "0x4000A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private FlowOutput becameFalse;

		[Token(Token = "0x4000A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private ValueInput<bool> condition;

		[Token(Token = "0x4000A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool lastState;

		[Token(Token = "0x6000DAF")]
		[Address(RVA = "0xDFC7D8", Offset = "0xDFC7D8", VA = "0xDFC7D8", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0xDFC888", Offset = "0xDFC888", VA = "0xDFC888", Slot = "39")]
		public void Update()
		{
		}

		[Token(Token = "0x6000DB1")]
		[Address(RVA = "0xDFC994", Offset = "0xDFC994", VA = "0xDFC994")]
		public ConditionalUpdateEvent()
		{
		}
	}
	[Token(Token = "0x2000210")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x97063C", Offset = "0x97063C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x97063C", Offset = "0x97063C")]
	public class DebugEvent : EventNode, IUpdatable
	{
		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0xDFFB88", Offset = "0xDFFB88", VA = "0xDFFB88", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0xDFFBE8", Offset = "0xDFFBE8", VA = "0xDFFBE8", Slot = "39")]
		public void Update()
		{
		}

		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0xDFFBEC", Offset = "0xDFFBEC", VA = "0xDFFBEC")]
		public DebugEvent()
		{
		}
	}
	[Token(Token = "0x2000211")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x97069C", Offset = "0x97069C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x97069C", Offset = "0x97069C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x97069C", Offset = "0x97069C")]
	public class OscillatorEvent : EventNode, IUpdatable
	{
		[Token(Token = "0x4000A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public BBParameter<AnimationCurve> curve;

		[Token(Token = "0x4000A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float time;

		[Token(Token = "0x4000A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float value;

		[Token(Token = "0x4000A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private FlowOutput hi;

		[Token(Token = "0x4000A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private FlowOutput low;

		[Token(Token = "0x6000DB5")]
		[Address(RVA = "0xE0D260", Offset = "0xE0D260", VA = "0xE0D260")]
		public OscillatorEvent()
		{
		}

		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0xE0D4B0", Offset = "0xE0D4B0", VA = "0xE0D4B0", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0xE0D598", Offset = "0xE0D598", VA = "0xE0D598", Slot = "26")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0xE0D5A0", Offset = "0xE0D5A0", VA = "0xE0D5A0", Slot = "39")]
		public void Update()
		{
		}

		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0xE0D6D0", Offset = "0xE0D6D0", VA = "0xE0D6D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985F18", Offset = "0x985F18")]
		private float <RegisterPorts>b__6_0()
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000212")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x970724", Offset = "0x970724")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x970724", Offset = "0x970724")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x970724", Offset = "0x970724")]
	public class VariableChangedEvent : EventNode
	{
		[Token(Token = "0x4000A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[BlackboardOnly]
		public BBObjectParameter targetVariable;

		[Token(Token = "0x4000A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private FlowOutput fOut;

		[Token(Token = "0x4000A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private object newValue;

		[Token(Token = "0x1700013B")]
		public override string name
		{
			[Token(Token = "0x6000DBA")]
			[Address(RVA = "0xCA33C4", Offset = "0xCA33C4", VA = "0xCA33C4", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0xCA342C", Offset = "0xCA342C", VA = "0xCA342C", Slot = "26")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0xCA3514", Offset = "0xCA3514", VA = "0xCA3514", Slot = "27")]
		public override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0xCA35FC", Offset = "0xCA35FC", VA = "0xCA35FC", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0xCA36E0", Offset = "0xCA36E0", VA = "0xCA36E0")]
		private void OnValueChanged(string name, object value)
		{
		}

		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0xCA3744", Offset = "0xCA3744", VA = "0xCA3744")]
		private void OnVariableRefChange(Variable newVarRef)
		{
		}

		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0xCA37BC", Offset = "0xCA37BC", VA = "0xCA37BC")]
		public VariableChangedEvent()
		{
		}

		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0xCA37C4", Offset = "0xCA37C4", VA = "0xCA37C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985F28", Offset = "0x985F28")]
		private object <RegisterPorts>b__7_0()
		{
			return null;
		}
	}
	[Token(Token = "0x2000213")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x9707AC", Offset = "0x9707AC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9707AC", Offset = "0x9707AC")]
	[AttributeAttribute(Name = "ContextDefinedInputsAttribute", RVA = "0x9707AC", Offset = "0x9707AC")]
	public class Chance : FlowControlNode
	{
		[Token(Token = "0x20006F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97920C", Offset = "0x97920C")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4001E77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ValueInput<float> min;

			[Token(Token = "0x4001E78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ValueInput<float> max;

			[Token(Token = "0x4001E79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ValueInput<float> chance;

			[Token(Token = "0x4001E7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public FlowOutput success;

			[Token(Token = "0x4001E7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public FlowOutput failure;

			[Token(Token = "0x60024D4")]
			[Address(RVA = "0xDFAB18", Offset = "0xDFAB18", VA = "0xDFAB18")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x60024D5")]
			[Address(RVA = "0xDFAB28", Offset = "0xDFAB28", VA = "0xDFAB28")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0xDFA948", Offset = "0xDFA948", VA = "0xDFA948", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000DC3")]
		[Address(RVA = "0xDFAB20", Offset = "0xDFAB20", VA = "0xDFAB20")]
		public Chance()
		{
		}
	}
	[Token(Token = "0x2000214")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x970874", Offset = "0x970874")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x970874", Offset = "0x970874")]
	[AttributeAttribute(Name = "ContextDefinedInputsAttribute", RVA = "0x970874", Offset = "0x970874")]
	[AttributeAttribute(Name = "ContextDefinedOutputsAttribute", RVA = "0x970874", Offset = "0x970874")]
	public class Cooldown : FlowControlNode
	{
		[Token(Token = "0x20006F9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97921C", Offset = "0x97921C")]
		private sealed class <CountDown>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Cooldown <>4__this;

			[Token(Token = "0x4001E7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Flow f;

			[Token(Token = "0x4001E80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private float <total>5__2;

			[Token(Token = "0x17000381")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60024D9")]
				[Address(RVA = "0xDFD2E4", Offset = "0xDFD2E4", VA = "0xDFD2E4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000382")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60024DB")]
				[Address(RVA = "0xDFD354", Offset = "0xDFD354", VA = "0xDFD354", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024D6")]
			[Address(RVA = "0xDFCF20", Offset = "0xDFCF20", VA = "0xDFCF20")]
			[DebuggerHidden]
			public <CountDown>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x60024D7")]
			[Address(RVA = "0xDFD040", Offset = "0xDFD040", VA = "0xDFD040", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60024D8")]
			[Address(RVA = "0xDFD044", Offset = "0xDFD044", VA = "0xDFD044", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60024DA")]
			[Address(RVA = "0xDFD2EC", Offset = "0xDFD2EC", VA = "0xDFD2EC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine coroutine;

		[Token(Token = "0x4000A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float remaining;

		[Token(Token = "0x4000A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float remainingNormalized;

		[Token(Token = "0x4000A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private FlowOutput start;

		[Token(Token = "0x4000A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private FlowOutput finish;

		[Token(Token = "0x4000A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private FlowOutput update;

		[Token(Token = "0x4000A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private ValueInput<float> time;

		[Token(Token = "0x1700013C")]
		public override string name
		{
			[Token(Token = "0x6000DC4")]
			[Address(RVA = "0xDFCA7C", Offset = "0xDFCA7C", VA = "0xDFCA7C", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DC5")]
		[Address(RVA = "0xDFCB0C", Offset = "0xDFCB0C", VA = "0xDFCB0C", Slot = "26")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6000DC6")]
		[Address(RVA = "0xDFCB14", Offset = "0xDFCB14", VA = "0xDFCB14", Slot = "27")]
		public override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6000DC7")]
		[Address(RVA = "0xDFCB44", Offset = "0xDFCB44", VA = "0xDFCB44", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000DC8")]
		[Address(RVA = "0xDFCD94", Offset = "0xDFCD94", VA = "0xDFCD94")]
		private void Begin(Flow f)
		{
		}

		[Token(Token = "0x6000DC9")]
		[Address(RVA = "0xDFCEF0", Offset = "0xDFCEF0", VA = "0xDFCEF0")]
		private void Cancel(Flow f)
		{
		}

		[Token(Token = "0x6000DCA")]
		[Address(RVA = "0xDFCE04", Offset = "0xDFCE04", VA = "0xDFCE04")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x985F38", Offset = "0x985F38")]
		private IEnumerator CountDown(Flow f)
		{
			return null;
		}

		[Token(Token = "0x6000DCB")]
		[Address(RVA = "0xDFCF4C", Offset = "0xDFCF4C", VA = "0xDFCF4C")]
		public Cooldown()
		{
		}

		[Token(Token = "0x6000DCC")]
		[Address(RVA = "0xDFCF54", Offset = "0xDFCF54", VA = "0xDFCF54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985F9C", Offset = "0x985F9C")]
		private float <RegisterPorts>b__11_0()
		{
			return default(float);
		}

		[Token(Token = "0x6000DCD")]
		[Address(RVA = "0xDFCFCC", Offset = "0xDFCFCC", VA = "0xDFCFCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985FAC", Offset = "0x985FAC")]
		private float <RegisterPorts>b__11_1()
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000215")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x970978", Offset = "0x970978")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x970978", Offset = "0x970978")]
	public class DoOnce : FlowControlNode
	{
		[Token(Token = "0x20006FA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97922C", Offset = "0x97922C")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4001E81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DoOnce <>4__this;

			[Token(Token = "0x4001E82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FlowOutput o;

			[Token(Token = "0x60024DC")]
			[Address(RVA = "0xE0073C", Offset = "0xE0073C", VA = "0xE0073C")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x60024DD")]
			[Address(RVA = "0xE0074C", Offset = "0xE0074C", VA = "0xE0074C")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}

			[Token(Token = "0x60024DE")]
			[Address(RVA = "0xE007F0", Offset = "0xE007F0", VA = "0xE007F0")]
			internal void <RegisterPorts>b__1(Flow f)
			{
			}
		}

		[Token(Token = "0x4000A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool called;

		[Token(Token = "0x6000DCE")]
		[Address(RVA = "0xE005F4", Offset = "0xE005F4", VA = "0xE005F4", Slot = "26")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6000DCF")]
		[Address(RVA = "0xE005FC", Offset = "0xE005FC", VA = "0xE005FC", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000DD0")]
		[Address(RVA = "0xE00744", Offset = "0xE00744", VA = "0xE00744")]
		public DoOnce()
		{
		}
	}
	[Token(Token = "0x2000216")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x9709D8", Offset = "0x9709D8")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x9709D8", Offset = "0x9709D8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9709D8", Offset = "0x9709D8")]
	[AttributeAttribute(Name = "ContextDefinedOutputsAttribute", RVA = "0x9709D8", Offset = "0x9709D8")]
	public class ReadFlowParameter<T> : FlowControlNode
	{
		[Token(Token = "0x20006FB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97923C", Offset = "0x97923C")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4001E83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ReadFlowParameter<T> <>4__this;

			[Token(Token = "0x4001E84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<string> pName;

			[Token(Token = "0x4001E85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x60024DF")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x60024E0")]
			internal T <RegisterPorts>b__0()
			{
				return (T)null;
			}

			[Token(Token = "0x60024E1")]
			internal void <RegisterPorts>b__1(Flow f)
			{
			}
		}

		[Token(Token = "0x4000A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T flowValue;

		[Token(Token = "0x6000DD1")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000DD2")]
		public ReadFlowParameter()
		{
		}
	}
	[Token(Token = "0x2000217")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x970AC8", Offset = "0x970AC8")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x970AC8", Offset = "0x970AC8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x970AC8", Offset = "0x970AC8")]
	[AttributeAttribute(Name = "ContextDefinedInputsAttribute", RVA = "0x970AC8", Offset = "0x970AC8")]
	public class WriteFlowParameter<T> : FlowControlNode
	{
		[Token(Token = "0x20006FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97924C", Offset = "0x97924C")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4001E86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<string> pName;

			[Token(Token = "0x4001E87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T> pValue;

			[Token(Token = "0x4001E88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x60024E2")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x60024E3")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x6000DD3")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000DD4")]
		public WriteFlowParameter()
		{
		}
	}
	[Token(Token = "0x2000218")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x970BB8", Offset = "0x970BB8")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x970BB8", Offset = "0x970BB8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x970BB8", Offset = "0x970BB8")]
	[AttributeAttribute(Name = "ContextDefinedOutputsAttribute", RVA = "0x970BB8", Offset = "0x970BB8")]
	[AttributeAttribute(Name = "DeserializeFromAttribute", RVA = "0x970BB8", Offset = "0x970BB8")]
	public class LatchBool : FlowControlNode
	{
		[Token(Token = "0x20006FD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97925C", Offset = "0x97925C")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4001E89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LatchBool <>4__this;

			[Token(Token = "0x4001E8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FlowOutput o;

			[Token(Token = "0x60024E4")]
			[Address(RVA = "0xE06188", Offset = "0xE06188", VA = "0xE06188")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x60024E5")]
			[Address(RVA = "0xE06198", Offset = "0xE06198", VA = "0xE06198")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}

			[Token(Token = "0x60024E6")]
			[Address(RVA = "0xE06224", Offset = "0xE06224", VA = "0xE06224")]
			internal void <RegisterPorts>b__1(Flow f)
			{
			}

			[Token(Token = "0x60024E7")]
			[Address(RVA = "0xE062AC", Offset = "0xE062AC", VA = "0xE062AC")]
			internal bool <RegisterPorts>b__2()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool latched;

		[Token(Token = "0x6000DD5")]
		[Address(RVA = "0xE05FEC", Offset = "0xE05FEC", VA = "0xE05FEC", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000DD6")]
		[Address(RVA = "0xE06190", Offset = "0xE06190", VA = "0xE06190")]
		public LatchBool()
		{
		}
	}
	[Token(Token = "0x2000219")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x970CCC", Offset = "0x970CCC")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x970CCC", Offset = "0x970CCC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x970CCC", Offset = "0x970CCC")]
	[AttributeAttribute(Name = "ContextDefinedOutputsAttribute", RVA = "0x970CCC", Offset = "0x970CCC")]
	public class LatchInt : FlowControlNode
	{
		[Token(Token = "0x20006FE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97926C", Offset = "0x97926C")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4001E8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LatchInt <>4__this;

			[Token(Token = "0x4001E8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FlowOutput o;

			[Token(Token = "0x60024E8")]
			[Address(RVA = "0xE064C4", Offset = "0xE064C4", VA = "0xE064C4")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x60024E9")]
			[Address(RVA = "0xE064E4", Offset = "0xE064E4", VA = "0xE064E4")]
			internal int <RegisterPorts>b__0()
			{
				return default(int);
			}
		}

		[Token(Token = "0x20006FF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97927C", Offset = "0x97927C")]
		private sealed class <>c__DisplayClass2_1
		{
			[Token(Token = "0x4001E8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int i;

			[Token(Token = "0x4001E8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass2_0 CS$<>8__locals1;

			[Token(Token = "0x60024EA")]
			[Address(RVA = "0xE064CC", Offset = "0xE064CC", VA = "0xE064CC")]
			public <>c__DisplayClass2_1()
			{
			}

			[Token(Token = "0x60024EB")]
			[Address(RVA = "0xE06510", Offset = "0xE06510", VA = "0xE06510")]
			internal void <RegisterPorts>b__1(Flow f)
			{
			}
		}

		[Token(Token = "0x4000A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		[ExposeField]
		[GatherPortsCallback]
		[AttributeAttribute(Name = "MinValueAttribute", RVA = "0x97F24C", Offset = "0x97F24C")]
		[DelayedField]
		private int _portCount;

		[Token(Token = "0x4000A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private int latched;

		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0xE062D8", Offset = "0xE062D8", VA = "0xE062D8", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000DD8")]
		[Address(RVA = "0xE064D4", Offset = "0xE064D4", VA = "0xE064D4")]
		public LatchInt()
		{
		}
	}
	[Token(Token = "0x200021A")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x970DBC", Offset = "0x970DBC")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x970DBC", Offset = "0x970DBC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x970DBC", Offset = "0x970DBC")]
	public class ANDMerge : FlowControlNode
	{
		[Token(Token = "0x2000700")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97928C", Offset = "0x97928C")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4001E8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int i;

			[Token(Token = "0x4001E90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ANDMerge <>4__this;

			[Token(Token = "0x60024EC")]
			[Address(RVA = "0xDF6F04", Offset = "0xDF6F04", VA = "0xDF6F04")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x60024ED")]
			[Address(RVA = "0xDF70AC", Offset = "0xDF70AC", VA = "0xDF70AC")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x4000A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		[ExposeField]
		[GatherPortsCallback]
		[AttributeAttribute(Name = "MinValueAttribute", RVA = "0x97F2B8", Offset = "0x97F2B8")]
		[DelayedField]
		private int _portCount;

		[Token(Token = "0x4000A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private FlowOutput fOut;

		[Token(Token = "0x4000A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private int[] calls;

		[Token(Token = "0x4000A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int lastFrameCall;

		[Token(Token = "0x6000DD9")]
		[Address(RVA = "0xDF6D94", Offset = "0xDF6D94", VA = "0xDF6D94", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000DDA")]
		[Address(RVA = "0xDF6F0C", Offset = "0xDF6F0C", VA = "0xDF6F0C")]
		private void Check(int index, Flow f)
		{
		}

		[Token(Token = "0x6000DDB")]
		[Address(RVA = "0xDF7094", Offset = "0xDF7094", VA = "0xDF7094")]
		public ANDMerge()
		{
		}
	}
	[Token(Token = "0x200021B")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x970E44", Offset = "0x970E44")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x970E44", Offset = "0x970E44")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x970E44", Offset = "0x970E44")]
	public class ORMerge : FlowControlNode
	{
		[Token(Token = "0x2000701")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97929C", Offset = "0x97929C")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4001E91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int i;

			[Token(Token = "0x4001E92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ORMerge <>4__this;

			[Token(Token = "0x60024EE")]
			[Address(RVA = "0xE0CC00", Offset = "0xE0CC00", VA = "0xE0CC00")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x60024EF")]
			[Address(RVA = "0xE0CCA4", Offset = "0xE0CCA4", VA = "0xE0CCA4")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x4000A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		[ExposeField]
		[GatherPortsCallback]
		[AttributeAttribute(Name = "MinValueAttribute", RVA = "0x97F324", Offset = "0x97F324")]
		[DelayedField]
		private int _portCount;

		[Token(Token = "0x4000A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private FlowOutput fOut;

		[Token(Token = "0x4000A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private int lastFrameCall;

		[Token(Token = "0x6000DDC")]
		[Address(RVA = "0xE0CAA8", Offset = "0xE0CAA8", VA = "0xE0CAA8", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000DDD")]
		[Address(RVA = "0xE0CC08", Offset = "0xE0CC08", VA = "0xE0CC08")]
		private void Check(int index, Flow f)
		{
		}

		[Token(Token = "0x6000DDE")]
		[Address(RVA = "0xE0CC94", Offset = "0xE0CC94", VA = "0xE0CC94")]
		public ORMerge()
		{
		}
	}
	[Token(Token = "0x200021C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x970ECC", Offset = "0x970ECC")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x970ECC", Offset = "0x970ECC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x970ECC", Offset = "0x970ECC")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x970ECC", Offset = "0x970ECC")]
	public class XORMerge : FlowControlNode
	{
		[Token(Token = "0x2000702")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9792AC", Offset = "0x9792AC")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4001E93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int i;

			[Token(Token = "0x4001E94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public XORMerge <>4__this;

			[Token(Token = "0x60024F0")]
			[Address(RVA = "0xCA57BC", Offset = "0xCA57BC", VA = "0xCA57BC")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x60024F1")]
			[Address(RVA = "0xCA5924", Offset = "0xCA5924", VA = "0xCA5924")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x4000A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		[ExposeField]
		[GatherPortsCallback]
		[AttributeAttribute(Name = "MinValueAttribute", RVA = "0x97F390", Offset = "0x97F390")]
		[DelayedField]
		private int _portCount;

		[Token(Token = "0x4000A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private FlowOutput fOut;

		[Token(Token = "0x4000A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private int[] calls;

		[Token(Token = "0x4000A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int lastFrameCall;

		[Token(Token = "0x6000DDF")]
		[Address(RVA = "0xCA564C", Offset = "0xCA564C", VA = "0xCA564C", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000DE0")]
		[Address(RVA = "0xCA57C4", Offset = "0xCA57C4", VA = "0xCA57C4")]
		private void Check(int index, Flow f)
		{
		}

		[Token(Token = "0x6000DE1")]
		[Address(RVA = "0xCA5914", Offset = "0xCA5914", VA = "0xCA5914")]
		public XORMerge()
		{
		}
	}
	[Token(Token = "0x200021D")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x970F64", Offset = "0x970F64")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0x970F64", Offset = "0x970F64")]
	[AttributeAttribute(Name = "ContextDefinedInputsAttribute", RVA = "0x970F64", Offset = "0x970F64")]
	[AttributeAttribute(Name = "ContextDefinedOutputsAttribute", RVA = "0x970F64", Offset = "0x970F64")]
	public abstract class FlowControlNode : FlowNode
	{
		[Token(Token = "0x6000DE2")]
		[Address(RVA = "0xDF70A4", Offset = "0xDF70A4", VA = "0xDF70A4")]
		protected FlowControlNode()
		{
		}
	}
	[Token(Token = "0x200021E")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x972068", Offset = "0x972068")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x972068", Offset = "0x972068")]
	public class Break : FlowControlNode
	{
		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0xDF92A4", Offset = "0xDF92A4", VA = "0xDF92A4", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000DE4")]
		[Address(RVA = "0xDF9334", Offset = "0xDF9334", VA = "0xDF9334")]
		public Break()
		{
		}

		[Token(Token = "0x6000DE5")]
		[Address(RVA = "0xDF933C", Offset = "0xDF933C", VA = "0xDF933C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x985FBC", Offset = "0x985FBC")]
		private void <RegisterPorts>b__0_0(Flow f)
		{
		}
	}
	[Token(Token = "0x200021F")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9720C8", Offset = "0x9720C8")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x9720C8", Offset = "0x9720C8")]
	[AttributeAttribute(Name = "ContextDefinedInputsAttribute", RVA = "0x9720C8", Offset = "0x9720C8")]
	[AttributeAttribute(Name = "ContextDefinedOutputsAttribute", RVA = "0x9720C8", Offset = "0x9720C8")]
	public class ForEach : FlowControlNode
	{
		[Token(Token = "0x2000703")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9792BC", Offset = "0x9792BC")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4001E95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ForEach <>4__this;

			[Token(Token = "0x4001E96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FlowOutput fFinish;

			[Token(Token = "0x4001E97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FlowOutput fCurrent;

			[Token(Token = "0x4001E98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public FlowBreak <>9__4;

			[Token(Token = "0x60024F2")]
			[Address(RVA = "0xE03150", Offset = "0xE03150", VA = "0xE03150")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x60024F3")]
			[Address(RVA = "0xE033A4", Offset = "0xE033A4", VA = "0xE033A4")]
			internal object <RegisterPorts>b__0()
			{
				return null;
			}

			[Token(Token = "0x60024F4")]
			[Address(RVA = "0xE033D0", Offset = "0xE033D0", VA = "0xE033D0")]
			internal int <RegisterPorts>b__1()
			{
				return default(int);
			}

			[Token(Token = "0x60024F5")]
			[Address(RVA = "0xE033FC", Offset = "0xE033FC", VA = "0xE033FC")]
			internal void <RegisterPorts>b__2(Flow f)
			{
			}

			[Token(Token = "0x60024F6")]
			[Address(RVA = "0xE038A0", Offset = "0xE038A0", VA = "0xE038A0")]
			internal void <RegisterPorts>b__4()
			{
			}

			[Token(Token = "0x60024F7")]
			[Address(RVA = "0xE038D0", Offset = "0xE038D0", VA = "0xE038D0")]
			internal void <RegisterPorts>b__3(Flow f)
			{
			}
		}

		[Token(Token = "0x4000A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private object currentObject;

		[Token(Token = "0x4000A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int currentIndex;

		[Token(Token = "0x4000A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private bool broken;

		[Token(Token = "0x4000A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private ValueInput<IEnumerable> enumerableInput;

		[Token(Token = "0x6000DE6")]
		[Address(RVA = "0xE02F00", Offset = "0xE02F00", VA = "0xE02F00", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000DE7")]
		[Address(RVA = "0xE03158", Offset = "0xE03158", VA = "0xE03158", Slot = "38")]
		public override Type GetNodeWildDefinitionType()
		{
			return null;
		}

		[Token(Token = "0x6000DE8")]
		[Address(RVA = "0xE031C8", Offset = "0xE031C8", VA = "0xE031C8", Slot = "35")]
		public override void OnPortConnected(Port port, Port otherPort)
		{
		}

		[Token(Token = "0x6000DE9")]
		[Address(RVA = "0xE0339C", Offset = "0xE0339C", VA = "0xE0339C")]
		public ForEach()
		{
		}
	}
	[Token(Token = "0x2000220")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9721D4", Offset = "0x9721D4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x9721D4", Offset = "0x9721D4")]
	[AttributeAttribute(Name = "ContextDefinedInputsAttribute", RVA = "0x9721D4", Offset = "0x9721D4")]
	[AttributeAttribute(Name = "ContextDefinedOutputsAttribute", RVA = "0x9721D4", Offset = "0x9721D4")]
	[ExposeAsDefinition]
	public class ForEach<T> : FlowControlNode
	{
		[Token(Token = "0x2000704")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9792CC", Offset = "0x9792CC")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4001E99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ForEach<T> <>4__this;

			[Token(Token = "0x4001E9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<IEnumerable<T>> list;

			[Token(Token = "0x4001E9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput fFinish;

			[Token(Token = "0x4001E9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput fCurrent;

			[Token(Token = "0x4001E9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowBreak <>9__4;

			[Token(Token = "0x60024F8")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x60024F9")]
			internal T <RegisterPorts>b__0()
			{
				return (T)null;
			}

			[Token(Token = "0x60024FA")]
			internal int <RegisterPorts>b__1()
			{
				return default(int);
			}

			[Token(Token = "0x60024FB")]
			internal void <RegisterPorts>b__2(Flow f)
			{
			}

			[Token(Token = "0x60024FC")]
			internal void <RegisterPorts>b__4()
			{
			}

			[Token(Token = "0x60024FD")]
			internal void <RegisterPorts>b__3(Flow f)
			{
			}
		}

		[Token(Token = "0x4000A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T currentObject;

		[Token(Token = "0x4000A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int currentIndex;

		[Token(Token = "0x4000A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool broken;

		[Token(Token = "0x6000DEA")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000DEB")]
		public ForEach()
		{
		}
	}
	[Token(Token = "0x2000221")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9722F0", Offset = "0x9722F0")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x9722F0", Offset = "0x9722F0")]
	[AttributeAttribute(Name = "ContextDefinedInputsAttribute", RVA = "0x9722F0", Offset = "0x9722F0")]
	[AttributeAttribute(Name = "ContextDefinedOutputsAttribute", RVA = "0x9722F0", Offset = "0x9722F0")]
	public class ForLoop : FlowControlNode
	{
		[Token(Token = "0x2000705")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9792DC", Offset = "0x9792DC")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4001E9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ForLoop <>4__this;

			[Token(Token = "0x4001E9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FlowOutput fCurrent;

			[Token(Token = "0x4001EA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FlowOutput fFinish;

			[Token(Token = "0x4001EA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public FlowBreak <>9__3;

			[Token(Token = "0x60024FE")]
			[Address(RVA = "0xE03B40", Offset = "0xE03B40", VA = "0xE03B40")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x60024FF")]
			[Address(RVA = "0xE03B50", Offset = "0xE03B50", VA = "0xE03B50")]
			internal int <RegisterPorts>b__0()
			{
				return default(int);
			}

			[Token(Token = "0x6002500")]
			[Address(RVA = "0xE03B7C", Offset = "0xE03B7C", VA = "0xE03B7C")]
			internal void <RegisterPorts>b__1(Flow f)
			{
			}

			[Token(Token = "0x6002501")]
			[Address(RVA = "0xE03EE8", Offset = "0xE03EE8", VA = "0xE03EE8")]
			internal void <RegisterPorts>b__3()
			{
			}

			[Token(Token = "0x6002502")]
			[Address(RVA = "0xE03F18", Offset = "0xE03F18", VA = "0xE03F18")]
			internal void <RegisterPorts>b__2(Flow f)
			{
			}
		}

		[Token(Token = "0x4000A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97F3FC", Offset = "0x97F3FC")]
		public bool reverse;

		[Token(Token = "0x4000A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private int current;

		[Token(Token = "0x4000A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool broken;

		[Token(Token = "0x4000A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private ValueInput<int> first;

		[Token(Token = "0x4000A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private ValueInput<int> last;

		[Token(Token = "0x4000A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private ValueInput<int> step;

		[Token(Token = "0x6000DEC")]
		[Address(RVA = "0xE03900", Offset = "0xE03900", VA = "0xE03900", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000DED")]
		[Address(RVA = "0xE03B48", Offset = "0xE03B48", VA = "0xE03B48")]
		public ForLoop()
		{
		}
	}
	[Token(Token = "0x2000222")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x9723F4", Offset = "0x9723F4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9723F4", Offset = "0x9723F4")]
	public class Dummy : FlowControlNode
	{
		[Token(Token = "0x2000706")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9792EC", Offset = "0x9792EC")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4001EA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FlowOutput fOut;

			[Token(Token = "0x6002503")]
			[Address(RVA = "0xE00908", Offset = "0xE00908", VA = "0xE00908")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6002504")]
			[Address(RVA = "0xE00918", Offset = "0xE00918", VA = "0xE00918")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x1700013D")]
		public override string name
		{
			[Token(Token = "0x6000DEE")]
			[Address(RVA = "0xE0081C", Offset = "0xE0081C", VA = "0xE0081C", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DEF")]
		[Address(RVA = "0xE00824", Offset = "0xE00824", VA = "0xE00824", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0xE00910", Offset = "0xE00910", VA = "0xE00910")]
		public Dummy()
		{
		}
	}
	[Token(Token = "0x2000223")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x972458", Offset = "0x972458")]
	public class Finish : FlowControlNode
	{
		[Token(Token = "0x2000707")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9792FC", Offset = "0x9792FC")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4001EA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Finish <>4__this;

			[Token(Token = "0x4001EA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ValueInput<bool> c;

			[Token(Token = "0x6002505")]
			[Address(RVA = "0xE0237C", Offset = "0xE0237C", VA = "0xE0237C")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6002506")]
			[Address(RVA = "0xE0238C", Offset = "0xE0238C", VA = "0xE0238C")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x6000DF1")]
		[Address(RVA = "0xE02280", Offset = "0xE02280", VA = "0xE02280", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000DF2")]
		[Address(RVA = "0xE02384", Offset = "0xE02384", VA = "0xE02384")]
		public Finish()
		{
		}
	}
	[Token(Token = "0x2000224")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x972490", Offset = "0x972490")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x972490", Offset = "0x972490")]
	public class Merge : FlowControlNode
	{
		[Token(Token = "0x4000A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		[ExposeField]
		[GatherPortsCallback]
		[AttributeAttribute(Name = "MinValueAttribute", RVA = "0x97F434", Offset = "0x97F434")]
		[DelayedField]
		private int _portCount;

		[Token(Token = "0x6000DF3")]
		[Address(RVA = "0xE09EA0", Offset = "0xE09EA0", VA = "0xE09EA0", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000DF4")]
		[Address(RVA = "0xE09FA0", Offset = "0xE09FA0", VA = "0xE09FA0")]
		public Merge()
		{
		}
	}
	[Token(Token = "0x2000225")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x9724F4", Offset = "0x9724F4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x9724F4", Offset = "0x9724F4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9724F4", Offset = "0x9724F4")]
	[AttributeAttribute(Name = "ContextDefinedOutputsAttribute", RVA = "0x9724F4", Offset = "0x9724F4")]
	public class Random : FlowControlNode
	{
		[Token(Token = "0x2000708")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97930C", Offset = "0x97930C")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4001EA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Random <>4__this;

			[Token(Token = "0x4001EA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<FlowOutput> outs;

			[Token(Token = "0x6002507")]
			[Address(RVA = "0xC94964", Offset = "0xC94964", VA = "0xC94964")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6002508")]
			[Address(RVA = "0xC9497C", Offset = "0xC9497C", VA = "0xC9497C")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}

			[Token(Token = "0x6002509")]
			[Address(RVA = "0xC94A98", Offset = "0xC94A98", VA = "0xC94A98")]
			internal int <RegisterPorts>b__1()
			{
				return default(int);
			}
		}

		[Token(Token = "0x4000A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		[ExposeField]
		[GatherPortsCallback]
		[AttributeAttribute(Name = "MinValueAttribute", RVA = "0x97F4A0", Offset = "0x97F4A0")]
		[DelayedField]
		private int _portCount;

		[Token(Token = "0x4000AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private int current;

		[Token(Token = "0x6000DF5")]
		[Address(RVA = "0xC94778", Offset = "0xC94778", VA = "0xC94778", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000DF6")]
		[Address(RVA = "0xC9496C", Offset = "0xC9496C", VA = "0xC9496C")]
		public Random()
		{
		}
	}
	[Token(Token = "0x2000226")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9725F8", Offset = "0x9725F8")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x9725F8", Offset = "0x9725F8")]
	public class Split : FlowControlNode
	{
		[Token(Token = "0x2000709")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97931C", Offset = "0x97931C")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4001EA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Split <>4__this;

			[Token(Token = "0x4001EA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<FlowOutput> outs;

			[Token(Token = "0x600250A")]
			[Address(RVA = "0xC9A894", Offset = "0xC9A894", VA = "0xC9A894")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x600250B")]
			[Address(RVA = "0xC9A8AC", Offset = "0xC9A8AC", VA = "0xC9A8AC")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x4000AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		[ExposeField]
		[GatherPortsCallback]
		[AttributeAttribute(Name = "MinValueAttribute", RVA = "0x97F50C", Offset = "0x97F50C")]
		[DelayedField]
		private int _portCount;

		[Token(Token = "0x6000DF7")]
		[Address(RVA = "0xC9A704", Offset = "0xC9A704", VA = "0xC9A704", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000DF8")]
		[Address(RVA = "0xC9A89C", Offset = "0xC9A89C", VA = "0xC9A89C")]
		public Split()
		{
		}
	}
	[Token(Token = "0x2000227")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x97265C", Offset = "0x97265C")]
	public class TryCatch : FlowControlNode
	{
		[Token(Token = "0x200070A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97932C", Offset = "0x97932C")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4001EA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FlowOutput fTry;

			[Token(Token = "0x4001EAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FlowOutput fCatch;

			[Token(Token = "0x4001EAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FlowOutput fFinally;

			[Token(Token = "0x600250C")]
			[Address(RVA = "0xC9ED10", Offset = "0xC9ED10", VA = "0xC9ED10")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x600250D")]
			[Address(RVA = "0xC9ED20", Offset = "0xC9ED20", VA = "0xC9ED20")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x6000DF9")]
		[Address(RVA = "0xC9EBCC", Offset = "0xC9EBCC", VA = "0xC9EBCC", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000DFA")]
		[Address(RVA = "0xC9ED18", Offset = "0xC9ED18", VA = "0xC9ED18")]
		public TryCatch()
		{
		}
	}
	[Token(Token = "0x2000228")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x972694", Offset = "0x972694")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x972694", Offset = "0x972694")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x972694", Offset = "0x972694")]
	public class CoroutineState : FlowControlNode
	{
		[Token(Token = "0x200070B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97933C", Offset = "0x97933C")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4001EAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CoroutineState <>4__this;

			[Token(Token = "0x4001EAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FlowOutput fStart;

			[Token(Token = "0x4001EAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FlowOutput fUpdate;

			[Token(Token = "0x4001EAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public FlowOutput fFinish;

			[Token(Token = "0x600250E")]
			[Address(RVA = "0xDFD528", Offset = "0xDFD528", VA = "0xDFD528")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x600250F")]
			[Address(RVA = "0xDFD6A4", Offset = "0xDFD6A4", VA = "0xDFD6A4")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}

			[Token(Token = "0x6002510")]
			[Address(RVA = "0xDFD7D0", Offset = "0xDFD7D0", VA = "0xDFD7D0")]
			internal void <RegisterPorts>b__1(Flow f)
			{
			}
		}

		[Token(Token = "0x200070C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97934C", Offset = "0x97934C")]
		private sealed class <DoRepeat>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FlowOutput fStart;

			[Token(Token = "0x4001EB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Flow f;

			[Token(Token = "0x4001EB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public CoroutineState <>4__this;

			[Token(Token = "0x4001EB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public FlowOutput fUpdate;

			[Token(Token = "0x4001EB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public FlowOutput fFinish;

			[Token(Token = "0x17000383")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002514")]
				[Address(RVA = "0xDFDA14", Offset = "0xDFDA14", VA = "0xDFDA14", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000384")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002516")]
				[Address(RVA = "0xDFDA84", Offset = "0xDFDA84", VA = "0xDFDA84", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002511")]
			[Address(RVA = "0xDFD668", Offset = "0xDFD668", VA = "0xDFD668")]
			[DebuggerHidden]
			public <DoRepeat>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6002512")]
			[Address(RVA = "0xDFD7FC", Offset = "0xDFD7FC", VA = "0xDFD7FC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002513")]
			[Address(RVA = "0xDFD800", Offset = "0xDFD800", VA = "0xDFD800", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002515")]
			[Address(RVA = "0xDFDA1C", Offset = "0xDFDA1C", VA = "0xDFDA1C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool active;

		[Token(Token = "0x4000AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Coroutine coroutine;

		[Token(Token = "0x6000DFB")]
		[Address(RVA = "0xDFD35C", Offset = "0xDFD35C", VA = "0xDFD35C", Slot = "27")]
		public override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6000DFC")]
		[Address(RVA = "0xDFD390", Offset = "0xDFD390", VA = "0xDFD390", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000DFD")]
		[Address(RVA = "0xDFD530", Offset = "0xDFD530", VA = "0xDFD530")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x985FCC", Offset = "0x985FCC")]
		private IEnumerator DoRepeat(FlowOutput fStart, FlowOutput fUpdate, FlowOutput fFinish, Flow f)
		{
			return null;
		}

		[Token(Token = "0x6000DFE")]
		[Address(RVA = "0xDFD694", Offset = "0xDFD694", VA = "0xDFD694")]
		public CoroutineState()
		{
		}

		[Token(Token = "0x6000DFF")]
		[Address(RVA = "0xDFD69C", Offset = "0xDFD69C", VA = "0xDFD69C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986030", Offset = "0x986030")]
		private void <DoRepeat>b__4_0()
		{
		}
	}
	[Token(Token = "0x2000229")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x97271C", Offset = "0x97271C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x97271C", Offset = "0x97271C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x97271C", Offset = "0x97271C")]
	[AttributeAttribute(Name = "ContextDefinedInputsAttribute", RVA = "0x97271C", Offset = "0x97271C")]
	public class While : FlowControlNode
	{
		[Token(Token = "0x200070D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97935C", Offset = "0x97935C")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4001EB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public While <>4__this;

			[Token(Token = "0x4001EB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FlowOutput fUpdate;

			[Token(Token = "0x4001EB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FlowOutput fFinish;

			[Token(Token = "0x4001EBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ValueInput<bool> c;

			[Token(Token = "0x6002517")]
			[Address(RVA = "0xCA5078", Offset = "0xCA5078", VA = "0xCA5078")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6002518")]
			[Address(RVA = "0xCA51F8", Offset = "0xCA51F8", VA = "0xCA51F8")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x200070E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97936C", Offset = "0x97936C")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4001EBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool active;

			[Token(Token = "0x6002519")]
			[Address(RVA = "0xCA530C", Offset = "0xCA530C", VA = "0xCA530C")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x600251A")]
			[Address(RVA = "0xCA5314", Offset = "0xCA5314", VA = "0xCA5314")]
			internal void <DoWhile>b__0()
			{
			}
		}

		[Token(Token = "0x200070F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97937C", Offset = "0x97937C")]
		private sealed class <DoWhile>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Flow f;

			[Token(Token = "0x4001EBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public While <>4__this;

			[Token(Token = "0x4001EC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public FlowOutput fUpdate;

			[Token(Token = "0x4001EC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private <>c__DisplayClass4_0 <>8__1;

			[Token(Token = "0x4001EC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public ValueInput<bool> condition;

			[Token(Token = "0x4001EC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public FlowOutput fFinish;

			[Token(Token = "0x17000385")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600251E")]
				[Address(RVA = "0xCA5578", Offset = "0xCA5578", VA = "0xCA5578", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000386")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002520")]
				[Address(RVA = "0xCA55E8", Offset = "0xCA55E8", VA = "0xCA55E8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600251B")]
			[Address(RVA = "0xCA51C4", Offset = "0xCA51C4", VA = "0xCA51C4")]
			[DebuggerHidden]
			public <DoWhile>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x600251C")]
			[Address(RVA = "0xCA531C", Offset = "0xCA531C", VA = "0xCA531C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600251D")]
			[Address(RVA = "0xCA5320", Offset = "0xCA5320", VA = "0xCA5320", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600251F")]
			[Address(RVA = "0xCA5580", Offset = "0xCA5580", VA = "0xCA5580", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine coroutine;

		[Token(Token = "0x6000E00")]
		[Address(RVA = "0xCA4EE0", Offset = "0xCA4EE0", VA = "0xCA4EE0", Slot = "26")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6000E01")]
		[Address(RVA = "0xCA4EE8", Offset = "0xCA4EE8", VA = "0xCA4EE8", Slot = "27")]
		public override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6000E02")]
		[Address(RVA = "0xCA4F1C", Offset = "0xCA4F1C", VA = "0xCA4F1C", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000E03")]
		[Address(RVA = "0xCA5080", Offset = "0xCA5080", VA = "0xCA5080")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x986040", Offset = "0x986040")]
		private IEnumerator DoWhile(FlowOutput fUpdate, FlowOutput fFinish, Flow f, ValueInput<bool> condition)
		{
			return null;
		}

		[Token(Token = "0x6000E04")]
		[Address(RVA = "0xCA51F0", Offset = "0xCA51F0", VA = "0xCA51F0")]
		public While()
		{
		}
	}
	[Token(Token = "0x200022A")]
	[ExposeAsDefinition]
	[AttributeAttribute(Name = "ContextDefinedInputsAttribute", RVA = "0x97280C", Offset = "0x97280C")]
	[AttributeAttribute(Name = "ContextDefinedOutputsAttribute", RVA = "0x97280C", Offset = "0x97280C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x97280C", Offset = "0x97280C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x97280C", Offset = "0x97280C")]
	public class SelectOnBool<T> : FlowControlNode
	{
		[Token(Token = "0x2000710")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97938C", Offset = "0x97938C")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4001EC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<bool> condition;

			[Token(Token = "0x4001EC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T> isTrue;

			[Token(Token = "0x4001EC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T> isFalse;

			[Token(Token = "0x6002521")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6002522")]
			internal T <RegisterPorts>b__0()
			{
				return (T)null;
			}
		}

		[Token(Token = "0x6000E05")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000E06")]
		public SelectOnBool()
		{
		}
	}
	[Token(Token = "0x200022B")]
	[ExposeAsDefinition]
	[AttributeAttribute(Name = "ContextDefinedInputsAttribute", RVA = "0x972934", Offset = "0x972934")]
	[AttributeAttribute(Name = "ContextDefinedOutputsAttribute", RVA = "0x972934", Offset = "0x972934")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x972934", Offset = "0x972934")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x972934", Offset = "0x972934")]
	public class SelectOnEnum<T> : FlowControlNode
	{
		[Token(Token = "0x2000711")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97939C", Offset = "0x97939C")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4001EC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput selector;

			[Token(Token = "0x6002523")]
			public <>c__DisplayClass4_0()
			{
			}
		}

		[Token(Token = "0x2000712")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9793AC", Offset = "0x9793AC")]
		private sealed class <>c__DisplayClass4_1
		{
			[Token(Token = "0x4001EC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T>[] cases;

			[Token(Token = "0x4001EC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public <>c__DisplayClass4_0 CS$<>8__locals1;

			[Token(Token = "0x6002524")]
			public <>c__DisplayClass4_1()
			{
			}

			[Token(Token = "0x6002525")]
			internal T <RegisterPorts>b__0()
			{
				return (T)null;
			}
		}

		[Token(Token = "0x4000AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private SerializedTypeInfo _type;

		[Token(Token = "0x1700013E")]
		private Type type
		{
			[Token(Token = "0x6000E07")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E08")]
			set
			{
			}
		}

		[Token(Token = "0x6000E09")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000E0A")]
		public override Type GetNodeWildDefinitionType()
		{
			return null;
		}

		[Token(Token = "0x6000E0B")]
		public override void OnPortConnected(Port port, Port otherPort)
		{
		}

		[Token(Token = "0x6000E0C")]
		public SelectOnEnum()
		{
		}
	}
	[Token(Token = "0x200022C")]
	[ExposeAsDefinition]
	[AttributeAttribute(Name = "ContextDefinedInputsAttribute", RVA = "0x972A5C", Offset = "0x972A5C")]
	[AttributeAttribute(Name = "ContextDefinedOutputsAttribute", RVA = "0x972A5C", Offset = "0x972A5C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x972A5C", Offset = "0x972A5C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x972A5C", Offset = "0x972A5C")]
	public class SelectOnInt<T> : FlowControlNode
	{
		[Token(Token = "0x2000713")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9793BC", Offset = "0x9793BC")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4001ECA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<int> selector;

			[Token(Token = "0x4001ECB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T>[] cases;

			[Token(Token = "0x4001ECC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T> defaultCase;

			[Token(Token = "0x6002526")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6002527")]
			internal T <RegisterPorts>b__0()
			{
				return (T)null;
			}
		}

		[Token(Token = "0x4000AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[ExposeField]
		[GatherPortsCallback]
		[AttributeAttribute(Name = "MinValueAttribute", RVA = "0x97F588", Offset = "0x97F588")]
		[DelayedField]
		private int _portCount;

		[Token(Token = "0x6000E0D")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000E0E")]
		public SelectOnInt()
		{
		}
	}
	[Token(Token = "0x200022D")]
	[ExposeAsDefinition]
	[AttributeAttribute(Name = "ContextDefinedInputsAttribute", RVA = "0x972B84", Offset = "0x972B84")]
	[AttributeAttribute(Name = "ContextDefinedOutputsAttribute", RVA = "0x972B84", Offset = "0x972B84")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x972B84", Offset = "0x972B84")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x972B84", Offset = "0x972B84")]
	[HasRefreshButton]
	public class SelectOnString<T> : FlowControlNode
	{
		[Token(Token = "0x2000714")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9793CC", Offset = "0x9793CC")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4001ECD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<string> selector;

			[Token(Token = "0x4001ECE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SelectOnString<T> <>4__this;

			[Token(Token = "0x4001ECF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T>[] cases;

			[Token(Token = "0x4001ED0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T> defaultCase;

			[Token(Token = "0x6002528")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6002529")]
			internal T <RegisterPorts>b__0()
			{
				return (T)null;
			}
		}

		[Token(Token = "0x4000AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "NameAttribute", RVA = "0x97F5F4", Offset = "0x97F5F4")]
		public List<string> stringCases;

		[Token(Token = "0x6000E0F")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000E10")]
		public SelectOnString()
		{
		}
	}
	[Token(Token = "0x200022E")]
	[ExposeAsDefinition]
	[AttributeAttribute(Name = "ContextDefinedInputsAttribute", RVA = "0x972CBC", Offset = "0x972CBC")]
	[AttributeAttribute(Name = "ContextDefinedOutputsAttribute", RVA = "0x972CBC", Offset = "0x972CBC")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x972CBC", Offset = "0x972CBC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x972CBC", Offset = "0x972CBC")]
	[HasRefreshButton]
	public class SelectOnTag<T> : FlowControlNode
	{
		[Token(Token = "0x2000715")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9793DC", Offset = "0x9793DC")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4001ED1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<GameObject> selector;

			[Token(Token = "0x4001ED2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SelectOnTag<T> <>4__this;

			[Token(Token = "0x4001ED3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T>[] cases;

			[Token(Token = "0x600252A")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x600252B")]
			internal T <RegisterPorts>b__0()
			{
				return (T)null;
			}
		}

		[Token(Token = "0x4000AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private string[] _tagNames;

		[Token(Token = "0x6000E11")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000E12")]
		public SelectOnTag()
		{
		}
	}
	[Token(Token = "0x200022F")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x972DF4", Offset = "0x972DF4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x972DF4", Offset = "0x972DF4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x972DF4", Offset = "0x972DF4")]
	[AttributeAttribute(Name = "ContextDefinedInputsAttribute", RVA = "0x972DF4", Offset = "0x972DF4")]
	public class SwitchBool : FlowControlNode
	{
		[Token(Token = "0x2000716")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9793EC", Offset = "0x9793EC")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4001ED4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ValueInput<bool> selector;

			[Token(Token = "0x4001ED5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FlowOutput caseTrue;

			[Token(Token = "0x4001ED6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FlowOutput caseFalse;

			[Token(Token = "0x600252C")]
			[Address(RVA = "0xC9B060", Offset = "0xC9B060", VA = "0xC9B060")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x600252D")]
			[Address(RVA = "0xC9B070", Offset = "0xC9B070", VA = "0xC9B070")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x6000E13")]
		[Address(RVA = "0xC9AF14", Offset = "0xC9AF14", VA = "0xC9AF14", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000E14")]
		[Address(RVA = "0xC9B068", Offset = "0xC9B068", VA = "0xC9B068")]
		public SwitchBool()
		{
		}
	}
	[Token(Token = "0x2000230")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x972EE4", Offset = "0x972EE4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x972EE4", Offset = "0x972EE4")]
	[AttributeAttribute(Name = "ContextDefinedInputsAttribute", RVA = "0x972EE4", Offset = "0x972EE4")]
	public class SwitchComparison : FlowControlNode
	{
		[Token(Token = "0x2000717")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9793FC", Offset = "0x9793FC")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4001ED7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ValueInput<IComparable> a;

			[Token(Token = "0x4001ED8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ValueInput<IComparable> b;

			[Token(Token = "0x4001ED9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FlowOutput equal;

			[Token(Token = "0x4001EDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public FlowOutput notEqual;

			[Token(Token = "0x4001EDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public FlowOutput greater;

			[Token(Token = "0x4001EDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public FlowOutput less;

			[Token(Token = "0x600252E")]
			[Address(RVA = "0xC9B300", Offset = "0xC9B300", VA = "0xC9B300")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x600252F")]
			[Address(RVA = "0xC9B310", Offset = "0xC9B310", VA = "0xC9B310")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x6000E15")]
		[Address(RVA = "0xC9B0FC", Offset = "0xC9B0FC", VA = "0xC9B0FC", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000E16")]
		[Address(RVA = "0xC9B308", Offset = "0xC9B308", VA = "0xC9B308")]
		public SwitchComparison()
		{
		}
	}
	[Token(Token = "0x2000231")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x972FAC", Offset = "0x972FAC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x972FAC", Offset = "0x972FAC")]
	[AttributeAttribute(Name = "ContextDefinedInputsAttribute", RVA = "0x972FAC", Offset = "0x972FAC")]
	public class SwitchEnum : FlowControlNode
	{
		[Token(Token = "0x2000718")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97940C", Offset = "0x97940C")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4001EDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ValueInput selector;

			[Token(Token = "0x6002530")]
			[Address(RVA = "0xC9BA20", Offset = "0xC9BA20", VA = "0xC9BA20")]
			public <>c__DisplayClass4_0()
			{
			}
		}

		[Token(Token = "0x2000719")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97941C", Offset = "0x97941C")]
		private sealed class <>c__DisplayClass4_1
		{
			[Token(Token = "0x4001EDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Dictionary<string, FlowOutput> cases;

			[Token(Token = "0x4001EDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass4_0 CS$<>8__locals1;

			[Token(Token = "0x6002531")]
			[Address(RVA = "0xC9BA28", Offset = "0xC9BA28", VA = "0xC9BA28")]
			public <>c__DisplayClass4_1()
			{
			}

			[Token(Token = "0x6002532")]
			[Address(RVA = "0xC9BC20", Offset = "0xC9BC20", VA = "0xC9BC20")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x4000AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private SerializedTypeInfo _type;

		[Token(Token = "0x1700013F")]
		private Type type
		{
			[Token(Token = "0x6000E17")]
			[Address(RVA = "0xC9B59C", Offset = "0xC9B59C", VA = "0xC9B59C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E18")]
			[Address(RVA = "0xC9B5B0", Offset = "0xC9B5B0", VA = "0xC9B5B0")]
			set
			{
			}
		}

		[Token(Token = "0x6000E19")]
		[Address(RVA = "0xC9B66C", Offset = "0xC9B66C", VA = "0xC9B66C", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000E1A")]
		[Address(RVA = "0xC9BA30", Offset = "0xC9BA30", VA = "0xC9BA30", Slot = "38")]
		public override Type GetNodeWildDefinitionType()
		{
			return null;
		}

		[Token(Token = "0x6000E1B")]
		[Address(RVA = "0xC9BAA0", Offset = "0xC9BAA0", VA = "0xC9BAA0", Slot = "35")]
		public override void OnPortConnected(Port port, Port otherPort)
		{
		}

		[Token(Token = "0x6000E1C")]
		[Address(RVA = "0xC9BC18", Offset = "0xC9BC18", VA = "0xC9BC18")]
		public SwitchEnum()
		{
		}
	}
	[Token(Token = "0x2000232")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x973074", Offset = "0x973074")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x973074", Offset = "0x973074")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x973074", Offset = "0x973074")]
	[AttributeAttribute(Name = "ContextDefinedInputsAttribute", RVA = "0x973074", Offset = "0x973074")]
	public class SwitchInt : FlowControlNode
	{
		[Token(Token = "0x200071A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97942C", Offset = "0x97942C")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4001EE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ValueInput<int> selector;

			[Token(Token = "0x4001EE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FlowOutput[] cases;

			[Token(Token = "0x4001EE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FlowOutput defaultCase;

			[Token(Token = "0x6002533")]
			[Address(RVA = "0xC9BF3C", Offset = "0xC9BF3C", VA = "0xC9BF3C")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6002534")]
			[Address(RVA = "0xC9BF54", Offset = "0xC9BF54", VA = "0xC9BF54")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x4000AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		[ExposeField]
		[GatherPortsCallback]
		[AttributeAttribute(Name = "MinValueAttribute", RVA = "0x97F650", Offset = "0x97F650")]
		[DelayedField]
		private int _portCount;

		[Token(Token = "0x6000E1D")]
		[Address(RVA = "0xC9BD2C", Offset = "0xC9BD2C", VA = "0xC9BD2C", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000E1E")]
		[Address(RVA = "0xC9BF44", Offset = "0xC9BF44", VA = "0xC9BF44")]
		public SwitchInt()
		{
		}
	}
	[Token(Token = "0x2000233")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x973164", Offset = "0x973164")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x973164", Offset = "0x973164")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x973164", Offset = "0x973164")]
	[AttributeAttribute(Name = "ContextDefinedInputsAttribute", RVA = "0x973164", Offset = "0x973164")]
	[HasRefreshButton]
	public class SwitchIntCustom : FlowControlNode
	{
		[Token(Token = "0x200071B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97943C", Offset = "0x97943C")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4001EE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ValueInput<int> selector;

			[Token(Token = "0x4001EE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SwitchIntCustom <>4__this;

			[Token(Token = "0x4001EE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FlowOutput[] cases;

			[Token(Token = "0x4001EE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public FlowOutput defaultCase;

			[Token(Token = "0x6002535")]
			[Address(RVA = "0xC9C2AC", Offset = "0xC9C2AC", VA = "0xC9C2AC")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6002536")]
			[Address(RVA = "0xC9C324", Offset = "0xC9C324", VA = "0xC9C324")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x4000AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public List<int> intCases;

		[Token(Token = "0x6000E1F")]
		[Address(RVA = "0xC9C034", Offset = "0xC9C034", VA = "0xC9C034", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000E20")]
		[Address(RVA = "0xC9C2B4", Offset = "0xC9C2B4", VA = "0xC9C2B4")]
		public SwitchIntCustom()
		{
		}
	}
	[Token(Token = "0x2000234")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x973264", Offset = "0x973264")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x973264", Offset = "0x973264")]
	[AttributeAttribute(Name = "ContextDefinedInputsAttribute", RVA = "0x973264", Offset = "0x973264")]
	public class SwitchProbability : FlowControlNode
	{
		[Token(Token = "0x4000AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		[ExposeField]
		[GatherPortsCallback]
		[AttributeAttribute(Name = "MinValueAttribute", RVA = "0x97F6BC", Offset = "0x97F6BC")]
		[DelayedField]
		private int _portCount;

		[Token(Token = "0x4000AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private List<ValueInput<float>> probabilityValues;

		[Token(Token = "0x4000AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<FlowOutput> probabilityOuts;

		[Token(Token = "0x4000AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float[] cacheValues;

		[Token(Token = "0x4000AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int current;

		[Token(Token = "0x6000E21")]
		[Address(RVA = "0xC9C508", Offset = "0xC9C508", VA = "0xC9C508", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000E22")]
		[Address(RVA = "0xC9C7B4", Offset = "0xC9C7B4", VA = "0xC9C7B4")]
		private void Enter(Flow f)
		{
		}

		[Token(Token = "0x6000E23")]
		[Address(RVA = "0xC9CA28", Offset = "0xC9CA28", VA = "0xC9CA28")]
		public SwitchProbability()
		{
		}

		[Token(Token = "0x6000E24")]
		[Address(RVA = "0xC9CA38", Offset = "0xC9CA38", VA = "0xC9CA38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9860A4", Offset = "0x9860A4")]
		private int <RegisterPorts>b__5_0()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000235")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x973340", Offset = "0x973340")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x973340", Offset = "0x973340")]
	[AttributeAttribute(Name = "ContextDefinedInputsAttribute", RVA = "0x973340", Offset = "0x973340")]
	[HasRefreshButton]
	public class SwitchString : FlowControlNode
	{
		[Token(Token = "0x200071C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97944C", Offset = "0x97944C")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4001EE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ValueInput<string> selector;

			[Token(Token = "0x4001EE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SwitchString <>4__this;

			[Token(Token = "0x4001EE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FlowOutput[] cases;

			[Token(Token = "0x4001EEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public FlowOutput defaultCase;

			[Token(Token = "0x6002537")]
			[Address(RVA = "0xC9CCC4", Offset = "0xC9CCC4", VA = "0xC9CCC4")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6002538")]
			[Address(RVA = "0xC9CD3C", Offset = "0xC9CD3C", VA = "0xC9CD3C")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x4000AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "NameAttribute", RVA = "0x97F728", Offset = "0x97F728")]
		public List<string> comparisonOutputs;

		[Token(Token = "0x6000E25")]
		[Address(RVA = "0xC9CA40", Offset = "0xC9CA40", VA = "0xC9CA40", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000E26")]
		[Address(RVA = "0xC9CCCC", Offset = "0xC9CCCC", VA = "0xC9CCCC")]
		public SwitchString()
		{
		}
	}
	[Token(Token = "0x2000236")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x973418", Offset = "0x973418")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x973418", Offset = "0x973418")]
	[AttributeAttribute(Name = "ContextDefinedInputsAttribute", RVA = "0x973418", Offset = "0x973418")]
	[HasRefreshButton]
	public class SwitchTag : FlowControlNode
	{
		[Token(Token = "0x200071D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97945C", Offset = "0x97945C")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4001EEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SwitchTag <>4__this;

			[Token(Token = "0x4001EEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ValueInput<GameObject> selector;

			[Token(Token = "0x4001EED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FlowOutput[] cases;

			[Token(Token = "0x6002539")]
			[Address(RVA = "0xC9D164", Offset = "0xC9D164", VA = "0xC9D164")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x600253A")]
			[Address(RVA = "0xC9D174", Offset = "0xC9D174", VA = "0xC9D174")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x4000AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private string[] _tagNames;

		[Token(Token = "0x6000E27")]
		[Address(RVA = "0xC9CF34", Offset = "0xC9CF34", VA = "0xC9CF34", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000E28")]
		[Address(RVA = "0xC9D16C", Offset = "0xC9D16C", VA = "0xC9D16C")]
		public SwitchTag()
		{
		}
	}
	[Token(Token = "0x2000237")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x9734F0", Offset = "0x9734F0")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9734F0", Offset = "0x9734F0")]
	[AttributeAttribute(Name = "ContextDefinedOutputsAttribute", RVA = "0x9734F0", Offset = "0x9734F0")]
	public class FlipFlop : FlowControlNode
	{
		[Token(Token = "0x200071E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97946C", Offset = "0x97946C")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4001EEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FlipFlop <>4__this;

			[Token(Token = "0x4001EEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FlowOutput fFlip;

			[Token(Token = "0x4001EF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FlowOutput fFlop;

			[Token(Token = "0x600253B")]
			[Address(RVA = "0xE02890", Offset = "0xE02890", VA = "0xE02890")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x600253C")]
			[Address(RVA = "0xE028A8", Offset = "0xE028A8", VA = "0xE028A8")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}

			[Token(Token = "0x600253D")]
			[Address(RVA = "0xE02934", Offset = "0xE02934", VA = "0xE02934")]
			internal void <RegisterPorts>b__1(Flow f)
			{
			}

			[Token(Token = "0x600253E")]
			[Address(RVA = "0xE02960", Offset = "0xE02960", VA = "0xE02960")]
			internal bool <RegisterPorts>b__2()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool isFlip;

		[Token(Token = "0x4000AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		private bool original;

		[Token(Token = "0x17000140")]
		public override string name
		{
			[Token(Token = "0x6000E29")]
			[Address(RVA = "0xE02630", Offset = "0xE02630", VA = "0xE02630", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E2A")]
		[Address(RVA = "0xE026AC", Offset = "0xE026AC", VA = "0xE026AC", Slot = "26")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6000E2B")]
		[Address(RVA = "0xE026B8", Offset = "0xE026B8", VA = "0xE026B8", Slot = "27")]
		public override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6000E2C")]
		[Address(RVA = "0xE026C4", Offset = "0xE026C4", VA = "0xE026C4", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000E2D")]
		[Address(RVA = "0xE02898", Offset = "0xE02898", VA = "0xE02898")]
		public FlipFlop()
		{
		}
	}
	[Token(Token = "0x2000238")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x9735B8", Offset = "0x9735B8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9735B8", Offset = "0x9735B8")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x9735B8", Offset = "0x9735B8")]
	[AttributeAttribute(Name = "ContextDefinedOutputsAttribute", RVA = "0x9735B8", Offset = "0x9735B8")]
	public class MultiToggle : FlowControlNode
	{
		[Token(Token = "0x200071F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97947C", Offset = "0x97947C")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4001EF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<FlowOutput> outs;

			[Token(Token = "0x4001EF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MultiToggle <>4__this;

			[Token(Token = "0x600253F")]
			[Address(RVA = "0xE0C24C", Offset = "0xE0C24C", VA = "0xE0C24C")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6002540")]
			[Address(RVA = "0xE0C264", Offset = "0xE0C264", VA = "0xE0C264")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}

			[Token(Token = "0x6002541")]
			[Address(RVA = "0xE0C330", Offset = "0xE0C330", VA = "0xE0C330")]
			internal void <RegisterPorts>b__1(Flow f)
			{
			}

			[Token(Token = "0x6002542")]
			[Address(RVA = "0xE0C3E0", Offset = "0xE0C3E0", VA = "0xE0C3E0")]
			internal void <RegisterPorts>b__2(Flow f)
			{
			}

			[Token(Token = "0x6002543")]
			[Address(RVA = "0xE0C490", Offset = "0xE0C490", VA = "0xE0C490")]
			internal int <RegisterPorts>b__3()
			{
				return default(int);
			}
		}

		[Token(Token = "0x4000AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		[ExposeField]
		[GatherPortsCallback]
		[AttributeAttribute(Name = "MinValueAttribute", RVA = "0x97F774", Offset = "0x97F774")]
		[DelayedField]
		private int _portCount;

		[Token(Token = "0x4000AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "NameAttribute", RVA = "0x97F7E0", Offset = "0x97F7E0")]
		public int current;

		[Token(Token = "0x4000AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int original;

		[Token(Token = "0x17000141")]
		public override string name
		{
			[Token(Token = "0x6000E2E")]
			[Address(RVA = "0xE0BEB8", Offset = "0xE0BEB8", VA = "0xE0BEB8", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E2F")]
		[Address(RVA = "0xE0BF48", Offset = "0xE0BF48", VA = "0xE0BF48", Slot = "26")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6000E30")]
		[Address(RVA = "0xE0BFCC", Offset = "0xE0BFCC", VA = "0xE0BFCC", Slot = "27")]
		public override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6000E31")]
		[Address(RVA = "0xE0BFD8", Offset = "0xE0BFD8", VA = "0xE0BFD8", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000E32")]
		[Address(RVA = "0xE0C254", Offset = "0xE0C254", VA = "0xE0C254")]
		public MultiToggle()
		{
		}
	}
	[Token(Token = "0x2000239")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x9736A8", Offset = "0x9736A8")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x9736A8", Offset = "0x9736A8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9736A8", Offset = "0x9736A8")]
	[AttributeAttribute(Name = "ContextDefinedOutputsAttribute", RVA = "0x9736A8", Offset = "0x9736A8")]
	public class Sequence : FlowControlNode
	{
		[Token(Token = "0x2000720")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97948C", Offset = "0x97948C")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4001EF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<FlowOutput> outs;

			[Token(Token = "0x4001EF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Sequence <>4__this;

			[Token(Token = "0x6002544")]
			[Address(RVA = "0xC99C9C", Offset = "0xC99C9C", VA = "0xC99C9C")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6002545")]
			[Address(RVA = "0xC99CB4", Offset = "0xC99CB4", VA = "0xC99CB4")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}

			[Token(Token = "0x6002546")]
			[Address(RVA = "0xC99DEC", Offset = "0xC99DEC", VA = "0xC99DEC")]
			internal void <RegisterPorts>b__1(Flow f)
			{
			}

			[Token(Token = "0x6002547")]
			[Address(RVA = "0xC99E18", Offset = "0xC99E18", VA = "0xC99E18")]
			internal int <RegisterPorts>b__2()
			{
				return default(int);
			}
		}

		[Token(Token = "0x4000AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		[ExposeField]
		[GatherPortsCallback]
		[AttributeAttribute(Name = "MinValueAttribute", RVA = "0x97F81C", Offset = "0x97F81C")]
		[DelayedField]
		private int _portCount;

		[Token(Token = "0x4000AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "MinValueAttribute", RVA = "0x97F888", Offset = "0x97F888")]
		public int current;

		[Token(Token = "0x4000ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int original;

		[Token(Token = "0x17000142")]
		public override string name
		{
			[Token(Token = "0x6000E35")]
			[Address(RVA = "0xC999DC", Offset = "0xC999DC", VA = "0xC999DC", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E33")]
		[Address(RVA = "0xC9994C", Offset = "0xC9994C", VA = "0xC9994C", Slot = "26")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6000E34")]
		[Address(RVA = "0xC999D0", Offset = "0xC999D0", VA = "0xC999D0", Slot = "27")]
		public override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6000E36")]
		[Address(RVA = "0xC99A6C", Offset = "0xC99A6C", VA = "0xC99A6C", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000E37")]
		[Address(RVA = "0xC99CA4", Offset = "0xC99CA4", VA = "0xC99CA4")]
		public Sequence()
		{
		}
	}
	[Token(Token = "0x200023A")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x973798", Offset = "0x973798")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x973798", Offset = "0x973798")]
	public class Toggle : FlowControlNode
	{
		[Token(Token = "0x2000721")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97949C", Offset = "0x97949C")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4001EF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Toggle <>4__this;

			[Token(Token = "0x4001EF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FlowOutput fOn;

			[Token(Token = "0x4001EF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FlowOutput fOff;

			[Token(Token = "0x6002548")]
			[Address(RVA = "0xC9D864", Offset = "0xC9D864", VA = "0xC9D864")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x6002549")]
			[Address(RVA = "0xC9D87C", Offset = "0xC9D87C", VA = "0xC9D87C")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}

			[Token(Token = "0x600254A")]
			[Address(RVA = "0xC9D8D4", Offset = "0xC9D8D4", VA = "0xC9D8D4")]
			internal void <RegisterPorts>b__1(Flow f)
			{
			}

			[Token(Token = "0x600254B")]
			[Address(RVA = "0xC9D904", Offset = "0xC9D904", VA = "0xC9D904")]
			internal void <RegisterPorts>b__2(Flow f)
			{
			}

			[Token(Token = "0x600254C")]
			[Address(RVA = "0xC9D930", Offset = "0xC9D930", VA = "0xC9D930")]
			internal void <RegisterPorts>b__3(Flow f)
			{
			}
		}

		[Token(Token = "0x4000ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "NameAttribute", RVA = "0x97F89C", Offset = "0x97F89C")]
		public bool open;

		[Token(Token = "0x4000ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		private bool original;

		[Token(Token = "0x17000143")]
		public override string name
		{
			[Token(Token = "0x6000E38")]
			[Address(RVA = "0xC9D5D8", Offset = "0xC9D5D8", VA = "0xC9D5D8", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E39")]
		[Address(RVA = "0xC9D654", Offset = "0xC9D654", VA = "0xC9D654", Slot = "26")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6000E3A")]
		[Address(RVA = "0xC9D660", Offset = "0xC9D660", VA = "0xC9D660", Slot = "27")]
		public override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6000E3B")]
		[Address(RVA = "0xC9D66C", Offset = "0xC9D66C", VA = "0xC9D66C", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000E3C")]
		[Address(RVA = "0xC9D86C", Offset = "0xC9D86C", VA = "0xC9D86C")]
		public Toggle()
		{
		}
	}
	[Token(Token = "0x200023B")]
	[DoNotList]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x9737F8", Offset = "0x9737F8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9737F8", Offset = "0x9737F8")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x9737F8", Offset = "0x9737F8")]
	[AttributeAttribute(Name = "DeserializeFromAttribute", RVA = "0x9737F8", Offset = "0x9737F8")]
	public class CustomFunctionCall : FlowControlNode
	{
		[Token(Token = "0x4000ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private string _sourceOutputUID;

		[Token(Token = "0x4000ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private ValueInput[] portArgs;

		[Token(Token = "0x4000ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private object[] objectArgs;

		[Token(Token = "0x4000AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private FlowOutput fOut;

		[Token(Token = "0x4000AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private object _sourceFunction;

		[Token(Token = "0x17000144")]
		private string sourceFunctionUID
		{
			[Token(Token = "0x6000E3D")]
			[Address(RVA = "0xDFDFA4", Offset = "0xDFDFA4", VA = "0xDFDFA4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E3E")]
			[Address(RVA = "0xDFDFAC", Offset = "0xDFDFAC", VA = "0xDFDFAC")]
			set
			{
			}
		}

		[Token(Token = "0x17000145")]
		public CustomFunctionEvent sourceFunction
		{
			[Token(Token = "0x6000E3F")]
			[Address(RVA = "0xDFDFB4", Offset = "0xDFDFB4", VA = "0xDFDFB4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E40")]
			[Address(RVA = "0xDFE0F0", Offset = "0xDFE0F0", VA = "0xDFE0F0")]
			set
			{
			}
		}

		[Token(Token = "0x17000146")]
		public override string name
		{
			[Token(Token = "0x6000E41")]
			[Address(RVA = "0xDFE0F8", Offset = "0xDFE0F8", VA = "0xDFE0F8", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000147")]
		public override string description
		{
			[Token(Token = "0x6000E42")]
			[Address(RVA = "0xDFE180", Offset = "0xDFE180", VA = "0xDFE180", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E43")]
		[Address(RVA = "0xDFE200", Offset = "0xDFE200", VA = "0xDFE200")]
		public void SetFunction(CustomFunctionEvent func)
		{
		}

		[Token(Token = "0x6000E44")]
		[Address(RVA = "0xDFE270", Offset = "0xDFE270", VA = "0xDFE270", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000E45")]
		[Address(RVA = "0xDFE654", Offset = "0xDFE654", VA = "0xDFE654")]
		private void Invoke(Flow f)
		{
		}

		[Token(Token = "0x6000E46")]
		[Address(RVA = "0xDFEA18", Offset = "0xDFEA18", VA = "0xDFEA18")]
		public CustomFunctionCall()
		{
		}

		[Token(Token = "0x6000E47")]
		[Address(RVA = "0xDFEA20", Offset = "0xDFEA20", VA = "0xDFEA20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9860B4", Offset = "0x9860B4")]
		private bool <get_sourceFunction>b__9_0(CustomFunctionEvent i)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200023C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x9738B4", Offset = "0x9738B4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9738B4", Offset = "0x9738B4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x9738B4", Offset = "0x9738B4")]
	[AttributeAttribute(Name = "DeserializeFromAttribute", RVA = "0x9738B4", Offset = "0x9738B4")]
	public class CustomFunctionEvent : EventNode, IInvokable, IEditorMenuCallbackReceiver
	{
		[Serializable]
		[Token(Token = "0x2000722")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9794AC", Offset = "0x9794AC")]
		private sealed class <>c
		{
			[Token(Token = "0x4001EF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001EF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<DynamicPortDefinition, Type> <>9__16_0;

			[Token(Token = "0x600254E")]
			[Address(RVA = "0xDFF5DC", Offset = "0xDFF5DC", VA = "0xDFF5DC")]
			public <>c()
			{
			}

			[Token(Token = "0x600254F")]
			[Address(RVA = "0xDFF5E4", Offset = "0xDFF5E4", VA = "0xDFF5E4")]
			internal Type <get_parameterTypes>b__16_0(DynamicPortDefinition p)
			{
				return null;
			}
		}

		[Token(Token = "0x2000723")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9794BC", Offset = "0x9794BC")]
		private sealed class <>c__DisplayClass19_0
		{
			[Token(Token = "0x4001EFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int i;

			[Token(Token = "0x4001EFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CustomFunctionEvent <>4__this;

			[Token(Token = "0x6002550")]
			[Address(RVA = "0xDFEDFC", Offset = "0xDFEDFC", VA = "0xDFEDFC")]
			public <>c__DisplayClass19_0()
			{
			}

			[Token(Token = "0x6002551")]
			[Address(RVA = "0xDFF614", Offset = "0xDFF614", VA = "0xDFF614")]
			internal object <RegisterPorts>b__0()
			{
				return null;
			}
		}

		[Token(Token = "0x2000724")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9794CC", Offset = "0x9794CC")]
		private sealed class <>c__DisplayClass22_0
		{
			[Token(Token = "0x4001EFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<object> callback;

			[Token(Token = "0x4001EFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CustomFunctionEvent <>4__this;

			[Token(Token = "0x6002552")]
			[Address(RVA = "0xDFF06C", Offset = "0xDFF06C", VA = "0xDFF06C")]
			public <>c__DisplayClass22_0()
			{
			}

			[Token(Token = "0x6002553")]
			[Address(RVA = "0xDFF678", Offset = "0xDFF678", VA = "0xDFF678")]
			internal void <NodeCanvas.Framework.IInvokable.InvokeAsync>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x2000725")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9794DC", Offset = "0x9794DC")]
		private sealed class <>c__DisplayClass24_0
		{
			[Token(Token = "0x4001EFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CustomFunctionEvent <>4__this;

			[Token(Token = "0x4001EFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FlowHandler flowCallback;

			[Token(Token = "0x4001F00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Flow f;

			[Token(Token = "0x6002554")]
			[Address(RVA = "0xDFF074", Offset = "0xDFF074", VA = "0xDFF074")]
			public <>c__DisplayClass24_0()
			{
			}

			[Token(Token = "0x6002555")]
			[Address(RVA = "0xDFF6EC", Offset = "0xDFF6EC", VA = "0xDFF6EC")]
			internal void <InvokeAsync>b__0(object o)
			{
			}
		}

		[Token(Token = "0x4000AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97F8E8", Offset = "0x97F8E8")]
		[DelayedField]
		public string identifier;

		[Token(Token = "0x4000AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private List<DynamicPortDefinition> _parameters;

		[Token(Token = "0x4000AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private DynamicPortDefinition _returns;

		[Token(Token = "0x4000AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private object[] args;

		[Token(Token = "0x4000AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private object returnValue;

		[Token(Token = "0x4000AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private FlowOutput onInvoke;

		[Token(Token = "0x4000AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool isInvoking;

		[Token(Token = "0x17000148")]
		public List<DynamicPortDefinition> parameters
		{
			[Token(Token = "0x6000E48")]
			[Address(RVA = "0xDFE644", Offset = "0xDFE644", VA = "0xDFE644")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E49")]
			[Address(RVA = "0xDFEA60", Offset = "0xDFEA60", VA = "0xDFEA60")]
			private set
			{
			}
		}

		[Token(Token = "0x17000149")]
		public DynamicPortDefinition returns
		{
			[Token(Token = "0x6000E4A")]
			[Address(RVA = "0xDFE64C", Offset = "0xDFE64C", VA = "0xDFE64C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E4B")]
			[Address(RVA = "0xDFEA68", Offset = "0xDFEA68", VA = "0xDFEA68")]
			private set
			{
			}
		}

		[Token(Token = "0x1700014A")]
		private Type returnType
		{
			[Token(Token = "0x6000E4C")]
			[Address(RVA = "0xDFEA70", Offset = "0xDFEA70", VA = "0xDFEA70")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014B")]
		private Type[] parameterTypes
		{
			[Token(Token = "0x6000E4D")]
			[Address(RVA = "0xDFEAA0", Offset = "0xDFEAA0", VA = "0xDFEAA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014C")]
		public override string name
		{
			[Token(Token = "0x6000E4E")]
			[Address(RVA = "0xDFEBA0", Offset = "0xDFEBA0", VA = "0xDFEBA0", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E4F")]
		[Address(RVA = "0xDFEBF4", Offset = "0xDFEBF4", VA = "0xDFEBF4", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000E50")]
		[Address(RVA = "0xDFEE04", Offset = "0xDFEE04", VA = "0xDFEE04", Slot = "39")]
		private string NodeCanvas.Framework.IInvokable.GetInvocationID()
		{
			return null;
		}

		[Token(Token = "0x6000E51")]
		[Address(RVA = "0xDFEE0C", Offset = "0xDFEE0C", VA = "0xDFEE0C", Slot = "40")]
		private object NodeCanvas.Framework.IInvokable.Invoke(params object[] args)
		{
			return null;
		}

		[Token(Token = "0x6000E52")]
		[Address(RVA = "0xDFEF80", Offset = "0xDFEF80", VA = "0xDFEF80", Slot = "41")]
		private void NodeCanvas.Framework.IInvokable.InvokeAsync(Action<object> callback, params object[] args)
		{
		}

		[Token(Token = "0x6000E53")]
		[Address(RVA = "0xDFEE14", Offset = "0xDFEE14", VA = "0xDFEE14")]
		public object Invoke(Flow f, params object[] args)
		{
			return null;
		}

		[Token(Token = "0x6000E54")]
		[Address(RVA = "0xDFE854", Offset = "0xDFE854", VA = "0xDFE854")]
		public void InvokeAsync(Flow f, FlowHandler flowCallback, params object[] args)
		{
		}

		[Token(Token = "0x6000E55")]
		[Address(RVA = "0xDFF07C", Offset = "0xDFF07C", VA = "0xDFF07C")]
		public object GetReturnValue()
		{
			return null;
		}

		[Token(Token = "0x6000E56")]
		[Address(RVA = "0xDFF084", Offset = "0xDFF084", VA = "0xDFF084")]
		private void AddParameter(Type type)
		{
		}

		[Token(Token = "0x6000E57")]
		[Address(RVA = "0xDFF160", Offset = "0xDFF160", VA = "0xDFF160")]
		private void GatherPortsUpdateRefs()
		{
		}

		[Token(Token = "0x6000E58")]
		[Address(RVA = "0xDFF480", Offset = "0xDFF480", VA = "0xDFF480")]
		public CustomFunctionEvent()
		{
		}

		[Token(Token = "0x6000E59")]
		[Address(RVA = "0xDFF530", Offset = "0xDFF530", VA = "0xDFF530")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9860C4", Offset = "0x9860C4")]
		private void <Invoke>b__23_0(object o)
		{
		}

		[Token(Token = "0x6000E5A")]
		[Address(RVA = "0xDFF53C", Offset = "0xDFF53C", VA = "0xDFF53C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9860D4", Offset = "0x9860D4")]
		private bool <GatherPortsUpdateRefs>b__27_0(CustomFunctionCall n)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200023D")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x973960", Offset = "0x973960")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x973960", Offset = "0x973960")]
	[AttributeAttribute(Name = "ContextDefinedInputsAttribute", RVA = "0x973960", Offset = "0x973960")]
	public class Return : FlowControlNode
	{
		[Token(Token = "0x4000AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[GatherPortsCallback]
		public bool useReturnValue;

		[Token(Token = "0x4000ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private ValueInput<object> returnPort;

		[Token(Token = "0x6000E5B")]
		[Address(RVA = "0xC99610", Offset = "0xC99610", VA = "0xC99610", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000E5C")]
		[Address(RVA = "0xC996D8", Offset = "0xC996D8", VA = "0xC996D8")]
		public Return()
		{
		}

		[Token(Token = "0x6000E5D")]
		[Address(RVA = "0xC996E8", Offset = "0xC996E8", VA = "0xC996E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9860E4", Offset = "0x9860E4")]
		private void <RegisterPorts>b__2_0(Flow f)
		{
		}
	}
	[Token(Token = "0x200023E")]
	public abstract class CallableActionNodeBase : SimplexNode
	{
		[Token(Token = "0x6000E5E")]
		[Address(RVA = "0xDFA8A4", Offset = "0xDFA8A4", VA = "0xDFA8A4")]
		protected CallableActionNodeBase()
		{
		}
	}
	[Token(Token = "0x200023F")]
	public abstract class CallableActionNode : CallableActionNodeBase
	{
		[Token(Token = "0x2000726")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9794EC", Offset = "0x9794EC")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4001F01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CallableActionNode <>4__this;

			[Token(Token = "0x4001F02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FlowOutput o;

			[Token(Token = "0x6002556")]
			[Address(RVA = "0xDFA894", Offset = "0xDFA894", VA = "0xDFA894")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6002557")]
			[Address(RVA = "0xDFA8AC", Offset = "0xDFA8AC", VA = "0xDFA8AC")]
			internal void <OnRegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x6000E5F")]
		public abstract void Invoke();

		[Token(Token = "0x6000E60")]
		[Address(RVA = "0xDFA794", Offset = "0xDFA794", VA = "0xDFA794", Slot = "6")]
		protected sealed override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6000E61")]
		[Address(RVA = "0xDFA89C", Offset = "0xDFA89C", VA = "0xDFA89C")]
		protected CallableActionNode()
		{
		}
	}
	[Token(Token = "0x2000240")]
	public abstract class CallableActionNode<T1> : CallableActionNodeBase
	{
		[Token(Token = "0x2000727")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9794FC", Offset = "0x9794FC")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4001F03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CallableActionNode<T1> <>4__this;

			[Token(Token = "0x4001F04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4001F05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x6002558")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6002559")]
			internal void <OnRegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x6000E62")]
		public abstract void Invoke(T1 a);

		[Token(Token = "0x6000E63")]
		protected sealed override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6000E64")]
		protected CallableActionNode()
		{
		}
	}
	[Token(Token = "0x2000241")]
	public abstract class CallableActionNode<T1, T2> : CallableActionNodeBase
	{
		[Token(Token = "0x2000728")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97950C", Offset = "0x97950C")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4001F06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CallableActionNode<T1, T2> <>4__this;

			[Token(Token = "0x4001F07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4001F08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4001F09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x600255A")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x600255B")]
			internal void <OnRegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x6000E65")]
		public abstract void Invoke(T1 a, T2 b);

		[Token(Token = "0x6000E66")]
		protected sealed override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6000E67")]
		protected CallableActionNode()
		{
		}
	}
	[Token(Token = "0x2000242")]
	public abstract class CallableActionNode<T1, T2, T3> : CallableActionNodeBase
	{
		[Token(Token = "0x2000729")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97951C", Offset = "0x97951C")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4001F0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CallableActionNode<T1, T2, T3> <>4__this;

			[Token(Token = "0x4001F0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4001F0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4001F0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x4001F0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x600255C")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x600255D")]
			internal void <OnRegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x6000E68")]
		public abstract void Invoke(T1 a, T2 b, T3 c);

		[Token(Token = "0x6000E69")]
		protected sealed override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6000E6A")]
		protected CallableActionNode()
		{
		}
	}
	[Token(Token = "0x2000243")]
	public abstract class CallableActionNode<T1, T2, T3, T4> : CallableActionNodeBase
	{
		[Token(Token = "0x200072A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97952C", Offset = "0x97952C")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4001F0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CallableActionNode<T1, T2, T3, T4> <>4__this;

			[Token(Token = "0x4001F10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4001F11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4001F12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x4001F13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T4> p4;

			[Token(Token = "0x4001F14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x600255E")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x600255F")]
			internal void <OnRegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x6000E6B")]
		public abstract void Invoke(T1 a, T2 b, T3 c, T4 d);

		[Token(Token = "0x6000E6C")]
		protected sealed override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6000E6D")]
		protected CallableActionNode()
		{
		}
	}
	[Token(Token = "0x2000244")]
	public abstract class CallableActionNode<T1, T2, T3, T4, T5> : CallableActionNodeBase
	{
		[Token(Token = "0x200072B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97953C", Offset = "0x97953C")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4001F15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CallableActionNode<T1, T2, T3, T4, T5> <>4__this;

			[Token(Token = "0x4001F16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4001F17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4001F18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x4001F19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T4> p4;

			[Token(Token = "0x4001F1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T5> p5;

			[Token(Token = "0x4001F1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x6002560")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6002561")]
			internal void <OnRegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x6000E6E")]
		public abstract void Invoke(T1 a, T2 b, T3 c, T4 d, T5 e);

		[Token(Token = "0x6000E6F")]
		protected sealed override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6000E70")]
		protected CallableActionNode()
		{
		}
	}
	[Token(Token = "0x2000245")]
	public abstract class CallableActionNode<T1, T2, T3, T4, T5, T6> : CallableActionNodeBase
	{
		[Token(Token = "0x200072C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97954C", Offset = "0x97954C")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4001F1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CallableActionNode<T1, T2, T3, T4, T5, T6> <>4__this;

			[Token(Token = "0x4001F1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4001F1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4001F1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x4001F20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T4> p4;

			[Token(Token = "0x4001F21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T5> p5;

			[Token(Token = "0x4001F22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T6> p6;

			[Token(Token = "0x4001F23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x6002562")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6002563")]
			internal void <OnRegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x6000E71")]
		public abstract void Invoke(T1 a, T2 b, T3 c, T4 d, T5 e, T6 f);

		[Token(Token = "0x6000E72")]
		protected sealed override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6000E73")]
		protected CallableActionNode()
		{
		}
	}
	[Token(Token = "0x2000246")]
	public abstract class CallableActionNode<T1, T2, T3, T4, T5, T6, T7> : CallableActionNodeBase
	{
		[Token(Token = "0x200072D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97955C", Offset = "0x97955C")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4001F24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CallableActionNode<T1, T2, T3, T4, T5, T6, T7> <>4__this;

			[Token(Token = "0x4001F25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4001F26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4001F27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x4001F28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T4> p4;

			[Token(Token = "0x4001F29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T5> p5;

			[Token(Token = "0x4001F2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T6> p6;

			[Token(Token = "0x4001F2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T7> p7;

			[Token(Token = "0x4001F2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x6002564")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6002565")]
			internal void <OnRegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x6000E74")]
		public abstract void Invoke(T1 a, T2 b, T3 c, T4 d, T5 e, T6 f, T7 g);

		[Token(Token = "0x6000E75")]
		protected sealed override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6000E76")]
		protected CallableActionNode()
		{
		}
	}
	[Token(Token = "0x2000247")]
	public abstract class CallableActionNode<T1, T2, T3, T4, T5, T6, T7, T8> : CallableActionNodeBase
	{
		[Token(Token = "0x200072E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97956C", Offset = "0x97956C")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4001F2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CallableActionNode<T1, T2, T3, T4, T5, T6, T7, T8> <>4__this;

			[Token(Token = "0x4001F2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4001F2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4001F30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x4001F31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T4> p4;

			[Token(Token = "0x4001F32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T5> p5;

			[Token(Token = "0x4001F33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T6> p6;

			[Token(Token = "0x4001F34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T7> p7;

			[Token(Token = "0x4001F35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T8> p8;

			[Token(Token = "0x4001F36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x6002566")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6002567")]
			internal void <OnRegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x6000E77")]
		public abstract void Invoke(T1 a, T2 b, T3 c, T4 d, T5 e, T6 f, T7 g, T8 h);

		[Token(Token = "0x6000E78")]
		protected sealed override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6000E79")]
		protected CallableActionNode()
		{
		}
	}
	[Token(Token = "0x2000248")]
	public abstract class CallableActionNode<T1, T2, T3, T4, T5, T6, T7, T8, T9> : CallableActionNodeBase
	{
		[Token(Token = "0x200072F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97957C", Offset = "0x97957C")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4001F37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CallableActionNode<T1, T2, T3, T4, T5, T6, T7, T8, T9> <>4__this;

			[Token(Token = "0x4001F38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4001F39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4001F3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x4001F3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T4> p4;

			[Token(Token = "0x4001F3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T5> p5;

			[Token(Token = "0x4001F3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T6> p6;

			[Token(Token = "0x4001F3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T7> p7;

			[Token(Token = "0x4001F3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T8> p8;

			[Token(Token = "0x4001F40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T9> p9;

			[Token(Token = "0x4001F41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x6002568")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6002569")]
			internal void <OnRegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x6000E7A")]
		public abstract void Invoke(T1 a, T2 b, T3 c, T4 d, T5 e, T6 f, T7 g, T8 h, T9 i);

		[Token(Token = "0x6000E7B")]
		protected sealed override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6000E7C")]
		protected CallableActionNode()
		{
		}
	}
	[Token(Token = "0x2000249")]
	public abstract class CallableActionNode<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> : CallableActionNodeBase
	{
		[Token(Token = "0x2000730")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97958C", Offset = "0x97958C")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4001F42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CallableActionNode<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> <>4__this;

			[Token(Token = "0x4001F43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4001F44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4001F45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x4001F46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T4> p4;

			[Token(Token = "0x4001F47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T5> p5;

			[Token(Token = "0x4001F48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T6> p6;

			[Token(Token = "0x4001F49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T7> p7;

			[Token(Token = "0x4001F4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T8> p8;

			[Token(Token = "0x4001F4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T9> p9;

			[Token(Token = "0x4001F4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T10> p10;

			[Token(Token = "0x4001F4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x600256A")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x600256B")]
			internal void <OnRegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x6000E7D")]
		public abstract void Invoke(T1 a, T2 b, T3 c, T4 d, T5 e, T6 f, T7 g, T8 h, T9 i, T10 j);

		[Token(Token = "0x6000E7E")]
		protected sealed override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6000E7F")]
		protected CallableActionNode()
		{
		}
	}
	[Token(Token = "0x200024A")]
	public abstract class CallableFunctionNodeBase : SimplexNode
	{
		[Token(Token = "0x6000E80")]
		[Address(RVA = "0xDFA940", Offset = "0xDFA940", VA = "0xDFA940")]
		protected CallableFunctionNodeBase()
		{
		}
	}
	[Token(Token = "0x200024B")]
	public abstract class CallableFunctionNode<TResult> : CallableFunctionNodeBase
	{
		[Token(Token = "0x2000731")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97959C", Offset = "0x97959C")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4001F4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CallableFunctionNode<TResult> <>4__this;

			[Token(Token = "0x4001F4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x600256C")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x600256D")]
			internal TResult <OnRegisterPorts>b__0()
			{
				return (TResult)null;
			}

			[Token(Token = "0x600256E")]
			internal void <OnRegisterPorts>b__1(Flow f)
			{
			}
		}

		[Token(Token = "0x4000ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TResult result;

		[Token(Token = "0x6000E81")]
		public abstract TResult Invoke();

		[Token(Token = "0x6000E82")]
		protected sealed override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6000E83")]
		protected CallableFunctionNode()
		{
		}
	}
	[Token(Token = "0x200024C")]
	public abstract class CallableFunctionNode<TResult, T1> : CallableFunctionNodeBase
	{
		[Token(Token = "0x2000732")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9795AC", Offset = "0x9795AC")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4001F50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CallableFunctionNode<TResult, T1> <>4__this;

			[Token(Token = "0x4001F51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4001F52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x600256F")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6002570")]
			internal TResult <OnRegisterPorts>b__0()
			{
				return (TResult)null;
			}

			[Token(Token = "0x6002571")]
			internal void <OnRegisterPorts>b__1(Flow f)
			{
			}
		}

		[Token(Token = "0x4000ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TResult result;

		[Token(Token = "0x6000E84")]
		public abstract TResult Invoke(T1 a);

		[Token(Token = "0x6000E85")]
		protected sealed override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6000E86")]
		protected CallableFunctionNode()
		{
		}
	}
	[Token(Token = "0x200024D")]
	public abstract class CallableFunctionNode<TResult, T1, T2> : CallableFunctionNodeBase
	{
		[Token(Token = "0x2000733")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9795BC", Offset = "0x9795BC")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4001F53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CallableFunctionNode<TResult, T1, T2> <>4__this;

			[Token(Token = "0x4001F54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4001F55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4001F56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x6002572")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6002573")]
			internal TResult <OnRegisterPorts>b__0()
			{
				return (TResult)null;
			}

			[Token(Token = "0x6002574")]
			internal void <OnRegisterPorts>b__1(Flow f)
			{
			}
		}

		[Token(Token = "0x4000ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TResult result;

		[Token(Token = "0x6000E87")]
		public abstract TResult Invoke(T1 a, T2 b);

		[Token(Token = "0x6000E88")]
		protected sealed override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6000E89")]
		protected CallableFunctionNode()
		{
		}
	}
	[Token(Token = "0x200024E")]
	public abstract class CallableFunctionNode<TResult, T1, T2, T3> : CallableFunctionNodeBase
	{
		[Token(Token = "0x2000734")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9795CC", Offset = "0x9795CC")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4001F57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CallableFunctionNode<TResult, T1, T2, T3> <>4__this;

			[Token(Token = "0x4001F58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4001F59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4001F5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x4001F5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x6002575")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6002576")]
			internal TResult <OnRegisterPorts>b__0()
			{
				return (TResult)null;
			}

			[Token(Token = "0x6002577")]
			internal void <OnRegisterPorts>b__1(Flow f)
			{
			}
		}

		[Token(Token = "0x4000ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TResult result;

		[Token(Token = "0x6000E8A")]
		public abstract TResult Invoke(T1 a, T2 b, T3 c);

		[Token(Token = "0x6000E8B")]
		protected sealed override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6000E8C")]
		protected CallableFunctionNode()
		{
		}
	}
	[Token(Token = "0x200024F")]
	public abstract class CallableFunctionNode<TResult, T1, T2, T3, T4> : CallableFunctionNodeBase
	{
		[Token(Token = "0x2000735")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9795DC", Offset = "0x9795DC")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4001F5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CallableFunctionNode<TResult, T1, T2, T3, T4> <>4__this;

			[Token(Token = "0x4001F5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4001F5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4001F5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x4001F60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T4> p4;

			[Token(Token = "0x4001F61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x6002578")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6002579")]
			internal TResult <OnRegisterPorts>b__0()
			{
				return (TResult)null;
			}

			[Token(Token = "0x600257A")]
			internal void <OnRegisterPorts>b__1(Flow f)
			{
			}
		}

		[Token(Token = "0x4000ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TResult result;

		[Token(Token = "0x6000E8D")]
		public abstract TResult Invoke(T1 a, T2 b, T3 c, T4 d);

		[Token(Token = "0x6000E8E")]
		protected sealed override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6000E8F")]
		protected CallableFunctionNode()
		{
		}
	}
	[Token(Token = "0x2000250")]
	public abstract class CallableFunctionNode<TResult, T1, T2, T3, T4, T5> : CallableFunctionNodeBase
	{
		[Token(Token = "0x2000736")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9795EC", Offset = "0x9795EC")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4001F62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CallableFunctionNode<TResult, T1, T2, T3, T4, T5> <>4__this;

			[Token(Token = "0x4001F63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4001F64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4001F65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x4001F66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T4> p4;

			[Token(Token = "0x4001F67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T5> p5;

			[Token(Token = "0x4001F68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x600257B")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x600257C")]
			internal TResult <OnRegisterPorts>b__0()
			{
				return (TResult)null;
			}

			[Token(Token = "0x600257D")]
			internal void <OnRegisterPorts>b__1(Flow f)
			{
			}
		}

		[Token(Token = "0x4000AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TResult result;

		[Token(Token = "0x6000E90")]
		public abstract TResult Invoke(T1 a, T2 b, T3 c, T4 d, T5 e);

		[Token(Token = "0x6000E91")]
		protected sealed override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6000E92")]
		protected CallableFunctionNode()
		{
		}
	}
	[Token(Token = "0x2000251")]
	public abstract class CallableFunctionNode<TResult, T1, T2, T3, T4, T5, T6> : CallableFunctionNodeBase
	{
		[Token(Token = "0x2000737")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9795FC", Offset = "0x9795FC")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4001F69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CallableFunctionNode<TResult, T1, T2, T3, T4, T5, T6> <>4__this;

			[Token(Token = "0x4001F6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4001F6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4001F6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x4001F6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T4> p4;

			[Token(Token = "0x4001F6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T5> p5;

			[Token(Token = "0x4001F6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T6> p6;

			[Token(Token = "0x4001F70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x600257E")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x600257F")]
			internal TResult <OnRegisterPorts>b__0()
			{
				return (TResult)null;
			}

			[Token(Token = "0x6002580")]
			internal void <OnRegisterPorts>b__1(Flow f)
			{
			}
		}

		[Token(Token = "0x4000AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TResult result;

		[Token(Token = "0x6000E93")]
		public abstract TResult Invoke(T1 a, T2 b, T3 c, T4 d, T5 e, T6 f);

		[Token(Token = "0x6000E94")]
		protected sealed override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6000E95")]
		protected CallableFunctionNode()
		{
		}
	}
	[Token(Token = "0x2000252")]
	public abstract class CallableFunctionNode<TResult, T1, T2, T3, T4, T5, T6, T7> : CallableFunctionNodeBase
	{
		[Token(Token = "0x2000738")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97960C", Offset = "0x97960C")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4001F71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CallableFunctionNode<TResult, T1, T2, T3, T4, T5, T6, T7> <>4__this;

			[Token(Token = "0x4001F72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4001F73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4001F74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x4001F75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T4> p4;

			[Token(Token = "0x4001F76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T5> p5;

			[Token(Token = "0x4001F77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T6> p6;

			[Token(Token = "0x4001F78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T7> p7;

			[Token(Token = "0x4001F79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x6002581")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6002582")]
			internal TResult <OnRegisterPorts>b__0()
			{
				return (TResult)null;
			}

			[Token(Token = "0x6002583")]
			internal void <OnRegisterPorts>b__1(Flow f)
			{
			}
		}

		[Token(Token = "0x4000AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TResult result;

		[Token(Token = "0x6000E96")]
		public abstract TResult Invoke(T1 a, T2 b, T3 c, T4 d, T5 e, T6 f, T7 g);

		[Token(Token = "0x6000E97")]
		protected sealed override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6000E98")]
		protected CallableFunctionNode()
		{
		}
	}
	[Token(Token = "0x2000253")]
	public abstract class CallableFunctionNode<TResult, T1, T2, T3, T4, T5, T6, T7, T8> : CallableFunctionNodeBase
	{
		[Token(Token = "0x2000739")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97961C", Offset = "0x97961C")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4001F7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CallableFunctionNode<TResult, T1, T2, T3, T4, T5, T6, T7, T8> <>4__this;

			[Token(Token = "0x4001F7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4001F7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4001F7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x4001F7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T4> p4;

			[Token(Token = "0x4001F7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T5> p5;

			[Token(Token = "0x4001F80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T6> p6;

			[Token(Token = "0x4001F81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T7> p7;

			[Token(Token = "0x4001F82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T8> p8;

			[Token(Token = "0x4001F83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x6002584")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6002585")]
			internal TResult <OnRegisterPorts>b__0()
			{
				return (TResult)null;
			}

			[Token(Token = "0x6002586")]
			internal void <OnRegisterPorts>b__1(Flow f)
			{
			}
		}

		[Token(Token = "0x4000AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TResult result;

		[Token(Token = "0x6000E99")]
		public abstract TResult Invoke(T1 a, T2 b, T3 c, T4 d, T5 e, T6 f, T7 g, T8 h);

		[Token(Token = "0x6000E9A")]
		protected sealed override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6000E9B")]
		protected CallableFunctionNode()
		{
		}
	}
	[Token(Token = "0x2000254")]
	public abstract class CallableFunctionNode<TResult, T1, T2, T3, T4, T5, T6, T7, T8, T9> : CallableFunctionNodeBase
	{
		[Token(Token = "0x200073A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97962C", Offset = "0x97962C")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4001F84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CallableFunctionNode<TResult, T1, T2, T3, T4, T5, T6, T7, T8, T9> <>4__this;

			[Token(Token = "0x4001F85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4001F86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4001F87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x4001F88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T4> p4;

			[Token(Token = "0x4001F89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T5> p5;

			[Token(Token = "0x4001F8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T6> p6;

			[Token(Token = "0x4001F8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T7> p7;

			[Token(Token = "0x4001F8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T8> p8;

			[Token(Token = "0x4001F8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T9> p9;

			[Token(Token = "0x4001F8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x6002587")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6002588")]
			internal TResult <OnRegisterPorts>b__0()
			{
				return (TResult)null;
			}

			[Token(Token = "0x6002589")]
			internal void <OnRegisterPorts>b__1(Flow f)
			{
			}
		}

		[Token(Token = "0x4000AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TResult result;

		[Token(Token = "0x6000E9C")]
		public abstract TResult Invoke(T1 a, T2 b, T3 c, T4 d, T5 e, T6 f, T7 g, T8 h, T9 i);

		[Token(Token = "0x6000E9D")]
		protected sealed override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6000E9E")]
		protected CallableFunctionNode()
		{
		}
	}
	[Token(Token = "0x2000255")]
	public abstract class CallableFunctionNode<TResult, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> : CallableFunctionNodeBase
	{
		[Token(Token = "0x200073B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97963C", Offset = "0x97963C")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4001F8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CallableFunctionNode<TResult, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> <>4__this;

			[Token(Token = "0x4001F90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4001F91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4001F92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x4001F93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T4> p4;

			[Token(Token = "0x4001F94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T5> p5;

			[Token(Token = "0x4001F95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T6> p6;

			[Token(Token = "0x4001F96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T7> p7;

			[Token(Token = "0x4001F97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T8> p8;

			[Token(Token = "0x4001F98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T9> p9;

			[Token(Token = "0x4001F99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T10> p10;

			[Token(Token = "0x4001F9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x600258A")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x600258B")]
			internal TResult <OnRegisterPorts>b__0()
			{
				return (TResult)null;
			}

			[Token(Token = "0x600258C")]
			internal void <OnRegisterPorts>b__1(Flow f)
			{
			}
		}

		[Token(Token = "0x4000AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TResult result;

		[Token(Token = "0x6000E9F")]
		public abstract TResult Invoke(T1 a, T2 b, T3 c, T4 d, T5 e, T6 f, T7 g, T8 h, T9 i, T10 j);

		[Token(Token = "0x6000EA0")]
		protected sealed override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6000EA1")]
		protected CallableFunctionNode()
		{
		}
	}
	[Token(Token = "0x2000256")]
	public abstract class ExtractorNode : SimplexNode
	{
		[Serializable]
		[Token(Token = "0x200073C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97964C", Offset = "0x97964C")]
		private sealed class <>c
		{
			[Token(Token = "0x4001F9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001F9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Type, bool> <>9__1_0;

			[Token(Token = "0x600258E")]
			[Address(RVA = "0xE02234", Offset = "0xE02234", VA = "0xE02234")]
			public <>c()
			{
			}

			[Token(Token = "0x600258F")]
			[Address(RVA = "0xE0223C", Offset = "0xE0223C", VA = "0xE0223C")]
			internal bool <GetExtractorType>b__1_0(Type t)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<Type, Type> _extractors;

		[Token(Token = "0x6000EA2")]
		[Address(RVA = "0xE01CA0", Offset = "0xE01CA0", VA = "0xE01CA0")]
		public static Type GetExtractorType(Type type)
		{
			return null;
		}

		[Token(Token = "0x6000EA3")]
		[Address(RVA = "0xE021C8", Offset = "0xE021C8", VA = "0xE021C8")]
		protected ExtractorNode()
		{
		}
	}
	[Token(Token = "0x2000257")]
	public abstract class ExtractorNode<TInstance, T1, T2> : ExtractorNode
	{
		[Token(Token = "0x200073D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97965C", Offset = "0x97965C")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4001F9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ExtractorNode<TInstance, T1, T2> <>4__this;

			[Token(Token = "0x4001F9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<TInstance> i;

			[Token(Token = "0x6002590")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6002591")]
			internal T1 <OnRegisterPorts>b__0()
			{
				return (T1)null;
			}

			[Token(Token = "0x6002592")]
			internal T2 <OnRegisterPorts>b__1()
			{
				return (T2)null;
			}
		}

		[Token(Token = "0x4000AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T1 a;

		[Token(Token = "0x4000AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T2 b;

		[Token(Token = "0x6000EA4")]
		public abstract void Invoke(TInstance instance, out T1 a, out T2 b);

		[Token(Token = "0x6000EA5")]
		protected sealed override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6000EA6")]
		protected ExtractorNode()
		{
		}
	}
	[Token(Token = "0x2000258")]
	public abstract class ExtractorNode<TInstance, T1, T2, T3> : ExtractorNode
	{
		[Token(Token = "0x200073E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97966C", Offset = "0x97966C")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4001F9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ExtractorNode<TInstance, T1, T2, T3> <>4__this;

			[Token(Token = "0x4001FA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<TInstance> i;

			[Token(Token = "0x6002593")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x6002594")]
			internal T1 <OnRegisterPorts>b__0()
			{
				return (T1)null;
			}

			[Token(Token = "0x6002595")]
			internal T2 <OnRegisterPorts>b__1()
			{
				return (T2)null;
			}

			[Token(Token = "0x6002596")]
			internal T3 <OnRegisterPorts>b__2()
			{
				return (T3)null;
			}
		}

		[Token(Token = "0x4000AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T1 a;

		[Token(Token = "0x4000ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T2 b;

		[Token(Token = "0x4000ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T3 c;

		[Token(Token = "0x6000EA7")]
		public abstract void Invoke(TInstance instance, out T1 a, out T2 b, out T3 c);

		[Token(Token = "0x6000EA8")]
		protected sealed override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6000EA9")]
		protected ExtractorNode()
		{
		}
	}
	[Token(Token = "0x2000259")]
	public abstract class ExtractorNode<TInstance, T1, T2, T3, T4> : ExtractorNode
	{
		[Token(Token = "0x200073F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97967C", Offset = "0x97967C")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x4001FA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ExtractorNode<TInstance, T1, T2, T3, T4> <>4__this;

			[Token(Token = "0x4001FA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<TInstance> i;

			[Token(Token = "0x6002597")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x6002598")]
			internal T1 <OnRegisterPorts>b__0()
			{
				return (T1)null;
			}

			[Token(Token = "0x6002599")]
			internal T2 <OnRegisterPorts>b__1()
			{
				return (T2)null;
			}

			[Token(Token = "0x600259A")]
			internal T3 <OnRegisterPorts>b__2()
			{
				return (T3)null;
			}

			[Token(Token = "0x600259B")]
			internal T4 <OnRegisterPorts>b__3()
			{
				return (T4)null;
			}
		}

		[Token(Token = "0x4000ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T1 a;

		[Token(Token = "0x4000ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T2 b;

		[Token(Token = "0x4000ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T3 c;

		[Token(Token = "0x4000ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T4 d;

		[Token(Token = "0x6000EAA")]
		public abstract void Invoke(TInstance instance, out T1 a, out T2 b, out T3 c, out T4 d);

		[Token(Token = "0x6000EAB")]
		protected sealed override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6000EAC")]
		protected ExtractorNode()
		{
		}
	}
	[Token(Token = "0x200025A")]
	public abstract class ExtractorNode<TInstance, T1, T2, T3, T4, T5> : ExtractorNode
	{
		[Token(Token = "0x2000740")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97968C", Offset = "0x97968C")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4001FA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ExtractorNode<TInstance, T1, T2, T3, T4, T5> <>4__this;

			[Token(Token = "0x4001FA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<TInstance> i;

			[Token(Token = "0x600259C")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x600259D")]
			internal T1 <OnRegisterPorts>b__0()
			{
				return (T1)null;
			}

			[Token(Token = "0x600259E")]
			internal T2 <OnRegisterPorts>b__1()
			{
				return (T2)null;
			}

			[Token(Token = "0x600259F")]
			internal T3 <OnRegisterPorts>b__2()
			{
				return (T3)null;
			}

			[Token(Token = "0x60025A0")]
			internal T4 <OnRegisterPorts>b__3()
			{
				return (T4)null;
			}

			[Token(Token = "0x60025A1")]
			internal T5 <OnRegisterPorts>b__4()
			{
				return (T5)null;
			}
		}

		[Token(Token = "0x4000AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T1 a;

		[Token(Token = "0x4000AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T2 b;

		[Token(Token = "0x4000AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T3 c;

		[Token(Token = "0x4000AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T4 d;

		[Token(Token = "0x4000AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T5 e;

		[Token(Token = "0x6000EAD")]
		public abstract void Invoke(TInstance instance, out T1 a, out T2 b, out T3 c, out T4 d, out T5 e);

		[Token(Token = "0x6000EAE")]
		protected sealed override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6000EAF")]
		protected ExtractorNode()
		{
		}
	}
	[Token(Token = "0x200025B")]
	public abstract class ExtractorNode<TInstance, T1, T2, T3, T4, T5, T6> : ExtractorNode
	{
		[Token(Token = "0x2000741")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97969C", Offset = "0x97969C")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4001FA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ExtractorNode<TInstance, T1, T2, T3, T4, T5, T6> <>4__this;

			[Token(Token = "0x4001FA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<TInstance> i;

			[Token(Token = "0x60025A2")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x60025A3")]
			internal T1 <OnRegisterPorts>b__0()
			{
				return (T1)null;
			}

			[Token(Token = "0x60025A4")]
			internal T2 <OnRegisterPorts>b__1()
			{
				return (T2)null;
			}

			[Token(Token = "0x60025A5")]
			internal T3 <OnRegisterPorts>b__2()
			{
				return (T3)null;
			}

			[Token(Token = "0x60025A6")]
			internal T4 <OnRegisterPorts>b__3()
			{
				return (T4)null;
			}

			[Token(Token = "0x60025A7")]
			internal T5 <OnRegisterPorts>b__4()
			{
				return (T5)null;
			}

			[Token(Token = "0x60025A8")]
			internal T6 <OnRegisterPorts>b__5()
			{
				return (T6)null;
			}
		}

		[Token(Token = "0x4000AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T1 a;

		[Token(Token = "0x4000AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T2 b;

		[Token(Token = "0x4000AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T3 c;

		[Token(Token = "0x4000AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T4 d;

		[Token(Token = "0x4000AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T5 e;

		[Token(Token = "0x4000AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T6 f;

		[Token(Token = "0x6000EB0")]
		public abstract void Invoke(TInstance instance, out T1 a, out T2 b, out T3 c, out T4 d, out T5 e, out T6 f);

		[Token(Token = "0x6000EB1")]
		protected sealed override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6000EB2")]
		protected ExtractorNode()
		{
		}
	}
	[Token(Token = "0x200025C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x973A28", Offset = "0x973A28")]
	[ExposeAsDefinition]
	public class AddDictionaryItem<T> : CallableFunctionNode<IDictionary<string, T>, IDictionary<string, T>, string, T>
	{
		[Token(Token = "0x6000EB3")]
		public override IDictionary<string, T> Invoke(IDictionary<string, T> dict, string key, T item)
		{
			return null;
		}

		[Token(Token = "0x6000EB4")]
		public AddDictionaryItem()
		{
		}
	}
	[Token(Token = "0x200025D")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x973A74", Offset = "0x973A74")]
	[ExposeAsDefinition]
	public class GetDictionaryItem<T> : CallableFunctionNode<T, IDictionary<string, T>, string>
	{
		[Token(Token = "0x6000EB5")]
		public override T Invoke(IDictionary<string, T> dict, string key)
		{
			return (T)null;
		}

		[Token(Token = "0x6000EB6")]
		public GetDictionaryItem()
		{
		}
	}
	[Token(Token = "0x200025E")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x973AC0", Offset = "0x973AC0")]
	[ExposeAsDefinition]
	public class RemoveDictionaryKey<T> : CallableFunctionNode<IDictionary<string, T>, IDictionary<string, T>, string>
	{
		[Token(Token = "0x6000EB7")]
		public override IDictionary<string, T> Invoke(IDictionary<string, T> dict, string key)
		{
			return null;
		}

		[Token(Token = "0x6000EB8")]
		public RemoveDictionaryKey()
		{
		}
	}
	[Token(Token = "0x200025F")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x973B0C", Offset = "0x973B0C")]
	[ExposeAsDefinition]
	public class ClearDictionary : CallableFunctionNode<IDictionary, IDictionary>
	{
		[Token(Token = "0x6000EB9")]
		[Address(RVA = "0xDFB06C", Offset = "0xDFB06C", VA = "0xDFB06C", Slot = "12")]
		public override IDictionary Invoke(IDictionary dict)
		{
			return null;
		}

		[Token(Token = "0x6000EBA")]
		[Address(RVA = "0xDFB128", Offset = "0xDFB128", VA = "0xDFB128")]
		public ClearDictionary()
		{
		}
	}
	[Token(Token = "0x2000260")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x973B58", Offset = "0x973B58")]
	[ExposeAsDefinition]
	public class TryGetValue<T> : CallableFunctionNode<T, IDictionary<string, T>, string>
	{
		[Token(Token = "0x4000AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97F964", Offset = "0x97F964")]
		private bool <exists>k__BackingField;

		[Token(Token = "0x1700014D")]
		public bool exists
		{
			[Token(Token = "0x6000EBB")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9860F4", Offset = "0x9860F4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000EBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986104", Offset = "0x986104")]
			private set
			{
			}
		}

		[Token(Token = "0x6000EBD")]
		public override T Invoke(IDictionary<string, T> dict, string key)
		{
			return (T)null;
		}

		[Token(Token = "0x6000EBE")]
		public TryGetValue()
		{
		}
	}
	[Token(Token = "0x2000261")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x973BA4", Offset = "0x973BA4")]
	[ExposeAsDefinition]
	public class DictionaryContainsKey<T> : CallableFunctionNode<bool, IDictionary<string, T>, string>
	{
		[Token(Token = "0x6000EBF")]
		public override bool Invoke(IDictionary<string, T> dict, string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EC0")]
		public DictionaryContainsKey()
		{
		}
	}
	[Token(Token = "0x2000262")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x973BF0", Offset = "0x973BF0")]
	public class ClearList : CallableFunctionNode<IList, IList>
	{
		[Token(Token = "0x6000EC1")]
		[Address(RVA = "0xDFB178", Offset = "0xDFB178", VA = "0xDFB178", Slot = "12")]
		public override IList Invoke(IList list)
		{
			return null;
		}

		[Token(Token = "0x6000EC2")]
		[Address(RVA = "0xDFB234", Offset = "0xDFB234", VA = "0xDFB234")]
		public ClearList()
		{
		}
	}
	[Token(Token = "0x2000263")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x973C28", Offset = "0x973C28")]
	[ExposeAsDefinition]
	public class AddListItem<T> : CallableFunctionNode<IList<T>, List<T>, T>
	{
		[Token(Token = "0x6000EC3")]
		public override IList<T> Invoke(List<T> list, T item)
		{
			return null;
		}

		[Token(Token = "0x6000EC4")]
		public AddListItem()
		{
		}
	}
	[Token(Token = "0x2000264")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x973C74", Offset = "0x973C74")]
	[ExposeAsDefinition]
	public class InsertListItem<T> : CallableFunctionNode<IList<T>, List<T>, int, T>
	{
		[Token(Token = "0x6000EC5")]
		public override IList<T> Invoke(List<T> list, int index, T item)
		{
			return null;
		}

		[Token(Token = "0x6000EC6")]
		public InsertListItem()
		{
		}
	}
	[Token(Token = "0x2000265")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x973CC0", Offset = "0x973CC0")]
	[ExposeAsDefinition]
	public class RemoveListItem<T> : CallableFunctionNode<IList<T>, List<T>, T>
	{
		[Token(Token = "0x6000EC7")]
		public override IList<T> Invoke(List<T> list, T item)
		{
			return null;
		}

		[Token(Token = "0x6000EC8")]
		public RemoveListItem()
		{
		}
	}
	[Token(Token = "0x2000266")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x973D0C", Offset = "0x973D0C")]
	[ExposeAsDefinition]
	public class RemoveListItemAt<T> : CallableFunctionNode<IList<T>, List<T>, int>
	{
		[Token(Token = "0x6000EC9")]
		public override IList<T> Invoke(List<T> list, int index)
		{
			return null;
		}

		[Token(Token = "0x6000ECA")]
		public RemoveListItemAt()
		{
		}
	}
	[Token(Token = "0x2000267")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x973D58", Offset = "0x973D58")]
	[ExposeAsDefinition]
	public class SetListItem<T> : CallableFunctionNode<IList<T>, IList<T>, int, T>
	{
		[Token(Token = "0x6000ECB")]
		public override IList<T> Invoke(IList<T> list, int index, T item)
		{
			return null;
		}

		[Token(Token = "0x6000ECC")]
		public SetListItem()
		{
		}
	}
	[Token(Token = "0x2000268")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x973DA4", Offset = "0x973DA4")]
	[ExposeAsDefinition]
	public class ShuffleList<T> : CallableFunctionNode<IList<T>, IList<T>>
	{
		[Token(Token = "0x6000ECD")]
		public override IList<T> Invoke(IList<T> list)
		{
			return null;
		}

		[Token(Token = "0x6000ECE")]
		public ShuffleList()
		{
		}
	}
	[Token(Token = "0x2000269")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x973DF0", Offset = "0x973DF0")]
	[ExposeAsDefinition]
	public class GetListItem<T> : PureFunctionNode<T, IList<T>, int>
	{
		[Token(Token = "0x6000ECF")]
		public override T Invoke(IList<T> list, int index)
		{
			return (T)null;
		}

		[Token(Token = "0x6000ED0")]
		public GetListItem()
		{
		}
	}
	[Token(Token = "0x200026A")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x973E3C", Offset = "0x973E3C")]
	[ExposeAsDefinition]
	public class GetRandomListItem<T> : PureFunctionNode<T, IList<T>>
	{
		[Token(Token = "0x6000ED1")]
		public override T Invoke(IList<T> list)
		{
			return (T)null;
		}

		[Token(Token = "0x6000ED2")]
		public GetRandomListItem()
		{
		}
	}
	[Token(Token = "0x200026B")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x973E88", Offset = "0x973E88")]
	[ExposeAsDefinition]
	public class GetLastListItem<T> : PureFunctionNode<T, IList<T>>
	{
		[Token(Token = "0x6000ED3")]
		public override T Invoke(IList<T> list)
		{
			return (T)null;
		}

		[Token(Token = "0x6000ED4")]
		public GetLastListItem()
		{
		}
	}
	[Token(Token = "0x200026C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x973ED4", Offset = "0x973ED4")]
	[ExposeAsDefinition]
	public class GetFirstListItem<T> : PureFunctionNode<T, IList<T>>
	{
		[Token(Token = "0x6000ED5")]
		public override T Invoke(IList<T> list)
		{
			return (T)null;
		}

		[Token(Token = "0x6000ED6")]
		public GetFirstListItem()
		{
		}
	}
	[Token(Token = "0x200026D")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x973F20", Offset = "0x973F20")]
	[ExposeAsDefinition]
	public class GetListItemIndex : PureFunctionNode<int, IList, object>
	{
		[Token(Token = "0x6000ED7")]
		[Address(RVA = "0xE0401C", Offset = "0xE0401C", VA = "0xE0401C", Slot = "12")]
		public override int Invoke(IList list, object item)
		{
			return default(int);
		}

		[Token(Token = "0x6000ED8")]
		[Address(RVA = "0xE040E0", Offset = "0xE040E0", VA = "0xE040E0")]
		public GetListItemIndex()
		{
		}
	}
	[Token(Token = "0x200026E")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x973F6C", Offset = "0x973F6C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x973F6C", Offset = "0x973F6C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x973F6C", Offset = "0x973F6C")]
	public class IsNotNull : PureFunctionNode<bool, object>
	{
		[Token(Token = "0x6000ED9")]
		[Address(RVA = "0xE05B9C", Offset = "0xE05B9C", VA = "0xE05B9C", Slot = "12")]
		public override bool Invoke(object OBJECT)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EDA")]
		[Address(RVA = "0xE05BD4", Offset = "0xE05BD4", VA = "0xE05BD4")]
		public IsNotNull()
		{
		}
	}
	[Token(Token = "0x200026F")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x973FF4", Offset = "0x973FF4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x973FF4", Offset = "0x973FF4")]
	public class IsOfType : PureFunctionNode<bool, object, Type>
	{
		[Token(Token = "0x4000AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97F974", Offset = "0x97F974")]
		private object <OBJECT>k__BackingField;

		[Token(Token = "0x1700014E")]
		public object OBJECT
		{
			[Token(Token = "0x6000EDB")]
			[Address(RVA = "0xE05C24", Offset = "0xE05C24", VA = "0xE05C24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986114", Offset = "0x986114")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EDC")]
			[Address(RVA = "0xE05C2C", Offset = "0xE05C2C", VA = "0xE05C2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986124", Offset = "0x986124")]
			private set
			{
			}
		}

		[Token(Token = "0x6000EDD")]
		[Address(RVA = "0xE05C34", Offset = "0xE05C34", VA = "0xE05C34", Slot = "12")]
		public override bool Invoke(object OBJECT, Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EDE")]
		[Address(RVA = "0xE05CE0", Offset = "0xE05CE0", VA = "0xE05CE0")]
		public IsOfType()
		{
		}
	}
	[Token(Token = "0x2000270")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x974054", Offset = "0x974054")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x974054", Offset = "0x974054")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x974054", Offset = "0x974054")]
	public class AnyGreaterThan : PureFunctionNode<bool, IComparable, IComparable>
	{
		[Token(Token = "0x6000EDF")]
		[Address(RVA = "0xDF7734", Offset = "0xDF7734", VA = "0xDF7734", Slot = "12")]
		public override bool Invoke(IComparable a, IComparable b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EE0")]
		[Address(RVA = "0xDF7800", Offset = "0xDF7800", VA = "0xDF7800")]
		public AnyGreaterThan()
		{
		}
	}
	[Token(Token = "0x2000271")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x9740DC", Offset = "0x9740DC")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x9740DC", Offset = "0x9740DC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9740DC", Offset = "0x9740DC")]
	public class AnyGreaterEqualThan : PureFunctionNode<bool, IComparable, IComparable>
	{
		[Token(Token = "0x6000EE1")]
		[Address(RVA = "0xDF75FC", Offset = "0xDF75FC", VA = "0xDF75FC", Slot = "12")]
		public override bool Invoke(IComparable a, IComparable b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EE2")]
		[Address(RVA = "0xDF76E4", Offset = "0xDF76E4", VA = "0xDF76E4")]
		public AnyGreaterEqualThan()
		{
		}
	}
	[Token(Token = "0x2000272")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x974164", Offset = "0x974164")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x974164", Offset = "0x974164")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x974164", Offset = "0x974164")]
	public class AnyLessThan : PureFunctionNode<bool, IComparable, IComparable>
	{
		[Token(Token = "0x6000EE3")]
		[Address(RVA = "0xDF798C", Offset = "0xDF798C", VA = "0xDF798C", Slot = "12")]
		public override bool Invoke(IComparable a, IComparable b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EE4")]
		[Address(RVA = "0xDF7A58", Offset = "0xDF7A58", VA = "0xDF7A58")]
		public AnyLessThan()
		{
		}
	}
	[Token(Token = "0x2000273")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x9741EC", Offset = "0x9741EC")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x9741EC", Offset = "0x9741EC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9741EC", Offset = "0x9741EC")]
	public class AnyLessEqualThan : PureFunctionNode<bool, IComparable, IComparable>
	{
		[Token(Token = "0x6000EE5")]
		[Address(RVA = "0xDF7850", Offset = "0xDF7850", VA = "0xDF7850", Slot = "12")]
		public override bool Invoke(IComparable a, IComparable b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EE6")]
		[Address(RVA = "0xDF793C", Offset = "0xDF793C", VA = "0xDF793C")]
		public AnyLessEqualThan()
		{
		}
	}
	[Token(Token = "0x2000274")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x974274", Offset = "0x974274")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x974274", Offset = "0x974274")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x974274", Offset = "0x974274")]
	public class AnyEqual : PureFunctionNode<bool, object, object>
	{
		[Token(Token = "0x6000EE7")]
		[Address(RVA = "0xDF759C", Offset = "0xDF759C", VA = "0xDF759C", Slot = "12")]
		public override bool Invoke(object a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EE8")]
		[Address(RVA = "0xDF75AC", Offset = "0xDF75AC", VA = "0xDF75AC")]
		public AnyEqual()
		{
		}
	}
	[Token(Token = "0x2000275")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x9742FC", Offset = "0x9742FC")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x9742FC", Offset = "0x9742FC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9742FC", Offset = "0x9742FC")]
	public class AnyNotEqual : PureFunctionNode<bool, object, object>
	{
		[Token(Token = "0x6000EE9")]
		[Address(RVA = "0xDF7AA8", Offset = "0xDF7AA8", VA = "0xDF7AA8", Slot = "12")]
		public override bool Invoke(object a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EEA")]
		[Address(RVA = "0xDF7AD0", Offset = "0xDF7AD0", VA = "0xDF7AD0")]
		public AnyNotEqual()
		{
		}
	}
	[Token(Token = "0x2000276")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x974384", Offset = "0x974384")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x974384", Offset = "0x974384")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x974384", Offset = "0x974384")]
	public class FloatAdd : PureFunctionNode<float, float, float>
	{
		[Token(Token = "0x6000EEB")]
		[Address(RVA = "0xE0298C", Offset = "0xE0298C", VA = "0xE0298C", Slot = "12")]
		public override float Invoke(float a, float b)
		{
			return default(float);
		}

		[Token(Token = "0x6000EEC")]
		[Address(RVA = "0xE02994", Offset = "0xE02994", VA = "0xE02994")]
		public FloatAdd()
		{
		}
	}
	[Token(Token = "0x2000277")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x97440C", Offset = "0x97440C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x97440C", Offset = "0x97440C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x97440C", Offset = "0x97440C")]
	public class FloatSubtract : PureFunctionNode<float, float, float>
	{
		[Token(Token = "0x6000EED")]
		[Address(RVA = "0xE02EA8", Offset = "0xE02EA8", VA = "0xE02EA8", Slot = "12")]
		public override float Invoke(float a, float b)
		{
			return default(float);
		}

		[Token(Token = "0x6000EEE")]
		[Address(RVA = "0xE02EB0", Offset = "0xE02EB0", VA = "0xE02EB0")]
		public FloatSubtract()
		{
		}
	}
	[Token(Token = "0x2000278")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x974494", Offset = "0x974494")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x974494", Offset = "0x974494")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x974494", Offset = "0x974494")]
	public class FloatMultiply : PureFunctionNode<float, float, float>
	{
		[Token(Token = "0x6000EEF")]
		[Address(RVA = "0xE02CB4", Offset = "0xE02CB4", VA = "0xE02CB4", Slot = "12")]
		public override float Invoke(float a, float b)
		{
			return default(float);
		}

		[Token(Token = "0x6000EF0")]
		[Address(RVA = "0xE02CBC", Offset = "0xE02CBC", VA = "0xE02CBC")]
		public FloatMultiply()
		{
		}
	}
	[Token(Token = "0x2000279")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x97451C", Offset = "0x97451C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x97451C", Offset = "0x97451C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x97451C", Offset = "0x97451C")]
	public class FloatDivide : PureFunctionNode<float, float, float>
	{
		[Token(Token = "0x6000EF1")]
		[Address(RVA = "0xE029E4", Offset = "0xE029E4", VA = "0xE029E4", Slot = "12")]
		public override float Invoke(float a, float b)
		{
			return default(float);
		}

		[Token(Token = "0x6000EF2")]
		[Address(RVA = "0xE029EC", Offset = "0xE029EC", VA = "0xE029EC")]
		public FloatDivide()
		{
		}
	}
	[Token(Token = "0x200027A")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x9745A4", Offset = "0x9745A4")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x9745A4", Offset = "0x9745A4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9745A4", Offset = "0x9745A4")]
	public class FloatModulo : PureFunctionNode<float, float, float>
	{
		[Token(Token = "0x6000EF3")]
		[Address(RVA = "0xE02C60", Offset = "0xE02C60", VA = "0xE02C60", Slot = "12")]
		public override float Invoke(float value, float mod)
		{
			return default(float);
		}

		[Token(Token = "0x6000EF4")]
		[Address(RVA = "0xE02C64", Offset = "0xE02C64", VA = "0xE02C64")]
		public FloatModulo()
		{
		}
	}
	[Token(Token = "0x200027B")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x97462C", Offset = "0x97462C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x97462C", Offset = "0x97462C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x97462C", Offset = "0x97462C")]
	public class FloatGreaterThan : PureFunctionNode<bool, float, float>
	{
		[Token(Token = "0x6000EF5")]
		[Address(RVA = "0xE02AF4", Offset = "0xE02AF4", VA = "0xE02AF4", Slot = "12")]
		public override bool Invoke(float a, float b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EF6")]
		[Address(RVA = "0xE02B00", Offset = "0xE02B00", VA = "0xE02B00")]
		public FloatGreaterThan()
		{
		}
	}
	[Token(Token = "0x200027C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x9746B4", Offset = "0x9746B4")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x9746B4", Offset = "0x9746B4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9746B4", Offset = "0x9746B4")]
	public class FloatGreaterEqualThan : PureFunctionNode<bool, float, float>
	{
		[Token(Token = "0x6000EF7")]
		[Address(RVA = "0xE02A98", Offset = "0xE02A98", VA = "0xE02A98", Slot = "12")]
		public override bool Invoke(float a, float b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EF8")]
		[Address(RVA = "0xE02AA4", Offset = "0xE02AA4", VA = "0xE02AA4")]
		public FloatGreaterEqualThan()
		{
		}
	}
	[Token(Token = "0x200027D")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x97473C", Offset = "0x97473C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x97473C", Offset = "0x97473C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x97473C", Offset = "0x97473C")]
	public class FloatLessThan : PureFunctionNode<bool, float, float>
	{
		[Token(Token = "0x6000EF9")]
		[Address(RVA = "0xE02C04", Offset = "0xE02C04", VA = "0xE02C04", Slot = "12")]
		public override bool Invoke(float a, float b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EFA")]
		[Address(RVA = "0xE02C10", Offset = "0xE02C10", VA = "0xE02C10")]
		public FloatLessThan()
		{
		}
	}
	[Token(Token = "0x200027E")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x9747C4", Offset = "0x9747C4")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x9747C4", Offset = "0x9747C4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9747C4", Offset = "0x9747C4")]
	public class FloatLessEqualThan : PureFunctionNode<bool, float, float>
	{
		[Token(Token = "0x6000EFB")]
		[Address(RVA = "0xE02BA8", Offset = "0xE02BA8", VA = "0xE02BA8", Slot = "12")]
		public override bool Invoke(float a, float b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EFC")]
		[Address(RVA = "0xE02BB4", Offset = "0xE02BB4", VA = "0xE02BB4")]
		public FloatLessEqualThan()
		{
		}
	}
	[Token(Token = "0x200027F")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x97484C", Offset = "0x97484C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x97484C", Offset = "0x97484C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x97484C", Offset = "0x97484C")]
	public class FloatEqual : PureFunctionNode<bool, float, float>
	{
		[Token(Token = "0x6000EFD")]
		[Address(RVA = "0xE02A3C", Offset = "0xE02A3C", VA = "0xE02A3C", Slot = "12")]
		public override bool Invoke(float a, float b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EFE")]
		[Address(RVA = "0xE02A48", Offset = "0xE02A48", VA = "0xE02A48")]
		public FloatEqual()
		{
		}
	}
	[Token(Token = "0x2000280")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x9748D4", Offset = "0x9748D4")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x9748D4", Offset = "0x9748D4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9748D4", Offset = "0x9748D4")]
	public class FloatNotEqual : PureFunctionNode<bool, float, float>
	{
		[Token(Token = "0x6000EFF")]
		[Address(RVA = "0xE02D0C", Offset = "0xE02D0C", VA = "0xE02D0C", Slot = "12")]
		public override bool Invoke(float a, float b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F00")]
		[Address(RVA = "0xE02D18", Offset = "0xE02D18", VA = "0xE02D18")]
		public FloatNotEqual()
		{
		}
	}
	[Token(Token = "0x2000281")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x97495C", Offset = "0x97495C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x97495C", Offset = "0x97495C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x97495C", Offset = "0x97495C")]
	public class FloatInvert : PureFunctionNode<float, float>
	{
		[Token(Token = "0x6000F01")]
		[Address(RVA = "0xE02B50", Offset = "0xE02B50", VA = "0xE02B50", Slot = "12")]
		public override float Invoke(float value)
		{
			return default(float);
		}

		[Token(Token = "0x6000F02")]
		[Address(RVA = "0xE02B58", Offset = "0xE02B58", VA = "0xE02B58")]
		public FloatInvert()
		{
		}
	}
	[Token(Token = "0x2000282")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x9749E4", Offset = "0x9749E4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9749E4", Offset = "0x9749E4")]
	public class FloatSnap : PureFunctionNode<int, float, int>
	{
		[Token(Token = "0x6000F03")]
		[Address(RVA = "0xE02D68", Offset = "0xE02D68", VA = "0xE02D68", Slot = "12")]
		public override int Invoke(float value, int interval)
		{
			return default(int);
		}

		[Token(Token = "0x6000F04")]
		[Address(RVA = "0xE02E58", Offset = "0xE02E58", VA = "0xE02E58")]
		public FloatSnap()
		{
		}
	}
	[Token(Token = "0x2000283")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x974A44", Offset = "0x974A44")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x974A44", Offset = "0x974A44")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x974A44", Offset = "0x974A44")]
	public class IntegerAdd : PureFunctionNode<int, int, int>
	{
		[Token(Token = "0x6000F05")]
		[Address(RVA = "0xE0560C", Offset = "0xE0560C", VA = "0xE0560C", Slot = "12")]
		public override int Invoke(int a, int b)
		{
			return default(int);
		}

		[Token(Token = "0x6000F06")]
		[Address(RVA = "0xE05614", Offset = "0xE05614", VA = "0xE05614")]
		public IntegerAdd()
		{
		}
	}
	[Token(Token = "0x2000284")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x974ACC", Offset = "0x974ACC")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x974ACC", Offset = "0x974ACC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x974ACC", Offset = "0x974ACC")]
	public class IntegerSubtract : PureFunctionNode<int, int, int>
	{
		[Token(Token = "0x6000F07")]
		[Address(RVA = "0xE05B44", Offset = "0xE05B44", VA = "0xE05B44", Slot = "12")]
		public override int Invoke(int a, int b)
		{
			return default(int);
		}

		[Token(Token = "0x6000F08")]
		[Address(RVA = "0xE05B4C", Offset = "0xE05B4C", VA = "0xE05B4C")]
		public IntegerSubtract()
		{
		}
	}
	[Token(Token = "0x2000285")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x974B54", Offset = "0x974B54")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x974B54", Offset = "0x974B54")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x974B54", Offset = "0x974B54")]
	public class IntegerMultiply : PureFunctionNode<int, int, int>
	{
		[Token(Token = "0x6000F09")]
		[Address(RVA = "0xE05944", Offset = "0xE05944", VA = "0xE05944", Slot = "12")]
		public override int Invoke(int a, int b)
		{
			return default(int);
		}

		[Token(Token = "0x6000F0A")]
		[Address(RVA = "0xE0594C", Offset = "0xE0594C", VA = "0xE0594C")]
		public IntegerMultiply()
		{
		}
	}
	[Token(Token = "0x2000286")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x974BDC", Offset = "0x974BDC")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x974BDC", Offset = "0x974BDC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x974BDC", Offset = "0x974BDC")]
	public class IntegerDivide : PureFunctionNode<int, int, int>
	{
		[Token(Token = "0x6000F0B")]
		[Address(RVA = "0xE05664", Offset = "0xE05664", VA = "0xE05664", Slot = "12")]
		public override int Invoke(int a, int b)
		{
			return default(int);
		}

		[Token(Token = "0x6000F0C")]
		[Address(RVA = "0xE05674", Offset = "0xE05674", VA = "0xE05674")]
		public IntegerDivide()
		{
		}
	}
	[Token(Token = "0x2000287")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x974C64", Offset = "0x974C64")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x974C64", Offset = "0x974C64")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x974C64", Offset = "0x974C64")]
	public class IntegerModulo : PureFunctionNode<int, int, int>
	{
		[Token(Token = "0x6000F0D")]
		[Address(RVA = "0xE058E8", Offset = "0xE058E8", VA = "0xE058E8", Slot = "12")]
		public override int Invoke(int value, int mod)
		{
			return default(int);
		}

		[Token(Token = "0x6000F0E")]
		[Address(RVA = "0xE058F4", Offset = "0xE058F4", VA = "0xE058F4")]
		public IntegerModulo()
		{
		}
	}
	[Token(Token = "0x2000288")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x974CEC", Offset = "0x974CEC")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x974CEC", Offset = "0x974CEC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x974CEC", Offset = "0x974CEC")]
	public class IntegerGreaterThan : PureFunctionNode<bool, int, int>
	{
		[Token(Token = "0x6000F0F")]
		[Address(RVA = "0xE0577C", Offset = "0xE0577C", VA = "0xE0577C", Slot = "12")]
		public override bool Invoke(int a, int b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F10")]
		[Address(RVA = "0xE05788", Offset = "0xE05788", VA = "0xE05788")]
		public IntegerGreaterThan()
		{
		}
	}
	[Token(Token = "0x2000289")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x974D74", Offset = "0x974D74")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x974D74", Offset = "0x974D74")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x974D74", Offset = "0x974D74")]
	public class IntegerGreaterEqualThan : PureFunctionNode<bool, int, int>
	{
		[Token(Token = "0x6000F11")]
		[Address(RVA = "0xE05720", Offset = "0xE05720", VA = "0xE05720", Slot = "12")]
		public override bool Invoke(int a, int b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F12")]
		[Address(RVA = "0xE0572C", Offset = "0xE0572C", VA = "0xE0572C")]
		public IntegerGreaterEqualThan()
		{
		}
	}
	[Token(Token = "0x200028A")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x974DFC", Offset = "0x974DFC")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x974DFC", Offset = "0x974DFC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x974DFC", Offset = "0x974DFC")]
	public class IntegerLessThan : PureFunctionNode<bool, int, int>
	{
		[Token(Token = "0x6000F13")]
		[Address(RVA = "0xE0588C", Offset = "0xE0588C", VA = "0xE0588C", Slot = "12")]
		public override bool Invoke(int a, int b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F14")]
		[Address(RVA = "0xE05898", Offset = "0xE05898", VA = "0xE05898")]
		public IntegerLessThan()
		{
		}
	}
	[Token(Token = "0x200028B")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x974E84", Offset = "0x974E84")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x974E84", Offset = "0x974E84")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x974E84", Offset = "0x974E84")]
	public class IntegerLessEqualThan : PureFunctionNode<bool, int, int>
	{
		[Token(Token = "0x6000F15")]
		[Address(RVA = "0xE05830", Offset = "0xE05830", VA = "0xE05830", Slot = "12")]
		public override bool Invoke(int a, int b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F16")]
		[Address(RVA = "0xE0583C", Offset = "0xE0583C", VA = "0xE0583C")]
		public IntegerLessEqualThan()
		{
		}
	}
	[Token(Token = "0x200028C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x974F0C", Offset = "0x974F0C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x974F0C", Offset = "0x974F0C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x974F0C", Offset = "0x974F0C")]
	public class IntegerEqual : PureFunctionNode<bool, int, int>
	{
		[Token(Token = "0x6000F17")]
		[Address(RVA = "0xE056C4", Offset = "0xE056C4", VA = "0xE056C4", Slot = "12")]
		public override bool Invoke(int a, int b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F18")]
		[Address(RVA = "0xE056D0", Offset = "0xE056D0", VA = "0xE056D0")]
		public IntegerEqual()
		{
		}
	}
	[Token(Token = "0x200028D")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x974F94", Offset = "0x974F94")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x974F94", Offset = "0x974F94")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x974F94", Offset = "0x974F94")]
	public class IntegerNotEqual : PureFunctionNode<bool, int, int>
	{
		[Token(Token = "0x6000F19")]
		[Address(RVA = "0xE0599C", Offset = "0xE0599C", VA = "0xE0599C", Slot = "12")]
		public override bool Invoke(int a, int b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F1A")]
		[Address(RVA = "0xE059A8", Offset = "0xE059A8", VA = "0xE059A8")]
		public IntegerNotEqual()
		{
		}
	}
	[Token(Token = "0x200028E")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x97501C", Offset = "0x97501C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x97501C", Offset = "0x97501C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x97501C", Offset = "0x97501C")]
	public class IntegerInvert : PureFunctionNode<int, int>
	{
		[Token(Token = "0x6000F1B")]
		[Address(RVA = "0xE057D8", Offset = "0xE057D8", VA = "0xE057D8", Slot = "12")]
		public override int Invoke(int value)
		{
			return default(int);
		}

		[Token(Token = "0x6000F1C")]
		[Address(RVA = "0xE057E0", Offset = "0xE057E0", VA = "0xE057E0")]
		public IntegerInvert()
		{
		}
	}
	[Token(Token = "0x200028F")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x9750A4", Offset = "0x9750A4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9750A4", Offset = "0x9750A4")]
	public class IntegerSnap : PureFunctionNode<int, int, int>
	{
		[Token(Token = "0x6000F1D")]
		[Address(RVA = "0xE059F8", Offset = "0xE059F8", VA = "0xE059F8", Slot = "12")]
		public override int Invoke(int value, int interval)
		{
			return default(int);
		}

		[Token(Token = "0x6000F1E")]
		[Address(RVA = "0xE05AF4", Offset = "0xE05AF4", VA = "0xE05AF4")]
		public IntegerSnap()
		{
		}
	}
	[Token(Token = "0x2000290")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x975104", Offset = "0x975104")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x975104", Offset = "0x975104")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x975104", Offset = "0x975104")]
	public class BooleanEqual : PureFunctionNode<bool, bool, bool>
	{
		[Token(Token = "0x6000F1F")]
		[Address(RVA = "0xDF91EC", Offset = "0xDF91EC", VA = "0xDF91EC", Slot = "12")]
		public override bool Invoke(bool a, bool b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F20")]
		[Address(RVA = "0xDF91F8", Offset = "0xDF91F8", VA = "0xDF91F8")]
		public BooleanEqual()
		{
		}
	}
	[Token(Token = "0x2000291")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x97518C", Offset = "0x97518C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x97518C", Offset = "0x97518C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x97518C", Offset = "0x97518C")]
	public class BooleanNotEqual : PureFunctionNode<bool, bool, bool>
	{
		[Token(Token = "0x6000F21")]
		[Address(RVA = "0xDF9248", Offset = "0xDF9248", VA = "0xDF9248", Slot = "12")]
		public override bool Invoke(bool a, bool b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F22")]
		[Address(RVA = "0xDF9254", Offset = "0xDF9254", VA = "0xDF9254")]
		public BooleanNotEqual()
		{
		}
	}
	[Token(Token = "0x2000292")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x975214", Offset = "0x975214")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x975214", Offset = "0x975214")]
	public class AND : PureFunctionNode<bool, bool, bool>
	{
		[Token(Token = "0x6000F23")]
		[Address(RVA = "0xDF6D38", Offset = "0xDF6D38", VA = "0xDF6D38", Slot = "12")]
		public override bool Invoke(bool a, bool b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F24")]
		[Address(RVA = "0xDF6D44", Offset = "0xDF6D44", VA = "0xDF6D44")]
		public AND()
		{
		}
	}
	[Token(Token = "0x2000293")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x975274", Offset = "0x975274")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x975274", Offset = "0x975274")]
	public class OR : PureFunctionNode<bool, bool, bool>
	{
		[Token(Token = "0x6000F25")]
		[Address(RVA = "0xE0CA4C", Offset = "0xE0CA4C", VA = "0xE0CA4C", Slot = "12")]
		public override bool Invoke(bool a, bool b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F26")]
		[Address(RVA = "0xE0CA58", Offset = "0xE0CA58", VA = "0xE0CA58")]
		public OR()
		{
		}
	}
	[Token(Token = "0x2000294")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x9752D4", Offset = "0x9752D4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9752D4", Offset = "0x9752D4")]
	public class XOR : PureFunctionNode<bool, bool, bool>
	{
		[Token(Token = "0x6000F27")]
		[Address(RVA = "0xCA55F0", Offset = "0xCA55F0", VA = "0xCA55F0", Slot = "12")]
		public override bool Invoke(bool a, bool b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F28")]
		[Address(RVA = "0xCA55FC", Offset = "0xCA55FC", VA = "0xCA55FC")]
		public XOR()
		{
		}
	}
	[Token(Token = "0x2000295")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x975334", Offset = "0x975334")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x975334", Offset = "0x975334")]
	public class NOT : PureFunctionNode<bool, bool>
	{
		[Token(Token = "0x6000F29")]
		[Address(RVA = "0xE0C4BC", Offset = "0xE0C4BC", VA = "0xE0C4BC", Slot = "12")]
		public override bool Invoke(bool value)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F2A")]
		[Address(RVA = "0xE0C4C8", Offset = "0xE0C4C8", VA = "0xE0C4C8")]
		public NOT()
		{
		}
	}
	[Token(Token = "0x2000296")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x975394", Offset = "0x975394")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x975394", Offset = "0x975394")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x975394", Offset = "0x975394")]
	public class Vector3Equal : PureFunctionNode<bool, Vector3, Vector3>
	{
		[Token(Token = "0x6000F2B")]
		[Address(RVA = "0xCA39A4", Offset = "0xCA39A4", VA = "0xCA39A4", Slot = "12")]
		public override bool Invoke(Vector3 a, Vector3 b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F2C")]
		[Address(RVA = "0xCA3A4C", Offset = "0xCA3A4C", VA = "0xCA3A4C")]
		public Vector3Equal()
		{
		}
	}
	[Token(Token = "0x2000297")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x97541C", Offset = "0x97541C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x97541C", Offset = "0x97541C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x97541C", Offset = "0x97541C")]
	public class Vector3NotEqual : PureFunctionNode<bool, Vector3, Vector3>
	{
		[Token(Token = "0x6000F2D")]
		[Address(RVA = "0xCA3C58", Offset = "0xCA3C58", VA = "0xCA3C58", Slot = "12")]
		public override bool Invoke(Vector3 a, Vector3 b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F2E")]
		[Address(RVA = "0xCA3D00", Offset = "0xCA3D00", VA = "0xCA3D00")]
		public Vector3NotEqual()
		{
		}
	}
	[Token(Token = "0x2000298")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x9754A4", Offset = "0x9754A4")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x9754A4", Offset = "0x9754A4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9754A4", Offset = "0x9754A4")]
	public class Vector3Add : PureFunctionNode<Vector3, Vector3, Vector3>
	{
		[Token(Token = "0x6000F2F")]
		[Address(RVA = "0xCA37CC", Offset = "0xCA37CC", VA = "0xCA37CC", Slot = "12")]
		public override Vector3 Invoke(Vector3 a, Vector3 b)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000F30")]
		[Address(RVA = "0xCA3874", Offset = "0xCA3874", VA = "0xCA3874")]
		public Vector3Add()
		{
		}
	}
	[Token(Token = "0x2000299")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x97552C", Offset = "0x97552C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x97552C", Offset = "0x97552C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x97552C", Offset = "0x97552C")]
	public class Vector3Subtract : PureFunctionNode<Vector3, Vector3, Vector3>
	{
		[Token(Token = "0x6000F31")]
		[Address(RVA = "0xCA3D50", Offset = "0xCA3D50", VA = "0xCA3D50", Slot = "12")]
		public override Vector3 Invoke(Vector3 a, Vector3 b)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000F32")]
		[Address(RVA = "0xCA3DF8", Offset = "0xCA3DF8", VA = "0xCA3DF8")]
		public Vector3Subtract()
		{
		}
	}
	[Token(Token = "0x200029A")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x9755B4", Offset = "0x9755B4")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x9755B4", Offset = "0x9755B4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9755B4", Offset = "0x9755B4")]
	public class Vector3Multiply : PureFunctionNode<Vector3, Vector3, float>
	{
		[Token(Token = "0x6000F33")]
		[Address(RVA = "0xCA3B78", Offset = "0xCA3B78", VA = "0xCA3B78", Slot = "12")]
		public override Vector3 Invoke(Vector3 a, float b)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000F34")]
		[Address(RVA = "0xCA3C08", Offset = "0xCA3C08", VA = "0xCA3C08")]
		public Vector3Multiply()
		{
		}
	}
	[Token(Token = "0x200029B")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x97563C", Offset = "0x97563C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x97563C", Offset = "0x97563C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x97563C", Offset = "0x97563C")]
	public class Vector3Divide : PureFunctionNode<Vector3, Vector3, float>
	{
		[Token(Token = "0x6000F35")]
		[Address(RVA = "0xCA38C4", Offset = "0xCA38C4", VA = "0xCA38C4", Slot = "12")]
		public override Vector3 Invoke(Vector3 a, float b)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000F36")]
		[Address(RVA = "0xCA3954", Offset = "0xCA3954", VA = "0xCA3954")]
		public Vector3Divide()
		{
		}
	}
	[Token(Token = "0x200029C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x9756C4", Offset = "0x9756C4")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x9756C4", Offset = "0x9756C4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9756C4", Offset = "0x9756C4")]
	public class Vector3Invert : PureFunctionNode<Vector3, Vector3>
	{
		[Token(Token = "0x6000F37")]
		[Address(RVA = "0xCA3A9C", Offset = "0xCA3A9C", VA = "0xCA3A9C", Slot = "12")]
		public override Vector3 Invoke(Vector3 value)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000F38")]
		[Address(RVA = "0xCA3B28", Offset = "0xCA3B28", VA = "0xCA3B28")]
		public Vector3Invert()
		{
		}
	}
	[Token(Token = "0x200029D")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x97574C", Offset = "0x97574C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x97574C", Offset = "0x97574C")]
	public class Wait : LatentActionNode<float>
	{
		[Token(Token = "0x2000742")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9796AC", Offset = "0x9796AC")]
		private sealed class <Invoke>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Wait <>4__this;

			[Token(Token = "0x4001FAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float time;

			[Token(Token = "0x17000387")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60025AC")]
				[Address(RVA = "0xCA4494", Offset = "0xCA4494", VA = "0xCA4494", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000388")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60025AE")]
				[Address(RVA = "0xCA4504", Offset = "0xCA4504", VA = "0xCA4504", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60025A9")]
			[Address(RVA = "0xCA430C", Offset = "0xCA430C", VA = "0xCA430C")]
			[DebuggerHidden]
			public <Invoke>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x60025AA")]
			[Address(RVA = "0xCA4388", Offset = "0xCA4388", VA = "0xCA4388", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60025AB")]
			[Address(RVA = "0xCA438C", Offset = "0xCA438C", VA = "0xCA438C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60025AD")]
			[Address(RVA = "0xCA449C", Offset = "0xCA449C", VA = "0xCA449C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97F984", Offset = "0x97F984")]
		private float <timeLeft>k__BackingField;

		[Token(Token = "0x4000AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97F994", Offset = "0x97F994")]
		private float <normalized>k__BackingField;

		[Token(Token = "0x1700014F")]
		public float timeLeft
		{
			[Token(Token = "0x6000F39")]
			[Address(RVA = "0xCA4254", Offset = "0xCA4254", VA = "0xCA4254")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986134", Offset = "0x986134")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F3A")]
			[Address(RVA = "0xCA425C", Offset = "0xCA425C", VA = "0xCA425C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986144", Offset = "0x986144")]
			private set
			{
			}
		}

		[Token(Token = "0x17000150")]
		public float normalized
		{
			[Token(Token = "0x6000F3B")]
			[Address(RVA = "0xCA4264", Offset = "0xCA4264", VA = "0xCA4264")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986154", Offset = "0x986154")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F3C")]
			[Address(RVA = "0xCA426C", Offset = "0xCA426C", VA = "0xCA426C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986164", Offset = "0x986164")]
			private set
			{
			}
		}

		[Token(Token = "0x6000F3D")]
		[Address(RVA = "0xCA4274", Offset = "0xCA4274", VA = "0xCA4274", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x986174", Offset = "0x986174")]
		public override IEnumerator Invoke(float time = 1f)
		{
			return null;
		}

		[Token(Token = "0x6000F3E")]
		[Address(RVA = "0xCA4338", Offset = "0xCA4338", VA = "0xCA4338")]
		public Wait()
		{
		}
	}
	[Token(Token = "0x200029E")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x9757AC", Offset = "0x9757AC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9757AC", Offset = "0x9757AC")]
	public class WaitForOneFrame : LatentActionNode
	{
		[Token(Token = "0x2000743")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9796BC", Offset = "0x9796BC")]
		private sealed class <Invoke>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x17000389")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60025B2")]
				[Address(RVA = "0xCA4790", Offset = "0xCA4790", VA = "0xCA4790", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700038A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60025B4")]
				[Address(RVA = "0xCA4800", Offset = "0xCA4800", VA = "0xCA4800", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60025AF")]
			[Address(RVA = "0xCA471C", Offset = "0xCA471C", VA = "0xCA471C")]
			[DebuggerHidden]
			public <Invoke>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x60025B0")]
			[Address(RVA = "0xCA4750", Offset = "0xCA4750", VA = "0xCA4750", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60025B1")]
			[Address(RVA = "0xCA4754", Offset = "0xCA4754", VA = "0xCA4754", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60025B3")]
			[Address(RVA = "0xCA4798", Offset = "0xCA4798", VA = "0xCA4798", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x17000151")]
		public override bool allowRoutineQueueing
		{
			[Token(Token = "0x6000F3F")]
			[Address(RVA = "0xCA46B4", Offset = "0xCA46B4", VA = "0xCA46B4", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000F40")]
		[Address(RVA = "0xCA46BC", Offset = "0xCA46BC", VA = "0xCA46BC", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9861D8", Offset = "0x9861D8")]
		public override IEnumerator Invoke()
		{
			return null;
		}

		[Token(Token = "0x6000F41")]
		[Address(RVA = "0xCA4748", Offset = "0xCA4748", VA = "0xCA4748")]
		public WaitForOneFrame()
		{
		}
	}
	[Token(Token = "0x200029F")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x97580C", Offset = "0x97580C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x97580C", Offset = "0x97580C")]
	public class WaitForPhysicsFrame : LatentActionNode
	{
		[Token(Token = "0x2000744")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9796CC", Offset = "0x9796CC")]
		private sealed class <Invoke>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x1700038B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60025B8")]
				[Address(RVA = "0xCA4938", Offset = "0xCA4938", VA = "0xCA4938", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700038C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60025BA")]
				[Address(RVA = "0xCA49A8", Offset = "0xCA49A8", VA = "0xCA49A8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60025B5")]
			[Address(RVA = "0xCA4870", Offset = "0xCA4870", VA = "0xCA4870")]
			[DebuggerHidden]
			public <Invoke>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x60025B6")]
			[Address(RVA = "0xCA48A4", Offset = "0xCA48A4", VA = "0xCA48A4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60025B7")]
			[Address(RVA = "0xCA48A8", Offset = "0xCA48A8", VA = "0xCA48A8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60025B9")]
			[Address(RVA = "0xCA4940", Offset = "0xCA4940", VA = "0xCA4940", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x17000152")]
		public override bool allowRoutineQueueing
		{
			[Token(Token = "0x6000F42")]
			[Address(RVA = "0xCA4808", Offset = "0xCA4808", VA = "0xCA4808", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000F43")]
		[Address(RVA = "0xCA4810", Offset = "0xCA4810", VA = "0xCA4810", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98623C", Offset = "0x98623C")]
		public override IEnumerator Invoke()
		{
			return null;
		}

		[Token(Token = "0x6000F44")]
		[Address(RVA = "0xCA489C", Offset = "0xCA489C", VA = "0xCA489C")]
		public WaitForPhysicsFrame()
		{
		}
	}
	[Token(Token = "0x20002A0")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x97586C", Offset = "0x97586C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x97586C", Offset = "0x97586C")]
	public class WaitForEndOfFrame : LatentActionNode
	{
		[Token(Token = "0x2000745")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9796DC", Offset = "0x9796DC")]
		private sealed class <Invoke>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x1700038D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60025BE")]
				[Address(RVA = "0xCA463C", Offset = "0xCA463C", VA = "0xCA463C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700038E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60025C0")]
				[Address(RVA = "0xCA46AC", Offset = "0xCA46AC", VA = "0xCA46AC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60025BB")]
			[Address(RVA = "0xCA4574", Offset = "0xCA4574", VA = "0xCA4574")]
			[DebuggerHidden]
			public <Invoke>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x60025BC")]
			[Address(RVA = "0xCA45A8", Offset = "0xCA45A8", VA = "0xCA45A8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60025BD")]
			[Address(RVA = "0xCA45AC", Offset = "0xCA45AC", VA = "0xCA45AC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60025BF")]
			[Address(RVA = "0xCA4644", Offset = "0xCA4644", VA = "0xCA4644", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x17000153")]
		public override bool allowRoutineQueueing
		{
			[Token(Token = "0x6000F45")]
			[Address(RVA = "0xCA450C", Offset = "0xCA450C", VA = "0xCA450C", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000F46")]
		[Address(RVA = "0xCA4514", Offset = "0xCA4514", VA = "0xCA4514", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9862A0", Offset = "0x9862A0")]
		public override IEnumerator Invoke()
		{
			return null;
		}

		[Token(Token = "0x6000F47")]
		[Address(RVA = "0xCA45A0", Offset = "0xCA45A0", VA = "0xCA45A0")]
		public WaitForEndOfFrame()
		{
		}
	}
	[Token(Token = "0x20002A1")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x9758CC", Offset = "0x9758CC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9758CC", Offset = "0x9758CC")]
	public class WaitUntil : LatentActionNode
	{
		[Token(Token = "0x2000746")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9796EC", Offset = "0x9796EC")]
		private sealed class <Invoke>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WaitUntil <>4__this;

			[Token(Token = "0x1700038F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60025C4")]
				[Address(RVA = "0xCA4BD0", Offset = "0xCA4BD0", VA = "0xCA4BD0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000390")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60025C6")]
				[Address(RVA = "0xCA4C40", Offset = "0xCA4C40", VA = "0xCA4C40", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60025C1")]
			[Address(RVA = "0xCA4A2C", Offset = "0xCA4A2C", VA = "0xCA4A2C")]
			[DebuggerHidden]
			public <Invoke>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x60025C2")]
			[Address(RVA = "0xCA4AE8", Offset = "0xCA4AE8", VA = "0xCA4AE8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60025C3")]
			[Address(RVA = "0xCA4AEC", Offset = "0xCA4AEC", VA = "0xCA4AEC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60025C5")]
			[Address(RVA = "0xCA4BD8", Offset = "0xCA4BD8", VA = "0xCA4BD8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private ValueInput<bool> condition;

		[Token(Token = "0x17000154")]
		public override bool allowRoutineQueueing
		{
			[Token(Token = "0x6000F48")]
			[Address(RVA = "0xCA49B0", Offset = "0xCA49B0", VA = "0xCA49B0", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000F49")]
		[Address(RVA = "0xCA49B8", Offset = "0xCA49B8", VA = "0xCA49B8", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x986304", Offset = "0x986304")]
		public override IEnumerator Invoke()
		{
			return null;
		}

		[Token(Token = "0x6000F4A")]
		[Address(RVA = "0xCA4A58", Offset = "0xCA4A58", VA = "0xCA4A58", Slot = "7")]
		protected override void OnRegisterExtraPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6000F4B")]
		[Address(RVA = "0xCA4AE0", Offset = "0xCA4AE0", VA = "0xCA4AE0")]
		public WaitUntil()
		{
		}
	}
	[Token(Token = "0x20002A2")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x97592C", Offset = "0x97592C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x97592C", Offset = "0x97592C")]
	public class WaitWhile : LatentActionNode
	{
		[Token(Token = "0x2000747")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9796FC", Offset = "0x9796FC")]
		private sealed class <Invoke>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WaitWhile <>4__this;

			[Token(Token = "0x17000391")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60025CA")]
				[Address(RVA = "0xCA4E68", Offset = "0xCA4E68", VA = "0xCA4E68", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000392")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60025CC")]
				[Address(RVA = "0xCA4ED8", Offset = "0xCA4ED8", VA = "0xCA4ED8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60025C7")]
			[Address(RVA = "0xCA4CC4", Offset = "0xCA4CC4", VA = "0xCA4CC4")]
			[DebuggerHidden]
			public <Invoke>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x60025C8")]
			[Address(RVA = "0xCA4D80", Offset = "0xCA4D80", VA = "0xCA4D80", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60025C9")]
			[Address(RVA = "0xCA4D84", Offset = "0xCA4D84", VA = "0xCA4D84", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60025CB")]
			[Address(RVA = "0xCA4E70", Offset = "0xCA4E70", VA = "0xCA4E70", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private ValueInput<bool> condition;

		[Token(Token = "0x17000155")]
		public override bool allowRoutineQueueing
		{
			[Token(Token = "0x6000F4C")]
			[Address(RVA = "0xCA4C48", Offset = "0xCA4C48", VA = "0xCA4C48", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000F4D")]
		[Address(RVA = "0xCA4C50", Offset = "0xCA4C50", VA = "0xCA4C50", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x986368", Offset = "0x986368")]
		public override IEnumerator Invoke()
		{
			return null;
		}

		[Token(Token = "0x6000F4E")]
		[Address(RVA = "0xCA4CF0", Offset = "0xCA4CF0", VA = "0xCA4CF0", Slot = "7")]
		protected override void OnRegisterExtraPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6000F4F")]
		[Address(RVA = "0xCA4D78", Offset = "0xCA4D78", VA = "0xCA4D78")]
		public WaitWhile()
		{
		}
	}
	[Token(Token = "0x20002A3")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x97598C", Offset = "0x97598C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x97598C", Offset = "0x97598C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x97598C", Offset = "0x97598C")]
	public class DeltaTimed : PureFunctionNode<float, float, float>
	{
		[Token(Token = "0x6000F50")]
		[Address(RVA = "0xE0039C", Offset = "0xE0039C", VA = "0xE0039C", Slot = "12")]
		public override float Invoke(float value, float multiplier = 1f)
		{
			return default(float);
		}

		[Token(Token = "0x6000F51")]
		[Address(RVA = "0xE003CC", Offset = "0xE003CC", VA = "0xE003CC")]
		public DeltaTimed()
		{
		}
	}
	[Token(Token = "0x20002A4")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x975A14", Offset = "0x975A14")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x975A14", Offset = "0x975A14")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x975A14", Offset = "0x975A14")]
	public class DeltaTimedVector3 : PureFunctionNode<Vector3, Vector3, float>
	{
		[Token(Token = "0x6000F52")]
		[Address(RVA = "0xE0041C", Offset = "0xE0041C", VA = "0xE0041C", Slot = "12")]
		public override Vector3 Invoke(Vector3 value, float multiplier = 1f)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000F53")]
		[Address(RVA = "0xE004D8", Offset = "0xE004D8", VA = "0xE004D8")]
		public DeltaTimedVector3()
		{
		}
	}
	[Token(Token = "0x20002A5")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x975A9C", Offset = "0x975A9C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x975A9C", Offset = "0x975A9C")]
	[ExposeAsDefinition]
	public class Buffer<T> : PureFunctionNode<T, T, int>
	{
		[Token(Token = "0x4000AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int lastFrame;

		[Token(Token = "0x4000AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Queue<T> q;

		[Token(Token = "0x6000F54")]
		public override T Invoke(T value, int size = 60)
		{
			return (T)null;
		}

		[Token(Token = "0x6000F55")]
		public Buffer()
		{
		}
	}
	[Token(Token = "0x20002A6")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x975B0C", Offset = "0x975B0C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x975B0C", Offset = "0x975B0C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x975B0C", Offset = "0x975B0C")]
	public class DampFloat : PureFunctionNode<float, float, float, float>
	{
		[Token(Token = "0x6000F56")]
		[Address(RVA = "0xDFF990", Offset = "0xDFF990", VA = "0xDFF990", Slot = "12")]
		public override float Invoke(float current, float target, float damp = 1f)
		{
			return default(float);
		}

		[Token(Token = "0x6000F57")]
		[Address(RVA = "0xDFFA24", Offset = "0xDFFA24", VA = "0xDFFA24")]
		public DampFloat()
		{
		}
	}
	[Token(Token = "0x20002A7")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x975B94", Offset = "0x975B94")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x975B94", Offset = "0x975B94")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x975B94", Offset = "0x975B94")]
	public class DampVector3 : PureFunctionNode<Vector3, Vector3, Vector3, float>
	{
		[Token(Token = "0x6000F58")]
		[Address(RVA = "0xDFFA74", Offset = "0xDFFA74", VA = "0xDFFA74", Slot = "12")]
		public override Vector3 Invoke(Vector3 current, Vector3 target, float damp = 1f)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000F59")]
		[Address(RVA = "0xDFFB38", Offset = "0xDFFB38", VA = "0xDFFB38")]
		public DampVector3()
		{
		}
	}
	[Token(Token = "0x20002A8")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x975C1C", Offset = "0x975C1C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x975C1C", Offset = "0x975C1C")]
	public class MoveTo : LatentActionNode<NavMeshAgent, Vector3, float, float>
	{
		[Token(Token = "0x2000748")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97970C", Offset = "0x97970C")]
		private sealed class <Invoke>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MoveTo <>4__this;

			[Token(Token = "0x4001FBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public NavMeshAgent agent;

			[Token(Token = "0x4001FBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float speed;

			[Token(Token = "0x4001FBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float stoppingDistance;

			[Token(Token = "0x4001FBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Vector3 destination;

			[Token(Token = "0x17000393")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60025D0")]
				[Address(RVA = "0xE0BE40", Offset = "0xE0BE40", VA = "0xE0BE40", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000394")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60025D2")]
				[Address(RVA = "0xE0BEB0", Offset = "0xE0BEB0", VA = "0xE0BEB0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60025CD")]
			[Address(RVA = "0xE0BC14", Offset = "0xE0BC14", VA = "0xE0BC14")]
			[DebuggerHidden]
			public <Invoke>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x60025CE")]
			[Address(RVA = "0xE0BCC0", Offset = "0xE0BCC0", VA = "0xE0BCC0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60025CF")]
			[Address(RVA = "0xE0BCC4", Offset = "0xE0BCC4", VA = "0xE0BCC4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60025D1")]
			[Address(RVA = "0xE0BE48", Offset = "0xE0BE48", VA = "0xE0BE48", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private NavMeshAgent agent;

		[Token(Token = "0x6000F5A")]
		[Address(RVA = "0xE0BB14", Offset = "0xE0BB14", VA = "0xE0BB14", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9863CC", Offset = "0x9863CC")]
		public override IEnumerator Invoke(NavMeshAgent agent, Vector3 destination, float speed, float stoppingDistance)
		{
			return null;
		}

		[Token(Token = "0x6000F5B")]
		[Address(RVA = "0xE0BC40", Offset = "0xE0BC40", VA = "0xE0BC40", Slot = "13")]
		public override void OnBreak()
		{
		}

		[Token(Token = "0x6000F5C")]
		[Address(RVA = "0xE0BC70", Offset = "0xE0BC70", VA = "0xE0BC70")]
		public MoveTo()
		{
		}
	}
	[Token(Token = "0x20002A9")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x975C7C", Offset = "0x975C7C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x975C7C", Offset = "0x975C7C")]
	public class AddComponent<T> : CallableFunctionNode<T, GameObject, bool> where T : UnityEngine.Component
	{
		[Token(Token = "0x6000F5D")]
		public override T Invoke(GameObject gameObject, bool tryGetExisting)
		{
			return null;
		}

		[Token(Token = "0x6000F5E")]
		public AddComponent()
		{
		}
	}
	[Token(Token = "0x20002AA")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x975CDC", Offset = "0x975CDC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x975CDC", Offset = "0x975CDC")]
	public class NewScriptableObject<T> : CallableFunctionNode<T> where T : ScriptableObject
	{
		[Token(Token = "0x6000F5F")]
		public override T Invoke()
		{
			return null;
		}

		[Token(Token = "0x6000F60")]
		public NewScriptableObject()
		{
		}
	}
	[Token(Token = "0x20002AB")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x975D3C", Offset = "0x975D3C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x975D3C", Offset = "0x975D3C")]
	public class GetComponent<T> : PureFunctionNode<T, GameObject> where T : UnityEngine.Component
	{
		[Token(Token = "0x4000AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T _component;

		[Token(Token = "0x6000F61")]
		public override T Invoke(GameObject gameObject)
		{
			return null;
		}

		[Token(Token = "0x6000F62")]
		public GetComponent()
		{
		}
	}
	[Token(Token = "0x20002AC")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x975D9C", Offset = "0x975D9C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x975D9C", Offset = "0x975D9C")]
	[ExposeAsDefinition]
	public class Instantiate<T> : CallableFunctionNode<T, T, Vector3, Quaternion, Transform> where T : UnityEngine.Object
	{
		[Token(Token = "0x6000F63")]
		public override T Invoke(T original, Vector3 position, Quaternion rotation, Transform parent)
		{
			return null;
		}

		[Token(Token = "0x6000F64")]
		public Instantiate()
		{
		}
	}
	[Token(Token = "0x20002AD")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x975E0C", Offset = "0x975E0C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x975E0C", Offset = "0x975E0C")]
	public class GetChildTransforms : PureFunctionNode<IEnumerable<Transform>, Transform>
	{
		[Token(Token = "0x6000F65")]
		[Address(RVA = "0xE03F7C", Offset = "0xE03F7C", VA = "0xE03F7C", Slot = "12")]
		public override IEnumerable<Transform> Invoke(Transform parent)
		{
			return null;
		}

		[Token(Token = "0x6000F66")]
		[Address(RVA = "0xE03FCC", Offset = "0xE03FCC", VA = "0xE03FCC")]
		public GetChildTransforms()
		{
		}
	}
	[Token(Token = "0x20002AE")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x975E6C", Offset = "0x975E6C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x975E6C", Offset = "0x975E6C")]
	[ExposeAsDefinition]
	public class Cast<T> : PureFunctionNode<T, object>
	{
		[Token(Token = "0x6000F67")]
		public override T Invoke(object obj)
		{
			return (T)null;
		}

		[Token(Token = "0x6000F68")]
		public Cast()
		{
		}
	}
	[Token(Token = "0x20002AF")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x975EDC", Offset = "0x975EDC")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x975EDC", Offset = "0x975EDC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x975EDC", Offset = "0x975EDC")]
	[ExposeAsDefinition]
	public class Identity<T> : PureFunctionNode<T, T>
	{
		[Token(Token = "0x17000156")]
		public override string name
		{
			[Token(Token = "0x6000F69")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F6A")]
		public override T Invoke(T value)
		{
			return (T)null;
		}

		[Token(Token = "0x6000F6B")]
		public Identity()
		{
		}
	}
	[Token(Token = "0x20002B0")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x975F74", Offset = "0x975F74")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x975F74", Offset = "0x975F74")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x975F74", Offset = "0x975F74")]
	[ExposeAsDefinition]
	public class Cache<T> : CallableFunctionNode<T, T>
	{
		[Token(Token = "0x6000F6C")]
		public override T Invoke(T value)
		{
			return (T)null;
		}

		[Token(Token = "0x6000F6D")]
		public Cache()
		{
		}
	}
	[Token(Token = "0x20002B1")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x97600C", Offset = "0x97600C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x97600C", Offset = "0x97600C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x97600C", Offset = "0x97600C")]
	public class RemapFloat : PureFunctionNode<float, float, float, float, float, float>
	{
		[Token(Token = "0x6000F6E")]
		[Address(RVA = "0xC993D0", Offset = "0xC993D0", VA = "0xC993D0", Slot = "12")]
		public override float Invoke(float current, float iMin, float iMax = 1f, float oMin = 0f, float oMax = 100f)
		{
			return default(float);
		}

		[Token(Token = "0x6000F6F")]
		[Address(RVA = "0xC9947C", Offset = "0xC9947C", VA = "0xC9947C")]
		public RemapFloat()
		{
		}
	}
	[Token(Token = "0x20002B2")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x976094", Offset = "0x976094")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x976094", Offset = "0x976094")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x976094", Offset = "0x976094")]
	public class RemapVector3 : PureFunctionNode<Vector3, float, float, float, Vector3, Vector3>
	{
		[Token(Token = "0x6000F70")]
		[Address(RVA = "0xC994CC", Offset = "0xC994CC", VA = "0xC994CC", Slot = "12")]
		public override Vector3 Invoke(float current, float iMin, float iMax, Vector3 oMin, Vector3 oMax)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000F71")]
		[Address(RVA = "0xC995C0", Offset = "0xC995C0", VA = "0xC995C0")]
		public RemapVector3()
		{
		}
	}
	[Token(Token = "0x20002B3")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x97611C", Offset = "0x97611C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x97611C", Offset = "0x97611C")]
	public class LogValue : CallableActionNode<object>
	{
		[Token(Token = "0x6000F72")]
		[Address(RVA = "0xE09DE8", Offset = "0xE09DE8", VA = "0xE09DE8", Slot = "12")]
		public override void Invoke(object obj)
		{
		}

		[Token(Token = "0x6000F73")]
		[Address(RVA = "0xE09E50", Offset = "0xE09E50", VA = "0xE09E50")]
		public LogValue()
		{
		}
	}
	[Token(Token = "0x20002B4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x97617C", Offset = "0x97617C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x97617C", Offset = "0x97617C")]
	public class LogText : CallableActionNode<string>
	{
		[Token(Token = "0x6000F74")]
		[Address(RVA = "0xE09D30", Offset = "0xE09D30", VA = "0xE09D30", Slot = "12")]
		public override void Invoke(string text)
		{
		}

		[Token(Token = "0x6000F75")]
		[Address(RVA = "0xE09D98", Offset = "0xE09D98", VA = "0xE09D98")]
		public LogText()
		{
		}
	}
	[Token(Token = "0x20002B5")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x9761DC", Offset = "0x9761DC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9761DC", Offset = "0x9761DC")]
	public class SendEvent : CallableActionNode<GraphOwner, string>
	{
		[Token(Token = "0x6000F76")]
		[Address(RVA = "0xC99778", Offset = "0xC99778", VA = "0xC99778", Slot = "12")]
		public override void Invoke(GraphOwner target, string eventName)
		{
		}

		[Token(Token = "0x6000F77")]
		[Address(RVA = "0xC99810", Offset = "0xC99810", VA = "0xC99810")]
		public SendEvent()
		{
		}
	}
	[Token(Token = "0x20002B6")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x97623C", Offset = "0x97623C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x97623C", Offset = "0x97623C")]
	[ExposeAsDefinition]
	public class SendEvent<T> : CallableActionNode<GraphOwner, string, T>
	{
		[Token(Token = "0x6000F78")]
		public override void Invoke(GraphOwner target, string eventName, T eventValue)
		{
		}

		[Token(Token = "0x6000F79")]
		public SendEvent()
		{
		}
	}
	[Token(Token = "0x20002B7")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x9762AC", Offset = "0x9762AC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9762AC", Offset = "0x9762AC")]
	public class SendGlobalEvent : CallableActionNode<string>
	{
		[Token(Token = "0x6000F7A")]
		[Address(RVA = "0xC99860", Offset = "0xC99860", VA = "0xC99860", Slot = "12")]
		public override void Invoke(string eventName)
		{
		}

		[Token(Token = "0x6000F7B")]
		[Address(RVA = "0xC998FC", Offset = "0xC998FC", VA = "0xC998FC")]
		public SendGlobalEvent()
		{
		}
	}
	[Token(Token = "0x20002B8")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x97630C", Offset = "0x97630C")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x97630C", Offset = "0x97630C")]
	[ExposeAsDefinition]
	public class SendGlobalEvent<T> : CallableActionNode<string, T>
	{
		[Token(Token = "0x6000F7C")]
		public override void Invoke(string eventName, T eventValue)
		{
		}

		[Token(Token = "0x6000F7D")]
		public SendGlobalEvent()
		{
		}
	}
	[Token(Token = "0x20002B9")]
	public abstract class LatentActionNodeBase : SimplexNode
	{
		[Token(Token = "0x2000749")]
		public enum InvocationMode
		{
			[Token(Token = "0x4001FBF")]
			QueueCalls,
			[Token(Token = "0x4001FC0")]
			FilterCalls
		}

		[Token(Token = "0x200074A")]
		private struct RoutineData
		{
			[Token(Token = "0x4001FC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IEnumerator enumerator;

			[Token(Token = "0x4001FC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Flow flow;

			[Token(Token = "0x60025D3")]
			[Address(RVA = "0xA2C6E0", Offset = "0xA2C6E0", VA = "0xA2C6E0")]
			public RoutineData(IEnumerator enumerator, Flow flow)
			{
			}
		}

		[Token(Token = "0x200074B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97971C", Offset = "0x97971C")]
		private sealed class <InternalCoroutine>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LatentActionNodeBase <>4__this;

			[Token(Token = "0x4001FC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RoutineData data;

			[Token(Token = "0x17000395")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60025D7")]
				[Address(RVA = "0xE07340", Offset = "0xE07340", VA = "0xE07340", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000396")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60025D9")]
				[Address(RVA = "0xE073B0", Offset = "0xE073B0", VA = "0xE073B0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60025D4")]
			[Address(RVA = "0xE06D48", Offset = "0xE06D48", VA = "0xE06D48")]
			[DebuggerHidden]
			public <InternalCoroutine>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x60025D5")]
			[Address(RVA = "0xE06F44", Offset = "0xE06F44", VA = "0xE06F44", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60025D6")]
			[Address(RVA = "0xE06F48", Offset = "0xE06F48", VA = "0xE06F48", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60025D8")]
			[Address(RVA = "0xE07348", Offset = "0xE07348", VA = "0xE07348", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public InvocationMode invocationMode;

		[Token(Token = "0x4000AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private FlowOutput onStart;

		[Token(Token = "0x4000AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private FlowOutput onUpdate;

		[Token(Token = "0x4000AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private FlowOutput onFinish;

		[Token(Token = "0x4000AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Queue<RoutineData> routineQueue;

		[Token(Token = "0x4000AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine currentCoroutine;

		[Token(Token = "0x4000AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool graphStoped;

		[Token(Token = "0x4000AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool graphPaused;

		[Token(Token = "0x17000157")]
		public override string name
		{
			[Token(Token = "0x6000F7E")]
			[Address(RVA = "0xE06A50", Offset = "0xE06A50", VA = "0xE06A50", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000158")]
		public virtual bool allowRoutineQueueing
		{
			[Token(Token = "0x6000F89")]
			[Address(RVA = "0xE06F38", Offset = "0xE06F38", VA = "0xE06F38", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000F7F")]
		[Address(RVA = "0xE06B28", Offset = "0xE06B28", VA = "0xE06B28", Slot = "8")]
		public sealed override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6000F80")]
		[Address(RVA = "0xE06B30", Offset = "0xE06B30", VA = "0xE06B30", Slot = "11")]
		public sealed override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6000F81")]
		[Address(RVA = "0xE06C2C", Offset = "0xE06C2C", VA = "0xE06C2C", Slot = "9")]
		public sealed override void OnGraphPaused()
		{
		}

		[Token(Token = "0x6000F82")]
		[Address(RVA = "0xE06C38", Offset = "0xE06C38", VA = "0xE06C38", Slot = "10")]
		public sealed override void OnGraphUnpaused()
		{
		}

		[Token(Token = "0x6000F83")]
		[Address(RVA = "0xE068DC", Offset = "0xE068DC", VA = "0xE068DC")]
		protected void Begin(IEnumerator enumerator, Flow f)
		{
		}

		[Token(Token = "0x6000F84")]
		[Address(RVA = "0xE06B3C", Offset = "0xE06B3C", VA = "0xE06B3C")]
		protected void BreakAll()
		{
		}

		[Token(Token = "0x6000F85")]
		[Address(RVA = "0xE06C5C", Offset = "0xE06C5C", VA = "0xE06C5C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x986430", Offset = "0x986430")]
		private IEnumerator InternalCoroutine(RoutineData data)
		{
			return null;
		}

		[Token(Token = "0x6000F86")]
		[Address(RVA = "0xE06D74", Offset = "0xE06D74", VA = "0xE06D74", Slot = "6")]
		protected override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6000F87")]
		protected abstract void OnRegisterDerivedPorts(FlowNode node);

		[Token(Token = "0x6000F88")]
		[Address(RVA = "0xE06F34", Offset = "0xE06F34", VA = "0xE06F34", Slot = "13")]
		public virtual void OnBreak()
		{
		}

		[Token(Token = "0x6000F8A")]
		[Address(RVA = "0xE06870", Offset = "0xE06870", VA = "0xE06870")]
		protected LatentActionNodeBase()
		{
		}

		[Token(Token = "0x6000F8B")]
		[Address(RVA = "0xE06F40", Offset = "0xE06F40", VA = "0xE06F40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986494", Offset = "0x986494")]
		private void <OnRegisterPorts>b__19_0(Flow f)
		{
		}
	}
	[Token(Token = "0x20002BA")]
	public abstract class LatentActionNode : LatentActionNodeBase
	{
		[Token(Token = "0x6000F8C")]
		public abstract IEnumerator Invoke();

		[Token(Token = "0x6000F8D")]
		[Address(RVA = "0xE067C0", Offset = "0xE067C0", VA = "0xE067C0", Slot = "12")]
		protected sealed override void OnRegisterDerivedPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6000F8E")]
		[Address(RVA = "0xE06868", Offset = "0xE06868", VA = "0xE06868")]
		protected LatentActionNode()
		{
		}

		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0xE06878", Offset = "0xE06878", VA = "0xE06878")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9864A4", Offset = "0x9864A4")]
		private void <OnRegisterDerivedPorts>b__1_0(Flow f)
		{
		}
	}
	[Token(Token = "0x20002BB")]
	public abstract class LatentActionNode<T1> : LatentActionNodeBase
	{
		[Token(Token = "0x200074C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97972C", Offset = "0x97972C")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4001FC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public LatentActionNode<T1> <>4__this;

			[Token(Token = "0x4001FC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x60025DA")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x60025DB")]
			internal void <OnRegisterDerivedPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x6000F90")]
		public abstract IEnumerator Invoke(T1 a);

		[Token(Token = "0x6000F91")]
		protected sealed override void OnRegisterDerivedPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6000F92")]
		protected LatentActionNode()
		{
		}
	}
	[Token(Token = "0x20002BC")]
	public abstract class LatentActionNode<T1, T2> : LatentActionNodeBase
	{
		[Token(Token = "0x200074D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97973C", Offset = "0x97973C")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4001FC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public LatentActionNode<T1, T2> <>4__this;

			[Token(Token = "0x4001FCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4001FCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x60025DC")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x60025DD")]
			internal void <OnRegisterDerivedPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x6000F93")]
		public abstract IEnumerator Invoke(T1 a, T2 b);

		[Token(Token = "0x6000F94")]
		protected sealed override void OnRegisterDerivedPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6000F95")]
		protected LatentActionNode()
		{
		}
	}
	[Token(Token = "0x20002BD")]
	public abstract class LatentActionNode<T1, T2, T3> : LatentActionNodeBase
	{
		[Token(Token = "0x200074E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97974C", Offset = "0x97974C")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4001FCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public LatentActionNode<T1, T2, T3> <>4__this;

			[Token(Token = "0x4001FCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4001FCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4001FCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x60025DE")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x60025DF")]
			internal void <OnRegisterDerivedPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x6000F96")]
		public abstract IEnumerator Invoke(T1 a, T2 b, T3 c);

		[Token(Token = "0x6000F97")]
		protected sealed override void OnRegisterDerivedPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6000F98")]
		protected LatentActionNode()
		{
		}
	}
	[Token(Token = "0x20002BE")]
	public abstract class LatentActionNode<T1, T2, T3, T4> : LatentActionNodeBase
	{
		[Token(Token = "0x200074F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97975C", Offset = "0x97975C")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4001FD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public LatentActionNode<T1, T2, T3, T4> <>4__this;

			[Token(Token = "0x4001FD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4001FD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4001FD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x4001FD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T4> p4;

			[Token(Token = "0x60025E0")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x60025E1")]
			internal void <OnRegisterDerivedPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x6000F99")]
		public abstract IEnumerator Invoke(T1 a, T2 b, T3 c, T4 d);

		[Token(Token = "0x6000F9A")]
		protected sealed override void OnRegisterDerivedPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6000F9B")]
		protected LatentActionNode()
		{
		}
	}
	[Token(Token = "0x20002BF")]
	public abstract class LatentActionNode<T1, T2, T3, T4, T5> : LatentActionNodeBase
	{
		[Token(Token = "0x2000750")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97976C", Offset = "0x97976C")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4001FD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public LatentActionNode<T1, T2, T3, T4, T5> <>4__this;

			[Token(Token = "0x4001FD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4001FD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4001FD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x4001FD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T4> p4;

			[Token(Token = "0x4001FDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T5> p5;

			[Token(Token = "0x60025E2")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x60025E3")]
			internal void <OnRegisterDerivedPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x6000F9C")]
		public abstract IEnumerator Invoke(T1 a, T2 b, T3 c, T4 d, T5 e);

		[Token(Token = "0x6000F9D")]
		protected sealed override void OnRegisterDerivedPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6000F9E")]
		protected LatentActionNode()
		{
		}
	}
	[Token(Token = "0x20002C0")]
	public abstract class LatentActionNode<T1, T2, T3, T4, T5, T6> : LatentActionNodeBase
	{
		[Token(Token = "0x2000751")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97977C", Offset = "0x97977C")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4001FDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public LatentActionNode<T1, T2, T3, T4, T5, T6> <>4__this;

			[Token(Token = "0x4001FDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4001FDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4001FDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x4001FDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T4> p4;

			[Token(Token = "0x4001FE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T5> p5;

			[Token(Token = "0x4001FE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T6> p6;

			[Token(Token = "0x60025E4")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x60025E5")]
			internal void <OnRegisterDerivedPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x6000F9F")]
		public abstract IEnumerator Invoke(T1 a, T2 b, T3 c, T4 d, T5 e, T6 f);

		[Token(Token = "0x6000FA0")]
		protected sealed override void OnRegisterDerivedPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6000FA1")]
		protected LatentActionNode()
		{
		}
	}
	[Token(Token = "0x20002C1")]
	public abstract class LatentActionNode<T1, T2, T3, T4, T5, T6, T7> : LatentActionNodeBase
	{
		[Token(Token = "0x2000752")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97978C", Offset = "0x97978C")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4001FE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public LatentActionNode<T1, T2, T3, T4, T5, T6, T7> <>4__this;

			[Token(Token = "0x4001FE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4001FE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4001FE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x4001FE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T4> p4;

			[Token(Token = "0x4001FE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T5> p5;

			[Token(Token = "0x4001FE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T6> p6;

			[Token(Token = "0x4001FE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T7> p7;

			[Token(Token = "0x60025E6")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x60025E7")]
			internal void <OnRegisterDerivedPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x6000FA2")]
		public abstract IEnumerator Invoke(T1 a, T2 b, T3 c, T4 d, T5 e, T6 f, T7 g);

		[Token(Token = "0x6000FA3")]
		protected sealed override void OnRegisterDerivedPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6000FA4")]
		protected LatentActionNode()
		{
		}
	}
	[Token(Token = "0x20002C2")]
	public abstract class LatentActionNode<T1, T2, T3, T4, T5, T6, T7, T8> : LatentActionNodeBase
	{
		[Token(Token = "0x2000753")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97979C", Offset = "0x97979C")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4001FEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public LatentActionNode<T1, T2, T3, T4, T5, T6, T7, T8> <>4__this;

			[Token(Token = "0x4001FEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4001FEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4001FED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x4001FEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T4> p4;

			[Token(Token = "0x4001FEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T5> p5;

			[Token(Token = "0x4001FF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T6> p6;

			[Token(Token = "0x4001FF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T7> p7;

			[Token(Token = "0x4001FF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T8> p8;

			[Token(Token = "0x60025E8")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x60025E9")]
			internal void <OnRegisterDerivedPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x6000FA5")]
		public abstract IEnumerator Invoke(T1 a, T2 b, T3 c, T4 d, T5 e, T6 f, T7 g, T8 h);

		[Token(Token = "0x6000FA6")]
		protected sealed override void OnRegisterDerivedPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6000FA7")]
		protected LatentActionNode()
		{
		}
	}
	[Token(Token = "0x20002C3")]
	public abstract class LatentActionNode<T1, T2, T3, T4, T5, T6, T7, T8, T9> : LatentActionNodeBase
	{
		[Token(Token = "0x2000754")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9797AC", Offset = "0x9797AC")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4001FF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public LatentActionNode<T1, T2, T3, T4, T5, T6, T7, T8, T9> <>4__this;

			[Token(Token = "0x4001FF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4001FF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4001FF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x4001FF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T4> p4;

			[Token(Token = "0x4001FF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T5> p5;

			[Token(Token = "0x4001FF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T6> p6;

			[Token(Token = "0x4001FFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T7> p7;

			[Token(Token = "0x4001FFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T8> p8;

			[Token(Token = "0x4001FFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T9> p9;

			[Token(Token = "0x60025EA")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x60025EB")]
			internal void <OnRegisterDerivedPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x6000FA8")]
		public abstract IEnumerator Invoke(T1 a, T2 b, T3 c, T4 d, T5 e, T6 f, T7 g, T8 h, T9 i);

		[Token(Token = "0x6000FA9")]
		protected sealed override void OnRegisterDerivedPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6000FAA")]
		protected LatentActionNode()
		{
		}
	}
	[Token(Token = "0x20002C4")]
	public abstract class LatentActionNode<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> : LatentActionNodeBase
	{
		[Token(Token = "0x2000755")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9797BC", Offset = "0x9797BC")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4001FFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public LatentActionNode<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> <>4__this;

			[Token(Token = "0x4001FFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4001FFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4002000")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x4002001")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T4> p4;

			[Token(Token = "0x4002002")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T5> p5;

			[Token(Token = "0x4002003")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T6> p6;

			[Token(Token = "0x4002004")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T7> p7;

			[Token(Token = "0x4002005")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T8> p8;

			[Token(Token = "0x4002006")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T9> p9;

			[Token(Token = "0x4002007")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T10> p10;

			[Token(Token = "0x60025EC")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x60025ED")]
			internal void <OnRegisterDerivedPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x6000FAB")]
		public abstract IEnumerator Invoke(T1 a, T2 b, T3 c, T4 d, T5 e, T6 f, T7 g, T8 h, T9 i, T10 j);

		[Token(Token = "0x6000FAC")]
		protected sealed override void OnRegisterDerivedPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6000FAD")]
		protected LatentActionNode()
		{
		}
	}
	[Token(Token = "0x20002C5")]
	public abstract class PureFunctionNodeBase : SimplexNode
	{
		[Token(Token = "0x6000FAE")]
		[Address(RVA = "0xC92168", Offset = "0xC92168", VA = "0xC92168")]
		protected PureFunctionNodeBase()
		{
		}
	}
	[Token(Token = "0x20002C6")]
	public abstract class PureFunctionNode<TResult> : PureFunctionNodeBase
	{
		[Token(Token = "0x6000FAF")]
		public abstract TResult Invoke();

		[Token(Token = "0x6000FB0")]
		protected sealed override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6000FB1")]
		protected PureFunctionNode()
		{
		}

		[Token(Token = "0x6000FB2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9864B4", Offset = "0x9864B4")]
		private TResult <OnRegisterPorts>b__1_0()
		{
			return (TResult)null;
		}
	}
	[Token(Token = "0x20002C7")]
	public abstract class PureFunctionNode<TResult, T1> : PureFunctionNodeBase
	{
		[Token(Token = "0x2000756")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9797CC", Offset = "0x9797CC")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4002008")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public PureFunctionNode<TResult, T1> <>4__this;

			[Token(Token = "0x4002009")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x60025EE")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x60025EF")]
			internal TResult <OnRegisterPorts>b__0()
			{
				return (TResult)null;
			}
		}

		[Token(Token = "0x6000FB3")]
		public abstract TResult Invoke(T1 a);

		[Token(Token = "0x6000FB4")]
		protected sealed override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6000FB5")]
		protected PureFunctionNode()
		{
		}
	}
	[Token(Token = "0x20002C8")]
	public abstract class PureFunctionNode<TResult, T1, T2> : PureFunctionNodeBase
	{
		[Token(Token = "0x2000757")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9797DC", Offset = "0x9797DC")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x400200A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public PureFunctionNode<TResult, T1, T2> <>4__this;

			[Token(Token = "0x400200B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x400200C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x60025F0")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x60025F1")]
			internal TResult <OnRegisterPorts>b__0()
			{
				return (TResult)null;
			}
		}

		[Token(Token = "0x6000FB6")]
		public abstract TResult Invoke(T1 a, T2 b);

		[Token(Token = "0x6000FB7")]
		protected sealed override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6000FB8")]
		protected PureFunctionNode()
		{
		}
	}
	[Token(Token = "0x20002C9")]
	public abstract class PureFunctionNode<TResult, T1, T2, T3> : PureFunctionNodeBase
	{
		[Token(Token = "0x2000758")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9797EC", Offset = "0x9797EC")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x400200D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public PureFunctionNode<TResult, T1, T2, T3> <>4__this;

			[Token(Token = "0x400200E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x400200F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4002010")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x60025F2")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x60025F3")]
			internal TResult <OnRegisterPorts>b__0()
			{
				return (TResult)null;
			}
		}

		[Token(Token = "0x6000FB9")]
		public abstract TResult Invoke(T1 a, T2 b, T3 c);

		[Token(Token = "0x6000FBA")]
		protected sealed override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6000FBB")]
		protected PureFunctionNode()
		{
		}
	}
	[Token(Token = "0x20002CA")]
	public abstract class PureFunctionNode<TResult, T1, T2, T3, T4> : PureFunctionNodeBase
	{
		[Token(Token = "0x2000759")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9797FC", Offset = "0x9797FC")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4002011")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public PureFunctionNode<TResult, T1, T2, T3, T4> <>4__this;

			[Token(Token = "0x4002012")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4002013")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4002014")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x4002015")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T4> p4;

			[Token(Token = "0x60025F4")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x60025F5")]
			internal TResult <OnRegisterPorts>b__0()
			{
				return (TResult)null;
			}
		}

		[Token(Token = "0x6000FBC")]
		public abstract TResult Invoke(T1 a, T2 b, T3 c, T4 d);

		[Token(Token = "0x6000FBD")]
		protected sealed override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6000FBE")]
		protected PureFunctionNode()
		{
		}
	}
	[Token(Token = "0x20002CB")]
	public abstract class PureFunctionNode<TResult, T1, T2, T3, T4, T5> : PureFunctionNodeBase
	{
		[Token(Token = "0x200075A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97980C", Offset = "0x97980C")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4002016")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public PureFunctionNode<TResult, T1, T2, T3, T4, T5> <>4__this;

			[Token(Token = "0x4002017")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4002018")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4002019")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x400201A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T4> p4;

			[Token(Token = "0x400201B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T5> p5;

			[Token(Token = "0x60025F6")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x60025F7")]
			internal TResult <OnRegisterPorts>b__0()
			{
				return (TResult)null;
			}
		}

		[Token(Token = "0x6000FBF")]
		public abstract TResult Invoke(T1 a, T2 b, T3 c, T4 d, T5 e);

		[Token(Token = "0x6000FC0")]
		protected sealed override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6000FC1")]
		protected PureFunctionNode()
		{
		}
	}
	[Token(Token = "0x20002CC")]
	public abstract class PureFunctionNode<TResult, T1, T2, T3, T4, T5, T6> : PureFunctionNodeBase
	{
		[Token(Token = "0x200075B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97981C", Offset = "0x97981C")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x400201C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public PureFunctionNode<TResult, T1, T2, T3, T4, T5, T6> <>4__this;

			[Token(Token = "0x400201D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x400201E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x400201F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x4002020")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T4> p4;

			[Token(Token = "0x4002021")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T5> p5;

			[Token(Token = "0x4002022")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T6> p6;

			[Token(Token = "0x60025F8")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x60025F9")]
			internal TResult <OnRegisterPorts>b__0()
			{
				return (TResult)null;
			}
		}

		[Token(Token = "0x6000FC2")]
		public abstract TResult Invoke(T1 a, T2 b, T3 c, T4 d, T5 e, T6 f);

		[Token(Token = "0x6000FC3")]
		protected sealed override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6000FC4")]
		protected PureFunctionNode()
		{
		}
	}
	[Token(Token = "0x20002CD")]
	public abstract class PureFunctionNode<TResult, T1, T2, T3, T4, T5, T6, T7> : PureFunctionNodeBase
	{
		[Token(Token = "0x200075C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97982C", Offset = "0x97982C")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4002023")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public PureFunctionNode<TResult, T1, T2, T3, T4, T5, T6, T7> <>4__this;

			[Token(Token = "0x4002024")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4002025")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4002026")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x4002027")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T4> p4;

			[Token(Token = "0x4002028")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T5> p5;

			[Token(Token = "0x4002029")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T6> p6;

			[Token(Token = "0x400202A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T7> p7;

			[Token(Token = "0x60025FA")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x60025FB")]
			internal TResult <OnRegisterPorts>b__0()
			{
				return (TResult)null;
			}
		}

		[Token(Token = "0x6000FC5")]
		public abstract TResult Invoke(T1 a, T2 b, T3 c, T4 d, T5 e, T6 f, T7 g);

		[Token(Token = "0x6000FC6")]
		protected sealed override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6000FC7")]
		protected PureFunctionNode()
		{
		}
	}
	[Token(Token = "0x20002CE")]
	public abstract class PureFunctionNode<TResult, T1, T2, T3, T4, T5, T6, T7, T8> : PureFunctionNodeBase
	{
		[Token(Token = "0x200075D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97983C", Offset = "0x97983C")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x400202B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public PureFunctionNode<TResult, T1, T2, T3, T4, T5, T6, T7, T8> <>4__this;

			[Token(Token = "0x400202C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x400202D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x400202E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x400202F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T4> p4;

			[Token(Token = "0x4002030")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T5> p5;

			[Token(Token = "0x4002031")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T6> p6;

			[Token(Token = "0x4002032")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T7> p7;

			[Token(Token = "0x4002033")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T8> p8;

			[Token(Token = "0x60025FC")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x60025FD")]
			internal TResult <OnRegisterPorts>b__0()
			{
				return (TResult)null;
			}
		}

		[Token(Token = "0x6000FC8")]
		public abstract TResult Invoke(T1 a, T2 b, T3 c, T4 d, T5 e, T6 f, T7 g, T8 h);

		[Token(Token = "0x6000FC9")]
		protected sealed override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6000FCA")]
		protected PureFunctionNode()
		{
		}
	}
	[Token(Token = "0x20002CF")]
	public abstract class PureFunctionNode<TResult, T1, T2, T3, T4, T5, T6, T7, T8, T9> : PureFunctionNodeBase
	{
		[Token(Token = "0x200075E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97984C", Offset = "0x97984C")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4002034")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public PureFunctionNode<TResult, T1, T2, T3, T4, T5, T6, T7, T8, T9> <>4__this;

			[Token(Token = "0x4002035")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4002036")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4002037")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x4002038")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T4> p4;

			[Token(Token = "0x4002039")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T5> p5;

			[Token(Token = "0x400203A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T6> p6;

			[Token(Token = "0x400203B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T7> p7;

			[Token(Token = "0x400203C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T8> p8;

			[Token(Token = "0x400203D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T9> p9;

			[Token(Token = "0x60025FE")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x60025FF")]
			internal TResult <OnRegisterPorts>b__0()
			{
				return (TResult)null;
			}
		}

		[Token(Token = "0x6000FCB")]
		public abstract TResult Invoke(T1 a, T2 b, T3 c, T4 d, T5 e, T6 f, T7 g, T8 h, T9 i);

		[Token(Token = "0x6000FCC")]
		protected sealed override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6000FCD")]
		protected PureFunctionNode()
		{
		}
	}
	[Token(Token = "0x20002D0")]
	public abstract class PureFunctionNode<TResult, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> : PureFunctionNodeBase
	{
		[Token(Token = "0x200075F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97985C", Offset = "0x97985C")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x400203E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public PureFunctionNode<TResult, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> <>4__this;

			[Token(Token = "0x400203F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4002040")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4002041")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x4002042")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T4> p4;

			[Token(Token = "0x4002043")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T5> p5;

			[Token(Token = "0x4002044")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T6> p6;

			[Token(Token = "0x4002045")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T7> p7;

			[Token(Token = "0x4002046")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T8> p8;

			[Token(Token = "0x4002047")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T9> p9;

			[Token(Token = "0x4002048")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T10> p10;

			[Token(Token = "0x6002600")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6002601")]
			internal TResult <OnRegisterPorts>b__0()
			{
				return (TResult)null;
			}
		}

		[Token(Token = "0x6000FCE")]
		public abstract TResult Invoke(T1 a, T2 b, T3 c, T4 d, T5 e, T6 f, T7 g, T8 h, T9 i, T10 j);

		[Token(Token = "0x6000FCF")]
		protected sealed override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6000FD0")]
		protected PureFunctionNode()
		{
		}
	}
	[Token(Token = "0x20002D1")]
	[SpoofAOT]
	public abstract class SimplexNode
	{
		[NonSerialized]
		[Token(Token = "0x4000AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string _name;

		[NonSerialized]
		[Token(Token = "0x4000AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string _description;

		[Token(Token = "0x4000AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97F9A4", Offset = "0x97F9A4")]
		private FlowNode <parentNode>k__BackingField;

		[Token(Token = "0x4000B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ParameterInfo[] _parameters;

		[Token(Token = "0x17000159")]
		protected FlowNode parentNode
		{
			[Token(Token = "0x6000FD1")]
			[Address(RVA = "0xC99808", Offset = "0xC99808", VA = "0xC99808")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9864C4", Offset = "0x9864C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FD2")]
			[Address(RVA = "0xC9A15C", Offset = "0xC9A15C", VA = "0xC9A15C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9864D4", Offset = "0x9864D4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700015A")]
		public virtual string name
		{
			[Token(Token = "0x6000FD3")]
			[Address(RVA = "0xC9A164", Offset = "0xC9A164", VA = "0xC9A164", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015B")]
		public virtual string description
		{
			[Token(Token = "0x6000FD4")]
			[Address(RVA = "0xC9A290", Offset = "0xC9A290", VA = "0xC9A290", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015C")]
		public ParameterInfo[] parameters
		{
			[Token(Token = "0x6000FD5")]
			[Address(RVA = "0xC9A350", Offset = "0xC9A350", VA = "0xC9A350")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FD6")]
		[Address(RVA = "0xC9A41C", Offset = "0xC9A41C", VA = "0xC9A41C")]
		public void RegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6000FD7")]
		[Address(RVA = "0xC9A554", Offset = "0xC9A554", VA = "0xC9A554")]
		public void SetDefaultParameters(FlowNode node)
		{
		}

		[Token(Token = "0x6000FD8")]
		protected abstract void OnRegisterPorts(FlowNode node);

		[Token(Token = "0x6000FD9")]
		[Address(RVA = "0xC9A6E8", Offset = "0xC9A6E8", VA = "0xC9A6E8", Slot = "7")]
		protected virtual void OnRegisterExtraPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6000FDA")]
		[Address(RVA = "0xC9A6EC", Offset = "0xC9A6EC", VA = "0xC9A6EC", Slot = "8")]
		public virtual void OnGraphStarted()
		{
		}

		[Token(Token = "0x6000FDB")]
		[Address(RVA = "0xC9A6F0", Offset = "0xC9A6F0", VA = "0xC9A6F0", Slot = "9")]
		public virtual void OnGraphPaused()
		{
		}

		[Token(Token = "0x6000FDC")]
		[Address(RVA = "0xC9A6F4", Offset = "0xC9A6F4", VA = "0xC9A6F4", Slot = "10")]
		public virtual void OnGraphUnpaused()
		{
		}

		[Token(Token = "0x6000FDD")]
		[Address(RVA = "0xC9A6F8", Offset = "0xC9A6F8", VA = "0xC9A6F8", Slot = "11")]
		public virtual void OnGraphStoped()
		{
		}

		[Token(Token = "0x6000FDE")]
		[Address(RVA = "0xC92170", Offset = "0xC92170", VA = "0xC92170")]
		protected SimplexNode()
		{
		}
	}
	[Token(Token = "0x20002D2")]
	[DoNotList]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0x97638C", Offset = "0x97638C")]
	public abstract class SimplexNodeWrapper : FlowNode
	{
		[Token(Token = "0x6000FDF")]
		[Address(RVA = "0xC9A6FC", Offset = "0xC9A6FC", VA = "0xC9A6FC")]
		protected SimplexNodeWrapper()
		{
		}
	}
	[Token(Token = "0x20002D3")]
	public class SimplexNodeWrapper<T> : SimplexNodeWrapper where T : SimplexNode
	{
		[Token(Token = "0x4000B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private T _simplexNode;

		[Token(Token = "0x1700015D")]
		public T simplexNode
		{
			[Token(Token = "0x6000FE1")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015E")]
		public override string name
		{
			[Token(Token = "0x6000FE2")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015F")]
		public override string description
		{
			[Token(Token = "0x6000FE3")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FE0")]
		private Type GetRuntimeIconType()
		{
			return null;
		}

		[Token(Token = "0x6000FE4")]
		public override Type GetNodeWildDefinitionType()
		{
			return null;
		}

		[Token(Token = "0x6000FE5")]
		public override void OnCreate(Graph assignedGraph)
		{
		}

		[Token(Token = "0x6000FE6")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6000FE7")]
		public override void OnGraphPaused()
		{
		}

		[Token(Token = "0x6000FE8")]
		public override void OnGraphUnpaused()
		{
		}

		[Token(Token = "0x6000FE9")]
		public override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6000FEA")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6000FEB")]
		public SimplexNodeWrapper()
		{
		}
	}
	[Token(Token = "0x20002D4")]
	public delegate void EventUniversalDelegate();
	[Token(Token = "0x20002D5")]
	public delegate void EventUniversalDelegate<in T1>(T1 arg1);
	[Token(Token = "0x20002D6")]
	public delegate void EventUniversalDelegate<in T1, in T2>(T1 arg1, T2 arg2);
	[Token(Token = "0x20002D7")]
	public delegate void EventUniversalDelegate<in T1, in T2, in T3>(T1 arg1, T2 arg2, T3 arg3);
	[Token(Token = "0x20002D8")]
	public delegate void EventUniversalDelegate<in T1, in T2, in T3, in T4>(T1 arg1, T2 arg2, T3 arg3, T4 arg4);
	[Token(Token = "0x20002D9")]
	public delegate void EventUniversalDelegate<in T1, in T2, in T3, in T4, in T5>(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5);
	[Token(Token = "0x20002DA")]
	public delegate void EventUniversalDelegate<in T1, in T2, in T3, in T4, in T5, in T6>(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6);
	[Token(Token = "0x20002DB")]
	public delegate void EventUniversalDelegate<in T1, in T2, in T3, in T4, in T5, in T6, in T7>(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7);
	[Token(Token = "0x20002DC")]
	public delegate void EventUniversalDelegate<in T1, in T2, in T3, in T4, in T5, in T6, in T7, in T8>(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8);
	[Token(Token = "0x20002DD")]
	public delegate void EventUniversalDelegate<in T1, in T2, in T3, in T4, in T5, in T6, in T7, in T8, in T9>(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9);
	[Token(Token = "0x20002DE")]
	public delegate void EventUniversalDelegate<in T1, in T2, in T3, in T4, in T5, in T6, in T7, in T8, in T9, in T10>(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10);
	[Token(Token = "0x20002DF")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x9763F0", Offset = "0x9763F0")]
	public class GeneratedKeyAttribute : Attribute
	{
		[Token(Token = "0x4000B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string memberString;

		[Token(Token = "0x17000160")]
		public string MemberName
		{
			[Token(Token = "0x6001019")]
			[Address(RVA = "0xE03F74", Offset = "0xE03F74", VA = "0xE03F74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001018")]
		[Address(RVA = "0xE03F48", Offset = "0xE03F48", VA = "0xE03F48")]
		public GeneratedKeyAttribute(string memberName)
		{
		}
	}
	[Token(Token = "0x20002E0")]
	public struct ParamDef
	{
		[Token(Token = "0x4000B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Type paramType;

		[Token(Token = "0x4000B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Type arrayType;

		[Token(Token = "0x4000B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ParamMode paramMode;

		[Token(Token = "0x4000B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string portName;

		[Token(Token = "0x4000B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string portId;

		[Token(Token = "0x4000B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool isParamsArray;

		[Token(Token = "0x4000B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MemberInfo presentedInfo;
	}
	[Token(Token = "0x20002E1")]
	public struct ParametresDef
	{
		[Token(Token = "0x4000B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<ParamDef> paramDefinitions;

		[Token(Token = "0x4000B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ParamDef instanceDef;

		[Token(Token = "0x4000B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ParamDef resultDef;
	}
	[Token(Token = "0x20002E2")]
	public enum ParamMode
	{
		[Token(Token = "0x4000B0E")]
		Undefined = 0,
		[Token(Token = "0x4000B0F")]
		In = 1,
		[Token(Token = "0x4000B10")]
		Out = 2,
		[Token(Token = "0x4000B11")]
		Ref = 3,
		[Token(Token = "0x4000B12")]
		Instance = 4,
		[Token(Token = "0x4000B13")]
		Result = 6
	}
	[Token(Token = "0x20002E3")]
	public static class ReflectedNodesHelper
	{
		[Token(Token = "0x4000B14")]
		private const string RETURN_VALUE_NAME = "Value";

		[Token(Token = "0x600101A")]
		[Address(RVA = "0xC971BC", Offset = "0xC971BC", VA = "0xC971BC")]
		public static ParamDef GetGetterDefFromInfo(MemberInfo info)
		{
			return default(ParamDef);
		}

		[Token(Token = "0x600101B")]
		[Address(RVA = "0xC973F0", Offset = "0xC973F0", VA = "0xC973F0")]
		public static ParamDef GetDefFromInfo(ParameterInfo info, bool last)
		{
			return default(ParamDef);
		}

		[Token(Token = "0x600101C")]
		[Address(RVA = "0xC976B4", Offset = "0xC976B4", VA = "0xC976B4")]
		public static bool InitParams(Type targetType, bool isStatic, MemberInfo[] infos, out ParametresDef parametres)
		{
			return default(bool);
		}

		[Token(Token = "0x600101D")]
		[Address(RVA = "0xC97904", Offset = "0xC97904", VA = "0xC97904")]
		private static bool InitParams(ParameterInfo[] prms, Type returnType, ref ParametresDef parametres)
		{
			return default(bool);
		}

		[Token(Token = "0x600101E")]
		[Address(RVA = "0xC97B44", Offset = "0xC97B44", VA = "0xC97B44")]
		public static bool InitParams(ConstructorInfo constructor, out ParametresDef parametres)
		{
			return default(bool);
		}

		[Token(Token = "0x600101F")]
		[Address(RVA = "0xC97CB8", Offset = "0xC97CB8", VA = "0xC97CB8")]
		public static bool InitParams(MethodInfo method, out ParametresDef parametres)
		{
			return default(bool);
		}

		[Token(Token = "0x6001020")]
		[Address(RVA = "0xC97E80", Offset = "0xC97E80", VA = "0xC97E80")]
		public static bool InitParams(FieldInfo field, out ParametresDef parametres)
		{
			return default(bool);
		}

		[Token(Token = "0x6001021")]
		[Address(RVA = "0xC98028", Offset = "0xC98028", VA = "0xC98028")]
		public static string GetGeneratedKey(MemberInfo memberInfo)
		{
			return null;
		}
	}
	[Token(Token = "0x20002E4")]
	public delegate void UniversalDelegate(UniversalDelegateParam[] delegateParams);
	[Token(Token = "0x20002E5")]
	public abstract class UniversalDelegateParam
	{
		[Token(Token = "0x4000B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ParamDef paramDef;

		[Token(Token = "0x4000B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool paramsArrayNeeded;

		[Token(Token = "0x4000B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int paramsArrayCount;

		[Token(Token = "0x4000B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public UniversalDelegate referencedDelegate;

		[Token(Token = "0x4000B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UniversalDelegateParam[] referencedParams;

		[Token(Token = "0x17000161")]
		public abstract FieldInfo ValueField
		{
			[Token(Token = "0x600102D")]
			get;
		}

		[Token(Token = "0x6001026")]
		public abstract Type GetCurrentType();

		[Token(Token = "0x6001027")]
		public abstract void RegisterAsInput(FlowNode node);

		[Token(Token = "0x6001028")]
		public abstract void RegisterAsOutput(FlowNode node);

		[Token(Token = "0x6001029")]
		public abstract void RegisterAsOutput(FlowNode node, Action beforeReturn);

		[Token(Token = "0x600102A")]
		public abstract void RegisterAsOutput(FlowNode node, Action<UniversalDelegateParam> beforeReturn);

		[Token(Token = "0x600102B")]
		public abstract void SetFromInput();

		[Token(Token = "0x600102C")]
		public abstract void SetFromValue(object value);

		[Token(Token = "0x600102E")]
		[Address(RVA = "0xCA319C", Offset = "0xCA319C", VA = "0xCA319C")]
		protected UniversalDelegateParam()
		{
		}
	}
	[Token(Token = "0x20002E6")]
	public class UniversalDelegateParam<T> : UniversalDelegateParam
	{
		[Token(Token = "0x2000760")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97986C", Offset = "0x97986C")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4002049")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Delegate beforeReturn;

			[Token(Token = "0x400204A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public UniversalDelegateParam<T> <>4__this;

			[Token(Token = "0x6002602")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x6002603")]
			internal T <RegisterAsOutputInternal>b__0()
			{
				return (T)null;
			}
		}

		[Token(Token = "0x4000B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T value;

		[Token(Token = "0x4000B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ValueInput<T> valueInput;

		[Token(Token = "0x4000B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static FieldInfo _fieldInfo;

		[Token(Token = "0x17000162")]
		public override FieldInfo ValueField
		{
			[Token(Token = "0x6001038")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600102F")]
		public UniversalDelegateParam()
		{
		}

		[Token(Token = "0x6001030")]
		public override Type GetCurrentType()
		{
			return null;
		}

		[Token(Token = "0x6001031")]
		public override void RegisterAsInput(FlowNode node)
		{
		}

		[Token(Token = "0x6001032")]
		private void RegisterAsOutputInternal(FlowNode node, Delegate beforeReturn)
		{
		}

		[Token(Token = "0x6001033")]
		public override void RegisterAsOutput(FlowNode node)
		{
		}

		[Token(Token = "0x6001034")]
		public override void RegisterAsOutput(FlowNode node, Action beforeReturn)
		{
		}

		[Token(Token = "0x6001035")]
		public override void RegisterAsOutput(FlowNode node, Action<UniversalDelegateParam> beforeReturn)
		{
		}

		[Token(Token = "0x6001036")]
		public override void SetFromInput()
		{
		}

		[Token(Token = "0x6001037")]
		public override void SetFromValue(object newValue)
		{
		}
	}
	[Token(Token = "0x20002E7")]
	public class UniversalDelegateParam<TArray, TValue> : UniversalDelegateParam<TArray>
	{
		[Token(Token = "0x4000B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ValueInput<TValue>[] valueInputs;

		[Token(Token = "0x6001039")]
		public override void RegisterAsInput(FlowNode node)
		{
		}

		[Token(Token = "0x600103A")]
		public override void SetFromInput()
		{
		}

		[Token(Token = "0x600103B")]
		public UniversalDelegateParam()
		{
		}
	}
	[Token(Token = "0x20002E8")]
	public abstract class BaseReflectedConstructorNode
	{
		[Token(Token = "0x4000B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected ConstructorInfo constructorInfo;

		[Token(Token = "0x4000B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected List<ParamDef> paramDefinitions;

		[Token(Token = "0x4000B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ParamDef instanceDef;

		[Token(Token = "0x4000B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected ParamDef resultDef;

		[Token(Token = "0x4000B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected ReflectedMethodRegistrationOptions options;

		[Token(Token = "0x1400002E")]
		protected static event Func<ConstructorInfo, BaseReflectedConstructorNode> OnGetAotReflectedConstructorNode
		{
			[Token(Token = "0x600103C")]
			[Address(RVA = "0xDF7FB0", Offset = "0xDF7FB0", VA = "0xDF7FB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9864E4", Offset = "0x9864E4")]
			add
			{
			}
			[Token(Token = "0x600103D")]
			[Address(RVA = "0xDF80AC", Offset = "0xDF80AC", VA = "0xDF80AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9864F4", Offset = "0x9864F4")]
			remove
			{
			}
		}

		[Token(Token = "0x600103E")]
		[Address(RVA = "0xDF81A8", Offset = "0xDF81A8", VA = "0xDF81A8")]
		public static BaseReflectedConstructorNode GetConstructorNode(ConstructorInfo targetConstructor, ReflectedMethodRegistrationOptions options)
		{
			return null;
		}

		[Token(Token = "0x600103F")]
		[Address(RVA = "0xDF8314", Offset = "0xDF8314", VA = "0xDF8314")]
		protected bool Init(ConstructorInfo constructor, ParametresDef parametres)
		{
			return default(bool);
		}

		[Token(Token = "0x6001040")]
		protected abstract bool InitInternal(ConstructorInfo constructor);

		[Token(Token = "0x6001041")]
		public abstract void RegisterPorts(FlowNode node, ReflectedMethodRegistrationOptions options);

		[Token(Token = "0x6001042")]
		[Address(RVA = "0xDF84A8", Offset = "0xDF84A8", VA = "0xDF84A8")]
		protected BaseReflectedConstructorNode()
		{
		}
	}
	[Token(Token = "0x20002E9")]
	public class PureReflectionConstructorNode : BaseReflectedConstructorNode
	{
		[Token(Token = "0x2000761")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97987C", Offset = "0x97987C")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x400204B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool callable;

			[Token(Token = "0x400204C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public PureReflectionConstructorNode <>4__this;

			[Token(Token = "0x400204D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int idx;

			[Token(Token = "0x6002604")]
			[Address(RVA = "0xC93FE8", Offset = "0xC93FE8", VA = "0xC93FE8")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x6002605")]
			[Address(RVA = "0xC946F4", Offset = "0xC946F4", VA = "0xC946F4")]
			internal object <RegisterOutput>b__0()
			{
				return null;
			}
		}

		[Token(Token = "0x2000762")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97988C", Offset = "0x97988C")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x400204E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PureReflectionConstructorNode <>4__this;

			[Token(Token = "0x400204F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ReflectedMethodRegistrationOptions options;

			[Token(Token = "0x6002606")]
			[Address(RVA = "0xC945E4", Offset = "0xC945E4", VA = "0xC945E4")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x6002607")]
			[Address(RVA = "0xC94604", Offset = "0xC94604", VA = "0xC94604")]
			internal object <RegisterPorts>b__0()
			{
				return null;
			}
		}

		[Token(Token = "0x2000763")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97989C", Offset = "0x97989C")]
		private sealed class <>c__DisplayClass10_1
		{
			[Token(Token = "0x4002050")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FlowOutput output;

			[Token(Token = "0x4002051")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass10_0 CS$<>8__locals1;

			[Token(Token = "0x6002608")]
			[Address(RVA = "0xC945EC", Offset = "0xC945EC", VA = "0xC945EC")]
			public <>c__DisplayClass10_1()
			{
			}

			[Token(Token = "0x6002609")]
			[Address(RVA = "0xC94654", Offset = "0xC94654", VA = "0xC94654")]
			internal void <RegisterPorts>b__1(Flow flow)
			{
			}
		}

		[Token(Token = "0x4000B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private object resultObject;

		[Token(Token = "0x4000B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private object[] callParams;

		[Token(Token = "0x4000B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private ValueInput[] inputs;

		[Token(Token = "0x4000B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private ValueInput[] arrayInputs;

		[Token(Token = "0x4000B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private int arrayParamsInput;

		[Token(Token = "0x4000B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Type arrayParamsType;

		[Token(Token = "0x6001043")]
		[Address(RVA = "0xC93A98", Offset = "0xC93A98", VA = "0xC93A98", Slot = "4")]
		protected override bool InitInternal(ConstructorInfo constructor)
		{
			return default(bool);
		}

		[Token(Token = "0x6001044")]
		[Address(RVA = "0xC93C20", Offset = "0xC93C20", VA = "0xC93C20")]
		private void Call()
		{
		}

		[Token(Token = "0x6001045")]
		[Address(RVA = "0xC93ECC", Offset = "0xC93ECC", VA = "0xC93ECC")]
		private void RegisterOutput(FlowNode node, bool callable, ParamDef def, int idx)
		{
		}

		[Token(Token = "0x6001046")]
		[Address(RVA = "0xC93FF0", Offset = "0xC93FF0", VA = "0xC93FF0")]
		private void RegisterInput(FlowNode node, ParamDef def, int idx)
		{
		}

		[Token(Token = "0x6001047")]
		[Address(RVA = "0xC94230", Offset = "0xC94230", VA = "0xC94230", Slot = "5")]
		public override void RegisterPorts(FlowNode node, ReflectedMethodRegistrationOptions options)
		{
		}

		[Token(Token = "0x6001048")]
		[Address(RVA = "0xC945F4", Offset = "0xC945F4", VA = "0xC945F4")]
		public PureReflectionConstructorNode()
		{
		}
	}
	[Token(Token = "0x20002EA")]
	[SpoofAOT]
	public class ReflectedDelegateEvent
	{
		[Token(Token = "0x2000764")]
		public delegate void DelegateEventCallback(params object[] args);

		[Serializable]
		[Token(Token = "0x2000765")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9798AC", Offset = "0x9798AC")]
		private sealed class <>c
		{
			[Token(Token = "0x4002052")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002053")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<ParameterInfo, Type> <>9__10_0;

			[Token(Token = "0x600260F")]
			[Address(RVA = "0xC95E9C", Offset = "0xC95E9C", VA = "0xC95E9C")]
			public <>c()
			{
			}

			[Token(Token = "0x6002610")]
			[Address(RVA = "0xC95EA4", Offset = "0xC95EA4", VA = "0xC95EA4")]
			internal Type <GetMethodForDelegateType>b__10_0(ParameterInfo p)
			{
				return null;
			}
		}

		[Token(Token = "0x4000B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Delegate theDelegate;

		[Token(Token = "0x1400002F")]
		private event DelegateEventCallback onCallback
		{
			[Token(Token = "0x6001049")]
			[Address(RVA = "0xC9500C", Offset = "0xC9500C", VA = "0xC9500C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986504", Offset = "0x986504")]
			add
			{
			}
			[Token(Token = "0x600104A")]
			[Address(RVA = "0xC950F8", Offset = "0xC950F8", VA = "0xC950F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986514", Offset = "0x986514")]
			remove
			{
			}
		}

		[Token(Token = "0x600104B")]
		[Address(RVA = "0xC951E4", Offset = "0xC951E4", VA = "0xC951E4")]
		public ReflectedDelegateEvent()
		{
		}

		[Token(Token = "0x600104C")]
		[Address(RVA = "0xC951EC", Offset = "0xC951EC", VA = "0xC951EC")]
		public ReflectedDelegateEvent(Type delegateType)
		{
		}

		[Token(Token = "0x600104D")]
		[Address(RVA = "0xC95660", Offset = "0xC95660", VA = "0xC95660")]
		public void Add(DelegateEventCallback callback)
		{
		}

		[Token(Token = "0x600104E")]
		[Address(RVA = "0xC95664", Offset = "0xC95664", VA = "0xC95664")]
		public void Remove(DelegateEventCallback callback)
		{
		}

		[Token(Token = "0x600104F")]
		[Address(RVA = "0xC95668", Offset = "0xC95668", VA = "0xC95668")]
		public Delegate AsDelegate()
		{
			return null;
		}

		[Token(Token = "0x6001050")]
		[Address(RVA = "0xC95290", Offset = "0xC95290", VA = "0xC95290")]
		private MethodInfo GetMethodForDelegateType(Type delegateType)
		{
			return null;
		}

		[Token(Token = "0x6001051")]
		[Address(RVA = "0xC95670", Offset = "0xC95670", VA = "0xC95670")]
		public void Callback0()
		{
		}

		[Token(Token = "0x6001052")]
		public void Callback1<T0>(T0 arg0)
		{
		}

		[Token(Token = "0x6001053")]
		public void Callback2<T0, T1>(T0 arg0, T1 arg1)
		{
		}

		[Token(Token = "0x6001054")]
		public void Callback3<T0, T1, T2>(T0 arg0, T1 arg1, T2 arg2)
		{
		}

		[Token(Token = "0x6001055")]
		public void Callback4<T0, T1, T2, T3>(T0 arg0, T1 arg1, T2 arg2, T3 arg3)
		{
		}

		[Token(Token = "0x6001056")]
		public void Callback5<T0, T1, T2, T3, T4>(T0 arg0, T1 arg1, T2 arg2, T3 arg3, T4 arg4)
		{
		}

		[Token(Token = "0x6001057")]
		public void Callback6<T0, T1, T2, T3, T4, T5>(T0 arg0, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5)
		{
		}

		[Token(Token = "0x6001058")]
		public void Callback7<T0, T1, T2, T3, T4, T5, T6>(T0 arg0, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6)
		{
		}

		[Token(Token = "0x6001059")]
		public void Callback8<T0, T1, T2, T3, T4, T5, T6, T7>(T0 arg0, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7)
		{
		}

		[Token(Token = "0x600105A")]
		public void Callback9<T0, T1, T2, T3, T4, T5, T6, T7, T8>(T0 arg0, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8)
		{
		}

		[Token(Token = "0x600105B")]
		public void Callback10<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9>(T0 arg0, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9)
		{
		}

		[Token(Token = "0x600105C")]
		[Address(RVA = "0xC95E10", Offset = "0xC95E10", VA = "0xC95E10")]
		public static explicit operator Delegate(ReflectedDelegateEvent that)
		{
			return null;
		}
	}
	[Token(Token = "0x20002EB")]
	[SpoofAOT]
	public class ReflectedUnityEvent
	{
		[Token(Token = "0x2000766")]
		public delegate void UnityEventCallback(params object[] args);

		[Serializable]
		[Token(Token = "0x2000767")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9798BC", Offset = "0x9798BC")]
		private sealed class <>c
		{
			[Token(Token = "0x4002054")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002055")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<ParameterInfo, Type> <>9__15_0;

			[Token(Token = "0x6002616")]
			[Address(RVA = "0xC99344", Offset = "0xC99344", VA = "0xC99344")]
			public <>c()
			{
			}

			[Token(Token = "0x6002617")]
			[Address(RVA = "0xC9934C", Offset = "0xC9934C", VA = "0xC9934C")]
			internal Type <InitForEventType>b__15_0(ParameterInfo p)
			{
				return null;
			}
		}

		[Token(Token = "0x4000B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Type _eventType;

		[Token(Token = "0x4000B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private MethodInfo _addListenerMethod;

		[Token(Token = "0x4000B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private MethodInfo _removeListenerMethod;

		[Token(Token = "0x4000B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ParameterInfo[] _parameters;

		[Token(Token = "0x4000B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MethodInfo _callMethod;

		[Token(Token = "0x17000163")]
		public ParameterInfo[] parameters
		{
			[Token(Token = "0x600105F")]
			[Address(RVA = "0xC98304", Offset = "0xC98304", VA = "0xC98304")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000164")]
		public Type eventType
		{
			[Token(Token = "0x6001060")]
			[Address(RVA = "0xC9830C", Offset = "0xC9830C", VA = "0xC9830C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000030")]
		private event UnityEventCallback _callback
		{
			[Token(Token = "0x600105D")]
			[Address(RVA = "0xC9812C", Offset = "0xC9812C", VA = "0xC9812C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986524", Offset = "0x986524")]
			add
			{
			}
			[Token(Token = "0x600105E")]
			[Address(RVA = "0xC98218", Offset = "0xC98218", VA = "0xC98218")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986534", Offset = "0x986534")]
			remove
			{
			}
		}

		[Token(Token = "0x6001061")]
		[Address(RVA = "0xC98314", Offset = "0xC98314", VA = "0xC98314")]
		public ReflectedUnityEvent()
		{
		}

		[Token(Token = "0x6001062")]
		[Address(RVA = "0xC9831C", Offset = "0xC9831C", VA = "0xC9831C")]
		public ReflectedUnityEvent(Type eventType)
		{
		}

		[Token(Token = "0x6001063")]
		[Address(RVA = "0xC9834C", Offset = "0xC9834C", VA = "0xC9834C")]
		public void InitForEventType(Type eventType)
		{
		}

		[Token(Token = "0x6001064")]
		[Address(RVA = "0xC988F0", Offset = "0xC988F0", VA = "0xC988F0")]
		public void StartListening(UnityEventBase targetEvent, UnityEventCallback callback)
		{
		}

		[Token(Token = "0x6001065")]
		[Address(RVA = "0xC98A18", Offset = "0xC98A18", VA = "0xC98A18")]
		public void StopListening(UnityEventBase targetEvent, UnityEventCallback callback)
		{
		}

		[Token(Token = "0x6001066")]
		[Address(RVA = "0xC98B40", Offset = "0xC98B40", VA = "0xC98B40")]
		public void CallbackMethod0()
		{
		}

		[Token(Token = "0x6001067")]
		public void CallbackMethod1<T0>(T0 arg0)
		{
		}

		[Token(Token = "0x6001068")]
		public void CallbackMethod2<T0, T1>(T0 arg0, T1 arg1)
		{
		}

		[Token(Token = "0x6001069")]
		public void CallbackMethod3<T0, T1, T2>(T0 arg0, T1 arg1, T2 arg2)
		{
		}

		[Token(Token = "0x600106A")]
		public void CallbackMethod4<T0, T1, T2, T3>(T0 arg0, T1 arg1, T2 arg2, T3 arg3)
		{
		}
	}
	[Token(Token = "0x20002EC")]
	public abstract class SharpEvent
	{
		[Token(Token = "0x4000B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97F9F4", Offset = "0x97F9F4")]
		private object <instance>k__BackingField;

		[Token(Token = "0x4000B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97FA04", Offset = "0x97FA04")]
		private System.Reflection.EventInfo <eventInfo>k__BackingField;

		[Token(Token = "0x17000165")]
		public object instance
		{
			[Token(Token = "0x600106B")]
			[Address(RVA = "0xC99E44", Offset = "0xC99E44", VA = "0xC99E44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986544", Offset = "0x986544")]
			get
			{
				return null;
			}
			[Token(Token = "0x600106C")]
			[Address(RVA = "0xC99E4C", Offset = "0xC99E4C", VA = "0xC99E4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986554", Offset = "0x986554")]
			private set
			{
			}
		}

		[Token(Token = "0x17000166")]
		public System.Reflection.EventInfo eventInfo
		{
			[Token(Token = "0x600106D")]
			[Address(RVA = "0xC99E54", Offset = "0xC99E54", VA = "0xC99E54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986564", Offset = "0x986564")]
			get
			{
				return null;
			}
			[Token(Token = "0x600106E")]
			[Address(RVA = "0xC99E5C", Offset = "0xC99E5C", VA = "0xC99E5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986574", Offset = "0x986574")]
			private set
			{
			}
		}

		[Token(Token = "0x600106F")]
		[Address(RVA = "0xC99E64", Offset = "0xC99E64", VA = "0xC99E64")]
		public static SharpEvent Create(System.Reflection.EventInfo eventInfo)
		{
			return null;
		}

		[Token(Token = "0x6001070")]
		[Address(RVA = "0xC9A05C", Offset = "0xC9A05C", VA = "0xC9A05C")]
		public void SetInstance(object instance)
		{
		}

		[Token(Token = "0x6001071")]
		[Address(RVA = "0xC9A064", Offset = "0xC9A064", VA = "0xC9A064")]
		public void StartListening(ReflectedDelegateEvent reflectedEvent, ReflectedDelegateEvent.DelegateEventCallback callback)
		{
		}

		[Token(Token = "0x6001072")]
		[Address(RVA = "0xC9A0DC", Offset = "0xC9A0DC", VA = "0xC9A0DC")]
		public void StopListening(ReflectedDelegateEvent reflectedEvent, ReflectedDelegateEvent.DelegateEventCallback callback)
		{
		}

		[Token(Token = "0x6001073")]
		[Address(RVA = "0xC9A154", Offset = "0xC9A154", VA = "0xC9A154")]
		protected SharpEvent()
		{
		}
	}
	[Token(Token = "0x20002ED")]
	public class SharpEvent<T> : SharpEvent
	{
		[Token(Token = "0x6001074")]
		public SharpEvent()
		{
		}
	}
	[Token(Token = "0x20002EE")]
	public abstract class BaseReflectedExtractorNode
	{
		[Token(Token = "0x4000B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97FA24", Offset = "0x97FA24")]
		private ParametresDef <Params>k__BackingField;

		[Token(Token = "0x4000B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97FA34", Offset = "0x97FA34")]
		private Type <TargetType>k__BackingField;

		[Token(Token = "0x17000167")]
		protected ParametresDef Params
		{
			[Token(Token = "0x6001078")]
			[Address(RVA = "0xDF8840", Offset = "0xDF8840", VA = "0xDF8840")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9865A4", Offset = "0x9865A4")]
			get
			{
				return default(ParametresDef);
			}
			[Token(Token = "0x6001079")]
			[Address(RVA = "0xDF8850", Offset = "0xDF8850", VA = "0xDF8850")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9865B4", Offset = "0x9865B4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000168")]
		protected Type TargetType
		{
			[Token(Token = "0x600107A")]
			[Address(RVA = "0xDF886C", Offset = "0xDF886C", VA = "0xDF886C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9865C4", Offset = "0x9865C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600107B")]
			[Address(RVA = "0xDF8874", Offset = "0xDF8874", VA = "0xDF8874")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9865D4", Offset = "0x9865D4")]
			private set
			{
			}
		}

		[Token(Token = "0x14000031")]
		protected static event Func<Type, bool, MemberInfo[], BaseReflectedExtractorNode> OnGetAotExtractorNode
		{
			[Token(Token = "0x6001075")]
			[Address(RVA = "0xDF84B0", Offset = "0xDF84B0", VA = "0xDF84B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986584", Offset = "0x986584")]
			add
			{
			}
			[Token(Token = "0x6001076")]
			[Address(RVA = "0xDF85AC", Offset = "0xDF85AC", VA = "0xDF85AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986594", Offset = "0x986594")]
			remove
			{
			}
		}

		[Token(Token = "0x6001077")]
		[Address(RVA = "0xDF86A8", Offset = "0xDF86A8", VA = "0xDF86A8")]
		public static BaseReflectedExtractorNode GetExtractorNode(Type targetType, bool isStatic, MemberInfo[] infos)
		{
			return null;
		}

		[Token(Token = "0x600107C")]
		[Address(RVA = "0xDF8804", Offset = "0xDF8804", VA = "0xDF8804")]
		protected bool Init(ParametresDef paramsDef, Type targetType)
		{
			return default(bool);
		}

		[Token(Token = "0x600107D")]
		protected abstract bool InitInternal();

		[Token(Token = "0x600107E")]
		public abstract void RegisterPorts(FlowNode node);

		[Token(Token = "0x600107F")]
		[Address(RVA = "0xDF887C", Offset = "0xDF887C", VA = "0xDF887C")]
		protected BaseReflectedExtractorNode()
		{
		}
	}
	[Token(Token = "0x20002EF")]
	public class PureReflectedExtractorNode : BaseReflectedExtractorNode
	{
		[Token(Token = "0x2000768")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9798CC", Offset = "0x9798CC")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4002056")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PureReflectedExtractorNode <>4__this;

			[Token(Token = "0x4002057")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FieldInfo info;

			[Token(Token = "0x6002618")]
			[Address(RVA = "0xC9226C", Offset = "0xC9226C", VA = "0xC9226C")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6002619")]
			[Address(RVA = "0xC92620", Offset = "0xC92620", VA = "0xC92620")]
			internal object <GetPortHandler>b__0()
			{
				return null;
			}
		}

		[Token(Token = "0x2000769")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9798DC", Offset = "0x9798DC")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4002058")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PureReflectedExtractorNode <>4__this;

			[Token(Token = "0x4002059")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MethodInfo info;

			[Token(Token = "0x600261A")]
			[Address(RVA = "0xC92368", Offset = "0xC92368", VA = "0xC92368")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x600261B")]
			[Address(RVA = "0xC926C0", Offset = "0xC926C0", VA = "0xC926C0")]
			internal object <GetPortHandler>b__0()
			{
				return null;
			}
		}

		[Token(Token = "0x4000B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly object[] EmptyParams;

		[Token(Token = "0x4000B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private ValueInput instanceInput;

		[Token(Token = "0x6001080")]
		[Address(RVA = "0xC92178", Offset = "0xC92178", VA = "0xC92178", Slot = "4")]
		protected override bool InitInternal()
		{
			return default(bool);
		}

		[Token(Token = "0x6001081")]
		[Address(RVA = "0xC92188", Offset = "0xC92188", VA = "0xC92188")]
		private ValueHandlerObject GetPortHandler(FieldInfo info)
		{
			return null;
		}

		[Token(Token = "0x6001082")]
		[Address(RVA = "0xC92284", Offset = "0xC92284", VA = "0xC92284")]
		private ValueHandlerObject GetPortHandler(MethodInfo info)
		{
			return null;
		}

		[Token(Token = "0x6001083")]
		[Address(RVA = "0xC92370", Offset = "0xC92370", VA = "0xC92370", Slot = "5")]
		public override void RegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6001084")]
		[Address(RVA = "0xC925B4", Offset = "0xC925B4", VA = "0xC925B4")]
		public PureReflectedExtractorNode()
		{
		}
	}
	[Token(Token = "0x20002F0")]
	public abstract class BaseReflectedFieldNode
	{
		[Token(Token = "0x4000B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected FieldInfo fieldInfo;

		[Token(Token = "0x4000B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ParamDef instanceDef;

		[Token(Token = "0x4000B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected ParamDef resultDef;

		[Token(Token = "0x14000032")]
		protected static event Func<FieldInfo, BaseReflectedFieldNode> OnGetAotReflectedFieldNode
		{
			[Token(Token = "0x6001086")]
			[Address(RVA = "0xDF8884", Offset = "0xDF8884", VA = "0xDF8884")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9865E4", Offset = "0x9865E4")]
			add
			{
			}
			[Token(Token = "0x6001087")]
			[Address(RVA = "0xDF8980", Offset = "0xDF8980", VA = "0xDF8980")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9865F4", Offset = "0x9865F4")]
			remove
			{
			}
		}

		[Token(Token = "0x6001088")]
		[Address(RVA = "0xDF8A7C", Offset = "0xDF8A7C", VA = "0xDF8A7C")]
		public static BaseReflectedFieldNode GetFieldNode(FieldInfo targetField)
		{
			return null;
		}

		[Token(Token = "0x6001089")]
		[Address(RVA = "0xDF8BB0", Offset = "0xDF8BB0", VA = "0xDF8BB0")]
		protected bool Init(FieldInfo field, ParametresDef parametres)
		{
			return default(bool);
		}

		[Token(Token = "0x600108A")]
		protected abstract bool InitInternal(FieldInfo field);

		[Token(Token = "0x600108B")]
		public abstract void RegisterPorts(FlowNode node, ReflectedFieldNodeWrapper.AccessMode accessMode);

		[Token(Token = "0x600108C")]
		[Address(RVA = "0xDF8D04", Offset = "0xDF8D04", VA = "0xDF8D04")]
		protected BaseReflectedFieldNode()
		{
		}
	}
	[Token(Token = "0x20002F1")]
	public class PureReflectedFieldNode : BaseReflectedFieldNode
	{
		[Token(Token = "0x200076A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9798EC", Offset = "0x9798EC")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x400205A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FlowOutput output;

			[Token(Token = "0x400205B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public PureReflectedFieldNode <>4__this;

			[Token(Token = "0x600261C")]
			[Address(RVA = "0xC92BD4", Offset = "0xC92BD4", VA = "0xC92BD4")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x600261D")]
			[Address(RVA = "0xC92C10", Offset = "0xC92C10", VA = "0xC92C10")]
			internal void <RegisterPorts>b__2(Flow flow)
			{
			}
		}

		[Token(Token = "0x4000B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private ValueInput instanceInput;

		[Token(Token = "0x4000B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private ValueInput valueInput;

		[Token(Token = "0x4000B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private object instanceObject;

		[Token(Token = "0x4000B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private object valueObject;

		[Token(Token = "0x600108D")]
		[Address(RVA = "0xC927A8", Offset = "0xC927A8", VA = "0xC927A8", Slot = "4")]
		protected override bool InitInternal(FieldInfo method)
		{
			return default(bool);
		}

		[Token(Token = "0x600108E")]
		[Address(RVA = "0xC927BC", Offset = "0xC927BC", VA = "0xC927BC")]
		private void SetValue()
		{
		}

		[Token(Token = "0x600108F")]
		[Address(RVA = "0xC92844", Offset = "0xC92844", VA = "0xC92844")]
		private void GetValue()
		{
		}

		[Token(Token = "0x6001090")]
		[Address(RVA = "0xC928B8", Offset = "0xC928B8", VA = "0xC928B8", Slot = "5")]
		public override void RegisterPorts(FlowNode node, ReflectedFieldNodeWrapper.AccessMode accessMode)
		{
		}

		[Token(Token = "0x6001091")]
		[Address(RVA = "0xC92BDC", Offset = "0xC92BDC", VA = "0xC92BDC")]
		public PureReflectedFieldNode()
		{
		}

		[Token(Token = "0x6001092")]
		[Address(RVA = "0xC92BE4", Offset = "0xC92BE4", VA = "0xC92BE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986604", Offset = "0x986604")]
		private object <RegisterPorts>b__7_0()
		{
			return null;
		}

		[Token(Token = "0x6001093")]
		[Address(RVA = "0xC92BEC", Offset = "0xC92BEC", VA = "0xC92BEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986614", Offset = "0x986614")]
		private object <RegisterPorts>b__7_1()
		{
			return null;
		}
	}
	[Token(Token = "0x20002F2")]
	public abstract class BaseReflectedMethodNode
	{
		[Token(Token = "0x4000B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected MethodInfo methodInfo;

		[Token(Token = "0x4000B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected List<ParamDef> paramDefinitions;

		[Token(Token = "0x4000B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ParamDef instanceDef;

		[Token(Token = "0x4000B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected ParamDef resultDef;

		[Token(Token = "0x4000B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected ReflectedMethodRegistrationOptions options;

		[Token(Token = "0x14000033")]
		protected static event Func<MethodInfo, BaseReflectedMethodNode> OnGetAotReflectedMethodNode
		{
			[Token(Token = "0x6001094")]
			[Address(RVA = "0xDF8D0C", Offset = "0xDF8D0C", VA = "0xDF8D0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986624", Offset = "0x986624")]
			add
			{
			}
			[Token(Token = "0x6001095")]
			[Address(RVA = "0xDF8E08", Offset = "0xDF8E08", VA = "0xDF8E08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986634", Offset = "0x986634")]
			remove
			{
			}
		}

		[Token(Token = "0x6001096")]
		[Address(RVA = "0xDF8F04", Offset = "0xDF8F04", VA = "0xDF8F04")]
		public static BaseReflectedMethodNode GetMethodNode(MethodInfo targetMethod, ReflectedMethodRegistrationOptions options)
		{
			return null;
		}

		[Token(Token = "0x6001097")]
		[Address(RVA = "0xDF9070", Offset = "0xDF9070", VA = "0xDF9070")]
		protected bool Init(MethodInfo method, ParametresDef parametres)
		{
			return default(bool);
		}

		[Token(Token = "0x6001098")]
		protected abstract bool InitInternal(MethodInfo method);

		[Token(Token = "0x6001099")]
		public abstract void RegisterPorts(FlowNode node, ReflectedMethodRegistrationOptions options);

		[Token(Token = "0x600109A")]
		[Address(RVA = "0xDF91E4", Offset = "0xDF91E4", VA = "0xDF91E4")]
		protected BaseReflectedMethodNode()
		{
		}
	}
	[Token(Token = "0x20002F3")]
	public class PureReflectedMethodNode : BaseReflectedMethodNode
	{
		[Token(Token = "0x200076B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9798FC", Offset = "0x9798FC")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x400205C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool callable;

			[Token(Token = "0x400205D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public PureReflectedMethodNode <>4__this;

			[Token(Token = "0x400205E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int idx;

			[Token(Token = "0x600261E")]
			[Address(RVA = "0xC93210", Offset = "0xC93210", VA = "0xC93210")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x600261F")]
			[Address(RVA = "0xC938F8", Offset = "0xC938F8", VA = "0xC938F8")]
			internal object <RegisterOutput>b__0()
			{
				return null;
			}
		}

		[Token(Token = "0x200076C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97990C", Offset = "0x97990C")]
		private sealed class <>c__DisplayClass12_0
		{
			[Token(Token = "0x400205F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PureReflectedMethodNode <>4__this;

			[Token(Token = "0x4002060")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ReflectedMethodRegistrationOptions options;

			[Token(Token = "0x6002620")]
			[Address(RVA = "0xC938D8", Offset = "0xC938D8", VA = "0xC938D8")]
			public <>c__DisplayClass12_0()
			{
			}

			[Token(Token = "0x6002621")]
			[Address(RVA = "0xC9397C", Offset = "0xC9397C", VA = "0xC9397C")]
			internal object <RegisterPorts>b__0()
			{
				return null;
			}

			[Token(Token = "0x6002622")]
			[Address(RVA = "0xC939A8", Offset = "0xC939A8", VA = "0xC939A8")]
			internal object <RegisterPorts>b__1()
			{
				return null;
			}
		}

		[Token(Token = "0x200076D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97991C", Offset = "0x97991C")]
		private sealed class <>c__DisplayClass12_1
		{
			[Token(Token = "0x4002061")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FlowOutput output;

			[Token(Token = "0x4002062")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass12_0 CS$<>8__locals1;

			[Token(Token = "0x6002623")]
			[Address(RVA = "0xC938E0", Offset = "0xC938E0", VA = "0xC938E0")]
			public <>c__DisplayClass12_1()
			{
			}

			[Token(Token = "0x6002624")]
			[Address(RVA = "0xC939F8", Offset = "0xC939F8", VA = "0xC939F8")]
			internal void <RegisterPorts>b__2(Flow flow)
			{
			}
		}

		[Token(Token = "0x4000B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private ValueInput instanceInput;

		[Token(Token = "0x4000B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private object instanceObject;

		[Token(Token = "0x4000B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private object resultObject;

		[Token(Token = "0x4000B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private object[] callParams;

		[Token(Token = "0x4000B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private ValueInput[] inputs;

		[Token(Token = "0x4000B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private ValueInput[] arrayInputs;

		[Token(Token = "0x4000B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private int arrayParamsInput;

		[Token(Token = "0x4000B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Type arrayParamsType;

		[Token(Token = "0x600109B")]
		[Address(RVA = "0xC92CA0", Offset = "0xC92CA0", VA = "0xC92CA0", Slot = "4")]
		protected override bool InitInternal(MethodInfo method)
		{
			return default(bool);
		}

		[Token(Token = "0x600109C")]
		[Address(RVA = "0xC92E24", Offset = "0xC92E24", VA = "0xC92E24")]
		private void Call()
		{
		}

		[Token(Token = "0x600109D")]
		[Address(RVA = "0xC930F8", Offset = "0xC930F8", VA = "0xC930F8")]
		private void RegisterOutput(FlowNode node, bool callable, ParamDef def, int idx)
		{
		}

		[Token(Token = "0x600109E")]
		[Address(RVA = "0xC93218", Offset = "0xC93218", VA = "0xC93218")]
		private void RegisterInput(FlowNode node, ParamDef def, int idx)
		{
		}

		[Token(Token = "0x600109F")]
		[Address(RVA = "0xC93458", Offset = "0xC93458", VA = "0xC93458", Slot = "5")]
		public override void RegisterPorts(FlowNode node, ReflectedMethodRegistrationOptions options)
		{
		}

		[Token(Token = "0x60010A0")]
		[Address(RVA = "0xC938E8", Offset = "0xC938E8", VA = "0xC938E8")]
		public PureReflectedMethodNode()
		{
		}
	}
	[Token(Token = "0x20002F4")]
	public class ReflectedConstructorNodeWrapper : ReflectedMethodBaseNodeWrapper
	{
		[Token(Token = "0x4000B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private SerializedConstructorInfo _constructor;

		[Token(Token = "0x4000B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97FA74", Offset = "0x97FA74")]
		private BaseReflectedConstructorNode <reflectedConstructorNode>k__BackingField;

		[Token(Token = "0x17000169")]
		protected override SerializedMethodBaseInfo serializedMethodBase
		{
			[Token(Token = "0x60010A1")]
			[Address(RVA = "0xC94AC4", Offset = "0xC94AC4", VA = "0xC94AC4", Slot = "40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016A")]
		private BaseReflectedConstructorNode reflectedConstructorNode
		{
			[Token(Token = "0x60010A2")]
			[Address(RVA = "0xC94ACC", Offset = "0xC94ACC", VA = "0xC94ACC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986644", Offset = "0x986644")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010A3")]
			[Address(RVA = "0xC94AD4", Offset = "0xC94AD4", VA = "0xC94AD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986654", Offset = "0x986654")]
			set
			{
			}
		}

		[Token(Token = "0x1700016B")]
		private ConstructorInfo constructor
		{
			[Token(Token = "0x60010A4")]
			[Address(RVA = "0xC94ADC", Offset = "0xC94ADC", VA = "0xC94ADC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016C")]
		public override string name
		{
			[Token(Token = "0x60010A5")]
			[Address(RVA = "0xC94AF0", Offset = "0xC94AF0", VA = "0xC94AF0", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010A6")]
		[Address(RVA = "0xC94C38", Offset = "0xC94C38", VA = "0xC94C38", Slot = "41")]
		public override void SetMethodBase(MethodBase newMethod, [Optional] object instance)
		{
		}

		[Token(Token = "0x60010A7")]
		[Address(RVA = "0xC94CC8", Offset = "0xC94CC8", VA = "0xC94CC8")]
		private void SetConstructor(ConstructorInfo newConstructor)
		{
		}

		[Token(Token = "0x60010A8")]
		[Address(RVA = "0xC94EF4", Offset = "0xC94EF4", VA = "0xC94EF4", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x60010A9")]
		[Address(RVA = "0xC94FFC", Offset = "0xC94FFC", VA = "0xC94FFC")]
		public ReflectedConstructorNodeWrapper()
		{
		}
	}
	[Token(Token = "0x20002F5")]
	[DoNotList]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x976424", Offset = "0x976424")]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0x976424", Offset = "0x976424")]
	public class ReflectedExtractorNodeWrapper<T> : FlowNode, IReflectedWrapper
	{
		[Serializable]
		[Token(Token = "0x200076E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97992C", Offset = "0x97992C")]
		private sealed class <>c
		{
			[Token(Token = "0x4002063")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002064")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<string, bool> <>9__11_0;

			[Token(Token = "0x4002065")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<string, int> <>9__11_1;

			[Token(Token = "0x6002626")]
			public <>c()
			{
			}

			[Token(Token = "0x6002627")]
			internal bool <ReValidateList>b__11_0(string x)
			{
				return default(bool);
			}

			[Token(Token = "0x6002628")]
			internal int <ReValidateList>b__11_1(string x)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4000B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<string, MemberInfo> _memberInfos;

		[Token(Token = "0x4000B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<string> _instanceMemberNames;

		[Token(Token = "0x4000B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<string> _staticMemberNames;

		[Token(Token = "0x4000B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private List<string> _selectedInstanceMembers;

		[NonSerialized]
		[Token(Token = "0x4000B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private BaseReflectedExtractorNode extractorNode;

		[Token(Token = "0x1700016D")]
		public override string name
		{
			[Token(Token = "0x60010AD")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010AA")]
		private MemberInfo NodeCanvas.Framework.IReflectedWrapper.GetMemberInfo()
		{
			return null;
		}

		[Token(Token = "0x60010AB")]
		public Type GetRuntimeIconType()
		{
			return null;
		}

		[Token(Token = "0x60010AC")]
		private static void PopulateInfos()
		{
		}

		[Token(Token = "0x60010AE")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x60010AF")]
		private void ReValidateList()
		{
		}

		[Token(Token = "0x60010B0")]
		public ReflectedExtractorNodeWrapper()
		{
		}
	}
	[Token(Token = "0x20002F6")]
	[DoNotList]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0x9764AC", Offset = "0x9764AC")]
	public class ReflectedFieldNodeWrapper : FlowNode, IReflectedWrapper
	{
		[Token(Token = "0x200076F")]
		public enum AccessMode
		{
			[Token(Token = "0x4002067")]
			GetField,
			[Token(Token = "0x4002068")]
			SetField
		}

		[Token(Token = "0x4000B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private string fieldName;

		[Token(Token = "0x4000B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Type targetType;

		[Token(Token = "0x4000B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AccessMode accessMode;

		[Token(Token = "0x4000B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97FAC4", Offset = "0x97FAC4")]
		private BaseReflectedFieldNode <reflectedFieldNode>k__BackingField;

		[Token(Token = "0x4000B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private FieldInfo _field;

		[Token(Token = "0x1700016E")]
		private BaseReflectedFieldNode reflectedFieldNode
		{
			[Token(Token = "0x60010B3")]
			[Address(RVA = "0xC96044", Offset = "0xC96044", VA = "0xC96044")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986664", Offset = "0x986664")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010B4")]
			[Address(RVA = "0xC9604C", Offset = "0xC9604C", VA = "0xC9604C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986674", Offset = "0x986674")]
			set
			{
			}
		}

		[Token(Token = "0x1700016F")]
		private FieldInfo field
		{
			[Token(Token = "0x60010B5")]
			[Address(RVA = "0xC95F1C", Offset = "0xC95F1C", VA = "0xC95F1C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000170")]
		public override string name
		{
			[Token(Token = "0x60010B6")]
			[Address(RVA = "0xC96054", Offset = "0xC96054", VA = "0xC96054", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010B1")]
		[Address(RVA = "0xC95F18", Offset = "0xC95F18", VA = "0xC95F18", Slot = "39")]
		private MemberInfo NodeCanvas.Framework.IReflectedWrapper.GetMemberInfo()
		{
			return null;
		}

		[Token(Token = "0x60010B2")]
		[Address(RVA = "0xC95FE4", Offset = "0xC95FE4", VA = "0xC95FE4")]
		private Type GetRuntimeIconType()
		{
			return null;
		}

		[Token(Token = "0x60010B7")]
		[Address(RVA = "0xC9636C", Offset = "0xC9636C", VA = "0xC9636C")]
		public void SetField(FieldInfo newField, AccessMode mode, [Optional] object instance)
		{
		}

		[Token(Token = "0x60010B8")]
		[Address(RVA = "0xC96520", Offset = "0xC96520", VA = "0xC96520", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x60010B9")]
		[Address(RVA = "0xC96584", Offset = "0xC96584", VA = "0xC96584")]
		public ReflectedFieldNodeWrapper()
		{
		}
	}
	[Token(Token = "0x20002F7")]
	[DoNotList]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0x976510", Offset = "0x976510")]
	public abstract class ReflectedMethodBaseNodeWrapper : FlowNode, IReflectedWrapper
	{
		[Token(Token = "0x4000B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		protected bool _callable;

		[Token(Token = "0x4000B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		[SerializeField]
		protected bool _exposeParams;

		[Token(Token = "0x4000B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		protected int _exposedParamsCount;

		[Token(Token = "0x17000171")]
		protected abstract SerializedMethodBaseInfo serializedMethodBase
		{
			[Token(Token = "0x60010BC")]
			get;
		}

		[Token(Token = "0x17000172")]
		private MethodBase method
		{
			[Token(Token = "0x60010BD")]
			[Address(RVA = "0xC96590", Offset = "0xC96590", VA = "0xC96590")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000173")]
		public bool callable
		{
			[Token(Token = "0x60010BE")]
			[Address(RVA = "0xC94FE4", Offset = "0xC94FE4", VA = "0xC94FE4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010BF")]
			[Address(RVA = "0xC96658", Offset = "0xC96658", VA = "0xC96658")]
			set
			{
			}
		}

		[Token(Token = "0x17000174")]
		public bool exposeParams
		{
			[Token(Token = "0x60010C0")]
			[Address(RVA = "0xC94FEC", Offset = "0xC94FEC", VA = "0xC94FEC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010C1")]
			[Address(RVA = "0xC96680", Offset = "0xC96680", VA = "0xC96680")]
			set
			{
			}
		}

		[Token(Token = "0x17000175")]
		public int exposedParamsCount
		{
			[Token(Token = "0x60010C2")]
			[Address(RVA = "0xC94FF4", Offset = "0xC94FF4", VA = "0xC94FF4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60010C3")]
			[Address(RVA = "0xC96738", Offset = "0xC96738", VA = "0xC96738")]
			set
			{
			}
		}

		[Token(Token = "0x60010BA")]
		[Address(RVA = "0xC9658C", Offset = "0xC9658C", VA = "0xC9658C", Slot = "39")]
		private MemberInfo NodeCanvas.Framework.IReflectedWrapper.GetMemberInfo()
		{
			return null;
		}

		[Token(Token = "0x60010BB")]
		[Address(RVA = "0xC965F8", Offset = "0xC965F8", VA = "0xC965F8")]
		public Type GetRuntimeIconType()
		{
			return null;
		}

		[Token(Token = "0x60010C4")]
		public abstract void SetMethodBase(MethodBase newMethod, [Optional] object instance);

		[Token(Token = "0x60010C5")]
		[Address(RVA = "0xC94D4C", Offset = "0xC94D4C", VA = "0xC94D4C")]
		public void SetDefaultParameterValues(MethodBase newMethod)
		{
		}

		[Token(Token = "0x60010C6")]
		[Address(RVA = "0xC96760", Offset = "0xC96760", VA = "0xC96760")]
		public void SetDropInstanceReference(MethodBase newMethod, [Optional] object instance)
		{
		}

		[Token(Token = "0x60010C7")]
		[Address(RVA = "0xC95004", Offset = "0xC95004", VA = "0xC95004")]
		protected ReflectedMethodBaseNodeWrapper()
		{
		}
	}
	[Token(Token = "0x20002F8")]
	public class ReflectedMethodNodeWrapper : ReflectedMethodBaseNodeWrapper
	{
		[Token(Token = "0x4000B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private SerializedMethodInfo _method;

		[Token(Token = "0x4000B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97FB14", Offset = "0x97FB14")]
		private BaseReflectedMethodNode <reflectedMethodNode>k__BackingField;

		[Token(Token = "0x17000176")]
		protected override SerializedMethodBaseInfo serializedMethodBase
		{
			[Token(Token = "0x60010C8")]
			[Address(RVA = "0xC9688C", Offset = "0xC9688C", VA = "0xC9688C", Slot = "40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000177")]
		private BaseReflectedMethodNode reflectedMethodNode
		{
			[Token(Token = "0x60010C9")]
			[Address(RVA = "0xC96894", Offset = "0xC96894", VA = "0xC96894")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986684", Offset = "0x986684")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010CA")]
			[Address(RVA = "0xC9689C", Offset = "0xC9689C", VA = "0xC9689C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986694", Offset = "0x986694")]
			set
			{
			}
		}

		[Token(Token = "0x17000178")]
		private MethodInfo method
		{
			[Token(Token = "0x60010CB")]
			[Address(RVA = "0xC968A4", Offset = "0xC968A4", VA = "0xC968A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000179")]
		public override string name
		{
			[Token(Token = "0x60010CC")]
			[Address(RVA = "0xC968B8", Offset = "0xC968B8", VA = "0xC968B8", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010CD")]
		[Address(RVA = "0xC96C54", Offset = "0xC96C54", VA = "0xC96C54", Slot = "41")]
		public override void SetMethodBase(MethodBase newMethod, [Optional] object instance)
		{
		}

		[Token(Token = "0x60010CE")]
		[Address(RVA = "0xC96CEC", Offset = "0xC96CEC", VA = "0xC96CEC")]
		private void SetMethod(MethodInfo newMethod, [Optional] object instance)
		{
		}

		[Token(Token = "0x60010CF")]
		[Address(RVA = "0xC96F00", Offset = "0xC96F00", VA = "0xC96F00", Slot = "35")]
		public override void OnPortConnected(Port port, Port otherPort)
		{
		}

		[Token(Token = "0x60010D0")]
		[Address(RVA = "0xC97094", Offset = "0xC97094", VA = "0xC97094", Slot = "38")]
		public override Type GetNodeWildDefinitionType()
		{
			return null;
		}

		[Token(Token = "0x60010D1")]
		[Address(RVA = "0xC97118", Offset = "0xC97118", VA = "0xC97118", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x60010D2")]
		[Address(RVA = "0xC971B4", Offset = "0xC971B4", VA = "0xC971B4")]
		public ReflectedMethodNodeWrapper()
		{
		}
	}
	[Token(Token = "0x20002F9")]
	public struct ReflectedMethodRegistrationOptions
	{
		[Token(Token = "0x4000B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool callable;

		[Token(Token = "0x4000B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public bool exposeParams;

		[Token(Token = "0x4000B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int exposedParamsCount;
	}
	[Token(Token = "0x20002FA")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x976574", Offset = "0x976574")]
	[AttributeAttribute(Name = "ContextDefinedInputsAttribute", RVA = "0x976574", Offset = "0x976574")]
	[AttributeAttribute(Name = "ContextDefinedOutputsAttribute", RVA = "0x976574", Offset = "0x976574")]
	public class CreateCollection<T> : VariableNode
	{
		[Token(Token = "0x2000770")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97993C", Offset = "0x97993C")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4002069")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public List<ValueInput<T>> ins;

			[Token(Token = "0x6002629")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x600262A")]
			internal T[] <RegisterPorts>b__0()
			{
				return null;
			}
		}

		[Serializable]
		[Token(Token = "0x2000771")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97994C", Offset = "0x97994C")]
		private sealed class <>c
		{
			[Token(Token = "0x400206A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400206B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<ValueInput<T>, T> <>9__2_1;

			[Token(Token = "0x600262C")]
			public <>c()
			{
			}

			[Token(Token = "0x600262D")]
			internal T <RegisterPorts>b__2_1(ValueInput<T> p)
			{
				return (T)null;
			}
		}

		[Token(Token = "0x4000B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[ExposeField]
		[GatherPortsCallback]
		[AttributeAttribute(Name = "MinValueAttribute", RVA = "0x97FB24", Offset = "0x97FB24")]
		[DelayedField]
		private int _portCount;

		[Token(Token = "0x60010D3")]
		public override void SetVariable(object o)
		{
		}

		[Token(Token = "0x60010D4")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x60010D5")]
		public CreateCollection()
		{
		}
	}
	[Token(Token = "0x20002FB")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x97665C", Offset = "0x97665C")]
	[AttributeAttribute(Name = "ContextDefinedInputsAttribute", RVA = "0x97665C", Offset = "0x97665C")]
	public class CreateDictionary<T> : VariableNode
	{
		[Token(Token = "0x2000772")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97995C", Offset = "0x97995C")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x400206C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public List<ValueInput<string>> keys;

			[Token(Token = "0x400206D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public List<ValueInput<T>> values;

			[Token(Token = "0x600262E")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x600262F")]
			internal IDictionary<string, T> <RegisterPorts>b__0()
			{
				return null;
			}
		}

		[Token(Token = "0x2000773")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97996C", Offset = "0x97996C")]
		private sealed class <>c__DisplayClass2_1
		{
			[Token(Token = "0x400206E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public List<T> v;

			[Token(Token = "0x400206F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public List<string> k;

			[Token(Token = "0x6002630")]
			public <>c__DisplayClass2_1()
			{
			}

			[Token(Token = "0x6002631")]
			internal T <RegisterPorts>b__4(string x)
			{
				return (T)null;
			}
		}

		[Serializable]
		[Token(Token = "0x2000774")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97997C", Offset = "0x97997C")]
		private sealed class <>c
		{
			[Token(Token = "0x4002070")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002071")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<ValueInput<string>, string> <>9__2_1;

			[Token(Token = "0x4002072")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<ValueInput<T>, T> <>9__2_2;

			[Token(Token = "0x4002073")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<string, string> <>9__2_3;

			[Token(Token = "0x6002633")]
			public <>c()
			{
			}

			[Token(Token = "0x6002634")]
			internal string <RegisterPorts>b__2_1(ValueInput<string> x)
			{
				return null;
			}

			[Token(Token = "0x6002635")]
			internal T <RegisterPorts>b__2_2(ValueInput<T> x)
			{
				return (T)null;
			}

			[Token(Token = "0x6002636")]
			internal string <RegisterPorts>b__2_3(string x)
			{
				return null;
			}
		}

		[Token(Token = "0x4000B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[ExposeField]
		[GatherPortsCallback]
		[AttributeAttribute(Name = "MinValueAttribute", RVA = "0x97FB90", Offset = "0x97FB90")]
		[DelayedField]
		private int _portCount;

		[Token(Token = "0x60010D6")]
		public override void SetVariable(object o)
		{
		}

		[Token(Token = "0x60010D7")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x60010D8")]
		public CreateDictionary()
		{
		}
	}
	[Token(Token = "0x20002FC")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x976714", Offset = "0x976714")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x976714", Offset = "0x976714")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x976714", Offset = "0x976714")]
	[AttributeAttribute(Name = "ContextDefinedOutputsAttribute", RVA = "0x976714", Offset = "0x976714")]
	public class GetOtherVariable<T> : VariableNode
	{
		[Token(Token = "0x2000775")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97998C", Offset = "0x97998C")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4002074")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<Blackboard> bb;

			[Token(Token = "0x4002075")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<string> varName;

			[Token(Token = "0x6002637")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6002638")]
			internal T <RegisterPorts>b__0()
			{
				return (T)null;
			}
		}

		[Token(Token = "0x1700017A")]
		public override string name
		{
			[Token(Token = "0x60010D9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010DA")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x60010DB")]
		public override void SetVariable(object o)
		{
		}

		[Token(Token = "0x60010DC")]
		public GetOtherVariable()
		{
		}
	}
	[Token(Token = "0x20002FD")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x976804", Offset = "0x976804")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x976804", Offset = "0x976804")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x976804", Offset = "0x976804")]
	[AttributeAttribute(Name = "ContextDefinedOutputsAttribute", RVA = "0x976804", Offset = "0x976804")]
	public class GetVariable<T> : VariableNode
	{
		[Token(Token = "0x4000B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T> value;

		[Token(Token = "0x60010DD")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x60010DE")]
		public void SetTargetVariableName(string name)
		{
		}

		[Token(Token = "0x60010DF")]
		public override void SetVariable(object o)
		{
		}

		[Token(Token = "0x60010E0")]
		public GetVariable()
		{
		}

		[Token(Token = "0x60010E1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9866A4", Offset = "0x9866A4")]
		private T <RegisterPorts>b__1_0()
		{
			return (T)null;
		}
	}
	[Token(Token = "0x20002FE")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x9768F4", Offset = "0x9768F4")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9768F4", Offset = "0x9768F4")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x9768F4", Offset = "0x9768F4")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0x9768F4", Offset = "0x9768F4")]
	[AttributeAttribute(Name = "ContextDefinedOutputsAttribute", RVA = "0x9768F4", Offset = "0x9768F4")]
	public class GoToLabel : FlowControlNode, IEditorMenuCallbackReceiver
	{
		[Token(Token = "0x4000B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97FBFC", Offset = "0x97FBFC")]
		[DelayedField]
		public string identifier;

		[Token(Token = "0x4000B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97FC48", Offset = "0x97FC48")]
		private FlowOutput <port>k__BackingField;

		[Token(Token = "0x1700017B")]
		[HideInInspector]
		public FlowOutput port
		{
			[Token(Token = "0x60010E2")]
			[Address(RVA = "0xE04610", Offset = "0xE04610", VA = "0xE04610")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9866B4", Offset = "0x9866B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010E3")]
			[Address(RVA = "0xE04618", Offset = "0xE04618", VA = "0xE04618")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9866C4", Offset = "0x9866C4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700017C")]
		public override string name
		{
			[Token(Token = "0x60010E4")]
			[Address(RVA = "0xE04620", Offset = "0xE04620", VA = "0xE04620", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010E5")]
		[Address(RVA = "0xE04694", Offset = "0xE04694", VA = "0xE04694", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x60010E6")]
		[Address(RVA = "0xE046FC", Offset = "0xE046FC", VA = "0xE046FC")]
		public GoToLabel()
		{
		}
	}
	[Token(Token = "0x20002FF")]
	[DoNotList]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x976A08", Offset = "0x976A08")]
	[AttributeAttribute(Name = "ContextDefinedInputsAttribute", RVA = "0x976A08", Offset = "0x976A08")]
	public class GoToStatement : FlowControlNode
	{
		[Token(Token = "0x4000B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private string _targetLabelUID;

		[Token(Token = "0x4000B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private object _targetLabel;

		[Token(Token = "0x1700017D")]
		private string targetLabelUID
		{
			[Token(Token = "0x60010E7")]
			[Address(RVA = "0xE04754", Offset = "0xE04754", VA = "0xE04754")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010E8")]
			[Address(RVA = "0xE0475C", Offset = "0xE0475C", VA = "0xE0475C")]
			set
			{
			}
		}

		[Token(Token = "0x1700017E")]
		private GoToLabel targetLabel
		{
			[Token(Token = "0x60010E9")]
			[Address(RVA = "0xE04764", Offset = "0xE04764", VA = "0xE04764")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010EA")]
			[Address(RVA = "0xE048A0", Offset = "0xE048A0", VA = "0xE048A0")]
			set
			{
			}
		}

		[Token(Token = "0x1700017F")]
		public override string name
		{
			[Token(Token = "0x60010EB")]
			[Address(RVA = "0xE048A8", Offset = "0xE048A8", VA = "0xE048A8", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010EC")]
		[Address(RVA = "0xE04940", Offset = "0xE04940", VA = "0xE04940")]
		public void SetTarget(GoToLabel target)
		{
		}

		[Token(Token = "0x60010ED")]
		[Address(RVA = "0xE049B0", Offset = "0xE049B0", VA = "0xE049B0", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x60010EE")]
		[Address(RVA = "0xE04A40", Offset = "0xE04A40", VA = "0xE04A40")]
		public GoToStatement()
		{
		}

		[Token(Token = "0x60010EF")]
		[Address(RVA = "0xE04A48", Offset = "0xE04A48", VA = "0xE04A48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9866D4", Offset = "0x9866D4")]
		private bool <get_targetLabel>b__6_0(GoToLabel i)
		{
			return default(bool);
		}

		[Token(Token = "0x60010F0")]
		[Address(RVA = "0xE04A88", Offset = "0xE04A88", VA = "0xE04A88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9866E4", Offset = "0x9866E4")]
		private void <RegisterPorts>b__11_0(Flow f)
		{
		}
	}
	[Token(Token = "0x2000300")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x976ABC", Offset = "0x976ABC")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x976ABC", Offset = "0x976ABC")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x976ABC", Offset = "0x976ABC")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0x976ABC", Offset = "0x976ABC")]
	[AttributeAttribute(Name = "ContextDefinedInputsAttribute", RVA = "0x976ABC", Offset = "0x976ABC")]
	[ExposeAsDefinition]
	public abstract class RelayValueInputBase : FlowNode
	{
		[Token(Token = "0x17000180")]
		public abstract Type relayType
		{
			[Token(Token = "0x60010F1")]
			get;
		}

		[Token(Token = "0x60010F2")]
		[Address(RVA = "0xC993C0", Offset = "0xC993C0", VA = "0xC993C0")]
		protected RelayValueInputBase()
		{
		}
	}
	[Token(Token = "0x2000301")]
	public class RelayValueInput<T> : RelayValueInputBase, IEditorMenuCallbackReceiver
	{
		[Token(Token = "0x4000B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x97FC68", Offset = "0x97FC68")]
		[DelayedField]
		public string identifier;

		[Token(Token = "0x4000B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97FCB4", Offset = "0x97FCB4")]
		private ValueInput<T> <port>k__BackingField;

		[Token(Token = "0x17000181")]
		[HideInInspector]
		public ValueInput<T> port
		{
			[Token(Token = "0x60010F3")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9866F4", Offset = "0x9866F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986704", Offset = "0x986704")]
			private set
			{
			}
		}

		[Token(Token = "0x17000182")]
		public override Type relayType
		{
			[Token(Token = "0x60010F5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000183")]
		public override string name
		{
			[Token(Token = "0x60010F6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010F7")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x60010F8")]
		public RelayValueInput()
		{
		}
	}
	[Token(Token = "0x2000302")]
	[DoNotList]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x976BE0", Offset = "0x976BE0")]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0x976BE0", Offset = "0x976BE0")]
	[AttributeAttribute(Name = "ContextDefinedOutputsAttribute", RVA = "0x976BE0", Offset = "0x976BE0")]
	public abstract class RelayValueOutputBase : FlowNode
	{
		[Token(Token = "0x60010F9")]
		public abstract void SetSource(RelayValueInputBase source);

		[Token(Token = "0x60010FA")]
		[Address(RVA = "0xC993C8", Offset = "0xC993C8", VA = "0xC993C8")]
		protected RelayValueOutputBase()
		{
		}
	}
	[Token(Token = "0x2000303")]
	public class RelayValueOutput<T> : RelayValueOutputBase
	{
		[Token(Token = "0x4000B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private string _sourceInputUID;

		[Token(Token = "0x4000B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object _sourceInput;

		[Token(Token = "0x17000184")]
		private string sourceInputUID
		{
			[Token(Token = "0x60010FB")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010FC")]
			set
			{
			}
		}

		[Token(Token = "0x17000185")]
		private RelayValueInput<T> sourceInput
		{
			[Token(Token = "0x60010FD")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010FE")]
			set
			{
			}
		}

		[Token(Token = "0x17000186")]
		public override string name
		{
			[Token(Token = "0x60010FF")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001100")]
		public override void SetSource(RelayValueInputBase source)
		{
		}

		[Token(Token = "0x6001101")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001102")]
		public RelayValueOutput()
		{
		}

		[Token(Token = "0x6001103")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986714", Offset = "0x986714")]
		private bool <get_sourceInput>b__6_0(RelayValueInput<T> i)
		{
			return default(bool);
		}

		[Token(Token = "0x6001104")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986724", Offset = "0x986724")]
		private T <RegisterPorts>b__11_0()
		{
			return (T)null;
		}
	}
	[Token(Token = "0x2000304")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x976CB8", Offset = "0x976CB8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x976CB8", Offset = "0x976CB8")]
	[AttributeAttribute(Name = "ContextDefinedOutputsAttribute", RVA = "0x976CB8", Offset = "0x976CB8")]
	public class OwnerVariable : VariableNode
	{
		[Token(Token = "0x17000187")]
		public override string name
		{
			[Token(Token = "0x6001105")]
			[Address(RVA = "0xE0D6D8", Offset = "0xE0D6D8", VA = "0xE0D6D8", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001106")]
		[Address(RVA = "0xE0D720", Offset = "0xE0D720", VA = "0xE0D720", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001107")]
		[Address(RVA = "0xE0D7C0", Offset = "0xE0D7C0", VA = "0xE0D7C0", Slot = "39")]
		public override void SetVariable(object o)
		{
		}

		[Token(Token = "0x6001108")]
		[Address(RVA = "0xE0D7C4", Offset = "0xE0D7C4", VA = "0xE0D7C4")]
		public OwnerVariable()
		{
		}

		[Token(Token = "0x6001109")]
		[Address(RVA = "0xE0D7CC", Offset = "0xE0D7CC", VA = "0xE0D7CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986734", Offset = "0x986734")]
		private GameObject <RegisterPorts>b__2_0()
		{
			return null;
		}
	}
	[Token(Token = "0x2000305")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x976D84", Offset = "0x976D84")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x976D84", Offset = "0x976D84")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x976D84", Offset = "0x976D84")]
	[AttributeAttribute(Name = "ContextDefinedInputsAttribute", RVA = "0x976D84", Offset = "0x976D84")]
	public class SetOtherVariable<T> : FlowNode
	{
		[Token(Token = "0x2000776")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97999C", Offset = "0x97999C")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4002076")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<Blackboard> bb;

			[Token(Token = "0x4002077")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SetOtherVariable<T> <>4__this;

			[Token(Token = "0x4002078")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T> v;

			[Token(Token = "0x4002079")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x6002639")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x600263A")]
			internal T <RegisterPorts>b__0()
			{
				return (T)null;
			}

			[Token(Token = "0x600263B")]
			internal void <RegisterPorts>b__1(Flow f)
			{
			}
		}

		[Token(Token = "0x4000B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public OperationMethod operation;

		[Token(Token = "0x4000B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ValueInput<string> varName;

		[Token(Token = "0x17000188")]
		public override string name
		{
			[Token(Token = "0x600110A")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600110B")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x600110C")]
		private void DoSet(Blackboard bb, string name, T value)
		{
		}

		[Token(Token = "0x600110D")]
		public SetOtherVariable()
		{
		}
	}
	[Token(Token = "0x2000306")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x976E88", Offset = "0x976E88")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x976E88", Offset = "0x976E88")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x976E88", Offset = "0x976E88")]
	[AttributeAttribute(Name = "ContextDefinedInputsAttribute", RVA = "0x976E88", Offset = "0x976E88")]
	public class SetVariable<T> : FlowNode
	{
		[Token(Token = "0x2000777")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9799AC", Offset = "0x9799AC")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x400207A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SetVariable<T> <>4__this;

			[Token(Token = "0x400207B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T> v;

			[Token(Token = "0x400207C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x600263C")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x600263D")]
			internal T <RegisterPorts>b__0()
			{
				return (T)null;
			}

			[Token(Token = "0x600263E")]
			internal void <RegisterPorts>b__1(Flow f)
			{
			}
		}

		[Token(Token = "0x4000B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[BlackboardOnly]
		public BBParameter<T> targetVariable;

		[Token(Token = "0x4000B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public OperationMethod operation;

		[Token(Token = "0x4000B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public bool perSecond;

		[Token(Token = "0x17000189")]
		public override string name
		{
			[Token(Token = "0x600110E")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600110F")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001110")]
		private void DoSet(T value)
		{
		}

		[Token(Token = "0x6001111")]
		public void SetTargetVariableName(string name)
		{
		}

		[Token(Token = "0x6001112")]
		public SetVariable()
		{
		}
	}
	[Token(Token = "0x2000307")]
	[DoNotList]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x976F78", Offset = "0x976F78")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x976F78", Offset = "0x976F78")]
	public class TagVariable : VariableNode
	{
		[Token(Token = "0x4000B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[ParadoxNotion.Design.TagField]
		public BBParameter<string> tagName;

		[Token(Token = "0x1700018A")]
		public override string name
		{
			[Token(Token = "0x6001113")]
			[Address(RVA = "0xC9D320", Offset = "0xC9D320", VA = "0xC9D320", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001114")]
		[Address(RVA = "0xC9D380", Offset = "0xC9D380", VA = "0xC9D380", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001115")]
		[Address(RVA = "0xC9D420", Offset = "0xC9D420", VA = "0xC9D420", Slot = "39")]
		public override void SetVariable(object o)
		{
		}

		[Token(Token = "0x6001116")]
		[Address(RVA = "0xC9D508", Offset = "0xC9D508", VA = "0xC9D508")]
		public TagVariable()
		{
		}

		[Token(Token = "0x6001117")]
		[Address(RVA = "0xC9D578", Offset = "0xC9D578", VA = "0xC9D578")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986744", Offset = "0x986744")]
		private string <RegisterPorts>b__3_0()
		{
			return null;
		}
	}
	[Token(Token = "0x2000308")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x976FEC", Offset = "0x976FEC")]
	public abstract class VariableNode : FlowNode
	{
		[Token(Token = "0x6001118")]
		public abstract void SetVariable(object o);

		[Token(Token = "0x6001119")]
		[Address(RVA = "0xC9D570", Offset = "0xC9D570", VA = "0xC9D570")]
		protected VariableNode()
		{
		}
	}
}
namespace FlowCanvas.Nodes.Legacy
{
	[Token(Token = "0x2000309")]
	public abstract class ReflectedFieldNode
	{
		[Token(Token = "0x600111A")]
		[Address(RVA = "0xE08F54", Offset = "0xE08F54", VA = "0xE08F54")]
		public static ReflectedFieldNode Create(FieldInfo field)
		{
			return null;
		}

		[Token(Token = "0x600111B")]
		public abstract void RegisterPorts(FlowNode node, FieldInfo field, ReflectedFieldNodeWrapper.AccessMode accessMode);

		[Token(Token = "0x600111C")]
		[Address(RVA = "0xE0792C", Offset = "0xE0792C", VA = "0xE0792C")]
		protected ReflectedFieldNode()
		{
		}
	}
	[Token(Token = "0x200030A")]
	public sealed class PureReflectedFieldNode : ReflectedFieldNode
	{
		[Token(Token = "0x2000778")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9799BC", Offset = "0x9799BC")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x400207D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FieldInfo field;

			[Token(Token = "0x600263F")]
			[Address(RVA = "0xE07904", Offset = "0xE07904", VA = "0xE07904")]
			public <>c__DisplayClass0_0()
			{
			}
		}

		[Token(Token = "0x2000779")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9799CC", Offset = "0x9799CC")]
		private sealed class <>c__DisplayClass0_1
		{
			[Token(Token = "0x400207E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public object constantValue;

			[Token(Token = "0x6002640")]
			[Address(RVA = "0xE0790C", Offset = "0xE0790C", VA = "0xE0790C")]
			public <>c__DisplayClass0_1()
			{
			}

			[Token(Token = "0x6002641")]
			[Address(RVA = "0xE07934", Offset = "0xE07934", VA = "0xE07934")]
			internal object <RegisterPorts>b__0()
			{
				return null;
			}
		}

		[Token(Token = "0x200077A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9799DC", Offset = "0x9799DC")]
		private sealed class <>c__DisplayClass0_2
		{
			[Token(Token = "0x400207F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ValueInput instanceInput;

			[Token(Token = "0x4002080")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass0_0 CS$<>8__locals1;

			[Token(Token = "0x6002642")]
			[Address(RVA = "0xE07914", Offset = "0xE07914", VA = "0xE07914")]
			public <>c__DisplayClass0_2()
			{
			}

			[Token(Token = "0x6002643")]
			[Address(RVA = "0xE0793C", Offset = "0xE0793C", VA = "0xE0793C")]
			internal object <RegisterPorts>b__1()
			{
				return null;
			}
		}

		[Token(Token = "0x200077B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9799EC", Offset = "0x9799EC")]
		private sealed class <>c__DisplayClass0_3
		{
			[Token(Token = "0x4002081")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public object instance;

			[Token(Token = "0x4002082")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ValueInput instanceInput;

			[Token(Token = "0x4002083")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ValueInput valueInput;

			[Token(Token = "0x4002084")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public FlowOutput flowOut;

			[Token(Token = "0x4002085")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public <>c__DisplayClass0_0 CS$<>8__locals2;

			[Token(Token = "0x6002644")]
			[Address(RVA = "0xE0791C", Offset = "0xE0791C", VA = "0xE0791C")]
			public <>c__DisplayClass0_3()
			{
			}

			[Token(Token = "0x6002645")]
			[Address(RVA = "0xE079B4", Offset = "0xE079B4", VA = "0xE079B4")]
			internal object <RegisterPorts>b__2()
			{
				return null;
			}

			[Token(Token = "0x6002646")]
			[Address(RVA = "0xE079BC", Offset = "0xE079BC", VA = "0xE079BC")]
			internal void <RegisterPorts>b__3(Flow f)
			{
			}
		}

		[Token(Token = "0x600111D")]
		[Address(RVA = "0xE073B8", Offset = "0xE073B8", VA = "0xE073B8", Slot = "4")]
		public override void RegisterPorts(FlowNode node, FieldInfo field, ReflectedFieldNodeWrapper.AccessMode accessMode)
		{
		}

		[Token(Token = "0x600111E")]
		[Address(RVA = "0xE07924", Offset = "0xE07924", VA = "0xE07924")]
		public PureReflectedFieldNode()
		{
		}
	}
	[Token(Token = "0x200030B")]
	public abstract class ReflectedMethodNode
	{
		[Token(Token = "0x200077C")]
		protected delegate void ActionCall();

		[Token(Token = "0x200077D")]
		protected delegate void ActionCall<T1>(T1 a);

		[Token(Token = "0x200077E")]
		protected delegate void ActionCall<T1, T2>(T1 a, T2 b);

		[Token(Token = "0x200077F")]
		protected delegate void ActionCall<T1, T2, T3>(T1 a, T2 b, T3 c);

		[Token(Token = "0x2000780")]
		protected delegate void ActionCall<T1, T2, T3, T4>(T1 a, T2 b, T3 c, T4 d);

		[Token(Token = "0x2000781")]
		protected delegate void ActionCall<T1, T2, T3, T4, T5>(T1 a, T2 b, T3 c, T4 d, T5 e);

		[Token(Token = "0x2000782")]
		protected delegate void ActionCall<T1, T2, T3, T4, T5, T6>(T1 a, T2 b, T3 c, T4 d, T5 e, T6 f);

		[Token(Token = "0x2000783")]
		protected delegate void ActionCall<T1, T2, T3, T4, T5, T6, T7>(T1 a, T2 b, T3 c, T4 d, T5 e, T6 f, T7 g);

		[Token(Token = "0x2000784")]
		protected delegate void ActionCall<T1, T2, T3, T4, T5, T6, T7, T8>(T1 a, T2 b, T3 c, T4 d, T5 e, T6 f, T7 g, T8 h);

		[Token(Token = "0x2000785")]
		protected delegate TResult FunctionCall<TResult>();

		[Token(Token = "0x2000786")]
		protected delegate TResult FunctionCall<T1, TResult>(T1 a);

		[Token(Token = "0x2000787")]
		protected delegate TResult FunctionCall<T1, T2, TResult>(T1 a, T2 b);

		[Token(Token = "0x2000788")]
		protected delegate TResult FunctionCall<T1, T2, T3, TResult>(T1 a, T2 b, T3 c);

		[Token(Token = "0x2000789")]
		protected delegate TResult FunctionCall<T1, T2, T3, T4, TResult>(T1 a, T2 b, T3 c, T4 d);

		[Token(Token = "0x200078A")]
		protected delegate TResult FunctionCall<T1, T2, T3, T4, T5, TResult>(T1 a, T2 b, T3 c, T4 d, T5 e);

		[Token(Token = "0x200078B")]
		protected delegate TResult FunctionCall<T1, T2, T3, T4, T5, T6, TResult>(T1 a, T2 b, T3 c, T4 d, T5 e, T6 f);

		[Token(Token = "0x200078C")]
		protected delegate TResult FunctionCall<T1, T2, T3, T4, T5, T6, T7, TResult>(T1 a, T2 b, T3 c, T4 d, T5 e, T6 f, T7 g);

		[Token(Token = "0x200078D")]
		protected delegate TResult FunctionCall<T1, T2, T3, T4, T5, T6, T7, T8, TResult>(T1 a, T2 b, T3 c, T4 d, T5 e, T6 f, T7 g, T8 h);

		[Token(Token = "0x200078E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9799FC", Offset = "0x9799FC")]
		private sealed class <>c__DisplayClass19_0
		{
			[Token(Token = "0x4002086")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ParameterInfo[] parameters;

			[Token(Token = "0x600268F")]
			[Address(RVA = "0xE09184", Offset = "0xE09184", VA = "0xE09184")]
			public <>c__DisplayClass19_0()
			{
			}

			[Token(Token = "0x6002690")]
			[Address(RVA = "0xE09C18", Offset = "0xE09C18", VA = "0xE09C18")]
			internal bool <Create>b__0(ParameterInfo p)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x200078F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979A0C", Offset = "0x979A0C")]
		private sealed class <>c
		{
			[Token(Token = "0x4002087")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002088")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<ParameterInfo, Type> <>9__20_0;

			[Token(Token = "0x4002089")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<ParameterInfo, Type> <>9__20_1;

			[Token(Token = "0x6002692")]
			[Address(RVA = "0xE09BA8", Offset = "0xE09BA8", VA = "0xE09BA8")]
			public <>c()
			{
			}

			[Token(Token = "0x6002693")]
			[Address(RVA = "0xE09BB0", Offset = "0xE09BB0", VA = "0xE09BB0")]
			internal Type <TryCreateJit>b__20_0(ParameterInfo p)
			{
				return null;
			}

			[Token(Token = "0x6002694")]
			[Address(RVA = "0xE09BE4", Offset = "0xE09BE4", VA = "0xE09BE4")]
			internal Type <TryCreateJit>b__20_1(ParameterInfo p)
			{
				return null;
			}
		}

		[Token(Token = "0x600111F")]
		[Address(RVA = "0xE08768", Offset = "0xE08768", VA = "0xE08768")]
		public ReflectedMethodNode()
		{
		}

		[Token(Token = "0x6001120")]
		[Address(RVA = "0xE08FB0", Offset = "0xE08FB0", VA = "0xE08FB0")]
		public static ReflectedMethodNode Create(MethodInfo method)
		{
			return null;
		}

		[Token(Token = "0x6001121")]
		[Address(RVA = "0xE0918C", Offset = "0xE0918C", VA = "0xE0918C")]
		private static ReflectedMethodNode TryCreateJit(MethodInfo method)
		{
			return null;
		}

		[Token(Token = "0x6001122")]
		[Address(RVA = "0xE09950", Offset = "0xE09950", VA = "0xE09950")]
		public string GetName(MethodInfo method, int i)
		{
			return null;
		}

		[Token(Token = "0x6001123")]
		public abstract void RegisterPorts(FlowNode node, MethodInfo method, ReflectedMethodRegistrationOptions options);
	}
	[Token(Token = "0x200030C")]
	public sealed class PureReflectedMethodNode : ReflectedMethodNode
	{
		[Token(Token = "0x2000790")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979A1C", Offset = "0x979A1C")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x400208A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PureReflectedMethodNode <>4__this;

			[Token(Token = "0x400208B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ReflectedMethodRegistrationOptions options;

			[Token(Token = "0x6002695")]
			[Address(RVA = "0xE083B8", Offset = "0xE083B8", VA = "0xE083B8")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x6002696")]
			[Address(RVA = "0xE08770", Offset = "0xE08770", VA = "0xE08770")]
			internal object <RegisterPorts>b__0()
			{
				return null;
			}

			[Token(Token = "0x6002697")]
			[Address(RVA = "0xE0879C", Offset = "0xE0879C", VA = "0xE0879C")]
			internal object <RegisterPorts>b__1()
			{
				return null;
			}
		}

		[Token(Token = "0x2000791")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979A2C", Offset = "0x979A2C")]
		private sealed class <>c__DisplayClass8_1
		{
			[Token(Token = "0x400208C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FlowOutput o;

			[Token(Token = "0x400208D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass8_0 CS$<>8__locals1;

			[Token(Token = "0x6002698")]
			[Address(RVA = "0xE083C0", Offset = "0xE083C0", VA = "0xE083C0")]
			public <>c__DisplayClass8_1()
			{
			}

			[Token(Token = "0x6002699")]
			[Address(RVA = "0xE087E4", Offset = "0xE087E4", VA = "0xE087E4")]
			internal void <RegisterPorts>b__2(Flow f)
			{
			}
		}

		[Token(Token = "0x2000792")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979A3C", Offset = "0x979A3C")]
		private sealed class <>c__DisplayClass8_2
		{
			[Token(Token = "0x400208E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int i;

			[Token(Token = "0x400208F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass8_0 CS$<>8__locals2;

			[Token(Token = "0x600269A")]
			[Address(RVA = "0xE083C8", Offset = "0xE083C8", VA = "0xE083C8")]
			public <>c__DisplayClass8_2()
			{
			}

			[Token(Token = "0x600269B")]
			[Address(RVA = "0xE08880", Offset = "0xE08880", VA = "0xE08880")]
			internal object <RegisterPorts>b__3()
			{
				return null;
			}
		}

		[Token(Token = "0x4000B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private MethodInfo method;

		[Token(Token = "0x4000B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ValueInput instanceInput;

		[Token(Token = "0x4000B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<ValueInput> inputs;

		[Token(Token = "0x4000B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ValueInput> paramsInputs;

		[Token(Token = "0x4000B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Type paramsArrayType;

		[Token(Token = "0x4000B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private object[] args;

		[Token(Token = "0x4000B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private object instance;

		[Token(Token = "0x4000B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private object returnValue;

		[Token(Token = "0x6001124")]
		[Address(RVA = "0xE07AB4", Offset = "0xE07AB4", VA = "0xE07AB4", Slot = "4")]
		public override void RegisterPorts(FlowNode node, MethodInfo method, ReflectedMethodRegistrationOptions options)
		{
		}

		[Token(Token = "0x6001125")]
		[Address(RVA = "0xE083D0", Offset = "0xE083D0", VA = "0xE083D0")]
		private object CallMethod()
		{
			return null;
		}

		[Token(Token = "0x6001126")]
		[Address(RVA = "0xE08760", Offset = "0xE08760", VA = "0xE08760")]
		public PureReflectedMethodNode()
		{
		}
	}
	[Token(Token = "0x200030D")]
	public sealed class ReflectedActionNode : ReflectedMethodNode
	{
		[Token(Token = "0x2000793")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979A4C", Offset = "0x979A4C")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4002090")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ReflectedActionNode <>4__this;

			[Token(Token = "0x4002091")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FlowOutput o;

			[Token(Token = "0x600269C")]
			[Address(RVA = "0xE08EB8", Offset = "0xE08EB8", VA = "0xE08EB8")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x600269D")]
			[Address(RVA = "0xE08EC8", Offset = "0xE08EC8", VA = "0xE08EC8")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x4000B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ActionCall call;

		[Token(Token = "0x6001127")]
		[Address(RVA = "0xE0894C", Offset = "0xE0894C", VA = "0xE0894C")]
		private void Call()
		{
		}

		[Token(Token = "0x6001128")]
		[Address(RVA = "0xE08D78", Offset = "0xE08D78", VA = "0xE08D78", Slot = "4")]
		public override void RegisterPorts(FlowNode node, MethodInfo method, ReflectedMethodRegistrationOptions options)
		{
		}

		[Token(Token = "0x6001129")]
		[Address(RVA = "0xE08EC0", Offset = "0xE08EC0", VA = "0xE08EC0")]
		public ReflectedActionNode()
		{
		}
	}
	[Token(Token = "0x200030E")]
	public sealed class ReflectedActionNode<T1> : ReflectedMethodNode
	{
		[Token(Token = "0x2000794")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979A5C", Offset = "0x979A5C")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4002092")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ReflectedActionNode<T1> <>4__this;

			[Token(Token = "0x4002093")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4002094")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x600269E")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x600269F")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}

			[Token(Token = "0x60026A0")]
			internal T1 <RegisterPorts>b__1()
			{
				return (T1)null;
			}
		}

		[Token(Token = "0x4000B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ActionCall<T1> call;

		[Token(Token = "0x4000B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T1 instance;

		[Token(Token = "0x600112A")]
		private void Call(T1 a)
		{
		}

		[Token(Token = "0x600112B")]
		public override void RegisterPorts(FlowNode node, MethodInfo method, ReflectedMethodRegistrationOptions options)
		{
		}

		[Token(Token = "0x600112C")]
		public ReflectedActionNode()
		{
		}
	}
	[Token(Token = "0x200030F")]
	public sealed class ReflectedActionNode<T1, T2> : ReflectedMethodNode
	{
		[Token(Token = "0x2000795")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979A6C", Offset = "0x979A6C")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4002095")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ReflectedActionNode<T1, T2> <>4__this;

			[Token(Token = "0x4002096")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4002097")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4002098")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x60026A1")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x60026A2")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}

			[Token(Token = "0x60026A3")]
			internal T1 <RegisterPorts>b__1()
			{
				return (T1)null;
			}
		}

		[Token(Token = "0x4000B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ActionCall<T1, T2> call;

		[Token(Token = "0x4000B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T1 instance;

		[Token(Token = "0x600112D")]
		private void Call(T1 a, T2 b)
		{
		}

		[Token(Token = "0x600112E")]
		public override void RegisterPorts(FlowNode node, MethodInfo method, ReflectedMethodRegistrationOptions options)
		{
		}

		[Token(Token = "0x600112F")]
		public ReflectedActionNode()
		{
		}
	}
	[Token(Token = "0x2000310")]
	public sealed class ReflectedActionNode<T1, T2, T3> : ReflectedMethodNode
	{
		[Token(Token = "0x2000796")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979A7C", Offset = "0x979A7C")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4002099")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ReflectedActionNode<T1, T2, T3> <>4__this;

			[Token(Token = "0x400209A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x400209B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x400209C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x400209D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x60026A4")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x60026A5")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}

			[Token(Token = "0x60026A6")]
			internal T1 <RegisterPorts>b__1()
			{
				return (T1)null;
			}
		}

		[Token(Token = "0x4000B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ActionCall<T1, T2, T3> call;

		[Token(Token = "0x4000B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T1 instance;

		[Token(Token = "0x6001130")]
		private void Call(T1 a, T2 b, T3 c)
		{
		}

		[Token(Token = "0x6001131")]
		public override void RegisterPorts(FlowNode node, MethodInfo method, ReflectedMethodRegistrationOptions options)
		{
		}

		[Token(Token = "0x6001132")]
		public ReflectedActionNode()
		{
		}
	}
	[Token(Token = "0x2000311")]
	public sealed class ReflectedActionNode<T1, T2, T3, T4> : ReflectedMethodNode
	{
		[Token(Token = "0x2000797")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979A8C", Offset = "0x979A8C")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x400209E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ReflectedActionNode<T1, T2, T3, T4> <>4__this;

			[Token(Token = "0x400209F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x40020A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x40020A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x40020A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T4> p4;

			[Token(Token = "0x40020A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x60026A7")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x60026A8")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}

			[Token(Token = "0x60026A9")]
			internal T1 <RegisterPorts>b__1()
			{
				return (T1)null;
			}
		}

		[Token(Token = "0x4000B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ActionCall<T1, T2, T3, T4> call;

		[Token(Token = "0x4000B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T1 instance;

		[Token(Token = "0x6001133")]
		private void Call(T1 a, T2 b, T3 c, T4 d)
		{
		}

		[Token(Token = "0x6001134")]
		public override void RegisterPorts(FlowNode node, MethodInfo method, ReflectedMethodRegistrationOptions options)
		{
		}

		[Token(Token = "0x6001135")]
		public ReflectedActionNode()
		{
		}
	}
	[Token(Token = "0x2000312")]
	public sealed class ReflectedActionNode<T1, T2, T3, T4, T5> : ReflectedMethodNode
	{
		[Token(Token = "0x2000798")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979A9C", Offset = "0x979A9C")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x40020A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ReflectedActionNode<T1, T2, T3, T4, T5> <>4__this;

			[Token(Token = "0x40020A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x40020A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x40020A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x40020A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T4> p4;

			[Token(Token = "0x40020A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T5> p5;

			[Token(Token = "0x40020AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x60026AA")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x60026AB")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}

			[Token(Token = "0x60026AC")]
			internal T1 <RegisterPorts>b__1()
			{
				return (T1)null;
			}
		}

		[Token(Token = "0x4000B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ActionCall<T1, T2, T3, T4, T5> call;

		[Token(Token = "0x4000B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T1 instance;

		[Token(Token = "0x6001136")]
		private void Call(T1 a, T2 b, T3 c, T4 d, T5 e)
		{
		}

		[Token(Token = "0x6001137")]
		public override void RegisterPorts(FlowNode node, MethodInfo method, ReflectedMethodRegistrationOptions options)
		{
		}

		[Token(Token = "0x6001138")]
		public ReflectedActionNode()
		{
		}
	}
	[Token(Token = "0x2000313")]
	public sealed class ReflectedActionNode<T1, T2, T3, T4, T5, T6> : ReflectedMethodNode
	{
		[Token(Token = "0x2000799")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979AAC", Offset = "0x979AAC")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x40020AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ReflectedActionNode<T1, T2, T3, T4, T5, T6> <>4__this;

			[Token(Token = "0x40020AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x40020AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x40020AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x40020AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T4> p4;

			[Token(Token = "0x40020B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T5> p5;

			[Token(Token = "0x40020B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T6> p6;

			[Token(Token = "0x40020B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x60026AD")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x60026AE")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}

			[Token(Token = "0x60026AF")]
			internal T1 <RegisterPorts>b__1()
			{
				return (T1)null;
			}
		}

		[Token(Token = "0x4000B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ActionCall<T1, T2, T3, T4, T5, T6> call;

		[Token(Token = "0x4000B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T1 instance;

		[Token(Token = "0x6001139")]
		private void Call(T1 a, T2 b, T3 c, T4 d, T5 e, T6 f)
		{
		}

		[Token(Token = "0x600113A")]
		public override void RegisterPorts(FlowNode node, MethodInfo method, ReflectedMethodRegistrationOptions options)
		{
		}

		[Token(Token = "0x600113B")]
		public ReflectedActionNode()
		{
		}
	}
	[Token(Token = "0x2000314")]
	public sealed class ReflectedActionNode<T1, T2, T3, T4, T5, T6, T7> : ReflectedMethodNode
	{
		[Token(Token = "0x200079A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979ABC", Offset = "0x979ABC")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x40020B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ReflectedActionNode<T1, T2, T3, T4, T5, T6, T7> <>4__this;

			[Token(Token = "0x40020B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x40020B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x40020B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x40020B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T4> p4;

			[Token(Token = "0x40020B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T5> p5;

			[Token(Token = "0x40020B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T6> p6;

			[Token(Token = "0x40020BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T7> p7;

			[Token(Token = "0x40020BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x60026B0")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x60026B1")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}

			[Token(Token = "0x60026B2")]
			internal T1 <RegisterPorts>b__1()
			{
				return (T1)null;
			}
		}

		[Token(Token = "0x4000B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ActionCall<T1, T2, T3, T4, T5, T6, T7> call;

		[Token(Token = "0x4000B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T1 instance;

		[Token(Token = "0x600113C")]
		private void Call(T1 a, T2 b, T3 c, T4 d, T5 e, T6 f, T7 g)
		{
		}

		[Token(Token = "0x600113D")]
		public override void RegisterPorts(FlowNode node, MethodInfo method, ReflectedMethodRegistrationOptions options)
		{
		}

		[Token(Token = "0x600113E")]
		public ReflectedActionNode()
		{
		}
	}
	[Token(Token = "0x2000315")]
	public sealed class ReflectedActionNode<T1, T2, T3, T4, T5, T6, T7, T8> : ReflectedMethodNode
	{
		[Token(Token = "0x200079B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979ACC", Offset = "0x979ACC")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x40020BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ReflectedActionNode<T1, T2, T3, T4, T5, T6, T7, T8> <>4__this;

			[Token(Token = "0x40020BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x40020BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x40020BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x40020C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T4> p4;

			[Token(Token = "0x40020C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T5> p5;

			[Token(Token = "0x40020C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T6> p6;

			[Token(Token = "0x40020C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T7> p7;

			[Token(Token = "0x40020C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T8> p8;

			[Token(Token = "0x40020C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x60026B3")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x60026B4")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}

			[Token(Token = "0x60026B5")]
			internal T1 <RegisterPorts>b__1()
			{
				return (T1)null;
			}
		}

		[Token(Token = "0x4000B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ActionCall<T1, T2, T3, T4, T5, T6, T7, T8> call;

		[Token(Token = "0x4000B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T1 instance;

		[Token(Token = "0x600113F")]
		private void Call(T1 a, T2 b, T3 c, T4 d, T5 e, T6 f, T7 g, T8 h)
		{
		}

		[Token(Token = "0x6001140")]
		public override void RegisterPorts(FlowNode node, MethodInfo method, ReflectedMethodRegistrationOptions options)
		{
		}

		[Token(Token = "0x6001141")]
		public ReflectedActionNode()
		{
		}
	}
	[Token(Token = "0x2000316")]
	public sealed class ReflectedFunctionNode<TResult> : ReflectedMethodNode
	{
		[Token(Token = "0x200079C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979ADC", Offset = "0x979ADC")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x40020C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ReflectedFunctionNode<TResult> <>4__this;

			[Token(Token = "0x40020C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ReflectedMethodRegistrationOptions options;

			[Token(Token = "0x60026B6")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x60026B7")]
			internal TResult <RegisterPorts>b__0()
			{
				return (TResult)null;
			}
		}

		[Token(Token = "0x200079D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979AEC", Offset = "0x979AEC")]
		private sealed class <>c__DisplayClass3_1
		{
			[Token(Token = "0x40020C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x40020C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public <>c__DisplayClass3_0 CS$<>8__locals1;

			[Token(Token = "0x60026B8")]
			public <>c__DisplayClass3_1()
			{
			}

			[Token(Token = "0x60026B9")]
			internal void <RegisterPorts>b__1(Flow f)
			{
			}
		}

		[Token(Token = "0x4000B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private FunctionCall<TResult> call;

		[Token(Token = "0x4000B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TResult returnValue;

		[Token(Token = "0x6001142")]
		private TResult Call()
		{
			return (TResult)null;
		}

		[Token(Token = "0x6001143")]
		public override void RegisterPorts(FlowNode node, MethodInfo method, ReflectedMethodRegistrationOptions options)
		{
		}

		[Token(Token = "0x6001144")]
		public ReflectedFunctionNode()
		{
		}
	}
	[Token(Token = "0x2000317")]
	public sealed class ReflectedFunctionNode<T1, TResult> : ReflectedMethodNode
	{
		[Token(Token = "0x200079E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979AFC", Offset = "0x979AFC")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x40020CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ReflectedFunctionNode<T1, TResult> <>4__this;

			[Token(Token = "0x40020CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x40020CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ReflectedMethodRegistrationOptions options;

			[Token(Token = "0x60026BA")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x60026BB")]
			internal T1 <RegisterPorts>b__2()
			{
				return (T1)null;
			}

			[Token(Token = "0x60026BC")]
			internal TResult <RegisterPorts>b__0()
			{
				return (TResult)null;
			}
		}

		[Token(Token = "0x200079F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979B0C", Offset = "0x979B0C")]
		private sealed class <>c__DisplayClass4_1
		{
			[Token(Token = "0x40020CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x40020CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public <>c__DisplayClass4_0 CS$<>8__locals1;

			[Token(Token = "0x60026BD")]
			public <>c__DisplayClass4_1()
			{
			}

			[Token(Token = "0x60026BE")]
			internal void <RegisterPorts>b__1(Flow f)
			{
			}
		}

		[Token(Token = "0x4000B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private FunctionCall<T1, TResult> call;

		[Token(Token = "0x4000B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TResult returnValue;

		[Token(Token = "0x4000B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T1 instance;

		[Token(Token = "0x6001145")]
		private TResult Call(T1 a)
		{
			return (TResult)null;
		}

		[Token(Token = "0x6001146")]
		public override void RegisterPorts(FlowNode node, MethodInfo method, ReflectedMethodRegistrationOptions options)
		{
		}

		[Token(Token = "0x6001147")]
		public ReflectedFunctionNode()
		{
		}
	}
	[Token(Token = "0x2000318")]
	public sealed class ReflectedFunctionNode<T1, T2, TResult> : ReflectedMethodNode
	{
		[Token(Token = "0x20007A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979B1C", Offset = "0x979B1C")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x40020CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ReflectedFunctionNode<T1, T2, TResult> <>4__this;

			[Token(Token = "0x40020D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x40020D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x40020D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ReflectedMethodRegistrationOptions options;

			[Token(Token = "0x60026BF")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x60026C0")]
			internal T1 <RegisterPorts>b__2()
			{
				return (T1)null;
			}

			[Token(Token = "0x60026C1")]
			internal TResult <RegisterPorts>b__0()
			{
				return (TResult)null;
			}
		}

		[Token(Token = "0x20007A1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979B2C", Offset = "0x979B2C")]
		private sealed class <>c__DisplayClass4_1
		{
			[Token(Token = "0x40020D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x40020D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public <>c__DisplayClass4_0 CS$<>8__locals1;

			[Token(Token = "0x60026C2")]
			public <>c__DisplayClass4_1()
			{
			}

			[Token(Token = "0x60026C3")]
			internal void <RegisterPorts>b__1(Flow f)
			{
			}
		}

		[Token(Token = "0x4000B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private FunctionCall<T1, T2, TResult> call;

		[Token(Token = "0x4000B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TResult returnValue;

		[Token(Token = "0x4000B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T1 instance;

		[Token(Token = "0x6001148")]
		private TResult Call(T1 a, T2 b)
		{
			return (TResult)null;
		}

		[Token(Token = "0x6001149")]
		public override void RegisterPorts(FlowNode node, MethodInfo method, ReflectedMethodRegistrationOptions options)
		{
		}

		[Token(Token = "0x600114A")]
		public ReflectedFunctionNode()
		{
		}
	}
	[Token(Token = "0x2000319")]
	public sealed class ReflectedFunctionNode<T1, T2, T3, TResult> : ReflectedMethodNode
	{
		[Token(Token = "0x20007A2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979B3C", Offset = "0x979B3C")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x40020D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ReflectedFunctionNode<T1, T2, T3, TResult> <>4__this;

			[Token(Token = "0x40020D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x40020D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x40020D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x40020D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ReflectedMethodRegistrationOptions options;

			[Token(Token = "0x60026C4")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x60026C5")]
			internal T1 <RegisterPorts>b__2()
			{
				return (T1)null;
			}

			[Token(Token = "0x60026C6")]
			internal TResult <RegisterPorts>b__0()
			{
				return (TResult)null;
			}
		}

		[Token(Token = "0x20007A3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979B4C", Offset = "0x979B4C")]
		private sealed class <>c__DisplayClass4_1
		{
			[Token(Token = "0x40020DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x40020DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public <>c__DisplayClass4_0 CS$<>8__locals1;

			[Token(Token = "0x60026C7")]
			public <>c__DisplayClass4_1()
			{
			}

			[Token(Token = "0x60026C8")]
			internal void <RegisterPorts>b__1(Flow f)
			{
			}
		}

		[Token(Token = "0x4000B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private FunctionCall<T1, T2, T3, TResult> call;

		[Token(Token = "0x4000B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TResult returnValue;

		[Token(Token = "0x4000B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T1 instance;

		[Token(Token = "0x600114B")]
		private TResult Call(T1 a, T2 b, T3 c)
		{
			return (TResult)null;
		}

		[Token(Token = "0x600114C")]
		public override void RegisterPorts(FlowNode node, MethodInfo method, ReflectedMethodRegistrationOptions options)
		{
		}

		[Token(Token = "0x600114D")]
		public ReflectedFunctionNode()
		{
		}
	}
	[Token(Token = "0x200031A")]
	public sealed class ReflectedFunctionNode<T1, T2, T3, T4, TResult> : ReflectedMethodNode
	{
		[Token(Token = "0x20007A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979B5C", Offset = "0x979B5C")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x40020DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ReflectedFunctionNode<T1, T2, T3, T4, TResult> <>4__this;

			[Token(Token = "0x40020DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x40020DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x40020DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x40020E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T4> p4;

			[Token(Token = "0x40020E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ReflectedMethodRegistrationOptions options;

			[Token(Token = "0x60026C9")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x60026CA")]
			internal T1 <RegisterPorts>b__2()
			{
				return (T1)null;
			}

			[Token(Token = "0x60026CB")]
			internal TResult <RegisterPorts>b__0()
			{
				return (TResult)null;
			}
		}

		[Token(Token = "0x20007A5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979B6C", Offset = "0x979B6C")]
		private sealed class <>c__DisplayClass4_1
		{
			[Token(Token = "0x40020E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x40020E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public <>c__DisplayClass4_0 CS$<>8__locals1;

			[Token(Token = "0x60026CC")]
			public <>c__DisplayClass4_1()
			{
			}

			[Token(Token = "0x60026CD")]
			internal void <RegisterPorts>b__1(Flow f)
			{
			}
		}

		[Token(Token = "0x4000B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private FunctionCall<T1, T2, T3, T4, TResult> call;

		[Token(Token = "0x4000B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TResult returnValue;

		[Token(Token = "0x4000B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T1 instance;

		[Token(Token = "0x600114E")]
		private TResult Call(T1 a, T2 b, T3 c, T4 d)
		{
			return (TResult)null;
		}

		[Token(Token = "0x600114F")]
		public override void RegisterPorts(FlowNode node, MethodInfo method, ReflectedMethodRegistrationOptions options)
		{
		}

		[Token(Token = "0x6001150")]
		public ReflectedFunctionNode()
		{
		}
	}
	[Token(Token = "0x200031B")]
	public sealed class ReflectedFunctionNode<T1, T2, T3, T4, T5, TResult> : ReflectedMethodNode
	{
		[Token(Token = "0x20007A6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979B7C", Offset = "0x979B7C")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x40020E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ReflectedFunctionNode<T1, T2, T3, T4, T5, TResult> <>4__this;

			[Token(Token = "0x40020E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x40020E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x40020E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x40020E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T4> p4;

			[Token(Token = "0x40020E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T5> p5;

			[Token(Token = "0x40020EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ReflectedMethodRegistrationOptions options;

			[Token(Token = "0x60026CE")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x60026CF")]
			internal T1 <RegisterPorts>b__2()
			{
				return (T1)null;
			}

			[Token(Token = "0x60026D0")]
			internal TResult <RegisterPorts>b__0()
			{
				return (TResult)null;
			}
		}

		[Token(Token = "0x20007A7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979B8C", Offset = "0x979B8C")]
		private sealed class <>c__DisplayClass4_1
		{
			[Token(Token = "0x40020EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x40020EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public <>c__DisplayClass4_0 CS$<>8__locals1;

			[Token(Token = "0x60026D1")]
			public <>c__DisplayClass4_1()
			{
			}

			[Token(Token = "0x60026D2")]
			internal void <RegisterPorts>b__1(Flow f)
			{
			}
		}

		[Token(Token = "0x4000B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private FunctionCall<T1, T2, T3, T4, T5, TResult> call;

		[Token(Token = "0x4000B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TResult returnValue;

		[Token(Token = "0x4000B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T1 instance;

		[Token(Token = "0x6001151")]
		private TResult Call(T1 a, T2 b, T3 c, T4 d, T5 e)
		{
			return (TResult)null;
		}

		[Token(Token = "0x6001152")]
		public override void RegisterPorts(FlowNode node, MethodInfo method, ReflectedMethodRegistrationOptions options)
		{
		}

		[Token(Token = "0x6001153")]
		public ReflectedFunctionNode()
		{
		}
	}
	[Token(Token = "0x200031C")]
	public sealed class ReflectedFunctionNode<T1, T2, T3, T4, T5, T6, TResult> : ReflectedMethodNode
	{
		[Token(Token = "0x20007A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979B9C", Offset = "0x979B9C")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x40020ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ReflectedFunctionNode<T1, T2, T3, T4, T5, T6, TResult> <>4__this;

			[Token(Token = "0x40020EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x40020EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x40020F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x40020F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T4> p4;

			[Token(Token = "0x40020F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T5> p5;

			[Token(Token = "0x40020F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T6> p6;

			[Token(Token = "0x40020F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ReflectedMethodRegistrationOptions options;

			[Token(Token = "0x60026D3")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x60026D4")]
			internal T1 <RegisterPorts>b__2()
			{
				return (T1)null;
			}

			[Token(Token = "0x60026D5")]
			internal TResult <RegisterPorts>b__0()
			{
				return (TResult)null;
			}
		}

		[Token(Token = "0x20007A9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979BAC", Offset = "0x979BAC")]
		private sealed class <>c__DisplayClass4_1
		{
			[Token(Token = "0x40020F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x40020F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public <>c__DisplayClass4_0 CS$<>8__locals1;

			[Token(Token = "0x60026D6")]
			public <>c__DisplayClass4_1()
			{
			}

			[Token(Token = "0x60026D7")]
			internal void <RegisterPorts>b__1(Flow f)
			{
			}
		}

		[Token(Token = "0x4000B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private FunctionCall<T1, T2, T3, T4, T5, T6, TResult> call;

		[Token(Token = "0x4000B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TResult returnValue;

		[Token(Token = "0x4000BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T1 instance;

		[Token(Token = "0x6001154")]
		private TResult Call(T1 a, T2 b, T3 c, T4 d, T5 e, T6 f)
		{
			return (TResult)null;
		}

		[Token(Token = "0x6001155")]
		public override void RegisterPorts(FlowNode node, MethodInfo method, ReflectedMethodRegistrationOptions options)
		{
		}

		[Token(Token = "0x6001156")]
		public ReflectedFunctionNode()
		{
		}
	}
	[Token(Token = "0x200031D")]
	public sealed class ReflectedFunctionNode<T1, T2, T3, T4, T5, T6, T7, TResult> : ReflectedMethodNode
	{
		[Token(Token = "0x20007AA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979BBC", Offset = "0x979BBC")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x40020F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ReflectedFunctionNode<T1, T2, T3, T4, T5, T6, T7, TResult> <>4__this;

			[Token(Token = "0x40020F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x40020F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x40020FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x40020FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T4> p4;

			[Token(Token = "0x40020FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T5> p5;

			[Token(Token = "0x40020FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T6> p6;

			[Token(Token = "0x40020FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T7> p7;

			[Token(Token = "0x40020FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ReflectedMethodRegistrationOptions options;

			[Token(Token = "0x60026D8")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x60026D9")]
			internal T1 <RegisterPorts>b__2()
			{
				return (T1)null;
			}

			[Token(Token = "0x60026DA")]
			internal TResult <RegisterPorts>b__0()
			{
				return (TResult)null;
			}
		}

		[Token(Token = "0x20007AB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979BCC", Offset = "0x979BCC")]
		private sealed class <>c__DisplayClass4_1
		{
			[Token(Token = "0x4002100")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x4002101")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public <>c__DisplayClass4_0 CS$<>8__locals1;

			[Token(Token = "0x60026DB")]
			public <>c__DisplayClass4_1()
			{
			}

			[Token(Token = "0x60026DC")]
			internal void <RegisterPorts>b__1(Flow f)
			{
			}
		}

		[Token(Token = "0x4000BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private FunctionCall<T1, T2, T3, T4, T5, T6, T7, TResult> call;

		[Token(Token = "0x4000BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TResult returnValue;

		[Token(Token = "0x4000BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T1 instance;

		[Token(Token = "0x6001157")]
		private TResult Call(T1 a, T2 b, T3 c, T4 d, T5 e, T6 f, T7 g)
		{
			return (TResult)null;
		}

		[Token(Token = "0x6001158")]
		public override void RegisterPorts(FlowNode node, MethodInfo method, ReflectedMethodRegistrationOptions options)
		{
		}

		[Token(Token = "0x6001159")]
		public ReflectedFunctionNode()
		{
		}
	}
	[Token(Token = "0x200031E")]
	public sealed class ReflectedFunctionNode<T1, T2, T3, T4, T5, T6, T7, T8, TResult> : ReflectedMethodNode
	{
		[Token(Token = "0x20007AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979BDC", Offset = "0x979BDC")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4002102")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ReflectedFunctionNode<T1, T2, T3, T4, T5, T6, T7, T8, TResult> <>4__this;

			[Token(Token = "0x4002103")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T1> p1;

			[Token(Token = "0x4002104")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T2> p2;

			[Token(Token = "0x4002105")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T3> p3;

			[Token(Token = "0x4002106")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T4> p4;

			[Token(Token = "0x4002107")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T5> p5;

			[Token(Token = "0x4002108")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T6> p6;

			[Token(Token = "0x4002109")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T7> p7;

			[Token(Token = "0x400210A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ValueInput<T8> p8;

			[Token(Token = "0x400210B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ReflectedMethodRegistrationOptions options;

			[Token(Token = "0x60026DD")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x60026DE")]
			internal T1 <RegisterPorts>b__2()
			{
				return (T1)null;
			}

			[Token(Token = "0x60026DF")]
			internal TResult <RegisterPorts>b__0()
			{
				return (TResult)null;
			}
		}

		[Token(Token = "0x20007AD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979BEC", Offset = "0x979BEC")]
		private sealed class <>c__DisplayClass4_1
		{
			[Token(Token = "0x400210C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput o;

			[Token(Token = "0x400210D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public <>c__DisplayClass4_0 CS$<>8__locals1;

			[Token(Token = "0x60026E0")]
			public <>c__DisplayClass4_1()
			{
			}

			[Token(Token = "0x60026E1")]
			internal void <RegisterPorts>b__1(Flow f)
			{
			}
		}

		[Token(Token = "0x4000BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private FunctionCall<T1, T2, T3, T4, T5, T6, T7, T8, TResult> call;

		[Token(Token = "0x4000BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TResult returnValue;

		[Token(Token = "0x4000BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T1 instance;

		[Token(Token = "0x600115A")]
		private TResult Call(T1 a, T2 b, T3 c, T4 d, T5 e, T6 f, T7 g, T8 h)
		{
			return (TResult)null;
		}

		[Token(Token = "0x600115B")]
		public override void RegisterPorts(FlowNode node, MethodInfo method, ReflectedMethodRegistrationOptions options)
		{
		}

		[Token(Token = "0x600115C")]
		public ReflectedFunctionNode()
		{
		}
	}
}
namespace FlowCanvas.Macros
{
	[Token(Token = "0x200031F")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x977024", Offset = "0x977024")]
	public class Macro : FlowScriptBase
	{
		[Serializable]
		[Token(Token = "0x20007AE")]
		private struct DerivedSerializationData
		{
			[Token(Token = "0x400210E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public List<DynamicPortDefinition> inputDefinitions;

			[Token(Token = "0x400210F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public List<DynamicPortDefinition> outputDefinitions;
		}

		[Token(Token = "0x20007AF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979BFC", Offset = "0x979BFC")]
		private sealed class <>c__DisplayClass18_0
		{
			[Token(Token = "0x4002110")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DynamicPortDefinition def;

			[Token(Token = "0x60026E2")]
			[Address(RVA = "0xDF5094", Offset = "0xDF5094", VA = "0xDF5094")]
			public <>c__DisplayClass18_0()
			{
			}

			[Token(Token = "0x60026E3")]
			[Address(RVA = "0xDF53F4", Offset = "0xDF53F4", VA = "0xDF53F4")]
			internal bool <AddInputDefinition>b__0(DynamicPortDefinition d)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20007B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979C0C", Offset = "0x979C0C")]
		private sealed class <>c__DisplayClass19_0
		{
			[Token(Token = "0x4002111")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DynamicPortDefinition def;

			[Token(Token = "0x60026E4")]
			[Address(RVA = "0xDF509C", Offset = "0xDF509C", VA = "0xDF509C")]
			public <>c__DisplayClass19_0()
			{
			}

			[Token(Token = "0x60026E5")]
			[Address(RVA = "0xDF5458", Offset = "0xDF5458", VA = "0xDF5458")]
			internal bool <AddOutputDefinition>b__0(DynamicPortDefinition d)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20007B1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979C1C", Offset = "0x979C1C")]
		private sealed class <>c__DisplayClass20_0<T>
		{
			[Token(Token = "0x4002112")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string name;

			[Token(Token = "0x4002113")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T value;

			[Token(Token = "0x60026E6")]
			public <>c__DisplayClass20_0()
			{
			}

			[Token(Token = "0x60026E7")]
			internal bool <SetValueInput>b__0(DynamicPortDefinition d)
			{
				return default(bool);
			}

			[Token(Token = "0x60026E8")]
			internal object <SetValueInput>b__1()
			{
				return null;
			}
		}

		[Token(Token = "0x20007B2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979C2C", Offset = "0x979C2C")]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x4002114")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string name;

			[Token(Token = "0x60026E9")]
			[Address(RVA = "0xDF5264", Offset = "0xDF5264", VA = "0xDF5264")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x60026EA")]
			[Address(RVA = "0xDF54BC", Offset = "0xDF54BC", VA = "0xDF54BC")]
			internal bool <CallFlowInput>b__0(DynamicPortDefinition d)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20007B3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979C3C", Offset = "0x979C3C")]
		private sealed class <>c__DisplayClass22_0<T>
		{
			[Token(Token = "0x4002115")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string name;

			[Token(Token = "0x60026EB")]
			public <>c__DisplayClass22_0()
			{
			}

			[Token(Token = "0x60026EC")]
			internal bool <GetValueOutput>b__0(DynamicPortDefinition d)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		public List<DynamicPortDefinition> inputDefinitions;

		[Token(Token = "0x4000BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		public List<DynamicPortDefinition> outputDefinitions;

		[NonSerialized]
		[Token(Token = "0x4000BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Dictionary<string, FlowHandler> entryActionMap;

		[NonSerialized]
		[Token(Token = "0x4000BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Dictionary<string, FlowHandler> exitActionMap;

		[NonSerialized]
		[Token(Token = "0x4000BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Dictionary<string, ValueHandlerObject> entryFunctionMap;

		[NonSerialized]
		[Token(Token = "0x4000BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Dictionary<string, ValueHandlerObject> exitFunctionMap;

		[Token(Token = "0x4000BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private MacroInputNode _entry;

		[Token(Token = "0x4000BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private MacroOutputNode _exit;

		[Token(Token = "0x1700018B")]
		public override bool useLocalBlackboard
		{
			[Token(Token = "0x600115F")]
			[Address(RVA = "0xDF4A34", Offset = "0xDF4A34", VA = "0xDF4A34", Slot = "20")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700018C")]
		public MacroInputNode entry
		{
			[Token(Token = "0x6001160")]
			[Address(RVA = "0xDF4A3C", Offset = "0xDF4A3C", VA = "0xDF4A3C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018D")]
		public MacroOutputNode exit
		{
			[Token(Token = "0x6001161")]
			[Address(RVA = "0xDF4B18", Offset = "0xDF4B18", VA = "0xDF4B18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600115D")]
		[Address(RVA = "0xDF48F0", Offset = "0xDF48F0", VA = "0xDF48F0", Slot = "13")]
		public override object OnDerivedDataSerialization()
		{
			return null;
		}

		[Token(Token = "0x600115E")]
		[Address(RVA = "0xDF4954", Offset = "0xDF4954", VA = "0xDF4954", Slot = "14")]
		public override void OnDerivedDataDeserialization(object data)
		{
		}

		[Token(Token = "0x6001162")]
		[Address(RVA = "0xDF4BFC", Offset = "0xDF4BFC", VA = "0xDF4BFC", Slot = "15")]
		protected override void OnGraphValidate()
		{
		}

		[Token(Token = "0x6001163")]
		[Address(RVA = "0xDF4D9C", Offset = "0xDF4D9C", VA = "0xDF4D9C")]
		public Port AddInputDefinition(DynamicPortDefinition def)
		{
			return null;
		}

		[Token(Token = "0x6001164")]
		[Address(RVA = "0xDF4F18", Offset = "0xDF4F18", VA = "0xDF4F18")]
		public Port AddOutputDefinition(DynamicPortDefinition def)
		{
			return null;
		}

		[Token(Token = "0x6001165")]
		public void SetValueInput<T>(string name, T value)
		{
		}

		[Token(Token = "0x6001166")]
		[Address(RVA = "0xDF50A4", Offset = "0xDF50A4", VA = "0xDF50A4")]
		public void CallFlowInput(string name)
		{
		}

		[Token(Token = "0x6001167")]
		public T GetValueOutput<T>(string name)
		{
			return (T)null;
		}

		[Token(Token = "0x6001168")]
		[Address(RVA = "0xDF526C", Offset = "0xDF526C", VA = "0xDF526C")]
		public Macro()
		{
		}
	}
	[Token(Token = "0x2000320")]
	[DoNotList]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0x977068", Offset = "0x977068")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x977068", Offset = "0x977068")]
	[ProtectedSingleton]
	public class MacroInputNode : FlowNode
	{
		[Token(Token = "0x20007B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979C4C", Offset = "0x979C4C")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4002116")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DynamicPortDefinition def;

			[Token(Token = "0x4002117")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MacroInputNode <>4__this;

			[Token(Token = "0x60026ED")]
			[Address(RVA = "0xDF5994", Offset = "0xDF5994", VA = "0xDF5994")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x60026EE")]
			[Address(RVA = "0xDF59A4", Offset = "0xDF59A4", VA = "0xDF59A4")]
			internal object <RegisterPorts>b__0()
			{
				return null;
			}
		}

		[Token(Token = "0x1700018E")]
		public override Alignment2x2 iconAlignment
		{
			[Token(Token = "0x6001169")]
			[Address(RVA = "0xDF55A8", Offset = "0xDF55A8", VA = "0xDF55A8", Slot = "14")]
			get
			{
				return default(Alignment2x2);
			}
		}

		[Token(Token = "0x1700018F")]
		private Macro macro
		{
			[Token(Token = "0x600116A")]
			[Address(RVA = "0xDF55B0", Offset = "0xDF55B0", VA = "0xDF55B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600116B")]
		[Address(RVA = "0xDF563C", Offset = "0xDF563C", VA = "0xDF563C", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x600116C")]
		[Address(RVA = "0xDF599C", Offset = "0xDF599C", VA = "0xDF599C")]
		public MacroInputNode()
		{
		}
	}
	[Token(Token = "0x2000321")]
	[DoNotList]
	[AttributeAttribute(Name = "ColorAttribute", RVA = "0x977108", Offset = "0x977108")]
	public class MacroNodeWrapper : FlowNode, IGraphAssignable, IUpdatable
	{
		[Token(Token = "0x20007B5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979C5C", Offset = "0x979C5C")]
		private sealed class <>c__DisplayClass15_0
		{
			[Token(Token = "0x4002118")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DynamicPortDefinition defIn;

			[Token(Token = "0x4002119")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MacroNodeWrapper <>4__this;

			[Token(Token = "0x60026EF")]
			[Address(RVA = "0xDF6628", Offset = "0xDF6628", VA = "0xDF6628")]
			public <>c__DisplayClass15_0()
			{
			}

			[Token(Token = "0x60026F0")]
			[Address(RVA = "0xDF6640", Offset = "0xDF6640", VA = "0xDF6640")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x20007B6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979C6C", Offset = "0x979C6C")]
		private sealed class <>c__DisplayClass15_1
		{
			[Token(Token = "0x400211A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DynamicPortDefinition defOut;

			[Token(Token = "0x400211B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MacroNodeWrapper <>4__this;

			[Token(Token = "0x60026F1")]
			[Address(RVA = "0xDF6630", Offset = "0xDF6630", VA = "0xDF6630")]
			public <>c__DisplayClass15_1()
			{
			}

			[Token(Token = "0x60026F2")]
			[Address(RVA = "0xDF6740", Offset = "0xDF6740", VA = "0xDF6740")]
			internal object <RegisterPorts>b__1()
			{
				return null;
			}
		}

		[Token(Token = "0x4000BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Macro _macro;

		[Token(Token = "0x4000BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool instantiated;

		[Token(Token = "0x17000190")]
		public override string name
		{
			[Token(Token = "0x600116D")]
			[Address(RVA = "0xDF5A6C", Offset = "0xDF5A6C", VA = "0xDF5A6C", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000191")]
		public override string description
		{
			[Token(Token = "0x600116E")]
			[Address(RVA = "0xDF5B1C", Offset = "0xDF5B1C", VA = "0xDF5B1C", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000192")]
		public Macro macro
		{
			[Token(Token = "0x600116F")]
			[Address(RVA = "0xDF5B14", Offset = "0xDF5B14", VA = "0xDF5B14")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001170")]
			[Address(RVA = "0xDF5BE8", Offset = "0xDF5BE8", VA = "0xDF5BE8")]
			set
			{
			}
		}

		[Token(Token = "0x17000193")]
		private Graph NodeCanvas.Framework.IGraphAssignable.nestedGraph
		{
			[Token(Token = "0x6001171")]
			[Address(RVA = "0xDF5CB4", Offset = "0xDF5CB4", VA = "0xDF5CB4", Slot = "39")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001172")]
			[Address(RVA = "0xDF5CBC", Offset = "0xDF5CBC", VA = "0xDF5CBC", Slot = "40")]
			set
			{
			}
		}

		[Token(Token = "0x6001173")]
		[Address(RVA = "0xDF5D94", Offset = "0xDF5D94", VA = "0xDF5D94", Slot = "41")]
		private Graph[] NodeCanvas.Framework.IGraphAssignable.GetInstances()
		{
			return null;
		}

		[Token(Token = "0x6001174")]
		[Address(RVA = "0xDF5E58", Offset = "0xDF5E58", VA = "0xDF5E58")]
		public void CheckInstance()
		{
		}

		[Token(Token = "0x6001175")]
		[Address(RVA = "0xDF5F50", Offset = "0xDF5F50", VA = "0xDF5F50", Slot = "42")]
		private void NodeCanvas.Framework.IUpdatable.Update()
		{
		}

		[Token(Token = "0x6001176")]
		[Address(RVA = "0xDF5FF4", Offset = "0xDF5FF4", VA = "0xDF5FF4", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001177")]
		[Address(RVA = "0xDF6638", Offset = "0xDF6638", VA = "0xDF6638")]
		public MacroNodeWrapper()
		{
		}
	}
	[Token(Token = "0x2000322")]
	[DoNotList]
	[AttributeAttribute(Name = "IconAttribute", RVA = "0x977154", Offset = "0x977154")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x977154", Offset = "0x977154")]
	[ProtectedSingleton]
	public class MacroOutputNode : FlowNode
	{
		[Token(Token = "0x20007B7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979C7C", Offset = "0x979C7C")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x400211C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DynamicPortDefinition def;

			[Token(Token = "0x400211D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MacroOutputNode <>4__this;

			[Token(Token = "0x60026F3")]
			[Address(RVA = "0xDF6C24", Offset = "0xDF6C24", VA = "0xDF6C24")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x60026F4")]
			[Address(RVA = "0xDF6C34", Offset = "0xDF6C34", VA = "0xDF6C34")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x17000194")]
		public override Alignment2x2 iconAlignment
		{
			[Token(Token = "0x6001178")]
			[Address(RVA = "0xDF6804", Offset = "0xDF6804", VA = "0xDF6804", Slot = "14")]
			get
			{
				return default(Alignment2x2);
			}
		}

		[Token(Token = "0x17000195")]
		private Macro macro
		{
			[Token(Token = "0x6001179")]
			[Address(RVA = "0xDF680C", Offset = "0xDF680C", VA = "0xDF680C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600117A")]
		[Address(RVA = "0xDF6898", Offset = "0xDF6898", VA = "0xDF6898", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x600117B")]
		[Address(RVA = "0xDF6C2C", Offset = "0xDF6C2C", VA = "0xDF6C2C")]
		public MacroOutputNode()
		{
		}
	}
}
namespace NodeCanvas.Framework
{
	[Token(Token = "0x2000323")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x9771F4", Offset = "0x9771F4")]
	public class GraphInfoAttribute : Attribute
	{
		[Token(Token = "0x4000BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string packageName;

		[Token(Token = "0x4000BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string docsURL;

		[Token(Token = "0x4000BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string resourcesURL;

		[Token(Token = "0x4000BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string forumsURL;

		[Token(Token = "0x600117C")]
		[Address(RVA = "0xF68FF0", Offset = "0xF68FF0", VA = "0xF68FF0")]
		public GraphInfoAttribute()
		{
		}
	}
	[Token(Token = "0x2000324")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x977208", Offset = "0x977208")]
	public class ToolbarMenuItemAttribute : Attribute
	{
		[Token(Token = "0x4000BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string path;

		[Token(Token = "0x600117D")]
		[Address(RVA = "0x1705150", Offset = "0x1705150", VA = "0x1705150")]
		public ToolbarMenuItemAttribute(string path)
		{
		}
	}
	[Token(Token = "0x2000325")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x97721C", Offset = "0x97721C")]
	public class BlackboardOnlyAttribute : Attribute
	{
		[Token(Token = "0x600117E")]
		[Address(RVA = "0xF5F740", Offset = "0xF5F740", VA = "0xF5F740")]
		public BlackboardOnlyAttribute()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000326")]
	public class CanvasGroup
	{
		[Token(Token = "0x4000BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4000BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Rect rect;

		[Token(Token = "0x4000BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color color;

		[Token(Token = "0x600117F")]
		[Address(RVA = "0xF5F748", Offset = "0xF5F748", VA = "0xF5F748")]
		public CanvasGroup()
		{
		}

		[Token(Token = "0x6001180")]
		[Address(RVA = "0xF5F750", Offset = "0xF5F750", VA = "0xF5F750")]
		public CanvasGroup(Rect rect, string name)
		{
		}
	}
	[Token(Token = "0x2000327")]
	[SpoofAOT]
	public abstract class Connection : IGraphElement
	{
		[Token(Token = "0x4000BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Node _sourceNode;

		[Token(Token = "0x4000BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Node _targetNode;

		[Token(Token = "0x4000BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool _isDisabled;

		[NonSerialized]
		[Token(Token = "0x4000BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Status _status;

		[Token(Token = "0x17000196")]
		public Node sourceNode
		{
			[Token(Token = "0x6001181")]
			[Address(RVA = "0xF60A54", Offset = "0xF60A54", VA = "0xF60A54")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001182")]
			[Address(RVA = "0xF60A5C", Offset = "0xF60A5C", VA = "0xF60A5C")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000197")]
		public Node targetNode
		{
			[Token(Token = "0x6001183")]
			[Address(RVA = "0xF60A64", Offset = "0xF60A64", VA = "0xF60A64")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001184")]
			[Address(RVA = "0xF60A6C", Offset = "0xF60A6C", VA = "0xF60A6C")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000198")]
		public bool isActive
		{
			[Token(Token = "0x6001185")]
			[Address(RVA = "0xF60A74", Offset = "0xF60A74", VA = "0xF60A74")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001186")]
			[Address(RVA = "0xF60A84", Offset = "0xF60A84", VA = "0xF60A84")]
			set
			{
			}
		}

		[Token(Token = "0x17000199")]
		public Status status
		{
			[Token(Token = "0x6001187")]
			[Address(RVA = "0xF60B14", Offset = "0xF60B14", VA = "0xF60B14")]
			get
			{
				return default(Status);
			}
			[Token(Token = "0x6001188")]
			[Address(RVA = "0xF60B1C", Offset = "0xF60B1C", VA = "0xF60B1C")]
			set
			{
			}
		}

		[Token(Token = "0x1700019A")]
		public Graph graph
		{
			[Token(Token = "0x6001189")]
			[Address(RVA = "0xF60B24", Offset = "0xF60B24", VA = "0xF60B24", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600118A")]
		[Address(RVA = "0xF60B44", Offset = "0xF60B44", VA = "0xF60B44")]
		public Connection()
		{
		}

		[Token(Token = "0x600118B")]
		[Address(RVA = "0xF60B54", Offset = "0xF60B54", VA = "0xF60B54")]
		public static Connection Create(Node source, Node target, int sourceIndex = -1, int targetIndex = -1)
		{
			return null;
		}

		[Token(Token = "0x600118C")]
		[Address(RVA = "0xF612D4", Offset = "0xF612D4", VA = "0xF612D4")]
		public Connection Duplicate(Node newSource, Node newTarget)
		{
			return null;
		}

		[Token(Token = "0x600118D")]
		[Address(RVA = "0xF615BC", Offset = "0xF615BC", VA = "0xF615BC", Slot = "5")]
		public virtual void OnCreate(int sourceIndex, int targetIndex)
		{
		}

		[Token(Token = "0x600118E")]
		[Address(RVA = "0xF615C0", Offset = "0xF615C0", VA = "0xF615C0", Slot = "6")]
		public virtual void OnValidate(int sourceIndex, int targetIndex)
		{
		}

		[Token(Token = "0x600118F")]
		[Address(RVA = "0xF615C4", Offset = "0xF615C4", VA = "0xF615C4", Slot = "7")]
		public virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001190")]
		[Address(RVA = "0xF60E70", Offset = "0xF60E70", VA = "0xF60E70")]
		public int SetSourceNode(Node newSource, int index = -1)
		{
			return default(int);
		}

		[Token(Token = "0x6001191")]
		[Address(RVA = "0xF610A0", Offset = "0xF610A0", VA = "0xF610A0")]
		public int SetTargetNode(Node newTarget, int index = -1)
		{
			return default(int);
		}

		[Token(Token = "0x6001192")]
		[Address(RVA = "0xF615D8", Offset = "0xF615D8", VA = "0xF615D8", Slot = "3")]
		public sealed override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001193")]
		[Address(RVA = "0xF61658", Offset = "0xF61658", VA = "0xF61658")]
		public Status Execute(UnityEngine.Component agent, IBlackboard blackboard)
		{
			return default(Status);
		}

		[Token(Token = "0x6001194")]
		[Address(RVA = "0xF60AC8", Offset = "0xF60AC8", VA = "0xF60AC8")]
		public void Reset(bool recursively = true)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000328")]
	public abstract class Graph : ScriptableObject, ITaskSystem, ISerializationCallbackReceiver
	{
		[Token(Token = "0x20007B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979C8C", Offset = "0x979C8C")]
		private sealed class <>c__DisplayClass111_0
		{
			[Token(Token = "0x400211E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Graph targetGraph;

			[Token(Token = "0x60026F5")]
			[Address(RVA = "0xF64E9C", Offset = "0xF64E9C", VA = "0xF64E9C")]
			public <>c__DisplayClass111_0()
			{
			}

			[Token(Token = "0x60026F6")]
			[Address(RVA = "0xF68E6C", Offset = "0xF68E6C", VA = "0xF68E6C")]
			internal bool <CloneNodes>b__0(Node n)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20007B9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979C9C", Offset = "0x979C9C")]
		private sealed class <>c
		{
			[Token(Token = "0x400211F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002120")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Node, bool> <>9__116_0;

			[Token(Token = "0x4002121")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Node, int> <>9__116_1;

			[Token(Token = "0x4002122")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<Node, bool> <>9__134_0;

			[Token(Token = "0x4002123")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<Node, bool> <>9__135_0;

			[Token(Token = "0x4002124")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<BBParameter, bool> <>9__150_0;

			[Token(Token = "0x60026F8")]
			[Address(RVA = "0xF68C90", Offset = "0xF68C90", VA = "0xF68C90")]
			public <>c()
			{
			}

			[Token(Token = "0x60026F9")]
			[Address(RVA = "0xF68C98", Offset = "0xF68C98", VA = "0xF68C98")]
			internal bool <UpdateNodeIDs>b__116_0(Node n)
			{
				return default(bool);
			}

			[Token(Token = "0x60026FA")]
			[Address(RVA = "0xF68D10", Offset = "0xF68D10", VA = "0xF68D10")]
			internal int <UpdateNodeIDs>b__116_1(Node n)
			{
				return default(int);
			}

			[Token(Token = "0x60026FB")]
			[Address(RVA = "0xF68D4C", Offset = "0xF68D4C", VA = "0xF68D4C")]
			internal bool <GetRootNodes>b__134_0(Node n)
			{
				return default(bool);
			}

			[Token(Token = "0x60026FC")]
			[Address(RVA = "0xF68DC4", Offset = "0xF68DC4", VA = "0xF68DC4")]
			internal bool <GetLeafNodes>b__135_0(Node n)
			{
				return default(bool);
			}

			[Token(Token = "0x60026FD")]
			[Address(RVA = "0xF68E3C", Offset = "0xF68E3C", VA = "0xF68E3C")]
			internal bool <GetDefinedParameters>b__150_0(BBParameter p)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20007BA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979CAC", Offset = "0x979CAC")]
		private sealed class <>c__DisplayClass129_0
		{
			[Token(Token = "0x4002125")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int searchID;

			[Token(Token = "0x60026FE")]
			[Address(RVA = "0xF664B8", Offset = "0xF664B8", VA = "0xF664B8")]
			public <>c__DisplayClass129_0()
			{
			}

			[Token(Token = "0x60026FF")]
			[Address(RVA = "0xF68EFC", Offset = "0xF68EFC", VA = "0xF68EFC")]
			internal bool <GetNodeWithID>b__0(Node n)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20007BB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979CBC", Offset = "0x979CBC")]
		private sealed class <>c__DisplayClass156_0
		{
			[Token(Token = "0x4002126")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Node node;

			[Token(Token = "0x6002700")]
			[Address(RVA = "0xF6851C", Offset = "0xF6851C", VA = "0xF6851C")]
			public <>c__DisplayClass156_0()
			{
			}

			[Token(Token = "0x6002701")]
			[Address(RVA = "0xF68F38", Offset = "0xF68F38", VA = "0xF68F38")]
			internal bool <RemoveNode>b__0(Node n)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string _serializedGraph;

		[Token(Token = "0x4000BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<UnityEngine.Object> _objectReferences;

		[Token(Token = "0x4000BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool _deserializationFailed;

		[NonSerialized]
		[Token(Token = "0x4000BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool hasDeserialized;

		[Token(Token = "0x4000BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string _category;

		[Token(Token = "0x4000BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string _comments;

		[Token(Token = "0x4000BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector2 _translation;

		[Token(Token = "0x4000BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float _zoomFactor;

		[Token(Token = "0x4000BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Node> _nodes;

		[Token(Token = "0x4000BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<CanvasGroup> _canvasGroups;

		[Token(Token = "0x4000BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private BlackboardSource _localBlackboard;

		[NonSerialized]
		[Token(Token = "0x4000BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private UnityEngine.Component _agent;

		[NonSerialized]
		[Token(Token = "0x4000BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private IBlackboard _blackboard;

		[NonSerialized]
		[Token(Token = "0x4000BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static List<Graph> runningGraphs;

		[NonSerialized]
		[Token(Token = "0x4000BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float timeStarted;

		[NonSerialized]
		[Token(Token = "0x4000BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool initialReferencesUpdated;

		[NonSerialized]
		[Token(Token = "0x4000BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
		private bool _isAutoUpdated;

		[NonSerialized]
		[Token(Token = "0x4000BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x86")]
		private bool _isRunning;

		[NonSerialized]
		[Token(Token = "0x4000BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x87")]
		private bool _isPaused;

		[Token(Token = "0x4000BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97FDD4", Offset = "0x97FDD4")]
		private Graph <parentGraph>k__BackingField;

		[Token(Token = "0x1700019B")]
		public abstract Type baseNodeType
		{
			[Token(Token = "0x60011B1")]
			get;
		}

		[Token(Token = "0x1700019C")]
		public abstract bool requiresAgent
		{
			[Token(Token = "0x60011B2")]
			get;
		}

		[Token(Token = "0x1700019D")]
		public abstract bool requiresPrimeNode
		{
			[Token(Token = "0x60011B3")]
			get;
		}

		[Token(Token = "0x1700019E")]
		public abstract bool isTree
		{
			[Token(Token = "0x60011B4")]
			get;
		}

		[Token(Token = "0x1700019F")]
		public abstract bool useLocalBlackboard
		{
			[Token(Token = "0x60011B5")]
			get;
		}

		[Token(Token = "0x170001A0")]
		public abstract bool canAcceptVariableDrops
		{
			[Token(Token = "0x60011B6")]
			get;
		}

		[Token(Token = "0x170001A1")]
		public Graph parentGraph
		{
			[Token(Token = "0x60011B7")]
			[Address(RVA = "0xF63E04", Offset = "0xF63E04", VA = "0xF63E04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9867B4", Offset = "0x9867B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011B8")]
			[Address(RVA = "0xF63E0C", Offset = "0xF63E0C", VA = "0xF63E0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9867C4", Offset = "0x9867C4")]
			private set
			{
			}
		}

		[Token(Token = "0x170001A2")]
		public new string name
		{
			[Token(Token = "0x60011B9")]
			[Address(RVA = "0xF63E14", Offset = "0xF63E14", VA = "0xF63E14")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011BA")]
			[Address(RVA = "0xF63E1C", Offset = "0xF63E1C", VA = "0xF63E1C")]
			set
			{
			}
		}

		[Token(Token = "0x170001A3")]
		public string category
		{
			[Token(Token = "0x60011BB")]
			[Address(RVA = "0xF63E24", Offset = "0xF63E24", VA = "0xF63E24")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011BC")]
			[Address(RVA = "0xF63E2C", Offset = "0xF63E2C", VA = "0xF63E2C")]
			set
			{
			}
		}

		[Token(Token = "0x170001A4")]
		public string comments
		{
			[Token(Token = "0x60011BD")]
			[Address(RVA = "0xF63E34", Offset = "0xF63E34", VA = "0xF63E34")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011BE")]
			[Address(RVA = "0xF63E3C", Offset = "0xF63E3C", VA = "0xF63E3C")]
			set
			{
			}
		}

		[Token(Token = "0x170001A5")]
		public float elapsedTime
		{
			[Token(Token = "0x60011BF")]
			[Address(RVA = "0xF63E44", Offset = "0xF63E44", VA = "0xF63E44", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001A6")]
		public bool isRunning
		{
			[Token(Token = "0x60011C0")]
			[Address(RVA = "0xF63E88", Offset = "0xF63E88", VA = "0xF63E88")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011C1")]
			[Address(RVA = "0xF63E98", Offset = "0xF63E98", VA = "0xF63E98")]
			private set
			{
			}
		}

		[Token(Token = "0x170001A7")]
		public bool isPaused
		{
			[Token(Token = "0x60011C2")]
			[Address(RVA = "0xF63E90", Offset = "0xF63E90", VA = "0xF63E90")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011C3")]
			[Address(RVA = "0xF63EA4", Offset = "0xF63EA4", VA = "0xF63EA4")]
			private set
			{
			}
		}

		[Token(Token = "0x170001A8")]
		public bool isAutoUpdated
		{
			[Token(Token = "0x60011C4")]
			[Address(RVA = "0xF63EB0", Offset = "0xF63EB0", VA = "0xF63EB0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011C5")]
			[Address(RVA = "0xF63EB8", Offset = "0xF63EB8", VA = "0xF63EB8")]
			private set
			{
			}
		}

		[Token(Token = "0x170001A9")]
		public List<Node> allNodes
		{
			[Token(Token = "0x60011C6")]
			[Address(RVA = "0xF63B9C", Offset = "0xF63B9C", VA = "0xF63B9C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011C7")]
			[Address(RVA = "0xF63EC4", Offset = "0xF63EC4", VA = "0xF63EC4")]
			private set
			{
			}
		}

		[Token(Token = "0x170001AA")]
		public Node primeNode
		{
			[Token(Token = "0x60011C8")]
			[Address(RVA = "0xF63ECC", Offset = "0xF63ECC", VA = "0xF63ECC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011C9")]
			[Address(RVA = "0xF63FB0", Offset = "0xF63FB0", VA = "0xF63FB0")]
			set
			{
			}
		}

		[Token(Token = "0x170001AB")]
		public List<CanvasGroup> canvasGroups
		{
			[Token(Token = "0x60011CA")]
			[Address(RVA = "0xF640FC", Offset = "0xF640FC", VA = "0xF640FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011CB")]
			[Address(RVA = "0xF64104", Offset = "0xF64104", VA = "0xF64104")]
			set
			{
			}
		}

		[Token(Token = "0x170001AC")]
		public Vector2 translation
		{
			[Token(Token = "0x60011CC")]
			[Address(RVA = "0xF6410C", Offset = "0xF6410C", VA = "0xF6410C")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x60011CD")]
			[Address(RVA = "0xF64114", Offset = "0xF64114", VA = "0xF64114")]
			set
			{
			}
		}

		[Token(Token = "0x170001AD")]
		public float zoomFactor
		{
			[Token(Token = "0x60011CE")]
			[Address(RVA = "0xF6411C", Offset = "0xF6411C", VA = "0xF6411C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60011CF")]
			[Address(RVA = "0xF64124", Offset = "0xF64124", VA = "0xF64124")]
			set
			{
			}
		}

		[Token(Token = "0x170001AE")]
		public UnityEngine.Component agent
		{
			[Token(Token = "0x60011D0")]
			[Address(RVA = "0xF6412C", Offset = "0xF6412C", VA = "0xF6412C", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011D1")]
			[Address(RVA = "0xF64134", Offset = "0xF64134", VA = "0xF64134")]
			private set
			{
			}
		}

		[Token(Token = "0x170001AF")]
		public IBlackboard blackboard
		{
			[Token(Token = "0x60011D2")]
			[Address(RVA = "0xF6413C", Offset = "0xF6413C", VA = "0xF6413C", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011D3")]
			[Address(RVA = "0xF6417C", Offset = "0xF6417C", VA = "0xF6417C")]
			private set
			{
			}
		}

		[Token(Token = "0x170001B0")]
		public BlackboardSource localBlackboard
		{
			[Token(Token = "0x60011D4")]
			[Address(RVA = "0xF63BA4", Offset = "0xF63BA4", VA = "0xF63BA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B1")]
		private UnityEngine.Object NodeCanvas.Framework.ITaskSystem.contextObject
		{
			[Token(Token = "0x60011D5")]
			[Address(RVA = "0xF641CC", Offset = "0xF641CC", VA = "0xF641CC", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000034")]
		public static event Action<Graph> onGraphSerialized
		{
			[Token(Token = "0x6001195")]
			[Address(RVA = "0xF61F80", Offset = "0xF61F80", VA = "0xF61F80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986754", Offset = "0x986754")]
			add
			{
			}
			[Token(Token = "0x6001196")]
			[Address(RVA = "0xF620AC", Offset = "0xF620AC", VA = "0xF620AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986764", Offset = "0x986764")]
			remove
			{
			}
		}

		[Token(Token = "0x14000035")]
		public static event Action<Graph> onGraphDeserialized
		{
			[Token(Token = "0x6001197")]
			[Address(RVA = "0xF621D8", Offset = "0xF621D8", VA = "0xF621D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986774", Offset = "0x986774")]
			add
			{
			}
			[Token(Token = "0x6001198")]
			[Address(RVA = "0xF62308", Offset = "0xF62308", VA = "0xF62308")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986784", Offset = "0x986784")]
			remove
			{
			}
		}

		[Token(Token = "0x14000036")]
		public event Action<bool> onFinish
		{
			[Token(Token = "0x60011AF")]
			[Address(RVA = "0xF63C2C", Offset = "0xF63C2C", VA = "0xF63C2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986794", Offset = "0x986794")]
			add
			{
			}
			[Token(Token = "0x60011B0")]
			[Address(RVA = "0xF63D18", Offset = "0xF63D18", VA = "0xF63D18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9867A4", Offset = "0x9867A4")]
			remove
			{
			}
		}

		[Token(Token = "0x6001199")]
		[Address(RVA = "0xF62438", Offset = "0xF62438", VA = "0xF62438", Slot = "11")]
		private void UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize()
		{
		}

		[Token(Token = "0x600119A")]
		[Address(RVA = "0xF625B4", Offset = "0xF625B4", VA = "0xF625B4", Slot = "12")]
		private void UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize()
		{
		}

		[Token(Token = "0x600119B")]
		[Address(RVA = "0xF6277C", Offset = "0xF6277C", VA = "0xF6277C")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x600119C")]
		[Address(RVA = "0xF62B1C", Offset = "0xF62B1C", VA = "0xF62B1C")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x600119D")]
		[Address(RVA = "0xF62B20", Offset = "0xF62B20", VA = "0xF62B20")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x600119E")]
		[Address(RVA = "0xF62B24", Offset = "0xF62B24", VA = "0xF62B24")]
		protected void OnValidate()
		{
		}

		[Token(Token = "0x600119F")]
		[Address(RVA = "0xF62B28", Offset = "0xF62B28", VA = "0xF62B28")]
		protected void Reset()
		{
		}

		[Token(Token = "0x60011A0")]
		[Address(RVA = "0xF6243C", Offset = "0xF6243C", VA = "0xF6243C")]
		public void Serialize()
		{
		}

		[Token(Token = "0x60011A1")]
		[Address(RVA = "0xF625B8", Offset = "0xF625B8", VA = "0xF625B8")]
		public void Deserialize()
		{
		}

		[Token(Token = "0x60011A2")]
		[Address(RVA = "0xF62CC4", Offset = "0xF62CC4", VA = "0xF62CC4")]
		public string Serialize(bool pretyJson, List<UnityEngine.Object> objectReferences)
		{
			return null;
		}

		[Token(Token = "0x60011A3")]
		[Address(RVA = "0xF62B2C", Offset = "0xF62B2C", VA = "0xF62B2C")]
		public GraphSerializationData Deserialize(string serializedGraph, bool validate, List<UnityEngine.Object> objectReferences)
		{
			return null;
		}

		[Token(Token = "0x60011A4")]
		[Address(RVA = "0xF63480", Offset = "0xF63480", VA = "0xF63480")]
		private bool LoadGraphData(GraphSerializationData data, bool validate)
		{
			return default(bool);
		}

		[Token(Token = "0x60011A5")]
		[Address(RVA = "0xF6385C", Offset = "0xF6385C", VA = "0xF6385C", Slot = "13")]
		public virtual object OnDerivedDataSerialization()
		{
			return null;
		}

		[Token(Token = "0x60011A6")]
		[Address(RVA = "0xF63864", Offset = "0xF63864", VA = "0xF63864", Slot = "14")]
		public virtual void OnDerivedDataDeserialization(object data)
		{
		}

		[Token(Token = "0x60011A7")]
		[Address(RVA = "0xF63868", Offset = "0xF63868", VA = "0xF63868")]
		public void GetSerializationData(out string json, out List<UnityEngine.Object> references)
		{
		}

		[Token(Token = "0x60011A8")]
		[Address(RVA = "0xF638FC", Offset = "0xF638FC", VA = "0xF638FC")]
		public void SetSerializationObjectReferences(List<UnityEngine.Object> references)
		{
		}

		[Token(Token = "0x60011A9")]
		[Address(RVA = "0xF63904", Offset = "0xF63904", VA = "0xF63904")]
		public string SerializeLocalBlackboard()
		{
			return null;
		}

		[Token(Token = "0x60011AA")]
		[Address(RVA = "0xF639C8", Offset = "0xF639C8", VA = "0xF639C8")]
		public bool DeserializeLocalBlackboard(string json)
		{
			return default(bool);
		}

		[Token(Token = "0x60011AB")]
		public static T Clone<T>(T graph, Graph parentGraph) where T : Graph
		{
			return null;
		}

		[Token(Token = "0x60011AC")]
		[Address(RVA = "0xF63B34", Offset = "0xF63B34", VA = "0xF63B34")]
		public void CopySerialized(Graph target)
		{
		}

		[Token(Token = "0x60011AD")]
		[Address(RVA = "0xF6278C", Offset = "0xF6278C", VA = "0xF6278C")]
		public void Validate()
		{
		}

		[Token(Token = "0x60011AE")]
		[Address(RVA = "0xF63C28", Offset = "0xF63C28", VA = "0xF63C28", Slot = "15")]
		protected virtual void OnGraphValidate()
		{
		}

		[Token(Token = "0x60011D6")]
		[Address(RVA = "0xF641D0", Offset = "0xF641D0", VA = "0xF641D0")]
		public static List<Node> CloneNodes(List<Node> originalNodes, [Optional] Graph targetGraph, [Optional] Vector2 originPosition)
		{
			return null;
		}

		[Token(Token = "0x60011D7")]
		[Address(RVA = "0xF6520C", Offset = "0xF6520C", VA = "0xF6520C")]
		public void UpdateReferencesFromOwner(GraphOwner owner)
		{
		}

		[Token(Token = "0x60011D8")]
		[Address(RVA = "0xF652C8", Offset = "0xF652C8", VA = "0xF652C8")]
		public void UpdateReferences(UnityEngine.Component newAgent, IBlackboard newBlackboard)
		{
		}

		[Token(Token = "0x60011D9")]
		[Address(RVA = "0xF653E0", Offset = "0xF653E0", VA = "0xF653E0")]
		private void UpdateNodeBBFields()
		{
		}

		[Token(Token = "0x60011DA")]
		[Address(RVA = "0xF654C8", Offset = "0xF654C8", VA = "0xF654C8", Slot = "8")]
		public void SendTaskOwnerDefaults()
		{
		}

		[Token(Token = "0x60011DB")]
		[Address(RVA = "0xF62E48", Offset = "0xF62E48", VA = "0xF62E48")]
		public void UpdateNodeIDs(bool alsoReorderList)
		{
		}

		[Token(Token = "0x60011DC")]
		[Address(RVA = "0xF655A4", Offset = "0xF655A4", VA = "0xF655A4")]
		private int AssignNodeID(Node node, int lastID, ref Node[] parsed)
		{
			return default(int);
		}

		[Token(Token = "0x60011DD")]
		[Address(RVA = "0xF65724", Offset = "0xF65724", VA = "0xF65724")]
		public void StartGraph(UnityEngine.Component newAgent, IBlackboard newBlackboard, bool autoUpdate, [Optional] Action<bool> callback)
		{
		}

		[Token(Token = "0x60011DE")]
		[Address(RVA = "0xF65C28", Offset = "0xF65C28", VA = "0xF65C28")]
		public void Stop(bool success = true)
		{
		}

		[Token(Token = "0x60011DF")]
		[Address(RVA = "0xF65E2C", Offset = "0xF65E2C", VA = "0xF65E2C")]
		public void Pause()
		{
		}

		[Token(Token = "0x60011E0")]
		[Address(RVA = "0xF65C0C", Offset = "0xF65C0C", VA = "0xF65C0C")]
		public void UpdateGraph()
		{
		}

		[Token(Token = "0x60011E1")]
		[Address(RVA = "0xF65FE0", Offset = "0xF65FE0", VA = "0xF65FE0", Slot = "22")]
		protected virtual void OnGraphStarted()
		{
		}

		[Token(Token = "0x60011E2")]
		[Address(RVA = "0xF65FE4", Offset = "0xF65FE4", VA = "0xF65FE4", Slot = "23")]
		protected virtual void OnGraphUpdate()
		{
		}

		[Token(Token = "0x60011E3")]
		[Address(RVA = "0xF65FE8", Offset = "0xF65FE8", VA = "0xF65FE8", Slot = "24")]
		protected virtual void OnGraphStoped()
		{
		}

		[Token(Token = "0x60011E4")]
		[Address(RVA = "0xF65FEC", Offset = "0xF65FEC", VA = "0xF65FEC", Slot = "25")]
		protected virtual void OnGraphPaused()
		{
		}

		[Token(Token = "0x60011E5")]
		[Address(RVA = "0xF65FF0", Offset = "0xF65FF0", VA = "0xF65FF0", Slot = "26")]
		protected virtual void OnGraphUnpaused()
		{
		}

		[Token(Token = "0x60011E6")]
		[Address(RVA = "0xF65FF4", Offset = "0xF65FF4", VA = "0xF65FF4", Slot = "9")]
		public void SendEvent(EventData eventData, object sender)
		{
		}

		[Token(Token = "0x60011E7")]
		[Address(RVA = "0xF66178", Offset = "0xF66178", VA = "0xF66178")]
		public static void SendGlobalEvent(EventData eventData, object sender)
		{
		}

		[Token(Token = "0x60011E8")]
		[Address(RVA = "0xF66378", Offset = "0xF66378", VA = "0xF66378")]
		public Node GetNodeWithID(int searchID)
		{
			return null;
		}

		[Token(Token = "0x60011E9")]
		public List<T> GetAllNodesOfType<T>() where T : Node
		{
			return null;
		}

		[Token(Token = "0x60011EA")]
		public T GetNodeWithTag<T>(string tagName) where T : Node
		{
			return null;
		}

		[Token(Token = "0x60011EB")]
		public List<T> GetNodesWithTag<T>(string tagName) where T : Node
		{
			return null;
		}

		[Token(Token = "0x60011EC")]
		public List<T> GetAllTagedNodes<T>() where T : Node
		{
			return null;
		}

		[Token(Token = "0x60011ED")]
		[Address(RVA = "0xF664C0", Offset = "0xF664C0", VA = "0xF664C0")]
		public List<Node> GetRootNodes()
		{
			return null;
		}

		[Token(Token = "0x60011EE")]
		[Address(RVA = "0xF665C0", Offset = "0xF665C0", VA = "0xF665C0")]
		public List<Node> GetLeafNodes()
		{
			return null;
		}

		[Token(Token = "0x60011EF")]
		public List<T> GetAllNestedGraphs<T>(bool recursive) where T : Graph
		{
			return null;
		}

		[Token(Token = "0x60011F0")]
		[Address(RVA = "0xF666C0", Offset = "0xF666C0", VA = "0xF666C0")]
		public List<Graph> GetAllInstancedNestedGraphs()
		{
			return null;
		}

		[Token(Token = "0x60011F1")]
		[Address(RVA = "0xF66AB4", Offset = "0xF66AB4", VA = "0xF66AB4")]
		public static Graph GetElementGraph(object obj)
		{
			return null;
		}

		[Token(Token = "0x60011F2")]
		public List<T> GetAllTasksOfType<T>() where T : Task
		{
			return null;
		}

		[Token(Token = "0x60011F3")]
		private void GetObjectTasks<T>(object obj, ref List<T> tasks) where T : Task
		{
		}

		[Token(Token = "0x60011F4")]
		[Address(RVA = "0xF66C50", Offset = "0xF66C50", VA = "0xF66C50")]
		public HierarchyTree.Element GetFlatGraphHierarchy()
		{
			return null;
		}

		[Token(Token = "0x60011F5")]
		[Address(RVA = "0xF66F48", Offset = "0xF66F48", VA = "0xF66F48")]
		public HierarchyTree.Element GetFullGraphHierarchy()
		{
			return null;
		}

		[Token(Token = "0x60011F6")]
		[Address(RVA = "0xF670F8", Offset = "0xF670F8", VA = "0xF670F8")]
		public HierarchyTree.Element GetNestedGraphHierarchy()
		{
			return null;
		}

		[Token(Token = "0x60011F7")]
		[Address(RVA = "0xF66D64", Offset = "0xF66D64", VA = "0xF66D64")]
		private HierarchyTree.Element GetTreeNodeElement(Node node, bool recurse, ref int lastID)
		{
			return null;
		}

		[Token(Token = "0x60011F8")]
		[Address(RVA = "0xF67324", Offset = "0xF67324", VA = "0xF67324")]
		public static HierarchyTree.Element GetTaskAndParametersStructureInTarget(object obj)
		{
			return null;
		}

		[Token(Token = "0x60011F9")]
		[Address(RVA = "0xF676DC", Offset = "0xF676DC", VA = "0xF676DC")]
		public IGraphElement GetTaskParentElement(Task targetTask)
		{
			return null;
		}

		[Token(Token = "0x60011FA")]
		[Address(RVA = "0xF6776C", Offset = "0xF6776C", VA = "0xF6776C")]
		public IGraphElement GetParameterParentElement(BBParameter targetParameter)
		{
			return null;
		}

		[Token(Token = "0x60011FB")]
		[Address(RVA = "0xF61518", Offset = "0xF61518", VA = "0xF61518")]
		public static Task[] GetTasksInElement(IGraphElement target)
		{
			return null;
		}

		[Token(Token = "0x60011FC")]
		[Address(RVA = "0xF677FC", Offset = "0xF677FC", VA = "0xF677FC")]
		public static BBParameter[] GetParametersInElement(IGraphElement target)
		{
			return null;
		}

		[Token(Token = "0x60011FD")]
		[Address(RVA = "0xF678A0", Offset = "0xF678A0", VA = "0xF678A0")]
		public BBParameter[] GetDefinedParameters()
		{
			return null;
		}

		[Token(Token = "0x60011FE")]
		[Address(RVA = "0xF679D0", Offset = "0xF679D0", VA = "0xF679D0")]
		public void PromoteDefinedParametersToVariables(IBlackboard bb)
		{
		}

		[Token(Token = "0x60011FF")]
		public T AddNode<T>() where T : Node
		{
			return null;
		}

		[Token(Token = "0x6001200")]
		public T AddNode<T>(Vector2 pos) where T : Node
		{
			return null;
		}

		[Token(Token = "0x6001201")]
		[Address(RVA = "0xF67A5C", Offset = "0xF67A5C", VA = "0xF67A5C")]
		public Node AddNode(Type nodeType)
		{
			return null;
		}

		[Token(Token = "0x6001202")]
		[Address(RVA = "0xF67AB8", Offset = "0xF67AB8", VA = "0xF67AB8")]
		public Node AddNode(Type nodeType, Vector2 pos)
		{
			return null;
		}

		[Token(Token = "0x6001203")]
		[Address(RVA = "0xF68164", Offset = "0xF68164", VA = "0xF68164")]
		public void RemoveNode(Node node, bool recordUndo = true, bool force = false)
		{
		}

		[Token(Token = "0x6001204")]
		[Address(RVA = "0xF68760", Offset = "0xF68760", VA = "0xF68760")]
		public Connection ConnectNodes(Node sourceNode, Node targetNode, int sourceIndex = -1, int targetIndex = -1)
		{
			return null;
		}

		[Token(Token = "0x6001205")]
		[Address(RVA = "0xF68524", Offset = "0xF68524", VA = "0xF68524")]
		public void RemoveConnection(Connection connection, bool recordUndo = true)
		{
		}

		[Token(Token = "0x6001206")]
		[Address(RVA = "0xF60E6C", Offset = "0xF60E6C", VA = "0xF60E6C", Slot = "10")]
		public void RecordUndo(string name)
		{
		}

		[Token(Token = "0x6001207")]
		[Address(RVA = "0xF68A50", Offset = "0xF68A50", VA = "0xF68A50")]
		public void ClearGraph()
		{
		}

		[Token(Token = "0x6001208")]
		[Address(RVA = "0xF68B1C", Offset = "0xF68B1C", VA = "0xF68B1C")]
		protected Graph()
		{
		}
	}
	[Token(Token = "0x2000329")]
	public abstract class GraphOwner : MonoBehaviour
	{
		[Token(Token = "0x20007BC")]
		public enum EnableAction
		{
			[Token(Token = "0x4002128")]
			EnableBehaviour,
			[Token(Token = "0x4002129")]
			DoNothing
		}

		[Token(Token = "0x20007BD")]
		public enum DisableAction
		{
			[Token(Token = "0x400212B")]
			DisableBehaviour,
			[Token(Token = "0x400212C")]
			PauseBehaviour,
			[Token(Token = "0x400212D")]
			DoNothing
		}

		[Token(Token = "0x4000BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string boundGraphSerialization;

		[Token(Token = "0x4000BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<UnityEngine.Object> boundGraphObjectReferences;

		[Token(Token = "0x4000BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public EnableAction enableAction;

		[Token(Token = "0x4000BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[HideInInspector]
		public DisableAction disableAction;

		[Token(Token = "0x4000BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Action<GraphOwner> onOwnerBehaviourStateChange;

		[Token(Token = "0x4000BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<Graph, Graph> instances;

		[Token(Token = "0x4000BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool initialized;

		[Token(Token = "0x4000BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool startCalled;

		[Token(Token = "0x4000BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static bool isQuiting;

		[Token(Token = "0x170001B2")]
		public abstract Graph graph
		{
			[Token(Token = "0x600120A")]
			get;
			[Token(Token = "0x600120B")]
			set;
		}

		[Token(Token = "0x170001B3")]
		public abstract IBlackboard blackboard
		{
			[Token(Token = "0x600120C")]
			get;
			[Token(Token = "0x600120D")]
			set;
		}

		[Token(Token = "0x170001B4")]
		public abstract Type graphType
		{
			[Token(Token = "0x600120E")]
			get;
		}

		[Token(Token = "0x170001B5")]
		public bool isRunning
		{
			[Token(Token = "0x600120F")]
			[Address(RVA = "0xF68FF8", Offset = "0xF68FF8", VA = "0xF68FF8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001B6")]
		public bool isPaused
		{
			[Token(Token = "0x6001210")]
			[Address(RVA = "0xF690B4", Offset = "0xF690B4", VA = "0xF690B4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001B7")]
		public float elapsedTime
		{
			[Token(Token = "0x6001211")]
			[Address(RVA = "0xF69170", Offset = "0xF69170", VA = "0xF69170")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001212")]
		[Address(RVA = "0xF69248", Offset = "0xF69248", VA = "0xF69248")]
		protected Graph GetInstance(Graph originalGraph)
		{
			return null;
		}

		[Token(Token = "0x6001213")]
		[Address(RVA = "0xF693AC", Offset = "0xF693AC", VA = "0xF693AC")]
		public void StartBehaviour()
		{
		}

		[Token(Token = "0x6001214")]
		[Address(RVA = "0xF69514", Offset = "0xF69514", VA = "0xF69514")]
		public void StartBehaviour(Action<bool> callback)
		{
		}

		[Token(Token = "0x6001215")]
		[Address(RVA = "0xF693B8", Offset = "0xF693B8", VA = "0xF693B8")]
		public void StartBehaviour(bool autoUpdate, Action<bool> callback)
		{
		}

		[Token(Token = "0x6001216")]
		[Address(RVA = "0xF69524", Offset = "0xF69524", VA = "0xF69524")]
		public void PauseBehaviour()
		{
		}

		[Token(Token = "0x6001217")]
		[Address(RVA = "0xF69608", Offset = "0xF69608", VA = "0xF69608")]
		public void StopBehaviour(bool success = true)
		{
		}

		[Token(Token = "0x6001218")]
		[Address(RVA = "0xF69700", Offset = "0xF69700", VA = "0xF69700")]
		public void UpdateBehaviour()
		{
		}

		[Token(Token = "0x6001219")]
		[Address(RVA = "0xF697CC", Offset = "0xF697CC", VA = "0xF697CC")]
		public void RestartBehaviour()
		{
		}

		[Token(Token = "0x600121A")]
		[Address(RVA = "0xF697FC", Offset = "0xF697FC", VA = "0xF697FC")]
		public void SendEvent(string eventName)
		{
		}

		[Token(Token = "0x600121B")]
		public void SendEvent<T>(string eventName, T eventValue)
		{
		}

		[Token(Token = "0x600121C")]
		[Address(RVA = "0xF69874", Offset = "0xF69874", VA = "0xF69874")]
		public void SendEvent(EventData eventData, object sender)
		{
		}

		[Token(Token = "0x600121D")]
		[Address(RVA = "0xF69948", Offset = "0xF69948", VA = "0xF69948")]
		public void Initialize()
		{
		}

		[Token(Token = "0x600121E")]
		[Address(RVA = "0xF69C2C", Offset = "0xF69C2C", VA = "0xF69C2C")]
		protected void Awake()
		{
		}

		[Token(Token = "0x600121F")]
		[Address(RVA = "0xF69C30", Offset = "0xF69C30", VA = "0xF69C30")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x6001220")]
		[Address(RVA = "0xF69C50", Offset = "0xF69C50", VA = "0xF69C50")]
		protected void Start()
		{
		}

		[Token(Token = "0x6001221")]
		[Address(RVA = "0xF69C70", Offset = "0xF69C70", VA = "0xF69C70")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x6001222")]
		[Address(RVA = "0xF69CF8", Offset = "0xF69CF8", VA = "0xF69CF8")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x6001223")]
		[Address(RVA = "0xF6A00C", Offset = "0xF6A00C", VA = "0xF6A00C")]
		protected void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001224")]
		[Address(RVA = "0xF6A060", Offset = "0xF6A060", VA = "0xF6A060")]
		protected GraphOwner()
		{
		}
	}
	[Token(Token = "0x200032A")]
	public abstract class GraphOwner<T> : GraphOwner where T : Graph
	{
		[Token(Token = "0x4000BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private T _graph;

		[Token(Token = "0x4000BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private UnityEngine.Object _blackboard;

		[Token(Token = "0x170001B8")]
		public sealed override Graph graph
		{
			[Token(Token = "0x6001225")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001226")]
			set
			{
			}
		}

		[Token(Token = "0x170001B9")]
		public T behaviour
		{
			[Token(Token = "0x6001227")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001228")]
			set
			{
			}
		}

		[Token(Token = "0x170001BA")]
		public sealed override IBlackboard blackboard
		{
			[Token(Token = "0x6001229")]
			get
			{
				return null;
			}
			[Token(Token = "0x600122A")]
			set
			{
			}
		}

		[Token(Token = "0x170001BB")]
		public sealed override Type graphType
		{
			[Token(Token = "0x600122B")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600122C")]
		public void StartBehaviour(T newGraph)
		{
		}

		[Token(Token = "0x600122D")]
		public void StartBehaviour(T newGraph, Action<bool> callback)
		{
		}

		[Token(Token = "0x600122E")]
		public void StartBehaviour(T newGraph, bool autoUpdate, Action<bool> callback)
		{
		}

		[Token(Token = "0x600122F")]
		public void SwitchBehaviour(T newGraph)
		{
		}

		[Token(Token = "0x6001230")]
		public void SwitchBehaviour(T newGraph, Action<bool> callback)
		{
		}

		[Token(Token = "0x6001231")]
		public void SwitchBehaviour(T newGraph, bool autoUpdate, Action<bool> callback)
		{
		}

		[Token(Token = "0x6001232")]
		protected GraphOwner()
		{
		}
	}
	[Token(Token = "0x200032B")]
	public interface IUpdatable
	{
		[Token(Token = "0x6001233")]
		void Update();
	}
	[Token(Token = "0x200032C")]
	public interface IInvokable
	{
		[Token(Token = "0x6001234")]
		string GetInvocationID();

		[Token(Token = "0x6001235")]
		object Invoke(params object[] args);

		[Token(Token = "0x6001236")]
		void InvokeAsync(Action<object> callback, params object[] args);
	}
	[Token(Token = "0x200032D")]
	public interface IGraphAssignable
	{
		[Token(Token = "0x170001BC")]
		Graph nestedGraph
		{
			[Token(Token = "0x6001237")]
			get;
			[Token(Token = "0x6001238")]
			set;
		}

		[Token(Token = "0x6001239")]
		Graph[] GetInstances();
	}
	[Token(Token = "0x200032E")]
	public interface ITaskAssignable
	{
		[Token(Token = "0x170001BD")]
		Task task
		{
			[Token(Token = "0x600123A")]
			get;
			[Token(Token = "0x600123B")]
			set;
		}
	}
	[Token(Token = "0x200032F")]
	public interface ITaskAssignable<T> : ITaskAssignable where T : Task
	{
	}
	[Token(Token = "0x2000330")]
	public interface ISubTasksContainer
	{
		[Token(Token = "0x600123C")]
		Task[] GetSubTasks();
	}
	[Token(Token = "0x2000331")]
	public interface ISubParametersContainer
	{
		[Token(Token = "0x600123D")]
		BBParameter[] GetSubParameters();
	}
	[Token(Token = "0x2000332")]
	public interface IGraphElement
	{
		[Token(Token = "0x170001BE")]
		Graph graph
		{
			[Token(Token = "0x600123E")]
			get;
		}
	}
	[Token(Token = "0x2000333")]
	public interface IReflectedWrapper
	{
		[Token(Token = "0x600123F")]
		MemberInfo GetMemberInfo();
	}
	[Serializable]
	[Token(Token = "0x2000334")]
	[SpoofAOT]
	public abstract class Node : IGraphElement
	{
		[Token(Token = "0x20007BE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979CCC", Offset = "0x979CCC")]
		private sealed class <YieldBreak>d__85 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400212E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400212F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002130")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action resume;

			[Token(Token = "0x17000397")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002705")]
				[Address(RVA = "0x1702C5C", Offset = "0x1702C5C", VA = "0x1702C5C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000398")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002707")]
				[Address(RVA = "0x1702CCC", Offset = "0x1702CCC", VA = "0x1702CCC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002702")]
			[Address(RVA = "0x1702B74", Offset = "0x1702B74", VA = "0x1702B74")]
			[DebuggerHidden]
			public <YieldBreak>d__85(int <>1__state)
			{
			}

			[Token(Token = "0x6002703")]
			[Address(RVA = "0x1702BA0", Offset = "0x1702BA0", VA = "0x1702BA0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002704")]
			[Address(RVA = "0x1702BA4", Offset = "0x1702BA4", VA = "0x1702BA4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002706")]
			[Address(RVA = "0x1702C64", Offset = "0x1702C64", VA = "0x1702C64", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007BF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979CDC", Offset = "0x979CDC")]
		private sealed class <>c__DisplayClass100_0
		{
			[Token(Token = "0x4002131")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Node b;

			[Token(Token = "0x4002132")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Node a;

			[Token(Token = "0x6002708")]
			[Address(RVA = "0x1702A4C", Offset = "0x1702A4C", VA = "0x1702A4C")]
			public <>c__DisplayClass100_0()
			{
			}

			[Token(Token = "0x6002709")]
			[Address(RVA = "0x1702A54", Offset = "0x1702A54", VA = "0x1702A54")]
			internal bool <AreNodesConnected>b__0(Connection c)
			{
				return default(bool);
			}

			[Token(Token = "0x600270A")]
			[Address(RVA = "0x1702A98", Offset = "0x1702A98", VA = "0x1702A98")]
			internal bool <AreNodesConnected>b__1(Connection c)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20007C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979CEC", Offset = "0x979CEC")]
		private sealed class <>c
		{
			[Token(Token = "0x4002133")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002134")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Connection, Node> <>9__103_0;

			[Token(Token = "0x4002135")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Connection, Node> <>9__104_0;

			[Token(Token = "0x600270C")]
			[Address(RVA = "0x17029E4", Offset = "0x17029E4", VA = "0x17029E4")]
			public <>c()
			{
			}

			[Token(Token = "0x600270D")]
			[Address(RVA = "0x17029EC", Offset = "0x17029EC", VA = "0x17029EC")]
			internal Node <GetParentNodes>b__103_0(Connection c)
			{
				return null;
			}

			[Token(Token = "0x600270E")]
			[Address(RVA = "0x1702A1C", Offset = "0x1702A1C", VA = "0x1702A1C")]
			internal Node <GetChildNodes>b__104_0(Connection c)
			{
				return null;
			}
		}

		[Token(Token = "0x20007C1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979CFC", Offset = "0x979CFC")]
		private sealed class <>c__DisplayClass105_0
		{
			[Token(Token = "0x4002136")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Node parentNode;

			[Token(Token = "0x600270F")]
			[Address(RVA = "0x1702ADC", Offset = "0x1702ADC", VA = "0x1702ADC")]
			public <>c__DisplayClass105_0()
			{
			}

			[Token(Token = "0x6002710")]
			[Address(RVA = "0x1702AE4", Offset = "0x1702AE4", VA = "0x1702AE4")]
			internal bool <IsChildOf>b__0(Connection c)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20007C2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979D0C", Offset = "0x979D0C")]
		private sealed class <>c__DisplayClass106_0
		{
			[Token(Token = "0x4002137")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Node childNode;

			[Token(Token = "0x6002711")]
			[Address(RVA = "0x1702B28", Offset = "0x1702B28", VA = "0x1702B28")]
			public <>c__DisplayClass106_0()
			{
			}

			[Token(Token = "0x6002712")]
			[Address(RVA = "0x1702B30", Offset = "0x1702B30", VA = "0x1702B30")]
			internal bool <IsParentOf>b__0(Connection c)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Vector2 _position;

		[Token(Token = "0x4000BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string _UID;

		[Token(Token = "0x4000BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string _name;

		[Token(Token = "0x4000BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string _tag;

		[Token(Token = "0x4000BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private string _comment;

		[Token(Token = "0x4000BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool _isBreakpoint;

		[Token(Token = "0x4000BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Graph _graph;

		[Token(Token = "0x4000BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Connection> _inConnections;

		[Token(Token = "0x4000BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Connection> _outConnections;

		[Token(Token = "0x4000BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int _ID;

		[NonSerialized]
		[Token(Token = "0x4000BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Status _status;

		[NonSerialized]
		[Token(Token = "0x4000BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private string _nameCache;

		[NonSerialized]
		[Token(Token = "0x4000BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private string _descriptionCache;

		[NonSerialized]
		[Token(Token = "0x4000BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int _priorityCache;

		[Token(Token = "0x4000BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97FEA4", Offset = "0x97FEA4")]
		private bool <isChecked>k__BackingField;

		[Token(Token = "0x4000BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97FEB4", Offset = "0x97FEB4")]
		private bool <breakPointReached>k__BackingField;

		[Token(Token = "0x170001BF")]
		public Graph graph
		{
			[Token(Token = "0x6001240")]
			[Address(RVA = "0xF60B3C", Offset = "0xF60B3C", VA = "0xF60B3C", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001241")]
			[Address(RVA = "0xF6A86C", Offset = "0xF6A86C", VA = "0xF6A86C")]
			set
			{
			}
		}

		[Token(Token = "0x170001C0")]
		public int ID
		{
			[Token(Token = "0x6001242")]
			[Address(RVA = "0xF670F0", Offset = "0xF670F0", VA = "0xF670F0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001243")]
			[Address(RVA = "0xF6571C", Offset = "0xF6571C", VA = "0xF6571C")]
			set
			{
			}
		}

		[Token(Token = "0x170001C1")]
		public List<Connection> inConnections
		{
			[Token(Token = "0x6001244")]
			[Address(RVA = "0xF615D0", Offset = "0xF615D0", VA = "0xF615D0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001245")]
			[Address(RVA = "0xF6C608", Offset = "0xF6C608", VA = "0xF6C608")]
			protected set
			{
			}
		}

		[Token(Token = "0x170001C2")]
		public List<Connection> outConnections
		{
			[Token(Token = "0x6001246")]
			[Address(RVA = "0xF615C8", Offset = "0xF615C8", VA = "0xF615C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001247")]
			[Address(RVA = "0xF6C610", Offset = "0xF6C610", VA = "0xF6C610")]
			protected set
			{
			}
		}

		[Token(Token = "0x170001C3")]
		public Vector2 position
		{
			[Token(Token = "0x6001248")]
			[Address(RVA = "0xF65204", Offset = "0xF65204", VA = "0xF65204")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6001249")]
			[Address(RVA = "0xF651FC", Offset = "0xF651FC", VA = "0xF651FC")]
			set
			{
			}
		}

		[Token(Token = "0x170001C4")]
		public string UID
		{
			[Token(Token = "0x600124A")]
			[Address(RVA = "0xF6C618", Offset = "0xF6C618", VA = "0xF6C618")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C5")]
		private string customName
		{
			[Token(Token = "0x600124B")]
			[Address(RVA = "0xF6C6B8", Offset = "0xF6C6B8", VA = "0xF6C6B8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600124C")]
			[Address(RVA = "0xF6C6C0", Offset = "0xF6C6C0", VA = "0xF6C6C0")]
			set
			{
			}
		}

		[Token(Token = "0x170001C6")]
		public string tag
		{
			[Token(Token = "0x600124D")]
			[Address(RVA = "0xF6C6C8", Offset = "0xF6C6C8", VA = "0xF6C6C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600124E")]
			[Address(RVA = "0xF6C6D0", Offset = "0xF6C6D0", VA = "0xF6C6D0")]
			set
			{
			}
		}

		[Token(Token = "0x170001C7")]
		public string comments
		{
			[Token(Token = "0x600124F")]
			[Address(RVA = "0xF6C6D8", Offset = "0xF6C6D8", VA = "0xF6C6D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001250")]
			[Address(RVA = "0xF6C6E0", Offset = "0xF6C6E0", VA = "0xF6C6E0")]
			set
			{
			}
		}

		[Token(Token = "0x170001C8")]
		public bool isBreakpoint
		{
			[Token(Token = "0x6001251")]
			[Address(RVA = "0xF6C6E8", Offset = "0xF6C6E8", VA = "0xF6C6E8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001252")]
			[Address(RVA = "0xF6C6F0", Offset = "0xF6C6F0", VA = "0xF6C6F0")]
			set
			{
			}
		}

		[Token(Token = "0x170001C9")]
		public virtual string name
		{
			[Token(Token = "0x6001253")]
			[Address(RVA = "0xF6C6FC", Offset = "0xF6C6FC", VA = "0xF6C6FC", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001254")]
			[Address(RVA = "0xF6C83C", Offset = "0xF6C83C", VA = "0xF6C83C", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x170001CA")]
		public virtual string description
		{
			[Token(Token = "0x6001255")]
			[Address(RVA = "0xF6C844", Offset = "0xF6C844", VA = "0xF6C844", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CB")]
		public virtual int priority
		{
			[Token(Token = "0x6001256")]
			[Address(RVA = "0xF6C904", Offset = "0xF6C904", VA = "0xF6C904", Slot = "8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001CC")]
		public abstract int maxInConnections
		{
			[Token(Token = "0x6001257")]
			get;
		}

		[Token(Token = "0x170001CD")]
		public abstract int maxOutConnections
		{
			[Token(Token = "0x6001258")]
			get;
		}

		[Token(Token = "0x170001CE")]
		public abstract Type outConnectionType
		{
			[Token(Token = "0x6001259")]
			get;
		}

		[Token(Token = "0x170001CF")]
		public abstract bool allowAsPrime
		{
			[Token(Token = "0x600125A")]
			get;
		}

		[Token(Token = "0x170001D0")]
		public abstract Alignment2x2 commentsAlignment
		{
			[Token(Token = "0x600125B")]
			get;
		}

		[Token(Token = "0x170001D1")]
		public abstract Alignment2x2 iconAlignment
		{
			[Token(Token = "0x600125C")]
			get;
		}

		[Token(Token = "0x170001D2")]
		public Status status
		{
			[Token(Token = "0x600125D")]
			[Address(RVA = "0xF6C9AC", Offset = "0xF6C9AC", VA = "0xF6C9AC")]
			get
			{
				return default(Status);
			}
			[Token(Token = "0x600125E")]
			[Address(RVA = "0xF6C9B4", Offset = "0xF6C9B4", VA = "0xF6C9B4")]
			protected set
			{
			}
		}

		[Token(Token = "0x170001D3")]
		public UnityEngine.Component graphAgent
		{
			[Token(Token = "0x600125F")]
			[Address(RVA = "0xF6C9BC", Offset = "0xF6C9BC", VA = "0xF6C9BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D4")]
		public IBlackboard graphBlackboard
		{
			[Token(Token = "0x6001260")]
			[Address(RVA = "0xF6CA50", Offset = "0xF6CA50", VA = "0xF6CA50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D5")]
		private bool isChecked
		{
			[Token(Token = "0x6001261")]
			[Address(RVA = "0xF6CB08", Offset = "0xF6CB08", VA = "0xF6CB08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9867D4", Offset = "0x9867D4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001262")]
			[Address(RVA = "0xF6CB10", Offset = "0xF6CB10", VA = "0xF6CB10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9867E4", Offset = "0x9867E4")]
			set
			{
			}
		}

		[Token(Token = "0x170001D6")]
		private bool breakPointReached
		{
			[Token(Token = "0x6001263")]
			[Address(RVA = "0xF6CB1C", Offset = "0xF6CB1C", VA = "0xF6CB1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9867F4", Offset = "0x9867F4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001264")]
			[Address(RVA = "0xF6CB24", Offset = "0xF6CB24", VA = "0xF6CB24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986804", Offset = "0x986804")]
			set
			{
			}
		}

		[Token(Token = "0x6001265")]
		[Address(RVA = "0xF6ABA0", Offset = "0xF6ABA0", VA = "0xF6ABA0")]
		public Node()
		{
		}

		[Token(Token = "0x6001266")]
		[Address(RVA = "0xF67E8C", Offset = "0xF67E8C", VA = "0xF67E8C")]
		public static Node Create(Graph targetGraph, Type nodeType, Vector2 pos)
		{
			return null;
		}

		[Token(Token = "0x6001267")]
		[Address(RVA = "0xF64EA4", Offset = "0xF64EA4", VA = "0xF64EA4")]
		public Node Duplicate(Graph targetGraph)
		{
			return null;
		}

		[Token(Token = "0x6001268")]
		[Address(RVA = "0xF6CB30", Offset = "0xF6CB30", VA = "0xF6CB30", Slot = "15")]
		public virtual void OnCreate(Graph assignedGraph)
		{
		}

		[Token(Token = "0x6001269")]
		[Address(RVA = "0xF6CB34", Offset = "0xF6CB34", VA = "0xF6CB34", Slot = "16")]
		public virtual void OnValidate(Graph assignedGraph)
		{
		}

		[Token(Token = "0x600126A")]
		[Address(RVA = "0xF6CB38", Offset = "0xF6CB38", VA = "0xF6CB38", Slot = "17")]
		public virtual void OnDestroy()
		{
		}

		[Token(Token = "0x600126B")]
		[Address(RVA = "0xF616C8", Offset = "0xF616C8", VA = "0xF616C8")]
		public Status Execute(UnityEngine.Component agent, IBlackboard blackboard)
		{
			return default(Status);
		}

		[Token(Token = "0x600126C")]
		[Address(RVA = "0xF616F8", Offset = "0xF616F8", VA = "0xF616F8")]
		public void Reset(bool recursively = true)
		{
		}

		[Token(Token = "0x600126D")]
		[Address(RVA = "0xF6CB3C", Offset = "0xF6CB3C", VA = "0xF6CB3C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x986814", Offset = "0x986814")]
		private IEnumerator YieldBreak(Action resume)
		{
			return null;
		}

		[Token(Token = "0x600126E")]
		[Address(RVA = "0xF6CBB0", Offset = "0xF6CBB0", VA = "0xF6CBB0")]
		public Status Error(object msg)
		{
			return default(Status);
		}

		[Token(Token = "0x600126F")]
		[Address(RVA = "0xF6CD38", Offset = "0xF6CD38", VA = "0xF6CD38")]
		public Status Fail(string msg)
		{
			return default(Status);
		}

		[Token(Token = "0x6001270")]
		[Address(RVA = "0xF6CDC8", Offset = "0xF6CDC8", VA = "0xF6CDC8")]
		public void Warn(string msg)
		{
		}

		[Token(Token = "0x6001271")]
		[Address(RVA = "0xF6CE4C", Offset = "0xF6CE4C", VA = "0xF6CE4C")]
		public void SetStatus(Status status)
		{
		}

		[Token(Token = "0x6001272")]
		[Address(RVA = "0xF6CE54", Offset = "0xF6CE54", VA = "0xF6CE54")]
		protected void SendEvent(EventData eventData)
		{
		}

		[Token(Token = "0x6001273")]
		[Address(RVA = "0xF6CE98", Offset = "0xF6CE98", VA = "0xF6CE98")]
		public void RegisterEvents(params string[] eventNames)
		{
		}

		[Token(Token = "0x6001274")]
		[Address(RVA = "0xF6CEC8", Offset = "0xF6CEC8", VA = "0xF6CEC8")]
		public void RegisterEvents(UnityEngine.Component targetAgent, params string[] eventNames)
		{
		}

		[Token(Token = "0x6001275")]
		[Address(RVA = "0xF6D048", Offset = "0xF6D048", VA = "0xF6D048")]
		public void UnRegisterEvents(params string[] eventNames)
		{
		}

		[Token(Token = "0x6001276")]
		[Address(RVA = "0xF6D078", Offset = "0xF6D078", VA = "0xF6D078")]
		public void UnRegisterEvents(UnityEngine.Component targetAgent, params string[] eventNames)
		{
		}

		[Token(Token = "0x6001277")]
		[Address(RVA = "0xF6D17C", Offset = "0xF6D17C", VA = "0xF6D17C")]
		public void UnregisterAllEvents()
		{
		}

		[Token(Token = "0x6001278")]
		[Address(RVA = "0xF6D1A4", Offset = "0xF6D1A4", VA = "0xF6D1A4")]
		public void UnregisterAllEvents(UnityEngine.Component targetAgent)
		{
		}

		[Token(Token = "0x6001279")]
		[Address(RVA = "0xF68804", Offset = "0xF68804", VA = "0xF68804")]
		public static bool IsNewConnectionAllowed(Node sourceNode, Node targetNode, [Optional] Connection refConnection)
		{
			return default(bool);
		}

		[Token(Token = "0x600127A")]
		[Address(RVA = "0xF6D2A0", Offset = "0xF6D2A0", VA = "0xF6D2A0", Slot = "18")]
		protected virtual bool CanConnectToTarget(Node targetNode)
		{
			return default(bool);
		}

		[Token(Token = "0x600127B")]
		[Address(RVA = "0xF6D2A8", Offset = "0xF6D2A8", VA = "0xF6D2A8", Slot = "19")]
		protected virtual bool CanConnectFromSource(Node sourceNode)
		{
			return default(bool);
		}

		[Token(Token = "0x600127C")]
		[Address(RVA = "0xF6D2B0", Offset = "0xF6D2B0", VA = "0xF6D2B0")]
		public static bool AreNodesConnected(Node a, Node b)
		{
			return default(bool);
		}

		[Token(Token = "0x600127D")]
		[Address(RVA = "0xF6D46C", Offset = "0xF6D46C", VA = "0xF6D46C")]
		protected Coroutine StartCoroutine(IEnumerator routine)
		{
			return null;
		}

		[Token(Token = "0x600127E")]
		[Address(RVA = "0xF6D4A8", Offset = "0xF6D4A8", VA = "0xF6D4A8")]
		protected void StopCoroutine(Coroutine routine)
		{
		}

		[Token(Token = "0x600127F")]
		[Address(RVA = "0xF6D4E4", Offset = "0xF6D4E4", VA = "0xF6D4E4")]
		public Node[] GetParentNodes()
		{
			return null;
		}

		[Token(Token = "0x6001280")]
		[Address(RVA = "0xF6D628", Offset = "0xF6D628", VA = "0xF6D628")]
		public Node[] GetChildNodes()
		{
			return null;
		}

		[Token(Token = "0x6001281")]
		[Address(RVA = "0xF6D76C", Offset = "0xF6D76C", VA = "0xF6D76C")]
		public bool IsChildOf(Node parentNode)
		{
			return default(bool);
		}

		[Token(Token = "0x6001282")]
		[Address(RVA = "0xF6D830", Offset = "0xF6D830", VA = "0xF6D830")]
		public bool IsParentOf(Node childNode)
		{
			return default(bool);
		}

		[Token(Token = "0x6001283")]
		[Address(RVA = "0xF6D8F4", Offset = "0xF6D8F4", VA = "0xF6D8F4", Slot = "20")]
		protected virtual Status OnExecute(UnityEngine.Component agent, IBlackboard blackboard)
		{
			return default(Status);
		}

		[Token(Token = "0x6001284")]
		[Address(RVA = "0xF6D8FC", Offset = "0xF6D8FC", VA = "0xF6D8FC", Slot = "21")]
		protected virtual void OnReset()
		{
		}

		[Token(Token = "0x6001285")]
		[Address(RVA = "0xF6D900", Offset = "0xF6D900", VA = "0xF6D900", Slot = "22")]
		public virtual void OnParentConnected(int connectionIndex)
		{
		}

		[Token(Token = "0x6001286")]
		[Address(RVA = "0xF6D904", Offset = "0xF6D904", VA = "0xF6D904", Slot = "23")]
		public virtual void OnParentDisconnected(int connectionIndex)
		{
		}

		[Token(Token = "0x6001287")]
		[Address(RVA = "0xF6D908", Offset = "0xF6D908", VA = "0xF6D908", Slot = "24")]
		public virtual void OnChildConnected(int connectionIndex)
		{
		}

		[Token(Token = "0x6001288")]
		[Address(RVA = "0xF6D90C", Offset = "0xF6D90C", VA = "0xF6D90C", Slot = "25")]
		public virtual void OnChildDisconnected(int connectionIndex)
		{
		}

		[Token(Token = "0x6001289")]
		[Address(RVA = "0xF6D910", Offset = "0xF6D910", VA = "0xF6D910", Slot = "26")]
		public virtual void OnGraphStarted()
		{
		}

		[Token(Token = "0x600128A")]
		[Address(RVA = "0xF6D914", Offset = "0xF6D914", VA = "0xF6D914", Slot = "27")]
		public virtual void OnGraphStoped()
		{
		}

		[Token(Token = "0x600128B")]
		[Address(RVA = "0xF6D918", Offset = "0xF6D918", VA = "0xF6D918", Slot = "28")]
		public virtual void OnGraphPaused()
		{
		}

		[Token(Token = "0x600128C")]
		[Address(RVA = "0xF6D91C", Offset = "0xF6D91C", VA = "0xF6D91C", Slot = "29")]
		public virtual void OnGraphUnpaused()
		{
		}

		[Token(Token = "0x600128D")]
		[Address(RVA = "0xF6D920", Offset = "0xF6D920", VA = "0xF6D920", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600128E")]
		[Address(RVA = "0xF6DAC0", Offset = "0xF6DAC0", VA = "0xF6DAC0", Slot = "30")]
		public virtual void OnDrawGizmos()
		{
		}

		[Token(Token = "0x600128F")]
		[Address(RVA = "0xF6DC5C", Offset = "0xF6DC5C", VA = "0xF6DC5C", Slot = "31")]
		public virtual void OnDrawGizmosSelected()
		{
		}
	}
	[Token(Token = "0x2000335")]
	public enum Status
	{
		[Token(Token = "0x4000BF0")]
		Failure,
		[Token(Token = "0x4000BF1")]
		Success,
		[Token(Token = "0x4000BF2")]
		Running,
		[Token(Token = "0x4000BF3")]
		Resting,
		[Token(Token = "0x4000BF4")]
		Error,
		[Token(Token = "0x4000BF5")]
		Optional
	}
	[Token(Token = "0x2000336")]
	[DoNotList]
	public class ActionList : ActionTask, ISubTasksContainer
	{
		[Token(Token = "0x20007C3")]
		public enum ActionsExecutionMode
		{
			[Token(Token = "0x4002139")]
			ActionsRunInSequence,
			[Token(Token = "0x400213A")]
			ActionsRunInParallel
		}

		[Serializable]
		[Token(Token = "0x20007C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979D1C", Offset = "0x979D1C")]
		private sealed class <>c
		{
			[Token(Token = "0x400213B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400213C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<ActionTask, bool> <>9__10_0;

			[Token(Token = "0x6002714")]
			[Address(RVA = "0xF5BA10", Offset = "0xF5BA10", VA = "0xF5BA10")]
			public <>c()
			{
			}

			[Token(Token = "0x6002715")]
			[Address(RVA = "0xF5BA18", Offset = "0xF5BA18", VA = "0xF5BA18")]
			internal bool <OnInit>b__10_0(ActionTask a)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public ActionsExecutionMode executionMode;

		[Token(Token = "0x4000BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<ActionTask> actions;

		[Token(Token = "0x4000BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<ActionTask> initialActiveActions;

		[Token(Token = "0x4000BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int currentActionIndex;

		[Token(Token = "0x4000BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private readonly List<int> finishedIndeces;

		[Token(Token = "0x170001D7")]
		protected override string info
		{
			[Token(Token = "0x6001290")]
			[Address(RVA = "0xF5A674", Offset = "0xF5A674", VA = "0xF5A674", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001291")]
		[Address(RVA = "0xF5A8C0", Offset = "0xF5A8C0", VA = "0xF5A8C0", Slot = "19")]
		private Task[] NodeCanvas.Framework.ISubTasksContainer.GetSubTasks()
		{
			return null;
		}

		[Token(Token = "0x6001292")]
		[Address(RVA = "0xF5A920", Offset = "0xF5A920", VA = "0xF5A920", Slot = "5")]
		public override Task Duplicate(ITaskSystem newOwnerSystem)
		{
			return null;
		}

		[Token(Token = "0x6001293")]
		[Address(RVA = "0xF5AD68", Offset = "0xF5AD68", VA = "0xF5AD68", Slot = "10")]
		protected override string OnInit()
		{
			return null;
		}

		[Token(Token = "0x6001294")]
		[Address(RVA = "0xF5AE84", Offset = "0xF5AE84", VA = "0xF5AE84", Slot = "13")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6001295")]
		[Address(RVA = "0xF5AEEC", Offset = "0xF5AEEC", VA = "0xF5AEEC", Slot = "14")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6001296")]
		[Address(RVA = "0xF5B384", Offset = "0xF5B384", VA = "0xF5B384", Slot = "16")]
		protected override void OnStop()
		{
		}

		[Token(Token = "0x6001297")]
		[Address(RVA = "0xF5B594", Offset = "0xF5B594", VA = "0xF5B594", Slot = "18")]
		protected override void OnPause()
		{
		}

		[Token(Token = "0x6001298")]
		[Address(RVA = "0xF5B6EC", Offset = "0xF5B6EC", VA = "0xF5B6EC", Slot = "11")]
		public override void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001299")]
		[Address(RVA = "0xF5B7F4", Offset = "0xF5B7F4", VA = "0xF5B7F4", Slot = "12")]
		public override void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x600129A")]
		[Address(RVA = "0xF5ABBC", Offset = "0xF5ABBC", VA = "0xF5ABBC")]
		public void AddAction(ActionTask action)
		{
		}

		[Token(Token = "0x600129B")]
		[Address(RVA = "0xF5B8FC", Offset = "0xF5B8FC", VA = "0xF5B8FC")]
		public ActionList()
		{
		}
	}
	[Token(Token = "0x2000337")]
	public abstract class ActionTask<T> : ActionTask where T : class
	{
		[Token(Token = "0x170001D8")]
		public sealed override Type agentType
		{
			[Token(Token = "0x600129C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D9")]
		public new T agent
		{
			[Token(Token = "0x600129D")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600129E")]
		protected ActionTask()
		{
		}
	}
	[Token(Token = "0x2000338")]
	public abstract class ActionTask : Task
	{
		[Token(Token = "0x20007C5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979D2C", Offset = "0x979D2C")]
		private sealed class <ActionUpdater>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400213D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400213E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400213F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ActionTask <>4__this;

			[Token(Token = "0x4002140")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UnityEngine.Component agent;

			[Token(Token = "0x4002141")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public IBlackboard blackboard;

			[Token(Token = "0x4002142")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Action<bool> callback;

			[Token(Token = "0x17000399")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002719")]
				[Address(RVA = "0xF5BD24", Offset = "0xF5BD24", VA = "0xF5BD24", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700039A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600271B")]
				[Address(RVA = "0xF5BD94", Offset = "0xF5BD94", VA = "0xF5BD94", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002716")]
			[Address(RVA = "0xF5BC00", Offset = "0xF5BC00", VA = "0xF5BC00")]
			[DebuggerHidden]
			public <ActionUpdater>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6002717")]
			[Address(RVA = "0xF5BC50", Offset = "0xF5BC50", VA = "0xF5BC50", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002718")]
			[Address(RVA = "0xF5BC54", Offset = "0xF5BC54", VA = "0xF5BC54", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600271A")]
			[Address(RVA = "0xF5BD2C", Offset = "0xF5BD2C", VA = "0xF5BD2C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[NonSerialized]
		[Token(Token = "0x4000BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Status status;

		[NonSerialized]
		[Token(Token = "0x4000BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float startedTime;

		[NonSerialized]
		[Token(Token = "0x4000BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float pausedTime;

		[NonSerialized]
		[Token(Token = "0x4000BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool latch;

		[NonSerialized]
		[Token(Token = "0x4000BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		private bool _isPaused;

		[Token(Token = "0x170001DA")]
		public float elapsedTime
		{
			[Token(Token = "0x600129F")]
			[Address(RVA = "0xF5BA48", Offset = "0xF5BA48", VA = "0xF5BA48")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001DB")]
		public bool isRunning
		{
			[Token(Token = "0x60012A0")]
			[Address(RVA = "0xF5A8B0", Offset = "0xF5A8B0", VA = "0xF5A8B0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001DC")]
		public bool isPaused
		{
			[Token(Token = "0x60012A1")]
			[Address(RVA = "0xF5A8A8", Offset = "0xF5A8A8", VA = "0xF5A8A8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60012A2")]
			[Address(RVA = "0xF5BA94", Offset = "0xF5BA94", VA = "0xF5BA94")]
			private set
			{
			}
		}

		[Token(Token = "0x60012A3")]
		[Address(RVA = "0xF5BAA0", Offset = "0xF5BAA0", VA = "0xF5BAA0")]
		public void ExecuteAction(UnityEngine.Component agent, IBlackboard blackboard, Action<bool> callback)
		{
		}

		[Token(Token = "0x60012A4")]
		[Address(RVA = "0xF5BB34", Offset = "0xF5BB34", VA = "0xF5BB34")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x986878", Offset = "0x986878")]
		private IEnumerator ActionUpdater(UnityEngine.Component agent, IBlackboard blackboard, Action<bool> callback)
		{
			return null;
		}

		[Token(Token = "0x60012A5")]
		[Address(RVA = "0xF5B21C", Offset = "0xF5B21C", VA = "0xF5B21C")]
		public Status ExecuteAction(UnityEngine.Component agent, IBlackboard blackboard)
		{
			return default(Status);
		}

		[Token(Token = "0x60012A6")]
		[Address(RVA = "0xF5B214", Offset = "0xF5B214", VA = "0xF5B214")]
		public void EndAction()
		{
		}

		[Token(Token = "0x60012A7")]
		[Address(RVA = "0xF5B310", Offset = "0xF5B310", VA = "0xF5B310")]
		public void EndAction(bool success)
		{
		}

		[Token(Token = "0x60012A8")]
		[Address(RVA = "0xF5B488", Offset = "0xF5B488", VA = "0xF5B488")]
		public void EndAction(bool? success)
		{
		}

		[Token(Token = "0x60012A9")]
		[Address(RVA = "0xF5B694", Offset = "0xF5B694", VA = "0xF5B694")]
		public void PauseAction()
		{
		}

		[Token(Token = "0x60012AA")]
		[Address(RVA = "0xF5BC2C", Offset = "0xF5BC2C", VA = "0xF5BC2C", Slot = "13")]
		protected virtual void OnExecute()
		{
		}

		[Token(Token = "0x60012AB")]
		[Address(RVA = "0xF5BC30", Offset = "0xF5BC30", VA = "0xF5BC30", Slot = "14")]
		protected virtual void OnUpdate()
		{
		}

		[Token(Token = "0x60012AC")]
		[Address(RVA = "0xF5BC34", Offset = "0xF5BC34", VA = "0xF5BC34", Slot = "15")]
		protected virtual void OnStop(bool interrupted)
		{
		}

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0xF5BC44", Offset = "0xF5BC44", VA = "0xF5BC44", Slot = "16")]
		protected virtual void OnStop()
		{
		}

		[Token(Token = "0x60012AE")]
		[Address(RVA = "0xF5BC48", Offset = "0xF5BC48", VA = "0xF5BC48", Slot = "17")]
		protected virtual void OnForcedStop()
		{
		}

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0xF5BC4C", Offset = "0xF5BC4C", VA = "0xF5BC4C", Slot = "18")]
		protected virtual void OnPause()
		{
		}

		[Token(Token = "0x60012B0")]
		[Address(RVA = "0xF5B99C", Offset = "0xF5B99C", VA = "0xF5B99C")]
		protected ActionTask()
		{
		}
	}
	[Token(Token = "0x2000339")]
	[DoNotList]
	public class ConditionList : ConditionTask, ISubTasksContainer
	{
		[Token(Token = "0x20007C6")]
		public enum ConditionsCheckMode
		{
			[Token(Token = "0x4002144")]
			AllTrueRequired,
			[Token(Token = "0x4002145")]
			AnyTrueSuffice
		}

		[Serializable]
		[Token(Token = "0x20007C7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979D3C", Offset = "0x979D3C")]
		private sealed class <>c
		{
			[Token(Token = "0x4002146")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002147")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<ConditionTask, bool> <>9__10_0;

			[Token(Token = "0x600271D")]
			[Address(RVA = "0xF60794", Offset = "0xF60794", VA = "0xF60794")]
			public <>c()
			{
			}

			[Token(Token = "0x600271E")]
			[Address(RVA = "0xF6079C", Offset = "0xF6079C", VA = "0xF6079C")]
			internal bool <OnInit>b__10_0(ConditionTask c)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public ConditionsCheckMode checkMode;

		[Token(Token = "0x4000C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<ConditionTask> conditions;

		[Token(Token = "0x4000C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<ConditionTask> initialActiveConditions;

		[Token(Token = "0x170001DD")]
		private bool allTrueRequired
		{
			[Token(Token = "0x60012B1")]
			[Address(RVA = "0xF5F7A4", Offset = "0xF5F7A4", VA = "0xF5F7A4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001DE")]
		protected override string info
		{
			[Token(Token = "0x60012B2")]
			[Address(RVA = "0xF5F7B4", Offset = "0xF5F7B4", VA = "0xF5F7B4", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012B3")]
		[Address(RVA = "0xF5FA48", Offset = "0xF5FA48", VA = "0xF5FA48", Slot = "16")]
		private Task[] NodeCanvas.Framework.ISubTasksContainer.GetSubTasks()
		{
			return null;
		}

		[Token(Token = "0x60012B4")]
		[Address(RVA = "0xF5FAA8", Offset = "0xF5FAA8", VA = "0xF5FAA8", Slot = "5")]
		public override Task Duplicate(ITaskSystem newOwnerSystem)
		{
			return null;
		}

		[Token(Token = "0x60012B5")]
		[Address(RVA = "0xF5FEF0", Offset = "0xF5FEF0", VA = "0xF5FEF0", Slot = "10")]
		protected override string OnInit()
		{
			return null;
		}

		[Token(Token = "0x60012B6")]
		[Address(RVA = "0xF6000C", Offset = "0xF6000C", VA = "0xF6000C", Slot = "13")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60012B7")]
		[Address(RVA = "0xF6015C", Offset = "0xF6015C", VA = "0xF6015C", Slot = "14")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60012B8")]
		[Address(RVA = "0xF60274", Offset = "0xF60274", VA = "0xF60274", Slot = "15")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x60012B9")]
		[Address(RVA = "0xF60498", Offset = "0xF60498", VA = "0xF60498", Slot = "11")]
		public override void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60012BA")]
		[Address(RVA = "0xF605A0", Offset = "0xF605A0", VA = "0xF605A0", Slot = "12")]
		public override void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60012BB")]
		[Address(RVA = "0xF5FD44", Offset = "0xF5FD44", VA = "0xF5FD44")]
		public void AddCondition(ConditionTask condition)
		{
		}

		[Token(Token = "0x60012BC")]
		[Address(RVA = "0xF606A8", Offset = "0xF606A8", VA = "0xF606A8")]
		public ConditionList()
		{
		}
	}
	[Token(Token = "0x200033A")]
	public abstract class ConditionTask<T> : ConditionTask where T : class
	{
		[Token(Token = "0x170001DF")]
		public sealed override Type agentType
		{
			[Token(Token = "0x60012BD")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E0")]
		public new T agent
		{
			[Token(Token = "0x60012BE")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012BF")]
		protected ConditionTask()
		{
		}
	}
	[Token(Token = "0x200033B")]
	public abstract class ConditionTask : Task
	{
		[Token(Token = "0x20007C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979D4C", Offset = "0x979D4C")]
		private sealed class <Flip>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002148")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002149")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400214A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ConditionTask <>4__this;

			[Token(Token = "0x1700039B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002722")]
				[Address(RVA = "0xF609DC", Offset = "0xF609DC", VA = "0xF609DC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700039C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002724")]
				[Address(RVA = "0xF60A4C", Offset = "0xF60A4C", VA = "0xF60A4C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600271F")]
			[Address(RVA = "0xF608C4", Offset = "0xF608C4", VA = "0xF608C4")]
			[DebuggerHidden]
			public <Flip>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6002720")]
			[Address(RVA = "0xF608F0", Offset = "0xF608F0", VA = "0xF608F0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002721")]
			[Address(RVA = "0xF608F4", Offset = "0xF608F4", VA = "0xF608F4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002723")]
			[Address(RVA = "0xF609E4", Offset = "0xF609E4", VA = "0xF609E4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private bool _invert;

		[NonSerialized]
		[Token(Token = "0x4000C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int yieldReturn;

		[Token(Token = "0x4000C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int yields;

		[Token(Token = "0x170001E1")]
		public bool invert
		{
			[Token(Token = "0x60012C0")]
			[Address(RVA = "0xF607CC", Offset = "0xF607CC", VA = "0xF607CC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60012C1")]
			[Address(RVA = "0xF607D4", Offset = "0xF607D4", VA = "0xF607D4")]
			set
			{
			}
		}

		[Token(Token = "0x60012C2")]
		[Address(RVA = "0xF6011C", Offset = "0xF6011C", VA = "0xF6011C")]
		public void Enable(UnityEngine.Component agent, IBlackboard bb)
		{
		}

		[Token(Token = "0x60012C3")]
		[Address(RVA = "0xF6023C", Offset = "0xF6023C", VA = "0xF6023C")]
		public void Disable()
		{
		}

		[Token(Token = "0x60012C4")]
		[Address(RVA = "0xF603EC", Offset = "0xF603EC", VA = "0xF603EC")]
		public bool CheckCondition(UnityEngine.Component agent, IBlackboard blackboard)
		{
			return default(bool);
		}

		[Token(Token = "0x60012C5")]
		[Address(RVA = "0xF607E0", Offset = "0xF607E0", VA = "0xF607E0")]
		protected void YieldReturn(bool value)
		{
		}

		[Token(Token = "0x60012C6")]
		[Address(RVA = "0xF608B4", Offset = "0xF608B4", VA = "0xF608B4", Slot = "13")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60012C7")]
		[Address(RVA = "0xF608B8", Offset = "0xF608B8", VA = "0xF608B8", Slot = "14")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60012C8")]
		[Address(RVA = "0xF608BC", Offset = "0xF608BC", VA = "0xF608BC", Slot = "15")]
		protected virtual bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x60012C9")]
		[Address(RVA = "0xF60840", Offset = "0xF60840", VA = "0xF60840")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9868DC", Offset = "0x9868DC")]
		private IEnumerator Flip()
		{
			return null;
		}

		[Token(Token = "0x60012CA")]
		[Address(RVA = "0xF60720", Offset = "0xF60720", VA = "0xF60720")]
		protected ConditionTask()
		{
		}
	}
	[Token(Token = "0x200033C")]
	public interface ITaskSystem
	{
		[Token(Token = "0x170001E2")]
		UnityEngine.Component agent
		{
			[Token(Token = "0x60012CB")]
			get;
		}

		[Token(Token = "0x170001E3")]
		IBlackboard blackboard
		{
			[Token(Token = "0x60012CC")]
			get;
		}

		[Token(Token = "0x170001E4")]
		float elapsedTime
		{
			[Token(Token = "0x60012CD")]
			get;
		}

		[Token(Token = "0x170001E5")]
		UnityEngine.Object contextObject
		{
			[Token(Token = "0x60012CE")]
			get;
		}

		[Token(Token = "0x60012CF")]
		void SendTaskOwnerDefaults();

		[Token(Token = "0x60012D0")]
		void SendEvent(EventData eventData, object sender);

		[Token(Token = "0x60012D1")]
		void RecordUndo(string name);
	}
	[Serializable]
	[Token(Token = "0x200033D")]
	[SpoofAOT]
	public abstract class Task : ISubParametersContainer
	{
		[Token(Token = "0x20007C9")]
		[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x979D5C", Offset = "0x979D5C")]
		protected class EventReceiverAttribute : Attribute
		{
			[Token(Token = "0x400214B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public readonly string[] eventMessages;

			[Token(Token = "0x6002725")]
			[Address(RVA = "0x170511C", Offset = "0x170511C", VA = "0x170511C")]
			public EventReceiverAttribute(params string[] args)
			{
			}
		}

		[Token(Token = "0x20007CA")]
		[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x979D70", Offset = "0x979D70")]
		protected class GetFromAgentAttribute : Attribute
		{
			[Token(Token = "0x6002726")]
			[Address(RVA = "0x1705148", Offset = "0x1705148", VA = "0x1705148")]
			public GetFromAgentAttribute()
			{
			}
		}

		[Token(Token = "0x4000C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private bool _isDisabled;

		[Token(Token = "0x4000C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TaskAgentParameter overrideAgent;

		[NonSerialized]
		[Token(Token = "0x4000C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IBlackboard _blackboard;

		[NonSerialized]
		[Token(Token = "0x4000C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ITaskSystem _ownerSystem;

		[NonSerialized]
		[Token(Token = "0x4000C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityEngine.Component current;

		[NonSerialized]
		[Token(Token = "0x4000C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string _taskName;

		[NonSerialized]
		[Token(Token = "0x4000C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string _taskDescription;

		[NonSerialized]
		[Token(Token = "0x4000C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string _obsoleteInfo;

		[Token(Token = "0x4000C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97FEF4", Offset = "0x97FEF4")]
		private string <firstWarningMessage>k__BackingField;

		[Token(Token = "0x170001E6")]
		public ITaskSystem ownerSystem
		{
			[Token(Token = "0x60012DB")]
			[Address(RVA = "0x1703208", Offset = "0x1703208", VA = "0x1703208")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012DC")]
			[Address(RVA = "0x1703200", Offset = "0x1703200", VA = "0x1703200")]
			private set
			{
			}
		}

		[Token(Token = "0x170001E7")]
		public UnityEngine.Component ownerAgent
		{
			[Token(Token = "0x60012DD")]
			[Address(RVA = "0x1703210", Offset = "0x1703210", VA = "0x1703210")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E8")]
		public IBlackboard ownerBlackboard
		{
			[Token(Token = "0x60012DE")]
			[Address(RVA = "0x17032CC", Offset = "0x17032CC", VA = "0x17032CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E9")]
		protected float ownerElapsedTime
		{
			[Token(Token = "0x60012DF")]
			[Address(RVA = "0x170338C", Offset = "0x170338C", VA = "0x170338C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001EA")]
		public bool isActive
		{
			[Token(Token = "0x60012E0")]
			[Address(RVA = "0x170344C", Offset = "0x170344C", VA = "0x170344C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60012E1")]
			[Address(RVA = "0x170345C", Offset = "0x170345C", VA = "0x170345C")]
			set
			{
			}
		}

		[Token(Token = "0x170001EB")]
		public string obsolete
		{
			[Token(Token = "0x60012E2")]
			[Address(RVA = "0x170346C", Offset = "0x170346C", VA = "0x170346C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EC")]
		public string name
		{
			[Token(Token = "0x60012E3")]
			[Address(RVA = "0x1703528", Offset = "0x1703528", VA = "0x1703528")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001ED")]
		public string description
		{
			[Token(Token = "0x60012E4")]
			[Address(RVA = "0x1703644", Offset = "0x1703644", VA = "0x1703644")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EE")]
		public virtual Type agentType
		{
			[Token(Token = "0x60012E5")]
			[Address(RVA = "0x17036FC", Offset = "0x17036FC", VA = "0x17036FC", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EF")]
		public string summaryInfo
		{
			[Token(Token = "0x60012E6")]
			[Address(RVA = "0x1703704", Offset = "0x1703704", VA = "0x1703704")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F0")]
		protected virtual string info
		{
			[Token(Token = "0x60012E7")]
			[Address(RVA = "0x1703884", Offset = "0x1703884", VA = "0x1703884", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F1")]
		public string agentInfo
		{
			[Token(Token = "0x60012E8")]
			[Address(RVA = "0x1703888", Offset = "0x1703888", VA = "0x1703888")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F2")]
		public bool agentIsOverride
		{
			[Token(Token = "0x60012E9")]
			[Address(RVA = "0x1703874", Offset = "0x1703874", VA = "0x1703874")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60012EA")]
			[Address(RVA = "0x17038F0", Offset = "0x17038F0", VA = "0x17038F0")]
			set
			{
			}
		}

		[Token(Token = "0x170001F3")]
		public string overrideAgentParameterName
		{
			[Token(Token = "0x60012EB")]
			[Address(RVA = "0x17039A4", Offset = "0x17039A4", VA = "0x17039A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F4")]
		public UnityEngine.Component agent
		{
			[Token(Token = "0x60012EC")]
			[Address(RVA = "0x17039B8", Offset = "0x17039B8", VA = "0x17039B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F5")]
		public IBlackboard blackboard
		{
			[Token(Token = "0x60012ED")]
			[Address(RVA = "0x170399C", Offset = "0x170399C", VA = "0x170399C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012EE")]
			[Address(RVA = "0x1703CCC", Offset = "0x1703CCC", VA = "0x1703CCC")]
			private set
			{
			}
		}

		[Token(Token = "0x170001F6")]
		public string firstWarningMessage
		{
			[Token(Token = "0x60012EF")]
			[Address(RVA = "0x1703D28", Offset = "0x1703D28", VA = "0x1703D28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986940", Offset = "0x986940")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012F0")]
			[Address(RVA = "0x1703D30", Offset = "0x1703D30", VA = "0x1703D30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986950", Offset = "0x986950")]
			private set
			{
			}
		}

		[Token(Token = "0x60012D2")]
		[Address(RVA = "0x1702CD4", Offset = "0x1702CD4", VA = "0x1702CD4", Slot = "4")]
		private BBParameter[] NodeCanvas.Framework.ISubParametersContainer.GetSubParameters()
		{
			return null;
		}

		[Token(Token = "0x60012D3")]
		[Address(RVA = "0x1702D90", Offset = "0x1702D90", VA = "0x1702D90")]
		public Task()
		{
		}

		[Token(Token = "0x60012D4")]
		public static T Create<T>(ITaskSystem newOwnerSystem) where T : Task
		{
			return null;
		}

		[Token(Token = "0x60012D5")]
		[Address(RVA = "0x1702D98", Offset = "0x1702D98", VA = "0x1702D98")]
		public static Task Create(Type type, ITaskSystem newOwnerSystem)
		{
			return null;
		}

		[Token(Token = "0x60012D6")]
		[Address(RVA = "0x1703028", Offset = "0x1703028", VA = "0x1703028", Slot = "5")]
		public virtual Task Duplicate(ITaskSystem newOwnerSystem)
		{
			return null;
		}

		[Token(Token = "0x60012D7")]
		[Address(RVA = "0x1702F38", Offset = "0x1702F38", VA = "0x1702F38")]
		public void Validate(ITaskSystem ownerSystem)
		{
		}

		[Token(Token = "0x60012D8")]
		[Address(RVA = "0x17031F8", Offset = "0x17031F8", VA = "0x17031F8", Slot = "6")]
		public virtual void OnCreate(ITaskSystem ownerSystem)
		{
		}

		[Token(Token = "0x60012D9")]
		[Address(RVA = "0x17031FC", Offset = "0x17031FC", VA = "0x17031FC", Slot = "7")]
		public virtual void OnValidate(ITaskSystem ownerSystem)
		{
		}

		[Token(Token = "0x60012DA")]
		[Address(RVA = "0x1703154", Offset = "0x1703154", VA = "0x1703154")]
		public void SetOwnerSystem(ITaskSystem newOwnerSystem)
		{
		}

		[Token(Token = "0x60012F1")]
		[Address(RVA = "0x1703D38", Offset = "0x1703D38", VA = "0x1703D38")]
		protected Coroutine StartCoroutine(IEnumerator routine)
		{
			return null;
		}

		[Token(Token = "0x60012F2")]
		[Address(RVA = "0x1703D74", Offset = "0x1703D74", VA = "0x1703D74")]
		protected void StopCoroutine(Coroutine routine)
		{
		}

		[Token(Token = "0x60012F3")]
		[Address(RVA = "0x1703DB0", Offset = "0x1703DB0", VA = "0x1703DB0")]
		protected void SendEvent(EventData eventData)
		{
		}

		[Token(Token = "0x60012F4")]
		[Address(RVA = "0x1703E84", Offset = "0x1703E84", VA = "0x1703E84", Slot = "10")]
		protected virtual string OnInit()
		{
			return null;
		}

		[Token(Token = "0x60012F5")]
		[Address(RVA = "0x1703E8C", Offset = "0x1703E8C", VA = "0x1703E8C")]
		protected bool Set(UnityEngine.Component newAgent, IBlackboard newBB)
		{
			return default(bool);
		}

		[Token(Token = "0x60012F6")]
		[Address(RVA = "0x1703B00", Offset = "0x1703B00", VA = "0x1703B00")]
		private static UnityEngine.Component TransformAgent(UnityEngine.Component input, Type type)
		{
			return null;
		}

		[Token(Token = "0x60012F7")]
		[Address(RVA = "0x170407C", Offset = "0x170407C", VA = "0x170407C")]
		private bool Initialize(UnityEngine.Component newAgent)
		{
			return default(bool);
		}

		[Token(Token = "0x60012F8")]
		[Address(RVA = "0x170460C", Offset = "0x170460C", VA = "0x170460C")]
		private bool InitializeAttributes(UnityEngine.Component newAgent)
		{
			return default(bool);
		}

		[Token(Token = "0x60012F9")]
		[Address(RVA = "0x1704364", Offset = "0x1704364", VA = "0x1704364")]
		protected bool Error(string error)
		{
			return default(bool);
		}

		[Token(Token = "0x60012FA")]
		[Address(RVA = "0x17048F8", Offset = "0x17048F8", VA = "0x17048F8")]
		public void RegisterEvent(string eventName)
		{
		}

		[Token(Token = "0x60012FB")]
		[Address(RVA = "0x17044B0", Offset = "0x17044B0", VA = "0x17044B0")]
		public void RegisterEvents(params string[] eventNames)
		{
		}

		[Token(Token = "0x60012FC")]
		[Address(RVA = "0x17049B8", Offset = "0x17049B8", VA = "0x17049B8")]
		public void UnRegisterEvent(string eventName)
		{
		}

		[Token(Token = "0x60012FD")]
		[Address(RVA = "0x1704A78", Offset = "0x1704A78", VA = "0x1704A78")]
		public void UnRegisterEvents(params string[] eventNames)
		{
		}

		[Token(Token = "0x60012FE")]
		[Address(RVA = "0x1704254", Offset = "0x1704254", VA = "0x1704254")]
		public void UnRegisterAllEvents()
		{
		}

		[Token(Token = "0x60012FF")]
		[Address(RVA = "0x1704B90", Offset = "0x1704B90", VA = "0x1704B90")]
		public string GetWarning()
		{
			return null;
		}

		[Token(Token = "0x6001300")]
		[Address(RVA = "0x1704BB4", Offset = "0x1704BB4", VA = "0x1704BB4")]
		private string Internal_GetWarning()
		{
			return null;
		}

		[Token(Token = "0x6001301")]
		[Address(RVA = "0x1705110", Offset = "0x1705110", VA = "0x1705110", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001302")]
		[Address(RVA = "0x1705114", Offset = "0x1705114", VA = "0x1705114", Slot = "11")]
		public virtual void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001303")]
		[Address(RVA = "0x1705118", Offset = "0x1705118", VA = "0x1705118", Slot = "12")]
		public virtual void OnDrawGizmosSelected()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200033E")]
	[SpoofAOT]
	public abstract class BBParameter
	{
		[Token(Token = "0x4000C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private string _name;

		[Token(Token = "0x4000C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string _targetVariableID;

		[NonSerialized]
		[Token(Token = "0x4000C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IBlackboard _bb;

		[NonSerialized]
		[Token(Token = "0x4000C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Variable _varRef;

		[Token(Token = "0x170001F7")]
		private string targetVariableID
		{
			[Token(Token = "0x6001308")]
			[Address(RVA = "0xF5C924", Offset = "0xF5C924", VA = "0xF5C924")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001309")]
			[Address(RVA = "0xF5C92C", Offset = "0xF5C92C", VA = "0xF5C92C")]
			set
			{
			}
		}

		[Token(Token = "0x170001F8")]
		public Variable varRef
		{
			[Token(Token = "0x600130A")]
			[Address(RVA = "0xF5C934", Offset = "0xF5C934", VA = "0xF5C934")]
			get
			{
				return null;
			}
			[Token(Token = "0x600130B")]
			[Address(RVA = "0xF5C93C", Offset = "0xF5C93C", VA = "0xF5C93C")]
			set
			{
			}
		}

		[Token(Token = "0x170001F9")]
		public IBlackboard bb
		{
			[Token(Token = "0x600130C")]
			[Address(RVA = "0xF5C95C", Offset = "0xF5C95C", VA = "0xF5C95C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600130D")]
			[Address(RVA = "0xF5BFA0", Offset = "0xF5BFA0", VA = "0xF5BFA0")]
			set
			{
			}
		}

		[Token(Token = "0x170001FA")]
		public string name
		{
			[Token(Token = "0x600130E")]
			[Address(RVA = "0xF5CBD4", Offset = "0xF5CBD4", VA = "0xF5CBD4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600130F")]
			[Address(RVA = "0xF5CBDC", Offset = "0xF5CBDC", VA = "0xF5CBDC")]
			set
			{
			}
		}

		[Token(Token = "0x170001FB")]
		public bool useBlackboard
		{
			[Token(Token = "0x6001310")]
			[Address(RVA = "0xF5CC5C", Offset = "0xF5CC5C", VA = "0xF5CC5C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001311")]
			[Address(RVA = "0xF5CC6C", Offset = "0xF5CC6C", VA = "0xF5CC6C")]
			set
			{
			}
		}

		[Token(Token = "0x170001FC")]
		public bool isNone
		{
			[Token(Token = "0x6001312")]
			[Address(RVA = "0xF5CCFC", Offset = "0xF5CCFC", VA = "0xF5CCFC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001FD")]
		public bool isDefined
		{
			[Token(Token = "0x6001313")]
			[Address(RVA = "0xF5CD58", Offset = "0xF5CD58", VA = "0xF5CD58")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001FE")]
		public bool isNull
		{
			[Token(Token = "0x6001314")]
			[Address(RVA = "0xF5CD7C", Offset = "0xF5CD7C", VA = "0xF5CD7C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001FF")]
		public Type refType
		{
			[Token(Token = "0x6001315")]
			[Address(RVA = "0xF5CDA0", Offset = "0xF5CDA0", VA = "0xF5CDA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000200")]
		public object value
		{
			[Token(Token = "0x6001316")]
			[Address(RVA = "0xF5CDB8", Offset = "0xF5CDB8", VA = "0xF5CDB8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001317")]
			[Address(RVA = "0xF5CDC4", Offset = "0xF5CDC4", VA = "0xF5CDC4")]
			set
			{
			}
		}

		[Token(Token = "0x17000201")]
		protected abstract object objectValue
		{
			[Token(Token = "0x6001318")]
			get;
			[Token(Token = "0x6001319")]
			set;
		}

		[Token(Token = "0x17000202")]
		public abstract Type varType
		{
			[Token(Token = "0x600131A")]
			get;
		}

		[Token(Token = "0x6001304")]
		[Address(RVA = "0xF5BD9C", Offset = "0xF5BD9C", VA = "0xF5BD9C")]
		public BBParameter()
		{
		}

		[Token(Token = "0x6001305")]
		[Address(RVA = "0xF5BDA4", Offset = "0xF5BDA4", VA = "0xF5BDA4")]
		public static BBParameter CreateInstance(Type t, IBlackboard bb)
		{
			return null;
		}

		[Token(Token = "0x6001306")]
		[Address(RVA = "0xF5C014", Offset = "0xF5C014", VA = "0xF5C014")]
		public static void SetBBFields(object o, IBlackboard bb)
		{
		}

		[Token(Token = "0x6001307")]
		[Address(RVA = "0xF5C104", Offset = "0xF5C104", VA = "0xF5C104")]
		public static List<BBParameter> GetObjectBBParameters(object o)
		{
			return null;
		}

		[Token(Token = "0x600131B")]
		protected abstract void Bind(Variable data);

		[Token(Token = "0x600131C")]
		[Address(RVA = "0xF5C964", Offset = "0xF5C964", VA = "0xF5C964")]
		private Variable ResolveReference(IBlackboard targetBlackboard, bool useID)
		{
			return null;
		}

		[Token(Token = "0x600131D")]
		[Address(RVA = "0xF5D098", Offset = "0xF5D098", VA = "0xF5D098")]
		public Variable PromoteToVariable(IBlackboard targetBB)
		{
			return null;
		}

		[Token(Token = "0x600131E")]
		[Address(RVA = "0xF5D4B8", Offset = "0xF5D4B8", VA = "0xF5D4B8", Slot = "3")]
		public sealed override string ToString()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x200033F")]
	public class BBParameter<T> : BBParameter
	{
		[Token(Token = "0x20007CB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979D84", Offset = "0x979D84")]
		private sealed class <>c__DisplayClass14_0
		{
			[Token(Token = "0x400214C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<object> convertFunc;

			[Token(Token = "0x6002727")]
			public <>c__DisplayClass14_0()
			{
			}

			[Token(Token = "0x6002728")]
			internal T <BindGetter>b__0()
			{
				return (T)null;
			}
		}

		[Token(Token = "0x20007CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979D94", Offset = "0x979D94")]
		private sealed class <>c__DisplayClass15_0
		{
			[Token(Token = "0x400214D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<object> convertFunc;

			[Token(Token = "0x400214E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Variable variable;

			[Token(Token = "0x400214F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public BBParameter<T> <>4__this;

			[Token(Token = "0x6002729")]
			public <>c__DisplayClass15_0()
			{
			}

			[Token(Token = "0x600272A")]
			internal void <BindSetter>b__0(T value)
			{
			}

			[Token(Token = "0x600272B")]
			internal void <BindSetter>b__1(T value)
			{
			}
		}

		[Token(Token = "0x4000C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Func<T> getter;

		[Token(Token = "0x4000C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Action<T> setter;

		[Token(Token = "0x4000C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		protected T _value;

		[Token(Token = "0x17000203")]
		public new T value
		{
			[Token(Token = "0x6001321")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x6001322")]
			set
			{
			}
		}

		[Token(Token = "0x17000204")]
		protected override object objectValue
		{
			[Token(Token = "0x6001323")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001324")]
			set
			{
			}
		}

		[Token(Token = "0x17000205")]
		public override Type varType
		{
			[Token(Token = "0x6001325")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600131F")]
		public BBParameter()
		{
		}

		[Token(Token = "0x6001320")]
		public BBParameter(T value)
		{
		}

		[Token(Token = "0x6001326")]
		protected override void Bind(Variable variable)
		{
		}

		[Token(Token = "0x6001327")]
		private bool BindGetter(Variable variable)
		{
			return default(bool);
		}

		[Token(Token = "0x6001328")]
		private bool BindSetter(Variable variable)
		{
			return default(bool);
		}

		[Token(Token = "0x6001329")]
		public static implicit operator BBParameter<T>(T value)
		{
			return null;
		}
	}
	[Token(Token = "0x2000340")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x977290", Offset = "0x977290")]
	[SpoofAOT]
	public class Blackboard : MonoBehaviour, ISerializationCallbackReceiver, IBlackboard
	{
		[Token(Token = "0x4000C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string _serializedBlackboard;

		[Token(Token = "0x4000C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private List<UnityEngine.Object> _objectReferences;

		[NonSerialized]
		[Token(Token = "0x4000C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private BlackboardSource _blackboard;

		[NonSerialized]
		[Token(Token = "0x4000C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool hasDeserialized;

		[Token(Token = "0x17000206")]
		public new string name
		{
			[Token(Token = "0x6001331")]
			[Address(RVA = "0xF5DD44", Offset = "0xF5DD44", VA = "0xF5DD44", Slot = "10")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001332")]
			[Address(RVA = "0xF5DE00", Offset = "0xF5DE00", VA = "0xF5DE00", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x17000207")]
		public object Item
		{
			[Token(Token = "0x6001333")]
			[Address(RVA = "0xF5DEB4", Offset = "0xF5DEB4", VA = "0xF5DEB4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001334")]
			[Address(RVA = "0xF5DFF0", Offset = "0xF5DFF0", VA = "0xF5DFF0")]
			set
			{
			}
		}

		[Token(Token = "0x17000208")]
		public Dictionary<string, Variable> variables
		{
			[Token(Token = "0x6001335")]
			[Address(RVA = "0xF5E038", Offset = "0xF5E038", VA = "0xF5E038", Slot = "12")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001336")]
			[Address(RVA = "0xF5E06C", Offset = "0xF5E06C", VA = "0xF5E06C", Slot = "13")]
			set
			{
			}
		}

		[Token(Token = "0x17000209")]
		public GameObject propertiesBindTarget
		{
			[Token(Token = "0x6001337")]
			[Address(RVA = "0xF5DBD4", Offset = "0xF5DBD4", VA = "0xF5DBD4", Slot = "14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000037")]
		public event Action<Variable> onVariableAdded
		{
			[Token(Token = "0x600132A")]
			[Address(RVA = "0xF5D650", Offset = "0xF5D650", VA = "0xF5D650", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986960", Offset = "0x986960")]
			add
			{
			}
			[Token(Token = "0x600132B")]
			[Address(RVA = "0xF5D73C", Offset = "0xF5D73C", VA = "0xF5D73C", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986970", Offset = "0x986970")]
			remove
			{
			}
		}

		[Token(Token = "0x14000038")]
		public event Action<Variable> onVariableRemoved
		{
			[Token(Token = "0x600132C")]
			[Address(RVA = "0xF5D828", Offset = "0xF5D828", VA = "0xF5D828", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986980", Offset = "0x986980")]
			add
			{
			}
			[Token(Token = "0x600132D")]
			[Address(RVA = "0xF5D914", Offset = "0xF5D914", VA = "0xF5D914", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986990", Offset = "0x986990")]
			remove
			{
			}
		}

		[Token(Token = "0x600132E")]
		[Address(RVA = "0xF5DA00", Offset = "0xF5DA00", VA = "0xF5DA00", Slot = "4")]
		private void UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize()
		{
		}

		[Token(Token = "0x600132F")]
		[Address(RVA = "0xF5DA04", Offset = "0xF5DA04", VA = "0xF5DA04", Slot = "5")]
		private void UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6001330")]
		[Address(RVA = "0xF5DB94", Offset = "0xF5DB94", VA = "0xF5DB94", Slot = "25")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001338")]
		[Address(RVA = "0xF5E0A4", Offset = "0xF5E0A4", VA = "0xF5E0A4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x9869A0", Offset = "0x9869A0")]
		private void ShowJson()
		{
		}

		[Token(Token = "0x6001339")]
		[Address(RVA = "0xF5E124", Offset = "0xF5E124", VA = "0xF5E124", Slot = "15")]
		public Variable AddVariable(string name, Type type)
		{
			return null;
		}

		[Token(Token = "0x600133A")]
		[Address(RVA = "0xF5E4D0", Offset = "0xF5E4D0", VA = "0xF5E4D0", Slot = "16")]
		public Variable AddVariable(string name, object value)
		{
			return null;
		}

		[Token(Token = "0x600133B")]
		[Address(RVA = "0xF5E630", Offset = "0xF5E630", VA = "0xF5E630", Slot = "17")]
		public Variable RemoveVariable(string name)
		{
			return null;
		}

		[Token(Token = "0x600133C")]
		[Address(RVA = "0xF5E788", Offset = "0xF5E788", VA = "0xF5E788", Slot = "18")]
		public Variable GetVariable(string name, [Optional] Type ofType)
		{
			return null;
		}

		[Token(Token = "0x600133D")]
		[Address(RVA = "0xF5E8C4", Offset = "0xF5E8C4", VA = "0xF5E8C4", Slot = "19")]
		public Variable GetVariableByID(string ID)
		{
			return null;
		}

		[Token(Token = "0x600133E")]
		public Variable<T> GetVariable<T>(string name)
		{
			return null;
		}

		[Token(Token = "0x600133F")]
		public T GetValue<T>(string name)
		{
			return (T)null;
		}

		[Token(Token = "0x6001340")]
		[Address(RVA = "0xF5DFF4", Offset = "0xF5DFF4", VA = "0xF5DFF4", Slot = "22")]
		public Variable SetValue(string name, object value)
		{
			return null;
		}

		[Token(Token = "0x6001341")]
		[Address(RVA = "0xF5ED68", Offset = "0xF5ED68", VA = "0xF5ED68", Slot = "23")]
		public string[] GetVariableNames()
		{
			return null;
		}

		[Token(Token = "0x6001342")]
		[Address(RVA = "0xF5EE04", Offset = "0xF5EE04", VA = "0xF5EE04", Slot = "24")]
		public string[] GetVariableNames(Type ofType)
		{
			return null;
		}

		[Token(Token = "0x6001343")]
		[Address(RVA = "0xF5EFE8", Offset = "0xF5EFE8", VA = "0xF5EFE8")]
		public string Save()
		{
			return null;
		}

		[Token(Token = "0x6001344")]
		[Address(RVA = "0xF5F030", Offset = "0xF5F030", VA = "0xF5F030")]
		public string Save(string saveKey)
		{
			return null;
		}

		[Token(Token = "0x6001345")]
		[Address(RVA = "0xF5F078", Offset = "0xF5F078", VA = "0xF5F078")]
		public bool Load()
		{
			return default(bool);
		}

		[Token(Token = "0x6001346")]
		[Address(RVA = "0xF5F0A0", Offset = "0xF5F0A0", VA = "0xF5F0A0")]
		public bool Load(string saveKey)
		{
			return default(bool);
		}

		[Token(Token = "0x6001347")]
		[Address(RVA = "0xF5F070", Offset = "0xF5F070", VA = "0xF5F070")]
		public string Serialize()
		{
			return null;
		}

		[Token(Token = "0x6001348")]
		[Address(RVA = "0xF5F184", Offset = "0xF5F184", VA = "0xF5F184")]
		public string Serialize(List<UnityEngine.Object> storedObjectReferences)
		{
			return null;
		}

		[Token(Token = "0x6001349")]
		[Address(RVA = "0xF5F178", Offset = "0xF5F178", VA = "0xF5F178")]
		public bool Deserialize(string json)
		{
			return default(bool);
		}

		[Token(Token = "0x600134A")]
		[Address(RVA = "0xF5F248", Offset = "0xF5F248", VA = "0xF5F248")]
		public bool Deserialize(string json, List<UnityEngine.Object> storedObjectReferences, bool removeMissing = true)
		{
			return default(bool);
		}

		[Token(Token = "0x600134B")]
		[Address(RVA = "0xF5F6DC", Offset = "0xF5F6DC", VA = "0xF5F6DC")]
		public Blackboard()
		{
		}
	}
	[Token(Token = "0x2000341")]
	[ExecuteInEditMode]
	public class GlobalBlackboard : Blackboard
	{
		[Token(Token = "0x20007CD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979DA4", Offset = "0x979DA4")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4002150")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string name;

			[Token(Token = "0x600272C")]
			[Address(RVA = "0xF61A90", Offset = "0xF61A90", VA = "0xF61A90")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x600272D")]
			[Address(RVA = "0xF61ECC", Offset = "0xF61ECC", VA = "0xF61ECC")]
			internal bool <Find>b__0(GlobalBlackboard b)
			{
				return default(bool);
			}

			[Token(Token = "0x600272E")]
			[Address(RVA = "0xF61F08", Offset = "0xF61F08", VA = "0xF61F08")]
			internal bool <Find>b__1(GlobalBlackboard b)
			{
				return default(bool);
			}

			[Token(Token = "0x600272F")]
			[Address(RVA = "0xF61F44", Offset = "0xF61F44", VA = "0xF61F44")]
			internal bool <Find>b__2(GlobalBlackboard b)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static List<GlobalBlackboard> allGlobals;

		[Token(Token = "0x4000C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool dontDestroy;

		[Token(Token = "0x1700020A")]
		public new string name
		{
			[Token(Token = "0x600134C")]
			[Address(RVA = "0xF61810", Offset = "0xF61810", VA = "0xF61810")]
			get
			{
				return null;
			}
			[Token(Token = "0x600134D")]
			[Address(RVA = "0xF61814", Offset = "0xF61814", VA = "0xF61814")]
			set
			{
			}
		}

		[Token(Token = "0x600134E")]
		[Address(RVA = "0xF619E8", Offset = "0xF619E8", VA = "0xF619E8")]
		public static GlobalBlackboard Create()
		{
			return null;
		}

		[Token(Token = "0x600134F")]
		[Address(RVA = "0xF5CDD0", Offset = "0xF5CDD0", VA = "0xF5CDD0")]
		public static GlobalBlackboard Find(string name)
		{
			return null;
		}

		[Token(Token = "0x6001350")]
		[Address(RVA = "0xF61A98", Offset = "0xF61A98", VA = "0xF61A98", Slot = "25")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001351")]
		[Address(RVA = "0xF61D00", Offset = "0xF61D00", VA = "0xF61D00")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001352")]
		[Address(RVA = "0xF618E8", Offset = "0xF618E8", VA = "0xF618E8")]
		private bool IsUnique()
		{
			return default(bool);
		}

		[Token(Token = "0x6001353")]
		[Address(RVA = "0xF61D8C", Offset = "0xF61D8C", VA = "0xF61D8C")]
		public GlobalBlackboard()
		{
		}

		[Token(Token = "0x6001355")]
		[Address(RVA = "0xF61E0C", Offset = "0xF61E0C", VA = "0xF61E0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9869D8", Offset = "0x9869D8")]
		private bool <IsUnique>b__9_0(GlobalBlackboard b)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000342")]
	[SpoofAOT]
	public interface IBlackboard
	{
		[Token(Token = "0x1700020B")]
		string name
		{
			[Token(Token = "0x600135A")]
			get;
			[Token(Token = "0x600135B")]
			set;
		}

		[Token(Token = "0x1700020C")]
		Dictionary<string, Variable> variables
		{
			[Token(Token = "0x600135C")]
			get;
			[Token(Token = "0x600135D")]
			set;
		}

		[Token(Token = "0x1700020D")]
		GameObject propertiesBindTarget
		{
			[Token(Token = "0x600135E")]
			get;
		}

		[Token(Token = "0x14000039")]
		event Action<Variable> onVariableAdded;

		[Token(Token = "0x1400003A")]
		event Action<Variable> onVariableRemoved;

		[Token(Token = "0x600135F")]
		Variable AddVariable(string varName, Type type);

		[Token(Token = "0x6001360")]
		Variable AddVariable(string varName, object value);

		[Token(Token = "0x6001361")]
		Variable RemoveVariable(string varName);

		[Token(Token = "0x6001362")]
		Variable GetVariable(string varName, [Optional] Type ofType);

		[Token(Token = "0x6001363")]
		Variable GetVariableByID(string ID);

		[Token(Token = "0x6001364")]
		Variable<T> GetVariable<T>(string varName);

		[Token(Token = "0x6001365")]
		T GetValue<T>(string varName);

		[Token(Token = "0x6001366")]
		Variable SetValue(string varName, object value);

		[Token(Token = "0x6001367")]
		string[] GetVariableNames();

		[Token(Token = "0x6001368")]
		string[] GetVariableNames(Type ofType);
	}
	[Serializable]
	[Token(Token = "0x2000343")]
	[SpoofAOT]
	public abstract class Variable
	{
		[Token(Token = "0x20007CE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979DB4", Offset = "0x979DB4")]
		private sealed class <>c__DisplayClass37_0
		{
			[Token(Token = "0x4002151")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Variable <>4__this;

			[Token(Token = "0x4002152")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Func<object, object> converter;

			[Token(Token = "0x6002730")]
			[Address(RVA = "0x1705880", Offset = "0x1705880", VA = "0x1705880")]
			public <>c__DisplayClass37_0()
			{
			}

			[Token(Token = "0x6002731")]
			[Address(RVA = "0x17059FC", Offset = "0x17059FC", VA = "0x17059FC")]
			internal object <GetGetConverter>b__0()
			{
				return null;
			}

			[Token(Token = "0x6002732")]
			[Address(RVA = "0x1705A30", Offset = "0x1705A30", VA = "0x1705A30")]
			internal object <GetGetConverter>b__1()
			{
				return null;
			}
		}

		[Token(Token = "0x20007CF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979DC4", Offset = "0x979DC4")]
		private sealed class <>c__DisplayClass39_0
		{
			[Token(Token = "0x4002153")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Variable <>4__this;

			[Token(Token = "0x4002154")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Func<object, object> converter;

			[Token(Token = "0x6002733")]
			[Address(RVA = "0x17059EC", Offset = "0x17059EC", VA = "0x17059EC")]
			public <>c__DisplayClass39_0()
			{
			}

			[Token(Token = "0x6002734")]
			[Address(RVA = "0x1705AB4", Offset = "0x1705AB4", VA = "0x1705AB4")]
			internal void <GetSetConverter>b__0(object x)
			{
			}

			[Token(Token = "0x6002735")]
			[Address(RVA = "0x1705AF0", Offset = "0x1705AF0", VA = "0x1705AF0")]
			internal void <GetSetConverter>b__1(object x)
			{
			}
		}

		[Token(Token = "0x4000C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private string _name;

		[Token(Token = "0x4000C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string _id;

		[Token(Token = "0x4000C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool _protected;

		[Token(Token = "0x1700020E")]
		public string name
		{
			[Token(Token = "0x600136D")]
			[Address(RVA = "0x170552C", Offset = "0x170552C", VA = "0x170552C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600136E")]
			[Address(RVA = "0x1705534", Offset = "0x1705534", VA = "0x1705534")]
			set
			{
			}
		}

		[Token(Token = "0x1700020F")]
		public string ID
		{
			[Token(Token = "0x600136F")]
			[Address(RVA = "0x17055C0", Offset = "0x17055C0", VA = "0x17055C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000210")]
		public object value
		{
			[Token(Token = "0x6001370")]
			[Address(RVA = "0x1705660", Offset = "0x1705660", VA = "0x1705660")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001371")]
			[Address(RVA = "0x170566C", Offset = "0x170566C", VA = "0x170566C")]
			set
			{
			}
		}

		[Token(Token = "0x17000211")]
		public bool isProtected
		{
			[Token(Token = "0x6001372")]
			[Address(RVA = "0x1705678", Offset = "0x1705678", VA = "0x1705678")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001373")]
			[Address(RVA = "0x1705680", Offset = "0x1705680", VA = "0x1705680")]
			set
			{
			}
		}

		[Token(Token = "0x17000212")]
		protected abstract object objectValue
		{
			[Token(Token = "0x6001377")]
			get;
			[Token(Token = "0x6001378")]
			set;
		}

		[Token(Token = "0x17000213")]
		public abstract Type varType
		{
			[Token(Token = "0x6001379")]
			get;
		}

		[Token(Token = "0x17000214")]
		public abstract bool hasBinding
		{
			[Token(Token = "0x600137A")]
			get;
		}

		[Token(Token = "0x17000215")]
		public abstract string propertyPath
		{
			[Token(Token = "0x600137B")]
			get;
			[Token(Token = "0x600137C")]
			set;
		}

		[Token(Token = "0x1400003B")]
		public event Action<string> onNameChanged
		{
			[Token(Token = "0x6001369")]
			[Address(RVA = "0x170517C", Offset = "0x170517C", VA = "0x170517C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986A28", Offset = "0x986A28")]
			add
			{
			}
			[Token(Token = "0x600136A")]
			[Address(RVA = "0x1705268", Offset = "0x1705268", VA = "0x1705268")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986A38", Offset = "0x986A38")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003C")]
		public event Action<string, object> onValueChanged
		{
			[Token(Token = "0x600136B")]
			[Address(RVA = "0x1705354", Offset = "0x1705354", VA = "0x1705354")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986A48", Offset = "0x986A48")]
			add
			{
			}
			[Token(Token = "0x600136C")]
			[Address(RVA = "0x1705440", Offset = "0x1705440", VA = "0x1705440")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986A58", Offset = "0x986A58")]
			remove
			{
			}
		}

		[Token(Token = "0x6001374")]
		[Address(RVA = "0x170568C", Offset = "0x170568C", VA = "0x170568C")]
		protected bool HasValueChangeEvent()
		{
			return default(bool);
		}

		[Token(Token = "0x6001375")]
		[Address(RVA = "0x170569C", Offset = "0x170569C", VA = "0x170569C")]
		protected void OnValueChanged(string name, object value)
		{
		}

		[Token(Token = "0x6001376")]
		[Address(RVA = "0x1705718", Offset = "0x1705718", VA = "0x1705718")]
		public Variable()
		{
		}

		[Token(Token = "0x600137D")]
		public abstract void BindProperty(MemberInfo prop, [Optional] GameObject target);

		[Token(Token = "0x600137E")]
		public abstract void UnBindProperty();

		[Token(Token = "0x600137F")]
		public abstract void InitializePropertyBinding(GameObject go, bool callSetter = false);

		[Token(Token = "0x6001380")]
		[Address(RVA = "0x1705720", Offset = "0x1705720", VA = "0x1705720")]
		public bool CanConvertTo(Type toType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001381")]
		[Address(RVA = "0x170573C", Offset = "0x170573C", VA = "0x170573C")]
		public Func<object> GetGetConverter(Type toType)
		{
			return null;
		}

		[Token(Token = "0x6001382")]
		[Address(RVA = "0x1705888", Offset = "0x1705888", VA = "0x1705888")]
		public bool CanConvertFrom(Type fromType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001383")]
		[Address(RVA = "0x17058A4", Offset = "0x17058A4", VA = "0x17058A4")]
		public Action<object> GetSetConverter(Type fromType)
		{
			return null;
		}

		[Token(Token = "0x6001384")]
		[Address(RVA = "0x17059F4", Offset = "0x17059F4", VA = "0x17059F4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000344")]
	public class Variable<T> : Variable
	{
		[Token(Token = "0x20007D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979DD4", Offset = "0x979DD4")]
		private sealed class <>c__DisplayClass22_0
		{
			[Token(Token = "0x4002155")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Variable<T> <>4__this;

			[Token(Token = "0x4002156")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject go;

			[Token(Token = "0x4002157")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FieldInfo field;

			[Token(Token = "0x6002736")]
			public <>c__DisplayClass22_0()
			{
			}

			[Token(Token = "0x6002737")]
			internal T <InitializePropertyBinding>b__1()
			{
				return (T)null;
			}

			[Token(Token = "0x6002738")]
			internal void <InitializePropertyBinding>b__3(T o)
			{
			}
		}

		[Token(Token = "0x20007D1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979DE4", Offset = "0x979DE4")]
		private sealed class <>c__DisplayClass22_1
		{
			[Token(Token = "0x4002158")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public MethodInfo getMethod;

			[Token(Token = "0x4002159")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public UnityEngine.Component instance;

			[Token(Token = "0x400215A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public MethodInfo setMethod;

			[Token(Token = "0x6002739")]
			public <>c__DisplayClass22_1()
			{
			}

			[Token(Token = "0x600273A")]
			internal T <InitializePropertyBinding>b__0()
			{
				return (T)null;
			}

			[Token(Token = "0x600273B")]
			internal void <InitializePropertyBinding>b__2(T o)
			{
			}
		}

		[Token(Token = "0x20007D2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979DF4", Offset = "0x979DF4")]
		private sealed class <>c__DisplayClass22_2
		{
			[Token(Token = "0x400215B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public UnityEngine.Component instance;

			[Token(Token = "0x400215C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public <>c__DisplayClass22_0 CS$<>8__locals1;

			[Token(Token = "0x600273C")]
			public <>c__DisplayClass22_2()
			{
			}

			[Token(Token = "0x600273D")]
			internal T <InitializePropertyBinding>b__4()
			{
				return (T)null;
			}

			[Token(Token = "0x600273E")]
			internal void <InitializePropertyBinding>b__5(T o)
			{
			}
		}

		[Token(Token = "0x20007D3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979E04", Offset = "0x979E04")]
		private sealed class <>c__DisplayClass22_3
		{
			[Token(Token = "0x400215D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T value;

			[Token(Token = "0x600273F")]
			public <>c__DisplayClass22_3()
			{
			}

			[Token(Token = "0x6002740")]
			internal T <InitializePropertyBinding>b__6()
			{
				return (T)null;
			}
		}

		[Token(Token = "0x4000C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private T _value;

		[Token(Token = "0x4000C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private string _propertyPath;

		[Token(Token = "0x4000C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Func<T> getter;

		[Token(Token = "0x4000C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Action<T> setter;

		[Token(Token = "0x17000216")]
		public override string propertyPath
		{
			[Token(Token = "0x6001386")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001387")]
			set
			{
			}
		}

		[Token(Token = "0x17000217")]
		public override bool hasBinding
		{
			[Token(Token = "0x6001388")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000218")]
		protected override object objectValue
		{
			[Token(Token = "0x6001389")]
			get
			{
				return null;
			}
			[Token(Token = "0x600138A")]
			set
			{
			}
		}

		[Token(Token = "0x17000219")]
		public override Type varType
		{
			[Token(Token = "0x600138B")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021A")]
		public new T value
		{
			[Token(Token = "0x600138C")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x600138D")]
			set
			{
			}
		}

		[Token(Token = "0x6001385")]
		public Variable()
		{
		}

		[Token(Token = "0x600138E")]
		public T GetValue()
		{
			return (T)null;
		}

		[Token(Token = "0x600138F")]
		public void SetValue(T newValue)
		{
		}

		[Token(Token = "0x6001390")]
		public override void BindProperty(MemberInfo prop, [Optional] GameObject target)
		{
		}

		[Token(Token = "0x6001391")]
		public override void UnBindProperty()
		{
		}

		[Token(Token = "0x6001392")]
		public override void InitializePropertyBinding(GameObject go, bool callSetter = false)
		{
		}
	}
	[Token(Token = "0x2000345")]
	public class VariableSeperator
	{
		[Token(Token = "0x4000C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97FFE4", Offset = "0x97FFE4")]
		private bool <isEditingName>k__BackingField;

		[Token(Token = "0x1700021B")]
		public bool isEditingName
		{
			[Token(Token = "0x6001393")]
			[Address(RVA = "0x1705B84", Offset = "0x1705B84", VA = "0x1705B84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986A68", Offset = "0x986A68")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001394")]
			[Address(RVA = "0x1705B8C", Offset = "0x1705B8C", VA = "0x1705B8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986A78", Offset = "0x986A78")]
			set
			{
			}
		}

		[Token(Token = "0x6001395")]
		[Address(RVA = "0x1705B98", Offset = "0x1705B98", VA = "0x1705B98")]
		public VariableSeperator()
		{
		}
	}
}
namespace NodeCanvas.Framework.Internal
{
	[Serializable]
	[Token(Token = "0x2000346")]
	public class GraphSerializationData
	{
		[Token(Token = "0x4000C28")]
		public const float FRAMEWORK_VERSION = 2.96f;

		[Token(Token = "0x4000C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float version;

		[Token(Token = "0x4000C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Type type;

		[Token(Token = "0x4000C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string name;

		[Token(Token = "0x4000C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string category;

		[Token(Token = "0x4000C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string comments;

		[Token(Token = "0x4000C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector2 translation;

		[Token(Token = "0x4000C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float zoomFactor;

		[Token(Token = "0x4000C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<Node> nodes;

		[Token(Token = "0x4000C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<Connection> connections;

		[Token(Token = "0x4000C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<CanvasGroup> canvasGroups;

		[Token(Token = "0x4000C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public BlackboardSource localBlackboard;

		[Token(Token = "0x4000C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public object derivedData;

		[Token(Token = "0x6001396")]
		[Address(RVA = "0xF6A79C", Offset = "0xF6A79C", VA = "0xF6A79C")]
		public GraphSerializationData()
		{
		}

		[Token(Token = "0x6001397")]
		[Address(RVA = "0xF6312C", Offset = "0xF6312C", VA = "0xF6312C")]
		public GraphSerializationData(Graph graph)
		{
		}

		[Token(Token = "0x6001398")]
		[Address(RVA = "0xF635F4", Offset = "0xF635F4", VA = "0xF635F4")]
		public void Reconstruct(Graph graph)
		{
		}
	}
	[Token(Token = "0x2000347")]
	[DoNotList]
	public sealed class MissingConnection : Connection, IMissingRecoverable
	{
		[Token(Token = "0x4000C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string _missingType;

		[Token(Token = "0x4000C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private string _recoveryState;

		[Token(Token = "0x1700021C")]
		private string ParadoxNotion.Serialization.IMissingRecoverable.missingType
		{
			[Token(Token = "0x6001399")]
			[Address(RVA = "0xF6AAD4", Offset = "0xF6AAD4", VA = "0xF6AAD4", Slot = "8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600139A")]
			[Address(RVA = "0xF6AADC", Offset = "0xF6AADC", VA = "0xF6AADC", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x1700021D")]
		private string ParadoxNotion.Serialization.IMissingRecoverable.recoveryState
		{
			[Token(Token = "0x600139B")]
			[Address(RVA = "0xF6AAE4", Offset = "0xF6AAE4", VA = "0xF6AAE4", Slot = "10")]
			get
			{
				return null;
			}
			[Token(Token = "0x600139C")]
			[Address(RVA = "0xF6AAEC", Offset = "0xF6AAEC", VA = "0xF6AAEC", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x600139D")]
		[Address(RVA = "0xF6AAF4", Offset = "0xF6AAF4", VA = "0xF6AAF4")]
		public MissingConnection()
		{
		}
	}
	[Token(Token = "0x2000348")]
	[DoNotList]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x97731C", Offset = "0x97731C")]
	public sealed class MissingNode : Node, IMissingRecoverable
	{
		[Token(Token = "0x4000C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private string _missingType;

		[Token(Token = "0x4000C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private string _recoveryState;

		[Token(Token = "0x1700021E")]
		private string ParadoxNotion.Serialization.IMissingRecoverable.missingType
		{
			[Token(Token = "0x600139E")]
			[Address(RVA = "0xF6AB04", Offset = "0xF6AB04", VA = "0xF6AB04", Slot = "32")]
			get
			{
				return null;
			}
			[Token(Token = "0x600139F")]
			[Address(RVA = "0xF6AB0C", Offset = "0xF6AB0C", VA = "0xF6AB0C", Slot = "33")]
			set
			{
			}
		}

		[Token(Token = "0x1700021F")]
		private string ParadoxNotion.Serialization.IMissingRecoverable.recoveryState
		{
			[Token(Token = "0x60013A0")]
			[Address(RVA = "0xF6AB14", Offset = "0xF6AB14", VA = "0xF6AB14", Slot = "34")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013A1")]
			[Address(RVA = "0xF6AB1C", Offset = "0xF6AB1C", VA = "0xF6AB1C", Slot = "35")]
			set
			{
			}
		}

		[Token(Token = "0x17000220")]
		public override string name
		{
			[Token(Token = "0x60013A2")]
			[Address(RVA = "0xF6AB24", Offset = "0xF6AB24", VA = "0xF6AB24", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000221")]
		public override Type outConnectionType
		{
			[Token(Token = "0x60013A3")]
			[Address(RVA = "0xF6AB6C", Offset = "0xF6AB6C", VA = "0xF6AB6C", Slot = "11")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000222")]
		public override int maxInConnections
		{
			[Token(Token = "0x60013A4")]
			[Address(RVA = "0xF6AB74", Offset = "0xF6AB74", VA = "0xF6AB74", Slot = "9")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000223")]
		public override int maxOutConnections
		{
			[Token(Token = "0x60013A5")]
			[Address(RVA = "0xF6AB7C", Offset = "0xF6AB7C", VA = "0xF6AB7C", Slot = "10")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000224")]
		public override bool allowAsPrime
		{
			[Token(Token = "0x60013A6")]
			[Address(RVA = "0xF6AB84", Offset = "0xF6AB84", VA = "0xF6AB84", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000225")]
		public override Alignment2x2 commentsAlignment
		{
			[Token(Token = "0x60013A7")]
			[Address(RVA = "0xF6AB8C", Offset = "0xF6AB8C", VA = "0xF6AB8C", Slot = "13")]
			get
			{
				return default(Alignment2x2);
			}
		}

		[Token(Token = "0x17000226")]
		public override Alignment2x2 iconAlignment
		{
			[Token(Token = "0x60013A8")]
			[Address(RVA = "0xF6AB94", Offset = "0xF6AB94", VA = "0xF6AB94", Slot = "14")]
			get
			{
				return default(Alignment2x2);
			}
		}

		[Token(Token = "0x60013A9")]
		[Address(RVA = "0xF6AB9C", Offset = "0xF6AB9C", VA = "0xF6AB9C")]
		public MissingNode()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000349")]
	public class ReflectedAction : ReflectedActionWrapper
	{
		[Token(Token = "0x4000C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ActionCall call;

		[Token(Token = "0x60013AA")]
		[Address(RVA = "0xF6ACB0", Offset = "0xF6ACB0", VA = "0xF6ACB0", Slot = "4")]
		public override BBParameter[] GetVariables()
		{
			return null;
		}

		[Token(Token = "0x60013AB")]
		[Address(RVA = "0xF6ACFC", Offset = "0xF6ACFC", VA = "0xF6ACFC", Slot = "5")]
		public override void Init(object instance)
		{
		}

		[Token(Token = "0x60013AC")]
		[Address(RVA = "0xF6ADB4", Offset = "0xF6ADB4", VA = "0xF6ADB4", Slot = "6")]
		public override void Call()
		{
		}

		[Token(Token = "0x60013AD")]
		[Address(RVA = "0xF6B1E0", Offset = "0xF6B1E0", VA = "0xF6B1E0")]
		public ReflectedAction()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200034A")]
	[SpoofAOT]
	public class ReflectedAction<T1> : ReflectedActionWrapper
	{
		[Token(Token = "0x4000C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ActionCall<T1> call;

		[Token(Token = "0x4000C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T1> p1;

		[Token(Token = "0x60013AE")]
		public override BBParameter[] GetVariables()
		{
			return null;
		}

		[Token(Token = "0x60013AF")]
		public override void Init(object instance)
		{
		}

		[Token(Token = "0x60013B0")]
		public override void Call()
		{
		}

		[Token(Token = "0x60013B1")]
		public ReflectedAction()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200034B")]
	public class ReflectedAction<T1, T2> : ReflectedActionWrapper
	{
		[Token(Token = "0x4000C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ActionCall<T1, T2> call;

		[Token(Token = "0x4000C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T1> p1;

		[Token(Token = "0x4000C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T2> p2;

		[Token(Token = "0x60013B2")]
		public override BBParameter[] GetVariables()
		{
			return null;
		}

		[Token(Token = "0x60013B3")]
		public override void Init(object instance)
		{
		}

		[Token(Token = "0x60013B4")]
		public override void Call()
		{
		}

		[Token(Token = "0x60013B5")]
		public ReflectedAction()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200034C")]
	public class ReflectedAction<T1, T2, T3> : ReflectedActionWrapper
	{
		[Token(Token = "0x4000C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ActionCall<T1, T2, T3> call;

		[Token(Token = "0x4000C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T1> p1;

		[Token(Token = "0x4000C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T2> p2;

		[Token(Token = "0x4000C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T3> p3;

		[Token(Token = "0x60013B6")]
		public override BBParameter[] GetVariables()
		{
			return null;
		}

		[Token(Token = "0x60013B7")]
		public override void Init(object instance)
		{
		}

		[Token(Token = "0x60013B8")]
		public override void Call()
		{
		}

		[Token(Token = "0x60013B9")]
		public ReflectedAction()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200034D")]
	public class ReflectedAction<T1, T2, T3, T4> : ReflectedActionWrapper
	{
		[Token(Token = "0x4000C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ActionCall<T1, T2, T3, T4> call;

		[Token(Token = "0x4000C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T1> p1;

		[Token(Token = "0x4000C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T2> p2;

		[Token(Token = "0x4000C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T3> p3;

		[Token(Token = "0x4000C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T4> p4;

		[Token(Token = "0x60013BA")]
		public override BBParameter[] GetVariables()
		{
			return null;
		}

		[Token(Token = "0x60013BB")]
		public override void Init(object instance)
		{
		}

		[Token(Token = "0x60013BC")]
		public override void Call()
		{
		}

		[Token(Token = "0x60013BD")]
		public ReflectedAction()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200034E")]
	public class ReflectedAction<T1, T2, T3, T4, T5> : ReflectedActionWrapper
	{
		[Token(Token = "0x4000C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ActionCall<T1, T2, T3, T4, T5> call;

		[Token(Token = "0x4000C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T1> p1;

		[Token(Token = "0x4000C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T2> p2;

		[Token(Token = "0x4000C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T3> p3;

		[Token(Token = "0x4000C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T4> p4;

		[Token(Token = "0x4000C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T5> p5;

		[Token(Token = "0x60013BE")]
		public override BBParameter[] GetVariables()
		{
			return null;
		}

		[Token(Token = "0x60013BF")]
		public override void Init(object instance)
		{
		}

		[Token(Token = "0x60013C0")]
		public override void Call()
		{
		}

		[Token(Token = "0x60013C1")]
		public ReflectedAction()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200034F")]
	public class ReflectedAction<T1, T2, T3, T4, T5, T6> : ReflectedActionWrapper
	{
		[Token(Token = "0x4000C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ActionCall<T1, T2, T3, T4, T5, T6> call;

		[Token(Token = "0x4000C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T1> p1;

		[Token(Token = "0x4000C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T2> p2;

		[Token(Token = "0x4000C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T3> p3;

		[Token(Token = "0x4000C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T4> p4;

		[Token(Token = "0x4000C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T5> p5;

		[Token(Token = "0x4000C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T6> p6;

		[Token(Token = "0x60013C2")]
		public override BBParameter[] GetVariables()
		{
			return null;
		}

		[Token(Token = "0x60013C3")]
		public override void Init(object instance)
		{
		}

		[Token(Token = "0x60013C4")]
		public override void Call()
		{
		}

		[Token(Token = "0x60013C5")]
		public ReflectedAction()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000350")]
	[SpoofAOT]
	public class ReflectedFunction<TResult> : ReflectedFunctionWrapper
	{
		[Token(Token = "0x4000C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private FunctionCall<TResult> call;

		[Token(Token = "0x4000C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[BlackboardOnly]
		public BBParameter<TResult> result;

		[Token(Token = "0x60013C6")]
		public override BBParameter[] GetVariables()
		{
			return null;
		}

		[Token(Token = "0x60013C7")]
		public override void Init(object instance)
		{
		}

		[Token(Token = "0x60013C8")]
		public override object Call()
		{
			return null;
		}

		[Token(Token = "0x60013C9")]
		public ReflectedFunction()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000351")]
	public class ReflectedFunction<TResult, T1> : ReflectedFunctionWrapper
	{
		[Token(Token = "0x4000C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private FunctionCall<T1, TResult> call;

		[Token(Token = "0x4000C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T1> p1;

		[Token(Token = "0x4000C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[BlackboardOnly]
		public BBParameter<TResult> result;

		[Token(Token = "0x60013CA")]
		public override BBParameter[] GetVariables()
		{
			return null;
		}

		[Token(Token = "0x60013CB")]
		public override void Init(object instance)
		{
		}

		[Token(Token = "0x60013CC")]
		public override object Call()
		{
			return null;
		}

		[Token(Token = "0x60013CD")]
		public ReflectedFunction()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000352")]
	public class ReflectedFunction<TResult, T1, T2> : ReflectedFunctionWrapper
	{
		[Token(Token = "0x4000C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private FunctionCall<T1, T2, TResult> call;

		[Token(Token = "0x4000C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T1> p1;

		[Token(Token = "0x4000C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T2> p2;

		[Token(Token = "0x4000C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[BlackboardOnly]
		public BBParameter<TResult> result;

		[Token(Token = "0x60013CE")]
		public override BBParameter[] GetVariables()
		{
			return null;
		}

		[Token(Token = "0x60013CF")]
		public override void Init(object instance)
		{
		}

		[Token(Token = "0x60013D0")]
		public override object Call()
		{
			return null;
		}

		[Token(Token = "0x60013D1")]
		public ReflectedFunction()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000353")]
	public class ReflectedFunction<TResult, T1, T2, T3> : ReflectedFunctionWrapper
	{
		[Token(Token = "0x4000C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private FunctionCall<T1, T2, T3, TResult> call;

		[Token(Token = "0x4000C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T1> p1;

		[Token(Token = "0x4000C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T2> p2;

		[Token(Token = "0x4000C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T3> p3;

		[Token(Token = "0x4000C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[BlackboardOnly]
		public BBParameter<TResult> result;

		[Token(Token = "0x60013D2")]
		public override BBParameter[] GetVariables()
		{
			return null;
		}

		[Token(Token = "0x60013D3")]
		public override void Init(object instance)
		{
		}

		[Token(Token = "0x60013D4")]
		public override object Call()
		{
			return null;
		}

		[Token(Token = "0x60013D5")]
		public ReflectedFunction()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000354")]
	public class ReflectedFunction<TResult, T1, T2, T3, T4> : ReflectedFunctionWrapper
	{
		[Token(Token = "0x4000C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private FunctionCall<T1, T2, T3, T4, TResult> call;

		[Token(Token = "0x4000C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T1> p1;

		[Token(Token = "0x4000C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T2> p2;

		[Token(Token = "0x4000C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T3> p3;

		[Token(Token = "0x4000C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T4> p4;

		[Token(Token = "0x4000C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[BlackboardOnly]
		public BBParameter<TResult> result;

		[Token(Token = "0x60013D6")]
		public override BBParameter[] GetVariables()
		{
			return null;
		}

		[Token(Token = "0x60013D7")]
		public override void Init(object instance)
		{
		}

		[Token(Token = "0x60013D8")]
		public override object Call()
		{
			return null;
		}

		[Token(Token = "0x60013D9")]
		public ReflectedFunction()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000355")]
	public class ReflectedFunction<TResult, T1, T2, T3, T4, T5> : ReflectedFunctionWrapper
	{
		[Token(Token = "0x4000C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private FunctionCall<T1, T2, T3, T4, T5, TResult> call;

		[Token(Token = "0x4000C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T1> p1;

		[Token(Token = "0x4000C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T2> p2;

		[Token(Token = "0x4000C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T3> p3;

		[Token(Token = "0x4000C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T4> p4;

		[Token(Token = "0x4000C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T5> p5;

		[Token(Token = "0x4000C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[BlackboardOnly]
		public BBParameter<TResult> result;

		[Token(Token = "0x60013DA")]
		public override BBParameter[] GetVariables()
		{
			return null;
		}

		[Token(Token = "0x60013DB")]
		public override void Init(object instance)
		{
		}

		[Token(Token = "0x60013DC")]
		public override object Call()
		{
			return null;
		}

		[Token(Token = "0x60013DD")]
		public ReflectedFunction()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000356")]
	public class ReflectedFunction<TResult, T1, T2, T3, T4, T5, T6> : ReflectedFunctionWrapper
	{
		[Token(Token = "0x4000C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private FunctionCall<T1, T2, T3, T4, T5, T6, TResult> call;

		[Token(Token = "0x4000C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T1> p1;

		[Token(Token = "0x4000C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T2> p2;

		[Token(Token = "0x4000C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T3> p3;

		[Token(Token = "0x4000C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T4> p4;

		[Token(Token = "0x4000C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T5> p5;

		[Token(Token = "0x4000C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BBParameter<T6> p6;

		[Token(Token = "0x4000C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[BlackboardOnly]
		public BBParameter<TResult> result;

		[Token(Token = "0x60013DE")]
		public override BBParameter[] GetVariables()
		{
			return null;
		}

		[Token(Token = "0x60013DF")]
		public override void Init(object instance)
		{
		}

		[Token(Token = "0x60013E0")]
		public override object Call()
		{
			return null;
		}

		[Token(Token = "0x60013E1")]
		public ReflectedFunction()
		{
		}
	}
	[Token(Token = "0x2000357")]
	public abstract class ReflectedWrapper
	{
		[Token(Token = "0x20007D4")]
		protected delegate void ActionCall();

		[Token(Token = "0x20007D5")]
		protected delegate void ActionCall<T1>(T1 a);

		[Token(Token = "0x20007D6")]
		protected delegate void ActionCall<T1, T2>(T1 a, T2 b);

		[Token(Token = "0x20007D7")]
		protected delegate void ActionCall<T1, T2, T3>(T1 a, T2 b, T3 c);

		[Token(Token = "0x20007D8")]
		protected delegate void ActionCall<T1, T2, T3, T4>(T1 a, T2 b, T3 c, T4 d);

		[Token(Token = "0x20007D9")]
		protected delegate void ActionCall<T1, T2, T3, T4, T5>(T1 a, T2 b, T3 c, T4 d, T5 e);

		[Token(Token = "0x20007DA")]
		protected delegate void ActionCall<T1, T2, T3, T4, T5, T6>(T1 a, T2 b, T3 c, T4 d, T5 e, T6 f);

		[Token(Token = "0x20007DB")]
		protected delegate TResult FunctionCall<TResult>();

		[Token(Token = "0x20007DC")]
		protected delegate TResult FunctionCall<T1, TResult>(T1 a);

		[Token(Token = "0x20007DD")]
		protected delegate TResult FunctionCall<T1, T2, TResult>(T1 a, T2 b);

		[Token(Token = "0x20007DE")]
		protected delegate TResult FunctionCall<T1, T2, T3, TResult>(T1 a, T2 b, T3 c);

		[Token(Token = "0x20007DF")]
		protected delegate TResult FunctionCall<T1, T2, T3, T4, TResult>(T1 a, T2 b, T3 c, T4 d);

		[Token(Token = "0x20007E0")]
		protected delegate TResult FunctionCall<T1, T2, T3, T4, T5, TResult>(T1 a, T2 b, T3 c, T4 d, T5 e);

		[Token(Token = "0x20007E1")]
		protected delegate TResult FunctionCall<T1, T2, T3, T4, T5, T6, TResult>(T1 a, T2 b, T3 c, T4 d, T5 e, T6 f);

		[Token(Token = "0x4000C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		protected SerializedMethodInfo _targetMethod;

		[Token(Token = "0x60013E2")]
		[Address(RVA = "0xF6B760", Offset = "0xF6B760", VA = "0xF6B760")]
		public ReflectedWrapper()
		{
		}

		[Token(Token = "0x60013E3")]
		[Address(RVA = "0xF6BED0", Offset = "0xF6BED0", VA = "0xF6BED0")]
		public static ReflectedWrapper Create(MethodInfo method, IBlackboard bb)
		{
			return null;
		}

		[Token(Token = "0x60013E4")]
		[Address(RVA = "0xF6BFC8", Offset = "0xF6BFC8", VA = "0xF6BFC8")]
		public void SetVariablesBB(IBlackboard bb)
		{
		}

		[Token(Token = "0x60013E5")]
		[Address(RVA = "0xF6C060", Offset = "0xF6C060", VA = "0xF6C060")]
		public bool HasChanged()
		{
			return default(bool);
		}

		[Token(Token = "0x60013E6")]
		[Address(RVA = "0xF6ADA0", Offset = "0xF6ADA0", VA = "0xF6ADA0")]
		public MethodInfo GetMethod()
		{
			return null;
		}

		[Token(Token = "0x60013E7")]
		[Address(RVA = "0xF6C078", Offset = "0xF6C078", VA = "0xF6C078")]
		public string GetMethodString()
		{
			return null;
		}

		[Token(Token = "0x60013E8")]
		public abstract BBParameter[] GetVariables();

		[Token(Token = "0x60013E9")]
		public abstract void Init(object instance);
	}
	[Token(Token = "0x2000358")]
	public abstract class ReflectedActionWrapper : ReflectedWrapper
	{
		[Serializable]
		[Token(Token = "0x20007E2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979E14", Offset = "0x979E14")]
		private sealed class <>c
		{
			[Token(Token = "0x400215E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400215F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<ParameterInfo, Type> <>9__0_0;

			[Token(Token = "0x600277A")]
			[Address(RVA = "0xF6B7CC", Offset = "0xF6B7CC", VA = "0xF6B7CC")]
			public <>c()
			{
			}

			[Token(Token = "0x600277B")]
			[Address(RVA = "0xF6B7D4", Offset = "0xF6B7D4", VA = "0xF6B7D4")]
			internal Type <Create>b__0_0(ParameterInfo p)
			{
				return null;
			}
		}

		[Token(Token = "0x60013EA")]
		[Address(RVA = "0xF6B1F0", Offset = "0xF6B1F0", VA = "0xF6B1F0")]
		public new static ReflectedActionWrapper Create(MethodInfo method, IBlackboard bb)
		{
			return null;
		}

		[Token(Token = "0x60013EB")]
		public abstract void Call();

		[Token(Token = "0x60013EC")]
		[Address(RVA = "0xF6B1E8", Offset = "0xF6B1E8", VA = "0xF6B1E8")]
		protected ReflectedActionWrapper()
		{
		}
	}
	[Token(Token = "0x2000359")]
	public abstract class ReflectedFunctionWrapper : ReflectedWrapper
	{
		[Serializable]
		[Token(Token = "0x20007E3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979E24", Offset = "0x979E24")]
		private sealed class <>c
		{
			[Token(Token = "0x4002160")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002161")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<ParameterInfo, Type> <>9__0_0;

			[Token(Token = "0x600277D")]
			[Address(RVA = "0xF6BE94", Offset = "0xF6BE94", VA = "0xF6BE94")]
			public <>c()
			{
			}

			[Token(Token = "0x600277E")]
			[Address(RVA = "0xF6BE9C", Offset = "0xF6BE9C", VA = "0xF6BE9C")]
			internal Type <Create>b__0_0(ParameterInfo p)
			{
				return null;
			}
		}

		[Token(Token = "0x60013ED")]
		[Address(RVA = "0xF6B808", Offset = "0xF6B808", VA = "0xF6B808")]
		public new static ReflectedFunctionWrapper Create(MethodInfo method, IBlackboard bb)
		{
			return null;
		}

		[Token(Token = "0x60013EE")]
		public abstract object Call();

		[Token(Token = "0x60013EF")]
		[Address(RVA = "0xF6BE28", Offset = "0xF6BE28", VA = "0xF6BE28")]
		protected ReflectedFunctionWrapper()
		{
		}
	}
	[Token(Token = "0x200035A")]
	[DoNotList]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x977388", Offset = "0x977388")]
	public class MissingAction : ActionTask, IMissingRecoverable
	{
		[Token(Token = "0x4000C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private string _missingType;

		[Token(Token = "0x4000C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private string _recoveryState;

		[Token(Token = "0x17000227")]
		private string ParadoxNotion.Serialization.IMissingRecoverable.missingType
		{
			[Token(Token = "0x60013F0")]
			[Address(RVA = "0xF6A874", Offset = "0xF6A874", VA = "0xF6A874", Slot = "19")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013F1")]
			[Address(RVA = "0xF6A87C", Offset = "0xF6A87C", VA = "0xF6A87C", Slot = "20")]
			set
			{
			}
		}

		[Token(Token = "0x17000228")]
		private string ParadoxNotion.Serialization.IMissingRecoverable.recoveryState
		{
			[Token(Token = "0x60013F2")]
			[Address(RVA = "0xF6A884", Offset = "0xF6A884", VA = "0xF6A884", Slot = "21")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013F3")]
			[Address(RVA = "0xF6A88C", Offset = "0xF6A88C", VA = "0xF6A88C", Slot = "22")]
			set
			{
			}
		}

		[Token(Token = "0x17000229")]
		protected override string info
		{
			[Token(Token = "0x60013F4")]
			[Address(RVA = "0xF6A894", Offset = "0xF6A894", VA = "0xF6A894", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013F5")]
		[Address(RVA = "0xF6A95C", Offset = "0xF6A95C", VA = "0xF6A95C")]
		public MissingAction()
		{
		}
	}
	[Token(Token = "0x200035B")]
	[DoNotList]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9773D4", Offset = "0x9773D4")]
	public class MissingCondition : ConditionTask, IMissingRecoverable
	{
		[Token(Token = "0x4000C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private string _missingType;

		[Token(Token = "0x4000C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private string _recoveryState;

		[Token(Token = "0x1700022A")]
		private string ParadoxNotion.Serialization.IMissingRecoverable.missingType
		{
			[Token(Token = "0x60013F6")]
			[Address(RVA = "0xF6A9DC", Offset = "0xF6A9DC", VA = "0xF6A9DC", Slot = "16")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013F7")]
			[Address(RVA = "0xF6A9E4", Offset = "0xF6A9E4", VA = "0xF6A9E4", Slot = "17")]
			set
			{
			}
		}

		[Token(Token = "0x1700022B")]
		private string ParadoxNotion.Serialization.IMissingRecoverable.recoveryState
		{
			[Token(Token = "0x60013F8")]
			[Address(RVA = "0xF6A9EC", Offset = "0xF6A9EC", VA = "0xF6A9EC", Slot = "18")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013F9")]
			[Address(RVA = "0xF6A9F4", Offset = "0xF6A9F4", VA = "0xF6A9F4", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x1700022C")]
		protected override string info
		{
			[Token(Token = "0x60013FA")]
			[Address(RVA = "0xF6A9FC", Offset = "0xF6A9FC", VA = "0xF6A9FC", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013FB")]
		[Address(RVA = "0xF6AAC4", Offset = "0xF6AAC4", VA = "0xF6AAC4")]
		public MissingCondition()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200035C")]
	public class TaskAgentParameter : BBParameter<UnityEngine.Object>
	{
		[Token(Token = "0x1700022D")]
		public new UnityEngine.Object value
		{
			[Token(Token = "0x60013FC")]
			[Address(RVA = "0xF6C0E0", Offset = "0xF6C0E0", VA = "0xF6C0E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013FD")]
			[Address(RVA = "0xF6C1DC", Offset = "0xF6C1DC", VA = "0xF6C1DC")]
			set
			{
			}
		}

		[Token(Token = "0x1700022E")]
		protected override object objectValue
		{
			[Token(Token = "0x60013FE")]
			[Address(RVA = "0xF6C1E4", Offset = "0xF6C1E4", VA = "0xF6C1E4", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013FF")]
			[Address(RVA = "0xF6C1E8", Offset = "0xF6C1E8", VA = "0xF6C1E8", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6001400")]
		[Address(RVA = "0xF6C2B8", Offset = "0xF6C2B8", VA = "0xF6C2B8")]
		public TaskAgentParameter()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200035D")]
	public class BBObjectParameter : BBParameter<object>
	{
		[Token(Token = "0x4000C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Type _type;

		[Token(Token = "0x1700022F")]
		public override Type varType
		{
			[Token(Token = "0x6001401")]
			[Address(RVA = "0xF6A0D0", Offset = "0xF6A0D0", VA = "0xF6A0D0", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001402")]
		[Address(RVA = "0xF6A0D8", Offset = "0xF6A0D8", VA = "0xF6A0D8")]
		public BBObjectParameter()
		{
		}

		[Token(Token = "0x6001403")]
		[Address(RVA = "0xF6A29C", Offset = "0xF6A29C", VA = "0xF6A29C")]
		public BBObjectParameter(Type t)
		{
		}

		[Token(Token = "0x6001404")]
		[Address(RVA = "0xF6A16C", Offset = "0xF6A16C", VA = "0xF6A16C")]
		public void SetType(Type t)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200035E")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x977420", Offset = "0x977420")]
	public sealed class BlackboardSource : IBlackboard
	{
		[Token(Token = "0x20007E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979E34", Offset = "0x979E34")]
		private sealed class <>c__DisplayClass30_0
		{
			[Token(Token = "0x4002162")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Type ofType;

			[Token(Token = "0x600277F")]
			[Address(RVA = "0xF6A6C0", Offset = "0xF6A6C0", VA = "0xF6A6C0")]
			public <>c__DisplayClass30_0()
			{
			}

			[Token(Token = "0x6002780")]
			[Address(RVA = "0xF6A764", Offset = "0xF6A764", VA = "0xF6A764")]
			internal bool <GetVariableNames>b__0(Variable v)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20007E5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979E44", Offset = "0x979E44")]
		private sealed class <>c
		{
			[Token(Token = "0x4002163")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002164")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Variable, string> <>9__30_1;

			[Token(Token = "0x6002782")]
			[Address(RVA = "0xF6A72C", Offset = "0xF6A72C", VA = "0xF6A72C")]
			public <>c()
			{
			}

			[Token(Token = "0x6002783")]
			[Address(RVA = "0xF6A734", Offset = "0xF6A734", VA = "0xF6A734")]
			internal string <GetVariableNames>b__30_1(Variable v)
			{
				return null;
			}
		}

		[Token(Token = "0x4000C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string _name;

		[Token(Token = "0x4000C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Dictionary<string, Variable> _variables;

		[Token(Token = "0x17000230")]
		public string name
		{
			[Token(Token = "0x6001409")]
			[Address(RVA = "0xF5DDF8", Offset = "0xF5DDF8", VA = "0xF5DDF8", Slot = "8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600140A")]
			[Address(RVA = "0xF5DEAC", Offset = "0xF5DEAC", VA = "0xF5DEAC", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x17000231")]
		public Dictionary<string, Variable> variables
		{
			[Token(Token = "0x600140B")]
			[Address(RVA = "0xF5E064", Offset = "0xF5E064", VA = "0xF5E064", Slot = "10")]
			get
			{
				return null;
			}
			[Token(Token = "0x600140C")]
			[Address(RVA = "0xF5E09C", Offset = "0xF5E09C", VA = "0xF5E09C", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x17000232")]
		public GameObject propertiesBindTarget
		{
			[Token(Token = "0x600140D")]
			[Address(RVA = "0xF6A6B4", Offset = "0xF6A6B4", VA = "0xF6A6B4", Slot = "12")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000233")]
		public object Item
		{
			[Token(Token = "0x600140E")]
			[Address(RVA = "0xF5DEE8", Offset = "0xF5DEE8", VA = "0xF5DEE8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600140F")]
			[Address(RVA = "0xF6A6BC", Offset = "0xF6A6BC", VA = "0xF6A6BC")]
			set
			{
			}
		}

		[Token(Token = "0x1400003D")]
		public event Action<Variable> onVariableAdded
		{
			[Token(Token = "0x6001405")]
			[Address(RVA = "0xF6A304", Offset = "0xF6A304", VA = "0xF6A304", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986A88", Offset = "0x986A88")]
			add
			{
			}
			[Token(Token = "0x6001406")]
			[Address(RVA = "0xF6A3F0", Offset = "0xF6A3F0", VA = "0xF6A3F0", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986A98", Offset = "0x986A98")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003E")]
		public event Action<Variable> onVariableRemoved
		{
			[Token(Token = "0x6001407")]
			[Address(RVA = "0xF6A4DC", Offset = "0xF6A4DC", VA = "0xF6A4DC", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986AA8", Offset = "0x986AA8")]
			add
			{
			}
			[Token(Token = "0x6001408")]
			[Address(RVA = "0xF6A5C8", Offset = "0xF6A5C8", VA = "0xF6A5C8", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986AB8", Offset = "0x986AB8")]
			remove
			{
			}
		}

		[Token(Token = "0x6001410")]
		[Address(RVA = "0xF5DAE8", Offset = "0xF5DAE8", VA = "0xF5DAE8")]
		public BlackboardSource()
		{
		}

		[Token(Token = "0x6001411")]
		[Address(RVA = "0xF5DBDC", Offset = "0xF5DBDC", VA = "0xF5DBDC")]
		public void InitializePropertiesBinding(GameObject targetGO, bool callSetter)
		{
		}

		[Token(Token = "0x6001412")]
		[Address(RVA = "0xF5E568", Offset = "0xF5E568", VA = "0xF5E568", Slot = "14")]
		public Variable AddVariable(string varName, object value)
		{
			return null;
		}

		[Token(Token = "0x6001413")]
		[Address(RVA = "0xF5E1BC", Offset = "0xF5E1BC", VA = "0xF5E1BC", Slot = "13")]
		public Variable AddVariable(string varName, Type type)
		{
			return null;
		}

		[Token(Token = "0x6001414")]
		[Address(RVA = "0xF5E6C0", Offset = "0xF5E6C0", VA = "0xF5E6C0", Slot = "15")]
		public Variable RemoveVariable(string varName)
		{
			return null;
		}

		[Token(Token = "0x6001415")]
		public T GetValue<T>(string varName)
		{
			return (T)null;
		}

		[Token(Token = "0x6001416")]
		[Address(RVA = "0xF5EA88", Offset = "0xF5EA88", VA = "0xF5EA88", Slot = "20")]
		public Variable SetValue(string varName, object value)
		{
			return null;
		}

		[Token(Token = "0x6001417")]
		public Variable<T> GetVariable<T>(string varName)
		{
			return null;
		}

		[Token(Token = "0x6001418")]
		[Address(RVA = "0xF5E7CC", Offset = "0xF5E7CC", VA = "0xF5E7CC", Slot = "16")]
		public Variable GetVariable(string varName, [Optional] Type ofType)
		{
			return null;
		}

		[Token(Token = "0x6001419")]
		[Address(RVA = "0xF5E8F8", Offset = "0xF5E8F8", VA = "0xF5E8F8", Slot = "17")]
		public Variable GetVariableByID(string ID)
		{
			return null;
		}

		[Token(Token = "0x600141A")]
		[Address(RVA = "0xF5ED94", Offset = "0xF5ED94", VA = "0xF5ED94", Slot = "21")]
		public string[] GetVariableNames()
		{
			return null;
		}

		[Token(Token = "0x600141B")]
		[Address(RVA = "0xF5EE38", Offset = "0xF5EE38", VA = "0xF5EE38", Slot = "22")]
		public string[] GetVariableNames(Type ofType)
		{
			return null;
		}

		[Token(Token = "0x600141C")]
		public Variable<T> AddVariable<T>(string varName, T value)
		{
			return null;
		}

		[Token(Token = "0x600141D")]
		public Variable<T> AddVariable<T>(string varName)
		{
			return null;
		}
	}
	[Token(Token = "0x200035F")]
	public class fsBBParameterProcessor : fsRecoveryProcessor<BBParameter, MissingBBParameterType>
	{
		[Token(Token = "0x600141E")]
		[Address(RVA = "0xF6C308", Offset = "0xF6C308", VA = "0xF6C308", Slot = "8")]
		public override void OnBeforeDeserializeAfterInstanceCreation(Type storageType, object instance, ref fsData data)
		{
		}

		[Token(Token = "0x600141F")]
		[Address(RVA = "0xF6C5B8", Offset = "0xF6C5B8", VA = "0xF6C5B8")]
		public fsBBParameterProcessor()
		{
		}
	}
	[Token(Token = "0x2000360")]
	public class MissingBBParameterType : BBParameter<object>, IMissingRecoverable
	{
		[Token(Token = "0x4000C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private string _missingType;

		[Token(Token = "0x4000C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private string _recoveryState;

		[Token(Token = "0x17000234")]
		private string ParadoxNotion.Serialization.IMissingRecoverable.missingType
		{
			[Token(Token = "0x6001420")]
			[Address(RVA = "0xF6A96C", Offset = "0xF6A96C", VA = "0xF6A96C", Slot = "8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001421")]
			[Address(RVA = "0xF6A974", Offset = "0xF6A974", VA = "0xF6A974", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x17000235")]
		private string ParadoxNotion.Serialization.IMissingRecoverable.recoveryState
		{
			[Token(Token = "0x6001422")]
			[Address(RVA = "0xF6A97C", Offset = "0xF6A97C", VA = "0xF6A97C", Slot = "10")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001423")]
			[Address(RVA = "0xF6A984", Offset = "0xF6A984", VA = "0xF6A984", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6001424")]
		[Address(RVA = "0xF6A98C", Offset = "0xF6A98C", VA = "0xF6A98C")]
		public MissingBBParameterType()
		{
		}
	}
	[Token(Token = "0x2000361")]
	public class MissingVariableType : Variable<object>, IMissingRecoverable
	{
		[Token(Token = "0x4000C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private string _missingType;

		[Token(Token = "0x4000C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private string _recoveryState;

		[Token(Token = "0x17000236")]
		public string missingType
		{
			[Token(Token = "0x6001425")]
			[Address(RVA = "0xF6AC40", Offset = "0xF6AC40", VA = "0xF6AC40", Slot = "13")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001426")]
			[Address(RVA = "0xF6AC48", Offset = "0xF6AC48", VA = "0xF6AC48", Slot = "14")]
			set
			{
			}
		}

		[Token(Token = "0x17000237")]
		public string recoveryState
		{
			[Token(Token = "0x6001427")]
			[Address(RVA = "0xF6AC50", Offset = "0xF6AC50", VA = "0xF6AC50", Slot = "15")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001428")]
			[Address(RVA = "0xF6AC58", Offset = "0xF6AC58", VA = "0xF6AC58", Slot = "16")]
			set
			{
			}
		}

		[Token(Token = "0x6001429")]
		[Address(RVA = "0xF6AC60", Offset = "0xF6AC60", VA = "0xF6AC60")]
		public MissingVariableType()
		{
		}
	}
}
namespace ParadoxNotion
{
	[Token(Token = "0x2000362")]
	public enum CompareMethod
	{
		[Token(Token = "0x4000C87")]
		EqualTo,
		[Token(Token = "0x4000C88")]
		GreaterThan,
		[Token(Token = "0x4000C89")]
		LessThan,
		[Token(Token = "0x4000C8A")]
		GreaterOrEqualTo,
		[Token(Token = "0x4000C8B")]
		LessOrEqualTo
	}
	[Token(Token = "0x2000363")]
	public enum OperationMethod
	{
		[Token(Token = "0x4000C8D")]
		Set,
		[Token(Token = "0x4000C8E")]
		Add,
		[Token(Token = "0x4000C8F")]
		Subtract,
		[Token(Token = "0x4000C90")]
		Multiply,
		[Token(Token = "0x4000C91")]
		Divide
	}
	[Token(Token = "0x2000364")]
	public enum ButtonKeys
	{
		[Token(Token = "0x4000C93")]
		Left,
		[Token(Token = "0x4000C94")]
		Right,
		[Token(Token = "0x4000C95")]
		Middle
	}
	[Token(Token = "0x2000365")]
	public enum PressTypes
	{
		[Token(Token = "0x4000C97")]
		Down,
		[Token(Token = "0x4000C98")]
		Up,
		[Token(Token = "0x4000C99")]
		Pressed
	}
	[Token(Token = "0x2000366")]
	public enum MouseClickEvent
	{
		[Token(Token = "0x4000C9B")]
		MouseDown,
		[Token(Token = "0x4000C9C")]
		MouseUp
	}
	[Token(Token = "0x2000367")]
	public enum TriggerTypes
	{
		[Token(Token = "0x4000C9E")]
		TriggerEnter,
		[Token(Token = "0x4000C9F")]
		TriggerExit,
		[Token(Token = "0x4000CA0")]
		TriggerStay
	}
	[Token(Token = "0x2000368")]
	public enum CollisionTypes
	{
		[Token(Token = "0x4000CA2")]
		CollisionEnter,
		[Token(Token = "0x4000CA3")]
		CollisionExit,
		[Token(Token = "0x4000CA4")]
		CollisionStay
	}
	[Token(Token = "0x2000369")]
	public enum MouseInteractionTypes
	{
		[Token(Token = "0x4000CA6")]
		MouseEnter,
		[Token(Token = "0x4000CA7")]
		MouseExit,
		[Token(Token = "0x4000CA8")]
		MouseOver
	}
	[Token(Token = "0x200036A")]
	public enum CompactStatus
	{
		[Token(Token = "0x4000CAA")]
		Failure,
		[Token(Token = "0x4000CAB")]
		Success
	}
	[Token(Token = "0x200036B")]
	public enum PlayDirections
	{
		[Token(Token = "0x4000CAD")]
		Forward,
		[Token(Token = "0x4000CAE")]
		Backward,
		[Token(Token = "0x4000CAF")]
		Toggle
	}
	[Token(Token = "0x200036C")]
	public enum PlanarDirection
	{
		[Token(Token = "0x4000CB1")]
		Horizontal,
		[Token(Token = "0x4000CB2")]
		Vertical,
		[Token(Token = "0x4000CB3")]
		Auto
	}
	[Token(Token = "0x200036D")]
	public enum Alignment2x2
	{
		[Token(Token = "0x4000CB5")]
		Default,
		[Token(Token = "0x4000CB6")]
		Left,
		[Token(Token = "0x4000CB7")]
		Right,
		[Token(Token = "0x4000CB8")]
		Top,
		[Token(Token = "0x4000CB9")]
		Bottom
	}
	[Token(Token = "0x200036E")]
	public enum Alignment3x3
	{
		[Token(Token = "0x4000CBB")]
		TopLeft,
		[Token(Token = "0x4000CBC")]
		TopCenter,
		[Token(Token = "0x4000CBD")]
		TopRight,
		[Token(Token = "0x4000CBE")]
		MiddleLeft,
		[Token(Token = "0x4000CBF")]
		MiddleCenter,
		[Token(Token = "0x4000CC0")]
		MiddleRight,
		[Token(Token = "0x4000CC1")]
		BottomLeft,
		[Token(Token = "0x4000CC2")]
		BottomCenter,
		[Token(Token = "0x4000CC3")]
		BottomRight
	}
	[Token(Token = "0x200036F")]
	public class EventData
	{
		[Token(Token = "0x4000CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x980184", Offset = "0x980184")]
		private string <name>k__BackingField;

		[Token(Token = "0x17000238")]
		public string name
		{
			[Token(Token = "0x600142A")]
			[Address(RVA = "0xB30BBC", Offset = "0xB30BBC", VA = "0xB30BBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986AC8", Offset = "0x986AC8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600142B")]
			[Address(RVA = "0xB30BC4", Offset = "0xB30BC4", VA = "0xB30BC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986AD8", Offset = "0x986AD8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000239")]
		public object value
		{
			[Token(Token = "0x600142C")]
			[Address(RVA = "0xB30BCC", Offset = "0xB30BCC", VA = "0xB30BCC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600142D")]
		[Address(RVA = "0xB30BD8", Offset = "0xB30BD8", VA = "0xB30BD8", Slot = "4")]
		protected virtual object GetValue()
		{
			return null;
		}

		[Token(Token = "0x600142E")]
		[Address(RVA = "0xB30BE0", Offset = "0xB30BE0", VA = "0xB30BE0")]
		public EventData(string name)
		{
		}
	}
	[Token(Token = "0x2000370")]
	public class EventData<T> : EventData
	{
		[Token(Token = "0x4000CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x980194", Offset = "0x980194")]
		private T <value>k__BackingField;

		[Token(Token = "0x1700023A")]
		public new T value
		{
			[Token(Token = "0x600142F")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986AE8", Offset = "0x986AE8")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x6001430")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986AF8", Offset = "0x986AF8")]
			private set
			{
			}
		}

		[Token(Token = "0x6001431")]
		protected override object GetValue()
		{
			return null;
		}

		[Token(Token = "0x6001432")]
		public EventData(string name, T value)
		{
		}
	}
	[Token(Token = "0x2000371")]
	public class HierarchyTree
	{
		[Token(Token = "0x20007E6")]
		public class Element
		{
			[Token(Token = "0x4002165")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public object reference;

			[Token(Token = "0x4002166")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Element parent;

			[Token(Token = "0x4002167")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<Element> children;

			[Token(Token = "0x6002784")]
			[Address(RVA = "0xB30F3C", Offset = "0xB30F3C", VA = "0xB30F3C")]
			public Element(object reference)
			{
			}

			[Token(Token = "0x6002785")]
			[Address(RVA = "0xB30F68", Offset = "0xB30F68", VA = "0xB30F68")]
			public void AddChild(Element child)
			{
			}

			[Token(Token = "0x6002786")]
			[Address(RVA = "0xB31020", Offset = "0xB31020", VA = "0xB31020")]
			public void RemoveChild(Element child)
			{
			}

			[Token(Token = "0x6002787")]
			[Address(RVA = "0xB31094", Offset = "0xB31094", VA = "0xB31094")]
			public Element GetRoot()
			{
				return null;
			}

			[Token(Token = "0x6002788")]
			[Address(RVA = "0xB310A0", Offset = "0xB310A0", VA = "0xB310A0")]
			public Element FindReferenceElement(object target)
			{
				return null;
			}

			[Token(Token = "0x6002789")]
			public T GetFirstParentReferenceOfType<T>()
			{
				return (T)null;
			}

			[Token(Token = "0x600278A")]
			public List<T> GetAllChildrenReferencesOfType<T>()
			{
				return null;
			}
		}

		[Token(Token = "0x6001433")]
		[Address(RVA = "0xB30F34", Offset = "0xB30F34", VA = "0xB30F34")]
		public HierarchyTree()
		{
		}
	}
	[Token(Token = "0x2000372")]
	public static class OperationTools
	{
		[Token(Token = "0x6001434")]
		[Address(RVA = "0xC26EF8", Offset = "0xC26EF8", VA = "0xC26EF8")]
		public static string GetOperationString(OperationMethod om)
		{
			return null;
		}

		[Token(Token = "0x6001435")]
		[Address(RVA = "0xC26F64", Offset = "0xC26F64", VA = "0xC26F64")]
		public static float Operate(float a, float b, OperationMethod om, float delta = 1f)
		{
			return default(float);
		}

		[Token(Token = "0x6001436")]
		[Address(RVA = "0xC26FC0", Offset = "0xC26FC0", VA = "0xC26FC0")]
		public static int Operate(int a, int b, OperationMethod om)
		{
			return default(int);
		}

		[Token(Token = "0x6001437")]
		[Address(RVA = "0xC2700C", Offset = "0xC2700C", VA = "0xC2700C")]
		public static Vector3 Operate(Vector3 a, Vector3 b, OperationMethod om, float delta = 1f)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001438")]
		[Address(RVA = "0xC2725C", Offset = "0xC2725C", VA = "0xC2725C")]
		public static string GetCompareString(CompareMethod cm)
		{
			return null;
		}

		[Token(Token = "0x6001439")]
		[Address(RVA = "0xC272C8", Offset = "0xC272C8", VA = "0xC272C8")]
		public static bool Compare(float a, float b, CompareMethod cm, float floatingPoint)
		{
			return default(bool);
		}

		[Token(Token = "0x600143A")]
		[Address(RVA = "0xC273B0", Offset = "0xC273B0", VA = "0xC273B0")]
		public static bool Compare(int a, int b, CompareMethod cm)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000373")]
	public static class ReflectionTools
	{
		[Token(Token = "0x20007E7")]
		public enum MethodType
		{
			[Token(Token = "0x4002169")]
			Normal,
			[Token(Token = "0x400216A")]
			PropertyAccessor,
			[Token(Token = "0x400216B")]
			Event,
			[Token(Token = "0x400216C")]
			Operator
		}

		[Token(Token = "0x20007E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979E54", Offset = "0x979E54")]
		private sealed class <>c__DisplayClass14_0
		{
			[Token(Token = "0x400216D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool includeObsolete;

			[Token(Token = "0x400216E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Func<Type, bool> <>9__2;

			[Token(Token = "0x600278B")]
			[Address(RVA = "0xC2949C", Offset = "0xC2949C", VA = "0xC2949C")]
			public <>c__DisplayClass14_0()
			{
			}

			[Token(Token = "0x600278C")]
			[Address(RVA = "0xC2F1F8", Offset = "0xC2F1F8", VA = "0xC2F1F8")]
			internal bool <GetAllTypes>b__2(Type t)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20007E9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979E64", Offset = "0x979E64")]
		private sealed class <>c
		{
			[Token(Token = "0x400216F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002170")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Type, string> <>9__14_0;

			[Token(Token = "0x4002171")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Type, string> <>9__14_1;

			[Token(Token = "0x4002172")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<ParameterInfo, Type> <>9__83_0;

			[Token(Token = "0x4002173")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<ParameterInfo, Type> <>9__90_0;

			[Token(Token = "0x4002174")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<ConstructorInfo, bool> <>9__105_0;

			[Token(Token = "0x600278E")]
			[Address(RVA = "0xC2F070", Offset = "0xC2F070", VA = "0xC2F070")]
			public <>c()
			{
			}

			[Token(Token = "0x600278F")]
			[Address(RVA = "0xC2F078", Offset = "0xC2F078", VA = "0xC2F078")]
			internal string <GetAllTypes>b__14_0(Type t)
			{
				return null;
			}

			[Token(Token = "0x6002790")]
			[Address(RVA = "0xC2F0E0", Offset = "0xC2F0E0", VA = "0xC2F0E0")]
			internal string <GetAllTypes>b__14_1(Type t)
			{
				return null;
			}

			[Token(Token = "0x6002791")]
			[Address(RVA = "0xC2F118", Offset = "0xC2F118", VA = "0xC2F118")]
			internal Type <RTCreateDelegate>b__83_0(ParameterInfo p)
			{
				return null;
			}

			[Token(Token = "0x6002792")]
			[Address(RVA = "0xC2F14C", Offset = "0xC2F14C", VA = "0xC2F14C")]
			internal Type <GetBaseDefinition>b__90_0(ParameterInfo p)
			{
				return null;
			}

			[Token(Token = "0x6002793")]
			[Address(RVA = "0xC2F180", Offset = "0xC2F180", VA = "0xC2F180")]
			internal bool <IsAllowedByGenericArgument>b__105_0(ConstructorInfo info)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000CC6")]
		public const BindingFlags FLAGS_ALL = BindingFlags.Instance | BindingFlags.Static | BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.FlattenHierarchy;

		[Token(Token = "0x4000CC7")]
		public const BindingFlags FLAGS_ALL_DECLARED = BindingFlags.DeclaredOnly | BindingFlags.Instance | BindingFlags.Static | BindingFlags.Public | BindingFlags.NonPublic;

		[Token(Token = "0x4000CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Assembly[] _loadedAssemblies;

		[Token(Token = "0x4000CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<string, Type> typeMap;

		[Token(Token = "0x4000CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Type[] _allTypes;

		[Token(Token = "0x4000CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Dictionary<Type, Type[]> _subTypesMap;

		[Token(Token = "0x4000CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static object[] _tempArgs;

		[Token(Token = "0x4000CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static readonly Dictionary<string, string> op_FriendlyNamesLong;

		[Token(Token = "0x4000CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static readonly Dictionary<string, string> op_FriendlyNamesShort;

		[Token(Token = "0x4000CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static readonly Dictionary<string, string> op_CSharpAliases;

		[Token(Token = "0x4000CD0")]
		public const string METHOD_SPECIAL_NAME_GET = "get_";

		[Token(Token = "0x4000CD1")]
		public const string METHOD_SPECIAL_NAME_SET = "set_";

		[Token(Token = "0x4000CD2")]
		public const string METHOD_SPECIAL_NAME_ADD = "add_";

		[Token(Token = "0x4000CD3")]
		public const string METHOD_SPECIAL_NAME_REMOVE = "remove_";

		[Token(Token = "0x4000CD4")]
		public const string METHOD_SPECIAL_NAME_OP = "op_";

		[Token(Token = "0x4000CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static Dictionary<MethodBase, string> cacheSignatures;

		[Token(Token = "0x4000CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static Dictionary<Type, ConstructorInfo[]> _typeConstructors;

		[Token(Token = "0x4000CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static Dictionary<Type, MethodInfo[]> _typeMethods;

		[Token(Token = "0x4000CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static Dictionary<Type, FieldInfo[]> _typeFields;

		[Token(Token = "0x4000CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private static Dictionary<Type, PropertyInfo[]> _typeProperties;

		[Token(Token = "0x4000CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private static Dictionary<Type, System.Reflection.EventInfo[]> _typeEvents;

		[Token(Token = "0x4000CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private static Dictionary<Type, object[]> _typeAttributes;

		[Token(Token = "0x4000CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private static Dictionary<MemberInfo, object[]> _memberAttributes;

		[Token(Token = "0x4000CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private static Dictionary<Type, MethodInfo[]> _typeExtensions;

		[Token(Token = "0x1700023B")]
		private static Assembly[] loadedAssemblies
		{
			[Token(Token = "0x600143B")]
			[Address(RVA = "0xC27D34", Offset = "0xC27D34", VA = "0xC27D34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600143C")]
		[Address(RVA = "0xC27E10", Offset = "0xC27E10", VA = "0xC27E10")]
		public static Type GetType(string typeFullName)
		{
			return null;
		}

		[Token(Token = "0x600143D")]
		[Address(RVA = "0xC2826C", Offset = "0xC2826C", VA = "0xC2826C")]
		public static Type GetType(string typeFullName, Type fallbackAssignable)
		{
			return null;
		}

		[Token(Token = "0x600143E")]
		[Address(RVA = "0xC27E7C", Offset = "0xC27E7C", VA = "0xC27E7C")]
		public static Type GetType(string typeFullName, bool fallbackNoNamespace = false, [Optional] Type fallbackAssignable)
		{
			return null;
		}

		[Token(Token = "0x600143F")]
		[Address(RVA = "0xC282E4", Offset = "0xC282E4", VA = "0xC282E4")]
		private static Type GetTypeDirect(string typeFullName)
		{
			return null;
		}

		[Token(Token = "0x6001440")]
		[Address(RVA = "0xC2850C", Offset = "0xC2850C", VA = "0xC2850C")]
		private static Type TryResolveGenericType(string typeFullName, bool fallbackNoNamespace = false, [Optional] Type fallbackAssignable)
		{
			return null;
		}

		[Token(Token = "0x6001441")]
		[Address(RVA = "0xC28BF8", Offset = "0xC28BF8", VA = "0xC28BF8")]
		private static Type TryResolveDeserializeFromAttribute(string typeName)
		{
			return null;
		}

		[Token(Token = "0x6001442")]
		[Address(RVA = "0xC28D0C", Offset = "0xC28D0C", VA = "0xC28D0C")]
		private static Type TryResolveWithoutNamespace(string typeName, [Optional] Type fallbackAssignable)
		{
			return null;
		}

		[Token(Token = "0x6001443")]
		[Address(RVA = "0xC28FFC", Offset = "0xC28FFC", VA = "0xC28FFC")]
		public static Type[] GetAllTypes(bool includeObsolete)
		{
			return null;
		}

		[Token(Token = "0x6001444")]
		[Address(RVA = "0xC294A4", Offset = "0xC294A4", VA = "0xC294A4")]
		public static Type[] GetImplementationsOf(Type baseType)
		{
			return null;
		}

		[Token(Token = "0x6001445")]
		[Address(RVA = "0xC2973C", Offset = "0xC2973C", VA = "0xC2973C")]
		public static object[] SingleTempArgsArray(object arg)
		{
			return null;
		}

		[Token(Token = "0x6001446")]
		[Address(RVA = "0xC29814", Offset = "0xC29814", VA = "0xC29814")]
		public static MethodType GetMethodSpecialType(this MethodBase method)
		{
			return default(MethodType);
		}

		[Token(Token = "0x6001447")]
		[Address(RVA = "0xC29974", Offset = "0xC29974", VA = "0xC29974")]
		public static string FriendlyName(this Type t, bool compileSafe = false)
		{
			return null;
		}

		[Token(Token = "0x6001448")]
		[Address(RVA = "0xC29EB0", Offset = "0xC29EB0", VA = "0xC29EB0")]
		public static string FriendlyName(this MemberInfo info)
		{
			return null;
		}

		[Token(Token = "0x6001449")]
		[Address(RVA = "0xC2A078", Offset = "0xC2A078", VA = "0xC2A078")]
		public static string FriendlyName(this MethodBase method)
		{
			return null;
		}

		[Token(Token = "0x600144A")]
		[Address(RVA = "0xC2A0F0", Offset = "0xC2A0F0", VA = "0xC2A0F0")]
		public static string FriendlyName(this MethodBase method, out MethodType specialNameType)
		{
			return null;
		}

		[Token(Token = "0x600144B")]
		[Address(RVA = "0xC2A458", Offset = "0xC2A458", VA = "0xC2A458")]
		public static string SignatureName(this MethodBase method)
		{
			return null;
		}

		[Token(Token = "0x600144C")]
		[Address(RVA = "0xC2A9C4", Offset = "0xC2A9C4", VA = "0xC2A9C4")]
		public static Type RTReflectedOrDeclaredType(this MemberInfo member)
		{
			return null;
		}

		[Token(Token = "0x600144D")]
		[Address(RVA = "0xC29460", Offset = "0xC29460", VA = "0xC29460")]
		public static bool RTIsAssignableFrom(this Type type, Type other)
		{
			return default(bool);
		}

		[Token(Token = "0x600144E")]
		[Address(RVA = "0xC2AA78", Offset = "0xC2AA78", VA = "0xC2AA78")]
		public static bool RTIsAssignableTo(this Type type, Type other)
		{
			return default(bool);
		}

		[Token(Token = "0x600144F")]
		[Address(RVA = "0xC29710", Offset = "0xC29710", VA = "0xC29710")]
		public static bool RTIsAbstract(this Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001450")]
		[Address(RVA = "0xC2AB0C", Offset = "0xC2AB0C", VA = "0xC2AB0C")]
		public static bool RTIsValueType(this Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001451")]
		[Address(RVA = "0xC2AB38", Offset = "0xC2AB38", VA = "0xC2AB38")]
		public static bool RTIsArray(this Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001452")]
		[Address(RVA = "0xC2AB64", Offset = "0xC2AB64", VA = "0xC2AB64")]
		public static bool RTIsInterface(this Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001453")]
		[Address(RVA = "0xC2AB90", Offset = "0xC2AB90", VA = "0xC2AB90")]
		public static bool RTIsSubclassOf(this Type type, Type other)
		{
			return default(bool);
		}

		[Token(Token = "0x6001454")]
		[Address(RVA = "0xC29E14", Offset = "0xC29E14", VA = "0xC29E14")]
		public static bool RTIsGenericParameter(this Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001455")]
		[Address(RVA = "0xC29E48", Offset = "0xC29E48", VA = "0xC29E48")]
		public static bool RTIsGenericType(this Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001456")]
		[Address(RVA = "0xC2ABCC", Offset = "0xC2ABCC", VA = "0xC2ABCC")]
		public static MethodInfo RTGetGetMethod(this PropertyInfo prop)
		{
			return null;
		}

		[Token(Token = "0x6001457")]
		[Address(RVA = "0xC2ABF8", Offset = "0xC2ABF8", VA = "0xC2ABF8")]
		public static MethodInfo RTGetSetMethod(this PropertyInfo prop)
		{
			return null;
		}

		[Token(Token = "0x6001458")]
		[Address(RVA = "0xC2AC24", Offset = "0xC2AC24", VA = "0xC2AC24")]
		public static MethodInfo RTGetDelegateMethodInfo(this Delegate del)
		{
			return null;
		}

		[Token(Token = "0x6001459")]
		[Address(RVA = "0xC28FC0", Offset = "0xC28FC0", VA = "0xC28FC0")]
		public static Type RTMakeGenericType(this Type type, params Type[] typeArgs)
		{
			return null;
		}

		[Token(Token = "0x600145A")]
		[Address(RVA = "0xC29E7C", Offset = "0xC29E7C", VA = "0xC29E7C")]
		public static Type[] RTGetGenericArguments(this Type type)
		{
			return null;
		}

		[Token(Token = "0x600145B")]
		[Address(RVA = "0xC2AC50", Offset = "0xC2AC50", VA = "0xC2AC50")]
		public static Type[] RTGetEmptyTypes()
		{
			return null;
		}

		[Token(Token = "0x600145C")]
		[Address(RVA = "0xC2ACB8", Offset = "0xC2ACB8", VA = "0xC2ACB8")]
		public static Type RTGetElementType(this Type type)
		{
			return null;
		}

		[Token(Token = "0x600145D")]
		[Address(RVA = "0xC2AD58", Offset = "0xC2AD58", VA = "0xC2AD58")]
		public static bool RTIsByRef(this Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x600145E")]
		[Address(RVA = "0xC2ADF0", Offset = "0xC2ADF0", VA = "0xC2ADF0")]
		public static object CreateObject(this Type type)
		{
			return null;
		}

		[Token(Token = "0x600145F")]
		[Address(RVA = "0xC2AE7C", Offset = "0xC2AE7C", VA = "0xC2AE7C")]
		public static object CreateObjectUninitialized(this Type type)
		{
			return null;
		}

		[Token(Token = "0x6001460")]
		[Address(RVA = "0xC2AF28", Offset = "0xC2AF28", VA = "0xC2AF28")]
		public static ConstructorInfo RTGetDefaultConstructor(this Type type)
		{
			return null;
		}

		[Token(Token = "0x6001461")]
		[Address(RVA = "0xC2B168", Offset = "0xC2B168", VA = "0xC2B168")]
		public static ConstructorInfo RTGetConstructor(this Type type, Type[] paramTypes)
		{
			return null;
		}

		[Token(Token = "0x6001462")]
		[Address(RVA = "0xC2B358", Offset = "0xC2B358", VA = "0xC2B358")]
		public static MethodInfo RTGetMethod(this Type type, string name)
		{
			return null;
		}

		[Token(Token = "0x6001463")]
		[Address(RVA = "0xC2B59C", Offset = "0xC2B59C", VA = "0xC2B59C")]
		public static MethodInfo RTGetMethod(this Type type, string name, Type[] paramTypes)
		{
			return null;
		}

		[Token(Token = "0x6001464")]
		[Address(RVA = "0xC2B7B0", Offset = "0xC2B7B0", VA = "0xC2B7B0")]
		public static FieldInfo RTGetField(this Type type, string name)
		{
			return null;
		}

		[Token(Token = "0x6001465")]
		[Address(RVA = "0xC2B9F4", Offset = "0xC2B9F4", VA = "0xC2B9F4")]
		public static PropertyInfo RTGetProperty(this Type type, string name)
		{
			return null;
		}

		[Token(Token = "0x6001466")]
		[Address(RVA = "0xC2BC38", Offset = "0xC2BC38", VA = "0xC2BC38")]
		public static System.Reflection.EventInfo RTGetEvent(this Type type, string name)
		{
			return null;
		}

		[Token(Token = "0x6001467")]
		[Address(RVA = "0xC2B040", Offset = "0xC2B040", VA = "0xC2B040")]
		public static ConstructorInfo[] RTGetConstructors(this Type type)
		{
			return null;
		}

		[Token(Token = "0x6001468")]
		[Address(RVA = "0xC2B474", Offset = "0xC2B474", VA = "0xC2B474")]
		public static MethodInfo[] RTGetMethods(this Type type)
		{
			return null;
		}

		[Token(Token = "0x6001469")]
		[Address(RVA = "0xC2B8CC", Offset = "0xC2B8CC", VA = "0xC2B8CC")]
		public static FieldInfo[] RTGetFields(this Type type)
		{
			return null;
		}

		[Token(Token = "0x600146A")]
		[Address(RVA = "0xC2BB10", Offset = "0xC2BB10", VA = "0xC2BB10")]
		public static PropertyInfo[] RTGetProperties(this Type type)
		{
			return null;
		}

		[Token(Token = "0x600146B")]
		[Address(RVA = "0xC2BD54", Offset = "0xC2BD54", VA = "0xC2BD54")]
		public static System.Reflection.EventInfo[] RTGetEvents(this Type type)
		{
			return null;
		}

		[Token(Token = "0x600146C")]
		public static bool RTIsDefined<T>(this Type type, bool inherited) where T : Attribute
		{
			return default(bool);
		}

		[Token(Token = "0x600146D")]
		[Address(RVA = "0xC2BE7C", Offset = "0xC2BE7C", VA = "0xC2BE7C")]
		public static bool RTIsDefined(this Type type, Type attributeType, bool inherited)
		{
			return default(bool);
		}

		[Token(Token = "0x600146E")]
		public static bool RTIsDefined<T>(this MemberInfo member, bool inherited) where T : Attribute
		{
			return default(bool);
		}

		[Token(Token = "0x600146F")]
		[Address(RVA = "0xC2BEC4", Offset = "0xC2BEC4", VA = "0xC2BEC4")]
		public static bool RTIsDefined(this MemberInfo member, Type attributeType, bool inherited)
		{
			return default(bool);
		}

		[Token(Token = "0x6001470")]
		public static T RTGetAttribute<T>(this Type type, bool inherited) where T : Attribute
		{
			return null;
		}

		[Token(Token = "0x6001471")]
		public static T RTGetAttribute<T>(this MemberInfo member, bool inherited) where T : Attribute
		{
			return null;
		}

		[Token(Token = "0x6001472")]
		public static T[] RTGetAttributesRecursive<T>(this Type type) where T : Attribute
		{
			return null;
		}

		[Token(Token = "0x6001473")]
		[Address(RVA = "0xC2BF0C", Offset = "0xC2BF0C", VA = "0xC2BF0C")]
		public static ParameterInfo[] RTGetDelegateTypeParameters(this Type delegateType)
		{
			return null;
		}

		[Token(Token = "0x6001474")]
		public static T RTCreateDelegate<T>(this MethodInfo method, object instance)
		{
			return (T)null;
		}

		[Token(Token = "0x6001475")]
		[Address(RVA = "0xC2C078", Offset = "0xC2C078", VA = "0xC2C078")]
		public static Delegate RTCreateDelegate(this MethodInfo method, Type type, object instance)
		{
			return null;
		}

		[Token(Token = "0x6001476")]
		[Address(RVA = "0xC2C27C", Offset = "0xC2C27C", VA = "0xC2C27C")]
		public static Delegate ConvertDelegate(Delegate originalDelegate, Type targetDelegateType)
		{
			return null;
		}

		[Token(Token = "0x6001477")]
		[Address(RVA = "0xC2C2F4", Offset = "0xC2C2F4", VA = "0xC2C2F4")]
		public static bool IsReadOnly(this FieldInfo field)
		{
			return default(bool);
		}

		[Token(Token = "0x6001478")]
		[Address(RVA = "0xC2C34C", Offset = "0xC2C34C", VA = "0xC2C34C")]
		public static bool IsConstant(this FieldInfo field)
		{
			return default(bool);
		}

		[Token(Token = "0x6001479")]
		[Address(RVA = "0xC2C3DC", Offset = "0xC2C3DC", VA = "0xC2C3DC")]
		public static bool IsStatic(this System.Reflection.EventInfo info)
		{
			return default(bool);
		}

		[Token(Token = "0x600147A")]
		[Address(RVA = "0xC2A8DC", Offset = "0xC2A8DC", VA = "0xC2A8DC")]
		public static bool IsParams(this ParameterInfo parameter, ParameterInfo[] parameters)
		{
			return default(bool);
		}

		[Token(Token = "0x600147B")]
		[Address(RVA = "0xC2C444", Offset = "0xC2C444", VA = "0xC2C444")]
		public static bool IsObsolete(this MemberInfo member, bool inherited = true)
		{
			return default(bool);
		}

		[Token(Token = "0x600147C")]
		[Address(RVA = "0xC2C6A4", Offset = "0xC2C6A4", VA = "0xC2C6A4")]
		public static PropertyInfo GetBaseDefinition(this PropertyInfo propertyInfo)
		{
			return null;
		}

		[Token(Token = "0x600147D")]
		[Address(RVA = "0xC2C8E4", Offset = "0xC2C8E4", VA = "0xC2C8E4")]
		public static FieldInfo GetBaseDefinition(this FieldInfo fieldInfo)
		{
			return null;
		}

		[Token(Token = "0x600147E")]
		[Address(RVA = "0xC2C990", Offset = "0xC2C990", VA = "0xC2C990")]
		public static MethodInfo[] GetExtensionMethods(this Type targetType)
		{
			return null;
		}

		[Token(Token = "0x600147F")]
		[Address(RVA = "0xC2CD40", Offset = "0xC2CD40", VA = "0xC2CD40")]
		public static bool IsExtensionMethod(this MethodInfo method)
		{
			return default(bool);
		}

		[Token(Token = "0x6001480")]
		[Address(RVA = "0xC2C554", Offset = "0xC2C554", VA = "0xC2C554")]
		public static bool IsPropertyAccessor(this MethodInfo method)
		{
			return default(bool);
		}

		[Token(Token = "0x6001481")]
		[Address(RVA = "0xC2CDB4", Offset = "0xC2CDB4", VA = "0xC2CDB4")]
		public static bool IsIndexerProperty(this PropertyInfo property)
		{
			return default(bool);
		}

		[Token(Token = "0x6001482")]
		[Address(RVA = "0xC2CE04", Offset = "0xC2CE04", VA = "0xC2CE04")]
		public static bool IsAutoProperty(this PropertyInfo property)
		{
			return default(bool);
		}

		[Token(Token = "0x6001483")]
		[Address(RVA = "0xC2C5C4", Offset = "0xC2C5C4", VA = "0xC2C5C4")]
		public static PropertyInfo GetAccessorProperty(this MethodInfo method)
		{
			return null;
		}

		[Token(Token = "0x6001484")]
		[Address(RVA = "0xC2CF18", Offset = "0xC2CF18", VA = "0xC2CF18")]
		public static bool IsEnumerableCollection(this Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001485")]
		[Address(RVA = "0xC2D094", Offset = "0xC2D094", VA = "0xC2D094")]
		public static Type GetEnumerableElementType(this Type type)
		{
			return null;
		}

		[Token(Token = "0x6001486")]
		[Address(RVA = "0xC2D314", Offset = "0xC2D314", VA = "0xC2D314")]
		public static Type GetFirstGenericParameterConstraintType(this Type type)
		{
			return null;
		}

		[Token(Token = "0x6001487")]
		[Address(RVA = "0xC2D4CC", Offset = "0xC2D4CC", VA = "0xC2D4CC")]
		public static Type GetFirstGenericParameterConstraintType(this MethodInfo method)
		{
			return null;
		}

		[Token(Token = "0x6001488")]
		[Address(RVA = "0xC2D638", Offset = "0xC2D638", VA = "0xC2D638")]
		public static bool CanBeMadeGenericWith(this Type def, Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001489")]
		[Address(RVA = "0xC2DB3C", Offset = "0xC2DB3C", VA = "0xC2DB3C")]
		public static bool CanBeMadeGenericWith(this MethodInfo def, Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x600148A")]
		[Address(RVA = "0xC2D784", Offset = "0xC2D784", VA = "0xC2D784")]
		public static bool IsAllowedByGenericArgument(this Type type, Type genericArgument)
		{
			return default(bool);
		}

		[Token(Token = "0x600148B")]
		[Address(RVA = "0xC2DC48", Offset = "0xC2DC48", VA = "0xC2DC48")]
		public static Array Resize(this Array array, int newSize)
		{
			return null;
		}

		[Token(Token = "0x600148C")]
		[Address(RVA = "0xC2DD44", Offset = "0xC2DD44", VA = "0xC2DD44")]
		public static bool CanConvert(Type fromType, Type toType, out UnaryExpression exp)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000374")]
	public static class TypeConverter
	{
		[Token(Token = "0x20007EA")]
		public delegate Func<object, object> CustomConverter(Type fromType, Type toType);

		[Token(Token = "0x20007EB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979E74", Offset = "0x979E74")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4002175")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Type toType;

			[Token(Token = "0x6002798")]
			[Address(RVA = "0xF1A0BC", Offset = "0xF1A0BC", VA = "0xF1A0BC")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x6002799")]
			[Address(RVA = "0xF1B318", Offset = "0xF1B318", VA = "0xF1B318")]
			internal object <Get>b__2(object value)
			{
				return null;
			}

			[Token(Token = "0x600279A")]
			[Address(RVA = "0xF1B458", Offset = "0xF1B458", VA = "0xF1B458")]
			internal object <Get>b__4(object value)
			{
				return null;
			}

			[Token(Token = "0x600279B")]
			[Address(RVA = "0xF1B558", Offset = "0xF1B558", VA = "0xF1B558")]
			internal object <Get>b__6(object value)
			{
				return null;
			}

			[Token(Token = "0x600279C")]
			[Address(RVA = "0xF1B6B8", Offset = "0xF1B6B8", VA = "0xF1B6B8")]
			internal object <Get>b__7(object value)
			{
				return null;
			}

			[Token(Token = "0x600279D")]
			[Address(RVA = "0xF1B7B8", Offset = "0xF1B7B8", VA = "0xF1B7B8")]
			internal object <Get>b__8(object value)
			{
				return null;
			}
		}

		[Serializable]
		[Token(Token = "0x20007EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979E84", Offset = "0x979E84")]
		private sealed class <>c
		{
			[Token(Token = "0x4002176")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002177")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<object, object> <>9__4_0;

			[Token(Token = "0x4002178")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<object, object> <>9__4_1;

			[Token(Token = "0x4002179")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<object, object> <>9__4_3;

			[Token(Token = "0x400217A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<object, object> <>9__4_5;

			[Token(Token = "0x400217B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<object, object> <>9__4_9;

			[Token(Token = "0x400217C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Func<object, object> <>9__4_10;

			[Token(Token = "0x400217D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static Func<object, object> <>9__4_11;

			[Token(Token = "0x400217E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static Func<object, object> <>9__4_12;

			[Token(Token = "0x400217F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public static Func<object, object> <>9__4_13;

			[Token(Token = "0x4002180")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public static Func<object, object> <>9__4_14;

			[Token(Token = "0x4002181")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public static Func<object, object> <>9__4_15;

			[Token(Token = "0x4002182")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public static Func<object, object> <>9__4_16;

			[Token(Token = "0x600279F")]
			[Address(RVA = "0xF1A8D4", Offset = "0xF1A8D4", VA = "0xF1A8D4")]
			public <>c()
			{
			}

			[Token(Token = "0x60027A0")]
			[Address(RVA = "0xF1A8DC", Offset = "0xF1A8DC", VA = "0xF1A8DC")]
			internal object <Get>b__4_0(object value)
			{
				return null;
			}

			[Token(Token = "0x60027A1")]
			[Address(RVA = "0xF1A8E4", Offset = "0xF1A8E4", VA = "0xF1A8E4")]
			internal object <Get>b__4_1(object value)
			{
				return null;
			}

			[Token(Token = "0x60027A2")]
			[Address(RVA = "0xF1A948", Offset = "0xF1A948", VA = "0xF1A948")]
			internal object <Get>b__4_3(object value)
			{
				return null;
			}

			[Token(Token = "0x60027A3")]
			[Address(RVA = "0xF1A9B0", Offset = "0xF1A9B0", VA = "0xF1A9B0")]
			internal object <Get>b__4_5(object value)
			{
				return null;
			}

			[Token(Token = "0x60027A4")]
			[Address(RVA = "0xF1AAE4", Offset = "0xF1AAE4", VA = "0xF1AAE4")]
			internal object <Get>b__4_9(object value)
			{
				return null;
			}

			[Token(Token = "0x60027A5")]
			[Address(RVA = "0xF1AC30", Offset = "0xF1AC30", VA = "0xF1AC30")]
			internal object <Get>b__4_10(object value)
			{
				return null;
			}

			[Token(Token = "0x60027A6")]
			[Address(RVA = "0xF1ADC4", Offset = "0xF1ADC4", VA = "0xF1ADC4")]
			internal object <Get>b__4_11(object value)
			{
				return null;
			}

			[Token(Token = "0x60027A7")]
			[Address(RVA = "0xF1AF14", Offset = "0xF1AF14", VA = "0xF1AF14")]
			internal object <Get>b__4_12(object value)
			{
				return null;
			}

			[Token(Token = "0x60027A8")]
			[Address(RVA = "0xF1B0AC", Offset = "0xF1B0AC", VA = "0xF1B0AC")]
			internal object <Get>b__4_13(object value)
			{
				return null;
			}

			[Token(Token = "0x60027A9")]
			[Address(RVA = "0xF1B13C", Offset = "0xF1B13C", VA = "0xF1B13C")]
			internal object <Get>b__4_14(object value)
			{
				return null;
			}

			[Token(Token = "0x60027AA")]
			[Address(RVA = "0xF1B1DC", Offset = "0xF1B1DC", VA = "0xF1B1DC")]
			internal object <Get>b__4_15(object value)
			{
				return null;
			}

			[Token(Token = "0x60027AB")]
			[Address(RVA = "0xF1B27C", Offset = "0xF1B27C", VA = "0xF1B27C")]
			internal object <Get>b__4_16(object value)
			{
				return null;
			}
		}

		[Token(Token = "0x1400003F")]
		public static event CustomConverter customConverter
		{
			[Token(Token = "0x600148E")]
			[Address(RVA = "0xF18D1C", Offset = "0xF18D1C", VA = "0xF18D1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986F48", Offset = "0x986F48")]
			add
			{
			}
			[Token(Token = "0x600148F")]
			[Address(RVA = "0xF18E18", Offset = "0xF18E18", VA = "0xF18E18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x986F58", Offset = "0x986F58")]
			remove
			{
			}
		}

		[Token(Token = "0x6001490")]
		[Address(RVA = "0xF18F14", Offset = "0xF18F14", VA = "0xF18F14")]
		public static Func<object, object> Get(Type fromType, Type toType)
		{
			return null;
		}

		[Token(Token = "0x6001491")]
		[Address(RVA = "0xF1A854", Offset = "0xF1A854", VA = "0xF1A854")]
		public static bool CanConvert(Type fromType, Type toType)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000375")]
	public static class ColorUtils
	{
		[Token(Token = "0x4000CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<Color32, string> colorHexCache;

		[Token(Token = "0x4000CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<string, Color> hexColorCache;

		[Token(Token = "0x6001492")]
		[Address(RVA = "0xB2FB64", Offset = "0xB2FB64", VA = "0xB2FB64")]
		public static Color WithAlpha(this Color color, float alpha)
		{
			return default(Color);
		}

		[Token(Token = "0x6001493")]
		[Address(RVA = "0xB2FB6C", Offset = "0xB2FB6C", VA = "0xB2FB6C")]
		public static string ColorToHex(Color32 color)
		{
			return null;
		}

		[Token(Token = "0x6001494")]
		[Address(RVA = "0xB2FD10", Offset = "0xB2FD10", VA = "0xB2FD10")]
		public static Color HexToColor(string hex)
		{
			return default(Color);
		}
	}
	[Token(Token = "0x2000376")]
	public static class CurveUtils
	{
		[Token(Token = "0x4000CE1")]
		private const float POS_CHECK_RES = 100f;

		[Token(Token = "0x4000CE2")]
		private const float POS_CHECK_DISTANCE = 10f;

		[Token(Token = "0x6001496")]
		[Address(RVA = "0xB3005C", Offset = "0xB3005C", VA = "0xB3005C")]
		public static Vector2 GetPosAlongCurve(Vector2 from, Vector2 to, Vector2 fromTangent, Vector2 toTangent, float t)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001497")]
		[Address(RVA = "0xB30204", Offset = "0xB30204", VA = "0xB30204")]
		public static bool IsPosAlongCurve(Vector2 from, Vector2 to, Vector2 fromTangent, Vector2 toTangent, Vector2 targetPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x6001498")]
		[Address(RVA = "0xB30234", Offset = "0xB30234", VA = "0xB30234")]
		public static bool IsPosAlongCurve(Vector2 from, Vector2 to, Vector2 fromTangent, Vector2 toTangent, Vector2 targetPosition, out float norm)
		{
			return default(bool);
		}

		[Token(Token = "0x6001499")]
		[Address(RVA = "0xB3040C", Offset = "0xB3040C", VA = "0xB3040C")]
		public static void ResolveTangents(Vector2 from, Vector2 to, float rigidMlt, PlanarDirection direction, out Vector2 fromTangent, out Vector2 toTangent)
		{
		}

		[Token(Token = "0x600149A")]
		[Address(RVA = "0xB30518", Offset = "0xB30518", VA = "0xB30518")]
		public static void ResolveTangents(Vector2 from, Vector2 to, Rect fromRect, Rect toRect, float rigidMlt, PlanarDirection direction, out Vector2 fromTangent, out Vector2 toTangent)
		{
		}
	}
	[Token(Token = "0x2000377")]
	public static class GUIStyleUtils
	{
		[Token(Token = "0x600149B")]
		[Address(RVA = "0xB30C0C", Offset = "0xB30C0C", VA = "0xB30C0C")]
		public static GUIStyle Margin(this GUIStyle style, int left, int right, int top, int bottom)
		{
			return null;
		}

		[Token(Token = "0x600149C")]
		[Address(RVA = "0xB30CB8", Offset = "0xB30CB8", VA = "0xB30CB8")]
		public static GUIStyle Padding(this GUIStyle style, int left, int right, int top, int bottom)
		{
			return null;
		}

		[Token(Token = "0x600149D")]
		[Address(RVA = "0xB30D64", Offset = "0xB30D64", VA = "0xB30D64")]
		public static GUIStyle Border(this GUIStyle style, int left, int right, int top, int bottom)
		{
			return null;
		}

		[Token(Token = "0x600149E")]
		[Address(RVA = "0xB30E10", Offset = "0xB30E10", VA = "0xB30E10")]
		public static GUIStyle Overflow(this GUIStyle style, int left, int right, int top, int bottom)
		{
			return null;
		}

		[Token(Token = "0x600149F")]
		[Address(RVA = "0xB30EBC", Offset = "0xB30EBC", VA = "0xB30EBC")]
		public static GUIStyle TextAlignment(this GUIStyle style, TextAnchor anchor)
		{
			return null;
		}

		[Token(Token = "0x60014A0")]
		[Address(RVA = "0xB30EF8", Offset = "0xB30EF8", VA = "0xB30EF8")]
		public static GUIStyle RichText(this GUIStyle style, bool rich)
		{
			return null;
		}
	}
	[Token(Token = "0x2000378")]
	public static class ObjectUtils
	{
		[Token(Token = "0x60014A1")]
		[Address(RVA = "0xC26D9C", Offset = "0xC26D9C", VA = "0xC26D9C")]
		public static bool TrueEquals(object a, object b)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000379")]
	public static class RectUtils
	{
		[Token(Token = "0x60014A2")]
		[Address(RVA = "0xC27418", Offset = "0xC27418", VA = "0xC27418")]
		public static Rect GetBoundRect(params Rect[] rects)
		{
			return default(Rect);
		}

		[Token(Token = "0x60014A3")]
		[Address(RVA = "0xC275E4", Offset = "0xC275E4", VA = "0xC275E4")]
		public static Rect GetBoundRect(params Vector2[] positions)
		{
			return default(Rect);
		}

		[Token(Token = "0x60014A4")]
		[Address(RVA = "0xC27788", Offset = "0xC27788", VA = "0xC27788")]
		public static bool Encapsulates(this Rect a, Rect b)
		{
			return default(bool);
		}

		[Token(Token = "0x60014A5")]
		[Address(RVA = "0xC27850", Offset = "0xC27850", VA = "0xC27850")]
		public static Rect ExpandBy(this Rect rect, float margin)
		{
			return default(Rect);
		}

		[Token(Token = "0x60014A6")]
		[Address(RVA = "0xC27860", Offset = "0xC27860", VA = "0xC27860")]
		public static Rect ExpandBy(this Rect rect, float xMargin, float yMargin)
		{
			return default(Rect);
		}

		[Token(Token = "0x60014A7")]
		[Address(RVA = "0xC2786C", Offset = "0xC2786C", VA = "0xC2786C")]
		public static Rect ExpandBy(this Rect rect, float left, float top, float right, float bottom)
		{
			return default(Rect);
		}

		[Token(Token = "0x60014A8")]
		[Address(RVA = "0xC27914", Offset = "0xC27914", VA = "0xC27914")]
		public static Rect TransformSpace(this Rect rect, Rect oldContainer, Rect newContainer)
		{
			return default(Rect);
		}

		[Token(Token = "0x60014A9")]
		[Address(RVA = "0xC27BC0", Offset = "0xC27BC0", VA = "0xC27BC0")]
		public static Vector2 TransformSpace(this Vector2 vector, Rect oldContainer, Rect newContainer)
		{
			return default(Vector2);
		}
	}
	[Token(Token = "0x200037A")]
	public static class StringUtils
	{
		[Token(Token = "0x4000CE3")]
		private const string ALPHABET = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";

		[Token(Token = "0x4000CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly char[] CHAR_EMPTY_ARRAY;

		[Token(Token = "0x4000CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<string, string> splitCaseCache;

		[Token(Token = "0x60014AA")]
		[Address(RVA = "0xF17784", Offset = "0xF17784", VA = "0xF17784")]
		public static string SplitCamelCase(this string s)
		{
			return null;
		}

		[Token(Token = "0x60014AB")]
		[Address(RVA = "0xF17968", Offset = "0xF17968", VA = "0xF17968")]
		public static string CapitalizeFirst(this string s)
		{
			return null;
		}

		[Token(Token = "0x60014AC")]
		[Address(RVA = "0xF17A38", Offset = "0xF17A38", VA = "0xF17A38")]
		public static string CapLength(this string s, int max)
		{
			return null;
		}

		[Token(Token = "0x60014AD")]
		[Address(RVA = "0xF17B54", Offset = "0xF17B54", VA = "0xF17B54")]
		public static string GetCapitals(this string s)
		{
			return null;
		}

		[Token(Token = "0x60014AE")]
		[Address(RVA = "0xF17C98", Offset = "0xF17C98", VA = "0xF17C98")]
		public static string GetAlphabetLetter(int index)
		{
			return null;
		}

		[Token(Token = "0x60014AF")]
		[Address(RVA = "0xF17D58", Offset = "0xF17D58", VA = "0xF17D58")]
		public static string GetStringWithin(this string input, string from, string to)
		{
			return null;
		}

		[Token(Token = "0x60014B0")]
		[Address(RVA = "0xF17E58", Offset = "0xF17E58", VA = "0xF17E58")]
		public static float ScoreSearchMatch(string input, string leafName, string categoryName = "")
		{
			return default(float);
		}

		[Token(Token = "0x60014B1")]
		[Address(RVA = "0xF18198", Offset = "0xF18198", VA = "0xF18198")]
		public static bool SearchMatch(string input, string leafName, string categoryName = "")
		{
			return default(bool);
		}

		[Token(Token = "0x60014B2")]
		[Address(RVA = "0xF1857C", Offset = "0xF1857C", VA = "0xF1857C")]
		public static string ReplaceWithin(this string text, char startChar, char endChar, Func<string, string> Process)
		{
			return null;
		}

		[Token(Token = "0x60014B3")]
		[Address(RVA = "0xF1870C", Offset = "0xF1870C", VA = "0xF1870C")]
		public static string ToStringAdvanced(this object o)
		{
			return null;
		}
	}
}
namespace ParadoxNotion.Internal
{
	[Token(Token = "0x200037B")]
	internal class AOTDummy
	{
		[Token(Token = "0x20007ED")]
		private class FlowCanvas_BinderConnection_System_Boolean : BinderConnection<bool>
		{
			[Token(Token = "0x60027AC")]
			[Address(RVA = "0xB44B58", Offset = "0xB44B58", VA = "0xB44B58")]
			public FlowCanvas_BinderConnection_System_Boolean()
			{
			}
		}

		[Token(Token = "0x20007EE")]
		private class FlowCanvas_BinderConnection_System_Single : BinderConnection<float>
		{
			[Token(Token = "0x60027AD")]
			[Address(RVA = "0xB44BF8", Offset = "0xB44BF8", VA = "0xB44BF8")]
			public FlowCanvas_BinderConnection_System_Single()
			{
			}
		}

		[Token(Token = "0x20007EF")]
		private class FlowCanvas_BinderConnection_System_Int32 : BinderConnection<int>
		{
			[Token(Token = "0x60027AE")]
			[Address(RVA = "0xB44BA8", Offset = "0xB44BA8", VA = "0xB44BA8")]
			public FlowCanvas_BinderConnection_System_Int32()
			{
			}
		}

		[Token(Token = "0x20007F0")]
		private class FlowCanvas_BinderConnection_UnityEngine_Vector2 : BinderConnection<Vector2>
		{
			[Token(Token = "0x60027AF")]
			[Address(RVA = "0xB450A8", Offset = "0xB450A8", VA = "0xB450A8")]
			public FlowCanvas_BinderConnection_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x20007F1")]
		private class FlowCanvas_BinderConnection_UnityEngine_Vector3 : BinderConnection<Vector3>
		{
			[Token(Token = "0x60027B0")]
			[Address(RVA = "0xB450F8", Offset = "0xB450F8", VA = "0xB450F8")]
			public FlowCanvas_BinderConnection_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x20007F2")]
		private class FlowCanvas_BinderConnection_UnityEngine_Vector4 : BinderConnection<Vector4>
		{
			[Token(Token = "0x60027B1")]
			[Address(RVA = "0xB45148", Offset = "0xB45148", VA = "0xB45148")]
			public FlowCanvas_BinderConnection_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x20007F3")]
		private class FlowCanvas_BinderConnection_UnityEngine_Quaternion : BinderConnection<Quaternion>
		{
			[Token(Token = "0x60027B2")]
			[Address(RVA = "0xB44EC8", Offset = "0xB44EC8", VA = "0xB44EC8")]
			public FlowCanvas_BinderConnection_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x20007F4")]
		private class FlowCanvas_BinderConnection_UnityEngine_Keyframe : BinderConnection<Keyframe>
		{
			[Token(Token = "0x60027B3")]
			[Address(RVA = "0xB44E28", Offset = "0xB44E28", VA = "0xB44E28")]
			public FlowCanvas_BinderConnection_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x20007F5")]
		private class FlowCanvas_BinderConnection_UnityEngine_Bounds : BinderConnection<Bounds>
		{
			[Token(Token = "0x60027B4")]
			[Address(RVA = "0xB44C48", Offset = "0xB44C48", VA = "0xB44C48")]
			public FlowCanvas_BinderConnection_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x20007F6")]
		private class FlowCanvas_BinderConnection_UnityEngine_Color : BinderConnection<Color>
		{
			[Token(Token = "0x60027B5")]
			[Address(RVA = "0xB44D38", Offset = "0xB44D38", VA = "0xB44D38")]
			public FlowCanvas_BinderConnection_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x20007F7")]
		private class FlowCanvas_BinderConnection_UnityEngine_Rect : BinderConnection<Rect>
		{
			[Token(Token = "0x60027B6")]
			[Address(RVA = "0xB45008", Offset = "0xB45008", VA = "0xB45008")]
			public FlowCanvas_BinderConnection_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x20007F8")]
		private class FlowCanvas_BinderConnection_UnityEngine_ContactPoint : BinderConnection<ContactPoint>
		{
			[Token(Token = "0x60027B7")]
			[Address(RVA = "0xB44D88", Offset = "0xB44D88", VA = "0xB44D88")]
			public FlowCanvas_BinderConnection_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x20007F9")]
		private class FlowCanvas_BinderConnection_UnityEngine_ContactPoint2D : BinderConnection<ContactPoint2D>
		{
			[Token(Token = "0x60027B8")]
			[Address(RVA = "0xB44DD8", Offset = "0xB44DD8", VA = "0xB44DD8")]
			public FlowCanvas_BinderConnection_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x20007FA")]
		private class FlowCanvas_BinderConnection_UnityEngine_Collision : BinderConnection<Collision>
		{
			[Token(Token = "0x60027B9")]
			[Address(RVA = "0xB44C98", Offset = "0xB44C98", VA = "0xB44C98")]
			public FlowCanvas_BinderConnection_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x20007FB")]
		private class FlowCanvas_BinderConnection_UnityEngine_Collision2D : BinderConnection<Collision2D>
		{
			[Token(Token = "0x60027BA")]
			[Address(RVA = "0xB44CE8", Offset = "0xB44CE8", VA = "0xB44CE8")]
			public FlowCanvas_BinderConnection_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x20007FC")]
		private class FlowCanvas_BinderConnection_UnityEngine_RaycastHit : BinderConnection<RaycastHit>
		{
			[Token(Token = "0x60027BB")]
			[Address(RVA = "0xB44F68", Offset = "0xB44F68", VA = "0xB44F68")]
			public FlowCanvas_BinderConnection_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x20007FD")]
		private class FlowCanvas_BinderConnection_UnityEngine_RaycastHit2D : BinderConnection<RaycastHit2D>
		{
			[Token(Token = "0x60027BC")]
			[Address(RVA = "0xB44FB8", Offset = "0xB44FB8", VA = "0xB44FB8")]
			public FlowCanvas_BinderConnection_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x20007FE")]
		private class FlowCanvas_BinderConnection_UnityEngine_Ray : BinderConnection<Ray>
		{
			[Token(Token = "0x60027BD")]
			[Address(RVA = "0xB44F18", Offset = "0xB44F18", VA = "0xB44F18")]
			public FlowCanvas_BinderConnection_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x20007FF")]
		private class FlowCanvas_BinderConnection_UnityEngine_Space : BinderConnection<Space>
		{
			[Token(Token = "0x60027BE")]
			[Address(RVA = "0xB45058", Offset = "0xB45058", VA = "0xB45058")]
			public FlowCanvas_BinderConnection_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000800")]
		private class FlowCanvas_BinderConnection_ftg_DioramaFiveData_DioramaFiveKeys : BinderConnection<DioramaFiveData.DioramaFiveKeys>
		{
			[Token(Token = "0x60027BF")]
			[Address(RVA = "0xB45198", Offset = "0xB45198", VA = "0xB45198")]
			public FlowCanvas_BinderConnection_ftg_DioramaFiveData_DioramaFiveKeys()
			{
			}
		}

		[Token(Token = "0x2000801")]
		private class FlowCanvas_BinderConnection_ftg_DioramaFourData_DioramaFourKeys : BinderConnection<DioramaFourData.DioramaFourKeys>
		{
			[Token(Token = "0x60027C0")]
			[Address(RVA = "0xB451E8", Offset = "0xB451E8", VA = "0xB451E8")]
			public FlowCanvas_BinderConnection_ftg_DioramaFourData_DioramaFourKeys()
			{
			}
		}

		[Token(Token = "0x2000802")]
		private class FlowCanvas_BinderConnection_ftg_DioramaOneData_DioramaOneKeys : BinderConnection<DioramaOneData.DioramaOneKeys>
		{
			[Token(Token = "0x60027C1")]
			[Address(RVA = "0xB45238", Offset = "0xB45238", VA = "0xB45238")]
			public FlowCanvas_BinderConnection_ftg_DioramaOneData_DioramaOneKeys()
			{
			}
		}

		[Token(Token = "0x2000803")]
		private class FlowCanvas_BinderConnection_ftg_DioramaThreeData_DioramaThreeKeys : BinderConnection<DioramaThreeData.DioramaThreeKeys>
		{
			[Token(Token = "0x60027C2")]
			[Address(RVA = "0xB45288", Offset = "0xB45288", VA = "0xB45288")]
			public FlowCanvas_BinderConnection_ftg_DioramaThreeData_DioramaThreeKeys()
			{
			}
		}

		[Token(Token = "0x2000804")]
		private class FlowCanvas_BinderConnection_ftg_DioramaTwoData_DioramaTwoKeys : BinderConnection<DioramaTwoData.DioramaTwoKeys>
		{
			[Token(Token = "0x60027C3")]
			[Address(RVA = "0xB452D8", Offset = "0xB452D8", VA = "0xB452D8")]
			public FlowCanvas_BinderConnection_ftg_DioramaTwoData_DioramaTwoKeys()
			{
			}
		}

		[Token(Token = "0x2000805")]
		private class FlowCanvas_BinderConnection_ftg_SaveManager_DioramaWorlds : BinderConnection<SaveManager.DioramaWorlds>
		{
			[Token(Token = "0x60027C4")]
			[Address(RVA = "0xB453C8", Offset = "0xB453C8", VA = "0xB453C8")]
			public FlowCanvas_BinderConnection_ftg_SaveManager_DioramaWorlds()
			{
			}
		}

		[Token(Token = "0x2000806")]
		private class FlowCanvas_BinderConnection_ftg_HubRoomData_HubRoomKeys : BinderConnection<HubRoomData.HubRoomKeys>
		{
			[Token(Token = "0x60027C5")]
			[Address(RVA = "0xB45328", Offset = "0xB45328", VA = "0xB45328")]
			public FlowCanvas_BinderConnection_ftg_HubRoomData_HubRoomKeys()
			{
			}
		}

		[Token(Token = "0x2000807")]
		private class FlowCanvas_BinderConnection_ftg_PersonaSettings_PersonaKeys : BinderConnection<PersonaSettings.PersonaKeys>
		{
			[Token(Token = "0x60027C6")]
			[Address(RVA = "0xB45378", Offset = "0xB45378", VA = "0xB45378")]
			public FlowCanvas_BinderConnection_ftg_PersonaSettings_PersonaKeys()
			{
			}
		}

		[Token(Token = "0x2000808")]
		private class FlowCanvas_BinderConnection_UnityEngine_LayerMask : BinderConnection<LayerMask>
		{
			[Token(Token = "0x60027C7")]
			[Address(RVA = "0xB44E78", Offset = "0xB44E78", VA = "0xB44E78")]
			public FlowCanvas_BinderConnection_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000809")]
		private class FlowCanvas_ValueInput_System_Boolean : ValueInput<bool>
		{
			[Token(Token = "0x60027C8")]
			[Address(RVA = "0xC2391C", Offset = "0xC2391C", VA = "0xC2391C")]
			public FlowCanvas_ValueInput_System_Boolean()
			{
			}
		}

		[Token(Token = "0x200080A")]
		private class FlowCanvas_ValueInput_System_Single : ValueInput<float>
		{
			[Token(Token = "0x60027C9")]
			[Address(RVA = "0xC239BC", Offset = "0xC239BC", VA = "0xC239BC")]
			public FlowCanvas_ValueInput_System_Single()
			{
			}
		}

		[Token(Token = "0x200080B")]
		private class FlowCanvas_ValueInput_System_Int32 : ValueInput<int>
		{
			[Token(Token = "0x60027CA")]
			[Address(RVA = "0xC2396C", Offset = "0xC2396C", VA = "0xC2396C")]
			public FlowCanvas_ValueInput_System_Int32()
			{
			}
		}

		[Token(Token = "0x200080C")]
		private class FlowCanvas_ValueInput_UnityEngine_Vector2 : ValueInput<Vector2>
		{
			[Token(Token = "0x60027CB")]
			[Address(RVA = "0xC23E6C", Offset = "0xC23E6C", VA = "0xC23E6C")]
			public FlowCanvas_ValueInput_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x200080D")]
		private class FlowCanvas_ValueInput_UnityEngine_Vector3 : ValueInput<Vector3>
		{
			[Token(Token = "0x60027CC")]
			[Address(RVA = "0xC23EBC", Offset = "0xC23EBC", VA = "0xC23EBC")]
			public FlowCanvas_ValueInput_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x200080E")]
		private class FlowCanvas_ValueInput_UnityEngine_Vector4 : ValueInput<Vector4>
		{
			[Token(Token = "0x60027CD")]
			[Address(RVA = "0xC23F0C", Offset = "0xC23F0C", VA = "0xC23F0C")]
			public FlowCanvas_ValueInput_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x200080F")]
		private class FlowCanvas_ValueInput_UnityEngine_Quaternion : ValueInput<Quaternion>
		{
			[Token(Token = "0x60027CE")]
			[Address(RVA = "0xC23C8C", Offset = "0xC23C8C", VA = "0xC23C8C")]
			public FlowCanvas_ValueInput_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000810")]
		private class FlowCanvas_ValueInput_UnityEngine_Keyframe : ValueInput<Keyframe>
		{
			[Token(Token = "0x60027CF")]
			[Address(RVA = "0xC23BEC", Offset = "0xC23BEC", VA = "0xC23BEC")]
			public FlowCanvas_ValueInput_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000811")]
		private class FlowCanvas_ValueInput_UnityEngine_Bounds : ValueInput<Bounds>
		{
			[Token(Token = "0x60027D0")]
			[Address(RVA = "0xC23A0C", Offset = "0xC23A0C", VA = "0xC23A0C")]
			public FlowCanvas_ValueInput_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000812")]
		private class FlowCanvas_ValueInput_UnityEngine_Color : ValueInput<Color>
		{
			[Token(Token = "0x60027D1")]
			[Address(RVA = "0xC23AFC", Offset = "0xC23AFC", VA = "0xC23AFC")]
			public FlowCanvas_ValueInput_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000813")]
		private class FlowCanvas_ValueInput_UnityEngine_Rect : ValueInput<Rect>
		{
			[Token(Token = "0x60027D2")]
			[Address(RVA = "0xC23DCC", Offset = "0xC23DCC", VA = "0xC23DCC")]
			public FlowCanvas_ValueInput_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000814")]
		private class FlowCanvas_ValueInput_UnityEngine_ContactPoint : ValueInput<ContactPoint>
		{
			[Token(Token = "0x60027D3")]
			[Address(RVA = "0xC23B4C", Offset = "0xC23B4C", VA = "0xC23B4C")]
			public FlowCanvas_ValueInput_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000815")]
		private class FlowCanvas_ValueInput_UnityEngine_ContactPoint2D : ValueInput<ContactPoint2D>
		{
			[Token(Token = "0x60027D4")]
			[Address(RVA = "0xC23B9C", Offset = "0xC23B9C", VA = "0xC23B9C")]
			public FlowCanvas_ValueInput_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000816")]
		private class FlowCanvas_ValueInput_UnityEngine_Collision : ValueInput<Collision>
		{
			[Token(Token = "0x60027D5")]
			[Address(RVA = "0xC23A5C", Offset = "0xC23A5C", VA = "0xC23A5C")]
			public FlowCanvas_ValueInput_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x2000817")]
		private class FlowCanvas_ValueInput_UnityEngine_Collision2D : ValueInput<Collision2D>
		{
			[Token(Token = "0x60027D6")]
			[Address(RVA = "0xC23AAC", Offset = "0xC23AAC", VA = "0xC23AAC")]
			public FlowCanvas_ValueInput_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000818")]
		private class FlowCanvas_ValueInput_UnityEngine_RaycastHit : ValueInput<RaycastHit>
		{
			[Token(Token = "0x60027D7")]
			[Address(RVA = "0xC23D2C", Offset = "0xC23D2C", VA = "0xC23D2C")]
			public FlowCanvas_ValueInput_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000819")]
		private class FlowCanvas_ValueInput_UnityEngine_RaycastHit2D : ValueInput<RaycastHit2D>
		{
			[Token(Token = "0x60027D8")]
			[Address(RVA = "0xC23D7C", Offset = "0xC23D7C", VA = "0xC23D7C")]
			public FlowCanvas_ValueInput_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x200081A")]
		private class FlowCanvas_ValueInput_UnityEngine_Ray : ValueInput<Ray>
		{
			[Token(Token = "0x60027D9")]
			[Address(RVA = "0xC23CDC", Offset = "0xC23CDC", VA = "0xC23CDC")]
			public FlowCanvas_ValueInput_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x200081B")]
		private class FlowCanvas_ValueInput_UnityEngine_Space : ValueInput<Space>
		{
			[Token(Token = "0x60027DA")]
			[Address(RVA = "0xC23E1C", Offset = "0xC23E1C", VA = "0xC23E1C")]
			public FlowCanvas_ValueInput_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x200081C")]
		private class FlowCanvas_ValueInput_ftg_DioramaFiveData_DioramaFiveKeys : ValueInput<DioramaFiveData.DioramaFiveKeys>
		{
			[Token(Token = "0x60027DB")]
			[Address(RVA = "0xC23F5C", Offset = "0xC23F5C", VA = "0xC23F5C")]
			public FlowCanvas_ValueInput_ftg_DioramaFiveData_DioramaFiveKeys()
			{
			}
		}

		[Token(Token = "0x200081D")]
		private class FlowCanvas_ValueInput_ftg_DioramaFourData_DioramaFourKeys : ValueInput<DioramaFourData.DioramaFourKeys>
		{
			[Token(Token = "0x60027DC")]
			[Address(RVA = "0xC23FAC", Offset = "0xC23FAC", VA = "0xC23FAC")]
			public FlowCanvas_ValueInput_ftg_DioramaFourData_DioramaFourKeys()
			{
			}
		}

		[Token(Token = "0x200081E")]
		private class FlowCanvas_ValueInput_ftg_DioramaOneData_DioramaOneKeys : ValueInput<DioramaOneData.DioramaOneKeys>
		{
			[Token(Token = "0x60027DD")]
			[Address(RVA = "0xC23FFC", Offset = "0xC23FFC", VA = "0xC23FFC")]
			public FlowCanvas_ValueInput_ftg_DioramaOneData_DioramaOneKeys()
			{
			}
		}

		[Token(Token = "0x200081F")]
		private class FlowCanvas_ValueInput_ftg_DioramaThreeData_DioramaThreeKeys : ValueInput<DioramaThreeData.DioramaThreeKeys>
		{
			[Token(Token = "0x60027DE")]
			[Address(RVA = "0xC2404C", Offset = "0xC2404C", VA = "0xC2404C")]
			public FlowCanvas_ValueInput_ftg_DioramaThreeData_DioramaThreeKeys()
			{
			}
		}

		[Token(Token = "0x2000820")]
		private class FlowCanvas_ValueInput_ftg_DioramaTwoData_DioramaTwoKeys : ValueInput<DioramaTwoData.DioramaTwoKeys>
		{
			[Token(Token = "0x60027DF")]
			[Address(RVA = "0xC2409C", Offset = "0xC2409C", VA = "0xC2409C")]
			public FlowCanvas_ValueInput_ftg_DioramaTwoData_DioramaTwoKeys()
			{
			}
		}

		[Token(Token = "0x2000821")]
		private class FlowCanvas_ValueInput_ftg_SaveManager_DioramaWorlds : ValueInput<SaveManager.DioramaWorlds>
		{
			[Token(Token = "0x60027E0")]
			[Address(RVA = "0xC2418C", Offset = "0xC2418C", VA = "0xC2418C")]
			public FlowCanvas_ValueInput_ftg_SaveManager_DioramaWorlds()
			{
			}
		}

		[Token(Token = "0x2000822")]
		private class FlowCanvas_ValueInput_ftg_HubRoomData_HubRoomKeys : ValueInput<HubRoomData.HubRoomKeys>
		{
			[Token(Token = "0x60027E1")]
			[Address(RVA = "0xC240EC", Offset = "0xC240EC", VA = "0xC240EC")]
			public FlowCanvas_ValueInput_ftg_HubRoomData_HubRoomKeys()
			{
			}
		}

		[Token(Token = "0x2000823")]
		private class FlowCanvas_ValueInput_ftg_PersonaSettings_PersonaKeys : ValueInput<PersonaSettings.PersonaKeys>
		{
			[Token(Token = "0x60027E2")]
			[Address(RVA = "0xC2413C", Offset = "0xC2413C", VA = "0xC2413C")]
			public FlowCanvas_ValueInput_ftg_PersonaSettings_PersonaKeys()
			{
			}
		}

		[Token(Token = "0x2000824")]
		private class FlowCanvas_ValueInput_UnityEngine_LayerMask : ValueInput<LayerMask>
		{
			[Token(Token = "0x60027E3")]
			[Address(RVA = "0xC23C3C", Offset = "0xC23C3C", VA = "0xC23C3C")]
			public FlowCanvas_ValueInput_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000825")]
		private class FlowCanvas_ValueOutput_System_Boolean : ValueOutput<bool>
		{
			[Token(Token = "0x60027E4")]
			[Address(RVA = "0xC241DC", Offset = "0xC241DC", VA = "0xC241DC")]
			public FlowCanvas_ValueOutput_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000826")]
		private class FlowCanvas_ValueOutput_System_Single : ValueOutput<float>
		{
			[Token(Token = "0x60027E5")]
			[Address(RVA = "0xC2427C", Offset = "0xC2427C", VA = "0xC2427C")]
			public FlowCanvas_ValueOutput_System_Single()
			{
			}
		}

		[Token(Token = "0x2000827")]
		private class FlowCanvas_ValueOutput_System_Int32 : ValueOutput<int>
		{
			[Token(Token = "0x60027E6")]
			[Address(RVA = "0xC2422C", Offset = "0xC2422C", VA = "0xC2422C")]
			public FlowCanvas_ValueOutput_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000828")]
		private class FlowCanvas_ValueOutput_UnityEngine_Vector2 : ValueOutput<Vector2>
		{
			[Token(Token = "0x60027E7")]
			[Address(RVA = "0xC2472C", Offset = "0xC2472C", VA = "0xC2472C")]
			public FlowCanvas_ValueOutput_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000829")]
		private class FlowCanvas_ValueOutput_UnityEngine_Vector3 : ValueOutput<Vector3>
		{
			[Token(Token = "0x60027E8")]
			[Address(RVA = "0xC2477C", Offset = "0xC2477C", VA = "0xC2477C")]
			public FlowCanvas_ValueOutput_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x200082A")]
		private class FlowCanvas_ValueOutput_UnityEngine_Vector4 : ValueOutput<Vector4>
		{
			[Token(Token = "0x60027E9")]
			[Address(RVA = "0xC247CC", Offset = "0xC247CC", VA = "0xC247CC")]
			public FlowCanvas_ValueOutput_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x200082B")]
		private class FlowCanvas_ValueOutput_UnityEngine_Quaternion : ValueOutput<Quaternion>
		{
			[Token(Token = "0x60027EA")]
			[Address(RVA = "0xC2454C", Offset = "0xC2454C", VA = "0xC2454C")]
			public FlowCanvas_ValueOutput_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x200082C")]
		private class FlowCanvas_ValueOutput_UnityEngine_Keyframe : ValueOutput<Keyframe>
		{
			[Token(Token = "0x60027EB")]
			[Address(RVA = "0xC244AC", Offset = "0xC244AC", VA = "0xC244AC")]
			public FlowCanvas_ValueOutput_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x200082D")]
		private class FlowCanvas_ValueOutput_UnityEngine_Bounds : ValueOutput<Bounds>
		{
			[Token(Token = "0x60027EC")]
			[Address(RVA = "0xC242CC", Offset = "0xC242CC", VA = "0xC242CC")]
			public FlowCanvas_ValueOutput_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x200082E")]
		private class FlowCanvas_ValueOutput_UnityEngine_Color : ValueOutput<Color>
		{
			[Token(Token = "0x60027ED")]
			[Address(RVA = "0xC243BC", Offset = "0xC243BC", VA = "0xC243BC")]
			public FlowCanvas_ValueOutput_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x200082F")]
		private class FlowCanvas_ValueOutput_UnityEngine_Rect : ValueOutput<Rect>
		{
			[Token(Token = "0x60027EE")]
			[Address(RVA = "0xC2468C", Offset = "0xC2468C", VA = "0xC2468C")]
			public FlowCanvas_ValueOutput_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000830")]
		private class FlowCanvas_ValueOutput_UnityEngine_ContactPoint : ValueOutput<ContactPoint>
		{
			[Token(Token = "0x60027EF")]
			[Address(RVA = "0xC2440C", Offset = "0xC2440C", VA = "0xC2440C")]
			public FlowCanvas_ValueOutput_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000831")]
		private class FlowCanvas_ValueOutput_UnityEngine_ContactPoint2D : ValueOutput<ContactPoint2D>
		{
			[Token(Token = "0x60027F0")]
			[Address(RVA = "0xC2445C", Offset = "0xC2445C", VA = "0xC2445C")]
			public FlowCanvas_ValueOutput_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000832")]
		private class FlowCanvas_ValueOutput_UnityEngine_Collision : ValueOutput<Collision>
		{
			[Token(Token = "0x60027F1")]
			[Address(RVA = "0xC2431C", Offset = "0xC2431C", VA = "0xC2431C")]
			public FlowCanvas_ValueOutput_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x2000833")]
		private class FlowCanvas_ValueOutput_UnityEngine_Collision2D : ValueOutput<Collision2D>
		{
			[Token(Token = "0x60027F2")]
			[Address(RVA = "0xC2436C", Offset = "0xC2436C", VA = "0xC2436C")]
			public FlowCanvas_ValueOutput_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000834")]
		private class FlowCanvas_ValueOutput_UnityEngine_RaycastHit : ValueOutput<RaycastHit>
		{
			[Token(Token = "0x60027F3")]
			[Address(RVA = "0xC245EC", Offset = "0xC245EC", VA = "0xC245EC")]
			public FlowCanvas_ValueOutput_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000835")]
		private class FlowCanvas_ValueOutput_UnityEngine_RaycastHit2D : ValueOutput<RaycastHit2D>
		{
			[Token(Token = "0x60027F4")]
			[Address(RVA = "0xC2463C", Offset = "0xC2463C", VA = "0xC2463C")]
			public FlowCanvas_ValueOutput_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000836")]
		private class FlowCanvas_ValueOutput_UnityEngine_Ray : ValueOutput<Ray>
		{
			[Token(Token = "0x60027F5")]
			[Address(RVA = "0xC2459C", Offset = "0xC2459C", VA = "0xC2459C")]
			public FlowCanvas_ValueOutput_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x2000837")]
		private class FlowCanvas_ValueOutput_UnityEngine_Space : ValueOutput<Space>
		{
			[Token(Token = "0x60027F6")]
			[Address(RVA = "0xC246DC", Offset = "0xC246DC", VA = "0xC246DC")]
			public FlowCanvas_ValueOutput_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000838")]
		private class FlowCanvas_ValueOutput_ftg_DioramaFiveData_DioramaFiveKeys : ValueOutput<DioramaFiveData.DioramaFiveKeys>
		{
			[Token(Token = "0x60027F7")]
			[Address(RVA = "0xC2481C", Offset = "0xC2481C", VA = "0xC2481C")]
			public FlowCanvas_ValueOutput_ftg_DioramaFiveData_DioramaFiveKeys()
			{
			}
		}

		[Token(Token = "0x2000839")]
		private class FlowCanvas_ValueOutput_ftg_DioramaFourData_DioramaFourKeys : ValueOutput<DioramaFourData.DioramaFourKeys>
		{
			[Token(Token = "0x60027F8")]
			[Address(RVA = "0xC2486C", Offset = "0xC2486C", VA = "0xC2486C")]
			public FlowCanvas_ValueOutput_ftg_DioramaFourData_DioramaFourKeys()
			{
			}
		}

		[Token(Token = "0x200083A")]
		private class FlowCanvas_ValueOutput_ftg_DioramaOneData_DioramaOneKeys : ValueOutput<DioramaOneData.DioramaOneKeys>
		{
			[Token(Token = "0x60027F9")]
			[Address(RVA = "0xC248BC", Offset = "0xC248BC", VA = "0xC248BC")]
			public FlowCanvas_ValueOutput_ftg_DioramaOneData_DioramaOneKeys()
			{
			}
		}

		[Token(Token = "0x200083B")]
		private class FlowCanvas_ValueOutput_ftg_DioramaThreeData_DioramaThreeKeys : ValueOutput<DioramaThreeData.DioramaThreeKeys>
		{
			[Token(Token = "0x60027FA")]
			[Address(RVA = "0xC2490C", Offset = "0xC2490C", VA = "0xC2490C")]
			public FlowCanvas_ValueOutput_ftg_DioramaThreeData_DioramaThreeKeys()
			{
			}
		}

		[Token(Token = "0x200083C")]
		private class FlowCanvas_ValueOutput_ftg_DioramaTwoData_DioramaTwoKeys : ValueOutput<DioramaTwoData.DioramaTwoKeys>
		{
			[Token(Token = "0x60027FB")]
			[Address(RVA = "0xC2495C", Offset = "0xC2495C", VA = "0xC2495C")]
			public FlowCanvas_ValueOutput_ftg_DioramaTwoData_DioramaTwoKeys()
			{
			}
		}

		[Token(Token = "0x200083D")]
		private class FlowCanvas_ValueOutput_ftg_SaveManager_DioramaWorlds : ValueOutput<SaveManager.DioramaWorlds>
		{
			[Token(Token = "0x60027FC")]
			[Address(RVA = "0xC24A4C", Offset = "0xC24A4C", VA = "0xC24A4C")]
			public FlowCanvas_ValueOutput_ftg_SaveManager_DioramaWorlds()
			{
			}
		}

		[Token(Token = "0x200083E")]
		private class FlowCanvas_ValueOutput_ftg_HubRoomData_HubRoomKeys : ValueOutput<HubRoomData.HubRoomKeys>
		{
			[Token(Token = "0x60027FD")]
			[Address(RVA = "0xC249AC", Offset = "0xC249AC", VA = "0xC249AC")]
			public FlowCanvas_ValueOutput_ftg_HubRoomData_HubRoomKeys()
			{
			}
		}

		[Token(Token = "0x200083F")]
		private class FlowCanvas_ValueOutput_ftg_PersonaSettings_PersonaKeys : ValueOutput<PersonaSettings.PersonaKeys>
		{
			[Token(Token = "0x60027FE")]
			[Address(RVA = "0xC249FC", Offset = "0xC249FC", VA = "0xC249FC")]
			public FlowCanvas_ValueOutput_ftg_PersonaSettings_PersonaKeys()
			{
			}
		}

		[Token(Token = "0x2000840")]
		private class FlowCanvas_ValueOutput_UnityEngine_LayerMask : ValueOutput<LayerMask>
		{
			[Token(Token = "0x60027FF")]
			[Address(RVA = "0xC244FC", Offset = "0xC244FC", VA = "0xC244FC")]
			public FlowCanvas_ValueOutput_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000841")]
		private class FlowCanvas_Nodes_AddDictionaryItem_System_Boolean : AddDictionaryItem<bool>
		{
			[Token(Token = "0x6002800")]
			[Address(RVA = "0xB45418", Offset = "0xB45418", VA = "0xB45418")]
			public FlowCanvas_Nodes_AddDictionaryItem_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000842")]
		private class FlowCanvas_Nodes_AddDictionaryItem_System_Single : AddDictionaryItem<float>
		{
			[Token(Token = "0x6002801")]
			[Address(RVA = "0xB454B8", Offset = "0xB454B8", VA = "0xB454B8")]
			public FlowCanvas_Nodes_AddDictionaryItem_System_Single()
			{
			}
		}

		[Token(Token = "0x2000843")]
		private class FlowCanvas_Nodes_AddDictionaryItem_System_Int32 : AddDictionaryItem<int>
		{
			[Token(Token = "0x6002802")]
			[Address(RVA = "0xB45468", Offset = "0xB45468", VA = "0xB45468")]
			public FlowCanvas_Nodes_AddDictionaryItem_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000844")]
		private class FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_Vector2 : AddDictionaryItem<Vector2>
		{
			[Token(Token = "0x6002803")]
			[Address(RVA = "0xB45968", Offset = "0xB45968", VA = "0xB45968")]
			public FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000845")]
		private class FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_Vector3 : AddDictionaryItem<Vector3>
		{
			[Token(Token = "0x6002804")]
			[Address(RVA = "0xB459B8", Offset = "0xB459B8", VA = "0xB459B8")]
			public FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000846")]
		private class FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_Vector4 : AddDictionaryItem<Vector4>
		{
			[Token(Token = "0x6002805")]
			[Address(RVA = "0xB45A08", Offset = "0xB45A08", VA = "0xB45A08")]
			public FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x2000847")]
		private class FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_Quaternion : AddDictionaryItem<Quaternion>
		{
			[Token(Token = "0x6002806")]
			[Address(RVA = "0xB45788", Offset = "0xB45788", VA = "0xB45788")]
			public FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000848")]
		private class FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_Keyframe : AddDictionaryItem<Keyframe>
		{
			[Token(Token = "0x6002807")]
			[Address(RVA = "0xB456E8", Offset = "0xB456E8", VA = "0xB456E8")]
			public FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000849")]
		private class FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_Bounds : AddDictionaryItem<Bounds>
		{
			[Token(Token = "0x6002808")]
			[Address(RVA = "0xB45508", Offset = "0xB45508", VA = "0xB45508")]
			public FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x200084A")]
		private class FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_Color : AddDictionaryItem<Color>
		{
			[Token(Token = "0x6002809")]
			[Address(RVA = "0xB455F8", Offset = "0xB455F8", VA = "0xB455F8")]
			public FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x200084B")]
		private class FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_Rect : AddDictionaryItem<Rect>
		{
			[Token(Token = "0x600280A")]
			[Address(RVA = "0xB458C8", Offset = "0xB458C8", VA = "0xB458C8")]
			public FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x200084C")]
		private class FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_ContactPoint : AddDictionaryItem<ContactPoint>
		{
			[Token(Token = "0x600280B")]
			[Address(RVA = "0xB45648", Offset = "0xB45648", VA = "0xB45648")]
			public FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x200084D")]
		private class FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_ContactPoint2D : AddDictionaryItem<ContactPoint2D>
		{
			[Token(Token = "0x600280C")]
			[Address(RVA = "0xB45698", Offset = "0xB45698", VA = "0xB45698")]
			public FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x200084E")]
		private class FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_Collision : AddDictionaryItem<Collision>
		{
			[Token(Token = "0x600280D")]
			[Address(RVA = "0xB45558", Offset = "0xB45558", VA = "0xB45558")]
			public FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x200084F")]
		private class FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_Collision2D : AddDictionaryItem<Collision2D>
		{
			[Token(Token = "0x600280E")]
			[Address(RVA = "0xB455A8", Offset = "0xB455A8", VA = "0xB455A8")]
			public FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000850")]
		private class FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_RaycastHit : AddDictionaryItem<RaycastHit>
		{
			[Token(Token = "0x600280F")]
			[Address(RVA = "0xB45828", Offset = "0xB45828", VA = "0xB45828")]
			public FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000851")]
		private class FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_RaycastHit2D : AddDictionaryItem<RaycastHit2D>
		{
			[Token(Token = "0x6002810")]
			[Address(RVA = "0xB45878", Offset = "0xB45878", VA = "0xB45878")]
			public FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000852")]
		private class FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_Ray : AddDictionaryItem<Ray>
		{
			[Token(Token = "0x6002811")]
			[Address(RVA = "0xB457D8", Offset = "0xB457D8", VA = "0xB457D8")]
			public FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x2000853")]
		private class FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_Space : AddDictionaryItem<Space>
		{
			[Token(Token = "0x6002812")]
			[Address(RVA = "0xB45918", Offset = "0xB45918", VA = "0xB45918")]
			public FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000854")]
		private class FlowCanvas_Nodes_AddDictionaryItem_ftg_DioramaFiveData_DioramaFiveKeys : AddDictionaryItem<DioramaFiveData.DioramaFiveKeys>
		{
			[Token(Token = "0x6002813")]
			[Address(RVA = "0xB45A58", Offset = "0xB45A58", VA = "0xB45A58")]
			public FlowCanvas_Nodes_AddDictionaryItem_ftg_DioramaFiveData_DioramaFiveKeys()
			{
			}
		}

		[Token(Token = "0x2000855")]
		private class FlowCanvas_Nodes_AddDictionaryItem_ftg_DioramaFourData_DioramaFourKeys : AddDictionaryItem<DioramaFourData.DioramaFourKeys>
		{
			[Token(Token = "0x6002814")]
			[Address(RVA = "0xB45AA8", Offset = "0xB45AA8", VA = "0xB45AA8")]
			public FlowCanvas_Nodes_AddDictionaryItem_ftg_DioramaFourData_DioramaFourKeys()
			{
			}
		}

		[Token(Token = "0x2000856")]
		private class FlowCanvas_Nodes_AddDictionaryItem_ftg_DioramaOneData_DioramaOneKeys : AddDictionaryItem<DioramaOneData.DioramaOneKeys>
		{
			[Token(Token = "0x6002815")]
			[Address(RVA = "0xB45AF8", Offset = "0xB45AF8", VA = "0xB45AF8")]
			public FlowCanvas_Nodes_AddDictionaryItem_ftg_DioramaOneData_DioramaOneKeys()
			{
			}
		}

		[Token(Token = "0x2000857")]
		private class FlowCanvas_Nodes_AddDictionaryItem_ftg_DioramaThreeData_DioramaThreeKeys : AddDictionaryItem<DioramaThreeData.DioramaThreeKeys>
		{
			[Token(Token = "0x6002816")]
			[Address(RVA = "0xB45B48", Offset = "0xB45B48", VA = "0xB45B48")]
			public FlowCanvas_Nodes_AddDictionaryItem_ftg_DioramaThreeData_DioramaThreeKeys()
			{
			}
		}

		[Token(Token = "0x2000858")]
		private class FlowCanvas_Nodes_AddDictionaryItem_ftg_DioramaTwoData_DioramaTwoKeys : AddDictionaryItem<DioramaTwoData.DioramaTwoKeys>
		{
			[Token(Token = "0x6002817")]
			[Address(RVA = "0xB45B98", Offset = "0xB45B98", VA = "0xB45B98")]
			public FlowCanvas_Nodes_AddDictionaryItem_ftg_DioramaTwoData_DioramaTwoKeys()
			{
			}
		}

		[Token(Token = "0x2000859")]
		private class FlowCanvas_Nodes_AddDictionaryItem_ftg_SaveManager_DioramaWorlds : AddDictionaryItem<SaveManager.DioramaWorlds>
		{
			[Token(Token = "0x6002818")]
			[Address(RVA = "0xB45C88", Offset = "0xB45C88", VA = "0xB45C88")]
			public FlowCanvas_Nodes_AddDictionaryItem_ftg_SaveManager_DioramaWorlds()
			{
			}
		}

		[Token(Token = "0x200085A")]
		private class FlowCanvas_Nodes_AddDictionaryItem_ftg_HubRoomData_HubRoomKeys : AddDictionaryItem<HubRoomData.HubRoomKeys>
		{
			[Token(Token = "0x6002819")]
			[Address(RVA = "0xB45BE8", Offset = "0xB45BE8", VA = "0xB45BE8")]
			public FlowCanvas_Nodes_AddDictionaryItem_ftg_HubRoomData_HubRoomKeys()
			{
			}
		}

		[Token(Token = "0x200085B")]
		private class FlowCanvas_Nodes_AddDictionaryItem_ftg_PersonaSettings_PersonaKeys : AddDictionaryItem<PersonaSettings.PersonaKeys>
		{
			[Token(Token = "0x600281A")]
			[Address(RVA = "0xB45C38", Offset = "0xB45C38", VA = "0xB45C38")]
			public FlowCanvas_Nodes_AddDictionaryItem_ftg_PersonaSettings_PersonaKeys()
			{
			}
		}

		[Token(Token = "0x200085C")]
		private class FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_LayerMask : AddDictionaryItem<LayerMask>
		{
			[Token(Token = "0x600281B")]
			[Address(RVA = "0xB45738", Offset = "0xB45738", VA = "0xB45738")]
			public FlowCanvas_Nodes_AddDictionaryItem_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x200085D")]
		private class FlowCanvas_Nodes_AddListItem_System_Boolean : AddListItem<bool>
		{
			[Token(Token = "0x600281C")]
			[Address(RVA = "0xB45CD8", Offset = "0xB45CD8", VA = "0xB45CD8")]
			public FlowCanvas_Nodes_AddListItem_System_Boolean()
			{
			}
		}

		[Token(Token = "0x200085E")]
		private class FlowCanvas_Nodes_AddListItem_System_Single : AddListItem<float>
		{
			[Token(Token = "0x600281D")]
			[Address(RVA = "0xB45D78", Offset = "0xB45D78", VA = "0xB45D78")]
			public FlowCanvas_Nodes_AddListItem_System_Single()
			{
			}
		}

		[Token(Token = "0x200085F")]
		private class FlowCanvas_Nodes_AddListItem_System_Int32 : AddListItem<int>
		{
			[Token(Token = "0x600281E")]
			[Address(RVA = "0xB45D28", Offset = "0xB45D28", VA = "0xB45D28")]
			public FlowCanvas_Nodes_AddListItem_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000860")]
		private class FlowCanvas_Nodes_AddListItem_UnityEngine_Vector2 : AddListItem<Vector2>
		{
			[Token(Token = "0x600281F")]
			[Address(RVA = "0xB46228", Offset = "0xB46228", VA = "0xB46228")]
			public FlowCanvas_Nodes_AddListItem_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000861")]
		private class FlowCanvas_Nodes_AddListItem_UnityEngine_Vector3 : AddListItem<Vector3>
		{
			[Token(Token = "0x6002820")]
			[Address(RVA = "0xB46278", Offset = "0xB46278", VA = "0xB46278")]
			public FlowCanvas_Nodes_AddListItem_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000862")]
		private class FlowCanvas_Nodes_AddListItem_UnityEngine_Vector4 : AddListItem<Vector4>
		{
			[Token(Token = "0x6002821")]
			[Address(RVA = "0xB462C8", Offset = "0xB462C8", VA = "0xB462C8")]
			public FlowCanvas_Nodes_AddListItem_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x2000863")]
		private class FlowCanvas_Nodes_AddListItem_UnityEngine_Quaternion : AddListItem<Quaternion>
		{
			[Token(Token = "0x6002822")]
			[Address(RVA = "0xB46048", Offset = "0xB46048", VA = "0xB46048")]
			public FlowCanvas_Nodes_AddListItem_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000864")]
		private class FlowCanvas_Nodes_AddListItem_UnityEngine_Keyframe : AddListItem<Keyframe>
		{
			[Token(Token = "0x6002823")]
			[Address(RVA = "0xB45FA8", Offset = "0xB45FA8", VA = "0xB45FA8")]
			public FlowCanvas_Nodes_AddListItem_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000865")]
		private class FlowCanvas_Nodes_AddListItem_UnityEngine_Bounds : AddListItem<Bounds>
		{
			[Token(Token = "0x6002824")]
			[Address(RVA = "0xB45DC8", Offset = "0xB45DC8", VA = "0xB45DC8")]
			public FlowCanvas_Nodes_AddListItem_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000866")]
		private class FlowCanvas_Nodes_AddListItem_UnityEngine_Color : AddListItem<Color>
		{
			[Token(Token = "0x6002825")]
			[Address(RVA = "0xB45EB8", Offset = "0xB45EB8", VA = "0xB45EB8")]
			public FlowCanvas_Nodes_AddListItem_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000867")]
		private class FlowCanvas_Nodes_AddListItem_UnityEngine_Rect : AddListItem<Rect>
		{
			[Token(Token = "0x6002826")]
			[Address(RVA = "0xB46188", Offset = "0xB46188", VA = "0xB46188")]
			public FlowCanvas_Nodes_AddListItem_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000868")]
		private class FlowCanvas_Nodes_AddListItem_UnityEngine_ContactPoint : AddListItem<ContactPoint>
		{
			[Token(Token = "0x6002827")]
			[Address(RVA = "0xB45F08", Offset = "0xB45F08", VA = "0xB45F08")]
			public FlowCanvas_Nodes_AddListItem_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000869")]
		private class FlowCanvas_Nodes_AddListItem_UnityEngine_ContactPoint2D : AddListItem<ContactPoint2D>
		{
			[Token(Token = "0x6002828")]
			[Address(RVA = "0xB45F58", Offset = "0xB45F58", VA = "0xB45F58")]
			public FlowCanvas_Nodes_AddListItem_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x200086A")]
		private class FlowCanvas_Nodes_AddListItem_UnityEngine_Collision : AddListItem<Collision>
		{
			[Token(Token = "0x6002829")]
			[Address(RVA = "0xB45E18", Offset = "0xB45E18", VA = "0xB45E18")]
			public FlowCanvas_Nodes_AddListItem_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x200086B")]
		private class FlowCanvas_Nodes_AddListItem_UnityEngine_Collision2D : AddListItem<Collision2D>
		{
			[Token(Token = "0x600282A")]
			[Address(RVA = "0xB45E68", Offset = "0xB45E68", VA = "0xB45E68")]
			public FlowCanvas_Nodes_AddListItem_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x200086C")]
		private class FlowCanvas_Nodes_AddListItem_UnityEngine_RaycastHit : AddListItem<RaycastHit>
		{
			[Token(Token = "0x600282B")]
			[Address(RVA = "0xB460E8", Offset = "0xB460E8", VA = "0xB460E8")]
			public FlowCanvas_Nodes_AddListItem_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x200086D")]
		private class FlowCanvas_Nodes_AddListItem_UnityEngine_RaycastHit2D : AddListItem<RaycastHit2D>
		{
			[Token(Token = "0x600282C")]
			[Address(RVA = "0xB46138", Offset = "0xB46138", VA = "0xB46138")]
			public FlowCanvas_Nodes_AddListItem_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x200086E")]
		private class FlowCanvas_Nodes_AddListItem_UnityEngine_Ray : AddListItem<Ray>
		{
			[Token(Token = "0x600282D")]
			[Address(RVA = "0xB46098", Offset = "0xB46098", VA = "0xB46098")]
			public FlowCanvas_Nodes_AddListItem_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x200086F")]
		private class FlowCanvas_Nodes_AddListItem_UnityEngine_Space : AddListItem<Space>
		{
			[Token(Token = "0x600282E")]
			[Address(RVA = "0xB461D8", Offset = "0xB461D8", VA = "0xB461D8")]
			public FlowCanvas_Nodes_AddListItem_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000870")]
		private class FlowCanvas_Nodes_AddListItem_ftg_DioramaFiveData_DioramaFiveKeys : AddListItem<DioramaFiveData.DioramaFiveKeys>
		{
			[Token(Token = "0x600282F")]
			[Address(RVA = "0xB46318", Offset = "0xB46318", VA = "0xB46318")]
			public FlowCanvas_Nodes_AddListItem_ftg_DioramaFiveData_DioramaFiveKeys()
			{
			}
		}

		[Token(Token = "0x2000871")]
		private class FlowCanvas_Nodes_AddListItem_ftg_DioramaFourData_DioramaFourKeys : AddListItem<DioramaFourData.DioramaFourKeys>
		{
			[Token(Token = "0x6002830")]
			[Address(RVA = "0xB46368", Offset = "0xB46368", VA = "0xB46368")]
			public FlowCanvas_Nodes_AddListItem_ftg_DioramaFourData_DioramaFourKeys()
			{
			}
		}

		[Token(Token = "0x2000872")]
		private class FlowCanvas_Nodes_AddListItem_ftg_DioramaOneData_DioramaOneKeys : AddListItem<DioramaOneData.DioramaOneKeys>
		{
			[Token(Token = "0x6002831")]
			[Address(RVA = "0xB463B8", Offset = "0xB463B8", VA = "0xB463B8")]
			public FlowCanvas_Nodes_AddListItem_ftg_DioramaOneData_DioramaOneKeys()
			{
			}
		}

		[Token(Token = "0x2000873")]
		private class FlowCanvas_Nodes_AddListItem_ftg_DioramaThreeData_DioramaThreeKeys : AddListItem<DioramaThreeData.DioramaThreeKeys>
		{
			[Token(Token = "0x6002832")]
			[Address(RVA = "0xB46408", Offset = "0xB46408", VA = "0xB46408")]
			public FlowCanvas_Nodes_AddListItem_ftg_DioramaThreeData_DioramaThreeKeys()
			{
			}
		}

		[Token(Token = "0x2000874")]
		private class FlowCanvas_Nodes_AddListItem_ftg_DioramaTwoData_DioramaTwoKeys : AddListItem<DioramaTwoData.DioramaTwoKeys>
		{
			[Token(Token = "0x6002833")]
			[Address(RVA = "0xB46458", Offset = "0xB46458", VA = "0xB46458")]
			public FlowCanvas_Nodes_AddListItem_ftg_DioramaTwoData_DioramaTwoKeys()
			{
			}
		}

		[Token(Token = "0x2000875")]
		private class FlowCanvas_Nodes_AddListItem_ftg_SaveManager_DioramaWorlds : AddListItem<SaveManager.DioramaWorlds>
		{
			[Token(Token = "0x6002834")]
			[Address(RVA = "0xB46548", Offset = "0xB46548", VA = "0xB46548")]
			public FlowCanvas_Nodes_AddListItem_ftg_SaveManager_DioramaWorlds()
			{
			}
		}

		[Token(Token = "0x2000876")]
		private class FlowCanvas_Nodes_AddListItem_ftg_HubRoomData_HubRoomKeys : AddListItem<HubRoomData.HubRoomKeys>
		{
			[Token(Token = "0x6002835")]
			[Address(RVA = "0xB464A8", Offset = "0xB464A8", VA = "0xB464A8")]
			public FlowCanvas_Nodes_AddListItem_ftg_HubRoomData_HubRoomKeys()
			{
			}
		}

		[Token(Token = "0x2000877")]
		private class FlowCanvas_Nodes_AddListItem_ftg_PersonaSettings_PersonaKeys : AddListItem<PersonaSettings.PersonaKeys>
		{
			[Token(Token = "0x6002836")]
			[Address(RVA = "0xB464F8", Offset = "0xB464F8", VA = "0xB464F8")]
			public FlowCanvas_Nodes_AddListItem_ftg_PersonaSettings_PersonaKeys()
			{
			}
		}

		[Token(Token = "0x2000878")]
		private class FlowCanvas_Nodes_AddListItem_UnityEngine_LayerMask : AddListItem<LayerMask>
		{
			[Token(Token = "0x6002837")]
			[Address(RVA = "0xB45FF8", Offset = "0xB45FF8", VA = "0xB45FF8")]
			public FlowCanvas_Nodes_AddListItem_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000879")]
		private class FlowCanvas_Nodes_Buffer_System_Boolean : Buffer<bool>
		{
			[Token(Token = "0x6002838")]
			[Address(RVA = "0xB46598", Offset = "0xB46598", VA = "0xB46598")]
			public FlowCanvas_Nodes_Buffer_System_Boolean()
			{
			}
		}

		[Token(Token = "0x200087A")]
		private class FlowCanvas_Nodes_Buffer_System_Single : Buffer<float>
		{
			[Token(Token = "0x6002839")]
			[Address(RVA = "0xB46638", Offset = "0xB46638", VA = "0xB46638")]
			public FlowCanvas_Nodes_Buffer_System_Single()
			{
			}
		}

		[Token(Token = "0x200087B")]
		private class FlowCanvas_Nodes_Buffer_System_Int32 : Buffer<int>
		{
			[Token(Token = "0x600283A")]
			[Address(RVA = "0xB465E8", Offset = "0xB465E8", VA = "0xB465E8")]
			public FlowCanvas_Nodes_Buffer_System_Int32()
			{
			}
		}

		[Token(Token = "0x200087C")]
		private class FlowCanvas_Nodes_Buffer_UnityEngine_Vector2 : Buffer<Vector2>
		{
			[Token(Token = "0x600283B")]
			[Address(RVA = "0xB46AE8", Offset = "0xB46AE8", VA = "0xB46AE8")]
			public FlowCanvas_Nodes_Buffer_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x200087D")]
		private class FlowCanvas_Nodes_Buffer_UnityEngine_Vector3 : Buffer<Vector3>
		{
			[Token(Token = "0x600283C")]
			[Address(RVA = "0xB46B38", Offset = "0xB46B38", VA = "0xB46B38")]
			public FlowCanvas_Nodes_Buffer_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x200087E")]
		private class FlowCanvas_Nodes_Buffer_UnityEngine_Vector4 : Buffer<Vector4>
		{
			[Token(Token = "0x600283D")]
			[Address(RVA = "0xB46B88", Offset = "0xB46B88", VA = "0xB46B88")]
			public FlowCanvas_Nodes_Buffer_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x200087F")]
		private class FlowCanvas_Nodes_Buffer_UnityEngine_Quaternion : Buffer<Quaternion>
		{
			[Token(Token = "0x600283E")]
			[Address(RVA = "0xB46908", Offset = "0xB46908", VA = "0xB46908")]
			public FlowCanvas_Nodes_Buffer_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000880")]
		private class FlowCanvas_Nodes_Buffer_UnityEngine_Keyframe : Buffer<Keyframe>
		{
			[Token(Token = "0x600283F")]
			[Address(RVA = "0xB46868", Offset = "0xB46868", VA = "0xB46868")]
			public FlowCanvas_Nodes_Buffer_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000881")]
		private class FlowCanvas_Nodes_Buffer_UnityEngine_Bounds : Buffer<Bounds>
		{
			[Token(Token = "0x6002840")]
			[Address(RVA = "0xB46688", Offset = "0xB46688", VA = "0xB46688")]
			public FlowCanvas_Nodes_Buffer_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000882")]
		private class FlowCanvas_Nodes_Buffer_UnityEngine_Color : Buffer<Color>
		{
			[Token(Token = "0x6002841")]
			[Address(RVA = "0xB46778", Offset = "0xB46778", VA = "0xB46778")]
			public FlowCanvas_Nodes_Buffer_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000883")]
		private class FlowCanvas_Nodes_Buffer_UnityEngine_Rect : Buffer<Rect>
		{
			[Token(Token = "0x6002842")]
			[Address(RVA = "0xB46A48", Offset = "0xB46A48", VA = "0xB46A48")]
			public FlowCanvas_Nodes_Buffer_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000884")]
		private class FlowCanvas_Nodes_Buffer_UnityEngine_ContactPoint : Buffer<ContactPoint>
		{
			[Token(Token = "0x6002843")]
			[Address(RVA = "0xB467C8", Offset = "0xB467C8", VA = "0xB467C8")]
			public FlowCanvas_Nodes_Buffer_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000885")]
		private class FlowCanvas_Nodes_Buffer_UnityEngine_ContactPoint2D : Buffer<ContactPoint2D>
		{
			[Token(Token = "0x6002844")]
			[Address(RVA = "0xB46818", Offset = "0xB46818", VA = "0xB46818")]
			public FlowCanvas_Nodes_Buffer_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000886")]
		private class FlowCanvas_Nodes_Buffer_UnityEngine_Collision : Buffer<Collision>
		{
			[Token(Token = "0x6002845")]
			[Address(RVA = "0xB466D8", Offset = "0xB466D8", VA = "0xB466D8")]
			public FlowCanvas_Nodes_Buffer_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x2000887")]
		private class FlowCanvas_Nodes_Buffer_UnityEngine_Collision2D : Buffer<Collision2D>
		{
			[Token(Token = "0x6002846")]
			[Address(RVA = "0xB46728", Offset = "0xB46728", VA = "0xB46728")]
			public FlowCanvas_Nodes_Buffer_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000888")]
		private class FlowCanvas_Nodes_Buffer_UnityEngine_RaycastHit : Buffer<RaycastHit>
		{
			[Token(Token = "0x6002847")]
			[Address(RVA = "0xB469A8", Offset = "0xB469A8", VA = "0xB469A8")]
			public FlowCanvas_Nodes_Buffer_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000889")]
		private class FlowCanvas_Nodes_Buffer_UnityEngine_RaycastHit2D : Buffer<RaycastHit2D>
		{
			[Token(Token = "0x6002848")]
			[Address(RVA = "0xB469F8", Offset = "0xB469F8", VA = "0xB469F8")]
			public FlowCanvas_Nodes_Buffer_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x200088A")]
		private class FlowCanvas_Nodes_Buffer_UnityEngine_Ray : Buffer<Ray>
		{
			[Token(Token = "0x6002849")]
			[Address(RVA = "0xB46958", Offset = "0xB46958", VA = "0xB46958")]
			public FlowCanvas_Nodes_Buffer_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x200088B")]
		private class FlowCanvas_Nodes_Buffer_UnityEngine_Space : Buffer<Space>
		{
			[Token(Token = "0x600284A")]
			[Address(RVA = "0xB46A98", Offset = "0xB46A98", VA = "0xB46A98")]
			public FlowCanvas_Nodes_Buffer_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x200088C")]
		private class FlowCanvas_Nodes_Buffer_ftg_DioramaFiveData_DioramaFiveKeys : Buffer<DioramaFiveData.DioramaFiveKeys>
		{
			[Token(Token = "0x600284B")]
			[Address(RVA = "0xB46BD8", Offset = "0xB46BD8", VA = "0xB46BD8")]
			public FlowCanvas_Nodes_Buffer_ftg_DioramaFiveData_DioramaFiveKeys()
			{
			}
		}

		[Token(Token = "0x200088D")]
		private class FlowCanvas_Nodes_Buffer_ftg_DioramaFourData_DioramaFourKeys : Buffer<DioramaFourData.DioramaFourKeys>
		{
			[Token(Token = "0x600284C")]
			[Address(RVA = "0xB46C28", Offset = "0xB46C28", VA = "0xB46C28")]
			public FlowCanvas_Nodes_Buffer_ftg_DioramaFourData_DioramaFourKeys()
			{
			}
		}

		[Token(Token = "0x200088E")]
		private class FlowCanvas_Nodes_Buffer_ftg_DioramaOneData_DioramaOneKeys : Buffer<DioramaOneData.DioramaOneKeys>
		{
			[Token(Token = "0x600284D")]
			[Address(RVA = "0xB46C78", Offset = "0xB46C78", VA = "0xB46C78")]
			public FlowCanvas_Nodes_Buffer_ftg_DioramaOneData_DioramaOneKeys()
			{
			}
		}

		[Token(Token = "0x200088F")]
		private class FlowCanvas_Nodes_Buffer_ftg_DioramaThreeData_DioramaThreeKeys : Buffer<DioramaThreeData.DioramaThreeKeys>
		{
			[Token(Token = "0x600284E")]
			[Address(RVA = "0xB46CC8", Offset = "0xB46CC8", VA = "0xB46CC8")]
			public FlowCanvas_Nodes_Buffer_ftg_DioramaThreeData_DioramaThreeKeys()
			{
			}
		}

		[Token(Token = "0x2000890")]
		private class FlowCanvas_Nodes_Buffer_ftg_DioramaTwoData_DioramaTwoKeys : Buffer<DioramaTwoData.DioramaTwoKeys>
		{
			[Token(Token = "0x600284F")]
			[Address(RVA = "0xB46D18", Offset = "0xB46D18", VA = "0xB46D18")]
			public FlowCanvas_Nodes_Buffer_ftg_DioramaTwoData_DioramaTwoKeys()
			{
			}
		}

		[Token(Token = "0x2000891")]
		private class FlowCanvas_Nodes_Buffer_ftg_SaveManager_DioramaWorlds : Buffer<SaveManager.DioramaWorlds>
		{
			[Token(Token = "0x6002850")]
			[Address(RVA = "0xB46E08", Offset = "0xB46E08", VA = "0xB46E08")]
			public FlowCanvas_Nodes_Buffer_ftg_SaveManager_DioramaWorlds()
			{
			}
		}

		[Token(Token = "0x2000892")]
		private class FlowCanvas_Nodes_Buffer_ftg_HubRoomData_HubRoomKeys : Buffer<HubRoomData.HubRoomKeys>
		{
			[Token(Token = "0x6002851")]
			[Address(RVA = "0xB46D68", Offset = "0xB46D68", VA = "0xB46D68")]
			public FlowCanvas_Nodes_Buffer_ftg_HubRoomData_HubRoomKeys()
			{
			}
		}

		[Token(Token = "0x2000893")]
		private class FlowCanvas_Nodes_Buffer_ftg_PersonaSettings_PersonaKeys : Buffer<PersonaSettings.PersonaKeys>
		{
			[Token(Token = "0x6002852")]
			[Address(RVA = "0xB46DB8", Offset = "0xB46DB8", VA = "0xB46DB8")]
			public FlowCanvas_Nodes_Buffer_ftg_PersonaSettings_PersonaKeys()
			{
			}
		}

		[Token(Token = "0x2000894")]
		private class FlowCanvas_Nodes_Buffer_UnityEngine_LayerMask : Buffer<LayerMask>
		{
			[Token(Token = "0x6002853")]
			[Address(RVA = "0xB468B8", Offset = "0xB468B8", VA = "0xB468B8")]
			public FlowCanvas_Nodes_Buffer_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000895")]
		private class FlowCanvas_Nodes_Cache_System_Boolean : Cache<bool>
		{
			[Token(Token = "0x6002854")]
			[Address(RVA = "0xB46E58", Offset = "0xB46E58", VA = "0xB46E58")]
			public FlowCanvas_Nodes_Cache_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000896")]
		private class FlowCanvas_Nodes_Cache_System_Single : Cache<float>
		{
			[Token(Token = "0x6002855")]
			[Address(RVA = "0xB46EF8", Offset = "0xB46EF8", VA = "0xB46EF8")]
			public FlowCanvas_Nodes_Cache_System_Single()
			{
			}
		}

		[Token(Token = "0x2000897")]
		private class FlowCanvas_Nodes_Cache_System_Int32 : Cache<int>
		{
			[Token(Token = "0x6002856")]
			[Address(RVA = "0xB46EA8", Offset = "0xB46EA8", VA = "0xB46EA8")]
			public FlowCanvas_Nodes_Cache_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000898")]
		private class FlowCanvas_Nodes_Cache_UnityEngine_Vector2 : Cache<Vector2>
		{
			[Token(Token = "0x6002857")]
			[Address(RVA = "0xB473A8", Offset = "0xB473A8", VA = "0xB473A8")]
			public FlowCanvas_Nodes_Cache_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000899")]
		private class FlowCanvas_Nodes_Cache_UnityEngine_Vector3 : Cache<Vector3>
		{
			[Token(Token = "0x6002858")]
			[Address(RVA = "0xB473F8", Offset = "0xB473F8", VA = "0xB473F8")]
			public FlowCanvas_Nodes_Cache_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x200089A")]
		private class FlowCanvas_Nodes_Cache_UnityEngine_Vector4 : Cache<Vector4>
		{
			[Token(Token = "0x6002859")]
			[Address(RVA = "0xB47448", Offset = "0xB47448", VA = "0xB47448")]
			public FlowCanvas_Nodes_Cache_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x200089B")]
		private class FlowCanvas_Nodes_Cache_UnityEngine_Quaternion : Cache<Quaternion>
		{
			[Token(Token = "0x600285A")]
			[Address(RVA = "0xB471C8", Offset = "0xB471C8", VA = "0xB471C8")]
			public FlowCanvas_Nodes_Cache_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x200089C")]
		private class FlowCanvas_Nodes_Cache_UnityEngine_Keyframe : Cache<Keyframe>
		{
			[Token(Token = "0x600285B")]
			[Address(RVA = "0xB47128", Offset = "0xB47128", VA = "0xB47128")]
			public FlowCanvas_Nodes_Cache_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x200089D")]
		private class FlowCanvas_Nodes_Cache_UnityEngine_Bounds : Cache<Bounds>
		{
			[Token(Token = "0x600285C")]
			[Address(RVA = "0xB46F48", Offset = "0xB46F48", VA = "0xB46F48")]
			public FlowCanvas_Nodes_Cache_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x200089E")]
		private class FlowCanvas_Nodes_Cache_UnityEngine_Color : Cache<Color>
		{
			[Token(Token = "0x600285D")]
			[Address(RVA = "0xB47038", Offset = "0xB47038", VA = "0xB47038")]
			public FlowCanvas_Nodes_Cache_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x200089F")]
		private class FlowCanvas_Nodes_Cache_UnityEngine_Rect : Cache<Rect>
		{
			[Token(Token = "0x600285E")]
			[Address(RVA = "0xB47308", Offset = "0xB47308", VA = "0xB47308")]
			public FlowCanvas_Nodes_Cache_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x20008A0")]
		private class FlowCanvas_Nodes_Cache_UnityEngine_ContactPoint : Cache<ContactPoint>
		{
			[Token(Token = "0x600285F")]
			[Address(RVA = "0xB47088", Offset = "0xB47088", VA = "0xB47088")]
			public FlowCanvas_Nodes_Cache_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x20008A1")]
		private class FlowCanvas_Nodes_Cache_UnityEngine_ContactPoint2D : Cache<ContactPoint2D>
		{
			[Token(Token = "0x6002860")]
			[Address(RVA = "0xB470D8", Offset = "0xB470D8", VA = "0xB470D8")]
			public FlowCanvas_Nodes_Cache_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x20008A2")]
		private class FlowCanvas_Nodes_Cache_UnityEngine_Collision : Cache<Collision>
		{
			[Token(Token = "0x6002861")]
			[Address(RVA = "0xB46F98", Offset = "0xB46F98", VA = "0xB46F98")]
			public FlowCanvas_Nodes_Cache_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x20008A3")]
		private class FlowCanvas_Nodes_Cache_UnityEngine_Collision2D : Cache<Collision2D>
		{
			[Token(Token = "0x6002862")]
			[Address(RVA = "0xB46FE8", Offset = "0xB46FE8", VA = "0xB46FE8")]
			public FlowCanvas_Nodes_Cache_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x20008A4")]
		private class FlowCanvas_Nodes_Cache_UnityEngine_RaycastHit : Cache<RaycastHit>
		{
			[Token(Token = "0x6002863")]
			[Address(RVA = "0xB47268", Offset = "0xB47268", VA = "0xB47268")]
			public FlowCanvas_Nodes_Cache_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x20008A5")]
		private class FlowCanvas_Nodes_Cache_UnityEngine_RaycastHit2D : Cache<RaycastHit2D>
		{
			[Token(Token = "0x6002864")]
			[Address(RVA = "0xB472B8", Offset = "0xB472B8", VA = "0xB472B8")]
			public FlowCanvas_Nodes_Cache_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x20008A6")]
		private class FlowCanvas_Nodes_Cache_UnityEngine_Ray : Cache<Ray>
		{
			[Token(Token = "0x6002865")]
			[Address(RVA = "0xB47218", Offset = "0xB47218", VA = "0xB47218")]
			public FlowCanvas_Nodes_Cache_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x20008A7")]
		private class FlowCanvas_Nodes_Cache_UnityEngine_Space : Cache<Space>
		{
			[Token(Token = "0x6002866")]
			[Address(RVA = "0xB47358", Offset = "0xB47358", VA = "0xB47358")]
			public FlowCanvas_Nodes_Cache_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x20008A8")]
		private class FlowCanvas_Nodes_Cache_ftg_DioramaFiveData_DioramaFiveKeys : Cache<DioramaFiveData.DioramaFiveKeys>
		{
			[Token(Token = "0x6002867")]
			[Address(RVA = "0xB47498", Offset = "0xB47498", VA = "0xB47498")]
			public FlowCanvas_Nodes_Cache_ftg_DioramaFiveData_DioramaFiveKeys()
			{
			}
		}

		[Token(Token = "0x20008A9")]
		private class FlowCanvas_Nodes_Cache_ftg_DioramaFourData_DioramaFourKeys : Cache<DioramaFourData.DioramaFourKeys>
		{
			[Token(Token = "0x6002868")]
			[Address(RVA = "0xB474E8", Offset = "0xB474E8", VA = "0xB474E8")]
			public FlowCanvas_Nodes_Cache_ftg_DioramaFourData_DioramaFourKeys()
			{
			}
		}

		[Token(Token = "0x20008AA")]
		private class FlowCanvas_Nodes_Cache_ftg_DioramaOneData_DioramaOneKeys : Cache<DioramaOneData.DioramaOneKeys>
		{
			[Token(Token = "0x6002869")]
			[Address(RVA = "0xB47538", Offset = "0xB47538", VA = "0xB47538")]
			public FlowCanvas_Nodes_Cache_ftg_DioramaOneData_DioramaOneKeys()
			{
			}
		}

		[Token(Token = "0x20008AB")]
		private class FlowCanvas_Nodes_Cache_ftg_DioramaThreeData_DioramaThreeKeys : Cache<DioramaThreeData.DioramaThreeKeys>
		{
			[Token(Token = "0x600286A")]
			[Address(RVA = "0xB47588", Offset = "0xB47588", VA = "0xB47588")]
			public FlowCanvas_Nodes_Cache_ftg_DioramaThreeData_DioramaThreeKeys()
			{
			}
		}

		[Token(Token = "0x20008AC")]
		private class FlowCanvas_Nodes_Cache_ftg_DioramaTwoData_DioramaTwoKeys : Cache<DioramaTwoData.DioramaTwoKeys>
		{
			[Token(Token = "0x600286B")]
			[Address(RVA = "0xB475D8", Offset = "0xB475D8", VA = "0xB475D8")]
			public FlowCanvas_Nodes_Cache_ftg_DioramaTwoData_DioramaTwoKeys()
			{
			}
		}

		[Token(Token = "0x20008AD")]
		private class FlowCanvas_Nodes_Cache_ftg_SaveManager_DioramaWorlds : Cache<SaveManager.DioramaWorlds>
		{
			[Token(Token = "0x600286C")]
			[Address(RVA = "0xB476C8", Offset = "0xB476C8", VA = "0xB476C8")]
			public FlowCanvas_Nodes_Cache_ftg_SaveManager_DioramaWorlds()
			{
			}
		}

		[Token(Token = "0x20008AE")]
		private class FlowCanvas_Nodes_Cache_ftg_HubRoomData_HubRoomKeys : Cache<HubRoomData.HubRoomKeys>
		{
			[Token(Token = "0x600286D")]
			[Address(RVA = "0xB47628", Offset = "0xB47628", VA = "0xB47628")]
			public FlowCanvas_Nodes_Cache_ftg_HubRoomData_HubRoomKeys()
			{
			}
		}

		[Token(Token = "0x20008AF")]
		private class FlowCanvas_Nodes_Cache_ftg_PersonaSettings_PersonaKeys : Cache<PersonaSettings.PersonaKeys>
		{
			[Token(Token = "0x600286E")]
			[Address(RVA = "0xB47678", Offset = "0xB47678", VA = "0xB47678")]
			public FlowCanvas_Nodes_Cache_ftg_PersonaSettings_PersonaKeys()
			{
			}
		}

		[Token(Token = "0x20008B0")]
		private class FlowCanvas_Nodes_Cache_UnityEngine_LayerMask : Cache<LayerMask>
		{
			[Token(Token = "0x600286F")]
			[Address(RVA = "0xB47178", Offset = "0xB47178", VA = "0xB47178")]
			public FlowCanvas_Nodes_Cache_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x20008B1")]
		private class FlowCanvas_Nodes_Cast_System_Boolean : Cast<bool>
		{
			[Token(Token = "0x6002870")]
			[Address(RVA = "0xB47FD8", Offset = "0xB47FD8", VA = "0xB47FD8")]
			public FlowCanvas_Nodes_Cast_System_Boolean()
			{
			}
		}

		[Token(Token = "0x20008B2")]
		private class FlowCanvas_Nodes_Cast_System_Single : Cast<float>
		{
			[Token(Token = "0x6002871")]
			[Address(RVA = "0xB48078", Offset = "0xB48078", VA = "0xB48078")]
			public FlowCanvas_Nodes_Cast_System_Single()
			{
			}
		}

		[Token(Token = "0x20008B3")]
		private class FlowCanvas_Nodes_Cast_System_Int32 : Cast<int>
		{
			[Token(Token = "0x6002872")]
			[Address(RVA = "0xB48028", Offset = "0xB48028", VA = "0xB48028")]
			public FlowCanvas_Nodes_Cast_System_Int32()
			{
			}
		}

		[Token(Token = "0x20008B4")]
		private class FlowCanvas_Nodes_Cast_UnityEngine_Vector2 : Cast<Vector2>
		{
			[Token(Token = "0x6002873")]
			[Address(RVA = "0xB48528", Offset = "0xB48528", VA = "0xB48528")]
			public FlowCanvas_Nodes_Cast_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x20008B5")]
		private class FlowCanvas_Nodes_Cast_UnityEngine_Vector3 : Cast<Vector3>
		{
			[Token(Token = "0x6002874")]
			[Address(RVA = "0xB48578", Offset = "0xB48578", VA = "0xB48578")]
			public FlowCanvas_Nodes_Cast_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x20008B6")]
		private class FlowCanvas_Nodes_Cast_UnityEngine_Vector4 : Cast<Vector4>
		{
			[Token(Token = "0x6002875")]
			[Address(RVA = "0xB485C8", Offset = "0xB485C8", VA = "0xB485C8")]
			public FlowCanvas_Nodes_Cast_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x20008B7")]
		private class FlowCanvas_Nodes_Cast_UnityEngine_Quaternion : Cast<Quaternion>
		{
			[Token(Token = "0x6002876")]
			[Address(RVA = "0xB48348", Offset = "0xB48348", VA = "0xB48348")]
			public FlowCanvas_Nodes_Cast_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x20008B8")]
		private class FlowCanvas_Nodes_Cast_UnityEngine_Keyframe : Cast<Keyframe>
		{
			[Token(Token = "0x6002877")]
			[Address(RVA = "0xB482A8", Offset = "0xB482A8", VA = "0xB482A8")]
			public FlowCanvas_Nodes_Cast_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x20008B9")]
		private class FlowCanvas_Nodes_Cast_UnityEngine_Bounds : Cast<Bounds>
		{
			[Token(Token = "0x6002878")]
			[Address(RVA = "0xB480C8", Offset = "0xB480C8", VA = "0xB480C8")]
			public FlowCanvas_Nodes_Cast_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x20008BA")]
		private class FlowCanvas_Nodes_Cast_UnityEngine_Color : Cast<Color>
		{
			[Token(Token = "0x6002879")]
			[Address(RVA = "0xB481B8", Offset = "0xB481B8", VA = "0xB481B8")]
			public FlowCanvas_Nodes_Cast_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x20008BB")]
		private class FlowCanvas_Nodes_Cast_UnityEngine_Rect : Cast<Rect>
		{
			[Token(Token = "0x600287A")]
			[Address(RVA = "0xB48488", Offset = "0xB48488", VA = "0xB48488")]
			public FlowCanvas_Nodes_Cast_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x20008BC")]
		private class FlowCanvas_Nodes_Cast_UnityEngine_ContactPoint : Cast<ContactPoint>
		{
			[Token(Token = "0x600287B")]
			[Address(RVA = "0xB48208", Offset = "0xB48208", VA = "0xB48208")]
			public FlowCanvas_Nodes_Cast_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x20008BD")]
		private class FlowCanvas_Nodes_Cast_UnityEngine_ContactPoint2D : Cast<ContactPoint2D>
		{
			[Token(Token = "0x600287C")]
			[Address(RVA = "0xB48258", Offset = "0xB48258", VA = "0xB48258")]
			public FlowCanvas_Nodes_Cast_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x20008BE")]
		private class FlowCanvas_Nodes_Cast_UnityEngine_Collision : Cast<Collision>
		{
			[Token(Token = "0x600287D")]
			[Address(RVA = "0xB48118", Offset = "0xB48118", VA = "0xB48118")]
			public FlowCanvas_Nodes_Cast_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x20008BF")]
		private class FlowCanvas_Nodes_Cast_UnityEngine_Collision2D : Cast<Collision2D>
		{
			[Token(Token = "0x600287E")]
			[Address(RVA = "0xB48168", Offset = "0xB48168", VA = "0xB48168")]
			public FlowCanvas_Nodes_Cast_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x20008C0")]
		private class FlowCanvas_Nodes_Cast_UnityEngine_RaycastHit : Cast<RaycastHit>
		{
			[Token(Token = "0x600287F")]
			[Address(RVA = "0xB483E8", Offset = "0xB483E8", VA = "0xB483E8")]
			public FlowCanvas_Nodes_Cast_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x20008C1")]
		private class FlowCanvas_Nodes_Cast_UnityEngine_RaycastHit2D : Cast<RaycastHit2D>
		{
			[Token(Token = "0x6002880")]
			[Address(RVA = "0xB48438", Offset = "0xB48438", VA = "0xB48438")]
			public FlowCanvas_Nodes_Cast_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x20008C2")]
		private class FlowCanvas_Nodes_Cast_UnityEngine_Ray : Cast<Ray>
		{
			[Token(Token = "0x6002881")]
			[Address(RVA = "0xB48398", Offset = "0xB48398", VA = "0xB48398")]
			public FlowCanvas_Nodes_Cast_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x20008C3")]
		private class FlowCanvas_Nodes_Cast_UnityEngine_Space : Cast<Space>
		{
			[Token(Token = "0x6002882")]
			[Address(RVA = "0xB484D8", Offset = "0xB484D8", VA = "0xB484D8")]
			public FlowCanvas_Nodes_Cast_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x20008C4")]
		private class FlowCanvas_Nodes_Cast_ftg_DioramaFiveData_DioramaFiveKeys : Cast<DioramaFiveData.DioramaFiveKeys>
		{
			[Token(Token = "0x6002883")]
			[Address(RVA = "0xB48618", Offset = "0xB48618", VA = "0xB48618")]
			public FlowCanvas_Nodes_Cast_ftg_DioramaFiveData_DioramaFiveKeys()
			{
			}
		}

		[Token(Token = "0x20008C5")]
		private class FlowCanvas_Nodes_Cast_ftg_DioramaFourData_DioramaFourKeys : Cast<DioramaFourData.DioramaFourKeys>
		{
			[Token(Token = "0x6002884")]
			[Address(RVA = "0xB48668", Offset = "0xB48668", VA = "0xB48668")]
			public FlowCanvas_Nodes_Cast_ftg_DioramaFourData_DioramaFourKeys()
			{
			}
		}

		[Token(Token = "0x20008C6")]
		private class FlowCanvas_Nodes_Cast_ftg_DioramaOneData_DioramaOneKeys : Cast<DioramaOneData.DioramaOneKeys>
		{
			[Token(Token = "0x6002885")]
			[Address(RVA = "0xB486B8", Offset = "0xB486B8", VA = "0xB486B8")]
			public FlowCanvas_Nodes_Cast_ftg_DioramaOneData_DioramaOneKeys()
			{
			}
		}

		[Token(Token = "0x20008C7")]
		private class FlowCanvas_Nodes_Cast_ftg_DioramaThreeData_DioramaThreeKeys : Cast<DioramaThreeData.DioramaThreeKeys>
		{
			[Token(Token = "0x6002886")]
			[Address(RVA = "0xB48708", Offset = "0xB48708", VA = "0xB48708")]
			public FlowCanvas_Nodes_Cast_ftg_DioramaThreeData_DioramaThreeKeys()
			{
			}
		}

		[Token(Token = "0x20008C8")]
		private class FlowCanvas_Nodes_Cast_ftg_DioramaTwoData_DioramaTwoKeys : Cast<DioramaTwoData.DioramaTwoKeys>
		{
			[Token(Token = "0x6002887")]
			[Address(RVA = "0xB48758", Offset = "0xB48758", VA = "0xB48758")]
			public FlowCanvas_Nodes_Cast_ftg_DioramaTwoData_DioramaTwoKeys()
			{
			}
		}

		[Token(Token = "0x20008C9")]
		private class FlowCanvas_Nodes_Cast_ftg_SaveManager_DioramaWorlds : Cast<SaveManager.DioramaWorlds>
		{
			[Token(Token = "0x6002888")]
			[Address(RVA = "0xB48848", Offset = "0xB48848", VA = "0xB48848")]
			public FlowCanvas_Nodes_Cast_ftg_SaveManager_DioramaWorlds()
			{
			}
		}

		[Token(Token = "0x20008CA")]
		private class FlowCanvas_Nodes_Cast_ftg_HubRoomData_HubRoomKeys : Cast<HubRoomData.HubRoomKeys>
		{
			[Token(Token = "0x6002889")]
			[Address(RVA = "0xB487A8", Offset = "0xB487A8", VA = "0xB487A8")]
			public FlowCanvas_Nodes_Cast_ftg_HubRoomData_HubRoomKeys()
			{
			}
		}

		[Token(Token = "0x20008CB")]
		private class FlowCanvas_Nodes_Cast_ftg_PersonaSettings_PersonaKeys : Cast<PersonaSettings.PersonaKeys>
		{
			[Token(Token = "0x600288A")]
			[Address(RVA = "0xB487F8", Offset = "0xB487F8", VA = "0xB487F8")]
			public FlowCanvas_Nodes_Cast_ftg_PersonaSettings_PersonaKeys()
			{
			}
		}

		[Token(Token = "0x20008CC")]
		private class FlowCanvas_Nodes_Cast_UnityEngine_LayerMask : Cast<LayerMask>
		{
			[Token(Token = "0x600288B")]
			[Address(RVA = "0xB482F8", Offset = "0xB482F8", VA = "0xB482F8")]
			public FlowCanvas_Nodes_Cast_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x20008CD")]
		private class FlowCanvas_Nodes_CastTo_System_Boolean : CastTo<bool>
		{
			[Token(Token = "0x600288C")]
			[Address(RVA = "0xB47718", Offset = "0xB47718", VA = "0xB47718")]
			public FlowCanvas_Nodes_CastTo_System_Boolean()
			{
			}
		}

		[Token(Token = "0x20008CE")]
		private class FlowCanvas_Nodes_CastTo_System_Single : CastTo<float>
		{
			[Token(Token = "0x600288D")]
			[Address(RVA = "0xB477B8", Offset = "0xB477B8", VA = "0xB477B8")]
			public FlowCanvas_Nodes_CastTo_System_Single()
			{
			}
		}

		[Token(Token = "0x20008CF")]
		private class FlowCanvas_Nodes_CastTo_System_Int32 : CastTo<int>
		{
			[Token(Token = "0x600288E")]
			[Address(RVA = "0xB47768", Offset = "0xB47768", VA = "0xB47768")]
			public FlowCanvas_Nodes_CastTo_System_Int32()
			{
			}
		}

		[Token(Token = "0x20008D0")]
		private class FlowCanvas_Nodes_CastTo_UnityEngine_Vector2 : CastTo<Vector2>
		{
			[Token(Token = "0x600288F")]
			[Address(RVA = "0xB47C68", Offset = "0xB47C68", VA = "0xB47C68")]
			public FlowCanvas_Nodes_CastTo_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x20008D1")]
		private class FlowCanvas_Nodes_CastTo_UnityEngine_Vector3 : CastTo<Vector3>
		{
			[Token(Token = "0x6002890")]
			[Address(RVA = "0xB47CB8", Offset = "0xB47CB8", VA = "0xB47CB8")]
			public FlowCanvas_Nodes_CastTo_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x20008D2")]
		private class FlowCanvas_Nodes_CastTo_UnityEngine_Vector4 : CastTo<Vector4>
		{
			[Token(Token = "0x6002891")]
			[Address(RVA = "0xB47D08", Offset = "0xB47D08", VA = "0xB47D08")]
			public FlowCanvas_Nodes_CastTo_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x20008D3")]
		private class FlowCanvas_Nodes_CastTo_UnityEngine_Quaternion : CastTo<Quaternion>
		{
			[Token(Token = "0x6002892")]
			[Address(RVA = "0xB47A88", Offset = "0xB47A88", VA = "0xB47A88")]
			public FlowCanvas_Nodes_CastTo_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x20008D4")]
		private class FlowCanvas_Nodes_CastTo_UnityEngine_Keyframe : CastTo<Keyframe>
		{
			[Token(Token = "0x6002893")]
			[Address(RVA = "0xB479E8", Offset = "0xB479E8", VA = "0xB479E8")]
			public FlowCanvas_Nodes_CastTo_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x20008D5")]
		private class FlowCanvas_Nodes_CastTo_UnityEngine_Bounds : CastTo<Bounds>
		{
			[Token(Token = "0x6002894")]
			[Address(RVA = "0xB47808", Offset = "0xB47808", VA = "0xB47808")]
			public FlowCanvas_Nodes_CastTo_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x20008D6")]
		private class FlowCanvas_Nodes_CastTo_UnityEngine_Color : CastTo<Color>
		{
			[Token(Token = "0x6002895")]
			[Address(RVA = "0xB478F8", Offset = "0xB478F8", VA = "0xB478F8")]
			public FlowCanvas_Nodes_CastTo_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x20008D7")]
		private class FlowCanvas_Nodes_CastTo_UnityEngine_Rect : CastTo<Rect>
		{
			[Token(Token = "0x6002896")]
			[Address(RVA = "0xB47BC8", Offset = "0xB47BC8", VA = "0xB47BC8")]
			public FlowCanvas_Nodes_CastTo_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x20008D8")]
		private class FlowCanvas_Nodes_CastTo_UnityEngine_ContactPoint : CastTo<ContactPoint>
		{
			[Token(Token = "0x6002897")]
			[Address(RVA = "0xB47948", Offset = "0xB47948", VA = "0xB47948")]
			public FlowCanvas_Nodes_CastTo_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x20008D9")]
		private class FlowCanvas_Nodes_CastTo_UnityEngine_ContactPoint2D : CastTo<ContactPoint2D>
		{
			[Token(Token = "0x6002898")]
			[Address(RVA = "0xB47998", Offset = "0xB47998", VA = "0xB47998")]
			public FlowCanvas_Nodes_CastTo_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x20008DA")]
		private class FlowCanvas_Nodes_CastTo_UnityEngine_Collision : CastTo<Collision>
		{
			[Token(Token = "0x6002899")]
			[Address(RVA = "0xB47858", Offset = "0xB47858", VA = "0xB47858")]
			public FlowCanvas_Nodes_CastTo_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x20008DB")]
		private class FlowCanvas_Nodes_CastTo_UnityEngine_Collision2D : CastTo<Collision2D>
		{
			[Token(Token = "0x600289A")]
			[Address(RVA = "0xB478A8", Offset = "0xB478A8", VA = "0xB478A8")]
			public FlowCanvas_Nodes_CastTo_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x20008DC")]
		private class FlowCanvas_Nodes_CastTo_UnityEngine_RaycastHit : CastTo<RaycastHit>
		{
			[Token(Token = "0x600289B")]
			[Address(RVA = "0xB47B28", Offset = "0xB47B28", VA = "0xB47B28")]
			public FlowCanvas_Nodes_CastTo_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x20008DD")]
		private class FlowCanvas_Nodes_CastTo_UnityEngine_RaycastHit2D : CastTo<RaycastHit2D>
		{
			[Token(Token = "0x600289C")]
			[Address(RVA = "0xB47B78", Offset = "0xB47B78", VA = "0xB47B78")]
			public FlowCanvas_Nodes_CastTo_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x20008DE")]
		private class FlowCanvas_Nodes_CastTo_UnityEngine_Ray : CastTo<Ray>
		{
			[Token(Token = "0x600289D")]
			[Address(RVA = "0xB47AD8", Offset = "0xB47AD8", VA = "0xB47AD8")]
			public FlowCanvas_Nodes_CastTo_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x20008DF")]
		private class FlowCanvas_Nodes_CastTo_UnityEngine_Space : CastTo<Space>
		{
			[Token(Token = "0x600289E")]
			[Address(RVA = "0xB47C18", Offset = "0xB47C18", VA = "0xB47C18")]
			public FlowCanvas_Nodes_CastTo_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x20008E0")]
		private class FlowCanvas_Nodes_CastTo_ftg_DioramaFiveData_DioramaFiveKeys : CastTo<DioramaFiveData.DioramaFiveKeys>
		{
			[Token(Token = "0x600289F")]
			[Address(RVA = "0xB47D58", Offset = "0xB47D58", VA = "0xB47D58")]
			public FlowCanvas_Nodes_CastTo_ftg_DioramaFiveData_DioramaFiveKeys()
			{
			}
		}

		[Token(Token = "0x20008E1")]
		private class FlowCanvas_Nodes_CastTo_ftg_DioramaFourData_DioramaFourKeys : CastTo<DioramaFourData.DioramaFourKeys>
		{
			[Token(Token = "0x60028A0")]
			[Address(RVA = "0xB47DA8", Offset = "0xB47DA8", VA = "0xB47DA8")]
			public FlowCanvas_Nodes_CastTo_ftg_DioramaFourData_DioramaFourKeys()
			{
			}
		}

		[Token(Token = "0x20008E2")]
		private class FlowCanvas_Nodes_CastTo_ftg_DioramaOneData_DioramaOneKeys : CastTo<DioramaOneData.DioramaOneKeys>
		{
			[Token(Token = "0x60028A1")]
			[Address(RVA = "0xB47DF8", Offset = "0xB47DF8", VA = "0xB47DF8")]
			public FlowCanvas_Nodes_CastTo_ftg_DioramaOneData_DioramaOneKeys()
			{
			}
		}

		[Token(Token = "0x20008E3")]
		private class FlowCanvas_Nodes_CastTo_ftg_DioramaThreeData_DioramaThreeKeys : CastTo<DioramaThreeData.DioramaThreeKeys>
		{
			[Token(Token = "0x60028A2")]
			[Address(RVA = "0xB47E48", Offset = "0xB47E48", VA = "0xB47E48")]
			public FlowCanvas_Nodes_CastTo_ftg_DioramaThreeData_DioramaThreeKeys()
			{
			}
		}

		[Token(Token = "0x20008E4")]
		private class FlowCanvas_Nodes_CastTo_ftg_DioramaTwoData_DioramaTwoKeys : CastTo<DioramaTwoData.DioramaTwoKeys>
		{
			[Token(Token = "0x60028A3")]
			[Address(RVA = "0xB47E98", Offset = "0xB47E98", VA = "0xB47E98")]
			public FlowCanvas_Nodes_CastTo_ftg_DioramaTwoData_DioramaTwoKeys()
			{
			}
		}

		[Token(Token = "0x20008E5")]
		private class FlowCanvas_Nodes_CastTo_ftg_SaveManager_DioramaWorlds : CastTo<SaveManager.DioramaWorlds>
		{
			[Token(Token = "0x60028A4")]
			[Address(RVA = "0xB47F88", Offset = "0xB47F88", VA = "0xB47F88")]
			public FlowCanvas_Nodes_CastTo_ftg_SaveManager_DioramaWorlds()
			{
			}
		}

		[Token(Token = "0x20008E6")]
		private class FlowCanvas_Nodes_CastTo_ftg_HubRoomData_HubRoomKeys : CastTo<HubRoomData.HubRoomKeys>
		{
			[Token(Token = "0x60028A5")]
			[Address(RVA = "0xB47EE8", Offset = "0xB47EE8", VA = "0xB47EE8")]
			public FlowCanvas_Nodes_CastTo_ftg_HubRoomData_HubRoomKeys()
			{
			}
		}

		[Token(Token = "0x20008E7")]
		private class FlowCanvas_Nodes_CastTo_ftg_PersonaSettings_PersonaKeys : CastTo<PersonaSettings.PersonaKeys>
		{
			[Token(Token = "0x60028A6")]
			[Address(RVA = "0xB47F38", Offset = "0xB47F38", VA = "0xB47F38")]
			public FlowCanvas_Nodes_CastTo_ftg_PersonaSettings_PersonaKeys()
			{
			}
		}

		[Token(Token = "0x20008E8")]
		private class FlowCanvas_Nodes_CastTo_UnityEngine_LayerMask : CastTo<LayerMask>
		{
			[Token(Token = "0x60028A7")]
			[Address(RVA = "0xB47A38", Offset = "0xB47A38", VA = "0xB47A38")]
			public FlowCanvas_Nodes_CastTo_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x20008E9")]
		private class FlowCanvas_Nodes_CodeEvent_System_Boolean : CodeEvent<bool>
		{
			[Token(Token = "0x60028A8")]
			[Address(RVA = "0xB48898", Offset = "0xB48898", VA = "0xB48898")]
			public FlowCanvas_Nodes_CodeEvent_System_Boolean()
			{
			}
		}

		[Token(Token = "0x20008EA")]
		private class FlowCanvas_Nodes_CodeEvent_System_Single : CodeEvent<float>
		{
			[Token(Token = "0x60028A9")]
			[Address(RVA = "0xB48938", Offset = "0xB48938", VA = "0xB48938")]
			public FlowCanvas_Nodes_CodeEvent_System_Single()
			{
			}
		}

		[Token(Token = "0x20008EB")]
		private class FlowCanvas_Nodes_CodeEvent_System_Int32 : CodeEvent<int>
		{
			[Token(Token = "0x60028AA")]
			[Address(RVA = "0xB488E8", Offset = "0xB488E8", VA = "0xB488E8")]
			public FlowCanvas_Nodes_CodeEvent_System_Int32()
			{
			}
		}

		[Token(Token = "0x20008EC")]
		private class FlowCanvas_Nodes_CodeEvent_UnityEngine_Vector2 : CodeEvent<Vector2>
		{
			[Token(Token = "0x60028AB")]
			[Address(RVA = "0xB48DE8", Offset = "0xB48DE8", VA = "0xB48DE8")]
			public FlowCanvas_Nodes_CodeEvent_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x20008ED")]
		private class FlowCanvas_Nodes_CodeEvent_UnityEngine_Vector3 : CodeEvent<Vector3>
		{
			[Token(Token = "0x60028AC")]
			[Address(RVA = "0xB48E38", Offset = "0xB48E38", VA = "0xB48E38")]
			public FlowCanvas_Nodes_CodeEvent_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x20008EE")]
		private class FlowCanvas_Nodes_CodeEvent_UnityEngine_Vector4 : CodeEvent<Vector4>
		{
			[Token(Token = "0x60028AD")]
			[Address(RVA = "0xB48E88", Offset = "0xB48E88", VA = "0xB48E88")]
			public FlowCanvas_Nodes_CodeEvent_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x20008EF")]
		private class FlowCanvas_Nodes_CodeEvent_UnityEngine_Quaternion : CodeEvent<Quaternion>
		{
			[Token(Token = "0x60028AE")]
			[Address(RVA = "0xB48C08", Offset = "0xB48C08", VA = "0xB48C08")]
			public FlowCanvas_Nodes_CodeEvent_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x20008F0")]
		private class FlowCanvas_Nodes_CodeEvent_UnityEngine_Keyframe : CodeEvent<Keyframe>
		{
			[Token(Token = "0x60028AF")]
			[Address(RVA = "0xB48B68", Offset = "0xB48B68", VA = "0xB48B68")]
			public FlowCanvas_Nodes_CodeEvent_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x20008F1")]
		private class FlowCanvas_Nodes_CodeEvent_UnityEngine_Bounds : CodeEvent<Bounds>
		{
			[Token(Token = "0x60028B0")]
			[Address(RVA = "0xB48988", Offset = "0xB48988", VA = "0xB48988")]
			public FlowCanvas_Nodes_CodeEvent_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x20008F2")]
		private class FlowCanvas_Nodes_CodeEvent_UnityEngine_Color : CodeEvent<Color>
		{
			[Token(Token = "0x60028B1")]
			[Address(RVA = "0xB48A78", Offset = "0xB48A78", VA = "0xB48A78")]
			public FlowCanvas_Nodes_CodeEvent_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x20008F3")]
		private class FlowCanvas_Nodes_CodeEvent_UnityEngine_Rect : CodeEvent<Rect>
		{
			[Token(Token = "0x60028B2")]
			[Address(RVA = "0xB48D48", Offset = "0xB48D48", VA = "0xB48D48")]
			public FlowCanvas_Nodes_CodeEvent_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x20008F4")]
		private class FlowCanvas_Nodes_CodeEvent_UnityEngine_ContactPoint : CodeEvent<ContactPoint>
		{
			[Token(Token = "0x60028B3")]
			[Address(RVA = "0xB48AC8", Offset = "0xB48AC8", VA = "0xB48AC8")]
			public FlowCanvas_Nodes_CodeEvent_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x20008F5")]
		private class FlowCanvas_Nodes_CodeEvent_UnityEngine_ContactPoint2D : CodeEvent<ContactPoint2D>
		{
			[Token(Token = "0x60028B4")]
			[Address(RVA = "0xB48B18", Offset = "0xB48B18", VA = "0xB48B18")]
			public FlowCanvas_Nodes_CodeEvent_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x20008F6")]
		private class FlowCanvas_Nodes_CodeEvent_UnityEngine_Collision : CodeEvent<Collision>
		{
			[Token(Token = "0x60028B5")]
			[Address(RVA = "0xB489D8", Offset = "0xB489D8", VA = "0xB489D8")]
			public FlowCanvas_Nodes_CodeEvent_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x20008F7")]
		private class FlowCanvas_Nodes_CodeEvent_UnityEngine_Collision2D : CodeEvent<Collision2D>
		{
			[Token(Token = "0x60028B6")]
			[Address(RVA = "0xB48A28", Offset = "0xB48A28", VA = "0xB48A28")]
			public FlowCanvas_Nodes_CodeEvent_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x20008F8")]
		private class FlowCanvas_Nodes_CodeEvent_UnityEngine_RaycastHit : CodeEvent<RaycastHit>
		{
			[Token(Token = "0x60028B7")]
			[Address(RVA = "0xB48CA8", Offset = "0xB48CA8", VA = "0xB48CA8")]
			public FlowCanvas_Nodes_CodeEvent_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x20008F9")]
		private class FlowCanvas_Nodes_CodeEvent_UnityEngine_RaycastHit2D : CodeEvent<RaycastHit2D>
		{
			[Token(Token = "0x60028B8")]
			[Address(RVA = "0xB48CF8", Offset = "0xB48CF8", VA = "0xB48CF8")]
			public FlowCanvas_Nodes_CodeEvent_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x20008FA")]
		private class FlowCanvas_Nodes_CodeEvent_UnityEngine_Ray : CodeEvent<Ray>
		{
			[Token(Token = "0x60028B9")]
			[Address(RVA = "0xB48C58", Offset = "0xB48C58", VA = "0xB48C58")]
			public FlowCanvas_Nodes_CodeEvent_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x20008FB")]
		private class FlowCanvas_Nodes_CodeEvent_UnityEngine_Space : CodeEvent<Space>
		{
			[Token(Token = "0x60028BA")]
			[Address(RVA = "0xB48D98", Offset = "0xB48D98", VA = "0xB48D98")]
			public FlowCanvas_Nodes_CodeEvent_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x20008FC")]
		private class FlowCanvas_Nodes_CodeEvent_ftg_DioramaFiveData_DioramaFiveKeys : CodeEvent<DioramaFiveData.DioramaFiveKeys>
		{
			[Token(Token = "0x60028BB")]
			[Address(RVA = "0xB48ED8", Offset = "0xB48ED8", VA = "0xB48ED8")]
			public FlowCanvas_Nodes_CodeEvent_ftg_DioramaFiveData_DioramaFiveKeys()
			{
			}
		}

		[Token(Token = "0x20008FD")]
		private class FlowCanvas_Nodes_CodeEvent_ftg_DioramaFourData_DioramaFourKeys : CodeEvent<DioramaFourData.DioramaFourKeys>
		{
			[Token(Token = "0x60028BC")]
			[Address(RVA = "0xB48F28", Offset = "0xB48F28", VA = "0xB48F28")]
			public FlowCanvas_Nodes_CodeEvent_ftg_DioramaFourData_DioramaFourKeys()
			{
			}
		}

		[Token(Token = "0x20008FE")]
		private class FlowCanvas_Nodes_CodeEvent_ftg_DioramaOneData_DioramaOneKeys : CodeEvent<DioramaOneData.DioramaOneKeys>
		{
			[Token(Token = "0x60028BD")]
			[Address(RVA = "0xB48F78", Offset = "0xB48F78", VA = "0xB48F78")]
			public FlowCanvas_Nodes_CodeEvent_ftg_DioramaOneData_DioramaOneKeys()
			{
			}
		}

		[Token(Token = "0x20008FF")]
		private class FlowCanvas_Nodes_CodeEvent_ftg_DioramaThreeData_DioramaThreeKeys : CodeEvent<DioramaThreeData.DioramaThreeKeys>
		{
			[Token(Token = "0x60028BE")]
			[Address(RVA = "0xB48FC8", Offset = "0xB48FC8", VA = "0xB48FC8")]
			public FlowCanvas_Nodes_CodeEvent_ftg_DioramaThreeData_DioramaThreeKeys()
			{
			}
		}

		[Token(Token = "0x2000900")]
		private class FlowCanvas_Nodes_CodeEvent_ftg_DioramaTwoData_DioramaTwoKeys : CodeEvent<DioramaTwoData.DioramaTwoKeys>
		{
			[Token(Token = "0x60028BF")]
			[Address(RVA = "0xB49018", Offset = "0xB49018", VA = "0xB49018")]
			public FlowCanvas_Nodes_CodeEvent_ftg_DioramaTwoData_DioramaTwoKeys()
			{
			}
		}

		[Token(Token = "0x2000901")]
		private class FlowCanvas_Nodes_CodeEvent_ftg_SaveManager_DioramaWorlds : CodeEvent<SaveManager.DioramaWorlds>
		{
			[Token(Token = "0x60028C0")]
			[Address(RVA = "0xB49108", Offset = "0xB49108", VA = "0xB49108")]
			public FlowCanvas_Nodes_CodeEvent_ftg_SaveManager_DioramaWorlds()
			{
			}
		}

		[Token(Token = "0x2000902")]
		private class FlowCanvas_Nodes_CodeEvent_ftg_HubRoomData_HubRoomKeys : CodeEvent<HubRoomData.HubRoomKeys>
		{
			[Token(Token = "0x60028C1")]
			[Address(RVA = "0xB49068", Offset = "0xB49068", VA = "0xB49068")]
			public FlowCanvas_Nodes_CodeEvent_ftg_HubRoomData_HubRoomKeys()
			{
			}
		}

		[Token(Token = "0x2000903")]
		private class FlowCanvas_Nodes_CodeEvent_ftg_PersonaSettings_PersonaKeys : CodeEvent<PersonaSettings.PersonaKeys>
		{
			[Token(Token = "0x60028C2")]
			[Address(RVA = "0xB490B8", Offset = "0xB490B8", VA = "0xB490B8")]
			public FlowCanvas_Nodes_CodeEvent_ftg_PersonaSettings_PersonaKeys()
			{
			}
		}

		[Token(Token = "0x2000904")]
		private class FlowCanvas_Nodes_CodeEvent_UnityEngine_LayerMask : CodeEvent<LayerMask>
		{
			[Token(Token = "0x60028C3")]
			[Address(RVA = "0xB48BB8", Offset = "0xB48BB8", VA = "0xB48BB8")]
			public FlowCanvas_Nodes_CodeEvent_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000905")]
		private class FlowCanvas_Nodes_CreateCollection_System_Boolean : CreateCollection<bool>
		{
			[Token(Token = "0x60028C4")]
			[Address(RVA = "0xB49158", Offset = "0xB49158", VA = "0xB49158")]
			public FlowCanvas_Nodes_CreateCollection_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000906")]
		private class FlowCanvas_Nodes_CreateCollection_System_Single : CreateCollection<float>
		{
			[Token(Token = "0x60028C5")]
			[Address(RVA = "0xB491F8", Offset = "0xB491F8", VA = "0xB491F8")]
			public FlowCanvas_Nodes_CreateCollection_System_Single()
			{
			}
		}

		[Token(Token = "0x2000907")]
		private class FlowCanvas_Nodes_CreateCollection_System_Int32 : CreateCollection<int>
		{
			[Token(Token = "0x60028C6")]
			[Address(RVA = "0xB491A8", Offset = "0xB491A8", VA = "0xB491A8")]
			public FlowCanvas_Nodes_CreateCollection_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000908")]
		private class FlowCanvas_Nodes_CreateCollection_UnityEngine_Vector2 : CreateCollection<Vector2>
		{
			[Token(Token = "0x60028C7")]
			[Address(RVA = "0xB496A8", Offset = "0xB496A8", VA = "0xB496A8")]
			public FlowCanvas_Nodes_CreateCollection_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000909")]
		private class FlowCanvas_Nodes_CreateCollection_UnityEngine_Vector3 : CreateCollection<Vector3>
		{
			[Token(Token = "0x60028C8")]
			[Address(RVA = "0xB496F8", Offset = "0xB496F8", VA = "0xB496F8")]
			public FlowCanvas_Nodes_CreateCollection_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x200090A")]
		private class FlowCanvas_Nodes_CreateCollection_UnityEngine_Vector4 : CreateCollection<Vector4>
		{
			[Token(Token = "0x60028C9")]
			[Address(RVA = "0xB49748", Offset = "0xB49748", VA = "0xB49748")]
			public FlowCanvas_Nodes_CreateCollection_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x200090B")]
		private class FlowCanvas_Nodes_CreateCollection_UnityEngine_Quaternion : CreateCollection<Quaternion>
		{
			[Token(Token = "0x60028CA")]
			[Address(RVA = "0xB494C8", Offset = "0xB494C8", VA = "0xB494C8")]
			public FlowCanvas_Nodes_CreateCollection_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x200090C")]
		private class FlowCanvas_Nodes_CreateCollection_UnityEngine_Keyframe : CreateCollection<Keyframe>
		{
			[Token(Token = "0x60028CB")]
			[Address(RVA = "0xB49428", Offset = "0xB49428", VA = "0xB49428")]
			public FlowCanvas_Nodes_CreateCollection_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x200090D")]
		private class FlowCanvas_Nodes_CreateCollection_UnityEngine_Bounds : CreateCollection<Bounds>
		{
			[Token(Token = "0x60028CC")]
			[Address(RVA = "0xB49248", Offset = "0xB49248", VA = "0xB49248")]
			public FlowCanvas_Nodes_CreateCollection_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x200090E")]
		private class FlowCanvas_Nodes_CreateCollection_UnityEngine_Color : CreateCollection<Color>
		{
			[Token(Token = "0x60028CD")]
			[Address(RVA = "0xB49338", Offset = "0xB49338", VA = "0xB49338")]
			public FlowCanvas_Nodes_CreateCollection_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x200090F")]
		private class FlowCanvas_Nodes_CreateCollection_UnityEngine_Rect : CreateCollection<Rect>
		{
			[Token(Token = "0x60028CE")]
			[Address(RVA = "0xB49608", Offset = "0xB49608", VA = "0xB49608")]
			public FlowCanvas_Nodes_CreateCollection_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000910")]
		private class FlowCanvas_Nodes_CreateCollection_UnityEngine_ContactPoint : CreateCollection<ContactPoint>
		{
			[Token(Token = "0x60028CF")]
			[Address(RVA = "0xB49388", Offset = "0xB49388", VA = "0xB49388")]
			public FlowCanvas_Nodes_CreateCollection_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000911")]
		private class FlowCanvas_Nodes_CreateCollection_UnityEngine_ContactPoint2D : CreateCollection<ContactPoint2D>
		{
			[Token(Token = "0x60028D0")]
			[Address(RVA = "0xB493D8", Offset = "0xB493D8", VA = "0xB493D8")]
			public FlowCanvas_Nodes_CreateCollection_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000912")]
		private class FlowCanvas_Nodes_CreateCollection_UnityEngine_Collision : CreateCollection<Collision>
		{
			[Token(Token = "0x60028D1")]
			[Address(RVA = "0xB49298", Offset = "0xB49298", VA = "0xB49298")]
			public FlowCanvas_Nodes_CreateCollection_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x2000913")]
		private class FlowCanvas_Nodes_CreateCollection_UnityEngine_Collision2D : CreateCollection<Collision2D>
		{
			[Token(Token = "0x60028D2")]
			[Address(RVA = "0xB492E8", Offset = "0xB492E8", VA = "0xB492E8")]
			public FlowCanvas_Nodes_CreateCollection_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000914")]
		private class FlowCanvas_Nodes_CreateCollection_UnityEngine_RaycastHit : CreateCollection<RaycastHit>
		{
			[Token(Token = "0x60028D3")]
			[Address(RVA = "0xB49568", Offset = "0xB49568", VA = "0xB49568")]
			public FlowCanvas_Nodes_CreateCollection_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000915")]
		private class FlowCanvas_Nodes_CreateCollection_UnityEngine_RaycastHit2D : CreateCollection<RaycastHit2D>
		{
			[Token(Token = "0x60028D4")]
			[Address(RVA = "0xB495B8", Offset = "0xB495B8", VA = "0xB495B8")]
			public FlowCanvas_Nodes_CreateCollection_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000916")]
		private class FlowCanvas_Nodes_CreateCollection_UnityEngine_Ray : CreateCollection<Ray>
		{
			[Token(Token = "0x60028D5")]
			[Address(RVA = "0xB49518", Offset = "0xB49518", VA = "0xB49518")]
			public FlowCanvas_Nodes_CreateCollection_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x2000917")]
		private class FlowCanvas_Nodes_CreateCollection_UnityEngine_Space : CreateCollection<Space>
		{
			[Token(Token = "0x60028D6")]
			[Address(RVA = "0xB49658", Offset = "0xB49658", VA = "0xB49658")]
			public FlowCanvas_Nodes_CreateCollection_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000918")]
		private class FlowCanvas_Nodes_CreateCollection_ftg_DioramaFiveData_DioramaFiveKeys : CreateCollection<DioramaFiveData.DioramaFiveKeys>
		{
			[Token(Token = "0x60028D7")]
			[Address(RVA = "0xB49798", Offset = "0xB49798", VA = "0xB49798")]
			public FlowCanvas_Nodes_CreateCollection_ftg_DioramaFiveData_DioramaFiveKeys()
			{
			}
		}

		[Token(Token = "0x2000919")]
		private class FlowCanvas_Nodes_CreateCollection_ftg_DioramaFourData_DioramaFourKeys : CreateCollection<DioramaFourData.DioramaFourKeys>
		{
			[Token(Token = "0x60028D8")]
			[Address(RVA = "0xB497E8", Offset = "0xB497E8", VA = "0xB497E8")]
			public FlowCanvas_Nodes_CreateCollection_ftg_DioramaFourData_DioramaFourKeys()
			{
			}
		}

		[Token(Token = "0x200091A")]
		private class FlowCanvas_Nodes_CreateCollection_ftg_DioramaOneData_DioramaOneKeys : CreateCollection<DioramaOneData.DioramaOneKeys>
		{
			[Token(Token = "0x60028D9")]
			[Address(RVA = "0xB49838", Offset = "0xB49838", VA = "0xB49838")]
			public FlowCanvas_Nodes_CreateCollection_ftg_DioramaOneData_DioramaOneKeys()
			{
			}
		}

		[Token(Token = "0x200091B")]
		private class FlowCanvas_Nodes_CreateCollection_ftg_DioramaThreeData_DioramaThreeKeys : CreateCollection<DioramaThreeData.DioramaThreeKeys>
		{
			[Token(Token = "0x60028DA")]
			[Address(RVA = "0xB49888", Offset = "0xB49888", VA = "0xB49888")]
			public FlowCanvas_Nodes_CreateCollection_ftg_DioramaThreeData_DioramaThreeKeys()
			{
			}
		}

		[Token(Token = "0x200091C")]
		private class FlowCanvas_Nodes_CreateCollection_ftg_DioramaTwoData_DioramaTwoKeys : CreateCollection<DioramaTwoData.DioramaTwoKeys>
		{
			[Token(Token = "0x60028DB")]
			[Address(RVA = "0xB498D8", Offset = "0xB498D8", VA = "0xB498D8")]
			public FlowCanvas_Nodes_CreateCollection_ftg_DioramaTwoData_DioramaTwoKeys()
			{
			}
		}

		[Token(Token = "0x200091D")]
		private class FlowCanvas_Nodes_CreateCollection_ftg_SaveManager_DioramaWorlds : CreateCollection<SaveManager.DioramaWorlds>
		{
			[Token(Token = "0x60028DC")]
			[Address(RVA = "0xB499C8", Offset = "0xB499C8", VA = "0xB499C8")]
			public FlowCanvas_Nodes_CreateCollection_ftg_SaveManager_DioramaWorlds()
			{
			}
		}

		[Token(Token = "0x200091E")]
		private class FlowCanvas_Nodes_CreateCollection_ftg_HubRoomData_HubRoomKeys : CreateCollection<HubRoomData.HubRoomKeys>
		{
			[Token(Token = "0x60028DD")]
			[Address(RVA = "0xB49928", Offset = "0xB49928", VA = "0xB49928")]
			public FlowCanvas_Nodes_CreateCollection_ftg_HubRoomData_HubRoomKeys()
			{
			}
		}

		[Token(Token = "0x200091F")]
		private class FlowCanvas_Nodes_CreateCollection_ftg_PersonaSettings_PersonaKeys : CreateCollection<PersonaSettings.PersonaKeys>
		{
			[Token(Token = "0x60028DE")]
			[Address(RVA = "0xB49978", Offset = "0xB49978", VA = "0xB49978")]
			public FlowCanvas_Nodes_CreateCollection_ftg_PersonaSettings_PersonaKeys()
			{
			}
		}

		[Token(Token = "0x2000920")]
		private class FlowCanvas_Nodes_CreateCollection_UnityEngine_LayerMask : CreateCollection<LayerMask>
		{
			[Token(Token = "0x60028DF")]
			[Address(RVA = "0xB49478", Offset = "0xB49478", VA = "0xB49478")]
			public FlowCanvas_Nodes_CreateCollection_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000921")]
		private class FlowCanvas_Nodes_CreateDictionary_System_Boolean : CreateDictionary<bool>
		{
			[Token(Token = "0x60028E0")]
			[Address(RVA = "0xB49A18", Offset = "0xB49A18", VA = "0xB49A18")]
			public FlowCanvas_Nodes_CreateDictionary_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000922")]
		private class FlowCanvas_Nodes_CreateDictionary_System_Single : CreateDictionary<float>
		{
			[Token(Token = "0x60028E1")]
			[Address(RVA = "0xB49AB8", Offset = "0xB49AB8", VA = "0xB49AB8")]
			public FlowCanvas_Nodes_CreateDictionary_System_Single()
			{
			}
		}

		[Token(Token = "0x2000923")]
		private class FlowCanvas_Nodes_CreateDictionary_System_Int32 : CreateDictionary<int>
		{
			[Token(Token = "0x60028E2")]
			[Address(RVA = "0xB49A68", Offset = "0xB49A68", VA = "0xB49A68")]
			public FlowCanvas_Nodes_CreateDictionary_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000924")]
		private class FlowCanvas_Nodes_CreateDictionary_UnityEngine_Vector2 : CreateDictionary<Vector2>
		{
			[Token(Token = "0x60028E3")]
			[Address(RVA = "0xB49F68", Offset = "0xB49F68", VA = "0xB49F68")]
			public FlowCanvas_Nodes_CreateDictionary_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000925")]
		private class FlowCanvas_Nodes_CreateDictionary_UnityEngine_Vector3 : CreateDictionary<Vector3>
		{
			[Token(Token = "0x60028E4")]
			[Address(RVA = "0xB49FB8", Offset = "0xB49FB8", VA = "0xB49FB8")]
			public FlowCanvas_Nodes_CreateDictionary_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000926")]
		private class FlowCanvas_Nodes_CreateDictionary_UnityEngine_Vector4 : CreateDictionary<Vector4>
		{
			[Token(Token = "0x60028E5")]
			[Address(RVA = "0xB4A008", Offset = "0xB4A008", VA = "0xB4A008")]
			public FlowCanvas_Nodes_CreateDictionary_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x2000927")]
		private class FlowCanvas_Nodes_CreateDictionary_UnityEngine_Quaternion : CreateDictionary<Quaternion>
		{
			[Token(Token = "0x60028E6")]
			[Address(RVA = "0xB49D88", Offset = "0xB49D88", VA = "0xB49D88")]
			public FlowCanvas_Nodes_CreateDictionary_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000928")]
		private class FlowCanvas_Nodes_CreateDictionary_UnityEngine_Keyframe : CreateDictionary<Keyframe>
		{
			[Token(Token = "0x60028E7")]
			[Address(RVA = "0xB49CE8", Offset = "0xB49CE8", VA = "0xB49CE8")]
			public FlowCanvas_Nodes_CreateDictionary_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000929")]
		private class FlowCanvas_Nodes_CreateDictionary_UnityEngine_Bounds : CreateDictionary<Bounds>
		{
			[Token(Token = "0x60028E8")]
			[Address(RVA = "0xB49B08", Offset = "0xB49B08", VA = "0xB49B08")]
			public FlowCanvas_Nodes_CreateDictionary_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x200092A")]
		private class FlowCanvas_Nodes_CreateDictionary_UnityEngine_Color : CreateDictionary<Color>
		{
			[Token(Token = "0x60028E9")]
			[Address(RVA = "0xB49BF8", Offset = "0xB49BF8", VA = "0xB49BF8")]
			public FlowCanvas_Nodes_CreateDictionary_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x200092B")]
		private class FlowCanvas_Nodes_CreateDictionary_UnityEngine_Rect : CreateDictionary<Rect>
		{
			[Token(Token = "0x60028EA")]
			[Address(RVA = "0xB49EC8", Offset = "0xB49EC8", VA = "0xB49EC8")]
			public FlowCanvas_Nodes_CreateDictionary_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x200092C")]
		private class FlowCanvas_Nodes_CreateDictionary_UnityEngine_ContactPoint : CreateDictionary<ContactPoint>
		{
			[Token(Token = "0x60028EB")]
			[Address(RVA = "0xB49C48", Offset = "0xB49C48", VA = "0xB49C48")]
			public FlowCanvas_Nodes_CreateDictionary_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x200092D")]
		private class FlowCanvas_Nodes_CreateDictionary_UnityEngine_ContactPoint2D : CreateDictionary<ContactPoint2D>
		{
			[Token(Token = "0x60028EC")]
			[Address(RVA = "0xB49C98", Offset = "0xB49C98", VA = "0xB49C98")]
			public FlowCanvas_Nodes_CreateDictionary_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x200092E")]
		private class FlowCanvas_Nodes_CreateDictionary_UnityEngine_Collision : CreateDictionary<Collision>
		{
			[Token(Token = "0x60028ED")]
			[Address(RVA = "0xB49B58", Offset = "0xB49B58", VA = "0xB49B58")]
			public FlowCanvas_Nodes_CreateDictionary_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x200092F")]
		private class FlowCanvas_Nodes_CreateDictionary_UnityEngine_Collision2D : CreateDictionary<Collision2D>
		{
			[Token(Token = "0x60028EE")]
			[Address(RVA = "0xB49BA8", Offset = "0xB49BA8", VA = "0xB49BA8")]
			public FlowCanvas_Nodes_CreateDictionary_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000930")]
		private class FlowCanvas_Nodes_CreateDictionary_UnityEngine_RaycastHit : CreateDictionary<RaycastHit>
		{
			[Token(Token = "0x60028EF")]
			[Address(RVA = "0xB49E28", Offset = "0xB49E28", VA = "0xB49E28")]
			public FlowCanvas_Nodes_CreateDictionary_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000931")]
		private class FlowCanvas_Nodes_CreateDictionary_UnityEngine_RaycastHit2D : CreateDictionary<RaycastHit2D>
		{
			[Token(Token = "0x60028F0")]
			[Address(RVA = "0xB49E78", Offset = "0xB49E78", VA = "0xB49E78")]
			public FlowCanvas_Nodes_CreateDictionary_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000932")]
		private class FlowCanvas_Nodes_CreateDictionary_UnityEngine_Ray : CreateDictionary<Ray>
		{
			[Token(Token = "0x60028F1")]
			[Address(RVA = "0xB49DD8", Offset = "0xB49DD8", VA = "0xB49DD8")]
			public FlowCanvas_Nodes_CreateDictionary_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x2000933")]
		private class FlowCanvas_Nodes_CreateDictionary_UnityEngine_Space : CreateDictionary<Space>
		{
			[Token(Token = "0x60028F2")]
			[Address(RVA = "0xB49F18", Offset = "0xB49F18", VA = "0xB49F18")]
			public FlowCanvas_Nodes_CreateDictionary_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000934")]
		private class FlowCanvas_Nodes_CreateDictionary_ftg_DioramaFiveData_DioramaFiveKeys : CreateDictionary<DioramaFiveData.DioramaFiveKeys>
		{
			[Token(Token = "0x60028F3")]
			[Address(RVA = "0xB4A058", Offset = "0xB4A058", VA = "0xB4A058")]
			public FlowCanvas_Nodes_CreateDictionary_ftg_DioramaFiveData_DioramaFiveKeys()
			{
			}
		}

		[Token(Token = "0x2000935")]
		private class FlowCanvas_Nodes_CreateDictionary_ftg_DioramaFourData_DioramaFourKeys : CreateDictionary<DioramaFourData.DioramaFourKeys>
		{
			[Token(Token = "0x60028F4")]
			[Address(RVA = "0xB4A0A8", Offset = "0xB4A0A8", VA = "0xB4A0A8")]
			public FlowCanvas_Nodes_CreateDictionary_ftg_DioramaFourData_DioramaFourKeys()
			{
			}
		}

		[Token(Token = "0x2000936")]
		private class FlowCanvas_Nodes_CreateDictionary_ftg_DioramaOneData_DioramaOneKeys : CreateDictionary<DioramaOneData.DioramaOneKeys>
		{
			[Token(Token = "0x60028F5")]
			[Address(RVA = "0xB4A0F8", Offset = "0xB4A0F8", VA = "0xB4A0F8")]
			public FlowCanvas_Nodes_CreateDictionary_ftg_DioramaOneData_DioramaOneKeys()
			{
			}
		}

		[Token(Token = "0x2000937")]
		private class FlowCanvas_Nodes_CreateDictionary_ftg_DioramaThreeData_DioramaThreeKeys : CreateDictionary<DioramaThreeData.DioramaThreeKeys>
		{
			[Token(Token = "0x60028F6")]
			[Address(RVA = "0xB4A148", Offset = "0xB4A148", VA = "0xB4A148")]
			public FlowCanvas_Nodes_CreateDictionary_ftg_DioramaThreeData_DioramaThreeKeys()
			{
			}
		}

		[Token(Token = "0x2000938")]
		private class FlowCanvas_Nodes_CreateDictionary_ftg_DioramaTwoData_DioramaTwoKeys : CreateDictionary<DioramaTwoData.DioramaTwoKeys>
		{
			[Token(Token = "0x60028F7")]
			[Address(RVA = "0xB4A198", Offset = "0xB4A198", VA = "0xB4A198")]
			public FlowCanvas_Nodes_CreateDictionary_ftg_DioramaTwoData_DioramaTwoKeys()
			{
			}
		}

		[Token(Token = "0x2000939")]
		private class FlowCanvas_Nodes_CreateDictionary_ftg_SaveManager_DioramaWorlds : CreateDictionary<SaveManager.DioramaWorlds>
		{
			[Token(Token = "0x60028F8")]
			[Address(RVA = "0xB4A288", Offset = "0xB4A288", VA = "0xB4A288")]
			public FlowCanvas_Nodes_CreateDictionary_ftg_SaveManager_DioramaWorlds()
			{
			}
		}

		[Token(Token = "0x200093A")]
		private class FlowCanvas_Nodes_CreateDictionary_ftg_HubRoomData_HubRoomKeys : CreateDictionary<HubRoomData.HubRoomKeys>
		{
			[Token(Token = "0x60028F9")]
			[Address(RVA = "0xB4A1E8", Offset = "0xB4A1E8", VA = "0xB4A1E8")]
			public FlowCanvas_Nodes_CreateDictionary_ftg_HubRoomData_HubRoomKeys()
			{
			}
		}

		[Token(Token = "0x200093B")]
		private class FlowCanvas_Nodes_CreateDictionary_ftg_PersonaSettings_PersonaKeys : CreateDictionary<PersonaSettings.PersonaKeys>
		{
			[Token(Token = "0x60028FA")]
			[Address(RVA = "0xB4A238", Offset = "0xB4A238", VA = "0xB4A238")]
			public FlowCanvas_Nodes_CreateDictionary_ftg_PersonaSettings_PersonaKeys()
			{
			}
		}

		[Token(Token = "0x200093C")]
		private class FlowCanvas_Nodes_CreateDictionary_UnityEngine_LayerMask : CreateDictionary<LayerMask>
		{
			[Token(Token = "0x60028FB")]
			[Address(RVA = "0xB49D38", Offset = "0xB49D38", VA = "0xB49D38")]
			public FlowCanvas_Nodes_CreateDictionary_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x200093D")]
		private class FlowCanvas_Nodes_CustomEvent_System_Boolean : CustomEvent<bool>
		{
			[Token(Token = "0x60028FC")]
			[Address(RVA = "0xB4A2D8", Offset = "0xB4A2D8", VA = "0xB4A2D8")]
			public FlowCanvas_Nodes_CustomEvent_System_Boolean()
			{
			}
		}

		[Token(Token = "0x200093E")]
		private class FlowCanvas_Nodes_CustomEvent_System_Single : CustomEvent<float>
		{
			[Token(Token = "0x60028FD")]
			[Address(RVA = "0xB4A378", Offset = "0xB4A378", VA = "0xB4A378")]
			public FlowCanvas_Nodes_CustomEvent_System_Single()
			{
			}
		}

		[Token(Token = "0x200093F")]
		private class FlowCanvas_Nodes_CustomEvent_System_Int32 : CustomEvent<int>
		{
			[Token(Token = "0x60028FE")]
			[Address(RVA = "0xB4A328", Offset = "0xB4A328", VA = "0xB4A328")]
			public FlowCanvas_Nodes_CustomEvent_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000940")]
		private class FlowCanvas_Nodes_CustomEvent_UnityEngine_Vector2 : CustomEvent<Vector2>
		{
			[Token(Token = "0x60028FF")]
			[Address(RVA = "0xB11900", Offset = "0xB11900", VA = "0xB11900")]
			public FlowCanvas_Nodes_CustomEvent_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000941")]
		private class FlowCanvas_Nodes_CustomEvent_UnityEngine_Vector3 : CustomEvent<Vector3>
		{
			[Token(Token = "0x6002900")]
			[Address(RVA = "0xB11950", Offset = "0xB11950", VA = "0xB11950")]
			public FlowCanvas_Nodes_CustomEvent_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000942")]
		private class FlowCanvas_Nodes_CustomEvent_UnityEngine_Vector4 : CustomEvent<Vector4>
		{
			[Token(Token = "0x6002901")]
			[Address(RVA = "0xB119A0", Offset = "0xB119A0", VA = "0xB119A0")]
			public FlowCanvas_Nodes_CustomEvent_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x2000943")]
		private class FlowCanvas_Nodes_CustomEvent_UnityEngine_Quaternion : CustomEvent<Quaternion>
		{
			[Token(Token = "0x6002902")]
			[Address(RVA = "0xB11720", Offset = "0xB11720", VA = "0xB11720")]
			public FlowCanvas_Nodes_CustomEvent_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000944")]
		private class FlowCanvas_Nodes_CustomEvent_UnityEngine_Keyframe : CustomEvent<Keyframe>
		{
			[Token(Token = "0x6002903")]
			[Address(RVA = "0xB4A5A8", Offset = "0xB4A5A8", VA = "0xB4A5A8")]
			public FlowCanvas_Nodes_CustomEvent_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000945")]
		private class FlowCanvas_Nodes_CustomEvent_UnityEngine_Bounds : CustomEvent<Bounds>
		{
			[Token(Token = "0x6002904")]
			[Address(RVA = "0xB4A3C8", Offset = "0xB4A3C8", VA = "0xB4A3C8")]
			public FlowCanvas_Nodes_CustomEvent_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000946")]
		private class FlowCanvas_Nodes_CustomEvent_UnityEngine_Color : CustomEvent<Color>
		{
			[Token(Token = "0x6002905")]
			[Address(RVA = "0xB4A4B8", Offset = "0xB4A4B8", VA = "0xB4A4B8")]
			public FlowCanvas_Nodes_CustomEvent_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000947")]
		private class FlowCanvas_Nodes_CustomEvent_UnityEngine_Rect : CustomEvent<Rect>
		{
			[Token(Token = "0x6002906")]
			[Address(RVA = "0xB11860", Offset = "0xB11860", VA = "0xB11860")]
			public FlowCanvas_Nodes_CustomEvent_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000948")]
		private class FlowCanvas_Nodes_CustomEvent_UnityEngine_ContactPoint : CustomEvent<ContactPoint>
		{
			[Token(Token = "0x6002907")]
			[Address(RVA = "0xB4A508", Offset = "0xB4A508", VA = "0xB4A508")]
			public FlowCanvas_Nodes_CustomEvent_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000949")]
		private class FlowCanvas_Nodes_CustomEvent_UnityEngine_ContactPoint2D : CustomEvent<ContactPoint2D>
		{
			[Token(Token = "0x6002908")]
			[Address(RVA = "0xB4A558", Offset = "0xB4A558", VA = "0xB4A558")]
			public FlowCanvas_Nodes_CustomEvent_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x200094A")]
		private class FlowCanvas_Nodes_CustomEvent_UnityEngine_Collision : CustomEvent<Collision>
		{
			[Token(Token = "0x6002909")]
			[Address(RVA = "0xB4A418", Offset = "0xB4A418", VA = "0xB4A418")]
			public FlowCanvas_Nodes_CustomEvent_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x200094B")]
		private class FlowCanvas_Nodes_CustomEvent_UnityEngine_Collision2D : CustomEvent<Collision2D>
		{
			[Token(Token = "0x600290A")]
			[Address(RVA = "0xB4A468", Offset = "0xB4A468", VA = "0xB4A468")]
			public FlowCanvas_Nodes_CustomEvent_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x200094C")]
		private class FlowCanvas_Nodes_CustomEvent_UnityEngine_RaycastHit : CustomEvent<RaycastHit>
		{
			[Token(Token = "0x600290B")]
			[Address(RVA = "0xB117C0", Offset = "0xB117C0", VA = "0xB117C0")]
			public FlowCanvas_Nodes_CustomEvent_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x200094D")]
		private class FlowCanvas_Nodes_CustomEvent_UnityEngine_RaycastHit2D : CustomEvent<RaycastHit2D>
		{
			[Token(Token = "0x600290C")]
			[Address(RVA = "0xB11810", Offset = "0xB11810", VA = "0xB11810")]
			public FlowCanvas_Nodes_CustomEvent_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x200094E")]
		private class FlowCanvas_Nodes_CustomEvent_UnityEngine_Ray : CustomEvent<Ray>
		{
			[Token(Token = "0x600290D")]
			[Address(RVA = "0xB11770", Offset = "0xB11770", VA = "0xB11770")]
			public FlowCanvas_Nodes_CustomEvent_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x200094F")]
		private class FlowCanvas_Nodes_CustomEvent_UnityEngine_Space : CustomEvent<Space>
		{
			[Token(Token = "0x600290E")]
			[Address(RVA = "0xB118B0", Offset = "0xB118B0", VA = "0xB118B0")]
			public FlowCanvas_Nodes_CustomEvent_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000950")]
		private class FlowCanvas_Nodes_CustomEvent_ftg_DioramaFiveData_DioramaFiveKeys : CustomEvent<DioramaFiveData.DioramaFiveKeys>
		{
			[Token(Token = "0x600290F")]
			[Address(RVA = "0xB119F0", Offset = "0xB119F0", VA = "0xB119F0")]
			public FlowCanvas_Nodes_CustomEvent_ftg_DioramaFiveData_DioramaFiveKeys()
			{
			}
		}

		[Token(Token = "0x2000951")]
		private class FlowCanvas_Nodes_CustomEvent_ftg_DioramaFourData_DioramaFourKeys : CustomEvent<DioramaFourData.DioramaFourKeys>
		{
			[Token(Token = "0x6002910")]
			[Address(RVA = "0xB11A40", Offset = "0xB11A40", VA = "0xB11A40")]
			public FlowCanvas_Nodes_CustomEvent_ftg_DioramaFourData_DioramaFourKeys()
			{
			}
		}

		[Token(Token = "0x2000952")]
		private class FlowCanvas_Nodes_CustomEvent_ftg_DioramaOneData_DioramaOneKeys : CustomEvent<DioramaOneData.DioramaOneKeys>
		{
			[Token(Token = "0x6002911")]
			[Address(RVA = "0xB11A90", Offset = "0xB11A90", VA = "0xB11A90")]
			public FlowCanvas_Nodes_CustomEvent_ftg_DioramaOneData_DioramaOneKeys()
			{
			}
		}

		[Token(Token = "0x2000953")]
		private class FlowCanvas_Nodes_CustomEvent_ftg_DioramaThreeData_DioramaThreeKeys : CustomEvent<DioramaThreeData.DioramaThreeKeys>
		{
			[Token(Token = "0x6002912")]
			[Address(RVA = "0xB11AE0", Offset = "0xB11AE0", VA = "0xB11AE0")]
			public FlowCanvas_Nodes_CustomEvent_ftg_DioramaThreeData_DioramaThreeKeys()
			{
			}
		}

		[Token(Token = "0x2000954")]
		private class FlowCanvas_Nodes_CustomEvent_ftg_DioramaTwoData_DioramaTwoKeys : CustomEvent<DioramaTwoData.DioramaTwoKeys>
		{
			[Token(Token = "0x6002913")]
			[Address(RVA = "0xB11B30", Offset = "0xB11B30", VA = "0xB11B30")]
			public FlowCanvas_Nodes_CustomEvent_ftg_DioramaTwoData_DioramaTwoKeys()
			{
			}
		}

		[Token(Token = "0x2000955")]
		private class FlowCanvas_Nodes_CustomEvent_ftg_SaveManager_DioramaWorlds : CustomEvent<SaveManager.DioramaWorlds>
		{
			[Token(Token = "0x6002914")]
			[Address(RVA = "0xB11C20", Offset = "0xB11C20", VA = "0xB11C20")]
			public FlowCanvas_Nodes_CustomEvent_ftg_SaveManager_DioramaWorlds()
			{
			}
		}

		[Token(Token = "0x2000956")]
		private class FlowCanvas_Nodes_CustomEvent_ftg_HubRoomData_HubRoomKeys : CustomEvent<HubRoomData.HubRoomKeys>
		{
			[Token(Token = "0x6002915")]
			[Address(RVA = "0xB11B80", Offset = "0xB11B80", VA = "0xB11B80")]
			public FlowCanvas_Nodes_CustomEvent_ftg_HubRoomData_HubRoomKeys()
			{
			}
		}

		[Token(Token = "0x2000957")]
		private class FlowCanvas_Nodes_CustomEvent_ftg_PersonaSettings_PersonaKeys : CustomEvent<PersonaSettings.PersonaKeys>
		{
			[Token(Token = "0x6002916")]
			[Address(RVA = "0xB11BD0", Offset = "0xB11BD0", VA = "0xB11BD0")]
			public FlowCanvas_Nodes_CustomEvent_ftg_PersonaSettings_PersonaKeys()
			{
			}
		}

		[Token(Token = "0x2000958")]
		private class FlowCanvas_Nodes_CustomEvent_UnityEngine_LayerMask : CustomEvent<LayerMask>
		{
			[Token(Token = "0x6002917")]
			[Address(RVA = "0xB4A5F8", Offset = "0xB4A5F8", VA = "0xB4A5F8")]
			public FlowCanvas_Nodes_CustomEvent_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000959")]
		private class FlowCanvas_Nodes_DictionaryContainsKey_System_Boolean : DictionaryContainsKey<bool>
		{
			[Token(Token = "0x6002918")]
			[Address(RVA = "0xB11C70", Offset = "0xB11C70", VA = "0xB11C70")]
			public FlowCanvas_Nodes_DictionaryContainsKey_System_Boolean()
			{
			}
		}

		[Token(Token = "0x200095A")]
		private class FlowCanvas_Nodes_DictionaryContainsKey_System_Single : DictionaryContainsKey<float>
		{
			[Token(Token = "0x6002919")]
			[Address(RVA = "0xB11D10", Offset = "0xB11D10", VA = "0xB11D10")]
			public FlowCanvas_Nodes_DictionaryContainsKey_System_Single()
			{
			}
		}

		[Token(Token = "0x200095B")]
		private class FlowCanvas_Nodes_DictionaryContainsKey_System_Int32 : DictionaryContainsKey<int>
		{
			[Token(Token = "0x600291A")]
			[Address(RVA = "0xB11CC0", Offset = "0xB11CC0", VA = "0xB11CC0")]
			public FlowCanvas_Nodes_DictionaryContainsKey_System_Int32()
			{
			}
		}

		[Token(Token = "0x200095C")]
		private class FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_Vector2 : DictionaryContainsKey<Vector2>
		{
			[Token(Token = "0x600291B")]
			[Address(RVA = "0xB121C0", Offset = "0xB121C0", VA = "0xB121C0")]
			public FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x200095D")]
		private class FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_Vector3 : DictionaryContainsKey<Vector3>
		{
			[Token(Token = "0x600291C")]
			[Address(RVA = "0xB12210", Offset = "0xB12210", VA = "0xB12210")]
			public FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x200095E")]
		private class FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_Vector4 : DictionaryContainsKey<Vector4>
		{
			[Token(Token = "0x600291D")]
			[Address(RVA = "0xB12260", Offset = "0xB12260", VA = "0xB12260")]
			public FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x200095F")]
		private class FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_Quaternion : DictionaryContainsKey<Quaternion>
		{
			[Token(Token = "0x600291E")]
			[Address(RVA = "0xB11FE0", Offset = "0xB11FE0", VA = "0xB11FE0")]
			public FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000960")]
		private class FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_Keyframe : DictionaryContainsKey<Keyframe>
		{
			[Token(Token = "0x600291F")]
			[Address(RVA = "0xB11F40", Offset = "0xB11F40", VA = "0xB11F40")]
			public FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000961")]
		private class FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_Bounds : DictionaryContainsKey<Bounds>
		{
			[Token(Token = "0x6002920")]
			[Address(RVA = "0xB11D60", Offset = "0xB11D60", VA = "0xB11D60")]
			public FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000962")]
		private class FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_Color : DictionaryContainsKey<Color>
		{
			[Token(Token = "0x6002921")]
			[Address(RVA = "0xB11E50", Offset = "0xB11E50", VA = "0xB11E50")]
			public FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000963")]
		private class FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_Rect : DictionaryContainsKey<Rect>
		{
			[Token(Token = "0x6002922")]
			[Address(RVA = "0xB12120", Offset = "0xB12120", VA = "0xB12120")]
			public FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000964")]
		private class FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_ContactPoint : DictionaryContainsKey<ContactPoint>
		{
			[Token(Token = "0x6002923")]
			[Address(RVA = "0xB11EA0", Offset = "0xB11EA0", VA = "0xB11EA0")]
			public FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000965")]
		private class FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_ContactPoint2D : DictionaryContainsKey<ContactPoint2D>
		{
			[Token(Token = "0x6002924")]
			[Address(RVA = "0xB11EF0", Offset = "0xB11EF0", VA = "0xB11EF0")]
			public FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000966")]
		private class FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_Collision : DictionaryContainsKey<Collision>
		{
			[Token(Token = "0x6002925")]
			[Address(RVA = "0xB11DB0", Offset = "0xB11DB0", VA = "0xB11DB0")]
			public FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x2000967")]
		private class FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_Collision2D : DictionaryContainsKey<Collision2D>
		{
			[Token(Token = "0x6002926")]
			[Address(RVA = "0xB11E00", Offset = "0xB11E00", VA = "0xB11E00")]
			public FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000968")]
		private class FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_RaycastHit : DictionaryContainsKey<RaycastHit>
		{
			[Token(Token = "0x6002927")]
			[Address(RVA = "0xB12080", Offset = "0xB12080", VA = "0xB12080")]
			public FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000969")]
		private class FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_RaycastHit2D : DictionaryContainsKey<RaycastHit2D>
		{
			[Token(Token = "0x6002928")]
			[Address(RVA = "0xB120D0", Offset = "0xB120D0", VA = "0xB120D0")]
			public FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x200096A")]
		private class FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_Ray : DictionaryContainsKey<Ray>
		{
			[Token(Token = "0x6002929")]
			[Address(RVA = "0xB12030", Offset = "0xB12030", VA = "0xB12030")]
			public FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x200096B")]
		private class FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_Space : DictionaryContainsKey<Space>
		{
			[Token(Token = "0x600292A")]
			[Address(RVA = "0xB12170", Offset = "0xB12170", VA = "0xB12170")]
			public FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x200096C")]
		private class FlowCanvas_Nodes_DictionaryContainsKey_ftg_DioramaFiveData_DioramaFiveKeys : DictionaryContainsKey<DioramaFiveData.DioramaFiveKeys>
		{
			[Token(Token = "0x600292B")]
			[Address(RVA = "0xB122B0", Offset = "0xB122B0", VA = "0xB122B0")]
			public FlowCanvas_Nodes_DictionaryContainsKey_ftg_DioramaFiveData_DioramaFiveKeys()
			{
			}
		}

		[Token(Token = "0x200096D")]
		private class FlowCanvas_Nodes_DictionaryContainsKey_ftg_DioramaFourData_DioramaFourKeys : DictionaryContainsKey<DioramaFourData.DioramaFourKeys>
		{
			[Token(Token = "0x600292C")]
			[Address(RVA = "0xB12300", Offset = "0xB12300", VA = "0xB12300")]
			public FlowCanvas_Nodes_DictionaryContainsKey_ftg_DioramaFourData_DioramaFourKeys()
			{
			}
		}

		[Token(Token = "0x200096E")]
		private class FlowCanvas_Nodes_DictionaryContainsKey_ftg_DioramaOneData_DioramaOneKeys : DictionaryContainsKey<DioramaOneData.DioramaOneKeys>
		{
			[Token(Token = "0x600292D")]
			[Address(RVA = "0xB12350", Offset = "0xB12350", VA = "0xB12350")]
			public FlowCanvas_Nodes_DictionaryContainsKey_ftg_DioramaOneData_DioramaOneKeys()
			{
			}
		}

		[Token(Token = "0x200096F")]
		private class FlowCanvas_Nodes_DictionaryContainsKey_ftg_DioramaThreeData_DioramaThreeKeys : DictionaryContainsKey<DioramaThreeData.DioramaThreeKeys>
		{
			[Token(Token = "0x600292E")]
			[Address(RVA = "0xB123A0", Offset = "0xB123A0", VA = "0xB123A0")]
			public FlowCanvas_Nodes_DictionaryContainsKey_ftg_DioramaThreeData_DioramaThreeKeys()
			{
			}
		}

		[Token(Token = "0x2000970")]
		private class FlowCanvas_Nodes_DictionaryContainsKey_ftg_DioramaTwoData_DioramaTwoKeys : DictionaryContainsKey<DioramaTwoData.DioramaTwoKeys>
		{
			[Token(Token = "0x600292F")]
			[Address(RVA = "0xB123F0", Offset = "0xB123F0", VA = "0xB123F0")]
			public FlowCanvas_Nodes_DictionaryContainsKey_ftg_DioramaTwoData_DioramaTwoKeys()
			{
			}
		}

		[Token(Token = "0x2000971")]
		private class FlowCanvas_Nodes_DictionaryContainsKey_ftg_SaveManager_DioramaWorlds : DictionaryContainsKey<SaveManager.DioramaWorlds>
		{
			[Token(Token = "0x6002930")]
			[Address(RVA = "0xB124E0", Offset = "0xB124E0", VA = "0xB124E0")]
			public FlowCanvas_Nodes_DictionaryContainsKey_ftg_SaveManager_DioramaWorlds()
			{
			}
		}

		[Token(Token = "0x2000972")]
		private class FlowCanvas_Nodes_DictionaryContainsKey_ftg_HubRoomData_HubRoomKeys : DictionaryContainsKey<HubRoomData.HubRoomKeys>
		{
			[Token(Token = "0x6002931")]
			[Address(RVA = "0xB12440", Offset = "0xB12440", VA = "0xB12440")]
			public FlowCanvas_Nodes_DictionaryContainsKey_ftg_HubRoomData_HubRoomKeys()
			{
			}
		}

		[Token(Token = "0x2000973")]
		private class FlowCanvas_Nodes_DictionaryContainsKey_ftg_PersonaSettings_PersonaKeys : DictionaryContainsKey<PersonaSettings.PersonaKeys>
		{
			[Token(Token = "0x6002932")]
			[Address(RVA = "0xB12490", Offset = "0xB12490", VA = "0xB12490")]
			public FlowCanvas_Nodes_DictionaryContainsKey_ftg_PersonaSettings_PersonaKeys()
			{
			}
		}

		[Token(Token = "0x2000974")]
		private class FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_LayerMask : DictionaryContainsKey<LayerMask>
		{
			[Token(Token = "0x6002933")]
			[Address(RVA = "0xB11F90", Offset = "0xB11F90", VA = "0xB11F90")]
			public FlowCanvas_Nodes_DictionaryContainsKey_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000975")]
		private class FlowCanvas_Nodes_ForEach_System_Boolean : ForEach<bool>
		{
			[Token(Token = "0x6002934")]
			[Address(RVA = "0xB12530", Offset = "0xB12530", VA = "0xB12530")]
			public FlowCanvas_Nodes_ForEach_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000976")]
		private class FlowCanvas_Nodes_ForEach_System_Single : ForEach<float>
		{
			[Token(Token = "0x6002935")]
			[Address(RVA = "0xB125D0", Offset = "0xB125D0", VA = "0xB125D0")]
			public FlowCanvas_Nodes_ForEach_System_Single()
			{
			}
		}

		[Token(Token = "0x2000977")]
		private class FlowCanvas_Nodes_ForEach_System_Int32 : ForEach<int>
		{
			[Token(Token = "0x6002936")]
			[Address(RVA = "0xB12580", Offset = "0xB12580", VA = "0xB12580")]
			public FlowCanvas_Nodes_ForEach_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000978")]
		private class FlowCanvas_Nodes_ForEach_UnityEngine_Vector2 : ForEach<Vector2>
		{
			[Token(Token = "0x6002937")]
			[Address(RVA = "0xB12A80", Offset = "0xB12A80", VA = "0xB12A80")]
			public FlowCanvas_Nodes_ForEach_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000979")]
		private class FlowCanvas_Nodes_ForEach_UnityEngine_Vector3 : ForEach<Vector3>
		{
			[Token(Token = "0x6002938")]
			[Address(RVA = "0xB12AD0", Offset = "0xB12AD0", VA = "0xB12AD0")]
			public FlowCanvas_Nodes_ForEach_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x200097A")]
		private class FlowCanvas_Nodes_ForEach_UnityEngine_Vector4 : ForEach<Vector4>
		{
			[Token(Token = "0x6002939")]
			[Address(RVA = "0xB12B20", Offset = "0xB12B20", VA = "0xB12B20")]
			public FlowCanvas_Nodes_ForEach_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x200097B")]
		private class FlowCanvas_Nodes_ForEach_UnityEngine_Quaternion : ForEach<Quaternion>
		{
			[Token(Token = "0x600293A")]
			[Address(RVA = "0xB128A0", Offset = "0xB128A0", VA = "0xB128A0")]
			public FlowCanvas_Nodes_ForEach_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x200097C")]
		private class FlowCanvas_Nodes_ForEach_UnityEngine_Keyframe : ForEach<Keyframe>
		{
			[Token(Token = "0x600293B")]
			[Address(RVA = "0xB12800", Offset = "0xB12800", VA = "0xB12800")]
			public FlowCanvas_Nodes_ForEach_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x200097D")]
		private class FlowCanvas_Nodes_ForEach_UnityEngine_Bounds : ForEach<Bounds>
		{
			[Token(Token = "0x600293C")]
			[Address(RVA = "0xB12620", Offset = "0xB12620", VA = "0xB12620")]
			public FlowCanvas_Nodes_ForEach_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x200097E")]
		private class FlowCanvas_Nodes_ForEach_UnityEngine_Color : ForEach<Color>
		{
			[Token(Token = "0x600293D")]
			[Address(RVA = "0xB12710", Offset = "0xB12710", VA = "0xB12710")]
			public FlowCanvas_Nodes_ForEach_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x200097F")]
		private class FlowCanvas_Nodes_ForEach_UnityEngine_Rect : ForEach<Rect>
		{
			[Token(Token = "0x600293E")]
			[Address(RVA = "0xB129E0", Offset = "0xB129E0", VA = "0xB129E0")]
			public FlowCanvas_Nodes_ForEach_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000980")]
		private class FlowCanvas_Nodes_ForEach_UnityEngine_ContactPoint : ForEach<ContactPoint>
		{
			[Token(Token = "0x600293F")]
			[Address(RVA = "0xB12760", Offset = "0xB12760", VA = "0xB12760")]
			public FlowCanvas_Nodes_ForEach_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000981")]
		private class FlowCanvas_Nodes_ForEach_UnityEngine_ContactPoint2D : ForEach<ContactPoint2D>
		{
			[Token(Token = "0x6002940")]
			[Address(RVA = "0xB127B0", Offset = "0xB127B0", VA = "0xB127B0")]
			public FlowCanvas_Nodes_ForEach_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000982")]
		private class FlowCanvas_Nodes_ForEach_UnityEngine_Collision : ForEach<Collision>
		{
			[Token(Token = "0x6002941")]
			[Address(RVA = "0xB12670", Offset = "0xB12670", VA = "0xB12670")]
			public FlowCanvas_Nodes_ForEach_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x2000983")]
		private class FlowCanvas_Nodes_ForEach_UnityEngine_Collision2D : ForEach<Collision2D>
		{
			[Token(Token = "0x6002942")]
			[Address(RVA = "0xB126C0", Offset = "0xB126C0", VA = "0xB126C0")]
			public FlowCanvas_Nodes_ForEach_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000984")]
		private class FlowCanvas_Nodes_ForEach_UnityEngine_RaycastHit : ForEach<RaycastHit>
		{
			[Token(Token = "0x6002943")]
			[Address(RVA = "0xB12940", Offset = "0xB12940", VA = "0xB12940")]
			public FlowCanvas_Nodes_ForEach_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000985")]
		private class FlowCanvas_Nodes_ForEach_UnityEngine_RaycastHit2D : ForEach<RaycastHit2D>
		{
			[Token(Token = "0x6002944")]
			[Address(RVA = "0xB12990", Offset = "0xB12990", VA = "0xB12990")]
			public FlowCanvas_Nodes_ForEach_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000986")]
		private class FlowCanvas_Nodes_ForEach_UnityEngine_Ray : ForEach<Ray>
		{
			[Token(Token = "0x6002945")]
			[Address(RVA = "0xB128F0", Offset = "0xB128F0", VA = "0xB128F0")]
			public FlowCanvas_Nodes_ForEach_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x2000987")]
		private class FlowCanvas_Nodes_ForEach_UnityEngine_Space : ForEach<Space>
		{
			[Token(Token = "0x6002946")]
			[Address(RVA = "0xB12A30", Offset = "0xB12A30", VA = "0xB12A30")]
			public FlowCanvas_Nodes_ForEach_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000988")]
		private class FlowCanvas_Nodes_ForEach_ftg_DioramaFiveData_DioramaFiveKeys : ForEach<DioramaFiveData.DioramaFiveKeys>
		{
			[Token(Token = "0x6002947")]
			[Address(RVA = "0xB12B70", Offset = "0xB12B70", VA = "0xB12B70")]
			public FlowCanvas_Nodes_ForEach_ftg_DioramaFiveData_DioramaFiveKeys()
			{
			}
		}

		[Token(Token = "0x2000989")]
		private class FlowCanvas_Nodes_ForEach_ftg_DioramaFourData_DioramaFourKeys : ForEach<DioramaFourData.DioramaFourKeys>
		{
			[Token(Token = "0x6002948")]
			[Address(RVA = "0xB12BC0", Offset = "0xB12BC0", VA = "0xB12BC0")]
			public FlowCanvas_Nodes_ForEach_ftg_DioramaFourData_DioramaFourKeys()
			{
			}
		}

		[Token(Token = "0x200098A")]
		private class FlowCanvas_Nodes_ForEach_ftg_DioramaOneData_DioramaOneKeys : ForEach<DioramaOneData.DioramaOneKeys>
		{
			[Token(Token = "0x6002949")]
			[Address(RVA = "0xB12C10", Offset = "0xB12C10", VA = "0xB12C10")]
			public FlowCanvas_Nodes_ForEach_ftg_DioramaOneData_DioramaOneKeys()
			{
			}
		}

		[Token(Token = "0x200098B")]
		private class FlowCanvas_Nodes_ForEach_ftg_DioramaThreeData_DioramaThreeKeys : ForEach<DioramaThreeData.DioramaThreeKeys>
		{
			[Token(Token = "0x600294A")]
			[Address(RVA = "0xB12C60", Offset = "0xB12C60", VA = "0xB12C60")]
			public FlowCanvas_Nodes_ForEach_ftg_DioramaThreeData_DioramaThreeKeys()
			{
			}
		}

		[Token(Token = "0x200098C")]
		private class FlowCanvas_Nodes_ForEach_ftg_DioramaTwoData_DioramaTwoKeys : ForEach<DioramaTwoData.DioramaTwoKeys>
		{
			[Token(Token = "0x600294B")]
			[Address(RVA = "0xB12CB0", Offset = "0xB12CB0", VA = "0xB12CB0")]
			public FlowCanvas_Nodes_ForEach_ftg_DioramaTwoData_DioramaTwoKeys()
			{
			}
		}

		[Token(Token = "0x200098D")]
		private class FlowCanvas_Nodes_ForEach_ftg_SaveManager_DioramaWorlds : ForEach<SaveManager.DioramaWorlds>
		{
			[Token(Token = "0x600294C")]
			[Address(RVA = "0xB12DA0", Offset = "0xB12DA0", VA = "0xB12DA0")]
			public FlowCanvas_Nodes_ForEach_ftg_SaveManager_DioramaWorlds()
			{
			}
		}

		[Token(Token = "0x200098E")]
		private class FlowCanvas_Nodes_ForEach_ftg_HubRoomData_HubRoomKeys : ForEach<HubRoomData.HubRoomKeys>
		{
			[Token(Token = "0x600294D")]
			[Address(RVA = "0xB12D00", Offset = "0xB12D00", VA = "0xB12D00")]
			public FlowCanvas_Nodes_ForEach_ftg_HubRoomData_HubRoomKeys()
			{
			}
		}

		[Token(Token = "0x200098F")]
		private class FlowCanvas_Nodes_ForEach_ftg_PersonaSettings_PersonaKeys : ForEach<PersonaSettings.PersonaKeys>
		{
			[Token(Token = "0x600294E")]
			[Address(RVA = "0xB12D50", Offset = "0xB12D50", VA = "0xB12D50")]
			public FlowCanvas_Nodes_ForEach_ftg_PersonaSettings_PersonaKeys()
			{
			}
		}

		[Token(Token = "0x2000990")]
		private class FlowCanvas_Nodes_ForEach_UnityEngine_LayerMask : ForEach<LayerMask>
		{
			[Token(Token = "0x600294F")]
			[Address(RVA = "0xB12850", Offset = "0xB12850", VA = "0xB12850")]
			public FlowCanvas_Nodes_ForEach_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000991")]
		private class FlowCanvas_Nodes_GetDictionaryItem_System_Boolean : GetDictionaryItem<bool>
		{
			[Token(Token = "0x6002950")]
			[Address(RVA = "0xB12DF0", Offset = "0xB12DF0", VA = "0xB12DF0")]
			public FlowCanvas_Nodes_GetDictionaryItem_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000992")]
		private class FlowCanvas_Nodes_GetDictionaryItem_System_Single : GetDictionaryItem<float>
		{
			[Token(Token = "0x6002951")]
			[Address(RVA = "0xB12E90", Offset = "0xB12E90", VA = "0xB12E90")]
			public FlowCanvas_Nodes_GetDictionaryItem_System_Single()
			{
			}
		}

		[Token(Token = "0x2000993")]
		private class FlowCanvas_Nodes_GetDictionaryItem_System_Int32 : GetDictionaryItem<int>
		{
			[Token(Token = "0x6002952")]
			[Address(RVA = "0xB12E40", Offset = "0xB12E40", VA = "0xB12E40")]
			public FlowCanvas_Nodes_GetDictionaryItem_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000994")]
		private class FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_Vector2 : GetDictionaryItem<Vector2>
		{
			[Token(Token = "0x6002953")]
			[Address(RVA = "0xB13340", Offset = "0xB13340", VA = "0xB13340")]
			public FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000995")]
		private class FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_Vector3 : GetDictionaryItem<Vector3>
		{
			[Token(Token = "0x6002954")]
			[Address(RVA = "0xB13390", Offset = "0xB13390", VA = "0xB13390")]
			public FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000996")]
		private class FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_Vector4 : GetDictionaryItem<Vector4>
		{
			[Token(Token = "0x6002955")]
			[Address(RVA = "0xB133E0", Offset = "0xB133E0", VA = "0xB133E0")]
			public FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x2000997")]
		private class FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_Quaternion : GetDictionaryItem<Quaternion>
		{
			[Token(Token = "0x6002956")]
			[Address(RVA = "0xB13160", Offset = "0xB13160", VA = "0xB13160")]
			public FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000998")]
		private class FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_Keyframe : GetDictionaryItem<Keyframe>
		{
			[Token(Token = "0x6002957")]
			[Address(RVA = "0xB130C0", Offset = "0xB130C0", VA = "0xB130C0")]
			public FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000999")]
		private class FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_Bounds : GetDictionaryItem<Bounds>
		{
			[Token(Token = "0x6002958")]
			[Address(RVA = "0xB12EE0", Offset = "0xB12EE0", VA = "0xB12EE0")]
			public FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x200099A")]
		private class FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_Color : GetDictionaryItem<Color>
		{
			[Token(Token = "0x6002959")]
			[Address(RVA = "0xB12FD0", Offset = "0xB12FD0", VA = "0xB12FD0")]
			public FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x200099B")]
		private class FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_Rect : GetDictionaryItem<Rect>
		{
			[Token(Token = "0x600295A")]
			[Address(RVA = "0xB132A0", Offset = "0xB132A0", VA = "0xB132A0")]
			public FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x200099C")]
		private class FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_ContactPoint : GetDictionaryItem<ContactPoint>
		{
			[Token(Token = "0x600295B")]
			[Address(RVA = "0xB13020", Offset = "0xB13020", VA = "0xB13020")]
			public FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x200099D")]
		private class FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_ContactPoint2D : GetDictionaryItem<ContactPoint2D>
		{
			[Token(Token = "0x600295C")]
			[Address(RVA = "0xB13070", Offset = "0xB13070", VA = "0xB13070")]
			public FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x200099E")]
		private class FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_Collision : GetDictionaryItem<Collision>
		{
			[Token(Token = "0x600295D")]
			[Address(RVA = "0xB12F30", Offset = "0xB12F30", VA = "0xB12F30")]
			public FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x200099F")]
		private class FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_Collision2D : GetDictionaryItem<Collision2D>
		{
			[Token(Token = "0x600295E")]
			[Address(RVA = "0xB12F80", Offset = "0xB12F80", VA = "0xB12F80")]
			public FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x20009A0")]
		private class FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_RaycastHit : GetDictionaryItem<RaycastHit>
		{
			[Token(Token = "0x600295F")]
			[Address(RVA = "0xB13200", Offset = "0xB13200", VA = "0xB13200")]
			public FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x20009A1")]
		private class FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_RaycastHit2D : GetDictionaryItem<RaycastHit2D>
		{
			[Token(Token = "0x6002960")]
			[Address(RVA = "0xB13250", Offset = "0xB13250", VA = "0xB13250")]
			public FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x20009A2")]
		private class FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_Ray : GetDictionaryItem<Ray>
		{
			[Token(Token = "0x6002961")]
			[Address(RVA = "0xB131B0", Offset = "0xB131B0", VA = "0xB131B0")]
			public FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x20009A3")]
		private class FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_Space : GetDictionaryItem<Space>
		{
			[Token(Token = "0x6002962")]
			[Address(RVA = "0xB132F0", Offset = "0xB132F0", VA = "0xB132F0")]
			public FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x20009A4")]
		private class FlowCanvas_Nodes_GetDictionaryItem_ftg_DioramaFiveData_DioramaFiveKeys : GetDictionaryItem<DioramaFiveData.DioramaFiveKeys>
		{
			[Token(Token = "0x6002963")]
			[Address(RVA = "0xB13430", Offset = "0xB13430", VA = "0xB13430")]
			public FlowCanvas_Nodes_GetDictionaryItem_ftg_DioramaFiveData_DioramaFiveKeys()
			{
			}
		}

		[Token(Token = "0x20009A5")]
		private class FlowCanvas_Nodes_GetDictionaryItem_ftg_DioramaFourData_DioramaFourKeys : GetDictionaryItem<DioramaFourData.DioramaFourKeys>
		{
			[Token(Token = "0x6002964")]
			[Address(RVA = "0xB13480", Offset = "0xB13480", VA = "0xB13480")]
			public FlowCanvas_Nodes_GetDictionaryItem_ftg_DioramaFourData_DioramaFourKeys()
			{
			}
		}

		[Token(Token = "0x20009A6")]
		private class FlowCanvas_Nodes_GetDictionaryItem_ftg_DioramaOneData_DioramaOneKeys : GetDictionaryItem<DioramaOneData.DioramaOneKeys>
		{
			[Token(Token = "0x6002965")]
			[Address(RVA = "0xB134D0", Offset = "0xB134D0", VA = "0xB134D0")]
			public FlowCanvas_Nodes_GetDictionaryItem_ftg_DioramaOneData_DioramaOneKeys()
			{
			}
		}

		[Token(Token = "0x20009A7")]
		private class FlowCanvas_Nodes_GetDictionaryItem_ftg_DioramaThreeData_DioramaThreeKeys : GetDictionaryItem<DioramaThreeData.DioramaThreeKeys>
		{
			[Token(Token = "0x6002966")]
			[Address(RVA = "0xB13520", Offset = "0xB13520", VA = "0xB13520")]
			public FlowCanvas_Nodes_GetDictionaryItem_ftg_DioramaThreeData_DioramaThreeKeys()
			{
			}
		}

		[Token(Token = "0x20009A8")]
		private class FlowCanvas_Nodes_GetDictionaryItem_ftg_DioramaTwoData_DioramaTwoKeys : GetDictionaryItem<DioramaTwoData.DioramaTwoKeys>
		{
			[Token(Token = "0x6002967")]
			[Address(RVA = "0xB13570", Offset = "0xB13570", VA = "0xB13570")]
			public FlowCanvas_Nodes_GetDictionaryItem_ftg_DioramaTwoData_DioramaTwoKeys()
			{
			}
		}

		[Token(Token = "0x20009A9")]
		private class FlowCanvas_Nodes_GetDictionaryItem_ftg_SaveManager_DioramaWorlds : GetDictionaryItem<SaveManager.DioramaWorlds>
		{
			[Token(Token = "0x6002968")]
			[Address(RVA = "0xB13660", Offset = "0xB13660", VA = "0xB13660")]
			public FlowCanvas_Nodes_GetDictionaryItem_ftg_SaveManager_DioramaWorlds()
			{
			}
		}

		[Token(Token = "0x20009AA")]
		private class FlowCanvas_Nodes_GetDictionaryItem_ftg_HubRoomData_HubRoomKeys : GetDictionaryItem<HubRoomData.HubRoomKeys>
		{
			[Token(Token = "0x6002969")]
			[Address(RVA = "0xB135C0", Offset = "0xB135C0", VA = "0xB135C0")]
			public FlowCanvas_Nodes_GetDictionaryItem_ftg_HubRoomData_HubRoomKeys()
			{
			}
		}

		[Token(Token = "0x20009AB")]
		private class FlowCanvas_Nodes_GetDictionaryItem_ftg_PersonaSettings_PersonaKeys : GetDictionaryItem<PersonaSettings.PersonaKeys>
		{
			[Token(Token = "0x600296A")]
			[Address(RVA = "0xB13610", Offset = "0xB13610", VA = "0xB13610")]
			public FlowCanvas_Nodes_GetDictionaryItem_ftg_PersonaSettings_PersonaKeys()
			{
			}
		}

		[Token(Token = "0x20009AC")]
		private class FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_LayerMask : GetDictionaryItem<LayerMask>
		{
			[Token(Token = "0x600296B")]
			[Address(RVA = "0xB13110", Offset = "0xB13110", VA = "0xB13110")]
			public FlowCanvas_Nodes_GetDictionaryItem_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x20009AD")]
		private class FlowCanvas_Nodes_GetFirstListItem_System_Boolean : GetFirstListItem<bool>
		{
			[Token(Token = "0x600296C")]
			[Address(RVA = "0xB136B0", Offset = "0xB136B0", VA = "0xB136B0")]
			public FlowCanvas_Nodes_GetFirstListItem_System_Boolean()
			{
			}
		}

		[Token(Token = "0x20009AE")]
		private class FlowCanvas_Nodes_GetFirstListItem_System_Single : GetFirstListItem<float>
		{
			[Token(Token = "0x600296D")]
			[Address(RVA = "0xB13750", Offset = "0xB13750", VA = "0xB13750")]
			public FlowCanvas_Nodes_GetFirstListItem_System_Single()
			{
			}
		}

		[Token(Token = "0x20009AF")]
		private class FlowCanvas_Nodes_GetFirstListItem_System_Int32 : GetFirstListItem<int>
		{
			[Token(Token = "0x600296E")]
			[Address(RVA = "0xB13700", Offset = "0xB13700", VA = "0xB13700")]
			public FlowCanvas_Nodes_GetFirstListItem_System_Int32()
			{
			}
		}

		[Token(Token = "0x20009B0")]
		private class FlowCanvas_Nodes_GetFirstListItem_UnityEngine_Vector2 : GetFirstListItem<Vector2>
		{
			[Token(Token = "0x600296F")]
			[Address(RVA = "0xB13C00", Offset = "0xB13C00", VA = "0xB13C00")]
			public FlowCanvas_Nodes_GetFirstListItem_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x20009B1")]
		private class FlowCanvas_Nodes_GetFirstListItem_UnityEngine_Vector3 : GetFirstListItem<Vector3>
		{
			[Token(Token = "0x6002970")]
			[Address(RVA = "0xB13C50", Offset = "0xB13C50", VA = "0xB13C50")]
			public FlowCanvas_Nodes_GetFirstListItem_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x20009B2")]
		private class FlowCanvas_Nodes_GetFirstListItem_UnityEngine_Vector4 : GetFirstListItem<Vector4>
		{
			[Token(Token = "0x6002971")]
			[Address(RVA = "0xB13CA0", Offset = "0xB13CA0", VA = "0xB13CA0")]
			public FlowCanvas_Nodes_GetFirstListItem_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x20009B3")]
		private class FlowCanvas_Nodes_GetFirstListItem_UnityEngine_Quaternion : GetFirstListItem<Quaternion>
		{
			[Token(Token = "0x6002972")]
			[Address(RVA = "0xB13A20", Offset = "0xB13A20", VA = "0xB13A20")]
			public FlowCanvas_Nodes_GetFirstListItem_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x20009B4")]
		private class FlowCanvas_Nodes_GetFirstListItem_UnityEngine_Keyframe : GetFirstListItem<Keyframe>
		{
			[Token(Token = "0x6002973")]
			[Address(RVA = "0xB13980", Offset = "0xB13980", VA = "0xB13980")]
			public FlowCanvas_Nodes_GetFirstListItem_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x20009B5")]
		private class FlowCanvas_Nodes_GetFirstListItem_UnityEngine_Bounds : GetFirstListItem<Bounds>
		{
			[Token(Token = "0x6002974")]
			[Address(RVA = "0xB137A0", Offset = "0xB137A0", VA = "0xB137A0")]
			public FlowCanvas_Nodes_GetFirstListItem_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x20009B6")]
		private class FlowCanvas_Nodes_GetFirstListItem_UnityEngine_Color : GetFirstListItem<Color>
		{
			[Token(Token = "0x6002975")]
			[Address(RVA = "0xB13890", Offset = "0xB13890", VA = "0xB13890")]
			public FlowCanvas_Nodes_GetFirstListItem_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x20009B7")]
		private class FlowCanvas_Nodes_GetFirstListItem_UnityEngine_Rect : GetFirstListItem<Rect>
		{
			[Token(Token = "0x6002976")]
			[Address(RVA = "0xB13B60", Offset = "0xB13B60", VA = "0xB13B60")]
			public FlowCanvas_Nodes_GetFirstListItem_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x20009B8")]
		private class FlowCanvas_Nodes_GetFirstListItem_UnityEngine_ContactPoint : GetFirstListItem<ContactPoint>
		{
			[Token(Token = "0x6002977")]
			[Address(RVA = "0xB138E0", Offset = "0xB138E0", VA = "0xB138E0")]
			public FlowCanvas_Nodes_GetFirstListItem_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x20009B9")]
		private class FlowCanvas_Nodes_GetFirstListItem_UnityEngine_ContactPoint2D : GetFirstListItem<ContactPoint2D>
		{
			[Token(Token = "0x6002978")]
			[Address(RVA = "0xB13930", Offset = "0xB13930", VA = "0xB13930")]
			public FlowCanvas_Nodes_GetFirstListItem_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x20009BA")]
		private class FlowCanvas_Nodes_GetFirstListItem_UnityEngine_Collision : GetFirstListItem<Collision>
		{
			[Token(Token = "0x6002979")]
			[Address(RVA = "0xB137F0", Offset = "0xB137F0", VA = "0xB137F0")]
			public FlowCanvas_Nodes_GetFirstListItem_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x20009BB")]
		private class FlowCanvas_Nodes_GetFirstListItem_UnityEngine_Collision2D : GetFirstListItem<Collision2D>
		{
			[Token(Token = "0x600297A")]
			[Address(RVA = "0xB13840", Offset = "0xB13840", VA = "0xB13840")]
			public FlowCanvas_Nodes_GetFirstListItem_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x20009BC")]
		private class FlowCanvas_Nodes_GetFirstListItem_UnityEngine_RaycastHit : GetFirstListItem<RaycastHit>
		{
			[Token(Token = "0x600297B")]
			[Address(RVA = "0xB13AC0", Offset = "0xB13AC0", VA = "0xB13AC0")]
			public FlowCanvas_Nodes_GetFirstListItem_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x20009BD")]
		private class FlowCanvas_Nodes_GetFirstListItem_UnityEngine_RaycastHit2D : GetFirstListItem<RaycastHit2D>
		{
			[Token(Token = "0x600297C")]
			[Address(RVA = "0xB13B10", Offset = "0xB13B10", VA = "0xB13B10")]
			public FlowCanvas_Nodes_GetFirstListItem_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x20009BE")]
		private class FlowCanvas_Nodes_GetFirstListItem_UnityEngine_Ray : GetFirstListItem<Ray>
		{
			[Token(Token = "0x600297D")]
			[Address(RVA = "0xB13A70", Offset = "0xB13A70", VA = "0xB13A70")]
			public FlowCanvas_Nodes_GetFirstListItem_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x20009BF")]
		private class FlowCanvas_Nodes_GetFirstListItem_UnityEngine_Space : GetFirstListItem<Space>
		{
			[Token(Token = "0x600297E")]
			[Address(RVA = "0xB13BB0", Offset = "0xB13BB0", VA = "0xB13BB0")]
			public FlowCanvas_Nodes_GetFirstListItem_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x20009C0")]
		private class FlowCanvas_Nodes_GetFirstListItem_ftg_DioramaFiveData_DioramaFiveKeys : GetFirstListItem<DioramaFiveData.DioramaFiveKeys>
		{
			[Token(Token = "0x600297F")]
			[Address(RVA = "0xB13CF0", Offset = "0xB13CF0", VA = "0xB13CF0")]
			public FlowCanvas_Nodes_GetFirstListItem_ftg_DioramaFiveData_DioramaFiveKeys()
			{
			}
		}

		[Token(Token = "0x20009C1")]
		private class FlowCanvas_Nodes_GetFirstListItem_ftg_DioramaFourData_DioramaFourKeys : GetFirstListItem<DioramaFourData.DioramaFourKeys>
		{
			[Token(Token = "0x6002980")]
			[Address(RVA = "0xB13D40", Offset = "0xB13D40", VA = "0xB13D40")]
			public FlowCanvas_Nodes_GetFirstListItem_ftg_DioramaFourData_DioramaFourKeys()
			{
			}
		}

		[Token(Token = "0x20009C2")]
		private class FlowCanvas_Nodes_GetFirstListItem_ftg_DioramaOneData_DioramaOneKeys : GetFirstListItem<DioramaOneData.DioramaOneKeys>
		{
			[Token(Token = "0x6002981")]
			[Address(RVA = "0xB13D90", Offset = "0xB13D90", VA = "0xB13D90")]
			public FlowCanvas_Nodes_GetFirstListItem_ftg_DioramaOneData_DioramaOneKeys()
			{
			}
		}

		[Token(Token = "0x20009C3")]
		private class FlowCanvas_Nodes_GetFirstListItem_ftg_DioramaThreeData_DioramaThreeKeys : GetFirstListItem<DioramaThreeData.DioramaThreeKeys>
		{
			[Token(Token = "0x6002982")]
			[Address(RVA = "0xB13DE0", Offset = "0xB13DE0", VA = "0xB13DE0")]
			public FlowCanvas_Nodes_GetFirstListItem_ftg_DioramaThreeData_DioramaThreeKeys()
			{
			}
		}

		[Token(Token = "0x20009C4")]
		private class FlowCanvas_Nodes_GetFirstListItem_ftg_DioramaTwoData_DioramaTwoKeys : GetFirstListItem<DioramaTwoData.DioramaTwoKeys>
		{
			[Token(Token = "0x6002983")]
			[Address(RVA = "0xB13E30", Offset = "0xB13E30", VA = "0xB13E30")]
			public FlowCanvas_Nodes_GetFirstListItem_ftg_DioramaTwoData_DioramaTwoKeys()
			{
			}
		}

		[Token(Token = "0x20009C5")]
		private class FlowCanvas_Nodes_GetFirstListItem_ftg_SaveManager_DioramaWorlds : GetFirstListItem<SaveManager.DioramaWorlds>
		{
			[Token(Token = "0x6002984")]
			[Address(RVA = "0xB13F20", Offset = "0xB13F20", VA = "0xB13F20")]
			public FlowCanvas_Nodes_GetFirstListItem_ftg_SaveManager_DioramaWorlds()
			{
			}
		}

		[Token(Token = "0x20009C6")]
		private class FlowCanvas_Nodes_GetFirstListItem_ftg_HubRoomData_HubRoomKeys : GetFirstListItem<HubRoomData.HubRoomKeys>
		{
			[Token(Token = "0x6002985")]
			[Address(RVA = "0xB13E80", Offset = "0xB13E80", VA = "0xB13E80")]
			public FlowCanvas_Nodes_GetFirstListItem_ftg_HubRoomData_HubRoomKeys()
			{
			}
		}

		[Token(Token = "0x20009C7")]
		private class FlowCanvas_Nodes_GetFirstListItem_ftg_PersonaSettings_PersonaKeys : GetFirstListItem<PersonaSettings.PersonaKeys>
		{
			[Token(Token = "0x6002986")]
			[Address(RVA = "0xB13ED0", Offset = "0xB13ED0", VA = "0xB13ED0")]
			public FlowCanvas_Nodes_GetFirstListItem_ftg_PersonaSettings_PersonaKeys()
			{
			}
		}

		[Token(Token = "0x20009C8")]
		private class FlowCanvas_Nodes_GetFirstListItem_UnityEngine_LayerMask : GetFirstListItem<LayerMask>
		{
			[Token(Token = "0x6002987")]
			[Address(RVA = "0xB139D0", Offset = "0xB139D0", VA = "0xB139D0")]
			public FlowCanvas_Nodes_GetFirstListItem_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x20009C9")]
		private class FlowCanvas_Nodes_GetLastListItem_System_Boolean : GetLastListItem<bool>
		{
			[Token(Token = "0x6002988")]
			[Address(RVA = "0xB13F70", Offset = "0xB13F70", VA = "0xB13F70")]
			public FlowCanvas_Nodes_GetLastListItem_System_Boolean()
			{
			}
		}

		[Token(Token = "0x20009CA")]
		private class FlowCanvas_Nodes_GetLastListItem_System_Single : GetLastListItem<float>
		{
			[Token(Token = "0x6002989")]
			[Address(RVA = "0xB14010", Offset = "0xB14010", VA = "0xB14010")]
			public FlowCanvas_Nodes_GetLastListItem_System_Single()
			{
			}
		}

		[Token(Token = "0x20009CB")]
		private class FlowCanvas_Nodes_GetLastListItem_System_Int32 : GetLastListItem<int>
		{
			[Token(Token = "0x600298A")]
			[Address(RVA = "0xB13FC0", Offset = "0xB13FC0", VA = "0xB13FC0")]
			public FlowCanvas_Nodes_GetLastListItem_System_Int32()
			{
			}
		}

		[Token(Token = "0x20009CC")]
		private class FlowCanvas_Nodes_GetLastListItem_UnityEngine_Vector2 : GetLastListItem<Vector2>
		{
			[Token(Token = "0x600298B")]
			[Address(RVA = "0xB144C0", Offset = "0xB144C0", VA = "0xB144C0")]
			public FlowCanvas_Nodes_GetLastListItem_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x20009CD")]
		private class FlowCanvas_Nodes_GetLastListItem_UnityEngine_Vector3 : GetLastListItem<Vector3>
		{
			[Token(Token = "0x600298C")]
			[Address(RVA = "0xB14510", Offset = "0xB14510", VA = "0xB14510")]
			public FlowCanvas_Nodes_GetLastListItem_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x20009CE")]
		private class FlowCanvas_Nodes_GetLastListItem_UnityEngine_Vector4 : GetLastListItem<Vector4>
		{
			[Token(Token = "0x600298D")]
			[Address(RVA = "0xB14560", Offset = "0xB14560", VA = "0xB14560")]
			public FlowCanvas_Nodes_GetLastListItem_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x20009CF")]
		private class FlowCanvas_Nodes_GetLastListItem_UnityEngine_Quaternion : GetLastListItem<Quaternion>
		{
			[Token(Token = "0x600298E")]
			[Address(RVA = "0xB142E0", Offset = "0xB142E0", VA = "0xB142E0")]
			public FlowCanvas_Nodes_GetLastListItem_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x20009D0")]
		private class FlowCanvas_Nodes_GetLastListItem_UnityEngine_Keyframe : GetLastListItem<Keyframe>
		{
			[Token(Token = "0x600298F")]
			[Address(RVA = "0xB14240", Offset = "0xB14240", VA = "0xB14240")]
			public FlowCanvas_Nodes_GetLastListItem_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x20009D1")]
		private class FlowCanvas_Nodes_GetLastListItem_UnityEngine_Bounds : GetLastListItem<Bounds>
		{
			[Token(Token = "0x6002990")]
			[Address(RVA = "0xB14060", Offset = "0xB14060", VA = "0xB14060")]
			public FlowCanvas_Nodes_GetLastListItem_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x20009D2")]
		private class FlowCanvas_Nodes_GetLastListItem_UnityEngine_Color : GetLastListItem<Color>
		{
			[Token(Token = "0x6002991")]
			[Address(RVA = "0xB14150", Offset = "0xB14150", VA = "0xB14150")]
			public FlowCanvas_Nodes_GetLastListItem_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x20009D3")]
		private class FlowCanvas_Nodes_GetLastListItem_UnityEngine_Rect : GetLastListItem<Rect>
		{
			[Token(Token = "0x6002992")]
			[Address(RVA = "0xB14420", Offset = "0xB14420", VA = "0xB14420")]
			public FlowCanvas_Nodes_GetLastListItem_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x20009D4")]
		private class FlowCanvas_Nodes_GetLastListItem_UnityEngine_ContactPoint : GetLastListItem<ContactPoint>
		{
			[Token(Token = "0x6002993")]
			[Address(RVA = "0xB141A0", Offset = "0xB141A0", VA = "0xB141A0")]
			public FlowCanvas_Nodes_GetLastListItem_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x20009D5")]
		private class FlowCanvas_Nodes_GetLastListItem_UnityEngine_ContactPoint2D : GetLastListItem<ContactPoint2D>
		{
			[Token(Token = "0x6002994")]
			[Address(RVA = "0xB141F0", Offset = "0xB141F0", VA = "0xB141F0")]
			public FlowCanvas_Nodes_GetLastListItem_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x20009D6")]
		private class FlowCanvas_Nodes_GetLastListItem_UnityEngine_Collision : GetLastListItem<Collision>
		{
			[Token(Token = "0x6002995")]
			[Address(RVA = "0xB140B0", Offset = "0xB140B0", VA = "0xB140B0")]
			public FlowCanvas_Nodes_GetLastListItem_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x20009D7")]
		private class FlowCanvas_Nodes_GetLastListItem_UnityEngine_Collision2D : GetLastListItem<Collision2D>
		{
			[Token(Token = "0x6002996")]
			[Address(RVA = "0xB14100", Offset = "0xB14100", VA = "0xB14100")]
			public FlowCanvas_Nodes_GetLastListItem_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x20009D8")]
		private class FlowCanvas_Nodes_GetLastListItem_UnityEngine_RaycastHit : GetLastListItem<RaycastHit>
		{
			[Token(Token = "0x6002997")]
			[Address(RVA = "0xB14380", Offset = "0xB14380", VA = "0xB14380")]
			public FlowCanvas_Nodes_GetLastListItem_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x20009D9")]
		private class FlowCanvas_Nodes_GetLastListItem_UnityEngine_RaycastHit2D : GetLastListItem<RaycastHit2D>
		{
			[Token(Token = "0x6002998")]
			[Address(RVA = "0xB143D0", Offset = "0xB143D0", VA = "0xB143D0")]
			public FlowCanvas_Nodes_GetLastListItem_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x20009DA")]
		private class FlowCanvas_Nodes_GetLastListItem_UnityEngine_Ray : GetLastListItem<Ray>
		{
			[Token(Token = "0x6002999")]
			[Address(RVA = "0xB14330", Offset = "0xB14330", VA = "0xB14330")]
			public FlowCanvas_Nodes_GetLastListItem_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x20009DB")]
		private class FlowCanvas_Nodes_GetLastListItem_UnityEngine_Space : GetLastListItem<Space>
		{
			[Token(Token = "0x600299A")]
			[Address(RVA = "0xB14470", Offset = "0xB14470", VA = "0xB14470")]
			public FlowCanvas_Nodes_GetLastListItem_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x20009DC")]
		private class FlowCanvas_Nodes_GetLastListItem_ftg_DioramaFiveData_DioramaFiveKeys : GetLastListItem<DioramaFiveData.DioramaFiveKeys>
		{
			[Token(Token = "0x600299B")]
			[Address(RVA = "0xB145B0", Offset = "0xB145B0", VA = "0xB145B0")]
			public FlowCanvas_Nodes_GetLastListItem_ftg_DioramaFiveData_DioramaFiveKeys()
			{
			}
		}

		[Token(Token = "0x20009DD")]
		private class FlowCanvas_Nodes_GetLastListItem_ftg_DioramaFourData_DioramaFourKeys : GetLastListItem<DioramaFourData.DioramaFourKeys>
		{
			[Token(Token = "0x600299C")]
			[Address(RVA = "0xB14600", Offset = "0xB14600", VA = "0xB14600")]
			public FlowCanvas_Nodes_GetLastListItem_ftg_DioramaFourData_DioramaFourKeys()
			{
			}
		}

		[Token(Token = "0x20009DE")]
		private class FlowCanvas_Nodes_GetLastListItem_ftg_DioramaOneData_DioramaOneKeys : GetLastListItem<DioramaOneData.DioramaOneKeys>
		{
			[Token(Token = "0x600299D")]
			[Address(RVA = "0xB14650", Offset = "0xB14650", VA = "0xB14650")]
			public FlowCanvas_Nodes_GetLastListItem_ftg_DioramaOneData_DioramaOneKeys()
			{
			}
		}

		[Token(Token = "0x20009DF")]
		private class FlowCanvas_Nodes_GetLastListItem_ftg_DioramaThreeData_DioramaThreeKeys : GetLastListItem<DioramaThreeData.DioramaThreeKeys>
		{
			[Token(Token = "0x600299E")]
			[Address(RVA = "0xB146A0", Offset = "0xB146A0", VA = "0xB146A0")]
			public FlowCanvas_Nodes_GetLastListItem_ftg_DioramaThreeData_DioramaThreeKeys()
			{
			}
		}

		[Token(Token = "0x20009E0")]
		private class FlowCanvas_Nodes_GetLastListItem_ftg_DioramaTwoData_DioramaTwoKeys : GetLastListItem<DioramaTwoData.DioramaTwoKeys>
		{
			[Token(Token = "0x600299F")]
			[Address(RVA = "0xB146F0", Offset = "0xB146F0", VA = "0xB146F0")]
			public FlowCanvas_Nodes_GetLastListItem_ftg_DioramaTwoData_DioramaTwoKeys()
			{
			}
		}

		[Token(Token = "0x20009E1")]
		private class FlowCanvas_Nodes_GetLastListItem_ftg_SaveManager_DioramaWorlds : GetLastListItem<SaveManager.DioramaWorlds>
		{
			[Token(Token = "0x60029A0")]
			[Address(RVA = "0xB147E0", Offset = "0xB147E0", VA = "0xB147E0")]
			public FlowCanvas_Nodes_GetLastListItem_ftg_SaveManager_DioramaWorlds()
			{
			}
		}

		[Token(Token = "0x20009E2")]
		private class FlowCanvas_Nodes_GetLastListItem_ftg_HubRoomData_HubRoomKeys : GetLastListItem<HubRoomData.HubRoomKeys>
		{
			[Token(Token = "0x60029A1")]
			[Address(RVA = "0xB14740", Offset = "0xB14740", VA = "0xB14740")]
			public FlowCanvas_Nodes_GetLastListItem_ftg_HubRoomData_HubRoomKeys()
			{
			}
		}

		[Token(Token = "0x20009E3")]
		private class FlowCanvas_Nodes_GetLastListItem_ftg_PersonaSettings_PersonaKeys : GetLastListItem<PersonaSettings.PersonaKeys>
		{
			[Token(Token = "0x60029A2")]
			[Address(RVA = "0xB14790", Offset = "0xB14790", VA = "0xB14790")]
			public FlowCanvas_Nodes_GetLastListItem_ftg_PersonaSettings_PersonaKeys()
			{
			}
		}

		[Token(Token = "0x20009E4")]
		private class FlowCanvas_Nodes_GetLastListItem_UnityEngine_LayerMask : GetLastListItem<LayerMask>
		{
			[Token(Token = "0x60029A3")]
			[Address(RVA = "0xB14290", Offset = "0xB14290", VA = "0xB14290")]
			public FlowCanvas_Nodes_GetLastListItem_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x20009E5")]
		private class FlowCanvas_Nodes_GetListItem_System_Boolean : GetListItem<bool>
		{
			[Token(Token = "0x60029A4")]
			[Address(RVA = "0xB14830", Offset = "0xB14830", VA = "0xB14830")]
			public FlowCanvas_Nodes_GetListItem_System_Boolean()
			{
			}
		}

		[Token(Token = "0x20009E6")]
		private class FlowCanvas_Nodes_GetListItem_System_Single : GetListItem<float>
		{
			[Token(Token = "0x60029A5")]
			[Address(RVA = "0xB148D0", Offset = "0xB148D0", VA = "0xB148D0")]
			public FlowCanvas_Nodes_GetListItem_System_Single()
			{
			}
		}

		[Token(Token = "0x20009E7")]
		private class FlowCanvas_Nodes_GetListItem_System_Int32 : GetListItem<int>
		{
			[Token(Token = "0x60029A6")]
			[Address(RVA = "0xB14880", Offset = "0xB14880", VA = "0xB14880")]
			public FlowCanvas_Nodes_GetListItem_System_Int32()
			{
			}
		}

		[Token(Token = "0x20009E8")]
		private class FlowCanvas_Nodes_GetListItem_UnityEngine_Vector2 : GetListItem<Vector2>
		{
			[Token(Token = "0x60029A7")]
			[Address(RVA = "0xB14D80", Offset = "0xB14D80", VA = "0xB14D80")]
			public FlowCanvas_Nodes_GetListItem_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x20009E9")]
		private class FlowCanvas_Nodes_GetListItem_UnityEngine_Vector3 : GetListItem<Vector3>
		{
			[Token(Token = "0x60029A8")]
			[Address(RVA = "0xB14DD0", Offset = "0xB14DD0", VA = "0xB14DD0")]
			public FlowCanvas_Nodes_GetListItem_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x20009EA")]
		private class FlowCanvas_Nodes_GetListItem_UnityEngine_Vector4 : GetListItem<Vector4>
		{
			[Token(Token = "0x60029A9")]
			[Address(RVA = "0xB14E20", Offset = "0xB14E20", VA = "0xB14E20")]
			public FlowCanvas_Nodes_GetListItem_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x20009EB")]
		private class FlowCanvas_Nodes_GetListItem_UnityEngine_Quaternion : GetListItem<Quaternion>
		{
			[Token(Token = "0x60029AA")]
			[Address(RVA = "0xB14BA0", Offset = "0xB14BA0", VA = "0xB14BA0")]
			public FlowCanvas_Nodes_GetListItem_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x20009EC")]
		private class FlowCanvas_Nodes_GetListItem_UnityEngine_Keyframe : GetListItem<Keyframe>
		{
			[Token(Token = "0x60029AB")]
			[Address(RVA = "0xB14B00", Offset = "0xB14B00", VA = "0xB14B00")]
			public FlowCanvas_Nodes_GetListItem_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x20009ED")]
		private class FlowCanvas_Nodes_GetListItem_UnityEngine_Bounds : GetListItem<Bounds>
		{
			[Token(Token = "0x60029AC")]
			[Address(RVA = "0xB14920", Offset = "0xB14920", VA = "0xB14920")]
			public FlowCanvas_Nodes_GetListItem_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x20009EE")]
		private class FlowCanvas_Nodes_GetListItem_UnityEngine_Color : GetListItem<Color>
		{
			[Token(Token = "0x60029AD")]
			[Address(RVA = "0xB14A10", Offset = "0xB14A10", VA = "0xB14A10")]
			public FlowCanvas_Nodes_GetListItem_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x20009EF")]
		private class FlowCanvas_Nodes_GetListItem_UnityEngine_Rect : GetListItem<Rect>
		{
			[Token(Token = "0x60029AE")]
			[Address(RVA = "0xB14CE0", Offset = "0xB14CE0", VA = "0xB14CE0")]
			public FlowCanvas_Nodes_GetListItem_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x20009F0")]
		private class FlowCanvas_Nodes_GetListItem_UnityEngine_ContactPoint : GetListItem<ContactPoint>
		{
			[Token(Token = "0x60029AF")]
			[Address(RVA = "0xB14A60", Offset = "0xB14A60", VA = "0xB14A60")]
			public FlowCanvas_Nodes_GetListItem_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x20009F1")]
		private class FlowCanvas_Nodes_GetListItem_UnityEngine_ContactPoint2D : GetListItem<ContactPoint2D>
		{
			[Token(Token = "0x60029B0")]
			[Address(RVA = "0xB14AB0", Offset = "0xB14AB0", VA = "0xB14AB0")]
			public FlowCanvas_Nodes_GetListItem_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x20009F2")]
		private class FlowCanvas_Nodes_GetListItem_UnityEngine_Collision : GetListItem<Collision>
		{
			[Token(Token = "0x60029B1")]
			[Address(RVA = "0xB14970", Offset = "0xB14970", VA = "0xB14970")]
			public FlowCanvas_Nodes_GetListItem_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x20009F3")]
		private class FlowCanvas_Nodes_GetListItem_UnityEngine_Collision2D : GetListItem<Collision2D>
		{
			[Token(Token = "0x60029B2")]
			[Address(RVA = "0xB149C0", Offset = "0xB149C0", VA = "0xB149C0")]
			public FlowCanvas_Nodes_GetListItem_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x20009F4")]
		private class FlowCanvas_Nodes_GetListItem_UnityEngine_RaycastHit : GetListItem<RaycastHit>
		{
			[Token(Token = "0x60029B3")]
			[Address(RVA = "0xB14C40", Offset = "0xB14C40", VA = "0xB14C40")]
			public FlowCanvas_Nodes_GetListItem_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x20009F5")]
		private class FlowCanvas_Nodes_GetListItem_UnityEngine_RaycastHit2D : GetListItem<RaycastHit2D>
		{
			[Token(Token = "0x60029B4")]
			[Address(RVA = "0xB14C90", Offset = "0xB14C90", VA = "0xB14C90")]
			public FlowCanvas_Nodes_GetListItem_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x20009F6")]
		private class FlowCanvas_Nodes_GetListItem_UnityEngine_Ray : GetListItem<Ray>
		{
			[Token(Token = "0x60029B5")]
			[Address(RVA = "0xB14BF0", Offset = "0xB14BF0", VA = "0xB14BF0")]
			public FlowCanvas_Nodes_GetListItem_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x20009F7")]
		private class FlowCanvas_Nodes_GetListItem_UnityEngine_Space : GetListItem<Space>
		{
			[Token(Token = "0x60029B6")]
			[Address(RVA = "0xB14D30", Offset = "0xB14D30", VA = "0xB14D30")]
			public FlowCanvas_Nodes_GetListItem_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x20009F8")]
		private class FlowCanvas_Nodes_GetListItem_ftg_DioramaFiveData_DioramaFiveKeys : GetListItem<DioramaFiveData.DioramaFiveKeys>
		{
			[Token(Token = "0x60029B7")]
			[Address(RVA = "0xB14E70", Offset = "0xB14E70", VA = "0xB14E70")]
			public FlowCanvas_Nodes_GetListItem_ftg_DioramaFiveData_DioramaFiveKeys()
			{
			}
		}

		[Token(Token = "0x20009F9")]
		private class FlowCanvas_Nodes_GetListItem_ftg_DioramaFourData_DioramaFourKeys : GetListItem<DioramaFourData.DioramaFourKeys>
		{
			[Token(Token = "0x60029B8")]
			[Address(RVA = "0xB14EC0", Offset = "0xB14EC0", VA = "0xB14EC0")]
			public FlowCanvas_Nodes_GetListItem_ftg_DioramaFourData_DioramaFourKeys()
			{
			}
		}

		[Token(Token = "0x20009FA")]
		private class FlowCanvas_Nodes_GetListItem_ftg_DioramaOneData_DioramaOneKeys : GetListItem<DioramaOneData.DioramaOneKeys>
		{
			[Token(Token = "0x60029B9")]
			[Address(RVA = "0xB14F10", Offset = "0xB14F10", VA = "0xB14F10")]
			public FlowCanvas_Nodes_GetListItem_ftg_DioramaOneData_DioramaOneKeys()
			{
			}
		}

		[Token(Token = "0x20009FB")]
		private class FlowCanvas_Nodes_GetListItem_ftg_DioramaThreeData_DioramaThreeKeys : GetListItem<DioramaThreeData.DioramaThreeKeys>
		{
			[Token(Token = "0x60029BA")]
			[Address(RVA = "0xB14F60", Offset = "0xB14F60", VA = "0xB14F60")]
			public FlowCanvas_Nodes_GetListItem_ftg_DioramaThreeData_DioramaThreeKeys()
			{
			}
		}

		[Token(Token = "0x20009FC")]
		private class FlowCanvas_Nodes_GetListItem_ftg_DioramaTwoData_DioramaTwoKeys : GetListItem<DioramaTwoData.DioramaTwoKeys>
		{
			[Token(Token = "0x60029BB")]
			[Address(RVA = "0xB14FB0", Offset = "0xB14FB0", VA = "0xB14FB0")]
			public FlowCanvas_Nodes_GetListItem_ftg_DioramaTwoData_DioramaTwoKeys()
			{
			}
		}

		[Token(Token = "0x20009FD")]
		private class FlowCanvas_Nodes_GetListItem_ftg_SaveManager_DioramaWorlds : GetListItem<SaveManager.DioramaWorlds>
		{
			[Token(Token = "0x60029BC")]
			[Address(RVA = "0xB150A0", Offset = "0xB150A0", VA = "0xB150A0")]
			public FlowCanvas_Nodes_GetListItem_ftg_SaveManager_DioramaWorlds()
			{
			}
		}

		[Token(Token = "0x20009FE")]
		private class FlowCanvas_Nodes_GetListItem_ftg_HubRoomData_HubRoomKeys : GetListItem<HubRoomData.HubRoomKeys>
		{
			[Token(Token = "0x60029BD")]
			[Address(RVA = "0xB15000", Offset = "0xB15000", VA = "0xB15000")]
			public FlowCanvas_Nodes_GetListItem_ftg_HubRoomData_HubRoomKeys()
			{
			}
		}

		[Token(Token = "0x20009FF")]
		private class FlowCanvas_Nodes_GetListItem_ftg_PersonaSettings_PersonaKeys : GetListItem<PersonaSettings.PersonaKeys>
		{
			[Token(Token = "0x60029BE")]
			[Address(RVA = "0xB15050", Offset = "0xB15050", VA = "0xB15050")]
			public FlowCanvas_Nodes_GetListItem_ftg_PersonaSettings_PersonaKeys()
			{
			}
		}

		[Token(Token = "0x2000A00")]
		private class FlowCanvas_Nodes_GetListItem_UnityEngine_LayerMask : GetListItem<LayerMask>
		{
			[Token(Token = "0x60029BF")]
			[Address(RVA = "0xB14B50", Offset = "0xB14B50", VA = "0xB14B50")]
			public FlowCanvas_Nodes_GetListItem_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000A01")]
		private class FlowCanvas_Nodes_GetOtherVariable_System_Boolean : GetOtherVariable<bool>
		{
			[Token(Token = "0x60029C0")]
			[Address(RVA = "0xB150F0", Offset = "0xB150F0", VA = "0xB150F0")]
			public FlowCanvas_Nodes_GetOtherVariable_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000A02")]
		private class FlowCanvas_Nodes_GetOtherVariable_System_Single : GetOtherVariable<float>
		{
			[Token(Token = "0x60029C1")]
			[Address(RVA = "0xB15190", Offset = "0xB15190", VA = "0xB15190")]
			public FlowCanvas_Nodes_GetOtherVariable_System_Single()
			{
			}
		}

		[Token(Token = "0x2000A03")]
		private class FlowCanvas_Nodes_GetOtherVariable_System_Int32 : GetOtherVariable<int>
		{
			[Token(Token = "0x60029C2")]
			[Address(RVA = "0xB15140", Offset = "0xB15140", VA = "0xB15140")]
			public FlowCanvas_Nodes_GetOtherVariable_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000A04")]
		private class FlowCanvas_Nodes_GetOtherVariable_UnityEngine_Vector2 : GetOtherVariable<Vector2>
		{
			[Token(Token = "0x60029C3")]
			[Address(RVA = "0xB15640", Offset = "0xB15640", VA = "0xB15640")]
			public FlowCanvas_Nodes_GetOtherVariable_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000A05")]
		private class FlowCanvas_Nodes_GetOtherVariable_UnityEngine_Vector3 : GetOtherVariable<Vector3>
		{
			[Token(Token = "0x60029C4")]
			[Address(RVA = "0xB15690", Offset = "0xB15690", VA = "0xB15690")]
			public FlowCanvas_Nodes_GetOtherVariable_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000A06")]
		private class FlowCanvas_Nodes_GetOtherVariable_UnityEngine_Vector4 : GetOtherVariable<Vector4>
		{
			[Token(Token = "0x60029C5")]
			[Address(RVA = "0xB156E0", Offset = "0xB156E0", VA = "0xB156E0")]
			public FlowCanvas_Nodes_GetOtherVariable_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x2000A07")]
		private class FlowCanvas_Nodes_GetOtherVariable_UnityEngine_Quaternion : GetOtherVariable<Quaternion>
		{
			[Token(Token = "0x60029C6")]
			[Address(RVA = "0xB15460", Offset = "0xB15460", VA = "0xB15460")]
			public FlowCanvas_Nodes_GetOtherVariable_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000A08")]
		private class FlowCanvas_Nodes_GetOtherVariable_UnityEngine_Keyframe : GetOtherVariable<Keyframe>
		{
			[Token(Token = "0x60029C7")]
			[Address(RVA = "0xB153C0", Offset = "0xB153C0", VA = "0xB153C0")]
			public FlowCanvas_Nodes_GetOtherVariable_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000A09")]
		private class FlowCanvas_Nodes_GetOtherVariable_UnityEngine_Bounds : GetOtherVariable<Bounds>
		{
			[Token(Token = "0x60029C8")]
			[Address(RVA = "0xB151E0", Offset = "0xB151E0", VA = "0xB151E0")]
			public FlowCanvas_Nodes_GetOtherVariable_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000A0A")]
		private class FlowCanvas_Nodes_GetOtherVariable_UnityEngine_Color : GetOtherVariable<Color>
		{
			[Token(Token = "0x60029C9")]
			[Address(RVA = "0xB152D0", Offset = "0xB152D0", VA = "0xB152D0")]
			public FlowCanvas_Nodes_GetOtherVariable_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000A0B")]
		private class FlowCanvas_Nodes_GetOtherVariable_UnityEngine_Rect : GetOtherVariable<Rect>
		{
			[Token(Token = "0x60029CA")]
			[Address(RVA = "0xB155A0", Offset = "0xB155A0", VA = "0xB155A0")]
			public FlowCanvas_Nodes_GetOtherVariable_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000A0C")]
		private class FlowCanvas_Nodes_GetOtherVariable_UnityEngine_ContactPoint : GetOtherVariable<ContactPoint>
		{
			[Token(Token = "0x60029CB")]
			[Address(RVA = "0xB15320", Offset = "0xB15320", VA = "0xB15320")]
			public FlowCanvas_Nodes_GetOtherVariable_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000A0D")]
		private class FlowCanvas_Nodes_GetOtherVariable_UnityEngine_ContactPoint2D : GetOtherVariable<ContactPoint2D>
		{
			[Token(Token = "0x60029CC")]
			[Address(RVA = "0xB15370", Offset = "0xB15370", VA = "0xB15370")]
			public FlowCanvas_Nodes_GetOtherVariable_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000A0E")]
		private class FlowCanvas_Nodes_GetOtherVariable_UnityEngine_Collision : GetOtherVariable<Collision>
		{
			[Token(Token = "0x60029CD")]
			[Address(RVA = "0xB15230", Offset = "0xB15230", VA = "0xB15230")]
			public FlowCanvas_Nodes_GetOtherVariable_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x2000A0F")]
		private class FlowCanvas_Nodes_GetOtherVariable_UnityEngine_Collision2D : GetOtherVariable<Collision2D>
		{
			[Token(Token = "0x60029CE")]
			[Address(RVA = "0xB15280", Offset = "0xB15280", VA = "0xB15280")]
			public FlowCanvas_Nodes_GetOtherVariable_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000A10")]
		private class FlowCanvas_Nodes_GetOtherVariable_UnityEngine_RaycastHit : GetOtherVariable<RaycastHit>
		{
			[Token(Token = "0x60029CF")]
			[Address(RVA = "0xB15500", Offset = "0xB15500", VA = "0xB15500")]
			public FlowCanvas_Nodes_GetOtherVariable_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000A11")]
		private class FlowCanvas_Nodes_GetOtherVariable_UnityEngine_RaycastHit2D : GetOtherVariable<RaycastHit2D>
		{
			[Token(Token = "0x60029D0")]
			[Address(RVA = "0xB15550", Offset = "0xB15550", VA = "0xB15550")]
			public FlowCanvas_Nodes_GetOtherVariable_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000A12")]
		private class FlowCanvas_Nodes_GetOtherVariable_UnityEngine_Ray : GetOtherVariable<Ray>
		{
			[Token(Token = "0x60029D1")]
			[Address(RVA = "0xB154B0", Offset = "0xB154B0", VA = "0xB154B0")]
			public FlowCanvas_Nodes_GetOtherVariable_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x2000A13")]
		private class FlowCanvas_Nodes_GetOtherVariable_UnityEngine_Space : GetOtherVariable<Space>
		{
			[Token(Token = "0x60029D2")]
			[Address(RVA = "0xB155F0", Offset = "0xB155F0", VA = "0xB155F0")]
			public FlowCanvas_Nodes_GetOtherVariable_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000A14")]
		private class FlowCanvas_Nodes_GetOtherVariable_ftg_DioramaFiveData_DioramaFiveKeys : GetOtherVariable<DioramaFiveData.DioramaFiveKeys>
		{
			[Token(Token = "0x60029D3")]
			[Address(RVA = "0xB15730", Offset = "0xB15730", VA = "0xB15730")]
			public FlowCanvas_Nodes_GetOtherVariable_ftg_DioramaFiveData_DioramaFiveKeys()
			{
			}
		}

		[Token(Token = "0x2000A15")]
		private class FlowCanvas_Nodes_GetOtherVariable_ftg_DioramaFourData_DioramaFourKeys : GetOtherVariable<DioramaFourData.DioramaFourKeys>
		{
			[Token(Token = "0x60029D4")]
			[Address(RVA = "0xB15780", Offset = "0xB15780", VA = "0xB15780")]
			public FlowCanvas_Nodes_GetOtherVariable_ftg_DioramaFourData_DioramaFourKeys()
			{
			}
		}

		[Token(Token = "0x2000A16")]
		private class FlowCanvas_Nodes_GetOtherVariable_ftg_DioramaOneData_DioramaOneKeys : GetOtherVariable<DioramaOneData.DioramaOneKeys>
		{
			[Token(Token = "0x60029D5")]
			[Address(RVA = "0xB157D0", Offset = "0xB157D0", VA = "0xB157D0")]
			public FlowCanvas_Nodes_GetOtherVariable_ftg_DioramaOneData_DioramaOneKeys()
			{
			}
		}

		[Token(Token = "0x2000A17")]
		private class FlowCanvas_Nodes_GetOtherVariable_ftg_DioramaThreeData_DioramaThreeKeys : GetOtherVariable<DioramaThreeData.DioramaThreeKeys>
		{
			[Token(Token = "0x60029D6")]
			[Address(RVA = "0xB15820", Offset = "0xB15820", VA = "0xB15820")]
			public FlowCanvas_Nodes_GetOtherVariable_ftg_DioramaThreeData_DioramaThreeKeys()
			{
			}
		}

		[Token(Token = "0x2000A18")]
		private class FlowCanvas_Nodes_GetOtherVariable_ftg_DioramaTwoData_DioramaTwoKeys : GetOtherVariable<DioramaTwoData.DioramaTwoKeys>
		{
			[Token(Token = "0x60029D7")]
			[Address(RVA = "0xB15870", Offset = "0xB15870", VA = "0xB15870")]
			public FlowCanvas_Nodes_GetOtherVariable_ftg_DioramaTwoData_DioramaTwoKeys()
			{
			}
		}

		[Token(Token = "0x2000A19")]
		private class FlowCanvas_Nodes_GetOtherVariable_ftg_SaveManager_DioramaWorlds : GetOtherVariable<SaveManager.DioramaWorlds>
		{
			[Token(Token = "0x60029D8")]
			[Address(RVA = "0xB15960", Offset = "0xB15960", VA = "0xB15960")]
			public FlowCanvas_Nodes_GetOtherVariable_ftg_SaveManager_DioramaWorlds()
			{
			}
		}

		[Token(Token = "0x2000A1A")]
		private class FlowCanvas_Nodes_GetOtherVariable_ftg_HubRoomData_HubRoomKeys : GetOtherVariable<HubRoomData.HubRoomKeys>
		{
			[Token(Token = "0x60029D9")]
			[Address(RVA = "0xB158C0", Offset = "0xB158C0", VA = "0xB158C0")]
			public FlowCanvas_Nodes_GetOtherVariable_ftg_HubRoomData_HubRoomKeys()
			{
			}
		}

		[Token(Token = "0x2000A1B")]
		private class FlowCanvas_Nodes_GetOtherVariable_ftg_PersonaSettings_PersonaKeys : GetOtherVariable<PersonaSettings.PersonaKeys>
		{
			[Token(Token = "0x60029DA")]
			[Address(RVA = "0xB15910", Offset = "0xB15910", VA = "0xB15910")]
			public FlowCanvas_Nodes_GetOtherVariable_ftg_PersonaSettings_PersonaKeys()
			{
			}
		}

		[Token(Token = "0x2000A1C")]
		private class FlowCanvas_Nodes_GetOtherVariable_UnityEngine_LayerMask : GetOtherVariable<LayerMask>
		{
			[Token(Token = "0x60029DB")]
			[Address(RVA = "0xB15410", Offset = "0xB15410", VA = "0xB15410")]
			public FlowCanvas_Nodes_GetOtherVariable_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000A1D")]
		private class FlowCanvas_Nodes_GetRandomListItem_System_Boolean : GetRandomListItem<bool>
		{
			[Token(Token = "0x60029DC")]
			[Address(RVA = "0xB159B0", Offset = "0xB159B0", VA = "0xB159B0")]
			public FlowCanvas_Nodes_GetRandomListItem_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000A1E")]
		private class FlowCanvas_Nodes_GetRandomListItem_System_Single : GetRandomListItem<float>
		{
			[Token(Token = "0x60029DD")]
			[Address(RVA = "0xB15A50", Offset = "0xB15A50", VA = "0xB15A50")]
			public FlowCanvas_Nodes_GetRandomListItem_System_Single()
			{
			}
		}

		[Token(Token = "0x2000A1F")]
		private class FlowCanvas_Nodes_GetRandomListItem_System_Int32 : GetRandomListItem<int>
		{
			[Token(Token = "0x60029DE")]
			[Address(RVA = "0xB15A00", Offset = "0xB15A00", VA = "0xB15A00")]
			public FlowCanvas_Nodes_GetRandomListItem_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000A20")]
		private class FlowCanvas_Nodes_GetRandomListItem_UnityEngine_Vector2 : GetRandomListItem<Vector2>
		{
			[Token(Token = "0x60029DF")]
			[Address(RVA = "0xB15F00", Offset = "0xB15F00", VA = "0xB15F00")]
			public FlowCanvas_Nodes_GetRandomListItem_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000A21")]
		private class FlowCanvas_Nodes_GetRandomListItem_UnityEngine_Vector3 : GetRandomListItem<Vector3>
		{
			[Token(Token = "0x60029E0")]
			[Address(RVA = "0xB15F50", Offset = "0xB15F50", VA = "0xB15F50")]
			public FlowCanvas_Nodes_GetRandomListItem_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000A22")]
		private class FlowCanvas_Nodes_GetRandomListItem_UnityEngine_Vector4 : GetRandomListItem<Vector4>
		{
			[Token(Token = "0x60029E1")]
			[Address(RVA = "0xB15FA0", Offset = "0xB15FA0", VA = "0xB15FA0")]
			public FlowCanvas_Nodes_GetRandomListItem_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x2000A23")]
		private class FlowCanvas_Nodes_GetRandomListItem_UnityEngine_Quaternion : GetRandomListItem<Quaternion>
		{
			[Token(Token = "0x60029E2")]
			[Address(RVA = "0xB15D20", Offset = "0xB15D20", VA = "0xB15D20")]
			public FlowCanvas_Nodes_GetRandomListItem_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000A24")]
		private class FlowCanvas_Nodes_GetRandomListItem_UnityEngine_Keyframe : GetRandomListItem<Keyframe>
		{
			[Token(Token = "0x60029E3")]
			[Address(RVA = "0xB15C80", Offset = "0xB15C80", VA = "0xB15C80")]
			public FlowCanvas_Nodes_GetRandomListItem_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000A25")]
		private class FlowCanvas_Nodes_GetRandomListItem_UnityEngine_Bounds : GetRandomListItem<Bounds>
		{
			[Token(Token = "0x60029E4")]
			[Address(RVA = "0xB15AA0", Offset = "0xB15AA0", VA = "0xB15AA0")]
			public FlowCanvas_Nodes_GetRandomListItem_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000A26")]
		private class FlowCanvas_Nodes_GetRandomListItem_UnityEngine_Color : GetRandomListItem<Color>
		{
			[Token(Token = "0x60029E5")]
			[Address(RVA = "0xB15B90", Offset = "0xB15B90", VA = "0xB15B90")]
			public FlowCanvas_Nodes_GetRandomListItem_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000A27")]
		private class FlowCanvas_Nodes_GetRandomListItem_UnityEngine_Rect : GetRandomListItem<Rect>
		{
			[Token(Token = "0x60029E6")]
			[Address(RVA = "0xB15E60", Offset = "0xB15E60", VA = "0xB15E60")]
			public FlowCanvas_Nodes_GetRandomListItem_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000A28")]
		private class FlowCanvas_Nodes_GetRandomListItem_UnityEngine_ContactPoint : GetRandomListItem<ContactPoint>
		{
			[Token(Token = "0x60029E7")]
			[Address(RVA = "0xB15BE0", Offset = "0xB15BE0", VA = "0xB15BE0")]
			public FlowCanvas_Nodes_GetRandomListItem_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000A29")]
		private class FlowCanvas_Nodes_GetRandomListItem_UnityEngine_ContactPoint2D : GetRandomListItem<ContactPoint2D>
		{
			[Token(Token = "0x60029E8")]
			[Address(RVA = "0xB15C30", Offset = "0xB15C30", VA = "0xB15C30")]
			public FlowCanvas_Nodes_GetRandomListItem_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000A2A")]
		private class FlowCanvas_Nodes_GetRandomListItem_UnityEngine_Collision : GetRandomListItem<Collision>
		{
			[Token(Token = "0x60029E9")]
			[Address(RVA = "0xB15AF0", Offset = "0xB15AF0", VA = "0xB15AF0")]
			public FlowCanvas_Nodes_GetRandomListItem_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x2000A2B")]
		private class FlowCanvas_Nodes_GetRandomListItem_UnityEngine_Collision2D : GetRandomListItem<Collision2D>
		{
			[Token(Token = "0x60029EA")]
			[Address(RVA = "0xB15B40", Offset = "0xB15B40", VA = "0xB15B40")]
			public FlowCanvas_Nodes_GetRandomListItem_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000A2C")]
		private class FlowCanvas_Nodes_GetRandomListItem_UnityEngine_RaycastHit : GetRandomListItem<RaycastHit>
		{
			[Token(Token = "0x60029EB")]
			[Address(RVA = "0xB15DC0", Offset = "0xB15DC0", VA = "0xB15DC0")]
			public FlowCanvas_Nodes_GetRandomListItem_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000A2D")]
		private class FlowCanvas_Nodes_GetRandomListItem_UnityEngine_RaycastHit2D : GetRandomListItem<RaycastHit2D>
		{
			[Token(Token = "0x60029EC")]
			[Address(RVA = "0xB15E10", Offset = "0xB15E10", VA = "0xB15E10")]
			public FlowCanvas_Nodes_GetRandomListItem_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000A2E")]
		private class FlowCanvas_Nodes_GetRandomListItem_UnityEngine_Ray : GetRandomListItem<Ray>
		{
			[Token(Token = "0x60029ED")]
			[Address(RVA = "0xB15D70", Offset = "0xB15D70", VA = "0xB15D70")]
			public FlowCanvas_Nodes_GetRandomListItem_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x2000A2F")]
		private class FlowCanvas_Nodes_GetRandomListItem_UnityEngine_Space : GetRandomListItem<Space>
		{
			[Token(Token = "0x60029EE")]
			[Address(RVA = "0xB15EB0", Offset = "0xB15EB0", VA = "0xB15EB0")]
			public FlowCanvas_Nodes_GetRandomListItem_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000A30")]
		private class FlowCanvas_Nodes_GetRandomListItem_ftg_DioramaFiveData_DioramaFiveKeys : GetRandomListItem<DioramaFiveData.DioramaFiveKeys>
		{
			[Token(Token = "0x60029EF")]
			[Address(RVA = "0xB15FF0", Offset = "0xB15FF0", VA = "0xB15FF0")]
			public FlowCanvas_Nodes_GetRandomListItem_ftg_DioramaFiveData_DioramaFiveKeys()
			{
			}
		}

		[Token(Token = "0x2000A31")]
		private class FlowCanvas_Nodes_GetRandomListItem_ftg_DioramaFourData_DioramaFourKeys : GetRandomListItem<DioramaFourData.DioramaFourKeys>
		{
			[Token(Token = "0x60029F0")]
			[Address(RVA = "0xB16040", Offset = "0xB16040", VA = "0xB16040")]
			public FlowCanvas_Nodes_GetRandomListItem_ftg_DioramaFourData_DioramaFourKeys()
			{
			}
		}

		[Token(Token = "0x2000A32")]
		private class FlowCanvas_Nodes_GetRandomListItem_ftg_DioramaOneData_DioramaOneKeys : GetRandomListItem<DioramaOneData.DioramaOneKeys>
		{
			[Token(Token = "0x60029F1")]
			[Address(RVA = "0xB16090", Offset = "0xB16090", VA = "0xB16090")]
			public FlowCanvas_Nodes_GetRandomListItem_ftg_DioramaOneData_DioramaOneKeys()
			{
			}
		}

		[Token(Token = "0x2000A33")]
		private class FlowCanvas_Nodes_GetRandomListItem_ftg_DioramaThreeData_DioramaThreeKeys : GetRandomListItem<DioramaThreeData.DioramaThreeKeys>
		{
			[Token(Token = "0x60029F2")]
			[Address(RVA = "0xB160E0", Offset = "0xB160E0", VA = "0xB160E0")]
			public FlowCanvas_Nodes_GetRandomListItem_ftg_DioramaThreeData_DioramaThreeKeys()
			{
			}
		}

		[Token(Token = "0x2000A34")]
		private class FlowCanvas_Nodes_GetRandomListItem_ftg_DioramaTwoData_DioramaTwoKeys : GetRandomListItem<DioramaTwoData.DioramaTwoKeys>
		{
			[Token(Token = "0x60029F3")]
			[Address(RVA = "0xB16130", Offset = "0xB16130", VA = "0xB16130")]
			public FlowCanvas_Nodes_GetRandomListItem_ftg_DioramaTwoData_DioramaTwoKeys()
			{
			}
		}

		[Token(Token = "0x2000A35")]
		private class FlowCanvas_Nodes_GetRandomListItem_ftg_SaveManager_DioramaWorlds : GetRandomListItem<SaveManager.DioramaWorlds>
		{
			[Token(Token = "0x60029F4")]
			[Address(RVA = "0xB16220", Offset = "0xB16220", VA = "0xB16220")]
			public FlowCanvas_Nodes_GetRandomListItem_ftg_SaveManager_DioramaWorlds()
			{
			}
		}

		[Token(Token = "0x2000A36")]
		private class FlowCanvas_Nodes_GetRandomListItem_ftg_HubRoomData_HubRoomKeys : GetRandomListItem<HubRoomData.HubRoomKeys>
		{
			[Token(Token = "0x60029F5")]
			[Address(RVA = "0xB16180", Offset = "0xB16180", VA = "0xB16180")]
			public FlowCanvas_Nodes_GetRandomListItem_ftg_HubRoomData_HubRoomKeys()
			{
			}
		}

		[Token(Token = "0x2000A37")]
		private class FlowCanvas_Nodes_GetRandomListItem_ftg_PersonaSettings_PersonaKeys : GetRandomListItem<PersonaSettings.PersonaKeys>
		{
			[Token(Token = "0x60029F6")]
			[Address(RVA = "0xB161D0", Offset = "0xB161D0", VA = "0xB161D0")]
			public FlowCanvas_Nodes_GetRandomListItem_ftg_PersonaSettings_PersonaKeys()
			{
			}
		}

		[Token(Token = "0x2000A38")]
		private class FlowCanvas_Nodes_GetRandomListItem_UnityEngine_LayerMask : GetRandomListItem<LayerMask>
		{
			[Token(Token = "0x60029F7")]
			[Address(RVA = "0xB15CD0", Offset = "0xB15CD0", VA = "0xB15CD0")]
			public FlowCanvas_Nodes_GetRandomListItem_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000A39")]
		private class FlowCanvas_Nodes_GetVariable_System_Boolean : GetVariable<bool>
		{
			[Token(Token = "0x60029F8")]
			[Address(RVA = "0xB16270", Offset = "0xB16270", VA = "0xB16270")]
			public FlowCanvas_Nodes_GetVariable_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000A3A")]
		private class FlowCanvas_Nodes_GetVariable_System_Single : GetVariable<float>
		{
			[Token(Token = "0x60029F9")]
			[Address(RVA = "0xB16310", Offset = "0xB16310", VA = "0xB16310")]
			public FlowCanvas_Nodes_GetVariable_System_Single()
			{
			}
		}

		[Token(Token = "0x2000A3B")]
		private class FlowCanvas_Nodes_GetVariable_System_Int32 : GetVariable<int>
		{
			[Token(Token = "0x60029FA")]
			[Address(RVA = "0xB162C0", Offset = "0xB162C0", VA = "0xB162C0")]
			public FlowCanvas_Nodes_GetVariable_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000A3C")]
		private class FlowCanvas_Nodes_GetVariable_UnityEngine_Vector2 : GetVariable<Vector2>
		{
			[Token(Token = "0x60029FB")]
			[Address(RVA = "0xB167C0", Offset = "0xB167C0", VA = "0xB167C0")]
			public FlowCanvas_Nodes_GetVariable_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000A3D")]
		private class FlowCanvas_Nodes_GetVariable_UnityEngine_Vector3 : GetVariable<Vector3>
		{
			[Token(Token = "0x60029FC")]
			[Address(RVA = "0xB16810", Offset = "0xB16810", VA = "0xB16810")]
			public FlowCanvas_Nodes_GetVariable_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000A3E")]
		private class FlowCanvas_Nodes_GetVariable_UnityEngine_Vector4 : GetVariable<Vector4>
		{
			[Token(Token = "0x60029FD")]
			[Address(RVA = "0xB16860", Offset = "0xB16860", VA = "0xB16860")]
			public FlowCanvas_Nodes_GetVariable_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x2000A3F")]
		private class FlowCanvas_Nodes_GetVariable_UnityEngine_Quaternion : GetVariable<Quaternion>
		{
			[Token(Token = "0x60029FE")]
			[Address(RVA = "0xB165E0", Offset = "0xB165E0", VA = "0xB165E0")]
			public FlowCanvas_Nodes_GetVariable_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000A40")]
		private class FlowCanvas_Nodes_GetVariable_UnityEngine_Keyframe : GetVariable<Keyframe>
		{
			[Token(Token = "0x60029FF")]
			[Address(RVA = "0xB16540", Offset = "0xB16540", VA = "0xB16540")]
			public FlowCanvas_Nodes_GetVariable_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000A41")]
		private class FlowCanvas_Nodes_GetVariable_UnityEngine_Bounds : GetVariable<Bounds>
		{
			[Token(Token = "0x6002A00")]
			[Address(RVA = "0xB16360", Offset = "0xB16360", VA = "0xB16360")]
			public FlowCanvas_Nodes_GetVariable_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000A42")]
		private class FlowCanvas_Nodes_GetVariable_UnityEngine_Color : GetVariable<Color>
		{
			[Token(Token = "0x6002A01")]
			[Address(RVA = "0xB16450", Offset = "0xB16450", VA = "0xB16450")]
			public FlowCanvas_Nodes_GetVariable_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000A43")]
		private class FlowCanvas_Nodes_GetVariable_UnityEngine_Rect : GetVariable<Rect>
		{
			[Token(Token = "0x6002A02")]
			[Address(RVA = "0xB16720", Offset = "0xB16720", VA = "0xB16720")]
			public FlowCanvas_Nodes_GetVariable_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000A44")]
		private class FlowCanvas_Nodes_GetVariable_UnityEngine_ContactPoint : GetVariable<ContactPoint>
		{
			[Token(Token = "0x6002A03")]
			[Address(RVA = "0xB164A0", Offset = "0xB164A0", VA = "0xB164A0")]
			public FlowCanvas_Nodes_GetVariable_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000A45")]
		private class FlowCanvas_Nodes_GetVariable_UnityEngine_ContactPoint2D : GetVariable<ContactPoint2D>
		{
			[Token(Token = "0x6002A04")]
			[Address(RVA = "0xB164F0", Offset = "0xB164F0", VA = "0xB164F0")]
			public FlowCanvas_Nodes_GetVariable_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000A46")]
		private class FlowCanvas_Nodes_GetVariable_UnityEngine_Collision : GetVariable<Collision>
		{
			[Token(Token = "0x6002A05")]
			[Address(RVA = "0xB163B0", Offset = "0xB163B0", VA = "0xB163B0")]
			public FlowCanvas_Nodes_GetVariable_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x2000A47")]
		private class FlowCanvas_Nodes_GetVariable_UnityEngine_Collision2D : GetVariable<Collision2D>
		{
			[Token(Token = "0x6002A06")]
			[Address(RVA = "0xB16400", Offset = "0xB16400", VA = "0xB16400")]
			public FlowCanvas_Nodes_GetVariable_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000A48")]
		private class FlowCanvas_Nodes_GetVariable_UnityEngine_RaycastHit : GetVariable<RaycastHit>
		{
			[Token(Token = "0x6002A07")]
			[Address(RVA = "0xB16680", Offset = "0xB16680", VA = "0xB16680")]
			public FlowCanvas_Nodes_GetVariable_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000A49")]
		private class FlowCanvas_Nodes_GetVariable_UnityEngine_RaycastHit2D : GetVariable<RaycastHit2D>
		{
			[Token(Token = "0x6002A08")]
			[Address(RVA = "0xB166D0", Offset = "0xB166D0", VA = "0xB166D0")]
			public FlowCanvas_Nodes_GetVariable_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000A4A")]
		private class FlowCanvas_Nodes_GetVariable_UnityEngine_Ray : GetVariable<Ray>
		{
			[Token(Token = "0x6002A09")]
			[Address(RVA = "0xB16630", Offset = "0xB16630", VA = "0xB16630")]
			public FlowCanvas_Nodes_GetVariable_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x2000A4B")]
		private class FlowCanvas_Nodes_GetVariable_UnityEngine_Space : GetVariable<Space>
		{
			[Token(Token = "0x6002A0A")]
			[Address(RVA = "0xB16770", Offset = "0xB16770", VA = "0xB16770")]
			public FlowCanvas_Nodes_GetVariable_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000A4C")]
		private class FlowCanvas_Nodes_GetVariable_ftg_DioramaFiveData_DioramaFiveKeys : GetVariable<DioramaFiveData.DioramaFiveKeys>
		{
			[Token(Token = "0x6002A0B")]
			[Address(RVA = "0xB168B0", Offset = "0xB168B0", VA = "0xB168B0")]
			public FlowCanvas_Nodes_GetVariable_ftg_DioramaFiveData_DioramaFiveKeys()
			{
			}
		}

		[Token(Token = "0x2000A4D")]
		private class FlowCanvas_Nodes_GetVariable_ftg_DioramaFourData_DioramaFourKeys : GetVariable<DioramaFourData.DioramaFourKeys>
		{
			[Token(Token = "0x6002A0C")]
			[Address(RVA = "0xB16900", Offset = "0xB16900", VA = "0xB16900")]
			public FlowCanvas_Nodes_GetVariable_ftg_DioramaFourData_DioramaFourKeys()
			{
			}
		}

		[Token(Token = "0x2000A4E")]
		private class FlowCanvas_Nodes_GetVariable_ftg_DioramaOneData_DioramaOneKeys : GetVariable<DioramaOneData.DioramaOneKeys>
		{
			[Token(Token = "0x6002A0D")]
			[Address(RVA = "0xB16950", Offset = "0xB16950", VA = "0xB16950")]
			public FlowCanvas_Nodes_GetVariable_ftg_DioramaOneData_DioramaOneKeys()
			{
			}
		}

		[Token(Token = "0x2000A4F")]
		private class FlowCanvas_Nodes_GetVariable_ftg_DioramaThreeData_DioramaThreeKeys : GetVariable<DioramaThreeData.DioramaThreeKeys>
		{
			[Token(Token = "0x6002A0E")]
			[Address(RVA = "0xB169A0", Offset = "0xB169A0", VA = "0xB169A0")]
			public FlowCanvas_Nodes_GetVariable_ftg_DioramaThreeData_DioramaThreeKeys()
			{
			}
		}

		[Token(Token = "0x2000A50")]
		private class FlowCanvas_Nodes_GetVariable_ftg_DioramaTwoData_DioramaTwoKeys : GetVariable<DioramaTwoData.DioramaTwoKeys>
		{
			[Token(Token = "0x6002A0F")]
			[Address(RVA = "0xB169F0", Offset = "0xB169F0", VA = "0xB169F0")]
			public FlowCanvas_Nodes_GetVariable_ftg_DioramaTwoData_DioramaTwoKeys()
			{
			}
		}

		[Token(Token = "0x2000A51")]
		private class FlowCanvas_Nodes_GetVariable_ftg_SaveManager_DioramaWorlds : GetVariable<SaveManager.DioramaWorlds>
		{
			[Token(Token = "0x6002A10")]
			[Address(RVA = "0xB16AE0", Offset = "0xB16AE0", VA = "0xB16AE0")]
			public FlowCanvas_Nodes_GetVariable_ftg_SaveManager_DioramaWorlds()
			{
			}
		}

		[Token(Token = "0x2000A52")]
		private class FlowCanvas_Nodes_GetVariable_ftg_HubRoomData_HubRoomKeys : GetVariable<HubRoomData.HubRoomKeys>
		{
			[Token(Token = "0x6002A11")]
			[Address(RVA = "0xB16A40", Offset = "0xB16A40", VA = "0xB16A40")]
			public FlowCanvas_Nodes_GetVariable_ftg_HubRoomData_HubRoomKeys()
			{
			}
		}

		[Token(Token = "0x2000A53")]
		private class FlowCanvas_Nodes_GetVariable_ftg_PersonaSettings_PersonaKeys : GetVariable<PersonaSettings.PersonaKeys>
		{
			[Token(Token = "0x6002A12")]
			[Address(RVA = "0xB16A90", Offset = "0xB16A90", VA = "0xB16A90")]
			public FlowCanvas_Nodes_GetVariable_ftg_PersonaSettings_PersonaKeys()
			{
			}
		}

		[Token(Token = "0x2000A54")]
		private class FlowCanvas_Nodes_GetVariable_UnityEngine_LayerMask : GetVariable<LayerMask>
		{
			[Token(Token = "0x6002A13")]
			[Address(RVA = "0xB16590", Offset = "0xB16590", VA = "0xB16590")]
			public FlowCanvas_Nodes_GetVariable_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000A55")]
		private class FlowCanvas_Nodes_Identity_System_Boolean : Identity<bool>
		{
			[Token(Token = "0x6002A14")]
			[Address(RVA = "0xB16B30", Offset = "0xB16B30", VA = "0xB16B30")]
			public FlowCanvas_Nodes_Identity_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000A56")]
		private class FlowCanvas_Nodes_Identity_System_Single : Identity<float>
		{
			[Token(Token = "0x6002A15")]
			[Address(RVA = "0xB16BD0", Offset = "0xB16BD0", VA = "0xB16BD0")]
			public FlowCanvas_Nodes_Identity_System_Single()
			{
			}
		}

		[Token(Token = "0x2000A57")]
		private class FlowCanvas_Nodes_Identity_System_Int32 : Identity<int>
		{
			[Token(Token = "0x6002A16")]
			[Address(RVA = "0xB16B80", Offset = "0xB16B80", VA = "0xB16B80")]
			public FlowCanvas_Nodes_Identity_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000A58")]
		private class FlowCanvas_Nodes_Identity_UnityEngine_Vector2 : Identity<Vector2>
		{
			[Token(Token = "0x6002A17")]
			[Address(RVA = "0xB17080", Offset = "0xB17080", VA = "0xB17080")]
			public FlowCanvas_Nodes_Identity_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000A59")]
		private class FlowCanvas_Nodes_Identity_UnityEngine_Vector3 : Identity<Vector3>
		{
			[Token(Token = "0x6002A18")]
			[Address(RVA = "0xB170D0", Offset = "0xB170D0", VA = "0xB170D0")]
			public FlowCanvas_Nodes_Identity_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000A5A")]
		private class FlowCanvas_Nodes_Identity_UnityEngine_Vector4 : Identity<Vector4>
		{
			[Token(Token = "0x6002A19")]
			[Address(RVA = "0xB17120", Offset = "0xB17120", VA = "0xB17120")]
			public FlowCanvas_Nodes_Identity_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x2000A5B")]
		private class FlowCanvas_Nodes_Identity_UnityEngine_Quaternion : Identity<Quaternion>
		{
			[Token(Token = "0x6002A1A")]
			[Address(RVA = "0xB16EA0", Offset = "0xB16EA0", VA = "0xB16EA0")]
			public FlowCanvas_Nodes_Identity_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000A5C")]
		private class FlowCanvas_Nodes_Identity_UnityEngine_Keyframe : Identity<Keyframe>
		{
			[Token(Token = "0x6002A1B")]
			[Address(RVA = "0xB16E00", Offset = "0xB16E00", VA = "0xB16E00")]
			public FlowCanvas_Nodes_Identity_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000A5D")]
		private class FlowCanvas_Nodes_Identity_UnityEngine_Bounds : Identity<Bounds>
		{
			[Token(Token = "0x6002A1C")]
			[Address(RVA = "0xB16C20", Offset = "0xB16C20", VA = "0xB16C20")]
			public FlowCanvas_Nodes_Identity_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000A5E")]
		private class FlowCanvas_Nodes_Identity_UnityEngine_Color : Identity<Color>
		{
			[Token(Token = "0x6002A1D")]
			[Address(RVA = "0xB16D10", Offset = "0xB16D10", VA = "0xB16D10")]
			public FlowCanvas_Nodes_Identity_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000A5F")]
		private class FlowCanvas_Nodes_Identity_UnityEngine_Rect : Identity<Rect>
		{
			[Token(Token = "0x6002A1E")]
			[Address(RVA = "0xB16FE0", Offset = "0xB16FE0", VA = "0xB16FE0")]
			public FlowCanvas_Nodes_Identity_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000A60")]
		private class FlowCanvas_Nodes_Identity_UnityEngine_ContactPoint : Identity<ContactPoint>
		{
			[Token(Token = "0x6002A1F")]
			[Address(RVA = "0xB16D60", Offset = "0xB16D60", VA = "0xB16D60")]
			public FlowCanvas_Nodes_Identity_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000A61")]
		private class FlowCanvas_Nodes_Identity_UnityEngine_ContactPoint2D : Identity<ContactPoint2D>
		{
			[Token(Token = "0x6002A20")]
			[Address(RVA = "0xB16DB0", Offset = "0xB16DB0", VA = "0xB16DB0")]
			public FlowCanvas_Nodes_Identity_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000A62")]
		private class FlowCanvas_Nodes_Identity_UnityEngine_Collision : Identity<Collision>
		{
			[Token(Token = "0x6002A21")]
			[Address(RVA = "0xB16C70", Offset = "0xB16C70", VA = "0xB16C70")]
			public FlowCanvas_Nodes_Identity_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x2000A63")]
		private class FlowCanvas_Nodes_Identity_UnityEngine_Collision2D : Identity<Collision2D>
		{
			[Token(Token = "0x6002A22")]
			[Address(RVA = "0xB16CC0", Offset = "0xB16CC0", VA = "0xB16CC0")]
			public FlowCanvas_Nodes_Identity_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000A64")]
		private class FlowCanvas_Nodes_Identity_UnityEngine_RaycastHit : Identity<RaycastHit>
		{
			[Token(Token = "0x6002A23")]
			[Address(RVA = "0xB16F40", Offset = "0xB16F40", VA = "0xB16F40")]
			public FlowCanvas_Nodes_Identity_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000A65")]
		private class FlowCanvas_Nodes_Identity_UnityEngine_RaycastHit2D : Identity<RaycastHit2D>
		{
			[Token(Token = "0x6002A24")]
			[Address(RVA = "0xB16F90", Offset = "0xB16F90", VA = "0xB16F90")]
			public FlowCanvas_Nodes_Identity_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000A66")]
		private class FlowCanvas_Nodes_Identity_UnityEngine_Ray : Identity<Ray>
		{
			[Token(Token = "0x6002A25")]
			[Address(RVA = "0xB16EF0", Offset = "0xB16EF0", VA = "0xB16EF0")]
			public FlowCanvas_Nodes_Identity_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x2000A67")]
		private class FlowCanvas_Nodes_Identity_UnityEngine_Space : Identity<Space>
		{
			[Token(Token = "0x6002A26")]
			[Address(RVA = "0xB17030", Offset = "0xB17030", VA = "0xB17030")]
			public FlowCanvas_Nodes_Identity_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000A68")]
		private class FlowCanvas_Nodes_Identity_ftg_DioramaFiveData_DioramaFiveKeys : Identity<DioramaFiveData.DioramaFiveKeys>
		{
			[Token(Token = "0x6002A27")]
			[Address(RVA = "0xB17170", Offset = "0xB17170", VA = "0xB17170")]
			public FlowCanvas_Nodes_Identity_ftg_DioramaFiveData_DioramaFiveKeys()
			{
			}
		}

		[Token(Token = "0x2000A69")]
		private class FlowCanvas_Nodes_Identity_ftg_DioramaFourData_DioramaFourKeys : Identity<DioramaFourData.DioramaFourKeys>
		{
			[Token(Token = "0x6002A28")]
			[Address(RVA = "0xB171C0", Offset = "0xB171C0", VA = "0xB171C0")]
			public FlowCanvas_Nodes_Identity_ftg_DioramaFourData_DioramaFourKeys()
			{
			}
		}

		[Token(Token = "0x2000A6A")]
		private class FlowCanvas_Nodes_Identity_ftg_DioramaOneData_DioramaOneKeys : Identity<DioramaOneData.DioramaOneKeys>
		{
			[Token(Token = "0x6002A29")]
			[Address(RVA = "0xB17210", Offset = "0xB17210", VA = "0xB17210")]
			public FlowCanvas_Nodes_Identity_ftg_DioramaOneData_DioramaOneKeys()
			{
			}
		}

		[Token(Token = "0x2000A6B")]
		private class FlowCanvas_Nodes_Identity_ftg_DioramaThreeData_DioramaThreeKeys : Identity<DioramaThreeData.DioramaThreeKeys>
		{
			[Token(Token = "0x6002A2A")]
			[Address(RVA = "0xB17260", Offset = "0xB17260", VA = "0xB17260")]
			public FlowCanvas_Nodes_Identity_ftg_DioramaThreeData_DioramaThreeKeys()
			{
			}
		}

		[Token(Token = "0x2000A6C")]
		private class FlowCanvas_Nodes_Identity_ftg_DioramaTwoData_DioramaTwoKeys : Identity<DioramaTwoData.DioramaTwoKeys>
		{
			[Token(Token = "0x6002A2B")]
			[Address(RVA = "0xB172B0", Offset = "0xB172B0", VA = "0xB172B0")]
			public FlowCanvas_Nodes_Identity_ftg_DioramaTwoData_DioramaTwoKeys()
			{
			}
		}

		[Token(Token = "0x2000A6D")]
		private class FlowCanvas_Nodes_Identity_ftg_SaveManager_DioramaWorlds : Identity<SaveManager.DioramaWorlds>
		{
			[Token(Token = "0x6002A2C")]
			[Address(RVA = "0xB173A0", Offset = "0xB173A0", VA = "0xB173A0")]
			public FlowCanvas_Nodes_Identity_ftg_SaveManager_DioramaWorlds()
			{
			}
		}

		[Token(Token = "0x2000A6E")]
		private class FlowCanvas_Nodes_Identity_ftg_HubRoomData_HubRoomKeys : Identity<HubRoomData.HubRoomKeys>
		{
			[Token(Token = "0x6002A2D")]
			[Address(RVA = "0xB17300", Offset = "0xB17300", VA = "0xB17300")]
			public FlowCanvas_Nodes_Identity_ftg_HubRoomData_HubRoomKeys()
			{
			}
		}

		[Token(Token = "0x2000A6F")]
		private class FlowCanvas_Nodes_Identity_ftg_PersonaSettings_PersonaKeys : Identity<PersonaSettings.PersonaKeys>
		{
			[Token(Token = "0x6002A2E")]
			[Address(RVA = "0xB17350", Offset = "0xB17350", VA = "0xB17350")]
			public FlowCanvas_Nodes_Identity_ftg_PersonaSettings_PersonaKeys()
			{
			}
		}

		[Token(Token = "0x2000A70")]
		private class FlowCanvas_Nodes_Identity_UnityEngine_LayerMask : Identity<LayerMask>
		{
			[Token(Token = "0x6002A2F")]
			[Address(RVA = "0xB16E50", Offset = "0xB16E50", VA = "0xB16E50")]
			public FlowCanvas_Nodes_Identity_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000A71")]
		private class FlowCanvas_Nodes_InsertListItem_System_Boolean : InsertListItem<bool>
		{
			[Token(Token = "0x6002A30")]
			[Address(RVA = "0xB173F0", Offset = "0xB173F0", VA = "0xB173F0")]
			public FlowCanvas_Nodes_InsertListItem_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000A72")]
		private class FlowCanvas_Nodes_InsertListItem_System_Single : InsertListItem<float>
		{
			[Token(Token = "0x6002A31")]
			[Address(RVA = "0xB17490", Offset = "0xB17490", VA = "0xB17490")]
			public FlowCanvas_Nodes_InsertListItem_System_Single()
			{
			}
		}

		[Token(Token = "0x2000A73")]
		private class FlowCanvas_Nodes_InsertListItem_System_Int32 : InsertListItem<int>
		{
			[Token(Token = "0x6002A32")]
			[Address(RVA = "0xB17440", Offset = "0xB17440", VA = "0xB17440")]
			public FlowCanvas_Nodes_InsertListItem_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000A74")]
		private class FlowCanvas_Nodes_InsertListItem_UnityEngine_Vector2 : InsertListItem<Vector2>
		{
			[Token(Token = "0x6002A33")]
			[Address(RVA = "0xB17940", Offset = "0xB17940", VA = "0xB17940")]
			public FlowCanvas_Nodes_InsertListItem_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000A75")]
		private class FlowCanvas_Nodes_InsertListItem_UnityEngine_Vector3 : InsertListItem<Vector3>
		{
			[Token(Token = "0x6002A34")]
			[Address(RVA = "0xB17990", Offset = "0xB17990", VA = "0xB17990")]
			public FlowCanvas_Nodes_InsertListItem_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000A76")]
		private class FlowCanvas_Nodes_InsertListItem_UnityEngine_Vector4 : InsertListItem<Vector4>
		{
			[Token(Token = "0x6002A35")]
			[Address(RVA = "0xB179E0", Offset = "0xB179E0", VA = "0xB179E0")]
			public FlowCanvas_Nodes_InsertListItem_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x2000A77")]
		private class FlowCanvas_Nodes_InsertListItem_UnityEngine_Quaternion : InsertListItem<Quaternion>
		{
			[Token(Token = "0x6002A36")]
			[Address(RVA = "0xB17760", Offset = "0xB17760", VA = "0xB17760")]
			public FlowCanvas_Nodes_InsertListItem_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000A78")]
		private class FlowCanvas_Nodes_InsertListItem_UnityEngine_Keyframe : InsertListItem<Keyframe>
		{
			[Token(Token = "0x6002A37")]
			[Address(RVA = "0xB176C0", Offset = "0xB176C0", VA = "0xB176C0")]
			public FlowCanvas_Nodes_InsertListItem_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000A79")]
		private class FlowCanvas_Nodes_InsertListItem_UnityEngine_Bounds : InsertListItem<Bounds>
		{
			[Token(Token = "0x6002A38")]
			[Address(RVA = "0xB174E0", Offset = "0xB174E0", VA = "0xB174E0")]
			public FlowCanvas_Nodes_InsertListItem_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000A7A")]
		private class FlowCanvas_Nodes_InsertListItem_UnityEngine_Color : InsertListItem<Color>
		{
			[Token(Token = "0x6002A39")]
			[Address(RVA = "0xB175D0", Offset = "0xB175D0", VA = "0xB175D0")]
			public FlowCanvas_Nodes_InsertListItem_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000A7B")]
		private class FlowCanvas_Nodes_InsertListItem_UnityEngine_Rect : InsertListItem<Rect>
		{
			[Token(Token = "0x6002A3A")]
			[Address(RVA = "0xB178A0", Offset = "0xB178A0", VA = "0xB178A0")]
			public FlowCanvas_Nodes_InsertListItem_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000A7C")]
		private class FlowCanvas_Nodes_InsertListItem_UnityEngine_ContactPoint : InsertListItem<ContactPoint>
		{
			[Token(Token = "0x6002A3B")]
			[Address(RVA = "0xB17620", Offset = "0xB17620", VA = "0xB17620")]
			public FlowCanvas_Nodes_InsertListItem_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000A7D")]
		private class FlowCanvas_Nodes_InsertListItem_UnityEngine_ContactPoint2D : InsertListItem<ContactPoint2D>
		{
			[Token(Token = "0x6002A3C")]
			[Address(RVA = "0xB17670", Offset = "0xB17670", VA = "0xB17670")]
			public FlowCanvas_Nodes_InsertListItem_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000A7E")]
		private class FlowCanvas_Nodes_InsertListItem_UnityEngine_Collision : InsertListItem<Collision>
		{
			[Token(Token = "0x6002A3D")]
			[Address(RVA = "0xB17530", Offset = "0xB17530", VA = "0xB17530")]
			public FlowCanvas_Nodes_InsertListItem_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x2000A7F")]
		private class FlowCanvas_Nodes_InsertListItem_UnityEngine_Collision2D : InsertListItem<Collision2D>
		{
			[Token(Token = "0x6002A3E")]
			[Address(RVA = "0xB17580", Offset = "0xB17580", VA = "0xB17580")]
			public FlowCanvas_Nodes_InsertListItem_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000A80")]
		private class FlowCanvas_Nodes_InsertListItem_UnityEngine_RaycastHit : InsertListItem<RaycastHit>
		{
			[Token(Token = "0x6002A3F")]
			[Address(RVA = "0xB17800", Offset = "0xB17800", VA = "0xB17800")]
			public FlowCanvas_Nodes_InsertListItem_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000A81")]
		private class FlowCanvas_Nodes_InsertListItem_UnityEngine_RaycastHit2D : InsertListItem<RaycastHit2D>
		{
			[Token(Token = "0x6002A40")]
			[Address(RVA = "0xB17850", Offset = "0xB17850", VA = "0xB17850")]
			public FlowCanvas_Nodes_InsertListItem_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000A82")]
		private class FlowCanvas_Nodes_InsertListItem_UnityEngine_Ray : InsertListItem<Ray>
		{
			[Token(Token = "0x6002A41")]
			[Address(RVA = "0xB177B0", Offset = "0xB177B0", VA = "0xB177B0")]
			public FlowCanvas_Nodes_InsertListItem_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x2000A83")]
		private class FlowCanvas_Nodes_InsertListItem_UnityEngine_Space : InsertListItem<Space>
		{
			[Token(Token = "0x6002A42")]
			[Address(RVA = "0xB178F0", Offset = "0xB178F0", VA = "0xB178F0")]
			public FlowCanvas_Nodes_InsertListItem_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000A84")]
		private class FlowCanvas_Nodes_InsertListItem_ftg_DioramaFiveData_DioramaFiveKeys : InsertListItem<DioramaFiveData.DioramaFiveKeys>
		{
			[Token(Token = "0x6002A43")]
			[Address(RVA = "0xB17A30", Offset = "0xB17A30", VA = "0xB17A30")]
			public FlowCanvas_Nodes_InsertListItem_ftg_DioramaFiveData_DioramaFiveKeys()
			{
			}
		}

		[Token(Token = "0x2000A85")]
		private class FlowCanvas_Nodes_InsertListItem_ftg_DioramaFourData_DioramaFourKeys : InsertListItem<DioramaFourData.DioramaFourKeys>
		{
			[Token(Token = "0x6002A44")]
			[Address(RVA = "0xB17A80", Offset = "0xB17A80", VA = "0xB17A80")]
			public FlowCanvas_Nodes_InsertListItem_ftg_DioramaFourData_DioramaFourKeys()
			{
			}
		}

		[Token(Token = "0x2000A86")]
		private class FlowCanvas_Nodes_InsertListItem_ftg_DioramaOneData_DioramaOneKeys : InsertListItem<DioramaOneData.DioramaOneKeys>
		{
			[Token(Token = "0x6002A45")]
			[Address(RVA = "0xB17AD0", Offset = "0xB17AD0", VA = "0xB17AD0")]
			public FlowCanvas_Nodes_InsertListItem_ftg_DioramaOneData_DioramaOneKeys()
			{
			}
		}

		[Token(Token = "0x2000A87")]
		private class FlowCanvas_Nodes_InsertListItem_ftg_DioramaThreeData_DioramaThreeKeys : InsertListItem<DioramaThreeData.DioramaThreeKeys>
		{
			[Token(Token = "0x6002A46")]
			[Address(RVA = "0xB17B20", Offset = "0xB17B20", VA = "0xB17B20")]
			public FlowCanvas_Nodes_InsertListItem_ftg_DioramaThreeData_DioramaThreeKeys()
			{
			}
		}

		[Token(Token = "0x2000A88")]
		private class FlowCanvas_Nodes_InsertListItem_ftg_DioramaTwoData_DioramaTwoKeys : InsertListItem<DioramaTwoData.DioramaTwoKeys>
		{
			[Token(Token = "0x6002A47")]
			[Address(RVA = "0xB17B70", Offset = "0xB17B70", VA = "0xB17B70")]
			public FlowCanvas_Nodes_InsertListItem_ftg_DioramaTwoData_DioramaTwoKeys()
			{
			}
		}

		[Token(Token = "0x2000A89")]
		private class FlowCanvas_Nodes_InsertListItem_ftg_SaveManager_DioramaWorlds : InsertListItem<SaveManager.DioramaWorlds>
		{
			[Token(Token = "0x6002A48")]
			[Address(RVA = "0xB17C60", Offset = "0xB17C60", VA = "0xB17C60")]
			public FlowCanvas_Nodes_InsertListItem_ftg_SaveManager_DioramaWorlds()
			{
			}
		}

		[Token(Token = "0x2000A8A")]
		private class FlowCanvas_Nodes_InsertListItem_ftg_HubRoomData_HubRoomKeys : InsertListItem<HubRoomData.HubRoomKeys>
		{
			[Token(Token = "0x6002A49")]
			[Address(RVA = "0xB17BC0", Offset = "0xB17BC0", VA = "0xB17BC0")]
			public FlowCanvas_Nodes_InsertListItem_ftg_HubRoomData_HubRoomKeys()
			{
			}
		}

		[Token(Token = "0x2000A8B")]
		private class FlowCanvas_Nodes_InsertListItem_ftg_PersonaSettings_PersonaKeys : InsertListItem<PersonaSettings.PersonaKeys>
		{
			[Token(Token = "0x6002A4A")]
			[Address(RVA = "0xB17C10", Offset = "0xB17C10", VA = "0xB17C10")]
			public FlowCanvas_Nodes_InsertListItem_ftg_PersonaSettings_PersonaKeys()
			{
			}
		}

		[Token(Token = "0x2000A8C")]
		private class FlowCanvas_Nodes_InsertListItem_UnityEngine_LayerMask : InsertListItem<LayerMask>
		{
			[Token(Token = "0x6002A4B")]
			[Address(RVA = "0xB17710", Offset = "0xB17710", VA = "0xB17710")]
			public FlowCanvas_Nodes_InsertListItem_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000A8D")]
		private class FlowCanvas_Nodes_PickValue_System_Boolean : PickValue<bool>
		{
			[Token(Token = "0x6002A4C")]
			[Address(RVA = "0xB17CB0", Offset = "0xB17CB0", VA = "0xB17CB0")]
			public FlowCanvas_Nodes_PickValue_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000A8E")]
		private class FlowCanvas_Nodes_PickValue_System_Single : PickValue<float>
		{
			[Token(Token = "0x6002A4D")]
			[Address(RVA = "0xB17D50", Offset = "0xB17D50", VA = "0xB17D50")]
			public FlowCanvas_Nodes_PickValue_System_Single()
			{
			}
		}

		[Token(Token = "0x2000A8F")]
		private class FlowCanvas_Nodes_PickValue_System_Int32 : PickValue<int>
		{
			[Token(Token = "0x6002A4E")]
			[Address(RVA = "0xB17D00", Offset = "0xB17D00", VA = "0xB17D00")]
			public FlowCanvas_Nodes_PickValue_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000A90")]
		private class FlowCanvas_Nodes_PickValue_UnityEngine_Vector2 : PickValue<Vector2>
		{
			[Token(Token = "0x6002A4F")]
			[Address(RVA = "0xB18200", Offset = "0xB18200", VA = "0xB18200")]
			public FlowCanvas_Nodes_PickValue_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000A91")]
		private class FlowCanvas_Nodes_PickValue_UnityEngine_Vector3 : PickValue<Vector3>
		{
			[Token(Token = "0x6002A50")]
			[Address(RVA = "0xB18250", Offset = "0xB18250", VA = "0xB18250")]
			public FlowCanvas_Nodes_PickValue_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000A92")]
		private class FlowCanvas_Nodes_PickValue_UnityEngine_Vector4 : PickValue<Vector4>
		{
			[Token(Token = "0x6002A51")]
			[Address(RVA = "0xB182A0", Offset = "0xB182A0", VA = "0xB182A0")]
			public FlowCanvas_Nodes_PickValue_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x2000A93")]
		private class FlowCanvas_Nodes_PickValue_UnityEngine_Quaternion : PickValue<Quaternion>
		{
			[Token(Token = "0x6002A52")]
			[Address(RVA = "0xB18020", Offset = "0xB18020", VA = "0xB18020")]
			public FlowCanvas_Nodes_PickValue_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000A94")]
		private class FlowCanvas_Nodes_PickValue_UnityEngine_Keyframe : PickValue<Keyframe>
		{
			[Token(Token = "0x6002A53")]
			[Address(RVA = "0xB17F80", Offset = "0xB17F80", VA = "0xB17F80")]
			public FlowCanvas_Nodes_PickValue_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000A95")]
		private class FlowCanvas_Nodes_PickValue_UnityEngine_Bounds : PickValue<Bounds>
		{
			[Token(Token = "0x6002A54")]
			[Address(RVA = "0xB17DA0", Offset = "0xB17DA0", VA = "0xB17DA0")]
			public FlowCanvas_Nodes_PickValue_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000A96")]
		private class FlowCanvas_Nodes_PickValue_UnityEngine_Color : PickValue<Color>
		{
			[Token(Token = "0x6002A55")]
			[Address(RVA = "0xB17E90", Offset = "0xB17E90", VA = "0xB17E90")]
			public FlowCanvas_Nodes_PickValue_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000A97")]
		private class FlowCanvas_Nodes_PickValue_UnityEngine_Rect : PickValue<Rect>
		{
			[Token(Token = "0x6002A56")]
			[Address(RVA = "0xB18160", Offset = "0xB18160", VA = "0xB18160")]
			public FlowCanvas_Nodes_PickValue_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000A98")]
		private class FlowCanvas_Nodes_PickValue_UnityEngine_ContactPoint : PickValue<ContactPoint>
		{
			[Token(Token = "0x6002A57")]
			[Address(RVA = "0xB17EE0", Offset = "0xB17EE0", VA = "0xB17EE0")]
			public FlowCanvas_Nodes_PickValue_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000A99")]
		private class FlowCanvas_Nodes_PickValue_UnityEngine_ContactPoint2D : PickValue<ContactPoint2D>
		{
			[Token(Token = "0x6002A58")]
			[Address(RVA = "0xB17F30", Offset = "0xB17F30", VA = "0xB17F30")]
			public FlowCanvas_Nodes_PickValue_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000A9A")]
		private class FlowCanvas_Nodes_PickValue_UnityEngine_Collision : PickValue<Collision>
		{
			[Token(Token = "0x6002A59")]
			[Address(RVA = "0xB17DF0", Offset = "0xB17DF0", VA = "0xB17DF0")]
			public FlowCanvas_Nodes_PickValue_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x2000A9B")]
		private class FlowCanvas_Nodes_PickValue_UnityEngine_Collision2D : PickValue<Collision2D>
		{
			[Token(Token = "0x6002A5A")]
			[Address(RVA = "0xB17E40", Offset = "0xB17E40", VA = "0xB17E40")]
			public FlowCanvas_Nodes_PickValue_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000A9C")]
		private class FlowCanvas_Nodes_PickValue_UnityEngine_RaycastHit : PickValue<RaycastHit>
		{
			[Token(Token = "0x6002A5B")]
			[Address(RVA = "0xB180C0", Offset = "0xB180C0", VA = "0xB180C0")]
			public FlowCanvas_Nodes_PickValue_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000A9D")]
		private class FlowCanvas_Nodes_PickValue_UnityEngine_RaycastHit2D : PickValue<RaycastHit2D>
		{
			[Token(Token = "0x6002A5C")]
			[Address(RVA = "0xB18110", Offset = "0xB18110", VA = "0xB18110")]
			public FlowCanvas_Nodes_PickValue_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000A9E")]
		private class FlowCanvas_Nodes_PickValue_UnityEngine_Ray : PickValue<Ray>
		{
			[Token(Token = "0x6002A5D")]
			[Address(RVA = "0xB18070", Offset = "0xB18070", VA = "0xB18070")]
			public FlowCanvas_Nodes_PickValue_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x2000A9F")]
		private class FlowCanvas_Nodes_PickValue_UnityEngine_Space : PickValue<Space>
		{
			[Token(Token = "0x6002A5E")]
			[Address(RVA = "0xB181B0", Offset = "0xB181B0", VA = "0xB181B0")]
			public FlowCanvas_Nodes_PickValue_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000AA0")]
		private class FlowCanvas_Nodes_PickValue_ftg_DioramaFiveData_DioramaFiveKeys : PickValue<DioramaFiveData.DioramaFiveKeys>
		{
			[Token(Token = "0x6002A5F")]
			[Address(RVA = "0xB182F0", Offset = "0xB182F0", VA = "0xB182F0")]
			public FlowCanvas_Nodes_PickValue_ftg_DioramaFiveData_DioramaFiveKeys()
			{
			}
		}

		[Token(Token = "0x2000AA1")]
		private class FlowCanvas_Nodes_PickValue_ftg_DioramaFourData_DioramaFourKeys : PickValue<DioramaFourData.DioramaFourKeys>
		{
			[Token(Token = "0x6002A60")]
			[Address(RVA = "0xB18340", Offset = "0xB18340", VA = "0xB18340")]
			public FlowCanvas_Nodes_PickValue_ftg_DioramaFourData_DioramaFourKeys()
			{
			}
		}

		[Token(Token = "0x2000AA2")]
		private class FlowCanvas_Nodes_PickValue_ftg_DioramaOneData_DioramaOneKeys : PickValue<DioramaOneData.DioramaOneKeys>
		{
			[Token(Token = "0x6002A61")]
			[Address(RVA = "0xB18390", Offset = "0xB18390", VA = "0xB18390")]
			public FlowCanvas_Nodes_PickValue_ftg_DioramaOneData_DioramaOneKeys()
			{
			}
		}

		[Token(Token = "0x2000AA3")]
		private class FlowCanvas_Nodes_PickValue_ftg_DioramaThreeData_DioramaThreeKeys : PickValue<DioramaThreeData.DioramaThreeKeys>
		{
			[Token(Token = "0x6002A62")]
			[Address(RVA = "0xB183E0", Offset = "0xB183E0", VA = "0xB183E0")]
			public FlowCanvas_Nodes_PickValue_ftg_DioramaThreeData_DioramaThreeKeys()
			{
			}
		}

		[Token(Token = "0x2000AA4")]
		private class FlowCanvas_Nodes_PickValue_ftg_DioramaTwoData_DioramaTwoKeys : PickValue<DioramaTwoData.DioramaTwoKeys>
		{
			[Token(Token = "0x6002A63")]
			[Address(RVA = "0xB18430", Offset = "0xB18430", VA = "0xB18430")]
			public FlowCanvas_Nodes_PickValue_ftg_DioramaTwoData_DioramaTwoKeys()
			{
			}
		}

		[Token(Token = "0x2000AA5")]
		private class FlowCanvas_Nodes_PickValue_ftg_SaveManager_DioramaWorlds : PickValue<SaveManager.DioramaWorlds>
		{
			[Token(Token = "0x6002A64")]
			[Address(RVA = "0xB18520", Offset = "0xB18520", VA = "0xB18520")]
			public FlowCanvas_Nodes_PickValue_ftg_SaveManager_DioramaWorlds()
			{
			}
		}

		[Token(Token = "0x2000AA6")]
		private class FlowCanvas_Nodes_PickValue_ftg_HubRoomData_HubRoomKeys : PickValue<HubRoomData.HubRoomKeys>
		{
			[Token(Token = "0x6002A65")]
			[Address(RVA = "0xB18480", Offset = "0xB18480", VA = "0xB18480")]
			public FlowCanvas_Nodes_PickValue_ftg_HubRoomData_HubRoomKeys()
			{
			}
		}

		[Token(Token = "0x2000AA7")]
		private class FlowCanvas_Nodes_PickValue_ftg_PersonaSettings_PersonaKeys : PickValue<PersonaSettings.PersonaKeys>
		{
			[Token(Token = "0x6002A66")]
			[Address(RVA = "0xB184D0", Offset = "0xB184D0", VA = "0xB184D0")]
			public FlowCanvas_Nodes_PickValue_ftg_PersonaSettings_PersonaKeys()
			{
			}
		}

		[Token(Token = "0x2000AA8")]
		private class FlowCanvas_Nodes_PickValue_UnityEngine_LayerMask : PickValue<LayerMask>
		{
			[Token(Token = "0x6002A67")]
			[Address(RVA = "0xB17FD0", Offset = "0xB17FD0", VA = "0xB17FD0")]
			public FlowCanvas_Nodes_PickValue_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000AA9")]
		private class FlowCanvas_Nodes_ReadFlowParameter_System_Boolean : ReadFlowParameter<bool>
		{
			[Token(Token = "0x6002A68")]
			[Address(RVA = "0xB18570", Offset = "0xB18570", VA = "0xB18570")]
			public FlowCanvas_Nodes_ReadFlowParameter_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000AAA")]
		private class FlowCanvas_Nodes_ReadFlowParameter_System_Single : ReadFlowParameter<float>
		{
			[Token(Token = "0x6002A69")]
			[Address(RVA = "0xB18610", Offset = "0xB18610", VA = "0xB18610")]
			public FlowCanvas_Nodes_ReadFlowParameter_System_Single()
			{
			}
		}

		[Token(Token = "0x2000AAB")]
		private class FlowCanvas_Nodes_ReadFlowParameter_System_Int32 : ReadFlowParameter<int>
		{
			[Token(Token = "0x6002A6A")]
			[Address(RVA = "0xB185C0", Offset = "0xB185C0", VA = "0xB185C0")]
			public FlowCanvas_Nodes_ReadFlowParameter_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000AAC")]
		private class FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_Vector2 : ReadFlowParameter<Vector2>
		{
			[Token(Token = "0x6002A6B")]
			[Address(RVA = "0xB18AC0", Offset = "0xB18AC0", VA = "0xB18AC0")]
			public FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000AAD")]
		private class FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_Vector3 : ReadFlowParameter<Vector3>
		{
			[Token(Token = "0x6002A6C")]
			[Address(RVA = "0xB18B10", Offset = "0xB18B10", VA = "0xB18B10")]
			public FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000AAE")]
		private class FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_Vector4 : ReadFlowParameter<Vector4>
		{
			[Token(Token = "0x6002A6D")]
			[Address(RVA = "0xB18B60", Offset = "0xB18B60", VA = "0xB18B60")]
			public FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x2000AAF")]
		private class FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_Quaternion : ReadFlowParameter<Quaternion>
		{
			[Token(Token = "0x6002A6E")]
			[Address(RVA = "0xB188E0", Offset = "0xB188E0", VA = "0xB188E0")]
			public FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000AB0")]
		private class FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_Keyframe : ReadFlowParameter<Keyframe>
		{
			[Token(Token = "0x6002A6F")]
			[Address(RVA = "0xB18840", Offset = "0xB18840", VA = "0xB18840")]
			public FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000AB1")]
		private class FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_Bounds : ReadFlowParameter<Bounds>
		{
			[Token(Token = "0x6002A70")]
			[Address(RVA = "0xB18660", Offset = "0xB18660", VA = "0xB18660")]
			public FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000AB2")]
		private class FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_Color : ReadFlowParameter<Color>
		{
			[Token(Token = "0x6002A71")]
			[Address(RVA = "0xB18750", Offset = "0xB18750", VA = "0xB18750")]
			public FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000AB3")]
		private class FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_Rect : ReadFlowParameter<Rect>
		{
			[Token(Token = "0x6002A72")]
			[Address(RVA = "0xB18A20", Offset = "0xB18A20", VA = "0xB18A20")]
			public FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000AB4")]
		private class FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_ContactPoint : ReadFlowParameter<ContactPoint>
		{
			[Token(Token = "0x6002A73")]
			[Address(RVA = "0xB187A0", Offset = "0xB187A0", VA = "0xB187A0")]
			public FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000AB5")]
		private class FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_ContactPoint2D : ReadFlowParameter<ContactPoint2D>
		{
			[Token(Token = "0x6002A74")]
			[Address(RVA = "0xB187F0", Offset = "0xB187F0", VA = "0xB187F0")]
			public FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000AB6")]
		private class FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_Collision : ReadFlowParameter<Collision>
		{
			[Token(Token = "0x6002A75")]
			[Address(RVA = "0xB186B0", Offset = "0xB186B0", VA = "0xB186B0")]
			public FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x2000AB7")]
		private class FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_Collision2D : ReadFlowParameter<Collision2D>
		{
			[Token(Token = "0x6002A76")]
			[Address(RVA = "0xB18700", Offset = "0xB18700", VA = "0xB18700")]
			public FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000AB8")]
		private class FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_RaycastHit : ReadFlowParameter<RaycastHit>
		{
			[Token(Token = "0x6002A77")]
			[Address(RVA = "0xB18980", Offset = "0xB18980", VA = "0xB18980")]
			public FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000AB9")]
		private class FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_RaycastHit2D : ReadFlowParameter<RaycastHit2D>
		{
			[Token(Token = "0x6002A78")]
			[Address(RVA = "0xB189D0", Offset = "0xB189D0", VA = "0xB189D0")]
			public FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000ABA")]
		private class FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_Ray : ReadFlowParameter<Ray>
		{
			[Token(Token = "0x6002A79")]
			[Address(RVA = "0xB18930", Offset = "0xB18930", VA = "0xB18930")]
			public FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x2000ABB")]
		private class FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_Space : ReadFlowParameter<Space>
		{
			[Token(Token = "0x6002A7A")]
			[Address(RVA = "0xB18A70", Offset = "0xB18A70", VA = "0xB18A70")]
			public FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000ABC")]
		private class FlowCanvas_Nodes_ReadFlowParameter_ftg_DioramaFiveData_DioramaFiveKeys : ReadFlowParameter<DioramaFiveData.DioramaFiveKeys>
		{
			[Token(Token = "0x6002A7B")]
			[Address(RVA = "0xB18BB0", Offset = "0xB18BB0", VA = "0xB18BB0")]
			public FlowCanvas_Nodes_ReadFlowParameter_ftg_DioramaFiveData_DioramaFiveKeys()
			{
			}
		}

		[Token(Token = "0x2000ABD")]
		private class FlowCanvas_Nodes_ReadFlowParameter_ftg_DioramaFourData_DioramaFourKeys : ReadFlowParameter<DioramaFourData.DioramaFourKeys>
		{
			[Token(Token = "0x6002A7C")]
			[Address(RVA = "0xB18C00", Offset = "0xB18C00", VA = "0xB18C00")]
			public FlowCanvas_Nodes_ReadFlowParameter_ftg_DioramaFourData_DioramaFourKeys()
			{
			}
		}

		[Token(Token = "0x2000ABE")]
		private class FlowCanvas_Nodes_ReadFlowParameter_ftg_DioramaOneData_DioramaOneKeys : ReadFlowParameter<DioramaOneData.DioramaOneKeys>
		{
			[Token(Token = "0x6002A7D")]
			[Address(RVA = "0xB18C50", Offset = "0xB18C50", VA = "0xB18C50")]
			public FlowCanvas_Nodes_ReadFlowParameter_ftg_DioramaOneData_DioramaOneKeys()
			{
			}
		}

		[Token(Token = "0x2000ABF")]
		private class FlowCanvas_Nodes_ReadFlowParameter_ftg_DioramaThreeData_DioramaThreeKeys : ReadFlowParameter<DioramaThreeData.DioramaThreeKeys>
		{
			[Token(Token = "0x6002A7E")]
			[Address(RVA = "0xB18CA0", Offset = "0xB18CA0", VA = "0xB18CA0")]
			public FlowCanvas_Nodes_ReadFlowParameter_ftg_DioramaThreeData_DioramaThreeKeys()
			{
			}
		}

		[Token(Token = "0x2000AC0")]
		private class FlowCanvas_Nodes_ReadFlowParameter_ftg_DioramaTwoData_DioramaTwoKeys : ReadFlowParameter<DioramaTwoData.DioramaTwoKeys>
		{
			[Token(Token = "0x6002A7F")]
			[Address(RVA = "0xB18CF0", Offset = "0xB18CF0", VA = "0xB18CF0")]
			public FlowCanvas_Nodes_ReadFlowParameter_ftg_DioramaTwoData_DioramaTwoKeys()
			{
			}
		}

		[Token(Token = "0x2000AC1")]
		private class FlowCanvas_Nodes_ReadFlowParameter_ftg_SaveManager_DioramaWorlds : ReadFlowParameter<SaveManager.DioramaWorlds>
		{
			[Token(Token = "0x6002A80")]
			[Address(RVA = "0xB18DE0", Offset = "0xB18DE0", VA = "0xB18DE0")]
			public FlowCanvas_Nodes_ReadFlowParameter_ftg_SaveManager_DioramaWorlds()
			{
			}
		}

		[Token(Token = "0x2000AC2")]
		private class FlowCanvas_Nodes_ReadFlowParameter_ftg_HubRoomData_HubRoomKeys : ReadFlowParameter<HubRoomData.HubRoomKeys>
		{
			[Token(Token = "0x6002A81")]
			[Address(RVA = "0xB18D40", Offset = "0xB18D40", VA = "0xB18D40")]
			public FlowCanvas_Nodes_ReadFlowParameter_ftg_HubRoomData_HubRoomKeys()
			{
			}
		}

		[Token(Token = "0x2000AC3")]
		private class FlowCanvas_Nodes_ReadFlowParameter_ftg_PersonaSettings_PersonaKeys : ReadFlowParameter<PersonaSettings.PersonaKeys>
		{
			[Token(Token = "0x6002A82")]
			[Address(RVA = "0xB18D90", Offset = "0xB18D90", VA = "0xB18D90")]
			public FlowCanvas_Nodes_ReadFlowParameter_ftg_PersonaSettings_PersonaKeys()
			{
			}
		}

		[Token(Token = "0x2000AC4")]
		private class FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_LayerMask : ReadFlowParameter<LayerMask>
		{
			[Token(Token = "0x6002A83")]
			[Address(RVA = "0xB18890", Offset = "0xB18890", VA = "0xB18890")]
			public FlowCanvas_Nodes_ReadFlowParameter_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000AC5")]
		private class FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_System_Boolean : ReflectedExtractorNodeWrapper<bool>
		{
			[Token(Token = "0x6002A84")]
			[Address(RVA = "0xB18E30", Offset = "0xB18E30", VA = "0xB18E30")]
			public FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000AC6")]
		private class FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_System_Single : ReflectedExtractorNodeWrapper<float>
		{
			[Token(Token = "0x6002A85")]
			[Address(RVA = "0xB18ED0", Offset = "0xB18ED0", VA = "0xB18ED0")]
			public FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_System_Single()
			{
			}
		}

		[Token(Token = "0x2000AC7")]
		private class FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_System_Int32 : ReflectedExtractorNodeWrapper<int>
		{
			[Token(Token = "0x6002A86")]
			[Address(RVA = "0xB18E80", Offset = "0xB18E80", VA = "0xB18E80")]
			public FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000AC8")]
		private class FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_Vector2 : ReflectedExtractorNodeWrapper<Vector2>
		{
			[Token(Token = "0x6002A87")]
			[Address(RVA = "0xB19380", Offset = "0xB19380", VA = "0xB19380")]
			public FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000AC9")]
		private class FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_Vector3 : ReflectedExtractorNodeWrapper<Vector3>
		{
			[Token(Token = "0x6002A88")]
			[Address(RVA = "0xB193D0", Offset = "0xB193D0", VA = "0xB193D0")]
			public FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000ACA")]
		private class FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_Vector4 : ReflectedExtractorNodeWrapper<Vector4>
		{
			[Token(Token = "0x6002A89")]
			[Address(RVA = "0xB19420", Offset = "0xB19420", VA = "0xB19420")]
			public FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x2000ACB")]
		private class FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_Quaternion : ReflectedExtractorNodeWrapper<Quaternion>
		{
			[Token(Token = "0x6002A8A")]
			[Address(RVA = "0xB191A0", Offset = "0xB191A0", VA = "0xB191A0")]
			public FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000ACC")]
		private class FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_Keyframe : ReflectedExtractorNodeWrapper<Keyframe>
		{
			[Token(Token = "0x6002A8B")]
			[Address(RVA = "0xB19100", Offset = "0xB19100", VA = "0xB19100")]
			public FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000ACD")]
		private class FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_Bounds : ReflectedExtractorNodeWrapper<Bounds>
		{
			[Token(Token = "0x6002A8C")]
			[Address(RVA = "0xB18F20", Offset = "0xB18F20", VA = "0xB18F20")]
			public FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000ACE")]
		private class FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_Color : ReflectedExtractorNodeWrapper<Color>
		{
			[Token(Token = "0x6002A8D")]
			[Address(RVA = "0xB19010", Offset = "0xB19010", VA = "0xB19010")]
			public FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000ACF")]
		private class FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_Rect : ReflectedExtractorNodeWrapper<Rect>
		{
			[Token(Token = "0x6002A8E")]
			[Address(RVA = "0xB192E0", Offset = "0xB192E0", VA = "0xB192E0")]
			public FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000AD0")]
		private class FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_ContactPoint : ReflectedExtractorNodeWrapper<ContactPoint>
		{
			[Token(Token = "0x6002A8F")]
			[Address(RVA = "0xB19060", Offset = "0xB19060", VA = "0xB19060")]
			public FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000AD1")]
		private class FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_ContactPoint2D : ReflectedExtractorNodeWrapper<ContactPoint2D>
		{
			[Token(Token = "0x6002A90")]
			[Address(RVA = "0xB190B0", Offset = "0xB190B0", VA = "0xB190B0")]
			public FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000AD2")]
		private class FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_Collision : ReflectedExtractorNodeWrapper<Collision>
		{
			[Token(Token = "0x6002A91")]
			[Address(RVA = "0xB18F70", Offset = "0xB18F70", VA = "0xB18F70")]
			public FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x2000AD3")]
		private class FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_Collision2D : ReflectedExtractorNodeWrapper<Collision2D>
		{
			[Token(Token = "0x6002A92")]
			[Address(RVA = "0xB18FC0", Offset = "0xB18FC0", VA = "0xB18FC0")]
			public FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000AD4")]
		private class FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_RaycastHit : ReflectedExtractorNodeWrapper<RaycastHit>
		{
			[Token(Token = "0x6002A93")]
			[Address(RVA = "0xB19240", Offset = "0xB19240", VA = "0xB19240")]
			public FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000AD5")]
		private class FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_RaycastHit2D : ReflectedExtractorNodeWrapper<RaycastHit2D>
		{
			[Token(Token = "0x6002A94")]
			[Address(RVA = "0xB19290", Offset = "0xB19290", VA = "0xB19290")]
			public FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000AD6")]
		private class FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_Ray : ReflectedExtractorNodeWrapper<Ray>
		{
			[Token(Token = "0x6002A95")]
			[Address(RVA = "0xB191F0", Offset = "0xB191F0", VA = "0xB191F0")]
			public FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x2000AD7")]
		private class FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_Space : ReflectedExtractorNodeWrapper<Space>
		{
			[Token(Token = "0x6002A96")]
			[Address(RVA = "0xB19330", Offset = "0xB19330", VA = "0xB19330")]
			public FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000AD8")]
		private class FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_ftg_DioramaFiveData_DioramaFiveKeys : ReflectedExtractorNodeWrapper<DioramaFiveData.DioramaFiveKeys>
		{
			[Token(Token = "0x6002A97")]
			[Address(RVA = "0xB19470", Offset = "0xB19470", VA = "0xB19470")]
			public FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_ftg_DioramaFiveData_DioramaFiveKeys()
			{
			}
		}

		[Token(Token = "0x2000AD9")]
		private class FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_ftg_DioramaFourData_DioramaFourKeys : ReflectedExtractorNodeWrapper<DioramaFourData.DioramaFourKeys>
		{
			[Token(Token = "0x6002A98")]
			[Address(RVA = "0xB194C0", Offset = "0xB194C0", VA = "0xB194C0")]
			public FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_ftg_DioramaFourData_DioramaFourKeys()
			{
			}
		}

		[Token(Token = "0x2000ADA")]
		private class FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_ftg_DioramaOneData_DioramaOneKeys : ReflectedExtractorNodeWrapper<DioramaOneData.DioramaOneKeys>
		{
			[Token(Token = "0x6002A99")]
			[Address(RVA = "0xB19510", Offset = "0xB19510", VA = "0xB19510")]
			public FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_ftg_DioramaOneData_DioramaOneKeys()
			{
			}
		}

		[Token(Token = "0x2000ADB")]
		private class FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_ftg_DioramaThreeData_DioramaThreeKeys : ReflectedExtractorNodeWrapper<DioramaThreeData.DioramaThreeKeys>
		{
			[Token(Token = "0x6002A9A")]
			[Address(RVA = "0xB19560", Offset = "0xB19560", VA = "0xB19560")]
			public FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_ftg_DioramaThreeData_DioramaThreeKeys()
			{
			}
		}

		[Token(Token = "0x2000ADC")]
		private class FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_ftg_DioramaTwoData_DioramaTwoKeys : ReflectedExtractorNodeWrapper<DioramaTwoData.DioramaTwoKeys>
		{
			[Token(Token = "0x6002A9B")]
			[Address(RVA = "0xB195B0", Offset = "0xB195B0", VA = "0xB195B0")]
			public FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_ftg_DioramaTwoData_DioramaTwoKeys()
			{
			}
		}

		[Token(Token = "0x2000ADD")]
		private class FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_ftg_SaveManager_DioramaWorlds : ReflectedExtractorNodeWrapper<SaveManager.DioramaWorlds>
		{
			[Token(Token = "0x6002A9C")]
			[Address(RVA = "0xB196A0", Offset = "0xB196A0", VA = "0xB196A0")]
			public FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_ftg_SaveManager_DioramaWorlds()
			{
			}
		}

		[Token(Token = "0x2000ADE")]
		private class FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_ftg_HubRoomData_HubRoomKeys : ReflectedExtractorNodeWrapper<HubRoomData.HubRoomKeys>
		{
			[Token(Token = "0x6002A9D")]
			[Address(RVA = "0xB19600", Offset = "0xB19600", VA = "0xB19600")]
			public FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_ftg_HubRoomData_HubRoomKeys()
			{
			}
		}

		[Token(Token = "0x2000ADF")]
		private class FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_ftg_PersonaSettings_PersonaKeys : ReflectedExtractorNodeWrapper<PersonaSettings.PersonaKeys>
		{
			[Token(Token = "0x6002A9E")]
			[Address(RVA = "0xB19650", Offset = "0xB19650", VA = "0xB19650")]
			public FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_ftg_PersonaSettings_PersonaKeys()
			{
			}
		}

		[Token(Token = "0x2000AE0")]
		private class FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_LayerMask : ReflectedExtractorNodeWrapper<LayerMask>
		{
			[Token(Token = "0x6002A9F")]
			[Address(RVA = "0xB19150", Offset = "0xB19150", VA = "0xB19150")]
			public FlowCanvas_Nodes_ReflectedExtractorNodeWrapper_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000AE1")]
		private class FlowCanvas_Nodes_RelayValueInput_System_Boolean : RelayValueInput<bool>
		{
			[Token(Token = "0x6002AA0")]
			[Address(RVA = "0xB196F0", Offset = "0xB196F0", VA = "0xB196F0")]
			public FlowCanvas_Nodes_RelayValueInput_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000AE2")]
		private class FlowCanvas_Nodes_RelayValueInput_System_Single : RelayValueInput<float>
		{
			[Token(Token = "0x6002AA1")]
			[Address(RVA = "0xB19790", Offset = "0xB19790", VA = "0xB19790")]
			public FlowCanvas_Nodes_RelayValueInput_System_Single()
			{
			}
		}

		[Token(Token = "0x2000AE3")]
		private class FlowCanvas_Nodes_RelayValueInput_System_Int32 : RelayValueInput<int>
		{
			[Token(Token = "0x6002AA2")]
			[Address(RVA = "0xB19740", Offset = "0xB19740", VA = "0xB19740")]
			public FlowCanvas_Nodes_RelayValueInput_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000AE4")]
		private class FlowCanvas_Nodes_RelayValueInput_UnityEngine_Vector2 : RelayValueInput<Vector2>
		{
			[Token(Token = "0x6002AA3")]
			[Address(RVA = "0xB19C40", Offset = "0xB19C40", VA = "0xB19C40")]
			public FlowCanvas_Nodes_RelayValueInput_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000AE5")]
		private class FlowCanvas_Nodes_RelayValueInput_UnityEngine_Vector3 : RelayValueInput<Vector3>
		{
			[Token(Token = "0x6002AA4")]
			[Address(RVA = "0xB19C90", Offset = "0xB19C90", VA = "0xB19C90")]
			public FlowCanvas_Nodes_RelayValueInput_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000AE6")]
		private class FlowCanvas_Nodes_RelayValueInput_UnityEngine_Vector4 : RelayValueInput<Vector4>
		{
			[Token(Token = "0x6002AA5")]
			[Address(RVA = "0xB19CE0", Offset = "0xB19CE0", VA = "0xB19CE0")]
			public FlowCanvas_Nodes_RelayValueInput_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x2000AE7")]
		private class FlowCanvas_Nodes_RelayValueInput_UnityEngine_Quaternion : RelayValueInput<Quaternion>
		{
			[Token(Token = "0x6002AA6")]
			[Address(RVA = "0xB19A60", Offset = "0xB19A60", VA = "0xB19A60")]
			public FlowCanvas_Nodes_RelayValueInput_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000AE8")]
		private class FlowCanvas_Nodes_RelayValueInput_UnityEngine_Keyframe : RelayValueInput<Keyframe>
		{
			[Token(Token = "0x6002AA7")]
			[Address(RVA = "0xB199C0", Offset = "0xB199C0", VA = "0xB199C0")]
			public FlowCanvas_Nodes_RelayValueInput_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000AE9")]
		private class FlowCanvas_Nodes_RelayValueInput_UnityEngine_Bounds : RelayValueInput<Bounds>
		{
			[Token(Token = "0x6002AA8")]
			[Address(RVA = "0xB197E0", Offset = "0xB197E0", VA = "0xB197E0")]
			public FlowCanvas_Nodes_RelayValueInput_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000AEA")]
		private class FlowCanvas_Nodes_RelayValueInput_UnityEngine_Color : RelayValueInput<Color>
		{
			[Token(Token = "0x6002AA9")]
			[Address(RVA = "0xB198D0", Offset = "0xB198D0", VA = "0xB198D0")]
			public FlowCanvas_Nodes_RelayValueInput_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000AEB")]
		private class FlowCanvas_Nodes_RelayValueInput_UnityEngine_Rect : RelayValueInput<Rect>
		{
			[Token(Token = "0x6002AAA")]
			[Address(RVA = "0xB19BA0", Offset = "0xB19BA0", VA = "0xB19BA0")]
			public FlowCanvas_Nodes_RelayValueInput_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000AEC")]
		private class FlowCanvas_Nodes_RelayValueInput_UnityEngine_ContactPoint : RelayValueInput<ContactPoint>
		{
			[Token(Token = "0x6002AAB")]
			[Address(RVA = "0xB19920", Offset = "0xB19920", VA = "0xB19920")]
			public FlowCanvas_Nodes_RelayValueInput_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000AED")]
		private class FlowCanvas_Nodes_RelayValueInput_UnityEngine_ContactPoint2D : RelayValueInput<ContactPoint2D>
		{
			[Token(Token = "0x6002AAC")]
			[Address(RVA = "0xB19970", Offset = "0xB19970", VA = "0xB19970")]
			public FlowCanvas_Nodes_RelayValueInput_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000AEE")]
		private class FlowCanvas_Nodes_RelayValueInput_UnityEngine_Collision : RelayValueInput<Collision>
		{
			[Token(Token = "0x6002AAD")]
			[Address(RVA = "0xB19830", Offset = "0xB19830", VA = "0xB19830")]
			public FlowCanvas_Nodes_RelayValueInput_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x2000AEF")]
		private class FlowCanvas_Nodes_RelayValueInput_UnityEngine_Collision2D : RelayValueInput<Collision2D>
		{
			[Token(Token = "0x6002AAE")]
			[Address(RVA = "0xB19880", Offset = "0xB19880", VA = "0xB19880")]
			public FlowCanvas_Nodes_RelayValueInput_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000AF0")]
		private class FlowCanvas_Nodes_RelayValueInput_UnityEngine_RaycastHit : RelayValueInput<RaycastHit>
		{
			[Token(Token = "0x6002AAF")]
			[Address(RVA = "0xB19B00", Offset = "0xB19B00", VA = "0xB19B00")]
			public FlowCanvas_Nodes_RelayValueInput_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000AF1")]
		private class FlowCanvas_Nodes_RelayValueInput_UnityEngine_RaycastHit2D : RelayValueInput<RaycastHit2D>
		{
			[Token(Token = "0x6002AB0")]
			[Address(RVA = "0xB19B50", Offset = "0xB19B50", VA = "0xB19B50")]
			public FlowCanvas_Nodes_RelayValueInput_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000AF2")]
		private class FlowCanvas_Nodes_RelayValueInput_UnityEngine_Ray : RelayValueInput<Ray>
		{
			[Token(Token = "0x6002AB1")]
			[Address(RVA = "0xB19AB0", Offset = "0xB19AB0", VA = "0xB19AB0")]
			public FlowCanvas_Nodes_RelayValueInput_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x2000AF3")]
		private class FlowCanvas_Nodes_RelayValueInput_UnityEngine_Space : RelayValueInput<Space>
		{
			[Token(Token = "0x6002AB2")]
			[Address(RVA = "0xB19BF0", Offset = "0xB19BF0", VA = "0xB19BF0")]
			public FlowCanvas_Nodes_RelayValueInput_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000AF4")]
		private class FlowCanvas_Nodes_RelayValueInput_ftg_DioramaFiveData_DioramaFiveKeys : RelayValueInput<DioramaFiveData.DioramaFiveKeys>
		{
			[Token(Token = "0x6002AB3")]
			[Address(RVA = "0xB19D30", Offset = "0xB19D30", VA = "0xB19D30")]
			public FlowCanvas_Nodes_RelayValueInput_ftg_DioramaFiveData_DioramaFiveKeys()
			{
			}
		}

		[Token(Token = "0x2000AF5")]
		private class FlowCanvas_Nodes_RelayValueInput_ftg_DioramaFourData_DioramaFourKeys : RelayValueInput<DioramaFourData.DioramaFourKeys>
		{
			[Token(Token = "0x6002AB4")]
			[Address(RVA = "0xB19D80", Offset = "0xB19D80", VA = "0xB19D80")]
			public FlowCanvas_Nodes_RelayValueInput_ftg_DioramaFourData_DioramaFourKeys()
			{
			}
		}

		[Token(Token = "0x2000AF6")]
		private class FlowCanvas_Nodes_RelayValueInput_ftg_DioramaOneData_DioramaOneKeys : RelayValueInput<DioramaOneData.DioramaOneKeys>
		{
			[Token(Token = "0x6002AB5")]
			[Address(RVA = "0xB19DD0", Offset = "0xB19DD0", VA = "0xB19DD0")]
			public FlowCanvas_Nodes_RelayValueInput_ftg_DioramaOneData_DioramaOneKeys()
			{
			}
		}

		[Token(Token = "0x2000AF7")]
		private class FlowCanvas_Nodes_RelayValueInput_ftg_DioramaThreeData_DioramaThreeKeys : RelayValueInput<DioramaThreeData.DioramaThreeKeys>
		{
			[Token(Token = "0x6002AB6")]
			[Address(RVA = "0xB19E20", Offset = "0xB19E20", VA = "0xB19E20")]
			public FlowCanvas_Nodes_RelayValueInput_ftg_DioramaThreeData_DioramaThreeKeys()
			{
			}
		}

		[Token(Token = "0x2000AF8")]
		private class FlowCanvas_Nodes_RelayValueInput_ftg_DioramaTwoData_DioramaTwoKeys : RelayValueInput<DioramaTwoData.DioramaTwoKeys>
		{
			[Token(Token = "0x6002AB7")]
			[Address(RVA = "0xB19E70", Offset = "0xB19E70", VA = "0xB19E70")]
			public FlowCanvas_Nodes_RelayValueInput_ftg_DioramaTwoData_DioramaTwoKeys()
			{
			}
		}

		[Token(Token = "0x2000AF9")]
		private class FlowCanvas_Nodes_RelayValueInput_ftg_SaveManager_DioramaWorlds : RelayValueInput<SaveManager.DioramaWorlds>
		{
			[Token(Token = "0x6002AB8")]
			[Address(RVA = "0xB19F60", Offset = "0xB19F60", VA = "0xB19F60")]
			public FlowCanvas_Nodes_RelayValueInput_ftg_SaveManager_DioramaWorlds()
			{
			}
		}

		[Token(Token = "0x2000AFA")]
		private class FlowCanvas_Nodes_RelayValueInput_ftg_HubRoomData_HubRoomKeys : RelayValueInput<HubRoomData.HubRoomKeys>
		{
			[Token(Token = "0x6002AB9")]
			[Address(RVA = "0xB19EC0", Offset = "0xB19EC0", VA = "0xB19EC0")]
			public FlowCanvas_Nodes_RelayValueInput_ftg_HubRoomData_HubRoomKeys()
			{
			}
		}

		[Token(Token = "0x2000AFB")]
		private class FlowCanvas_Nodes_RelayValueInput_ftg_PersonaSettings_PersonaKeys : RelayValueInput<PersonaSettings.PersonaKeys>
		{
			[Token(Token = "0x6002ABA")]
			[Address(RVA = "0xB19F10", Offset = "0xB19F10", VA = "0xB19F10")]
			public FlowCanvas_Nodes_RelayValueInput_ftg_PersonaSettings_PersonaKeys()
			{
			}
		}

		[Token(Token = "0x2000AFC")]
		private class FlowCanvas_Nodes_RelayValueInput_UnityEngine_LayerMask : RelayValueInput<LayerMask>
		{
			[Token(Token = "0x6002ABB")]
			[Address(RVA = "0xB19A10", Offset = "0xB19A10", VA = "0xB19A10")]
			public FlowCanvas_Nodes_RelayValueInput_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000AFD")]
		private class FlowCanvas_Nodes_RelayValueOutput_System_Boolean : RelayValueOutput<bool>
		{
			[Token(Token = "0x6002ABC")]
			[Address(RVA = "0xB19FB0", Offset = "0xB19FB0", VA = "0xB19FB0")]
			public FlowCanvas_Nodes_RelayValueOutput_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000AFE")]
		private class FlowCanvas_Nodes_RelayValueOutput_System_Single : RelayValueOutput<float>
		{
			[Token(Token = "0x6002ABD")]
			[Address(RVA = "0xB1A050", Offset = "0xB1A050", VA = "0xB1A050")]
			public FlowCanvas_Nodes_RelayValueOutput_System_Single()
			{
			}
		}

		[Token(Token = "0x2000AFF")]
		private class FlowCanvas_Nodes_RelayValueOutput_System_Int32 : RelayValueOutput<int>
		{
			[Token(Token = "0x6002ABE")]
			[Address(RVA = "0xB1A000", Offset = "0xB1A000", VA = "0xB1A000")]
			public FlowCanvas_Nodes_RelayValueOutput_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000B00")]
		private class FlowCanvas_Nodes_RelayValueOutput_UnityEngine_Vector2 : RelayValueOutput<Vector2>
		{
			[Token(Token = "0x6002ABF")]
			[Address(RVA = "0xB1A500", Offset = "0xB1A500", VA = "0xB1A500")]
			public FlowCanvas_Nodes_RelayValueOutput_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000B01")]
		private class FlowCanvas_Nodes_RelayValueOutput_UnityEngine_Vector3 : RelayValueOutput<Vector3>
		{
			[Token(Token = "0x6002AC0")]
			[Address(RVA = "0xB1A550", Offset = "0xB1A550", VA = "0xB1A550")]
			public FlowCanvas_Nodes_RelayValueOutput_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000B02")]
		private class FlowCanvas_Nodes_RelayValueOutput_UnityEngine_Vector4 : RelayValueOutput<Vector4>
		{
			[Token(Token = "0x6002AC1")]
			[Address(RVA = "0xB1A5A0", Offset = "0xB1A5A0", VA = "0xB1A5A0")]
			public FlowCanvas_Nodes_RelayValueOutput_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x2000B03")]
		private class FlowCanvas_Nodes_RelayValueOutput_UnityEngine_Quaternion : RelayValueOutput<Quaternion>
		{
			[Token(Token = "0x6002AC2")]
			[Address(RVA = "0xB1A320", Offset = "0xB1A320", VA = "0xB1A320")]
			public FlowCanvas_Nodes_RelayValueOutput_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000B04")]
		private class FlowCanvas_Nodes_RelayValueOutput_UnityEngine_Keyframe : RelayValueOutput<Keyframe>
		{
			[Token(Token = "0x6002AC3")]
			[Address(RVA = "0xB1A280", Offset = "0xB1A280", VA = "0xB1A280")]
			public FlowCanvas_Nodes_RelayValueOutput_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000B05")]
		private class FlowCanvas_Nodes_RelayValueOutput_UnityEngine_Bounds : RelayValueOutput<Bounds>
		{
			[Token(Token = "0x6002AC4")]
			[Address(RVA = "0xB1A0A0", Offset = "0xB1A0A0", VA = "0xB1A0A0")]
			public FlowCanvas_Nodes_RelayValueOutput_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000B06")]
		private class FlowCanvas_Nodes_RelayValueOutput_UnityEngine_Color : RelayValueOutput<Color>
		{
			[Token(Token = "0x6002AC5")]
			[Address(RVA = "0xB1A190", Offset = "0xB1A190", VA = "0xB1A190")]
			public FlowCanvas_Nodes_RelayValueOutput_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000B07")]
		private class FlowCanvas_Nodes_RelayValueOutput_UnityEngine_Rect : RelayValueOutput<Rect>
		{
			[Token(Token = "0x6002AC6")]
			[Address(RVA = "0xB1A460", Offset = "0xB1A460", VA = "0xB1A460")]
			public FlowCanvas_Nodes_RelayValueOutput_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000B08")]
		private class FlowCanvas_Nodes_RelayValueOutput_UnityEngine_ContactPoint : RelayValueOutput<ContactPoint>
		{
			[Token(Token = "0x6002AC7")]
			[Address(RVA = "0xB1A1E0", Offset = "0xB1A1E0", VA = "0xB1A1E0")]
			public FlowCanvas_Nodes_RelayValueOutput_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000B09")]
		private class FlowCanvas_Nodes_RelayValueOutput_UnityEngine_ContactPoint2D : RelayValueOutput<ContactPoint2D>
		{
			[Token(Token = "0x6002AC8")]
			[Address(RVA = "0xB1A230", Offset = "0xB1A230", VA = "0xB1A230")]
			public FlowCanvas_Nodes_RelayValueOutput_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000B0A")]
		private class FlowCanvas_Nodes_RelayValueOutput_UnityEngine_Collision : RelayValueOutput<Collision>
		{
			[Token(Token = "0x6002AC9")]
			[Address(RVA = "0xB1A0F0", Offset = "0xB1A0F0", VA = "0xB1A0F0")]
			public FlowCanvas_Nodes_RelayValueOutput_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x2000B0B")]
		private class FlowCanvas_Nodes_RelayValueOutput_UnityEngine_Collision2D : RelayValueOutput<Collision2D>
		{
			[Token(Token = "0x6002ACA")]
			[Address(RVA = "0xB1A140", Offset = "0xB1A140", VA = "0xB1A140")]
			public FlowCanvas_Nodes_RelayValueOutput_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000B0C")]
		private class FlowCanvas_Nodes_RelayValueOutput_UnityEngine_RaycastHit : RelayValueOutput<RaycastHit>
		{
			[Token(Token = "0x6002ACB")]
			[Address(RVA = "0xB1A3C0", Offset = "0xB1A3C0", VA = "0xB1A3C0")]
			public FlowCanvas_Nodes_RelayValueOutput_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000B0D")]
		private class FlowCanvas_Nodes_RelayValueOutput_UnityEngine_RaycastHit2D : RelayValueOutput<RaycastHit2D>
		{
			[Token(Token = "0x6002ACC")]
			[Address(RVA = "0xB1A410", Offset = "0xB1A410", VA = "0xB1A410")]
			public FlowCanvas_Nodes_RelayValueOutput_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000B0E")]
		private class FlowCanvas_Nodes_RelayValueOutput_UnityEngine_Ray : RelayValueOutput<Ray>
		{
			[Token(Token = "0x6002ACD")]
			[Address(RVA = "0xB1A370", Offset = "0xB1A370", VA = "0xB1A370")]
			public FlowCanvas_Nodes_RelayValueOutput_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x2000B0F")]
		private class FlowCanvas_Nodes_RelayValueOutput_UnityEngine_Space : RelayValueOutput<Space>
		{
			[Token(Token = "0x6002ACE")]
			[Address(RVA = "0xB1A4B0", Offset = "0xB1A4B0", VA = "0xB1A4B0")]
			public FlowCanvas_Nodes_RelayValueOutput_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000B10")]
		private class FlowCanvas_Nodes_RelayValueOutput_ftg_DioramaFiveData_DioramaFiveKeys : RelayValueOutput<DioramaFiveData.DioramaFiveKeys>
		{
			[Token(Token = "0x6002ACF")]
			[Address(RVA = "0xB1A5F0", Offset = "0xB1A5F0", VA = "0xB1A5F0")]
			public FlowCanvas_Nodes_RelayValueOutput_ftg_DioramaFiveData_DioramaFiveKeys()
			{
			}
		}

		[Token(Token = "0x2000B11")]
		private class FlowCanvas_Nodes_RelayValueOutput_ftg_DioramaFourData_DioramaFourKeys : RelayValueOutput<DioramaFourData.DioramaFourKeys>
		{
			[Token(Token = "0x6002AD0")]
			[Address(RVA = "0xB1A640", Offset = "0xB1A640", VA = "0xB1A640")]
			public FlowCanvas_Nodes_RelayValueOutput_ftg_DioramaFourData_DioramaFourKeys()
			{
			}
		}

		[Token(Token = "0x2000B12")]
		private class FlowCanvas_Nodes_RelayValueOutput_ftg_DioramaOneData_DioramaOneKeys : RelayValueOutput<DioramaOneData.DioramaOneKeys>
		{
			[Token(Token = "0x6002AD1")]
			[Address(RVA = "0xB1A690", Offset = "0xB1A690", VA = "0xB1A690")]
			public FlowCanvas_Nodes_RelayValueOutput_ftg_DioramaOneData_DioramaOneKeys()
			{
			}
		}

		[Token(Token = "0x2000B13")]
		private class FlowCanvas_Nodes_RelayValueOutput_ftg_DioramaThreeData_DioramaThreeKeys : RelayValueOutput<DioramaThreeData.DioramaThreeKeys>
		{
			[Token(Token = "0x6002AD2")]
			[Address(RVA = "0xB1A6E0", Offset = "0xB1A6E0", VA = "0xB1A6E0")]
			public FlowCanvas_Nodes_RelayValueOutput_ftg_DioramaThreeData_DioramaThreeKeys()
			{
			}
		}

		[Token(Token = "0x2000B14")]
		private class FlowCanvas_Nodes_RelayValueOutput_ftg_DioramaTwoData_DioramaTwoKeys : RelayValueOutput<DioramaTwoData.DioramaTwoKeys>
		{
			[Token(Token = "0x6002AD3")]
			[Address(RVA = "0xB1A730", Offset = "0xB1A730", VA = "0xB1A730")]
			public FlowCanvas_Nodes_RelayValueOutput_ftg_DioramaTwoData_DioramaTwoKeys()
			{
			}
		}

		[Token(Token = "0x2000B15")]
		private class FlowCanvas_Nodes_RelayValueOutput_ftg_SaveManager_DioramaWorlds : RelayValueOutput<SaveManager.DioramaWorlds>
		{
			[Token(Token = "0x6002AD4")]
			[Address(RVA = "0xB1A820", Offset = "0xB1A820", VA = "0xB1A820")]
			public FlowCanvas_Nodes_RelayValueOutput_ftg_SaveManager_DioramaWorlds()
			{
			}
		}

		[Token(Token = "0x2000B16")]
		private class FlowCanvas_Nodes_RelayValueOutput_ftg_HubRoomData_HubRoomKeys : RelayValueOutput<HubRoomData.HubRoomKeys>
		{
			[Token(Token = "0x6002AD5")]
			[Address(RVA = "0xB1A780", Offset = "0xB1A780", VA = "0xB1A780")]
			public FlowCanvas_Nodes_RelayValueOutput_ftg_HubRoomData_HubRoomKeys()
			{
			}
		}

		[Token(Token = "0x2000B17")]
		private class FlowCanvas_Nodes_RelayValueOutput_ftg_PersonaSettings_PersonaKeys : RelayValueOutput<PersonaSettings.PersonaKeys>
		{
			[Token(Token = "0x6002AD6")]
			[Address(RVA = "0xB1A7D0", Offset = "0xB1A7D0", VA = "0xB1A7D0")]
			public FlowCanvas_Nodes_RelayValueOutput_ftg_PersonaSettings_PersonaKeys()
			{
			}
		}

		[Token(Token = "0x2000B18")]
		private class FlowCanvas_Nodes_RelayValueOutput_UnityEngine_LayerMask : RelayValueOutput<LayerMask>
		{
			[Token(Token = "0x6002AD7")]
			[Address(RVA = "0xB1A2D0", Offset = "0xB1A2D0", VA = "0xB1A2D0")]
			public FlowCanvas_Nodes_RelayValueOutput_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000B19")]
		private class FlowCanvas_Nodes_RemoveDictionaryKey_System_Boolean : RemoveDictionaryKey<bool>
		{
			[Token(Token = "0x6002AD8")]
			[Address(RVA = "0xB1A870", Offset = "0xB1A870", VA = "0xB1A870")]
			public FlowCanvas_Nodes_RemoveDictionaryKey_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000B1A")]
		private class FlowCanvas_Nodes_RemoveDictionaryKey_System_Single : RemoveDictionaryKey<float>
		{
			[Token(Token = "0x6002AD9")]
			[Address(RVA = "0xB1A910", Offset = "0xB1A910", VA = "0xB1A910")]
			public FlowCanvas_Nodes_RemoveDictionaryKey_System_Single()
			{
			}
		}

		[Token(Token = "0x2000B1B")]
		private class FlowCanvas_Nodes_RemoveDictionaryKey_System_Int32 : RemoveDictionaryKey<int>
		{
			[Token(Token = "0x6002ADA")]
			[Address(RVA = "0xB1A8C0", Offset = "0xB1A8C0", VA = "0xB1A8C0")]
			public FlowCanvas_Nodes_RemoveDictionaryKey_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000B1C")]
		private class FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_Vector2 : RemoveDictionaryKey<Vector2>
		{
			[Token(Token = "0x6002ADB")]
			[Address(RVA = "0xB1ADC0", Offset = "0xB1ADC0", VA = "0xB1ADC0")]
			public FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000B1D")]
		private class FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_Vector3 : RemoveDictionaryKey<Vector3>
		{
			[Token(Token = "0x6002ADC")]
			[Address(RVA = "0xB1AE10", Offset = "0xB1AE10", VA = "0xB1AE10")]
			public FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000B1E")]
		private class FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_Vector4 : RemoveDictionaryKey<Vector4>
		{
			[Token(Token = "0x6002ADD")]
			[Address(RVA = "0xB1AE60", Offset = "0xB1AE60", VA = "0xB1AE60")]
			public FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x2000B1F")]
		private class FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_Quaternion : RemoveDictionaryKey<Quaternion>
		{
			[Token(Token = "0x6002ADE")]
			[Address(RVA = "0xB1ABE0", Offset = "0xB1ABE0", VA = "0xB1ABE0")]
			public FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000B20")]
		private class FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_Keyframe : RemoveDictionaryKey<Keyframe>
		{
			[Token(Token = "0x6002ADF")]
			[Address(RVA = "0xB1AB40", Offset = "0xB1AB40", VA = "0xB1AB40")]
			public FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000B21")]
		private class FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_Bounds : RemoveDictionaryKey<Bounds>
		{
			[Token(Token = "0x6002AE0")]
			[Address(RVA = "0xB1A960", Offset = "0xB1A960", VA = "0xB1A960")]
			public FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000B22")]
		private class FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_Color : RemoveDictionaryKey<Color>
		{
			[Token(Token = "0x6002AE1")]
			[Address(RVA = "0xB1AA50", Offset = "0xB1AA50", VA = "0xB1AA50")]
			public FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000B23")]
		private class FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_Rect : RemoveDictionaryKey<Rect>
		{
			[Token(Token = "0x6002AE2")]
			[Address(RVA = "0xB1AD20", Offset = "0xB1AD20", VA = "0xB1AD20")]
			public FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000B24")]
		private class FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_ContactPoint : RemoveDictionaryKey<ContactPoint>
		{
			[Token(Token = "0x6002AE3")]
			[Address(RVA = "0xB1AAA0", Offset = "0xB1AAA0", VA = "0xB1AAA0")]
			public FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000B25")]
		private class FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_ContactPoint2D : RemoveDictionaryKey<ContactPoint2D>
		{
			[Token(Token = "0x6002AE4")]
			[Address(RVA = "0xB1AAF0", Offset = "0xB1AAF0", VA = "0xB1AAF0")]
			public FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000B26")]
		private class FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_Collision : RemoveDictionaryKey<Collision>
		{
			[Token(Token = "0x6002AE5")]
			[Address(RVA = "0xB1A9B0", Offset = "0xB1A9B0", VA = "0xB1A9B0")]
			public FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x2000B27")]
		private class FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_Collision2D : RemoveDictionaryKey<Collision2D>
		{
			[Token(Token = "0x6002AE6")]
			[Address(RVA = "0xB1AA00", Offset = "0xB1AA00", VA = "0xB1AA00")]
			public FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000B28")]
		private class FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_RaycastHit : RemoveDictionaryKey<RaycastHit>
		{
			[Token(Token = "0x6002AE7")]
			[Address(RVA = "0xB1AC80", Offset = "0xB1AC80", VA = "0xB1AC80")]
			public FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000B29")]
		private class FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_RaycastHit2D : RemoveDictionaryKey<RaycastHit2D>
		{
			[Token(Token = "0x6002AE8")]
			[Address(RVA = "0xB1ACD0", Offset = "0xB1ACD0", VA = "0xB1ACD0")]
			public FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000B2A")]
		private class FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_Ray : RemoveDictionaryKey<Ray>
		{
			[Token(Token = "0x6002AE9")]
			[Address(RVA = "0xB1AC30", Offset = "0xB1AC30", VA = "0xB1AC30")]
			public FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x2000B2B")]
		private class FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_Space : RemoveDictionaryKey<Space>
		{
			[Token(Token = "0x6002AEA")]
			[Address(RVA = "0xB1AD70", Offset = "0xB1AD70", VA = "0xB1AD70")]
			public FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000B2C")]
		private class FlowCanvas_Nodes_RemoveDictionaryKey_ftg_DioramaFiveData_DioramaFiveKeys : RemoveDictionaryKey<DioramaFiveData.DioramaFiveKeys>
		{
			[Token(Token = "0x6002AEB")]
			[Address(RVA = "0xB1AEB0", Offset = "0xB1AEB0", VA = "0xB1AEB0")]
			public FlowCanvas_Nodes_RemoveDictionaryKey_ftg_DioramaFiveData_DioramaFiveKeys()
			{
			}
		}

		[Token(Token = "0x2000B2D")]
		private class FlowCanvas_Nodes_RemoveDictionaryKey_ftg_DioramaFourData_DioramaFourKeys : RemoveDictionaryKey<DioramaFourData.DioramaFourKeys>
		{
			[Token(Token = "0x6002AEC")]
			[Address(RVA = "0xB1AF00", Offset = "0xB1AF00", VA = "0xB1AF00")]
			public FlowCanvas_Nodes_RemoveDictionaryKey_ftg_DioramaFourData_DioramaFourKeys()
			{
			}
		}

		[Token(Token = "0x2000B2E")]
		private class FlowCanvas_Nodes_RemoveDictionaryKey_ftg_DioramaOneData_DioramaOneKeys : RemoveDictionaryKey<DioramaOneData.DioramaOneKeys>
		{
			[Token(Token = "0x6002AED")]
			[Address(RVA = "0xB1AF50", Offset = "0xB1AF50", VA = "0xB1AF50")]
			public FlowCanvas_Nodes_RemoveDictionaryKey_ftg_DioramaOneData_DioramaOneKeys()
			{
			}
		}

		[Token(Token = "0x2000B2F")]
		private class FlowCanvas_Nodes_RemoveDictionaryKey_ftg_DioramaThreeData_DioramaThreeKeys : RemoveDictionaryKey<DioramaThreeData.DioramaThreeKeys>
		{
			[Token(Token = "0x6002AEE")]
			[Address(RVA = "0xB1AFA0", Offset = "0xB1AFA0", VA = "0xB1AFA0")]
			public FlowCanvas_Nodes_RemoveDictionaryKey_ftg_DioramaThreeData_DioramaThreeKeys()
			{
			}
		}

		[Token(Token = "0x2000B30")]
		private class FlowCanvas_Nodes_RemoveDictionaryKey_ftg_DioramaTwoData_DioramaTwoKeys : RemoveDictionaryKey<DioramaTwoData.DioramaTwoKeys>
		{
			[Token(Token = "0x6002AEF")]
			[Address(RVA = "0xB1AFF0", Offset = "0xB1AFF0", VA = "0xB1AFF0")]
			public FlowCanvas_Nodes_RemoveDictionaryKey_ftg_DioramaTwoData_DioramaTwoKeys()
			{
			}
		}

		[Token(Token = "0x2000B31")]
		private class FlowCanvas_Nodes_RemoveDictionaryKey_ftg_SaveManager_DioramaWorlds : RemoveDictionaryKey<SaveManager.DioramaWorlds>
		{
			[Token(Token = "0x6002AF0")]
			[Address(RVA = "0xB1B0E0", Offset = "0xB1B0E0", VA = "0xB1B0E0")]
			public FlowCanvas_Nodes_RemoveDictionaryKey_ftg_SaveManager_DioramaWorlds()
			{
			}
		}

		[Token(Token = "0x2000B32")]
		private class FlowCanvas_Nodes_RemoveDictionaryKey_ftg_HubRoomData_HubRoomKeys : RemoveDictionaryKey<HubRoomData.HubRoomKeys>
		{
			[Token(Token = "0x6002AF1")]
			[Address(RVA = "0xB1B040", Offset = "0xB1B040", VA = "0xB1B040")]
			public FlowCanvas_Nodes_RemoveDictionaryKey_ftg_HubRoomData_HubRoomKeys()
			{
			}
		}

		[Token(Token = "0x2000B33")]
		private class FlowCanvas_Nodes_RemoveDictionaryKey_ftg_PersonaSettings_PersonaKeys : RemoveDictionaryKey<PersonaSettings.PersonaKeys>
		{
			[Token(Token = "0x6002AF2")]
			[Address(RVA = "0xB1B090", Offset = "0xB1B090", VA = "0xB1B090")]
			public FlowCanvas_Nodes_RemoveDictionaryKey_ftg_PersonaSettings_PersonaKeys()
			{
			}
		}

		[Token(Token = "0x2000B34")]
		private class FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_LayerMask : RemoveDictionaryKey<LayerMask>
		{
			[Token(Token = "0x6002AF3")]
			[Address(RVA = "0xB1AB90", Offset = "0xB1AB90", VA = "0xB1AB90")]
			public FlowCanvas_Nodes_RemoveDictionaryKey_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000B35")]
		private class FlowCanvas_Nodes_RemoveListItem_System_Boolean : RemoveListItem<bool>
		{
			[Token(Token = "0x6002AF4")]
			[Address(RVA = "0xB1B9F0", Offset = "0xB1B9F0", VA = "0xB1B9F0")]
			public FlowCanvas_Nodes_RemoveListItem_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000B36")]
		private class FlowCanvas_Nodes_RemoveListItem_System_Single : RemoveListItem<float>
		{
			[Token(Token = "0x6002AF5")]
			[Address(RVA = "0xB1BA90", Offset = "0xB1BA90", VA = "0xB1BA90")]
			public FlowCanvas_Nodes_RemoveListItem_System_Single()
			{
			}
		}

		[Token(Token = "0x2000B37")]
		private class FlowCanvas_Nodes_RemoveListItem_System_Int32 : RemoveListItem<int>
		{
			[Token(Token = "0x6002AF6")]
			[Address(RVA = "0xB1BA40", Offset = "0xB1BA40", VA = "0xB1BA40")]
			public FlowCanvas_Nodes_RemoveListItem_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000B38")]
		private class FlowCanvas_Nodes_RemoveListItem_UnityEngine_Vector2 : RemoveListItem<Vector2>
		{
			[Token(Token = "0x6002AF7")]
			[Address(RVA = "0xB1BF40", Offset = "0xB1BF40", VA = "0xB1BF40")]
			public FlowCanvas_Nodes_RemoveListItem_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000B39")]
		private class FlowCanvas_Nodes_RemoveListItem_UnityEngine_Vector3 : RemoveListItem<Vector3>
		{
			[Token(Token = "0x6002AF8")]
			[Address(RVA = "0xB1BF90", Offset = "0xB1BF90", VA = "0xB1BF90")]
			public FlowCanvas_Nodes_RemoveListItem_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000B3A")]
		private class FlowCanvas_Nodes_RemoveListItem_UnityEngine_Vector4 : RemoveListItem<Vector4>
		{
			[Token(Token = "0x6002AF9")]
			[Address(RVA = "0xB1BFE0", Offset = "0xB1BFE0", VA = "0xB1BFE0")]
			public FlowCanvas_Nodes_RemoveListItem_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x2000B3B")]
		private class FlowCanvas_Nodes_RemoveListItem_UnityEngine_Quaternion : RemoveListItem<Quaternion>
		{
			[Token(Token = "0x6002AFA")]
			[Address(RVA = "0xB1BD60", Offset = "0xB1BD60", VA = "0xB1BD60")]
			public FlowCanvas_Nodes_RemoveListItem_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000B3C")]
		private class FlowCanvas_Nodes_RemoveListItem_UnityEngine_Keyframe : RemoveListItem<Keyframe>
		{
			[Token(Token = "0x6002AFB")]
			[Address(RVA = "0xB1BCC0", Offset = "0xB1BCC0", VA = "0xB1BCC0")]
			public FlowCanvas_Nodes_RemoveListItem_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000B3D")]
		private class FlowCanvas_Nodes_RemoveListItem_UnityEngine_Bounds : RemoveListItem<Bounds>
		{
			[Token(Token = "0x6002AFC")]
			[Address(RVA = "0xB1BAE0", Offset = "0xB1BAE0", VA = "0xB1BAE0")]
			public FlowCanvas_Nodes_RemoveListItem_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000B3E")]
		private class FlowCanvas_Nodes_RemoveListItem_UnityEngine_Color : RemoveListItem<Color>
		{
			[Token(Token = "0x6002AFD")]
			[Address(RVA = "0xB1BBD0", Offset = "0xB1BBD0", VA = "0xB1BBD0")]
			public FlowCanvas_Nodes_RemoveListItem_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000B3F")]
		private class FlowCanvas_Nodes_RemoveListItem_UnityEngine_Rect : RemoveListItem<Rect>
		{
			[Token(Token = "0x6002AFE")]
			[Address(RVA = "0xB1BEA0", Offset = "0xB1BEA0", VA = "0xB1BEA0")]
			public FlowCanvas_Nodes_RemoveListItem_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000B40")]
		private class FlowCanvas_Nodes_RemoveListItem_UnityEngine_ContactPoint : RemoveListItem<ContactPoint>
		{
			[Token(Token = "0x6002AFF")]
			[Address(RVA = "0xB1BC20", Offset = "0xB1BC20", VA = "0xB1BC20")]
			public FlowCanvas_Nodes_RemoveListItem_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000B41")]
		private class FlowCanvas_Nodes_RemoveListItem_UnityEngine_ContactPoint2D : RemoveListItem<ContactPoint2D>
		{
			[Token(Token = "0x6002B00")]
			[Address(RVA = "0xB1BC70", Offset = "0xB1BC70", VA = "0xB1BC70")]
			public FlowCanvas_Nodes_RemoveListItem_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000B42")]
		private class FlowCanvas_Nodes_RemoveListItem_UnityEngine_Collision : RemoveListItem<Collision>
		{
			[Token(Token = "0x6002B01")]
			[Address(RVA = "0xB1BB30", Offset = "0xB1BB30", VA = "0xB1BB30")]
			public FlowCanvas_Nodes_RemoveListItem_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x2000B43")]
		private class FlowCanvas_Nodes_RemoveListItem_UnityEngine_Collision2D : RemoveListItem<Collision2D>
		{
			[Token(Token = "0x6002B02")]
			[Address(RVA = "0xB1BB80", Offset = "0xB1BB80", VA = "0xB1BB80")]
			public FlowCanvas_Nodes_RemoveListItem_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000B44")]
		private class FlowCanvas_Nodes_RemoveListItem_UnityEngine_RaycastHit : RemoveListItem<RaycastHit>
		{
			[Token(Token = "0x6002B03")]
			[Address(RVA = "0xB1BE00", Offset = "0xB1BE00", VA = "0xB1BE00")]
			public FlowCanvas_Nodes_RemoveListItem_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000B45")]
		private class FlowCanvas_Nodes_RemoveListItem_UnityEngine_RaycastHit2D : RemoveListItem<RaycastHit2D>
		{
			[Token(Token = "0x6002B04")]
			[Address(RVA = "0xB1BE50", Offset = "0xB1BE50", VA = "0xB1BE50")]
			public FlowCanvas_Nodes_RemoveListItem_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000B46")]
		private class FlowCanvas_Nodes_RemoveListItem_UnityEngine_Ray : RemoveListItem<Ray>
		{
			[Token(Token = "0x6002B05")]
			[Address(RVA = "0xB1BDB0", Offset = "0xB1BDB0", VA = "0xB1BDB0")]
			public FlowCanvas_Nodes_RemoveListItem_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x2000B47")]
		private class FlowCanvas_Nodes_RemoveListItem_UnityEngine_Space : RemoveListItem<Space>
		{
			[Token(Token = "0x6002B06")]
			[Address(RVA = "0xB1BEF0", Offset = "0xB1BEF0", VA = "0xB1BEF0")]
			public FlowCanvas_Nodes_RemoveListItem_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000B48")]
		private class FlowCanvas_Nodes_RemoveListItem_ftg_DioramaFiveData_DioramaFiveKeys : RemoveListItem<DioramaFiveData.DioramaFiveKeys>
		{
			[Token(Token = "0x6002B07")]
			[Address(RVA = "0xB1C030", Offset = "0xB1C030", VA = "0xB1C030")]
			public FlowCanvas_Nodes_RemoveListItem_ftg_DioramaFiveData_DioramaFiveKeys()
			{
			}
		}

		[Token(Token = "0x2000B49")]
		private class FlowCanvas_Nodes_RemoveListItem_ftg_DioramaFourData_DioramaFourKeys : RemoveListItem<DioramaFourData.DioramaFourKeys>
		{
			[Token(Token = "0x6002B08")]
			[Address(RVA = "0xB1C080", Offset = "0xB1C080", VA = "0xB1C080")]
			public FlowCanvas_Nodes_RemoveListItem_ftg_DioramaFourData_DioramaFourKeys()
			{
			}
		}

		[Token(Token = "0x2000B4A")]
		private class FlowCanvas_Nodes_RemoveListItem_ftg_DioramaOneData_DioramaOneKeys : RemoveListItem<DioramaOneData.DioramaOneKeys>
		{
			[Token(Token = "0x6002B09")]
			[Address(RVA = "0xB1C0D0", Offset = "0xB1C0D0", VA = "0xB1C0D0")]
			public FlowCanvas_Nodes_RemoveListItem_ftg_DioramaOneData_DioramaOneKeys()
			{
			}
		}

		[Token(Token = "0x2000B4B")]
		private class FlowCanvas_Nodes_RemoveListItem_ftg_DioramaThreeData_DioramaThreeKeys : RemoveListItem<DioramaThreeData.DioramaThreeKeys>
		{
			[Token(Token = "0x6002B0A")]
			[Address(RVA = "0xB1C120", Offset = "0xB1C120", VA = "0xB1C120")]
			public FlowCanvas_Nodes_RemoveListItem_ftg_DioramaThreeData_DioramaThreeKeys()
			{
			}
		}

		[Token(Token = "0x2000B4C")]
		private class FlowCanvas_Nodes_RemoveListItem_ftg_DioramaTwoData_DioramaTwoKeys : RemoveListItem<DioramaTwoData.DioramaTwoKeys>
		{
			[Token(Token = "0x6002B0B")]
			[Address(RVA = "0xB1C170", Offset = "0xB1C170", VA = "0xB1C170")]
			public FlowCanvas_Nodes_RemoveListItem_ftg_DioramaTwoData_DioramaTwoKeys()
			{
			}
		}

		[Token(Token = "0x2000B4D")]
		private class FlowCanvas_Nodes_RemoveListItem_ftg_SaveManager_DioramaWorlds : RemoveListItem<SaveManager.DioramaWorlds>
		{
			[Token(Token = "0x6002B0C")]
			[Address(RVA = "0xB1C260", Offset = "0xB1C260", VA = "0xB1C260")]
			public FlowCanvas_Nodes_RemoveListItem_ftg_SaveManager_DioramaWorlds()
			{
			}
		}

		[Token(Token = "0x2000B4E")]
		private class FlowCanvas_Nodes_RemoveListItem_ftg_HubRoomData_HubRoomKeys : RemoveListItem<HubRoomData.HubRoomKeys>
		{
			[Token(Token = "0x6002B0D")]
			[Address(RVA = "0xB1C1C0", Offset = "0xB1C1C0", VA = "0xB1C1C0")]
			public FlowCanvas_Nodes_RemoveListItem_ftg_HubRoomData_HubRoomKeys()
			{
			}
		}

		[Token(Token = "0x2000B4F")]
		private class FlowCanvas_Nodes_RemoveListItem_ftg_PersonaSettings_PersonaKeys : RemoveListItem<PersonaSettings.PersonaKeys>
		{
			[Token(Token = "0x6002B0E")]
			[Address(RVA = "0xB1C210", Offset = "0xB1C210", VA = "0xB1C210")]
			public FlowCanvas_Nodes_RemoveListItem_ftg_PersonaSettings_PersonaKeys()
			{
			}
		}

		[Token(Token = "0x2000B50")]
		private class FlowCanvas_Nodes_RemoveListItem_UnityEngine_LayerMask : RemoveListItem<LayerMask>
		{
			[Token(Token = "0x6002B0F")]
			[Address(RVA = "0xB1BD10", Offset = "0xB1BD10", VA = "0xB1BD10")]
			public FlowCanvas_Nodes_RemoveListItem_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000B51")]
		private class FlowCanvas_Nodes_RemoveListItemAt_System_Boolean : RemoveListItemAt<bool>
		{
			[Token(Token = "0x6002B10")]
			[Address(RVA = "0xB1B130", Offset = "0xB1B130", VA = "0xB1B130")]
			public FlowCanvas_Nodes_RemoveListItemAt_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000B52")]
		private class FlowCanvas_Nodes_RemoveListItemAt_System_Single : RemoveListItemAt<float>
		{
			[Token(Token = "0x6002B11")]
			[Address(RVA = "0xB1B1D0", Offset = "0xB1B1D0", VA = "0xB1B1D0")]
			public FlowCanvas_Nodes_RemoveListItemAt_System_Single()
			{
			}
		}

		[Token(Token = "0x2000B53")]
		private class FlowCanvas_Nodes_RemoveListItemAt_System_Int32 : RemoveListItemAt<int>
		{
			[Token(Token = "0x6002B12")]
			[Address(RVA = "0xB1B180", Offset = "0xB1B180", VA = "0xB1B180")]
			public FlowCanvas_Nodes_RemoveListItemAt_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000B54")]
		private class FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_Vector2 : RemoveListItemAt<Vector2>
		{
			[Token(Token = "0x6002B13")]
			[Address(RVA = "0xB1B680", Offset = "0xB1B680", VA = "0xB1B680")]
			public FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000B55")]
		private class FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_Vector3 : RemoveListItemAt<Vector3>
		{
			[Token(Token = "0x6002B14")]
			[Address(RVA = "0xB1B6D0", Offset = "0xB1B6D0", VA = "0xB1B6D0")]
			public FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000B56")]
		private class FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_Vector4 : RemoveListItemAt<Vector4>
		{
			[Token(Token = "0x6002B15")]
			[Address(RVA = "0xB1B720", Offset = "0xB1B720", VA = "0xB1B720")]
			public FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x2000B57")]
		private class FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_Quaternion : RemoveListItemAt<Quaternion>
		{
			[Token(Token = "0x6002B16")]
			[Address(RVA = "0xB1B4A0", Offset = "0xB1B4A0", VA = "0xB1B4A0")]
			public FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000B58")]
		private class FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_Keyframe : RemoveListItemAt<Keyframe>
		{
			[Token(Token = "0x6002B17")]
			[Address(RVA = "0xB1B400", Offset = "0xB1B400", VA = "0xB1B400")]
			public FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000B59")]
		private class FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_Bounds : RemoveListItemAt<Bounds>
		{
			[Token(Token = "0x6002B18")]
			[Address(RVA = "0xB1B220", Offset = "0xB1B220", VA = "0xB1B220")]
			public FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000B5A")]
		private class FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_Color : RemoveListItemAt<Color>
		{
			[Token(Token = "0x6002B19")]
			[Address(RVA = "0xB1B310", Offset = "0xB1B310", VA = "0xB1B310")]
			public FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000B5B")]
		private class FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_Rect : RemoveListItemAt<Rect>
		{
			[Token(Token = "0x6002B1A")]
			[Address(RVA = "0xB1B5E0", Offset = "0xB1B5E0", VA = "0xB1B5E0")]
			public FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000B5C")]
		private class FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_ContactPoint : RemoveListItemAt<ContactPoint>
		{
			[Token(Token = "0x6002B1B")]
			[Address(RVA = "0xB1B360", Offset = "0xB1B360", VA = "0xB1B360")]
			public FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000B5D")]
		private class FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_ContactPoint2D : RemoveListItemAt<ContactPoint2D>
		{
			[Token(Token = "0x6002B1C")]
			[Address(RVA = "0xB1B3B0", Offset = "0xB1B3B0", VA = "0xB1B3B0")]
			public FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000B5E")]
		private class FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_Collision : RemoveListItemAt<Collision>
		{
			[Token(Token = "0x6002B1D")]
			[Address(RVA = "0xB1B270", Offset = "0xB1B270", VA = "0xB1B270")]
			public FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x2000B5F")]
		private class FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_Collision2D : RemoveListItemAt<Collision2D>
		{
			[Token(Token = "0x6002B1E")]
			[Address(RVA = "0xB1B2C0", Offset = "0xB1B2C0", VA = "0xB1B2C0")]
			public FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000B60")]
		private class FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_RaycastHit : RemoveListItemAt<RaycastHit>
		{
			[Token(Token = "0x6002B1F")]
			[Address(RVA = "0xB1B540", Offset = "0xB1B540", VA = "0xB1B540")]
			public FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000B61")]
		private class FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_RaycastHit2D : RemoveListItemAt<RaycastHit2D>
		{
			[Token(Token = "0x6002B20")]
			[Address(RVA = "0xB1B590", Offset = "0xB1B590", VA = "0xB1B590")]
			public FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000B62")]
		private class FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_Ray : RemoveListItemAt<Ray>
		{
			[Token(Token = "0x6002B21")]
			[Address(RVA = "0xB1B4F0", Offset = "0xB1B4F0", VA = "0xB1B4F0")]
			public FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x2000B63")]
		private class FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_Space : RemoveListItemAt<Space>
		{
			[Token(Token = "0x6002B22")]
			[Address(RVA = "0xB1B630", Offset = "0xB1B630", VA = "0xB1B630")]
			public FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000B64")]
		private class FlowCanvas_Nodes_RemoveListItemAt_ftg_DioramaFiveData_DioramaFiveKeys : RemoveListItemAt<DioramaFiveData.DioramaFiveKeys>
		{
			[Token(Token = "0x6002B23")]
			[Address(RVA = "0xB1B770", Offset = "0xB1B770", VA = "0xB1B770")]
			public FlowCanvas_Nodes_RemoveListItemAt_ftg_DioramaFiveData_DioramaFiveKeys()
			{
			}
		}

		[Token(Token = "0x2000B65")]
		private class FlowCanvas_Nodes_RemoveListItemAt_ftg_DioramaFourData_DioramaFourKeys : RemoveListItemAt<DioramaFourData.DioramaFourKeys>
		{
			[Token(Token = "0x6002B24")]
			[Address(RVA = "0xB1B7C0", Offset = "0xB1B7C0", VA = "0xB1B7C0")]
			public FlowCanvas_Nodes_RemoveListItemAt_ftg_DioramaFourData_DioramaFourKeys()
			{
			}
		}

		[Token(Token = "0x2000B66")]
		private class FlowCanvas_Nodes_RemoveListItemAt_ftg_DioramaOneData_DioramaOneKeys : RemoveListItemAt<DioramaOneData.DioramaOneKeys>
		{
			[Token(Token = "0x6002B25")]
			[Address(RVA = "0xB1B810", Offset = "0xB1B810", VA = "0xB1B810")]
			public FlowCanvas_Nodes_RemoveListItemAt_ftg_DioramaOneData_DioramaOneKeys()
			{
			}
		}

		[Token(Token = "0x2000B67")]
		private class FlowCanvas_Nodes_RemoveListItemAt_ftg_DioramaThreeData_DioramaThreeKeys : RemoveListItemAt<DioramaThreeData.DioramaThreeKeys>
		{
			[Token(Token = "0x6002B26")]
			[Address(RVA = "0xB1B860", Offset = "0xB1B860", VA = "0xB1B860")]
			public FlowCanvas_Nodes_RemoveListItemAt_ftg_DioramaThreeData_DioramaThreeKeys()
			{
			}
		}

		[Token(Token = "0x2000B68")]
		private class FlowCanvas_Nodes_RemoveListItemAt_ftg_DioramaTwoData_DioramaTwoKeys : RemoveListItemAt<DioramaTwoData.DioramaTwoKeys>
		{
			[Token(Token = "0x6002B27")]
			[Address(RVA = "0xB1B8B0", Offset = "0xB1B8B0", VA = "0xB1B8B0")]
			public FlowCanvas_Nodes_RemoveListItemAt_ftg_DioramaTwoData_DioramaTwoKeys()
			{
			}
		}

		[Token(Token = "0x2000B69")]
		private class FlowCanvas_Nodes_RemoveListItemAt_ftg_SaveManager_DioramaWorlds : RemoveListItemAt<SaveManager.DioramaWorlds>
		{
			[Token(Token = "0x6002B28")]
			[Address(RVA = "0xB1B9A0", Offset = "0xB1B9A0", VA = "0xB1B9A0")]
			public FlowCanvas_Nodes_RemoveListItemAt_ftg_SaveManager_DioramaWorlds()
			{
			}
		}

		[Token(Token = "0x2000B6A")]
		private class FlowCanvas_Nodes_RemoveListItemAt_ftg_HubRoomData_HubRoomKeys : RemoveListItemAt<HubRoomData.HubRoomKeys>
		{
			[Token(Token = "0x6002B29")]
			[Address(RVA = "0xB1B900", Offset = "0xB1B900", VA = "0xB1B900")]
			public FlowCanvas_Nodes_RemoveListItemAt_ftg_HubRoomData_HubRoomKeys()
			{
			}
		}

		[Token(Token = "0x2000B6B")]
		private class FlowCanvas_Nodes_RemoveListItemAt_ftg_PersonaSettings_PersonaKeys : RemoveListItemAt<PersonaSettings.PersonaKeys>
		{
			[Token(Token = "0x6002B2A")]
			[Address(RVA = "0xB1B950", Offset = "0xB1B950", VA = "0xB1B950")]
			public FlowCanvas_Nodes_RemoveListItemAt_ftg_PersonaSettings_PersonaKeys()
			{
			}
		}

		[Token(Token = "0x2000B6C")]
		private class FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_LayerMask : RemoveListItemAt<LayerMask>
		{
			[Token(Token = "0x6002B2B")]
			[Address(RVA = "0xB1B450", Offset = "0xB1B450", VA = "0xB1B450")]
			public FlowCanvas_Nodes_RemoveListItemAt_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000B6D")]
		private class FlowCanvas_Nodes_SelectOnBool_System_Boolean : SelectOnBool<bool>
		{
			[Token(Token = "0x6002B2C")]
			[Address(RVA = "0xB1C2B0", Offset = "0xB1C2B0", VA = "0xB1C2B0")]
			public FlowCanvas_Nodes_SelectOnBool_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000B6E")]
		private class FlowCanvas_Nodes_SelectOnBool_System_Single : SelectOnBool<float>
		{
			[Token(Token = "0x6002B2D")]
			[Address(RVA = "0xB1C350", Offset = "0xB1C350", VA = "0xB1C350")]
			public FlowCanvas_Nodes_SelectOnBool_System_Single()
			{
			}
		}

		[Token(Token = "0x2000B6F")]
		private class FlowCanvas_Nodes_SelectOnBool_System_Int32 : SelectOnBool<int>
		{
			[Token(Token = "0x6002B2E")]
			[Address(RVA = "0xB1C300", Offset = "0xB1C300", VA = "0xB1C300")]
			public FlowCanvas_Nodes_SelectOnBool_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000B70")]
		private class FlowCanvas_Nodes_SelectOnBool_UnityEngine_Vector2 : SelectOnBool<Vector2>
		{
			[Token(Token = "0x6002B2F")]
			[Address(RVA = "0xB1C800", Offset = "0xB1C800", VA = "0xB1C800")]
			public FlowCanvas_Nodes_SelectOnBool_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000B71")]
		private class FlowCanvas_Nodes_SelectOnBool_UnityEngine_Vector3 : SelectOnBool<Vector3>
		{
			[Token(Token = "0x6002B30")]
			[Address(RVA = "0xB1C850", Offset = "0xB1C850", VA = "0xB1C850")]
			public FlowCanvas_Nodes_SelectOnBool_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000B72")]
		private class FlowCanvas_Nodes_SelectOnBool_UnityEngine_Vector4 : SelectOnBool<Vector4>
		{
			[Token(Token = "0x6002B31")]
			[Address(RVA = "0xB1C8A0", Offset = "0xB1C8A0", VA = "0xB1C8A0")]
			public FlowCanvas_Nodes_SelectOnBool_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x2000B73")]
		private class FlowCanvas_Nodes_SelectOnBool_UnityEngine_Quaternion : SelectOnBool<Quaternion>
		{
			[Token(Token = "0x6002B32")]
			[Address(RVA = "0xB1C620", Offset = "0xB1C620", VA = "0xB1C620")]
			public FlowCanvas_Nodes_SelectOnBool_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000B74")]
		private class FlowCanvas_Nodes_SelectOnBool_UnityEngine_Keyframe : SelectOnBool<Keyframe>
		{
			[Token(Token = "0x6002B33")]
			[Address(RVA = "0xB1C580", Offset = "0xB1C580", VA = "0xB1C580")]
			public FlowCanvas_Nodes_SelectOnBool_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000B75")]
		private class FlowCanvas_Nodes_SelectOnBool_UnityEngine_Bounds : SelectOnBool<Bounds>
		{
			[Token(Token = "0x6002B34")]
			[Address(RVA = "0xB1C3A0", Offset = "0xB1C3A0", VA = "0xB1C3A0")]
			public FlowCanvas_Nodes_SelectOnBool_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000B76")]
		private class FlowCanvas_Nodes_SelectOnBool_UnityEngine_Color : SelectOnBool<Color>
		{
			[Token(Token = "0x6002B35")]
			[Address(RVA = "0xB1C490", Offset = "0xB1C490", VA = "0xB1C490")]
			public FlowCanvas_Nodes_SelectOnBool_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000B77")]
		private class FlowCanvas_Nodes_SelectOnBool_UnityEngine_Rect : SelectOnBool<Rect>
		{
			[Token(Token = "0x6002B36")]
			[Address(RVA = "0xB1C760", Offset = "0xB1C760", VA = "0xB1C760")]
			public FlowCanvas_Nodes_SelectOnBool_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000B78")]
		private class FlowCanvas_Nodes_SelectOnBool_UnityEngine_ContactPoint : SelectOnBool<ContactPoint>
		{
			[Token(Token = "0x6002B37")]
			[Address(RVA = "0xB1C4E0", Offset = "0xB1C4E0", VA = "0xB1C4E0")]
			public FlowCanvas_Nodes_SelectOnBool_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000B79")]
		private class FlowCanvas_Nodes_SelectOnBool_UnityEngine_ContactPoint2D : SelectOnBool<ContactPoint2D>
		{
			[Token(Token = "0x6002B38")]
			[Address(RVA = "0xB1C530", Offset = "0xB1C530", VA = "0xB1C530")]
			public FlowCanvas_Nodes_SelectOnBool_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000B7A")]
		private class FlowCanvas_Nodes_SelectOnBool_UnityEngine_Collision : SelectOnBool<Collision>
		{
			[Token(Token = "0x6002B39")]
			[Address(RVA = "0xB1C3F0", Offset = "0xB1C3F0", VA = "0xB1C3F0")]
			public FlowCanvas_Nodes_SelectOnBool_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x2000B7B")]
		private class FlowCanvas_Nodes_SelectOnBool_UnityEngine_Collision2D : SelectOnBool<Collision2D>
		{
			[Token(Token = "0x6002B3A")]
			[Address(RVA = "0xB1C440", Offset = "0xB1C440", VA = "0xB1C440")]
			public FlowCanvas_Nodes_SelectOnBool_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000B7C")]
		private class FlowCanvas_Nodes_SelectOnBool_UnityEngine_RaycastHit : SelectOnBool<RaycastHit>
		{
			[Token(Token = "0x6002B3B")]
			[Address(RVA = "0xB1C6C0", Offset = "0xB1C6C0", VA = "0xB1C6C0")]
			public FlowCanvas_Nodes_SelectOnBool_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000B7D")]
		private class FlowCanvas_Nodes_SelectOnBool_UnityEngine_RaycastHit2D : SelectOnBool<RaycastHit2D>
		{
			[Token(Token = "0x6002B3C")]
			[Address(RVA = "0xB1C710", Offset = "0xB1C710", VA = "0xB1C710")]
			public FlowCanvas_Nodes_SelectOnBool_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000B7E")]
		private class FlowCanvas_Nodes_SelectOnBool_UnityEngine_Ray : SelectOnBool<Ray>
		{
			[Token(Token = "0x6002B3D")]
			[Address(RVA = "0xB1C670", Offset = "0xB1C670", VA = "0xB1C670")]
			public FlowCanvas_Nodes_SelectOnBool_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x2000B7F")]
		private class FlowCanvas_Nodes_SelectOnBool_UnityEngine_Space : SelectOnBool<Space>
		{
			[Token(Token = "0x6002B3E")]
			[Address(RVA = "0xB1C7B0", Offset = "0xB1C7B0", VA = "0xB1C7B0")]
			public FlowCanvas_Nodes_SelectOnBool_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000B80")]
		private class FlowCanvas_Nodes_SelectOnBool_ftg_DioramaFiveData_DioramaFiveKeys : SelectOnBool<DioramaFiveData.DioramaFiveKeys>
		{
			[Token(Token = "0x6002B3F")]
			[Address(RVA = "0xB1C8F0", Offset = "0xB1C8F0", VA = "0xB1C8F0")]
			public FlowCanvas_Nodes_SelectOnBool_ftg_DioramaFiveData_DioramaFiveKeys()
			{
			}
		}

		[Token(Token = "0x2000B81")]
		private class FlowCanvas_Nodes_SelectOnBool_ftg_DioramaFourData_DioramaFourKeys : SelectOnBool<DioramaFourData.DioramaFourKeys>
		{
			[Token(Token = "0x6002B40")]
			[Address(RVA = "0xB1C940", Offset = "0xB1C940", VA = "0xB1C940")]
			public FlowCanvas_Nodes_SelectOnBool_ftg_DioramaFourData_DioramaFourKeys()
			{
			}
		}

		[Token(Token = "0x2000B82")]
		private class FlowCanvas_Nodes_SelectOnBool_ftg_DioramaOneData_DioramaOneKeys : SelectOnBool<DioramaOneData.DioramaOneKeys>
		{
			[Token(Token = "0x6002B41")]
			[Address(RVA = "0xB1C990", Offset = "0xB1C990", VA = "0xB1C990")]
			public FlowCanvas_Nodes_SelectOnBool_ftg_DioramaOneData_DioramaOneKeys()
			{
			}
		}

		[Token(Token = "0x2000B83")]
		private class FlowCanvas_Nodes_SelectOnBool_ftg_DioramaThreeData_DioramaThreeKeys : SelectOnBool<DioramaThreeData.DioramaThreeKeys>
		{
			[Token(Token = "0x6002B42")]
			[Address(RVA = "0xB1C9E0", Offset = "0xB1C9E0", VA = "0xB1C9E0")]
			public FlowCanvas_Nodes_SelectOnBool_ftg_DioramaThreeData_DioramaThreeKeys()
			{
			}
		}

		[Token(Token = "0x2000B84")]
		private class FlowCanvas_Nodes_SelectOnBool_ftg_DioramaTwoData_DioramaTwoKeys : SelectOnBool<DioramaTwoData.DioramaTwoKeys>
		{
			[Token(Token = "0x6002B43")]
			[Address(RVA = "0xB1CA30", Offset = "0xB1CA30", VA = "0xB1CA30")]
			public FlowCanvas_Nodes_SelectOnBool_ftg_DioramaTwoData_DioramaTwoKeys()
			{
			}
		}

		[Token(Token = "0x2000B85")]
		private class FlowCanvas_Nodes_SelectOnBool_ftg_SaveManager_DioramaWorlds : SelectOnBool<SaveManager.DioramaWorlds>
		{
			[Token(Token = "0x6002B44")]
			[Address(RVA = "0xB1CB20", Offset = "0xB1CB20", VA = "0xB1CB20")]
			public FlowCanvas_Nodes_SelectOnBool_ftg_SaveManager_DioramaWorlds()
			{
			}
		}

		[Token(Token = "0x2000B86")]
		private class FlowCanvas_Nodes_SelectOnBool_ftg_HubRoomData_HubRoomKeys : SelectOnBool<HubRoomData.HubRoomKeys>
		{
			[Token(Token = "0x6002B45")]
			[Address(RVA = "0xB1CA80", Offset = "0xB1CA80", VA = "0xB1CA80")]
			public FlowCanvas_Nodes_SelectOnBool_ftg_HubRoomData_HubRoomKeys()
			{
			}
		}

		[Token(Token = "0x2000B87")]
		private class FlowCanvas_Nodes_SelectOnBool_ftg_PersonaSettings_PersonaKeys : SelectOnBool<PersonaSettings.PersonaKeys>
		{
			[Token(Token = "0x6002B46")]
			[Address(RVA = "0xB1CAD0", Offset = "0xB1CAD0", VA = "0xB1CAD0")]
			public FlowCanvas_Nodes_SelectOnBool_ftg_PersonaSettings_PersonaKeys()
			{
			}
		}

		[Token(Token = "0x2000B88")]
		private class FlowCanvas_Nodes_SelectOnBool_UnityEngine_LayerMask : SelectOnBool<LayerMask>
		{
			[Token(Token = "0x6002B47")]
			[Address(RVA = "0xB1C5D0", Offset = "0xB1C5D0", VA = "0xB1C5D0")]
			public FlowCanvas_Nodes_SelectOnBool_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000B89")]
		private class FlowCanvas_Nodes_SelectOnEnum_System_Boolean : SelectOnEnum<bool>
		{
			[Token(Token = "0x6002B48")]
			[Address(RVA = "0xB1CB70", Offset = "0xB1CB70", VA = "0xB1CB70")]
			public FlowCanvas_Nodes_SelectOnEnum_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000B8A")]
		private class FlowCanvas_Nodes_SelectOnEnum_System_Single : SelectOnEnum<float>
		{
			[Token(Token = "0x6002B49")]
			[Address(RVA = "0xB1CC10", Offset = "0xB1CC10", VA = "0xB1CC10")]
			public FlowCanvas_Nodes_SelectOnEnum_System_Single()
			{
			}
		}

		[Token(Token = "0x2000B8B")]
		private class FlowCanvas_Nodes_SelectOnEnum_System_Int32 : SelectOnEnum<int>
		{
			[Token(Token = "0x6002B4A")]
			[Address(RVA = "0xB1CBC0", Offset = "0xB1CBC0", VA = "0xB1CBC0")]
			public FlowCanvas_Nodes_SelectOnEnum_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000B8C")]
		private class FlowCanvas_Nodes_SelectOnEnum_UnityEngine_Vector2 : SelectOnEnum<Vector2>
		{
			[Token(Token = "0x6002B4B")]
			[Address(RVA = "0xB1D0C0", Offset = "0xB1D0C0", VA = "0xB1D0C0")]
			public FlowCanvas_Nodes_SelectOnEnum_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000B8D")]
		private class FlowCanvas_Nodes_SelectOnEnum_UnityEngine_Vector3 : SelectOnEnum<Vector3>
		{
			[Token(Token = "0x6002B4C")]
			[Address(RVA = "0xB1D110", Offset = "0xB1D110", VA = "0xB1D110")]
			public FlowCanvas_Nodes_SelectOnEnum_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000B8E")]
		private class FlowCanvas_Nodes_SelectOnEnum_UnityEngine_Vector4 : SelectOnEnum<Vector4>
		{
			[Token(Token = "0x6002B4D")]
			[Address(RVA = "0xB1D160", Offset = "0xB1D160", VA = "0xB1D160")]
			public FlowCanvas_Nodes_SelectOnEnum_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x2000B8F")]
		private class FlowCanvas_Nodes_SelectOnEnum_UnityEngine_Quaternion : SelectOnEnum<Quaternion>
		{
			[Token(Token = "0x6002B4E")]
			[Address(RVA = "0xB1CEE0", Offset = "0xB1CEE0", VA = "0xB1CEE0")]
			public FlowCanvas_Nodes_SelectOnEnum_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000B90")]
		private class FlowCanvas_Nodes_SelectOnEnum_UnityEngine_Keyframe : SelectOnEnum<Keyframe>
		{
			[Token(Token = "0x6002B4F")]
			[Address(RVA = "0xB1CE40", Offset = "0xB1CE40", VA = "0xB1CE40")]
			public FlowCanvas_Nodes_SelectOnEnum_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000B91")]
		private class FlowCanvas_Nodes_SelectOnEnum_UnityEngine_Bounds : SelectOnEnum<Bounds>
		{
			[Token(Token = "0x6002B50")]
			[Address(RVA = "0xB1CC60", Offset = "0xB1CC60", VA = "0xB1CC60")]
			public FlowCanvas_Nodes_SelectOnEnum_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000B92")]
		private class FlowCanvas_Nodes_SelectOnEnum_UnityEngine_Color : SelectOnEnum<Color>
		{
			[Token(Token = "0x6002B51")]
			[Address(RVA = "0xB1CD50", Offset = "0xB1CD50", VA = "0xB1CD50")]
			public FlowCanvas_Nodes_SelectOnEnum_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000B93")]
		private class FlowCanvas_Nodes_SelectOnEnum_UnityEngine_Rect : SelectOnEnum<Rect>
		{
			[Token(Token = "0x6002B52")]
			[Address(RVA = "0xB1D020", Offset = "0xB1D020", VA = "0xB1D020")]
			public FlowCanvas_Nodes_SelectOnEnum_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000B94")]
		private class FlowCanvas_Nodes_SelectOnEnum_UnityEngine_ContactPoint : SelectOnEnum<ContactPoint>
		{
			[Token(Token = "0x6002B53")]
			[Address(RVA = "0xB1CDA0", Offset = "0xB1CDA0", VA = "0xB1CDA0")]
			public FlowCanvas_Nodes_SelectOnEnum_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000B95")]
		private class FlowCanvas_Nodes_SelectOnEnum_UnityEngine_ContactPoint2D : SelectOnEnum<ContactPoint2D>
		{
			[Token(Token = "0x6002B54")]
			[Address(RVA = "0xB1CDF0", Offset = "0xB1CDF0", VA = "0xB1CDF0")]
			public FlowCanvas_Nodes_SelectOnEnum_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000B96")]
		private class FlowCanvas_Nodes_SelectOnEnum_UnityEngine_Collision : SelectOnEnum<Collision>
		{
			[Token(Token = "0x6002B55")]
			[Address(RVA = "0xB1CCB0", Offset = "0xB1CCB0", VA = "0xB1CCB0")]
			public FlowCanvas_Nodes_SelectOnEnum_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x2000B97")]
		private class FlowCanvas_Nodes_SelectOnEnum_UnityEngine_Collision2D : SelectOnEnum<Collision2D>
		{
			[Token(Token = "0x6002B56")]
			[Address(RVA = "0xB1CD00", Offset = "0xB1CD00", VA = "0xB1CD00")]
			public FlowCanvas_Nodes_SelectOnEnum_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000B98")]
		private class FlowCanvas_Nodes_SelectOnEnum_UnityEngine_RaycastHit : SelectOnEnum<RaycastHit>
		{
			[Token(Token = "0x6002B57")]
			[Address(RVA = "0xB1CF80", Offset = "0xB1CF80", VA = "0xB1CF80")]
			public FlowCanvas_Nodes_SelectOnEnum_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000B99")]
		private class FlowCanvas_Nodes_SelectOnEnum_UnityEngine_RaycastHit2D : SelectOnEnum<RaycastHit2D>
		{
			[Token(Token = "0x6002B58")]
			[Address(RVA = "0xB1CFD0", Offset = "0xB1CFD0", VA = "0xB1CFD0")]
			public FlowCanvas_Nodes_SelectOnEnum_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000B9A")]
		private class FlowCanvas_Nodes_SelectOnEnum_UnityEngine_Ray : SelectOnEnum<Ray>
		{
			[Token(Token = "0x6002B59")]
			[Address(RVA = "0xB1CF30", Offset = "0xB1CF30", VA = "0xB1CF30")]
			public FlowCanvas_Nodes_SelectOnEnum_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x2000B9B")]
		private class FlowCanvas_Nodes_SelectOnEnum_UnityEngine_Space : SelectOnEnum<Space>
		{
			[Token(Token = "0x6002B5A")]
			[Address(RVA = "0xB1D070", Offset = "0xB1D070", VA = "0xB1D070")]
			public FlowCanvas_Nodes_SelectOnEnum_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000B9C")]
		private class FlowCanvas_Nodes_SelectOnEnum_ftg_DioramaFiveData_DioramaFiveKeys : SelectOnEnum<DioramaFiveData.DioramaFiveKeys>
		{
			[Token(Token = "0x6002B5B")]
			[Address(RVA = "0xB1D1B0", Offset = "0xB1D1B0", VA = "0xB1D1B0")]
			public FlowCanvas_Nodes_SelectOnEnum_ftg_DioramaFiveData_DioramaFiveKeys()
			{
			}
		}

		[Token(Token = "0x2000B9D")]
		private class FlowCanvas_Nodes_SelectOnEnum_ftg_DioramaFourData_DioramaFourKeys : SelectOnEnum<DioramaFourData.DioramaFourKeys>
		{
			[Token(Token = "0x6002B5C")]
			[Address(RVA = "0xB1D200", Offset = "0xB1D200", VA = "0xB1D200")]
			public FlowCanvas_Nodes_SelectOnEnum_ftg_DioramaFourData_DioramaFourKeys()
			{
			}
		}

		[Token(Token = "0x2000B9E")]
		private class FlowCanvas_Nodes_SelectOnEnum_ftg_DioramaOneData_DioramaOneKeys : SelectOnEnum<DioramaOneData.DioramaOneKeys>
		{
			[Token(Token = "0x6002B5D")]
			[Address(RVA = "0xB1D250", Offset = "0xB1D250", VA = "0xB1D250")]
			public FlowCanvas_Nodes_SelectOnEnum_ftg_DioramaOneData_DioramaOneKeys()
			{
			}
		}

		[Token(Token = "0x2000B9F")]
		private class FlowCanvas_Nodes_SelectOnEnum_ftg_DioramaThreeData_DioramaThreeKeys : SelectOnEnum<DioramaThreeData.DioramaThreeKeys>
		{
			[Token(Token = "0x6002B5E")]
			[Address(RVA = "0xB1D2A0", Offset = "0xB1D2A0", VA = "0xB1D2A0")]
			public FlowCanvas_Nodes_SelectOnEnum_ftg_DioramaThreeData_DioramaThreeKeys()
			{
			}
		}

		[Token(Token = "0x2000BA0")]
		private class FlowCanvas_Nodes_SelectOnEnum_ftg_DioramaTwoData_DioramaTwoKeys : SelectOnEnum<DioramaTwoData.DioramaTwoKeys>
		{
			[Token(Token = "0x6002B5F")]
			[Address(RVA = "0xB1D2F0", Offset = "0xB1D2F0", VA = "0xB1D2F0")]
			public FlowCanvas_Nodes_SelectOnEnum_ftg_DioramaTwoData_DioramaTwoKeys()
			{
			}
		}

		[Token(Token = "0x2000BA1")]
		private class FlowCanvas_Nodes_SelectOnEnum_ftg_SaveManager_DioramaWorlds : SelectOnEnum<SaveManager.DioramaWorlds>
		{
			[Token(Token = "0x6002B60")]
			[Address(RVA = "0xB1D3E0", Offset = "0xB1D3E0", VA = "0xB1D3E0")]
			public FlowCanvas_Nodes_SelectOnEnum_ftg_SaveManager_DioramaWorlds()
			{
			}
		}

		[Token(Token = "0x2000BA2")]
		private class FlowCanvas_Nodes_SelectOnEnum_ftg_HubRoomData_HubRoomKeys : SelectOnEnum<HubRoomData.HubRoomKeys>
		{
			[Token(Token = "0x6002B61")]
			[Address(RVA = "0xB1D340", Offset = "0xB1D340", VA = "0xB1D340")]
			public FlowCanvas_Nodes_SelectOnEnum_ftg_HubRoomData_HubRoomKeys()
			{
			}
		}

		[Token(Token = "0x2000BA3")]
		private class FlowCanvas_Nodes_SelectOnEnum_ftg_PersonaSettings_PersonaKeys : SelectOnEnum<PersonaSettings.PersonaKeys>
		{
			[Token(Token = "0x6002B62")]
			[Address(RVA = "0xB1D390", Offset = "0xB1D390", VA = "0xB1D390")]
			public FlowCanvas_Nodes_SelectOnEnum_ftg_PersonaSettings_PersonaKeys()
			{
			}
		}

		[Token(Token = "0x2000BA4")]
		private class FlowCanvas_Nodes_SelectOnEnum_UnityEngine_LayerMask : SelectOnEnum<LayerMask>
		{
			[Token(Token = "0x6002B63")]
			[Address(RVA = "0xB1CE90", Offset = "0xB1CE90", VA = "0xB1CE90")]
			public FlowCanvas_Nodes_SelectOnEnum_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000BA5")]
		private class FlowCanvas_Nodes_SelectOnInt_System_Boolean : SelectOnInt<bool>
		{
			[Token(Token = "0x6002B64")]
			[Address(RVA = "0xB1D430", Offset = "0xB1D430", VA = "0xB1D430")]
			public FlowCanvas_Nodes_SelectOnInt_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000BA6")]
		private class FlowCanvas_Nodes_SelectOnInt_System_Single : SelectOnInt<float>
		{
			[Token(Token = "0x6002B65")]
			[Address(RVA = "0xB1D4D0", Offset = "0xB1D4D0", VA = "0xB1D4D0")]
			public FlowCanvas_Nodes_SelectOnInt_System_Single()
			{
			}
		}

		[Token(Token = "0x2000BA7")]
		private class FlowCanvas_Nodes_SelectOnInt_System_Int32 : SelectOnInt<int>
		{
			[Token(Token = "0x6002B66")]
			[Address(RVA = "0xB1D480", Offset = "0xB1D480", VA = "0xB1D480")]
			public FlowCanvas_Nodes_SelectOnInt_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000BA8")]
		private class FlowCanvas_Nodes_SelectOnInt_UnityEngine_Vector2 : SelectOnInt<Vector2>
		{
			[Token(Token = "0x6002B67")]
			[Address(RVA = "0xB1D980", Offset = "0xB1D980", VA = "0xB1D980")]
			public FlowCanvas_Nodes_SelectOnInt_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000BA9")]
		private class FlowCanvas_Nodes_SelectOnInt_UnityEngine_Vector3 : SelectOnInt<Vector3>
		{
			[Token(Token = "0x6002B68")]
			[Address(RVA = "0xB1D9D0", Offset = "0xB1D9D0", VA = "0xB1D9D0")]
			public FlowCanvas_Nodes_SelectOnInt_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000BAA")]
		private class FlowCanvas_Nodes_SelectOnInt_UnityEngine_Vector4 : SelectOnInt<Vector4>
		{
			[Token(Token = "0x6002B69")]
			[Address(RVA = "0xB1DA20", Offset = "0xB1DA20", VA = "0xB1DA20")]
			public FlowCanvas_Nodes_SelectOnInt_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x2000BAB")]
		private class FlowCanvas_Nodes_SelectOnInt_UnityEngine_Quaternion : SelectOnInt<Quaternion>
		{
			[Token(Token = "0x6002B6A")]
			[Address(RVA = "0xB1D7A0", Offset = "0xB1D7A0", VA = "0xB1D7A0")]
			public FlowCanvas_Nodes_SelectOnInt_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000BAC")]
		private class FlowCanvas_Nodes_SelectOnInt_UnityEngine_Keyframe : SelectOnInt<Keyframe>
		{
			[Token(Token = "0x6002B6B")]
			[Address(RVA = "0xB1D700", Offset = "0xB1D700", VA = "0xB1D700")]
			public FlowCanvas_Nodes_SelectOnInt_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000BAD")]
		private class FlowCanvas_Nodes_SelectOnInt_UnityEngine_Bounds : SelectOnInt<Bounds>
		{
			[Token(Token = "0x6002B6C")]
			[Address(RVA = "0xB1D520", Offset = "0xB1D520", VA = "0xB1D520")]
			public FlowCanvas_Nodes_SelectOnInt_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000BAE")]
		private class FlowCanvas_Nodes_SelectOnInt_UnityEngine_Color : SelectOnInt<Color>
		{
			[Token(Token = "0x6002B6D")]
			[Address(RVA = "0xB1D610", Offset = "0xB1D610", VA = "0xB1D610")]
			public FlowCanvas_Nodes_SelectOnInt_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000BAF")]
		private class FlowCanvas_Nodes_SelectOnInt_UnityEngine_Rect : SelectOnInt<Rect>
		{
			[Token(Token = "0x6002B6E")]
			[Address(RVA = "0xB1D8E0", Offset = "0xB1D8E0", VA = "0xB1D8E0")]
			public FlowCanvas_Nodes_SelectOnInt_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000BB0")]
		private class FlowCanvas_Nodes_SelectOnInt_UnityEngine_ContactPoint : SelectOnInt<ContactPoint>
		{
			[Token(Token = "0x6002B6F")]
			[Address(RVA = "0xB1D660", Offset = "0xB1D660", VA = "0xB1D660")]
			public FlowCanvas_Nodes_SelectOnInt_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000BB1")]
		private class FlowCanvas_Nodes_SelectOnInt_UnityEngine_ContactPoint2D : SelectOnInt<ContactPoint2D>
		{
			[Token(Token = "0x6002B70")]
			[Address(RVA = "0xB1D6B0", Offset = "0xB1D6B0", VA = "0xB1D6B0")]
			public FlowCanvas_Nodes_SelectOnInt_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000BB2")]
		private class FlowCanvas_Nodes_SelectOnInt_UnityEngine_Collision : SelectOnInt<Collision>
		{
			[Token(Token = "0x6002B71")]
			[Address(RVA = "0xB1D570", Offset = "0xB1D570", VA = "0xB1D570")]
			public FlowCanvas_Nodes_SelectOnInt_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x2000BB3")]
		private class FlowCanvas_Nodes_SelectOnInt_UnityEngine_Collision2D : SelectOnInt<Collision2D>
		{
			[Token(Token = "0x6002B72")]
			[Address(RVA = "0xB1D5C0", Offset = "0xB1D5C0", VA = "0xB1D5C0")]
			public FlowCanvas_Nodes_SelectOnInt_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000BB4")]
		private class FlowCanvas_Nodes_SelectOnInt_UnityEngine_RaycastHit : SelectOnInt<RaycastHit>
		{
			[Token(Token = "0x6002B73")]
			[Address(RVA = "0xB1D840", Offset = "0xB1D840", VA = "0xB1D840")]
			public FlowCanvas_Nodes_SelectOnInt_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000BB5")]
		private class FlowCanvas_Nodes_SelectOnInt_UnityEngine_RaycastHit2D : SelectOnInt<RaycastHit2D>
		{
			[Token(Token = "0x6002B74")]
			[Address(RVA = "0xB1D890", Offset = "0xB1D890", VA = "0xB1D890")]
			public FlowCanvas_Nodes_SelectOnInt_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000BB6")]
		private class FlowCanvas_Nodes_SelectOnInt_UnityEngine_Ray : SelectOnInt<Ray>
		{
			[Token(Token = "0x6002B75")]
			[Address(RVA = "0xB1D7F0", Offset = "0xB1D7F0", VA = "0xB1D7F0")]
			public FlowCanvas_Nodes_SelectOnInt_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x2000BB7")]
		private class FlowCanvas_Nodes_SelectOnInt_UnityEngine_Space : SelectOnInt<Space>
		{
			[Token(Token = "0x6002B76")]
			[Address(RVA = "0xB1D930", Offset = "0xB1D930", VA = "0xB1D930")]
			public FlowCanvas_Nodes_SelectOnInt_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000BB8")]
		private class FlowCanvas_Nodes_SelectOnInt_ftg_DioramaFiveData_DioramaFiveKeys : SelectOnInt<DioramaFiveData.DioramaFiveKeys>
		{
			[Token(Token = "0x6002B77")]
			[Address(RVA = "0xB1DA70", Offset = "0xB1DA70", VA = "0xB1DA70")]
			public FlowCanvas_Nodes_SelectOnInt_ftg_DioramaFiveData_DioramaFiveKeys()
			{
			}
		}

		[Token(Token = "0x2000BB9")]
		private class FlowCanvas_Nodes_SelectOnInt_ftg_DioramaFourData_DioramaFourKeys : SelectOnInt<DioramaFourData.DioramaFourKeys>
		{
			[Token(Token = "0x6002B78")]
			[Address(RVA = "0xB1DAC0", Offset = "0xB1DAC0", VA = "0xB1DAC0")]
			public FlowCanvas_Nodes_SelectOnInt_ftg_DioramaFourData_DioramaFourKeys()
			{
			}
		}

		[Token(Token = "0x2000BBA")]
		private class FlowCanvas_Nodes_SelectOnInt_ftg_DioramaOneData_DioramaOneKeys : SelectOnInt<DioramaOneData.DioramaOneKeys>
		{
			[Token(Token = "0x6002B79")]
			[Address(RVA = "0xB1DB10", Offset = "0xB1DB10", VA = "0xB1DB10")]
			public FlowCanvas_Nodes_SelectOnInt_ftg_DioramaOneData_DioramaOneKeys()
			{
			}
		}

		[Token(Token = "0x2000BBB")]
		private class FlowCanvas_Nodes_SelectOnInt_ftg_DioramaThreeData_DioramaThreeKeys : SelectOnInt<DioramaThreeData.DioramaThreeKeys>
		{
			[Token(Token = "0x6002B7A")]
			[Address(RVA = "0xB1DB60", Offset = "0xB1DB60", VA = "0xB1DB60")]
			public FlowCanvas_Nodes_SelectOnInt_ftg_DioramaThreeData_DioramaThreeKeys()
			{
			}
		}

		[Token(Token = "0x2000BBC")]
		private class FlowCanvas_Nodes_SelectOnInt_ftg_DioramaTwoData_DioramaTwoKeys : SelectOnInt<DioramaTwoData.DioramaTwoKeys>
		{
			[Token(Token = "0x6002B7B")]
			[Address(RVA = "0xB1DBB0", Offset = "0xB1DBB0", VA = "0xB1DBB0")]
			public FlowCanvas_Nodes_SelectOnInt_ftg_DioramaTwoData_DioramaTwoKeys()
			{
			}
		}

		[Token(Token = "0x2000BBD")]
		private class FlowCanvas_Nodes_SelectOnInt_ftg_SaveManager_DioramaWorlds : SelectOnInt<SaveManager.DioramaWorlds>
		{
			[Token(Token = "0x6002B7C")]
			[Address(RVA = "0xB1DCA0", Offset = "0xB1DCA0", VA = "0xB1DCA0")]
			public FlowCanvas_Nodes_SelectOnInt_ftg_SaveManager_DioramaWorlds()
			{
			}
		}

		[Token(Token = "0x2000BBE")]
		private class FlowCanvas_Nodes_SelectOnInt_ftg_HubRoomData_HubRoomKeys : SelectOnInt<HubRoomData.HubRoomKeys>
		{
			[Token(Token = "0x6002B7D")]
			[Address(RVA = "0xB1DC00", Offset = "0xB1DC00", VA = "0xB1DC00")]
			public FlowCanvas_Nodes_SelectOnInt_ftg_HubRoomData_HubRoomKeys()
			{
			}
		}

		[Token(Token = "0x2000BBF")]
		private class FlowCanvas_Nodes_SelectOnInt_ftg_PersonaSettings_PersonaKeys : SelectOnInt<PersonaSettings.PersonaKeys>
		{
			[Token(Token = "0x6002B7E")]
			[Address(RVA = "0xB1DC50", Offset = "0xB1DC50", VA = "0xB1DC50")]
			public FlowCanvas_Nodes_SelectOnInt_ftg_PersonaSettings_PersonaKeys()
			{
			}
		}

		[Token(Token = "0x2000BC0")]
		private class FlowCanvas_Nodes_SelectOnInt_UnityEngine_LayerMask : SelectOnInt<LayerMask>
		{
			[Token(Token = "0x6002B7F")]
			[Address(RVA = "0xB1D750", Offset = "0xB1D750", VA = "0xB1D750")]
			public FlowCanvas_Nodes_SelectOnInt_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000BC1")]
		private class FlowCanvas_Nodes_SelectOnString_System_Boolean : SelectOnString<bool>
		{
			[Token(Token = "0x6002B80")]
			[Address(RVA = "0xB1DCF0", Offset = "0xB1DCF0", VA = "0xB1DCF0")]
			public FlowCanvas_Nodes_SelectOnString_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000BC2")]
		private class FlowCanvas_Nodes_SelectOnString_System_Single : SelectOnString<float>
		{
			[Token(Token = "0x6002B81")]
			[Address(RVA = "0xB1DD90", Offset = "0xB1DD90", VA = "0xB1DD90")]
			public FlowCanvas_Nodes_SelectOnString_System_Single()
			{
			}
		}

		[Token(Token = "0x2000BC3")]
		private class FlowCanvas_Nodes_SelectOnString_System_Int32 : SelectOnString<int>
		{
			[Token(Token = "0x6002B82")]
			[Address(RVA = "0xB1DD40", Offset = "0xB1DD40", VA = "0xB1DD40")]
			public FlowCanvas_Nodes_SelectOnString_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000BC4")]
		private class FlowCanvas_Nodes_SelectOnString_UnityEngine_Vector2 : SelectOnString<Vector2>
		{
			[Token(Token = "0x6002B83")]
			[Address(RVA = "0xB1E240", Offset = "0xB1E240", VA = "0xB1E240")]
			public FlowCanvas_Nodes_SelectOnString_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000BC5")]
		private class FlowCanvas_Nodes_SelectOnString_UnityEngine_Vector3 : SelectOnString<Vector3>
		{
			[Token(Token = "0x6002B84")]
			[Address(RVA = "0xB1E290", Offset = "0xB1E290", VA = "0xB1E290")]
			public FlowCanvas_Nodes_SelectOnString_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000BC6")]
		private class FlowCanvas_Nodes_SelectOnString_UnityEngine_Vector4 : SelectOnString<Vector4>
		{
			[Token(Token = "0x6002B85")]
			[Address(RVA = "0xB1E2E0", Offset = "0xB1E2E0", VA = "0xB1E2E0")]
			public FlowCanvas_Nodes_SelectOnString_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x2000BC7")]
		private class FlowCanvas_Nodes_SelectOnString_UnityEngine_Quaternion : SelectOnString<Quaternion>
		{
			[Token(Token = "0x6002B86")]
			[Address(RVA = "0xB1E060", Offset = "0xB1E060", VA = "0xB1E060")]
			public FlowCanvas_Nodes_SelectOnString_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000BC8")]
		private class FlowCanvas_Nodes_SelectOnString_UnityEngine_Keyframe : SelectOnString<Keyframe>
		{
			[Token(Token = "0x6002B87")]
			[Address(RVA = "0xB1DFC0", Offset = "0xB1DFC0", VA = "0xB1DFC0")]
			public FlowCanvas_Nodes_SelectOnString_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000BC9")]
		private class FlowCanvas_Nodes_SelectOnString_UnityEngine_Bounds : SelectOnString<Bounds>
		{
			[Token(Token = "0x6002B88")]
			[Address(RVA = "0xB1DDE0", Offset = "0xB1DDE0", VA = "0xB1DDE0")]
			public FlowCanvas_Nodes_SelectOnString_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000BCA")]
		private class FlowCanvas_Nodes_SelectOnString_UnityEngine_Color : SelectOnString<Color>
		{
			[Token(Token = "0x6002B89")]
			[Address(RVA = "0xB1DED0", Offset = "0xB1DED0", VA = "0xB1DED0")]
			public FlowCanvas_Nodes_SelectOnString_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000BCB")]
		private class FlowCanvas_Nodes_SelectOnString_UnityEngine_Rect : SelectOnString<Rect>
		{
			[Token(Token = "0x6002B8A")]
			[Address(RVA = "0xB1E1A0", Offset = "0xB1E1A0", VA = "0xB1E1A0")]
			public FlowCanvas_Nodes_SelectOnString_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000BCC")]
		private class FlowCanvas_Nodes_SelectOnString_UnityEngine_ContactPoint : SelectOnString<ContactPoint>
		{
			[Token(Token = "0x6002B8B")]
			[Address(RVA = "0xB1DF20", Offset = "0xB1DF20", VA = "0xB1DF20")]
			public FlowCanvas_Nodes_SelectOnString_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000BCD")]
		private class FlowCanvas_Nodes_SelectOnString_UnityEngine_ContactPoint2D : SelectOnString<ContactPoint2D>
		{
			[Token(Token = "0x6002B8C")]
			[Address(RVA = "0xB1DF70", Offset = "0xB1DF70", VA = "0xB1DF70")]
			public FlowCanvas_Nodes_SelectOnString_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000BCE")]
		private class FlowCanvas_Nodes_SelectOnString_UnityEngine_Collision : SelectOnString<Collision>
		{
			[Token(Token = "0x6002B8D")]
			[Address(RVA = "0xB1DE30", Offset = "0xB1DE30", VA = "0xB1DE30")]
			public FlowCanvas_Nodes_SelectOnString_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x2000BCF")]
		private class FlowCanvas_Nodes_SelectOnString_UnityEngine_Collision2D : SelectOnString<Collision2D>
		{
			[Token(Token = "0x6002B8E")]
			[Address(RVA = "0xB1DE80", Offset = "0xB1DE80", VA = "0xB1DE80")]
			public FlowCanvas_Nodes_SelectOnString_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000BD0")]
		private class FlowCanvas_Nodes_SelectOnString_UnityEngine_RaycastHit : SelectOnString<RaycastHit>
		{
			[Token(Token = "0x6002B8F")]
			[Address(RVA = "0xB1E100", Offset = "0xB1E100", VA = "0xB1E100")]
			public FlowCanvas_Nodes_SelectOnString_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000BD1")]
		private class FlowCanvas_Nodes_SelectOnString_UnityEngine_RaycastHit2D : SelectOnString<RaycastHit2D>
		{
			[Token(Token = "0x6002B90")]
			[Address(RVA = "0xB1E150", Offset = "0xB1E150", VA = "0xB1E150")]
			public FlowCanvas_Nodes_SelectOnString_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000BD2")]
		private class FlowCanvas_Nodes_SelectOnString_UnityEngine_Ray : SelectOnString<Ray>
		{
			[Token(Token = "0x6002B91")]
			[Address(RVA = "0xB1E0B0", Offset = "0xB1E0B0", VA = "0xB1E0B0")]
			public FlowCanvas_Nodes_SelectOnString_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x2000BD3")]
		private class FlowCanvas_Nodes_SelectOnString_UnityEngine_Space : SelectOnString<Space>
		{
			[Token(Token = "0x6002B92")]
			[Address(RVA = "0xB1E1F0", Offset = "0xB1E1F0", VA = "0xB1E1F0")]
			public FlowCanvas_Nodes_SelectOnString_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000BD4")]
		private class FlowCanvas_Nodes_SelectOnString_ftg_DioramaFiveData_DioramaFiveKeys : SelectOnString<DioramaFiveData.DioramaFiveKeys>
		{
			[Token(Token = "0x6002B93")]
			[Address(RVA = "0xB1E330", Offset = "0xB1E330", VA = "0xB1E330")]
			public FlowCanvas_Nodes_SelectOnString_ftg_DioramaFiveData_DioramaFiveKeys()
			{
			}
		}

		[Token(Token = "0x2000BD5")]
		private class FlowCanvas_Nodes_SelectOnString_ftg_DioramaFourData_DioramaFourKeys : SelectOnString<DioramaFourData.DioramaFourKeys>
		{
			[Token(Token = "0x6002B94")]
			[Address(RVA = "0xB1E380", Offset = "0xB1E380", VA = "0xB1E380")]
			public FlowCanvas_Nodes_SelectOnString_ftg_DioramaFourData_DioramaFourKeys()
			{
			}
		}

		[Token(Token = "0x2000BD6")]
		private class FlowCanvas_Nodes_SelectOnString_ftg_DioramaOneData_DioramaOneKeys : SelectOnString<DioramaOneData.DioramaOneKeys>
		{
			[Token(Token = "0x6002B95")]
			[Address(RVA = "0xB1E3D0", Offset = "0xB1E3D0", VA = "0xB1E3D0")]
			public FlowCanvas_Nodes_SelectOnString_ftg_DioramaOneData_DioramaOneKeys()
			{
			}
		}

		[Token(Token = "0x2000BD7")]
		private class FlowCanvas_Nodes_SelectOnString_ftg_DioramaThreeData_DioramaThreeKeys : SelectOnString<DioramaThreeData.DioramaThreeKeys>
		{
			[Token(Token = "0x6002B96")]
			[Address(RVA = "0xB1E420", Offset = "0xB1E420", VA = "0xB1E420")]
			public FlowCanvas_Nodes_SelectOnString_ftg_DioramaThreeData_DioramaThreeKeys()
			{
			}
		}

		[Token(Token = "0x2000BD8")]
		private class FlowCanvas_Nodes_SelectOnString_ftg_DioramaTwoData_DioramaTwoKeys : SelectOnString<DioramaTwoData.DioramaTwoKeys>
		{
			[Token(Token = "0x6002B97")]
			[Address(RVA = "0xB1E470", Offset = "0xB1E470", VA = "0xB1E470")]
			public FlowCanvas_Nodes_SelectOnString_ftg_DioramaTwoData_DioramaTwoKeys()
			{
			}
		}

		[Token(Token = "0x2000BD9")]
		private class FlowCanvas_Nodes_SelectOnString_ftg_SaveManager_DioramaWorlds : SelectOnString<SaveManager.DioramaWorlds>
		{
			[Token(Token = "0x6002B98")]
			[Address(RVA = "0xB1E560", Offset = "0xB1E560", VA = "0xB1E560")]
			public FlowCanvas_Nodes_SelectOnString_ftg_SaveManager_DioramaWorlds()
			{
			}
		}

		[Token(Token = "0x2000BDA")]
		private class FlowCanvas_Nodes_SelectOnString_ftg_HubRoomData_HubRoomKeys : SelectOnString<HubRoomData.HubRoomKeys>
		{
			[Token(Token = "0x6002B99")]
			[Address(RVA = "0xB1E4C0", Offset = "0xB1E4C0", VA = "0xB1E4C0")]
			public FlowCanvas_Nodes_SelectOnString_ftg_HubRoomData_HubRoomKeys()
			{
			}
		}

		[Token(Token = "0x2000BDB")]
		private class FlowCanvas_Nodes_SelectOnString_ftg_PersonaSettings_PersonaKeys : SelectOnString<PersonaSettings.PersonaKeys>
		{
			[Token(Token = "0x6002B9A")]
			[Address(RVA = "0xB1E510", Offset = "0xB1E510", VA = "0xB1E510")]
			public FlowCanvas_Nodes_SelectOnString_ftg_PersonaSettings_PersonaKeys()
			{
			}
		}

		[Token(Token = "0x2000BDC")]
		private class FlowCanvas_Nodes_SelectOnString_UnityEngine_LayerMask : SelectOnString<LayerMask>
		{
			[Token(Token = "0x6002B9B")]
			[Address(RVA = "0xB1E010", Offset = "0xB1E010", VA = "0xB1E010")]
			public FlowCanvas_Nodes_SelectOnString_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000BDD")]
		private class FlowCanvas_Nodes_SelectOnTag_System_Boolean : SelectOnTag<bool>
		{
			[Token(Token = "0x6002B9C")]
			[Address(RVA = "0xB1E5B0", Offset = "0xB1E5B0", VA = "0xB1E5B0")]
			public FlowCanvas_Nodes_SelectOnTag_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000BDE")]
		private class FlowCanvas_Nodes_SelectOnTag_System_Single : SelectOnTag<float>
		{
			[Token(Token = "0x6002B9D")]
			[Address(RVA = "0xB1E650", Offset = "0xB1E650", VA = "0xB1E650")]
			public FlowCanvas_Nodes_SelectOnTag_System_Single()
			{
			}
		}

		[Token(Token = "0x2000BDF")]
		private class FlowCanvas_Nodes_SelectOnTag_System_Int32 : SelectOnTag<int>
		{
			[Token(Token = "0x6002B9E")]
			[Address(RVA = "0xB1E600", Offset = "0xB1E600", VA = "0xB1E600")]
			public FlowCanvas_Nodes_SelectOnTag_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000BE0")]
		private class FlowCanvas_Nodes_SelectOnTag_UnityEngine_Vector2 : SelectOnTag<Vector2>
		{
			[Token(Token = "0x6002B9F")]
			[Address(RVA = "0xB1EB00", Offset = "0xB1EB00", VA = "0xB1EB00")]
			public FlowCanvas_Nodes_SelectOnTag_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000BE1")]
		private class FlowCanvas_Nodes_SelectOnTag_UnityEngine_Vector3 : SelectOnTag<Vector3>
		{
			[Token(Token = "0x6002BA0")]
			[Address(RVA = "0xB1EB50", Offset = "0xB1EB50", VA = "0xB1EB50")]
			public FlowCanvas_Nodes_SelectOnTag_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000BE2")]
		private class FlowCanvas_Nodes_SelectOnTag_UnityEngine_Vector4 : SelectOnTag<Vector4>
		{
			[Token(Token = "0x6002BA1")]
			[Address(RVA = "0xB1EBA0", Offset = "0xB1EBA0", VA = "0xB1EBA0")]
			public FlowCanvas_Nodes_SelectOnTag_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x2000BE3")]
		private class FlowCanvas_Nodes_SelectOnTag_UnityEngine_Quaternion : SelectOnTag<Quaternion>
		{
			[Token(Token = "0x6002BA2")]
			[Address(RVA = "0xB1E920", Offset = "0xB1E920", VA = "0xB1E920")]
			public FlowCanvas_Nodes_SelectOnTag_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000BE4")]
		private class FlowCanvas_Nodes_SelectOnTag_UnityEngine_Keyframe : SelectOnTag<Keyframe>
		{
			[Token(Token = "0x6002BA3")]
			[Address(RVA = "0xB1E880", Offset = "0xB1E880", VA = "0xB1E880")]
			public FlowCanvas_Nodes_SelectOnTag_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000BE5")]
		private class FlowCanvas_Nodes_SelectOnTag_UnityEngine_Bounds : SelectOnTag<Bounds>
		{
			[Token(Token = "0x6002BA4")]
			[Address(RVA = "0xB1E6A0", Offset = "0xB1E6A0", VA = "0xB1E6A0")]
			public FlowCanvas_Nodes_SelectOnTag_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000BE6")]
		private class FlowCanvas_Nodes_SelectOnTag_UnityEngine_Color : SelectOnTag<Color>
		{
			[Token(Token = "0x6002BA5")]
			[Address(RVA = "0xB1E790", Offset = "0xB1E790", VA = "0xB1E790")]
			public FlowCanvas_Nodes_SelectOnTag_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000BE7")]
		private class FlowCanvas_Nodes_SelectOnTag_UnityEngine_Rect : SelectOnTag<Rect>
		{
			[Token(Token = "0x6002BA6")]
			[Address(RVA = "0xB1EA60", Offset = "0xB1EA60", VA = "0xB1EA60")]
			public FlowCanvas_Nodes_SelectOnTag_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000BE8")]
		private class FlowCanvas_Nodes_SelectOnTag_UnityEngine_ContactPoint : SelectOnTag<ContactPoint>
		{
			[Token(Token = "0x6002BA7")]
			[Address(RVA = "0xB1E7E0", Offset = "0xB1E7E0", VA = "0xB1E7E0")]
			public FlowCanvas_Nodes_SelectOnTag_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000BE9")]
		private class FlowCanvas_Nodes_SelectOnTag_UnityEngine_ContactPoint2D : SelectOnTag<ContactPoint2D>
		{
			[Token(Token = "0x6002BA8")]
			[Address(RVA = "0xB1E830", Offset = "0xB1E830", VA = "0xB1E830")]
			public FlowCanvas_Nodes_SelectOnTag_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000BEA")]
		private class FlowCanvas_Nodes_SelectOnTag_UnityEngine_Collision : SelectOnTag<Collision>
		{
			[Token(Token = "0x6002BA9")]
			[Address(RVA = "0xB1E6F0", Offset = "0xB1E6F0", VA = "0xB1E6F0")]
			public FlowCanvas_Nodes_SelectOnTag_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x2000BEB")]
		private class FlowCanvas_Nodes_SelectOnTag_UnityEngine_Collision2D : SelectOnTag<Collision2D>
		{
			[Token(Token = "0x6002BAA")]
			[Address(RVA = "0xB1E740", Offset = "0xB1E740", VA = "0xB1E740")]
			public FlowCanvas_Nodes_SelectOnTag_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000BEC")]
		private class FlowCanvas_Nodes_SelectOnTag_UnityEngine_RaycastHit : SelectOnTag<RaycastHit>
		{
			[Token(Token = "0x6002BAB")]
			[Address(RVA = "0xB1E9C0", Offset = "0xB1E9C0", VA = "0xB1E9C0")]
			public FlowCanvas_Nodes_SelectOnTag_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000BED")]
		private class FlowCanvas_Nodes_SelectOnTag_UnityEngine_RaycastHit2D : SelectOnTag<RaycastHit2D>
		{
			[Token(Token = "0x6002BAC")]
			[Address(RVA = "0xB1EA10", Offset = "0xB1EA10", VA = "0xB1EA10")]
			public FlowCanvas_Nodes_SelectOnTag_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000BEE")]
		private class FlowCanvas_Nodes_SelectOnTag_UnityEngine_Ray : SelectOnTag<Ray>
		{
			[Token(Token = "0x6002BAD")]
			[Address(RVA = "0xB1E970", Offset = "0xB1E970", VA = "0xB1E970")]
			public FlowCanvas_Nodes_SelectOnTag_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x2000BEF")]
		private class FlowCanvas_Nodes_SelectOnTag_UnityEngine_Space : SelectOnTag<Space>
		{
			[Token(Token = "0x6002BAE")]
			[Address(RVA = "0xB1EAB0", Offset = "0xB1EAB0", VA = "0xB1EAB0")]
			public FlowCanvas_Nodes_SelectOnTag_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000BF0")]
		private class FlowCanvas_Nodes_SelectOnTag_ftg_DioramaFiveData_DioramaFiveKeys : SelectOnTag<DioramaFiveData.DioramaFiveKeys>
		{
			[Token(Token = "0x6002BAF")]
			[Address(RVA = "0xB1EBF0", Offset = "0xB1EBF0", VA = "0xB1EBF0")]
			public FlowCanvas_Nodes_SelectOnTag_ftg_DioramaFiveData_DioramaFiveKeys()
			{
			}
		}

		[Token(Token = "0x2000BF1")]
		private class FlowCanvas_Nodes_SelectOnTag_ftg_DioramaFourData_DioramaFourKeys : SelectOnTag<DioramaFourData.DioramaFourKeys>
		{
			[Token(Token = "0x6002BB0")]
			[Address(RVA = "0xB1EC40", Offset = "0xB1EC40", VA = "0xB1EC40")]
			public FlowCanvas_Nodes_SelectOnTag_ftg_DioramaFourData_DioramaFourKeys()
			{
			}
		}

		[Token(Token = "0x2000BF2")]
		private class FlowCanvas_Nodes_SelectOnTag_ftg_DioramaOneData_DioramaOneKeys : SelectOnTag<DioramaOneData.DioramaOneKeys>
		{
			[Token(Token = "0x6002BB1")]
			[Address(RVA = "0xB1EC90", Offset = "0xB1EC90", VA = "0xB1EC90")]
			public FlowCanvas_Nodes_SelectOnTag_ftg_DioramaOneData_DioramaOneKeys()
			{
			}
		}

		[Token(Token = "0x2000BF3")]
		private class FlowCanvas_Nodes_SelectOnTag_ftg_DioramaThreeData_DioramaThreeKeys : SelectOnTag<DioramaThreeData.DioramaThreeKeys>
		{
			[Token(Token = "0x6002BB2")]
			[Address(RVA = "0xB1ECE0", Offset = "0xB1ECE0", VA = "0xB1ECE0")]
			public FlowCanvas_Nodes_SelectOnTag_ftg_DioramaThreeData_DioramaThreeKeys()
			{
			}
		}

		[Token(Token = "0x2000BF4")]
		private class FlowCanvas_Nodes_SelectOnTag_ftg_DioramaTwoData_DioramaTwoKeys : SelectOnTag<DioramaTwoData.DioramaTwoKeys>
		{
			[Token(Token = "0x6002BB3")]
			[Address(RVA = "0xB1ED30", Offset = "0xB1ED30", VA = "0xB1ED30")]
			public FlowCanvas_Nodes_SelectOnTag_ftg_DioramaTwoData_DioramaTwoKeys()
			{
			}
		}

		[Token(Token = "0x2000BF5")]
		private class FlowCanvas_Nodes_SelectOnTag_ftg_SaveManager_DioramaWorlds : SelectOnTag<SaveManager.DioramaWorlds>
		{
			[Token(Token = "0x6002BB4")]
			[Address(RVA = "0xB1EE20", Offset = "0xB1EE20", VA = "0xB1EE20")]
			public FlowCanvas_Nodes_SelectOnTag_ftg_SaveManager_DioramaWorlds()
			{
			}
		}

		[Token(Token = "0x2000BF6")]
		private class FlowCanvas_Nodes_SelectOnTag_ftg_HubRoomData_HubRoomKeys : SelectOnTag<HubRoomData.HubRoomKeys>
		{
			[Token(Token = "0x6002BB5")]
			[Address(RVA = "0xB1ED80", Offset = "0xB1ED80", VA = "0xB1ED80")]
			public FlowCanvas_Nodes_SelectOnTag_ftg_HubRoomData_HubRoomKeys()
			{
			}
		}

		[Token(Token = "0x2000BF7")]
		private class FlowCanvas_Nodes_SelectOnTag_ftg_PersonaSettings_PersonaKeys : SelectOnTag<PersonaSettings.PersonaKeys>
		{
			[Token(Token = "0x6002BB6")]
			[Address(RVA = "0xB1EDD0", Offset = "0xB1EDD0", VA = "0xB1EDD0")]
			public FlowCanvas_Nodes_SelectOnTag_ftg_PersonaSettings_PersonaKeys()
			{
			}
		}

		[Token(Token = "0x2000BF8")]
		private class FlowCanvas_Nodes_SelectOnTag_UnityEngine_LayerMask : SelectOnTag<LayerMask>
		{
			[Token(Token = "0x6002BB7")]
			[Address(RVA = "0xB1E8D0", Offset = "0xB1E8D0", VA = "0xB1E8D0")]
			public FlowCanvas_Nodes_SelectOnTag_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000BF9")]
		private class FlowCanvas_Nodes_SendEvent_System_Boolean : SendEvent<bool>
		{
			[Token(Token = "0x6002BB8")]
			[Address(RVA = "0xB1EE70", Offset = "0xB1EE70", VA = "0xB1EE70")]
			public FlowCanvas_Nodes_SendEvent_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000BFA")]
		private class FlowCanvas_Nodes_SendEvent_System_Single : SendEvent<float>
		{
			[Token(Token = "0x6002BB9")]
			[Address(RVA = "0xB1EF10", Offset = "0xB1EF10", VA = "0xB1EF10")]
			public FlowCanvas_Nodes_SendEvent_System_Single()
			{
			}
		}

		[Token(Token = "0x2000BFB")]
		private class FlowCanvas_Nodes_SendEvent_System_Int32 : SendEvent<int>
		{
			[Token(Token = "0x6002BBA")]
			[Address(RVA = "0xB1EEC0", Offset = "0xB1EEC0", VA = "0xB1EEC0")]
			public FlowCanvas_Nodes_SendEvent_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000BFC")]
		private class FlowCanvas_Nodes_SendEvent_UnityEngine_Vector2 : SendEvent<Vector2>
		{
			[Token(Token = "0x6002BBB")]
			[Address(RVA = "0xB1F3C0", Offset = "0xB1F3C0", VA = "0xB1F3C0")]
			public FlowCanvas_Nodes_SendEvent_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000BFD")]
		private class FlowCanvas_Nodes_SendEvent_UnityEngine_Vector3 : SendEvent<Vector3>
		{
			[Token(Token = "0x6002BBC")]
			[Address(RVA = "0xB1F410", Offset = "0xB1F410", VA = "0xB1F410")]
			public FlowCanvas_Nodes_SendEvent_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000BFE")]
		private class FlowCanvas_Nodes_SendEvent_UnityEngine_Vector4 : SendEvent<Vector4>
		{
			[Token(Token = "0x6002BBD")]
			[Address(RVA = "0xB1F460", Offset = "0xB1F460", VA = "0xB1F460")]
			public FlowCanvas_Nodes_SendEvent_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x2000BFF")]
		private class FlowCanvas_Nodes_SendEvent_UnityEngine_Quaternion : SendEvent<Quaternion>
		{
			[Token(Token = "0x6002BBE")]
			[Address(RVA = "0xB1F1E0", Offset = "0xB1F1E0", VA = "0xB1F1E0")]
			public FlowCanvas_Nodes_SendEvent_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000C00")]
		private class FlowCanvas_Nodes_SendEvent_UnityEngine_Keyframe : SendEvent<Keyframe>
		{
			[Token(Token = "0x6002BBF")]
			[Address(RVA = "0xB1F140", Offset = "0xB1F140", VA = "0xB1F140")]
			public FlowCanvas_Nodes_SendEvent_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000C01")]
		private class FlowCanvas_Nodes_SendEvent_UnityEngine_Bounds : SendEvent<Bounds>
		{
			[Token(Token = "0x6002BC0")]
			[Address(RVA = "0xB1EF60", Offset = "0xB1EF60", VA = "0xB1EF60")]
			public FlowCanvas_Nodes_SendEvent_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000C02")]
		private class FlowCanvas_Nodes_SendEvent_UnityEngine_Color : SendEvent<Color>
		{
			[Token(Token = "0x6002BC1")]
			[Address(RVA = "0xB1F050", Offset = "0xB1F050", VA = "0xB1F050")]
			public FlowCanvas_Nodes_SendEvent_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000C03")]
		private class FlowCanvas_Nodes_SendEvent_UnityEngine_Rect : SendEvent<Rect>
		{
			[Token(Token = "0x6002BC2")]
			[Address(RVA = "0xB1F320", Offset = "0xB1F320", VA = "0xB1F320")]
			public FlowCanvas_Nodes_SendEvent_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000C04")]
		private class FlowCanvas_Nodes_SendEvent_UnityEngine_ContactPoint : SendEvent<ContactPoint>
		{
			[Token(Token = "0x6002BC3")]
			[Address(RVA = "0xB1F0A0", Offset = "0xB1F0A0", VA = "0xB1F0A0")]
			public FlowCanvas_Nodes_SendEvent_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000C05")]
		private class FlowCanvas_Nodes_SendEvent_UnityEngine_ContactPoint2D : SendEvent<ContactPoint2D>
		{
			[Token(Token = "0x6002BC4")]
			[Address(RVA = "0xB1F0F0", Offset = "0xB1F0F0", VA = "0xB1F0F0")]
			public FlowCanvas_Nodes_SendEvent_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000C06")]
		private class FlowCanvas_Nodes_SendEvent_UnityEngine_Collision : SendEvent<Collision>
		{
			[Token(Token = "0x6002BC5")]
			[Address(RVA = "0xB1EFB0", Offset = "0xB1EFB0", VA = "0xB1EFB0")]
			public FlowCanvas_Nodes_SendEvent_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x2000C07")]
		private class FlowCanvas_Nodes_SendEvent_UnityEngine_Collision2D : SendEvent<Collision2D>
		{
			[Token(Token = "0x6002BC6")]
			[Address(RVA = "0xB1F000", Offset = "0xB1F000", VA = "0xB1F000")]
			public FlowCanvas_Nodes_SendEvent_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000C08")]
		private class FlowCanvas_Nodes_SendEvent_UnityEngine_RaycastHit : SendEvent<RaycastHit>
		{
			[Token(Token = "0x6002BC7")]
			[Address(RVA = "0xB1F280", Offset = "0xB1F280", VA = "0xB1F280")]
			public FlowCanvas_Nodes_SendEvent_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000C09")]
		private class FlowCanvas_Nodes_SendEvent_UnityEngine_RaycastHit2D : SendEvent<RaycastHit2D>
		{
			[Token(Token = "0x6002BC8")]
			[Address(RVA = "0xB1F2D0", Offset = "0xB1F2D0", VA = "0xB1F2D0")]
			public FlowCanvas_Nodes_SendEvent_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000C0A")]
		private class FlowCanvas_Nodes_SendEvent_UnityEngine_Ray : SendEvent<Ray>
		{
			[Token(Token = "0x6002BC9")]
			[Address(RVA = "0xB1F230", Offset = "0xB1F230", VA = "0xB1F230")]
			public FlowCanvas_Nodes_SendEvent_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x2000C0B")]
		private class FlowCanvas_Nodes_SendEvent_UnityEngine_Space : SendEvent<Space>
		{
			[Token(Token = "0x6002BCA")]
			[Address(RVA = "0xB1F370", Offset = "0xB1F370", VA = "0xB1F370")]
			public FlowCanvas_Nodes_SendEvent_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000C0C")]
		private class FlowCanvas_Nodes_SendEvent_ftg_DioramaFiveData_DioramaFiveKeys : SendEvent<DioramaFiveData.DioramaFiveKeys>
		{
			[Token(Token = "0x6002BCB")]
			[Address(RVA = "0xB1F4B0", Offset = "0xB1F4B0", VA = "0xB1F4B0")]
			public FlowCanvas_Nodes_SendEvent_ftg_DioramaFiveData_DioramaFiveKeys()
			{
			}
		}

		[Token(Token = "0x2000C0D")]
		private class FlowCanvas_Nodes_SendEvent_ftg_DioramaFourData_DioramaFourKeys : SendEvent<DioramaFourData.DioramaFourKeys>
		{
			[Token(Token = "0x6002BCC")]
			[Address(RVA = "0xB1F500", Offset = "0xB1F500", VA = "0xB1F500")]
			public FlowCanvas_Nodes_SendEvent_ftg_DioramaFourData_DioramaFourKeys()
			{
			}
		}

		[Token(Token = "0x2000C0E")]
		private class FlowCanvas_Nodes_SendEvent_ftg_DioramaOneData_DioramaOneKeys : SendEvent<DioramaOneData.DioramaOneKeys>
		{
			[Token(Token = "0x6002BCD")]
			[Address(RVA = "0xB1F550", Offset = "0xB1F550", VA = "0xB1F550")]
			public FlowCanvas_Nodes_SendEvent_ftg_DioramaOneData_DioramaOneKeys()
			{
			}
		}

		[Token(Token = "0x2000C0F")]
		private class FlowCanvas_Nodes_SendEvent_ftg_DioramaThreeData_DioramaThreeKeys : SendEvent<DioramaThreeData.DioramaThreeKeys>
		{
			[Token(Token = "0x6002BCE")]
			[Address(RVA = "0xB1F5A0", Offset = "0xB1F5A0", VA = "0xB1F5A0")]
			public FlowCanvas_Nodes_SendEvent_ftg_DioramaThreeData_DioramaThreeKeys()
			{
			}
		}

		[Token(Token = "0x2000C10")]
		private class FlowCanvas_Nodes_SendEvent_ftg_DioramaTwoData_DioramaTwoKeys : SendEvent<DioramaTwoData.DioramaTwoKeys>
		{
			[Token(Token = "0x6002BCF")]
			[Address(RVA = "0xB1F5F0", Offset = "0xB1F5F0", VA = "0xB1F5F0")]
			public FlowCanvas_Nodes_SendEvent_ftg_DioramaTwoData_DioramaTwoKeys()
			{
			}
		}

		[Token(Token = "0x2000C11")]
		private class FlowCanvas_Nodes_SendEvent_ftg_SaveManager_DioramaWorlds : SendEvent<SaveManager.DioramaWorlds>
		{
			[Token(Token = "0x6002BD0")]
			[Address(RVA = "0xB1F6E0", Offset = "0xB1F6E0", VA = "0xB1F6E0")]
			public FlowCanvas_Nodes_SendEvent_ftg_SaveManager_DioramaWorlds()
			{
			}
		}

		[Token(Token = "0x2000C12")]
		private class FlowCanvas_Nodes_SendEvent_ftg_HubRoomData_HubRoomKeys : SendEvent<HubRoomData.HubRoomKeys>
		{
			[Token(Token = "0x6002BD1")]
			[Address(RVA = "0xB1F640", Offset = "0xB1F640", VA = "0xB1F640")]
			public FlowCanvas_Nodes_SendEvent_ftg_HubRoomData_HubRoomKeys()
			{
			}
		}

		[Token(Token = "0x2000C13")]
		private class FlowCanvas_Nodes_SendEvent_ftg_PersonaSettings_PersonaKeys : SendEvent<PersonaSettings.PersonaKeys>
		{
			[Token(Token = "0x6002BD2")]
			[Address(RVA = "0xB1F690", Offset = "0xB1F690", VA = "0xB1F690")]
			public FlowCanvas_Nodes_SendEvent_ftg_PersonaSettings_PersonaKeys()
			{
			}
		}

		[Token(Token = "0x2000C14")]
		private class FlowCanvas_Nodes_SendEvent_UnityEngine_LayerMask : SendEvent<LayerMask>
		{
			[Token(Token = "0x6002BD3")]
			[Address(RVA = "0xB1F190", Offset = "0xB1F190", VA = "0xB1F190")]
			public FlowCanvas_Nodes_SendEvent_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000C15")]
		private class FlowCanvas_Nodes_SendGlobalEvent_System_Boolean : SendGlobalEvent<bool>
		{
			[Token(Token = "0x6002BD4")]
			[Address(RVA = "0xB1F730", Offset = "0xB1F730", VA = "0xB1F730")]
			public FlowCanvas_Nodes_SendGlobalEvent_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000C16")]
		private class FlowCanvas_Nodes_SendGlobalEvent_System_Single : SendGlobalEvent<float>
		{
			[Token(Token = "0x6002BD5")]
			[Address(RVA = "0xB1F7D0", Offset = "0xB1F7D0", VA = "0xB1F7D0")]
			public FlowCanvas_Nodes_SendGlobalEvent_System_Single()
			{
			}
		}

		[Token(Token = "0x2000C17")]
		private class FlowCanvas_Nodes_SendGlobalEvent_System_Int32 : SendGlobalEvent<int>
		{
			[Token(Token = "0x6002BD6")]
			[Address(RVA = "0xB1F780", Offset = "0xB1F780", VA = "0xB1F780")]
			public FlowCanvas_Nodes_SendGlobalEvent_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000C18")]
		private class FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_Vector2 : SendGlobalEvent<Vector2>
		{
			[Token(Token = "0x6002BD7")]
			[Address(RVA = "0xB1FC80", Offset = "0xB1FC80", VA = "0xB1FC80")]
			public FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000C19")]
		private class FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_Vector3 : SendGlobalEvent<Vector3>
		{
			[Token(Token = "0x6002BD8")]
			[Address(RVA = "0xB1FCD0", Offset = "0xB1FCD0", VA = "0xB1FCD0")]
			public FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000C1A")]
		private class FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_Vector4 : SendGlobalEvent<Vector4>
		{
			[Token(Token = "0x6002BD9")]
			[Address(RVA = "0xB1FD20", Offset = "0xB1FD20", VA = "0xB1FD20")]
			public FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x2000C1B")]
		private class FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_Quaternion : SendGlobalEvent<Quaternion>
		{
			[Token(Token = "0x6002BDA")]
			[Address(RVA = "0xB1FAA0", Offset = "0xB1FAA0", VA = "0xB1FAA0")]
			public FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000C1C")]
		private class FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_Keyframe : SendGlobalEvent<Keyframe>
		{
			[Token(Token = "0x6002BDB")]
			[Address(RVA = "0xB1FA00", Offset = "0xB1FA00", VA = "0xB1FA00")]
			public FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000C1D")]
		private class FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_Bounds : SendGlobalEvent<Bounds>
		{
			[Token(Token = "0x6002BDC")]
			[Address(RVA = "0xB1F820", Offset = "0xB1F820", VA = "0xB1F820")]
			public FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000C1E")]
		private class FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_Color : SendGlobalEvent<Color>
		{
			[Token(Token = "0x6002BDD")]
			[Address(RVA = "0xB1F910", Offset = "0xB1F910", VA = "0xB1F910")]
			public FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000C1F")]
		private class FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_Rect : SendGlobalEvent<Rect>
		{
			[Token(Token = "0x6002BDE")]
			[Address(RVA = "0xB1FBE0", Offset = "0xB1FBE0", VA = "0xB1FBE0")]
			public FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000C20")]
		private class FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_ContactPoint : SendGlobalEvent<ContactPoint>
		{
			[Token(Token = "0x6002BDF")]
			[Address(RVA = "0xB1F960", Offset = "0xB1F960", VA = "0xB1F960")]
			public FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000C21")]
		private class FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_ContactPoint2D : SendGlobalEvent<ContactPoint2D>
		{
			[Token(Token = "0x6002BE0")]
			[Address(RVA = "0xB1F9B0", Offset = "0xB1F9B0", VA = "0xB1F9B0")]
			public FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000C22")]
		private class FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_Collision : SendGlobalEvent<Collision>
		{
			[Token(Token = "0x6002BE1")]
			[Address(RVA = "0xB1F870", Offset = "0xB1F870", VA = "0xB1F870")]
			public FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x2000C23")]
		private class FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_Collision2D : SendGlobalEvent<Collision2D>
		{
			[Token(Token = "0x6002BE2")]
			[Address(RVA = "0xB1F8C0", Offset = "0xB1F8C0", VA = "0xB1F8C0")]
			public FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000C24")]
		private class FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_RaycastHit : SendGlobalEvent<RaycastHit>
		{
			[Token(Token = "0x6002BE3")]
			[Address(RVA = "0xB1FB40", Offset = "0xB1FB40", VA = "0xB1FB40")]
			public FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000C25")]
		private class FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_RaycastHit2D : SendGlobalEvent<RaycastHit2D>
		{
			[Token(Token = "0x6002BE4")]
			[Address(RVA = "0xB1FB90", Offset = "0xB1FB90", VA = "0xB1FB90")]
			public FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000C26")]
		private class FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_Ray : SendGlobalEvent<Ray>
		{
			[Token(Token = "0x6002BE5")]
			[Address(RVA = "0xB1FAF0", Offset = "0xB1FAF0", VA = "0xB1FAF0")]
			public FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x2000C27")]
		private class FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_Space : SendGlobalEvent<Space>
		{
			[Token(Token = "0x6002BE6")]
			[Address(RVA = "0xB1FC30", Offset = "0xB1FC30", VA = "0xB1FC30")]
			public FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000C28")]
		private class FlowCanvas_Nodes_SendGlobalEvent_ftg_DioramaFiveData_DioramaFiveKeys : SendGlobalEvent<DioramaFiveData.DioramaFiveKeys>
		{
			[Token(Token = "0x6002BE7")]
			[Address(RVA = "0xB1FD70", Offset = "0xB1FD70", VA = "0xB1FD70")]
			public FlowCanvas_Nodes_SendGlobalEvent_ftg_DioramaFiveData_DioramaFiveKeys()
			{
			}
		}

		[Token(Token = "0x2000C29")]
		private class FlowCanvas_Nodes_SendGlobalEvent_ftg_DioramaFourData_DioramaFourKeys : SendGlobalEvent<DioramaFourData.DioramaFourKeys>
		{
			[Token(Token = "0x6002BE8")]
			[Address(RVA = "0xB1FDC0", Offset = "0xB1FDC0", VA = "0xB1FDC0")]
			public FlowCanvas_Nodes_SendGlobalEvent_ftg_DioramaFourData_DioramaFourKeys()
			{
			}
		}

		[Token(Token = "0x2000C2A")]
		private class FlowCanvas_Nodes_SendGlobalEvent_ftg_DioramaOneData_DioramaOneKeys : SendGlobalEvent<DioramaOneData.DioramaOneKeys>
		{
			[Token(Token = "0x6002BE9")]
			[Address(RVA = "0xB1FE10", Offset = "0xB1FE10", VA = "0xB1FE10")]
			public FlowCanvas_Nodes_SendGlobalEvent_ftg_DioramaOneData_DioramaOneKeys()
			{
			}
		}

		[Token(Token = "0x2000C2B")]
		private class FlowCanvas_Nodes_SendGlobalEvent_ftg_DioramaThreeData_DioramaThreeKeys : SendGlobalEvent<DioramaThreeData.DioramaThreeKeys>
		{
			[Token(Token = "0x6002BEA")]
			[Address(RVA = "0xB1FE60", Offset = "0xB1FE60", VA = "0xB1FE60")]
			public FlowCanvas_Nodes_SendGlobalEvent_ftg_DioramaThreeData_DioramaThreeKeys()
			{
			}
		}

		[Token(Token = "0x2000C2C")]
		private class FlowCanvas_Nodes_SendGlobalEvent_ftg_DioramaTwoData_DioramaTwoKeys : SendGlobalEvent<DioramaTwoData.DioramaTwoKeys>
		{
			[Token(Token = "0x6002BEB")]
			[Address(RVA = "0xB1FEB0", Offset = "0xB1FEB0", VA = "0xB1FEB0")]
			public FlowCanvas_Nodes_SendGlobalEvent_ftg_DioramaTwoData_DioramaTwoKeys()
			{
			}
		}

		[Token(Token = "0x2000C2D")]
		private class FlowCanvas_Nodes_SendGlobalEvent_ftg_SaveManager_DioramaWorlds : SendGlobalEvent<SaveManager.DioramaWorlds>
		{
			[Token(Token = "0x6002BEC")]
			[Address(RVA = "0xB1FFA0", Offset = "0xB1FFA0", VA = "0xB1FFA0")]
			public FlowCanvas_Nodes_SendGlobalEvent_ftg_SaveManager_DioramaWorlds()
			{
			}
		}

		[Token(Token = "0x2000C2E")]
		private class FlowCanvas_Nodes_SendGlobalEvent_ftg_HubRoomData_HubRoomKeys : SendGlobalEvent<HubRoomData.HubRoomKeys>
		{
			[Token(Token = "0x6002BED")]
			[Address(RVA = "0xB1FF00", Offset = "0xB1FF00", VA = "0xB1FF00")]
			public FlowCanvas_Nodes_SendGlobalEvent_ftg_HubRoomData_HubRoomKeys()
			{
			}
		}

		[Token(Token = "0x2000C2F")]
		private class FlowCanvas_Nodes_SendGlobalEvent_ftg_PersonaSettings_PersonaKeys : SendGlobalEvent<PersonaSettings.PersonaKeys>
		{
			[Token(Token = "0x6002BEE")]
			[Address(RVA = "0xB1FF50", Offset = "0xB1FF50", VA = "0xB1FF50")]
			public FlowCanvas_Nodes_SendGlobalEvent_ftg_PersonaSettings_PersonaKeys()
			{
			}
		}

		[Token(Token = "0x2000C30")]
		private class FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_LayerMask : SendGlobalEvent<LayerMask>
		{
			[Token(Token = "0x6002BEF")]
			[Address(RVA = "0xB1FA50", Offset = "0xB1FA50", VA = "0xB1FA50")]
			public FlowCanvas_Nodes_SendGlobalEvent_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000C31")]
		private class FlowCanvas_Nodes_SetListItem_System_Boolean : SetListItem<bool>
		{
			[Token(Token = "0x6002BF0")]
			[Address(RVA = "0xB1FFF0", Offset = "0xB1FFF0", VA = "0xB1FFF0")]
			public FlowCanvas_Nodes_SetListItem_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000C32")]
		private class FlowCanvas_Nodes_SetListItem_System_Single : SetListItem<float>
		{
			[Token(Token = "0x6002BF1")]
			[Address(RVA = "0xB20090", Offset = "0xB20090", VA = "0xB20090")]
			public FlowCanvas_Nodes_SetListItem_System_Single()
			{
			}
		}

		[Token(Token = "0x2000C33")]
		private class FlowCanvas_Nodes_SetListItem_System_Int32 : SetListItem<int>
		{
			[Token(Token = "0x6002BF2")]
			[Address(RVA = "0xB20040", Offset = "0xB20040", VA = "0xB20040")]
			public FlowCanvas_Nodes_SetListItem_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000C34")]
		private class FlowCanvas_Nodes_SetListItem_UnityEngine_Vector2 : SetListItem<Vector2>
		{
			[Token(Token = "0x6002BF3")]
			[Address(RVA = "0xB20540", Offset = "0xB20540", VA = "0xB20540")]
			public FlowCanvas_Nodes_SetListItem_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000C35")]
		private class FlowCanvas_Nodes_SetListItem_UnityEngine_Vector3 : SetListItem<Vector3>
		{
			[Token(Token = "0x6002BF4")]
			[Address(RVA = "0xB20590", Offset = "0xB20590", VA = "0xB20590")]
			public FlowCanvas_Nodes_SetListItem_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000C36")]
		private class FlowCanvas_Nodes_SetListItem_UnityEngine_Vector4 : SetListItem<Vector4>
		{
			[Token(Token = "0x6002BF5")]
			[Address(RVA = "0xB205E0", Offset = "0xB205E0", VA = "0xB205E0")]
			public FlowCanvas_Nodes_SetListItem_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x2000C37")]
		private class FlowCanvas_Nodes_SetListItem_UnityEngine_Quaternion : SetListItem<Quaternion>
		{
			[Token(Token = "0x6002BF6")]
			[Address(RVA = "0xB20360", Offset = "0xB20360", VA = "0xB20360")]
			public FlowCanvas_Nodes_SetListItem_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000C38")]
		private class FlowCanvas_Nodes_SetListItem_UnityEngine_Keyframe : SetListItem<Keyframe>
		{
			[Token(Token = "0x6002BF7")]
			[Address(RVA = "0xB202C0", Offset = "0xB202C0", VA = "0xB202C0")]
			public FlowCanvas_Nodes_SetListItem_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000C39")]
		private class FlowCanvas_Nodes_SetListItem_UnityEngine_Bounds : SetListItem<Bounds>
		{
			[Token(Token = "0x6002BF8")]
			[Address(RVA = "0xB200E0", Offset = "0xB200E0", VA = "0xB200E0")]
			public FlowCanvas_Nodes_SetListItem_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000C3A")]
		private class FlowCanvas_Nodes_SetListItem_UnityEngine_Color : SetListItem<Color>
		{
			[Token(Token = "0x6002BF9")]
			[Address(RVA = "0xB201D0", Offset = "0xB201D0", VA = "0xB201D0")]
			public FlowCanvas_Nodes_SetListItem_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000C3B")]
		private class FlowCanvas_Nodes_SetListItem_UnityEngine_Rect : SetListItem<Rect>
		{
			[Token(Token = "0x6002BFA")]
			[Address(RVA = "0xB204A0", Offset = "0xB204A0", VA = "0xB204A0")]
			public FlowCanvas_Nodes_SetListItem_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000C3C")]
		private class FlowCanvas_Nodes_SetListItem_UnityEngine_ContactPoint : SetListItem<ContactPoint>
		{
			[Token(Token = "0x6002BFB")]
			[Address(RVA = "0xB20220", Offset = "0xB20220", VA = "0xB20220")]
			public FlowCanvas_Nodes_SetListItem_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000C3D")]
		private class FlowCanvas_Nodes_SetListItem_UnityEngine_ContactPoint2D : SetListItem<ContactPoint2D>
		{
			[Token(Token = "0x6002BFC")]
			[Address(RVA = "0xB20270", Offset = "0xB20270", VA = "0xB20270")]
			public FlowCanvas_Nodes_SetListItem_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000C3E")]
		private class FlowCanvas_Nodes_SetListItem_UnityEngine_Collision : SetListItem<Collision>
		{
			[Token(Token = "0x6002BFD")]
			[Address(RVA = "0xB20130", Offset = "0xB20130", VA = "0xB20130")]
			public FlowCanvas_Nodes_SetListItem_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x2000C3F")]
		private class FlowCanvas_Nodes_SetListItem_UnityEngine_Collision2D : SetListItem<Collision2D>
		{
			[Token(Token = "0x6002BFE")]
			[Address(RVA = "0xB20180", Offset = "0xB20180", VA = "0xB20180")]
			public FlowCanvas_Nodes_SetListItem_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000C40")]
		private class FlowCanvas_Nodes_SetListItem_UnityEngine_RaycastHit : SetListItem<RaycastHit>
		{
			[Token(Token = "0x6002BFF")]
			[Address(RVA = "0xB20400", Offset = "0xB20400", VA = "0xB20400")]
			public FlowCanvas_Nodes_SetListItem_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000C41")]
		private class FlowCanvas_Nodes_SetListItem_UnityEngine_RaycastHit2D : SetListItem<RaycastHit2D>
		{
			[Token(Token = "0x6002C00")]
			[Address(RVA = "0xB20450", Offset = "0xB20450", VA = "0xB20450")]
			public FlowCanvas_Nodes_SetListItem_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000C42")]
		private class FlowCanvas_Nodes_SetListItem_UnityEngine_Ray : SetListItem<Ray>
		{
			[Token(Token = "0x6002C01")]
			[Address(RVA = "0xB203B0", Offset = "0xB203B0", VA = "0xB203B0")]
			public FlowCanvas_Nodes_SetListItem_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x2000C43")]
		private class FlowCanvas_Nodes_SetListItem_UnityEngine_Space : SetListItem<Space>
		{
			[Token(Token = "0x6002C02")]
			[Address(RVA = "0xB204F0", Offset = "0xB204F0", VA = "0xB204F0")]
			public FlowCanvas_Nodes_SetListItem_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000C44")]
		private class FlowCanvas_Nodes_SetListItem_ftg_DioramaFiveData_DioramaFiveKeys : SetListItem<DioramaFiveData.DioramaFiveKeys>
		{
			[Token(Token = "0x6002C03")]
			[Address(RVA = "0xB20630", Offset = "0xB20630", VA = "0xB20630")]
			public FlowCanvas_Nodes_SetListItem_ftg_DioramaFiveData_DioramaFiveKeys()
			{
			}
		}

		[Token(Token = "0x2000C45")]
		private class FlowCanvas_Nodes_SetListItem_ftg_DioramaFourData_DioramaFourKeys : SetListItem<DioramaFourData.DioramaFourKeys>
		{
			[Token(Token = "0x6002C04")]
			[Address(RVA = "0xB20680", Offset = "0xB20680", VA = "0xB20680")]
			public FlowCanvas_Nodes_SetListItem_ftg_DioramaFourData_DioramaFourKeys()
			{
			}
		}

		[Token(Token = "0x2000C46")]
		private class FlowCanvas_Nodes_SetListItem_ftg_DioramaOneData_DioramaOneKeys : SetListItem<DioramaOneData.DioramaOneKeys>
		{
			[Token(Token = "0x6002C05")]
			[Address(RVA = "0xB206D0", Offset = "0xB206D0", VA = "0xB206D0")]
			public FlowCanvas_Nodes_SetListItem_ftg_DioramaOneData_DioramaOneKeys()
			{
			}
		}

		[Token(Token = "0x2000C47")]
		private class FlowCanvas_Nodes_SetListItem_ftg_DioramaThreeData_DioramaThreeKeys : SetListItem<DioramaThreeData.DioramaThreeKeys>
		{
			[Token(Token = "0x6002C06")]
			[Address(RVA = "0xB20720", Offset = "0xB20720", VA = "0xB20720")]
			public FlowCanvas_Nodes_SetListItem_ftg_DioramaThreeData_DioramaThreeKeys()
			{
			}
		}

		[Token(Token = "0x2000C48")]
		private class FlowCanvas_Nodes_SetListItem_ftg_DioramaTwoData_DioramaTwoKeys : SetListItem<DioramaTwoData.DioramaTwoKeys>
		{
			[Token(Token = "0x6002C07")]
			[Address(RVA = "0xB20770", Offset = "0xB20770", VA = "0xB20770")]
			public FlowCanvas_Nodes_SetListItem_ftg_DioramaTwoData_DioramaTwoKeys()
			{
			}
		}

		[Token(Token = "0x2000C49")]
		private class FlowCanvas_Nodes_SetListItem_ftg_SaveManager_DioramaWorlds : SetListItem<SaveManager.DioramaWorlds>
		{
			[Token(Token = "0x6002C08")]
			[Address(RVA = "0xB20860", Offset = "0xB20860", VA = "0xB20860")]
			public FlowCanvas_Nodes_SetListItem_ftg_SaveManager_DioramaWorlds()
			{
			}
		}

		[Token(Token = "0x2000C4A")]
		private class FlowCanvas_Nodes_SetListItem_ftg_HubRoomData_HubRoomKeys : SetListItem<HubRoomData.HubRoomKeys>
		{
			[Token(Token = "0x6002C09")]
			[Address(RVA = "0xB207C0", Offset = "0xB207C0", VA = "0xB207C0")]
			public FlowCanvas_Nodes_SetListItem_ftg_HubRoomData_HubRoomKeys()
			{
			}
		}

		[Token(Token = "0x2000C4B")]
		private class FlowCanvas_Nodes_SetListItem_ftg_PersonaSettings_PersonaKeys : SetListItem<PersonaSettings.PersonaKeys>
		{
			[Token(Token = "0x6002C0A")]
			[Address(RVA = "0xB20810", Offset = "0xB20810", VA = "0xB20810")]
			public FlowCanvas_Nodes_SetListItem_ftg_PersonaSettings_PersonaKeys()
			{
			}
		}

		[Token(Token = "0x2000C4C")]
		private class FlowCanvas_Nodes_SetListItem_UnityEngine_LayerMask : SetListItem<LayerMask>
		{
			[Token(Token = "0x6002C0B")]
			[Address(RVA = "0xB20310", Offset = "0xB20310", VA = "0xB20310")]
			public FlowCanvas_Nodes_SetListItem_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000C4D")]
		private class FlowCanvas_Nodes_SetOtherVariable_System_Boolean : SetOtherVariable<bool>
		{
			[Token(Token = "0x6002C0C")]
			[Address(RVA = "0xB208B0", Offset = "0xB208B0", VA = "0xB208B0")]
			public FlowCanvas_Nodes_SetOtherVariable_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000C4E")]
		private class FlowCanvas_Nodes_SetOtherVariable_System_Single : SetOtherVariable<float>
		{
			[Token(Token = "0x6002C0D")]
			[Address(RVA = "0xB20950", Offset = "0xB20950", VA = "0xB20950")]
			public FlowCanvas_Nodes_SetOtherVariable_System_Single()
			{
			}
		}

		[Token(Token = "0x2000C4F")]
		private class FlowCanvas_Nodes_SetOtherVariable_System_Int32 : SetOtherVariable<int>
		{
			[Token(Token = "0x6002C0E")]
			[Address(RVA = "0xB20900", Offset = "0xB20900", VA = "0xB20900")]
			public FlowCanvas_Nodes_SetOtherVariable_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000C50")]
		private class FlowCanvas_Nodes_SetOtherVariable_UnityEngine_Vector2 : SetOtherVariable<Vector2>
		{
			[Token(Token = "0x6002C0F")]
			[Address(RVA = "0xB20E00", Offset = "0xB20E00", VA = "0xB20E00")]
			public FlowCanvas_Nodes_SetOtherVariable_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000C51")]
		private class FlowCanvas_Nodes_SetOtherVariable_UnityEngine_Vector3 : SetOtherVariable<Vector3>
		{
			[Token(Token = "0x6002C10")]
			[Address(RVA = "0xB20E50", Offset = "0xB20E50", VA = "0xB20E50")]
			public FlowCanvas_Nodes_SetOtherVariable_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000C52")]
		private class FlowCanvas_Nodes_SetOtherVariable_UnityEngine_Vector4 : SetOtherVariable<Vector4>
		{
			[Token(Token = "0x6002C11")]
			[Address(RVA = "0xB20EA0", Offset = "0xB20EA0", VA = "0xB20EA0")]
			public FlowCanvas_Nodes_SetOtherVariable_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x2000C53")]
		private class FlowCanvas_Nodes_SetOtherVariable_UnityEngine_Quaternion : SetOtherVariable<Quaternion>
		{
			[Token(Token = "0x6002C12")]
			[Address(RVA = "0xB20C20", Offset = "0xB20C20", VA = "0xB20C20")]
			public FlowCanvas_Nodes_SetOtherVariable_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000C54")]
		private class FlowCanvas_Nodes_SetOtherVariable_UnityEngine_Keyframe : SetOtherVariable<Keyframe>
		{
			[Token(Token = "0x6002C13")]
			[Address(RVA = "0xB20B80", Offset = "0xB20B80", VA = "0xB20B80")]
			public FlowCanvas_Nodes_SetOtherVariable_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000C55")]
		private class FlowCanvas_Nodes_SetOtherVariable_UnityEngine_Bounds : SetOtherVariable<Bounds>
		{
			[Token(Token = "0x6002C14")]
			[Address(RVA = "0xB209A0", Offset = "0xB209A0", VA = "0xB209A0")]
			public FlowCanvas_Nodes_SetOtherVariable_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000C56")]
		private class FlowCanvas_Nodes_SetOtherVariable_UnityEngine_Color : SetOtherVariable<Color>
		{
			[Token(Token = "0x6002C15")]
			[Address(RVA = "0xB20A90", Offset = "0xB20A90", VA = "0xB20A90")]
			public FlowCanvas_Nodes_SetOtherVariable_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000C57")]
		private class FlowCanvas_Nodes_SetOtherVariable_UnityEngine_Rect : SetOtherVariable<Rect>
		{
			[Token(Token = "0x6002C16")]
			[Address(RVA = "0xB20D60", Offset = "0xB20D60", VA = "0xB20D60")]
			public FlowCanvas_Nodes_SetOtherVariable_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000C58")]
		private class FlowCanvas_Nodes_SetOtherVariable_UnityEngine_ContactPoint : SetOtherVariable<ContactPoint>
		{
			[Token(Token = "0x6002C17")]
			[Address(RVA = "0xB20AE0", Offset = "0xB20AE0", VA = "0xB20AE0")]
			public FlowCanvas_Nodes_SetOtherVariable_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000C59")]
		private class FlowCanvas_Nodes_SetOtherVariable_UnityEngine_ContactPoint2D : SetOtherVariable<ContactPoint2D>
		{
			[Token(Token = "0x6002C18")]
			[Address(RVA = "0xB20B30", Offset = "0xB20B30", VA = "0xB20B30")]
			public FlowCanvas_Nodes_SetOtherVariable_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000C5A")]
		private class FlowCanvas_Nodes_SetOtherVariable_UnityEngine_Collision : SetOtherVariable<Collision>
		{
			[Token(Token = "0x6002C19")]
			[Address(RVA = "0xB209F0", Offset = "0xB209F0", VA = "0xB209F0")]
			public FlowCanvas_Nodes_SetOtherVariable_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x2000C5B")]
		private class FlowCanvas_Nodes_SetOtherVariable_UnityEngine_Collision2D : SetOtherVariable<Collision2D>
		{
			[Token(Token = "0x6002C1A")]
			[Address(RVA = "0xB20A40", Offset = "0xB20A40", VA = "0xB20A40")]
			public FlowCanvas_Nodes_SetOtherVariable_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000C5C")]
		private class FlowCanvas_Nodes_SetOtherVariable_UnityEngine_RaycastHit : SetOtherVariable<RaycastHit>
		{
			[Token(Token = "0x6002C1B")]
			[Address(RVA = "0xB20CC0", Offset = "0xB20CC0", VA = "0xB20CC0")]
			public FlowCanvas_Nodes_SetOtherVariable_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000C5D")]
		private class FlowCanvas_Nodes_SetOtherVariable_UnityEngine_RaycastHit2D : SetOtherVariable<RaycastHit2D>
		{
			[Token(Token = "0x6002C1C")]
			[Address(RVA = "0xB20D10", Offset = "0xB20D10", VA = "0xB20D10")]
			public FlowCanvas_Nodes_SetOtherVariable_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000C5E")]
		private class FlowCanvas_Nodes_SetOtherVariable_UnityEngine_Ray : SetOtherVariable<Ray>
		{
			[Token(Token = "0x6002C1D")]
			[Address(RVA = "0xB20C70", Offset = "0xB20C70", VA = "0xB20C70")]
			public FlowCanvas_Nodes_SetOtherVariable_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x2000C5F")]
		private class FlowCanvas_Nodes_SetOtherVariable_UnityEngine_Space : SetOtherVariable<Space>
		{
			[Token(Token = "0x6002C1E")]
			[Address(RVA = "0xB20DB0", Offset = "0xB20DB0", VA = "0xB20DB0")]
			public FlowCanvas_Nodes_SetOtherVariable_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000C60")]
		private class FlowCanvas_Nodes_SetOtherVariable_ftg_DioramaFiveData_DioramaFiveKeys : SetOtherVariable<DioramaFiveData.DioramaFiveKeys>
		{
			[Token(Token = "0x6002C1F")]
			[Address(RVA = "0xB20EF0", Offset = "0xB20EF0", VA = "0xB20EF0")]
			public FlowCanvas_Nodes_SetOtherVariable_ftg_DioramaFiveData_DioramaFiveKeys()
			{
			}
		}

		[Token(Token = "0x2000C61")]
		private class FlowCanvas_Nodes_SetOtherVariable_ftg_DioramaFourData_DioramaFourKeys : SetOtherVariable<DioramaFourData.DioramaFourKeys>
		{
			[Token(Token = "0x6002C20")]
			[Address(RVA = "0xB20F40", Offset = "0xB20F40", VA = "0xB20F40")]
			public FlowCanvas_Nodes_SetOtherVariable_ftg_DioramaFourData_DioramaFourKeys()
			{
			}
		}

		[Token(Token = "0x2000C62")]
		private class FlowCanvas_Nodes_SetOtherVariable_ftg_DioramaOneData_DioramaOneKeys : SetOtherVariable<DioramaOneData.DioramaOneKeys>
		{
			[Token(Token = "0x6002C21")]
			[Address(RVA = "0xB20F90", Offset = "0xB20F90", VA = "0xB20F90")]
			public FlowCanvas_Nodes_SetOtherVariable_ftg_DioramaOneData_DioramaOneKeys()
			{
			}
		}

		[Token(Token = "0x2000C63")]
		private class FlowCanvas_Nodes_SetOtherVariable_ftg_DioramaThreeData_DioramaThreeKeys : SetOtherVariable<DioramaThreeData.DioramaThreeKeys>
		{
			[Token(Token = "0x6002C22")]
			[Address(RVA = "0xB20FE0", Offset = "0xB20FE0", VA = "0xB20FE0")]
			public FlowCanvas_Nodes_SetOtherVariable_ftg_DioramaThreeData_DioramaThreeKeys()
			{
			}
		}

		[Token(Token = "0x2000C64")]
		private class FlowCanvas_Nodes_SetOtherVariable_ftg_DioramaTwoData_DioramaTwoKeys : SetOtherVariable<DioramaTwoData.DioramaTwoKeys>
		{
			[Token(Token = "0x6002C23")]
			[Address(RVA = "0xB21030", Offset = "0xB21030", VA = "0xB21030")]
			public FlowCanvas_Nodes_SetOtherVariable_ftg_DioramaTwoData_DioramaTwoKeys()
			{
			}
		}

		[Token(Token = "0x2000C65")]
		private class FlowCanvas_Nodes_SetOtherVariable_ftg_SaveManager_DioramaWorlds : SetOtherVariable<SaveManager.DioramaWorlds>
		{
			[Token(Token = "0x6002C24")]
			[Address(RVA = "0xB21120", Offset = "0xB21120", VA = "0xB21120")]
			public FlowCanvas_Nodes_SetOtherVariable_ftg_SaveManager_DioramaWorlds()
			{
			}
		}

		[Token(Token = "0x2000C66")]
		private class FlowCanvas_Nodes_SetOtherVariable_ftg_HubRoomData_HubRoomKeys : SetOtherVariable<HubRoomData.HubRoomKeys>
		{
			[Token(Token = "0x6002C25")]
			[Address(RVA = "0xB21080", Offset = "0xB21080", VA = "0xB21080")]
			public FlowCanvas_Nodes_SetOtherVariable_ftg_HubRoomData_HubRoomKeys()
			{
			}
		}

		[Token(Token = "0x2000C67")]
		private class FlowCanvas_Nodes_SetOtherVariable_ftg_PersonaSettings_PersonaKeys : SetOtherVariable<PersonaSettings.PersonaKeys>
		{
			[Token(Token = "0x6002C26")]
			[Address(RVA = "0xB210D0", Offset = "0xB210D0", VA = "0xB210D0")]
			public FlowCanvas_Nodes_SetOtherVariable_ftg_PersonaSettings_PersonaKeys()
			{
			}
		}

		[Token(Token = "0x2000C68")]
		private class FlowCanvas_Nodes_SetOtherVariable_UnityEngine_LayerMask : SetOtherVariable<LayerMask>
		{
			[Token(Token = "0x6002C27")]
			[Address(RVA = "0xB20BD0", Offset = "0xB20BD0", VA = "0xB20BD0")]
			public FlowCanvas_Nodes_SetOtherVariable_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000C69")]
		private class FlowCanvas_Nodes_SetVariable_System_Boolean : SetVariable<bool>
		{
			[Token(Token = "0x6002C28")]
			[Address(RVA = "0xB21170", Offset = "0xB21170", VA = "0xB21170")]
			public FlowCanvas_Nodes_SetVariable_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000C6A")]
		private class FlowCanvas_Nodes_SetVariable_System_Single : SetVariable<float>
		{
			[Token(Token = "0x6002C29")]
			[Address(RVA = "0xB21210", Offset = "0xB21210", VA = "0xB21210")]
			public FlowCanvas_Nodes_SetVariable_System_Single()
			{
			}
		}

		[Token(Token = "0x2000C6B")]
		private class FlowCanvas_Nodes_SetVariable_System_Int32 : SetVariable<int>
		{
			[Token(Token = "0x6002C2A")]
			[Address(RVA = "0xB211C0", Offset = "0xB211C0", VA = "0xB211C0")]
			public FlowCanvas_Nodes_SetVariable_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000C6C")]
		private class FlowCanvas_Nodes_SetVariable_UnityEngine_Vector2 : SetVariable<Vector2>
		{
			[Token(Token = "0x6002C2B")]
			[Address(RVA = "0xB216C0", Offset = "0xB216C0", VA = "0xB216C0")]
			public FlowCanvas_Nodes_SetVariable_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000C6D")]
		private class FlowCanvas_Nodes_SetVariable_UnityEngine_Vector3 : SetVariable<Vector3>
		{
			[Token(Token = "0x6002C2C")]
			[Address(RVA = "0xB21710", Offset = "0xB21710", VA = "0xB21710")]
			public FlowCanvas_Nodes_SetVariable_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000C6E")]
		private class FlowCanvas_Nodes_SetVariable_UnityEngine_Vector4 : SetVariable<Vector4>
		{
			[Token(Token = "0x6002C2D")]
			[Address(RVA = "0xB21760", Offset = "0xB21760", VA = "0xB21760")]
			public FlowCanvas_Nodes_SetVariable_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x2000C6F")]
		private class FlowCanvas_Nodes_SetVariable_UnityEngine_Quaternion : SetVariable<Quaternion>
		{
			[Token(Token = "0x6002C2E")]
			[Address(RVA = "0xB214E0", Offset = "0xB214E0", VA = "0xB214E0")]
			public FlowCanvas_Nodes_SetVariable_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000C70")]
		private class FlowCanvas_Nodes_SetVariable_UnityEngine_Keyframe : SetVariable<Keyframe>
		{
			[Token(Token = "0x6002C2F")]
			[Address(RVA = "0xB21440", Offset = "0xB21440", VA = "0xB21440")]
			public FlowCanvas_Nodes_SetVariable_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000C71")]
		private class FlowCanvas_Nodes_SetVariable_UnityEngine_Bounds : SetVariable<Bounds>
		{
			[Token(Token = "0x6002C30")]
			[Address(RVA = "0xB21260", Offset = "0xB21260", VA = "0xB21260")]
			public FlowCanvas_Nodes_SetVariable_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000C72")]
		private class FlowCanvas_Nodes_SetVariable_UnityEngine_Color : SetVariable<Color>
		{
			[Token(Token = "0x6002C31")]
			[Address(RVA = "0xB21350", Offset = "0xB21350", VA = "0xB21350")]
			public FlowCanvas_Nodes_SetVariable_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000C73")]
		private class FlowCanvas_Nodes_SetVariable_UnityEngine_Rect : SetVariable<Rect>
		{
			[Token(Token = "0x6002C32")]
			[Address(RVA = "0xB21620", Offset = "0xB21620", VA = "0xB21620")]
			public FlowCanvas_Nodes_SetVariable_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000C74")]
		private class FlowCanvas_Nodes_SetVariable_UnityEngine_ContactPoint : SetVariable<ContactPoint>
		{
			[Token(Token = "0x6002C33")]
			[Address(RVA = "0xB213A0", Offset = "0xB213A0", VA = "0xB213A0")]
			public FlowCanvas_Nodes_SetVariable_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000C75")]
		private class FlowCanvas_Nodes_SetVariable_UnityEngine_ContactPoint2D : SetVariable<ContactPoint2D>
		{
			[Token(Token = "0x6002C34")]
			[Address(RVA = "0xB213F0", Offset = "0xB213F0", VA = "0xB213F0")]
			public FlowCanvas_Nodes_SetVariable_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000C76")]
		private class FlowCanvas_Nodes_SetVariable_UnityEngine_Collision : SetVariable<Collision>
		{
			[Token(Token = "0x6002C35")]
			[Address(RVA = "0xB212B0", Offset = "0xB212B0", VA = "0xB212B0")]
			public FlowCanvas_Nodes_SetVariable_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x2000C77")]
		private class FlowCanvas_Nodes_SetVariable_UnityEngine_Collision2D : SetVariable<Collision2D>
		{
			[Token(Token = "0x6002C36")]
			[Address(RVA = "0xB21300", Offset = "0xB21300", VA = "0xB21300")]
			public FlowCanvas_Nodes_SetVariable_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000C78")]
		private class FlowCanvas_Nodes_SetVariable_UnityEngine_RaycastHit : SetVariable<RaycastHit>
		{
			[Token(Token = "0x6002C37")]
			[Address(RVA = "0xB21580", Offset = "0xB21580", VA = "0xB21580")]
			public FlowCanvas_Nodes_SetVariable_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000C79")]
		private class FlowCanvas_Nodes_SetVariable_UnityEngine_RaycastHit2D : SetVariable<RaycastHit2D>
		{
			[Token(Token = "0x6002C38")]
			[Address(RVA = "0xB215D0", Offset = "0xB215D0", VA = "0xB215D0")]
			public FlowCanvas_Nodes_SetVariable_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000C7A")]
		private class FlowCanvas_Nodes_SetVariable_UnityEngine_Ray : SetVariable<Ray>
		{
			[Token(Token = "0x6002C39")]
			[Address(RVA = "0xB21530", Offset = "0xB21530", VA = "0xB21530")]
			public FlowCanvas_Nodes_SetVariable_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x2000C7B")]
		private class FlowCanvas_Nodes_SetVariable_UnityEngine_Space : SetVariable<Space>
		{
			[Token(Token = "0x6002C3A")]
			[Address(RVA = "0xB21670", Offset = "0xB21670", VA = "0xB21670")]
			public FlowCanvas_Nodes_SetVariable_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000C7C")]
		private class FlowCanvas_Nodes_SetVariable_ftg_DioramaFiveData_DioramaFiveKeys : SetVariable<DioramaFiveData.DioramaFiveKeys>
		{
			[Token(Token = "0x6002C3B")]
			[Address(RVA = "0xB217B0", Offset = "0xB217B0", VA = "0xB217B0")]
			public FlowCanvas_Nodes_SetVariable_ftg_DioramaFiveData_DioramaFiveKeys()
			{
			}
		}

		[Token(Token = "0x2000C7D")]
		private class FlowCanvas_Nodes_SetVariable_ftg_DioramaFourData_DioramaFourKeys : SetVariable<DioramaFourData.DioramaFourKeys>
		{
			[Token(Token = "0x6002C3C")]
			[Address(RVA = "0xB21800", Offset = "0xB21800", VA = "0xB21800")]
			public FlowCanvas_Nodes_SetVariable_ftg_DioramaFourData_DioramaFourKeys()
			{
			}
		}

		[Token(Token = "0x2000C7E")]
		private class FlowCanvas_Nodes_SetVariable_ftg_DioramaOneData_DioramaOneKeys : SetVariable<DioramaOneData.DioramaOneKeys>
		{
			[Token(Token = "0x6002C3D")]
			[Address(RVA = "0xB21850", Offset = "0xB21850", VA = "0xB21850")]
			public FlowCanvas_Nodes_SetVariable_ftg_DioramaOneData_DioramaOneKeys()
			{
			}
		}

		[Token(Token = "0x2000C7F")]
		private class FlowCanvas_Nodes_SetVariable_ftg_DioramaThreeData_DioramaThreeKeys : SetVariable<DioramaThreeData.DioramaThreeKeys>
		{
			[Token(Token = "0x6002C3E")]
			[Address(RVA = "0xB218A0", Offset = "0xB218A0", VA = "0xB218A0")]
			public FlowCanvas_Nodes_SetVariable_ftg_DioramaThreeData_DioramaThreeKeys()
			{
			}
		}

		[Token(Token = "0x2000C80")]
		private class FlowCanvas_Nodes_SetVariable_ftg_DioramaTwoData_DioramaTwoKeys : SetVariable<DioramaTwoData.DioramaTwoKeys>
		{
			[Token(Token = "0x6002C3F")]
			[Address(RVA = "0xB218F0", Offset = "0xB218F0", VA = "0xB218F0")]
			public FlowCanvas_Nodes_SetVariable_ftg_DioramaTwoData_DioramaTwoKeys()
			{
			}
		}

		[Token(Token = "0x2000C81")]
		private class FlowCanvas_Nodes_SetVariable_ftg_SaveManager_DioramaWorlds : SetVariable<SaveManager.DioramaWorlds>
		{
			[Token(Token = "0x6002C40")]
			[Address(RVA = "0xB219E0", Offset = "0xB219E0", VA = "0xB219E0")]
			public FlowCanvas_Nodes_SetVariable_ftg_SaveManager_DioramaWorlds()
			{
			}
		}

		[Token(Token = "0x2000C82")]
		private class FlowCanvas_Nodes_SetVariable_ftg_HubRoomData_HubRoomKeys : SetVariable<HubRoomData.HubRoomKeys>
		{
			[Token(Token = "0x6002C41")]
			[Address(RVA = "0xB21940", Offset = "0xB21940", VA = "0xB21940")]
			public FlowCanvas_Nodes_SetVariable_ftg_HubRoomData_HubRoomKeys()
			{
			}
		}

		[Token(Token = "0x2000C83")]
		private class FlowCanvas_Nodes_SetVariable_ftg_PersonaSettings_PersonaKeys : SetVariable<PersonaSettings.PersonaKeys>
		{
			[Token(Token = "0x6002C42")]
			[Address(RVA = "0xB21990", Offset = "0xB21990", VA = "0xB21990")]
			public FlowCanvas_Nodes_SetVariable_ftg_PersonaSettings_PersonaKeys()
			{
			}
		}

		[Token(Token = "0x2000C84")]
		private class FlowCanvas_Nodes_SetVariable_UnityEngine_LayerMask : SetVariable<LayerMask>
		{
			[Token(Token = "0x6002C43")]
			[Address(RVA = "0xB21490", Offset = "0xB21490", VA = "0xB21490")]
			public FlowCanvas_Nodes_SetVariable_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000C85")]
		private class FlowCanvas_Nodes_ShuffleList_System_Boolean : ShuffleList<bool>
		{
			[Token(Token = "0x6002C44")]
			[Address(RVA = "0xB21A30", Offset = "0xB21A30", VA = "0xB21A30")]
			public FlowCanvas_Nodes_ShuffleList_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000C86")]
		private class FlowCanvas_Nodes_ShuffleList_System_Single : ShuffleList<float>
		{
			[Token(Token = "0x6002C45")]
			[Address(RVA = "0xB21AD0", Offset = "0xB21AD0", VA = "0xB21AD0")]
			public FlowCanvas_Nodes_ShuffleList_System_Single()
			{
			}
		}

		[Token(Token = "0x2000C87")]
		private class FlowCanvas_Nodes_ShuffleList_System_Int32 : ShuffleList<int>
		{
			[Token(Token = "0x6002C46")]
			[Address(RVA = "0xB21A80", Offset = "0xB21A80", VA = "0xB21A80")]
			public FlowCanvas_Nodes_ShuffleList_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000C88")]
		private class FlowCanvas_Nodes_ShuffleList_UnityEngine_Vector2 : ShuffleList<Vector2>
		{
			[Token(Token = "0x6002C47")]
			[Address(RVA = "0xB21F80", Offset = "0xB21F80", VA = "0xB21F80")]
			public FlowCanvas_Nodes_ShuffleList_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000C89")]
		private class FlowCanvas_Nodes_ShuffleList_UnityEngine_Vector3 : ShuffleList<Vector3>
		{
			[Token(Token = "0x6002C48")]
			[Address(RVA = "0xB21FD0", Offset = "0xB21FD0", VA = "0xB21FD0")]
			public FlowCanvas_Nodes_ShuffleList_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000C8A")]
		private class FlowCanvas_Nodes_ShuffleList_UnityEngine_Vector4 : ShuffleList<Vector4>
		{
			[Token(Token = "0x6002C49")]
			[Address(RVA = "0xB22020", Offset = "0xB22020", VA = "0xB22020")]
			public FlowCanvas_Nodes_ShuffleList_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x2000C8B")]
		private class FlowCanvas_Nodes_ShuffleList_UnityEngine_Quaternion : ShuffleList<Quaternion>
		{
			[Token(Token = "0x6002C4A")]
			[Address(RVA = "0xB21DA0", Offset = "0xB21DA0", VA = "0xB21DA0")]
			public FlowCanvas_Nodes_ShuffleList_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000C8C")]
		private class FlowCanvas_Nodes_ShuffleList_UnityEngine_Keyframe : ShuffleList<Keyframe>
		{
			[Token(Token = "0x6002C4B")]
			[Address(RVA = "0xB21D00", Offset = "0xB21D00", VA = "0xB21D00")]
			public FlowCanvas_Nodes_ShuffleList_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000C8D")]
		private class FlowCanvas_Nodes_ShuffleList_UnityEngine_Bounds : ShuffleList<Bounds>
		{
			[Token(Token = "0x6002C4C")]
			[Address(RVA = "0xB21B20", Offset = "0xB21B20", VA = "0xB21B20")]
			public FlowCanvas_Nodes_ShuffleList_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000C8E")]
		private class FlowCanvas_Nodes_ShuffleList_UnityEngine_Color : ShuffleList<Color>
		{
			[Token(Token = "0x6002C4D")]
			[Address(RVA = "0xB21C10", Offset = "0xB21C10", VA = "0xB21C10")]
			public FlowCanvas_Nodes_ShuffleList_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000C8F")]
		private class FlowCanvas_Nodes_ShuffleList_UnityEngine_Rect : ShuffleList<Rect>
		{
			[Token(Token = "0x6002C4E")]
			[Address(RVA = "0xB21EE0", Offset = "0xB21EE0", VA = "0xB21EE0")]
			public FlowCanvas_Nodes_ShuffleList_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000C90")]
		private class FlowCanvas_Nodes_ShuffleList_UnityEngine_ContactPoint : ShuffleList<ContactPoint>
		{
			[Token(Token = "0x6002C4F")]
			[Address(RVA = "0xB21C60", Offset = "0xB21C60", VA = "0xB21C60")]
			public FlowCanvas_Nodes_ShuffleList_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000C91")]
		private class FlowCanvas_Nodes_ShuffleList_UnityEngine_ContactPoint2D : ShuffleList<ContactPoint2D>
		{
			[Token(Token = "0x6002C50")]
			[Address(RVA = "0xB21CB0", Offset = "0xB21CB0", VA = "0xB21CB0")]
			public FlowCanvas_Nodes_ShuffleList_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000C92")]
		private class FlowCanvas_Nodes_ShuffleList_UnityEngine_Collision : ShuffleList<Collision>
		{
			[Token(Token = "0x6002C51")]
			[Address(RVA = "0xB21B70", Offset = "0xB21B70", VA = "0xB21B70")]
			public FlowCanvas_Nodes_ShuffleList_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x2000C93")]
		private class FlowCanvas_Nodes_ShuffleList_UnityEngine_Collision2D : ShuffleList<Collision2D>
		{
			[Token(Token = "0x6002C52")]
			[Address(RVA = "0xB21BC0", Offset = "0xB21BC0", VA = "0xB21BC0")]
			public FlowCanvas_Nodes_ShuffleList_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000C94")]
		private class FlowCanvas_Nodes_ShuffleList_UnityEngine_RaycastHit : ShuffleList<RaycastHit>
		{
			[Token(Token = "0x6002C53")]
			[Address(RVA = "0xB21E40", Offset = "0xB21E40", VA = "0xB21E40")]
			public FlowCanvas_Nodes_ShuffleList_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000C95")]
		private class FlowCanvas_Nodes_ShuffleList_UnityEngine_RaycastHit2D : ShuffleList<RaycastHit2D>
		{
			[Token(Token = "0x6002C54")]
			[Address(RVA = "0xB21E90", Offset = "0xB21E90", VA = "0xB21E90")]
			public FlowCanvas_Nodes_ShuffleList_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000C96")]
		private class FlowCanvas_Nodes_ShuffleList_UnityEngine_Ray : ShuffleList<Ray>
		{
			[Token(Token = "0x6002C55")]
			[Address(RVA = "0xB21DF0", Offset = "0xB21DF0", VA = "0xB21DF0")]
			public FlowCanvas_Nodes_ShuffleList_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x2000C97")]
		private class FlowCanvas_Nodes_ShuffleList_UnityEngine_Space : ShuffleList<Space>
		{
			[Token(Token = "0x6002C56")]
			[Address(RVA = "0xB21F30", Offset = "0xB21F30", VA = "0xB21F30")]
			public FlowCanvas_Nodes_ShuffleList_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000C98")]
		private class FlowCanvas_Nodes_ShuffleList_ftg_DioramaFiveData_DioramaFiveKeys : ShuffleList<DioramaFiveData.DioramaFiveKeys>
		{
			[Token(Token = "0x6002C57")]
			[Address(RVA = "0xB22070", Offset = "0xB22070", VA = "0xB22070")]
			public FlowCanvas_Nodes_ShuffleList_ftg_DioramaFiveData_DioramaFiveKeys()
			{
			}
		}

		[Token(Token = "0x2000C99")]
		private class FlowCanvas_Nodes_ShuffleList_ftg_DioramaFourData_DioramaFourKeys : ShuffleList<DioramaFourData.DioramaFourKeys>
		{
			[Token(Token = "0x6002C58")]
			[Address(RVA = "0xB220C0", Offset = "0xB220C0", VA = "0xB220C0")]
			public FlowCanvas_Nodes_ShuffleList_ftg_DioramaFourData_DioramaFourKeys()
			{
			}
		}

		[Token(Token = "0x2000C9A")]
		private class FlowCanvas_Nodes_ShuffleList_ftg_DioramaOneData_DioramaOneKeys : ShuffleList<DioramaOneData.DioramaOneKeys>
		{
			[Token(Token = "0x6002C59")]
			[Address(RVA = "0xB22110", Offset = "0xB22110", VA = "0xB22110")]
			public FlowCanvas_Nodes_ShuffleList_ftg_DioramaOneData_DioramaOneKeys()
			{
			}
		}

		[Token(Token = "0x2000C9B")]
		private class FlowCanvas_Nodes_ShuffleList_ftg_DioramaThreeData_DioramaThreeKeys : ShuffleList<DioramaThreeData.DioramaThreeKeys>
		{
			[Token(Token = "0x6002C5A")]
			[Address(RVA = "0xB22160", Offset = "0xB22160", VA = "0xB22160")]
			public FlowCanvas_Nodes_ShuffleList_ftg_DioramaThreeData_DioramaThreeKeys()
			{
			}
		}

		[Token(Token = "0x2000C9C")]
		private class FlowCanvas_Nodes_ShuffleList_ftg_DioramaTwoData_DioramaTwoKeys : ShuffleList<DioramaTwoData.DioramaTwoKeys>
		{
			[Token(Token = "0x6002C5B")]
			[Address(RVA = "0xB221B0", Offset = "0xB221B0", VA = "0xB221B0")]
			public FlowCanvas_Nodes_ShuffleList_ftg_DioramaTwoData_DioramaTwoKeys()
			{
			}
		}

		[Token(Token = "0x2000C9D")]
		private class FlowCanvas_Nodes_ShuffleList_ftg_SaveManager_DioramaWorlds : ShuffleList<SaveManager.DioramaWorlds>
		{
			[Token(Token = "0x6002C5C")]
			[Address(RVA = "0xB222A0", Offset = "0xB222A0", VA = "0xB222A0")]
			public FlowCanvas_Nodes_ShuffleList_ftg_SaveManager_DioramaWorlds()
			{
			}
		}

		[Token(Token = "0x2000C9E")]
		private class FlowCanvas_Nodes_ShuffleList_ftg_HubRoomData_HubRoomKeys : ShuffleList<HubRoomData.HubRoomKeys>
		{
			[Token(Token = "0x6002C5D")]
			[Address(RVA = "0xB22200", Offset = "0xB22200", VA = "0xB22200")]
			public FlowCanvas_Nodes_ShuffleList_ftg_HubRoomData_HubRoomKeys()
			{
			}
		}

		[Token(Token = "0x2000C9F")]
		private class FlowCanvas_Nodes_ShuffleList_ftg_PersonaSettings_PersonaKeys : ShuffleList<PersonaSettings.PersonaKeys>
		{
			[Token(Token = "0x6002C5E")]
			[Address(RVA = "0xB22250", Offset = "0xB22250", VA = "0xB22250")]
			public FlowCanvas_Nodes_ShuffleList_ftg_PersonaSettings_PersonaKeys()
			{
			}
		}

		[Token(Token = "0x2000CA0")]
		private class FlowCanvas_Nodes_ShuffleList_UnityEngine_LayerMask : ShuffleList<LayerMask>
		{
			[Token(Token = "0x6002C5F")]
			[Address(RVA = "0xB21D50", Offset = "0xB21D50", VA = "0xB21D50")]
			public FlowCanvas_Nodes_ShuffleList_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000CA1")]
		private class FlowCanvas_Nodes_StaticCodeEvent_System_Boolean : StaticCodeEvent<bool>
		{
			[Token(Token = "0x6002C60")]
			[Address(RVA = "0xB222F0", Offset = "0xB222F0", VA = "0xB222F0")]
			public FlowCanvas_Nodes_StaticCodeEvent_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000CA2")]
		private class FlowCanvas_Nodes_StaticCodeEvent_System_Single : StaticCodeEvent<float>
		{
			[Token(Token = "0x6002C61")]
			[Address(RVA = "0xB22390", Offset = "0xB22390", VA = "0xB22390")]
			public FlowCanvas_Nodes_StaticCodeEvent_System_Single()
			{
			}
		}

		[Token(Token = "0x2000CA3")]
		private class FlowCanvas_Nodes_StaticCodeEvent_System_Int32 : StaticCodeEvent<int>
		{
			[Token(Token = "0x6002C62")]
			[Address(RVA = "0xB22340", Offset = "0xB22340", VA = "0xB22340")]
			public FlowCanvas_Nodes_StaticCodeEvent_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000CA4")]
		private class FlowCanvas_Nodes_StaticCodeEvent_UnityEngine_Vector2 : StaticCodeEvent<Vector2>
		{
			[Token(Token = "0x6002C63")]
			[Address(RVA = "0xB22840", Offset = "0xB22840", VA = "0xB22840")]
			public FlowCanvas_Nodes_StaticCodeEvent_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000CA5")]
		private class FlowCanvas_Nodes_StaticCodeEvent_UnityEngine_Vector3 : StaticCodeEvent<Vector3>
		{
			[Token(Token = "0x6002C64")]
			[Address(RVA = "0xB22890", Offset = "0xB22890", VA = "0xB22890")]
			public FlowCanvas_Nodes_StaticCodeEvent_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000CA6")]
		private class FlowCanvas_Nodes_StaticCodeEvent_UnityEngine_Vector4 : StaticCodeEvent<Vector4>
		{
			[Token(Token = "0x6002C65")]
			[Address(RVA = "0xB228E0", Offset = "0xB228E0", VA = "0xB228E0")]
			public FlowCanvas_Nodes_StaticCodeEvent_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x2000CA7")]
		private class FlowCanvas_Nodes_StaticCodeEvent_UnityEngine_Quaternion : StaticCodeEvent<Quaternion>
		{
			[Token(Token = "0x6002C66")]
			[Address(RVA = "0xB22660", Offset = "0xB22660", VA = "0xB22660")]
			public FlowCanvas_Nodes_StaticCodeEvent_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000CA8")]
		private class FlowCanvas_Nodes_StaticCodeEvent_UnityEngine_Keyframe : StaticCodeEvent<Keyframe>
		{
			[Token(Token = "0x6002C67")]
			[Address(RVA = "0xB225C0", Offset = "0xB225C0", VA = "0xB225C0")]
			public FlowCanvas_Nodes_StaticCodeEvent_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000CA9")]
		private class FlowCanvas_Nodes_StaticCodeEvent_UnityEngine_Bounds : StaticCodeEvent<Bounds>
		{
			[Token(Token = "0x6002C68")]
			[Address(RVA = "0xB223E0", Offset = "0xB223E0", VA = "0xB223E0")]
			public FlowCanvas_Nodes_StaticCodeEvent_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000CAA")]
		private class FlowCanvas_Nodes_StaticCodeEvent_UnityEngine_Color : StaticCodeEvent<Color>
		{
			[Token(Token = "0x6002C69")]
			[Address(RVA = "0xB224D0", Offset = "0xB224D0", VA = "0xB224D0")]
			public FlowCanvas_Nodes_StaticCodeEvent_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000CAB")]
		private class FlowCanvas_Nodes_StaticCodeEvent_UnityEngine_Rect : StaticCodeEvent<Rect>
		{
			[Token(Token = "0x6002C6A")]
			[Address(RVA = "0xB227A0", Offset = "0xB227A0", VA = "0xB227A0")]
			public FlowCanvas_Nodes_StaticCodeEvent_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000CAC")]
		private class FlowCanvas_Nodes_StaticCodeEvent_UnityEngine_ContactPoint : StaticCodeEvent<ContactPoint>
		{
			[Token(Token = "0x6002C6B")]
			[Address(RVA = "0xB22520", Offset = "0xB22520", VA = "0xB22520")]
			public FlowCanvas_Nodes_StaticCodeEvent_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000CAD")]
		private class FlowCanvas_Nodes_StaticCodeEvent_UnityEngine_ContactPoint2D : StaticCodeEvent<ContactPoint2D>
		{
			[Token(Token = "0x6002C6C")]
			[Address(RVA = "0xB22570", Offset = "0xB22570", VA = "0xB22570")]
			public FlowCanvas_Nodes_StaticCodeEvent_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000CAE")]
		private class FlowCanvas_Nodes_StaticCodeEvent_UnityEngine_Collision : StaticCodeEvent<Collision>
		{
			[Token(Token = "0x6002C6D")]
			[Address(RVA = "0xB22430", Offset = "0xB22430", VA = "0xB22430")]
			public FlowCanvas_Nodes_StaticCodeEvent_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x2000CAF")]
		private class FlowCanvas_Nodes_StaticCodeEvent_UnityEngine_Collision2D : StaticCodeEvent<Collision2D>
		{
			[Token(Token = "0x6002C6E")]
			[Address(RVA = "0xB22480", Offset = "0xB22480", VA = "0xB22480")]
			public FlowCanvas_Nodes_StaticCodeEvent_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000CB0")]
		private class FlowCanvas_Nodes_StaticCodeEvent_UnityEngine_RaycastHit : StaticCodeEvent<RaycastHit>
		{
			[Token(Token = "0x6002C6F")]
			[Address(RVA = "0xB22700", Offset = "0xB22700", VA = "0xB22700")]
			public FlowCanvas_Nodes_StaticCodeEvent_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000CB1")]
		private class FlowCanvas_Nodes_StaticCodeEvent_UnityEngine_RaycastHit2D : StaticCodeEvent<RaycastHit2D>
		{
			[Token(Token = "0x6002C70")]
			[Address(RVA = "0xB22750", Offset = "0xB22750", VA = "0xB22750")]
			public FlowCanvas_Nodes_StaticCodeEvent_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000CB2")]
		private class FlowCanvas_Nodes_StaticCodeEvent_UnityEngine_Ray : StaticCodeEvent<Ray>
		{
			[Token(Token = "0x6002C71")]
			[Address(RVA = "0xB226B0", Offset = "0xB226B0", VA = "0xB226B0")]
			public FlowCanvas_Nodes_StaticCodeEvent_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x2000CB3")]
		private class FlowCanvas_Nodes_StaticCodeEvent_UnityEngine_Space : StaticCodeEvent<Space>
		{
			[Token(Token = "0x6002C72")]
			[Address(RVA = "0xB227F0", Offset = "0xB227F0", VA = "0xB227F0")]
			public FlowCanvas_Nodes_StaticCodeEvent_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000CB4")]
		private class FlowCanvas_Nodes_StaticCodeEvent_ftg_DioramaFiveData_DioramaFiveKeys : StaticCodeEvent<DioramaFiveData.DioramaFiveKeys>
		{
			[Token(Token = "0x6002C73")]
			[Address(RVA = "0xB22930", Offset = "0xB22930", VA = "0xB22930")]
			public FlowCanvas_Nodes_StaticCodeEvent_ftg_DioramaFiveData_DioramaFiveKeys()
			{
			}
		}

		[Token(Token = "0x2000CB5")]
		private class FlowCanvas_Nodes_StaticCodeEvent_ftg_DioramaFourData_DioramaFourKeys : StaticCodeEvent<DioramaFourData.DioramaFourKeys>
		{
			[Token(Token = "0x6002C74")]
			[Address(RVA = "0xB22980", Offset = "0xB22980", VA = "0xB22980")]
			public FlowCanvas_Nodes_StaticCodeEvent_ftg_DioramaFourData_DioramaFourKeys()
			{
			}
		}

		[Token(Token = "0x2000CB6")]
		private class FlowCanvas_Nodes_StaticCodeEvent_ftg_DioramaOneData_DioramaOneKeys : StaticCodeEvent<DioramaOneData.DioramaOneKeys>
		{
			[Token(Token = "0x6002C75")]
			[Address(RVA = "0xB229D0", Offset = "0xB229D0", VA = "0xB229D0")]
			public FlowCanvas_Nodes_StaticCodeEvent_ftg_DioramaOneData_DioramaOneKeys()
			{
			}
		}

		[Token(Token = "0x2000CB7")]
		private class FlowCanvas_Nodes_StaticCodeEvent_ftg_DioramaThreeData_DioramaThreeKeys : StaticCodeEvent<DioramaThreeData.DioramaThreeKeys>
		{
			[Token(Token = "0x6002C76")]
			[Address(RVA = "0xB22A20", Offset = "0xB22A20", VA = "0xB22A20")]
			public FlowCanvas_Nodes_StaticCodeEvent_ftg_DioramaThreeData_DioramaThreeKeys()
			{
			}
		}

		[Token(Token = "0x2000CB8")]
		private class FlowCanvas_Nodes_StaticCodeEvent_ftg_DioramaTwoData_DioramaTwoKeys : StaticCodeEvent<DioramaTwoData.DioramaTwoKeys>
		{
			[Token(Token = "0x6002C77")]
			[Address(RVA = "0xB22A70", Offset = "0xB22A70", VA = "0xB22A70")]
			public FlowCanvas_Nodes_StaticCodeEvent_ftg_DioramaTwoData_DioramaTwoKeys()
			{
			}
		}

		[Token(Token = "0x2000CB9")]
		private class FlowCanvas_Nodes_StaticCodeEvent_ftg_SaveManager_DioramaWorlds : StaticCodeEvent<SaveManager.DioramaWorlds>
		{
			[Token(Token = "0x6002C78")]
			[Address(RVA = "0xB22B60", Offset = "0xB22B60", VA = "0xB22B60")]
			public FlowCanvas_Nodes_StaticCodeEvent_ftg_SaveManager_DioramaWorlds()
			{
			}
		}

		[Token(Token = "0x2000CBA")]
		private class FlowCanvas_Nodes_StaticCodeEvent_ftg_HubRoomData_HubRoomKeys : StaticCodeEvent<HubRoomData.HubRoomKeys>
		{
			[Token(Token = "0x6002C79")]
			[Address(RVA = "0xB22AC0", Offset = "0xB22AC0", VA = "0xB22AC0")]
			public FlowCanvas_Nodes_StaticCodeEvent_ftg_HubRoomData_HubRoomKeys()
			{
			}
		}

		[Token(Token = "0x2000CBB")]
		private class FlowCanvas_Nodes_StaticCodeEvent_ftg_PersonaSettings_PersonaKeys : StaticCodeEvent<PersonaSettings.PersonaKeys>
		{
			[Token(Token = "0x6002C7A")]
			[Address(RVA = "0xB22B10", Offset = "0xB22B10", VA = "0xB22B10")]
			public FlowCanvas_Nodes_StaticCodeEvent_ftg_PersonaSettings_PersonaKeys()
			{
			}
		}

		[Token(Token = "0x2000CBC")]
		private class FlowCanvas_Nodes_StaticCodeEvent_UnityEngine_LayerMask : StaticCodeEvent<LayerMask>
		{
			[Token(Token = "0x6002C7B")]
			[Address(RVA = "0xB22610", Offset = "0xB22610", VA = "0xB22610")]
			public FlowCanvas_Nodes_StaticCodeEvent_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000CBD")]
		private class FlowCanvas_Nodes_SwitchValue_System_Boolean : SwitchValue<bool>
		{
			[Token(Token = "0x6002C7C")]
			[Address(RVA = "0xB22BB0", Offset = "0xB22BB0", VA = "0xB22BB0")]
			public FlowCanvas_Nodes_SwitchValue_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000CBE")]
		private class FlowCanvas_Nodes_SwitchValue_System_Single : SwitchValue<float>
		{
			[Token(Token = "0x6002C7D")]
			[Address(RVA = "0xB22C50", Offset = "0xB22C50", VA = "0xB22C50")]
			public FlowCanvas_Nodes_SwitchValue_System_Single()
			{
			}
		}

		[Token(Token = "0x2000CBF")]
		private class FlowCanvas_Nodes_SwitchValue_System_Int32 : SwitchValue<int>
		{
			[Token(Token = "0x6002C7E")]
			[Address(RVA = "0xB22C00", Offset = "0xB22C00", VA = "0xB22C00")]
			public FlowCanvas_Nodes_SwitchValue_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000CC0")]
		private class FlowCanvas_Nodes_SwitchValue_UnityEngine_Vector2 : SwitchValue<Vector2>
		{
			[Token(Token = "0x6002C7F")]
			[Address(RVA = "0xB23100", Offset = "0xB23100", VA = "0xB23100")]
			public FlowCanvas_Nodes_SwitchValue_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000CC1")]
		private class FlowCanvas_Nodes_SwitchValue_UnityEngine_Vector3 : SwitchValue<Vector3>
		{
			[Token(Token = "0x6002C80")]
			[Address(RVA = "0xB23150", Offset = "0xB23150", VA = "0xB23150")]
			public FlowCanvas_Nodes_SwitchValue_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000CC2")]
		private class FlowCanvas_Nodes_SwitchValue_UnityEngine_Vector4 : SwitchValue<Vector4>
		{
			[Token(Token = "0x6002C81")]
			[Address(RVA = "0xB231A0", Offset = "0xB231A0", VA = "0xB231A0")]
			public FlowCanvas_Nodes_SwitchValue_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x2000CC3")]
		private class FlowCanvas_Nodes_SwitchValue_UnityEngine_Quaternion : SwitchValue<Quaternion>
		{
			[Token(Token = "0x6002C82")]
			[Address(RVA = "0xB22F20", Offset = "0xB22F20", VA = "0xB22F20")]
			public FlowCanvas_Nodes_SwitchValue_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000CC4")]
		private class FlowCanvas_Nodes_SwitchValue_UnityEngine_Keyframe : SwitchValue<Keyframe>
		{
			[Token(Token = "0x6002C83")]
			[Address(RVA = "0xB22E80", Offset = "0xB22E80", VA = "0xB22E80")]
			public FlowCanvas_Nodes_SwitchValue_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000CC5")]
		private class FlowCanvas_Nodes_SwitchValue_UnityEngine_Bounds : SwitchValue<Bounds>
		{
			[Token(Token = "0x6002C84")]
			[Address(RVA = "0xB22CA0", Offset = "0xB22CA0", VA = "0xB22CA0")]
			public FlowCanvas_Nodes_SwitchValue_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000CC6")]
		private class FlowCanvas_Nodes_SwitchValue_UnityEngine_Color : SwitchValue<Color>
		{
			[Token(Token = "0x6002C85")]
			[Address(RVA = "0xB22D90", Offset = "0xB22D90", VA = "0xB22D90")]
			public FlowCanvas_Nodes_SwitchValue_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000CC7")]
		private class FlowCanvas_Nodes_SwitchValue_UnityEngine_Rect : SwitchValue<Rect>
		{
			[Token(Token = "0x6002C86")]
			[Address(RVA = "0xB23060", Offset = "0xB23060", VA = "0xB23060")]
			public FlowCanvas_Nodes_SwitchValue_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000CC8")]
		private class FlowCanvas_Nodes_SwitchValue_UnityEngine_ContactPoint : SwitchValue<ContactPoint>
		{
			[Token(Token = "0x6002C87")]
			[Address(RVA = "0xB22DE0", Offset = "0xB22DE0", VA = "0xB22DE0")]
			public FlowCanvas_Nodes_SwitchValue_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000CC9")]
		private class FlowCanvas_Nodes_SwitchValue_UnityEngine_ContactPoint2D : SwitchValue<ContactPoint2D>
		{
			[Token(Token = "0x6002C88")]
			[Address(RVA = "0xB22E30", Offset = "0xB22E30", VA = "0xB22E30")]
			public FlowCanvas_Nodes_SwitchValue_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000CCA")]
		private class FlowCanvas_Nodes_SwitchValue_UnityEngine_Collision : SwitchValue<Collision>
		{
			[Token(Token = "0x6002C89")]
			[Address(RVA = "0xB22CF0", Offset = "0xB22CF0", VA = "0xB22CF0")]
			public FlowCanvas_Nodes_SwitchValue_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x2000CCB")]
		private class FlowCanvas_Nodes_SwitchValue_UnityEngine_Collision2D : SwitchValue<Collision2D>
		{
			[Token(Token = "0x6002C8A")]
			[Address(RVA = "0xB22D40", Offset = "0xB22D40", VA = "0xB22D40")]
			public FlowCanvas_Nodes_SwitchValue_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000CCC")]
		private class FlowCanvas_Nodes_SwitchValue_UnityEngine_RaycastHit : SwitchValue<RaycastHit>
		{
			[Token(Token = "0x6002C8B")]
			[Address(RVA = "0xB22FC0", Offset = "0xB22FC0", VA = "0xB22FC0")]
			public FlowCanvas_Nodes_SwitchValue_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000CCD")]
		private class FlowCanvas_Nodes_SwitchValue_UnityEngine_RaycastHit2D : SwitchValue<RaycastHit2D>
		{
			[Token(Token = "0x6002C8C")]
			[Address(RVA = "0xB23010", Offset = "0xB23010", VA = "0xB23010")]
			public FlowCanvas_Nodes_SwitchValue_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000CCE")]
		private class FlowCanvas_Nodes_SwitchValue_UnityEngine_Ray : SwitchValue<Ray>
		{
			[Token(Token = "0x6002C8D")]
			[Address(RVA = "0xB22F70", Offset = "0xB22F70", VA = "0xB22F70")]
			public FlowCanvas_Nodes_SwitchValue_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x2000CCF")]
		private class FlowCanvas_Nodes_SwitchValue_UnityEngine_Space : SwitchValue<Space>
		{
			[Token(Token = "0x6002C8E")]
			[Address(RVA = "0xB230B0", Offset = "0xB230B0", VA = "0xB230B0")]
			public FlowCanvas_Nodes_SwitchValue_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000CD0")]
		private class FlowCanvas_Nodes_SwitchValue_ftg_DioramaFiveData_DioramaFiveKeys : SwitchValue<DioramaFiveData.DioramaFiveKeys>
		{
			[Token(Token = "0x6002C8F")]
			[Address(RVA = "0xB231F0", Offset = "0xB231F0", VA = "0xB231F0")]
			public FlowCanvas_Nodes_SwitchValue_ftg_DioramaFiveData_DioramaFiveKeys()
			{
			}
		}

		[Token(Token = "0x2000CD1")]
		private class FlowCanvas_Nodes_SwitchValue_ftg_DioramaFourData_DioramaFourKeys : SwitchValue<DioramaFourData.DioramaFourKeys>
		{
			[Token(Token = "0x6002C90")]
			[Address(RVA = "0xB23240", Offset = "0xB23240", VA = "0xB23240")]
			public FlowCanvas_Nodes_SwitchValue_ftg_DioramaFourData_DioramaFourKeys()
			{
			}
		}

		[Token(Token = "0x2000CD2")]
		private class FlowCanvas_Nodes_SwitchValue_ftg_DioramaOneData_DioramaOneKeys : SwitchValue<DioramaOneData.DioramaOneKeys>
		{
			[Token(Token = "0x6002C91")]
			[Address(RVA = "0xB23290", Offset = "0xB23290", VA = "0xB23290")]
			public FlowCanvas_Nodes_SwitchValue_ftg_DioramaOneData_DioramaOneKeys()
			{
			}
		}

		[Token(Token = "0x2000CD3")]
		private class FlowCanvas_Nodes_SwitchValue_ftg_DioramaThreeData_DioramaThreeKeys : SwitchValue<DioramaThreeData.DioramaThreeKeys>
		{
			[Token(Token = "0x6002C92")]
			[Address(RVA = "0xB232E0", Offset = "0xB232E0", VA = "0xB232E0")]
			public FlowCanvas_Nodes_SwitchValue_ftg_DioramaThreeData_DioramaThreeKeys()
			{
			}
		}

		[Token(Token = "0x2000CD4")]
		private class FlowCanvas_Nodes_SwitchValue_ftg_DioramaTwoData_DioramaTwoKeys : SwitchValue<DioramaTwoData.DioramaTwoKeys>
		{
			[Token(Token = "0x6002C93")]
			[Address(RVA = "0xB23330", Offset = "0xB23330", VA = "0xB23330")]
			public FlowCanvas_Nodes_SwitchValue_ftg_DioramaTwoData_DioramaTwoKeys()
			{
			}
		}

		[Token(Token = "0x2000CD5")]
		private class FlowCanvas_Nodes_SwitchValue_ftg_SaveManager_DioramaWorlds : SwitchValue<SaveManager.DioramaWorlds>
		{
			[Token(Token = "0x6002C94")]
			[Address(RVA = "0xB23420", Offset = "0xB23420", VA = "0xB23420")]
			public FlowCanvas_Nodes_SwitchValue_ftg_SaveManager_DioramaWorlds()
			{
			}
		}

		[Token(Token = "0x2000CD6")]
		private class FlowCanvas_Nodes_SwitchValue_ftg_HubRoomData_HubRoomKeys : SwitchValue<HubRoomData.HubRoomKeys>
		{
			[Token(Token = "0x6002C95")]
			[Address(RVA = "0xB23380", Offset = "0xB23380", VA = "0xB23380")]
			public FlowCanvas_Nodes_SwitchValue_ftg_HubRoomData_HubRoomKeys()
			{
			}
		}

		[Token(Token = "0x2000CD7")]
		private class FlowCanvas_Nodes_SwitchValue_ftg_PersonaSettings_PersonaKeys : SwitchValue<PersonaSettings.PersonaKeys>
		{
			[Token(Token = "0x6002C96")]
			[Address(RVA = "0xB233D0", Offset = "0xB233D0", VA = "0xB233D0")]
			public FlowCanvas_Nodes_SwitchValue_ftg_PersonaSettings_PersonaKeys()
			{
			}
		}

		[Token(Token = "0x2000CD8")]
		private class FlowCanvas_Nodes_SwitchValue_UnityEngine_LayerMask : SwitchValue<LayerMask>
		{
			[Token(Token = "0x6002C97")]
			[Address(RVA = "0xB22ED0", Offset = "0xB22ED0", VA = "0xB22ED0")]
			public FlowCanvas_Nodes_SwitchValue_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000CD9")]
		private class FlowCanvas_Nodes_ToArray_System_Boolean : ToArray<bool>
		{
			[Token(Token = "0x6002C98")]
			[Address(RVA = "0xB23470", Offset = "0xB23470", VA = "0xB23470")]
			public FlowCanvas_Nodes_ToArray_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000CDA")]
		private class FlowCanvas_Nodes_ToArray_System_Single : ToArray<float>
		{
			[Token(Token = "0x6002C99")]
			[Address(RVA = "0xB23510", Offset = "0xB23510", VA = "0xB23510")]
			public FlowCanvas_Nodes_ToArray_System_Single()
			{
			}
		}

		[Token(Token = "0x2000CDB")]
		private class FlowCanvas_Nodes_ToArray_System_Int32 : ToArray<int>
		{
			[Token(Token = "0x6002C9A")]
			[Address(RVA = "0xB234C0", Offset = "0xB234C0", VA = "0xB234C0")]
			public FlowCanvas_Nodes_ToArray_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000CDC")]
		private class FlowCanvas_Nodes_ToArray_UnityEngine_Vector2 : ToArray<Vector2>
		{
			[Token(Token = "0x6002C9B")]
			[Address(RVA = "0xB239C0", Offset = "0xB239C0", VA = "0xB239C0")]
			public FlowCanvas_Nodes_ToArray_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000CDD")]
		private class FlowCanvas_Nodes_ToArray_UnityEngine_Vector3 : ToArray<Vector3>
		{
			[Token(Token = "0x6002C9C")]
			[Address(RVA = "0xB23A10", Offset = "0xB23A10", VA = "0xB23A10")]
			public FlowCanvas_Nodes_ToArray_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000CDE")]
		private class FlowCanvas_Nodes_ToArray_UnityEngine_Vector4 : ToArray<Vector4>
		{
			[Token(Token = "0x6002C9D")]
			[Address(RVA = "0xB23A60", Offset = "0xB23A60", VA = "0xB23A60")]
			public FlowCanvas_Nodes_ToArray_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x2000CDF")]
		private class FlowCanvas_Nodes_ToArray_UnityEngine_Quaternion : ToArray<Quaternion>
		{
			[Token(Token = "0x6002C9E")]
			[Address(RVA = "0xB237E0", Offset = "0xB237E0", VA = "0xB237E0")]
			public FlowCanvas_Nodes_ToArray_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000CE0")]
		private class FlowCanvas_Nodes_ToArray_UnityEngine_Keyframe : ToArray<Keyframe>
		{
			[Token(Token = "0x6002C9F")]
			[Address(RVA = "0xB23740", Offset = "0xB23740", VA = "0xB23740")]
			public FlowCanvas_Nodes_ToArray_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000CE1")]
		private class FlowCanvas_Nodes_ToArray_UnityEngine_Bounds : ToArray<Bounds>
		{
			[Token(Token = "0x6002CA0")]
			[Address(RVA = "0xB23560", Offset = "0xB23560", VA = "0xB23560")]
			public FlowCanvas_Nodes_ToArray_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000CE2")]
		private class FlowCanvas_Nodes_ToArray_UnityEngine_Color : ToArray<Color>
		{
			[Token(Token = "0x6002CA1")]
			[Address(RVA = "0xB23650", Offset = "0xB23650", VA = "0xB23650")]
			public FlowCanvas_Nodes_ToArray_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000CE3")]
		private class FlowCanvas_Nodes_ToArray_UnityEngine_Rect : ToArray<Rect>
		{
			[Token(Token = "0x6002CA2")]
			[Address(RVA = "0xB23920", Offset = "0xB23920", VA = "0xB23920")]
			public FlowCanvas_Nodes_ToArray_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000CE4")]
		private class FlowCanvas_Nodes_ToArray_UnityEngine_ContactPoint : ToArray<ContactPoint>
		{
			[Token(Token = "0x6002CA3")]
			[Address(RVA = "0xB236A0", Offset = "0xB236A0", VA = "0xB236A0")]
			public FlowCanvas_Nodes_ToArray_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000CE5")]
		private class FlowCanvas_Nodes_ToArray_UnityEngine_ContactPoint2D : ToArray<ContactPoint2D>
		{
			[Token(Token = "0x6002CA4")]
			[Address(RVA = "0xB236F0", Offset = "0xB236F0", VA = "0xB236F0")]
			public FlowCanvas_Nodes_ToArray_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000CE6")]
		private class FlowCanvas_Nodes_ToArray_UnityEngine_Collision : ToArray<Collision>
		{
			[Token(Token = "0x6002CA5")]
			[Address(RVA = "0xB235B0", Offset = "0xB235B0", VA = "0xB235B0")]
			public FlowCanvas_Nodes_ToArray_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x2000CE7")]
		private class FlowCanvas_Nodes_ToArray_UnityEngine_Collision2D : ToArray<Collision2D>
		{
			[Token(Token = "0x6002CA6")]
			[Address(RVA = "0xB23600", Offset = "0xB23600", VA = "0xB23600")]
			public FlowCanvas_Nodes_ToArray_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000CE8")]
		private class FlowCanvas_Nodes_ToArray_UnityEngine_RaycastHit : ToArray<RaycastHit>
		{
			[Token(Token = "0x6002CA7")]
			[Address(RVA = "0xB23880", Offset = "0xB23880", VA = "0xB23880")]
			public FlowCanvas_Nodes_ToArray_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000CE9")]
		private class FlowCanvas_Nodes_ToArray_UnityEngine_RaycastHit2D : ToArray<RaycastHit2D>
		{
			[Token(Token = "0x6002CA8")]
			[Address(RVA = "0xB238D0", Offset = "0xB238D0", VA = "0xB238D0")]
			public FlowCanvas_Nodes_ToArray_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000CEA")]
		private class FlowCanvas_Nodes_ToArray_UnityEngine_Ray : ToArray<Ray>
		{
			[Token(Token = "0x6002CA9")]
			[Address(RVA = "0xB23830", Offset = "0xB23830", VA = "0xB23830")]
			public FlowCanvas_Nodes_ToArray_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x2000CEB")]
		private class FlowCanvas_Nodes_ToArray_UnityEngine_Space : ToArray<Space>
		{
			[Token(Token = "0x6002CAA")]
			[Address(RVA = "0xB23970", Offset = "0xB23970", VA = "0xB23970")]
			public FlowCanvas_Nodes_ToArray_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000CEC")]
		private class FlowCanvas_Nodes_ToArray_ftg_DioramaFiveData_DioramaFiveKeys : ToArray<DioramaFiveData.DioramaFiveKeys>
		{
			[Token(Token = "0x6002CAB")]
			[Address(RVA = "0xB23AB0", Offset = "0xB23AB0", VA = "0xB23AB0")]
			public FlowCanvas_Nodes_ToArray_ftg_DioramaFiveData_DioramaFiveKeys()
			{
			}
		}

		[Token(Token = "0x2000CED")]
		private class FlowCanvas_Nodes_ToArray_ftg_DioramaFourData_DioramaFourKeys : ToArray<DioramaFourData.DioramaFourKeys>
		{
			[Token(Token = "0x6002CAC")]
			[Address(RVA = "0xB23B00", Offset = "0xB23B00", VA = "0xB23B00")]
			public FlowCanvas_Nodes_ToArray_ftg_DioramaFourData_DioramaFourKeys()
			{
			}
		}

		[Token(Token = "0x2000CEE")]
		private class FlowCanvas_Nodes_ToArray_ftg_DioramaOneData_DioramaOneKeys : ToArray<DioramaOneData.DioramaOneKeys>
		{
			[Token(Token = "0x6002CAD")]
			[Address(RVA = "0xB23B50", Offset = "0xB23B50", VA = "0xB23B50")]
			public FlowCanvas_Nodes_ToArray_ftg_DioramaOneData_DioramaOneKeys()
			{
			}
		}

		[Token(Token = "0x2000CEF")]
		private class FlowCanvas_Nodes_ToArray_ftg_DioramaThreeData_DioramaThreeKeys : ToArray<DioramaThreeData.DioramaThreeKeys>
		{
			[Token(Token = "0x6002CAE")]
			[Address(RVA = "0xB23BA0", Offset = "0xB23BA0", VA = "0xB23BA0")]
			public FlowCanvas_Nodes_ToArray_ftg_DioramaThreeData_DioramaThreeKeys()
			{
			}
		}

		[Token(Token = "0x2000CF0")]
		private class FlowCanvas_Nodes_ToArray_ftg_DioramaTwoData_DioramaTwoKeys : ToArray<DioramaTwoData.DioramaTwoKeys>
		{
			[Token(Token = "0x6002CAF")]
			[Address(RVA = "0xB23BF0", Offset = "0xB23BF0", VA = "0xB23BF0")]
			public FlowCanvas_Nodes_ToArray_ftg_DioramaTwoData_DioramaTwoKeys()
			{
			}
		}

		[Token(Token = "0x2000CF1")]
		private class FlowCanvas_Nodes_ToArray_ftg_SaveManager_DioramaWorlds : ToArray<SaveManager.DioramaWorlds>
		{
			[Token(Token = "0x6002CB0")]
			[Address(RVA = "0xB23CE0", Offset = "0xB23CE0", VA = "0xB23CE0")]
			public FlowCanvas_Nodes_ToArray_ftg_SaveManager_DioramaWorlds()
			{
			}
		}

		[Token(Token = "0x2000CF2")]
		private class FlowCanvas_Nodes_ToArray_ftg_HubRoomData_HubRoomKeys : ToArray<HubRoomData.HubRoomKeys>
		{
			[Token(Token = "0x6002CB1")]
			[Address(RVA = "0xB23C40", Offset = "0xB23C40", VA = "0xB23C40")]
			public FlowCanvas_Nodes_ToArray_ftg_HubRoomData_HubRoomKeys()
			{
			}
		}

		[Token(Token = "0x2000CF3")]
		private class FlowCanvas_Nodes_ToArray_ftg_PersonaSettings_PersonaKeys : ToArray<PersonaSettings.PersonaKeys>
		{
			[Token(Token = "0x6002CB2")]
			[Address(RVA = "0xB23C90", Offset = "0xB23C90", VA = "0xB23C90")]
			public FlowCanvas_Nodes_ToArray_ftg_PersonaSettings_PersonaKeys()
			{
			}
		}

		[Token(Token = "0x2000CF4")]
		private class FlowCanvas_Nodes_ToArray_UnityEngine_LayerMask : ToArray<LayerMask>
		{
			[Token(Token = "0x6002CB3")]
			[Address(RVA = "0xB23790", Offset = "0xB23790", VA = "0xB23790")]
			public FlowCanvas_Nodes_ToArray_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000CF5")]
		private class FlowCanvas_Nodes_ToList_System_Boolean : ToList<bool>
		{
			[Token(Token = "0x6002CB4")]
			[Address(RVA = "0xB23D30", Offset = "0xB23D30", VA = "0xB23D30")]
			public FlowCanvas_Nodes_ToList_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000CF6")]
		private class FlowCanvas_Nodes_ToList_System_Single : ToList<float>
		{
			[Token(Token = "0x6002CB5")]
			[Address(RVA = "0xB23DD0", Offset = "0xB23DD0", VA = "0xB23DD0")]
			public FlowCanvas_Nodes_ToList_System_Single()
			{
			}
		}

		[Token(Token = "0x2000CF7")]
		private class FlowCanvas_Nodes_ToList_System_Int32 : ToList<int>
		{
			[Token(Token = "0x6002CB6")]
			[Address(RVA = "0xB23D80", Offset = "0xB23D80", VA = "0xB23D80")]
			public FlowCanvas_Nodes_ToList_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000CF8")]
		private class FlowCanvas_Nodes_ToList_UnityEngine_Vector2 : ToList<Vector2>
		{
			[Token(Token = "0x6002CB7")]
			[Address(RVA = "0xB24280", Offset = "0xB24280", VA = "0xB24280")]
			public FlowCanvas_Nodes_ToList_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000CF9")]
		private class FlowCanvas_Nodes_ToList_UnityEngine_Vector3 : ToList<Vector3>
		{
			[Token(Token = "0x6002CB8")]
			[Address(RVA = "0xB242D0", Offset = "0xB242D0", VA = "0xB242D0")]
			public FlowCanvas_Nodes_ToList_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000CFA")]
		private class FlowCanvas_Nodes_ToList_UnityEngine_Vector4 : ToList<Vector4>
		{
			[Token(Token = "0x6002CB9")]
			[Address(RVA = "0xB24320", Offset = "0xB24320", VA = "0xB24320")]
			public FlowCanvas_Nodes_ToList_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x2000CFB")]
		private class FlowCanvas_Nodes_ToList_UnityEngine_Quaternion : ToList<Quaternion>
		{
			[Token(Token = "0x6002CBA")]
			[Address(RVA = "0xB240A0", Offset = "0xB240A0", VA = "0xB240A0")]
			public FlowCanvas_Nodes_ToList_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000CFC")]
		private class FlowCanvas_Nodes_ToList_UnityEngine_Keyframe : ToList<Keyframe>
		{
			[Token(Token = "0x6002CBB")]
			[Address(RVA = "0xB24000", Offset = "0xB24000", VA = "0xB24000")]
			public FlowCanvas_Nodes_ToList_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000CFD")]
		private class FlowCanvas_Nodes_ToList_UnityEngine_Bounds : ToList<Bounds>
		{
			[Token(Token = "0x6002CBC")]
			[Address(RVA = "0xB23E20", Offset = "0xB23E20", VA = "0xB23E20")]
			public FlowCanvas_Nodes_ToList_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000CFE")]
		private class FlowCanvas_Nodes_ToList_UnityEngine_Color : ToList<Color>
		{
			[Token(Token = "0x6002CBD")]
			[Address(RVA = "0xB23F10", Offset = "0xB23F10", VA = "0xB23F10")]
			public FlowCanvas_Nodes_ToList_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000CFF")]
		private class FlowCanvas_Nodes_ToList_UnityEngine_Rect : ToList<Rect>
		{
			[Token(Token = "0x6002CBE")]
			[Address(RVA = "0xB241E0", Offset = "0xB241E0", VA = "0xB241E0")]
			public FlowCanvas_Nodes_ToList_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000D00")]
		private class FlowCanvas_Nodes_ToList_UnityEngine_ContactPoint : ToList<ContactPoint>
		{
			[Token(Token = "0x6002CBF")]
			[Address(RVA = "0xB23F60", Offset = "0xB23F60", VA = "0xB23F60")]
			public FlowCanvas_Nodes_ToList_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000D01")]
		private class FlowCanvas_Nodes_ToList_UnityEngine_ContactPoint2D : ToList<ContactPoint2D>
		{
			[Token(Token = "0x6002CC0")]
			[Address(RVA = "0xB23FB0", Offset = "0xB23FB0", VA = "0xB23FB0")]
			public FlowCanvas_Nodes_ToList_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000D02")]
		private class FlowCanvas_Nodes_ToList_UnityEngine_Collision : ToList<Collision>
		{
			[Token(Token = "0x6002CC1")]
			[Address(RVA = "0xB23E70", Offset = "0xB23E70", VA = "0xB23E70")]
			public FlowCanvas_Nodes_ToList_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x2000D03")]
		private class FlowCanvas_Nodes_ToList_UnityEngine_Collision2D : ToList<Collision2D>
		{
			[Token(Token = "0x6002CC2")]
			[Address(RVA = "0xB23EC0", Offset = "0xB23EC0", VA = "0xB23EC0")]
			public FlowCanvas_Nodes_ToList_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000D04")]
		private class FlowCanvas_Nodes_ToList_UnityEngine_RaycastHit : ToList<RaycastHit>
		{
			[Token(Token = "0x6002CC3")]
			[Address(RVA = "0xB24140", Offset = "0xB24140", VA = "0xB24140")]
			public FlowCanvas_Nodes_ToList_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000D05")]
		private class FlowCanvas_Nodes_ToList_UnityEngine_RaycastHit2D : ToList<RaycastHit2D>
		{
			[Token(Token = "0x6002CC4")]
			[Address(RVA = "0xB24190", Offset = "0xB24190", VA = "0xB24190")]
			public FlowCanvas_Nodes_ToList_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000D06")]
		private class FlowCanvas_Nodes_ToList_UnityEngine_Ray : ToList<Ray>
		{
			[Token(Token = "0x6002CC5")]
			[Address(RVA = "0xB240F0", Offset = "0xB240F0", VA = "0xB240F0")]
			public FlowCanvas_Nodes_ToList_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x2000D07")]
		private class FlowCanvas_Nodes_ToList_UnityEngine_Space : ToList<Space>
		{
			[Token(Token = "0x6002CC6")]
			[Address(RVA = "0xB24230", Offset = "0xB24230", VA = "0xB24230")]
			public FlowCanvas_Nodes_ToList_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000D08")]
		private class FlowCanvas_Nodes_ToList_ftg_DioramaFiveData_DioramaFiveKeys : ToList<DioramaFiveData.DioramaFiveKeys>
		{
			[Token(Token = "0x6002CC7")]
			[Address(RVA = "0xB24370", Offset = "0xB24370", VA = "0xB24370")]
			public FlowCanvas_Nodes_ToList_ftg_DioramaFiveData_DioramaFiveKeys()
			{
			}
		}

		[Token(Token = "0x2000D09")]
		private class FlowCanvas_Nodes_ToList_ftg_DioramaFourData_DioramaFourKeys : ToList<DioramaFourData.DioramaFourKeys>
		{
			[Token(Token = "0x6002CC8")]
			[Address(RVA = "0xB243C0", Offset = "0xB243C0", VA = "0xB243C0")]
			public FlowCanvas_Nodes_ToList_ftg_DioramaFourData_DioramaFourKeys()
			{
			}
		}

		[Token(Token = "0x2000D0A")]
		private class FlowCanvas_Nodes_ToList_ftg_DioramaOneData_DioramaOneKeys : ToList<DioramaOneData.DioramaOneKeys>
		{
			[Token(Token = "0x6002CC9")]
			[Address(RVA = "0xB24410", Offset = "0xB24410", VA = "0xB24410")]
			public FlowCanvas_Nodes_ToList_ftg_DioramaOneData_DioramaOneKeys()
			{
			}
		}

		[Token(Token = "0x2000D0B")]
		private class FlowCanvas_Nodes_ToList_ftg_DioramaThreeData_DioramaThreeKeys : ToList<DioramaThreeData.DioramaThreeKeys>
		{
			[Token(Token = "0x6002CCA")]
			[Address(RVA = "0xB24460", Offset = "0xB24460", VA = "0xB24460")]
			public FlowCanvas_Nodes_ToList_ftg_DioramaThreeData_DioramaThreeKeys()
			{
			}
		}

		[Token(Token = "0x2000D0C")]
		private class FlowCanvas_Nodes_ToList_ftg_DioramaTwoData_DioramaTwoKeys : ToList<DioramaTwoData.DioramaTwoKeys>
		{
			[Token(Token = "0x6002CCB")]
			[Address(RVA = "0xB244B0", Offset = "0xB244B0", VA = "0xB244B0")]
			public FlowCanvas_Nodes_ToList_ftg_DioramaTwoData_DioramaTwoKeys()
			{
			}
		}

		[Token(Token = "0x2000D0D")]
		private class FlowCanvas_Nodes_ToList_ftg_SaveManager_DioramaWorlds : ToList<SaveManager.DioramaWorlds>
		{
			[Token(Token = "0x6002CCC")]
			[Address(RVA = "0xB245A0", Offset = "0xB245A0", VA = "0xB245A0")]
			public FlowCanvas_Nodes_ToList_ftg_SaveManager_DioramaWorlds()
			{
			}
		}

		[Token(Token = "0x2000D0E")]
		private class FlowCanvas_Nodes_ToList_ftg_HubRoomData_HubRoomKeys : ToList<HubRoomData.HubRoomKeys>
		{
			[Token(Token = "0x6002CCD")]
			[Address(RVA = "0xB24500", Offset = "0xB24500", VA = "0xB24500")]
			public FlowCanvas_Nodes_ToList_ftg_HubRoomData_HubRoomKeys()
			{
			}
		}

		[Token(Token = "0x2000D0F")]
		private class FlowCanvas_Nodes_ToList_ftg_PersonaSettings_PersonaKeys : ToList<PersonaSettings.PersonaKeys>
		{
			[Token(Token = "0x6002CCE")]
			[Address(RVA = "0xB24550", Offset = "0xB24550", VA = "0xB24550")]
			public FlowCanvas_Nodes_ToList_ftg_PersonaSettings_PersonaKeys()
			{
			}
		}

		[Token(Token = "0x2000D10")]
		private class FlowCanvas_Nodes_ToList_UnityEngine_LayerMask : ToList<LayerMask>
		{
			[Token(Token = "0x6002CCF")]
			[Address(RVA = "0xB24050", Offset = "0xB24050", VA = "0xB24050")]
			public FlowCanvas_Nodes_ToList_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000D11")]
		private class FlowCanvas_Nodes_TryGetValue_System_Boolean : TryGetValue<bool>
		{
			[Token(Token = "0x6002CD0")]
			[Address(RVA = "0xB245F0", Offset = "0xB245F0", VA = "0xB245F0")]
			public FlowCanvas_Nodes_TryGetValue_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000D12")]
		private class FlowCanvas_Nodes_TryGetValue_System_Single : TryGetValue<float>
		{
			[Token(Token = "0x6002CD1")]
			[Address(RVA = "0xB24690", Offset = "0xB24690", VA = "0xB24690")]
			public FlowCanvas_Nodes_TryGetValue_System_Single()
			{
			}
		}

		[Token(Token = "0x2000D13")]
		private class FlowCanvas_Nodes_TryGetValue_System_Int32 : TryGetValue<int>
		{
			[Token(Token = "0x6002CD2")]
			[Address(RVA = "0xB24640", Offset = "0xB24640", VA = "0xB24640")]
			public FlowCanvas_Nodes_TryGetValue_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000D14")]
		private class FlowCanvas_Nodes_TryGetValue_UnityEngine_Vector2 : TryGetValue<Vector2>
		{
			[Token(Token = "0x6002CD3")]
			[Address(RVA = "0xC22CEC", Offset = "0xC22CEC", VA = "0xC22CEC")]
			public FlowCanvas_Nodes_TryGetValue_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000D15")]
		private class FlowCanvas_Nodes_TryGetValue_UnityEngine_Vector3 : TryGetValue<Vector3>
		{
			[Token(Token = "0x6002CD4")]
			[Address(RVA = "0xC22D3C", Offset = "0xC22D3C", VA = "0xC22D3C")]
			public FlowCanvas_Nodes_TryGetValue_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000D16")]
		private class FlowCanvas_Nodes_TryGetValue_UnityEngine_Vector4 : TryGetValue<Vector4>
		{
			[Token(Token = "0x6002CD5")]
			[Address(RVA = "0xC22D8C", Offset = "0xC22D8C", VA = "0xC22D8C")]
			public FlowCanvas_Nodes_TryGetValue_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x2000D17")]
		private class FlowCanvas_Nodes_TryGetValue_UnityEngine_Quaternion : TryGetValue<Quaternion>
		{
			[Token(Token = "0x6002CD6")]
			[Address(RVA = "0xC22B0C", Offset = "0xC22B0C", VA = "0xC22B0C")]
			public FlowCanvas_Nodes_TryGetValue_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000D18")]
		private class FlowCanvas_Nodes_TryGetValue_UnityEngine_Keyframe : TryGetValue<Keyframe>
		{
			[Token(Token = "0x6002CD7")]
			[Address(RVA = "0xB248C0", Offset = "0xB248C0", VA = "0xB248C0")]
			public FlowCanvas_Nodes_TryGetValue_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000D19")]
		private class FlowCanvas_Nodes_TryGetValue_UnityEngine_Bounds : TryGetValue<Bounds>
		{
			[Token(Token = "0x6002CD8")]
			[Address(RVA = "0xB246E0", Offset = "0xB246E0", VA = "0xB246E0")]
			public FlowCanvas_Nodes_TryGetValue_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000D1A")]
		private class FlowCanvas_Nodes_TryGetValue_UnityEngine_Color : TryGetValue<Color>
		{
			[Token(Token = "0x6002CD9")]
			[Address(RVA = "0xB247D0", Offset = "0xB247D0", VA = "0xB247D0")]
			public FlowCanvas_Nodes_TryGetValue_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000D1B")]
		private class FlowCanvas_Nodes_TryGetValue_UnityEngine_Rect : TryGetValue<Rect>
		{
			[Token(Token = "0x6002CDA")]
			[Address(RVA = "0xC22C4C", Offset = "0xC22C4C", VA = "0xC22C4C")]
			public FlowCanvas_Nodes_TryGetValue_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000D1C")]
		private class FlowCanvas_Nodes_TryGetValue_UnityEngine_ContactPoint : TryGetValue<ContactPoint>
		{
			[Token(Token = "0x6002CDB")]
			[Address(RVA = "0xB24820", Offset = "0xB24820", VA = "0xB24820")]
			public FlowCanvas_Nodes_TryGetValue_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000D1D")]
		private class FlowCanvas_Nodes_TryGetValue_UnityEngine_ContactPoint2D : TryGetValue<ContactPoint2D>
		{
			[Token(Token = "0x6002CDC")]
			[Address(RVA = "0xB24870", Offset = "0xB24870", VA = "0xB24870")]
			public FlowCanvas_Nodes_TryGetValue_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000D1E")]
		private class FlowCanvas_Nodes_TryGetValue_UnityEngine_Collision : TryGetValue<Collision>
		{
			[Token(Token = "0x6002CDD")]
			[Address(RVA = "0xB24730", Offset = "0xB24730", VA = "0xB24730")]
			public FlowCanvas_Nodes_TryGetValue_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x2000D1F")]
		private class FlowCanvas_Nodes_TryGetValue_UnityEngine_Collision2D : TryGetValue<Collision2D>
		{
			[Token(Token = "0x6002CDE")]
			[Address(RVA = "0xB24780", Offset = "0xB24780", VA = "0xB24780")]
			public FlowCanvas_Nodes_TryGetValue_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000D20")]
		private class FlowCanvas_Nodes_TryGetValue_UnityEngine_RaycastHit : TryGetValue<RaycastHit>
		{
			[Token(Token = "0x6002CDF")]
			[Address(RVA = "0xC22BAC", Offset = "0xC22BAC", VA = "0xC22BAC")]
			public FlowCanvas_Nodes_TryGetValue_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000D21")]
		private class FlowCanvas_Nodes_TryGetValue_UnityEngine_RaycastHit2D : TryGetValue<RaycastHit2D>
		{
			[Token(Token = "0x6002CE0")]
			[Address(RVA = "0xC22BFC", Offset = "0xC22BFC", VA = "0xC22BFC")]
			public FlowCanvas_Nodes_TryGetValue_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000D22")]
		private class FlowCanvas_Nodes_TryGetValue_UnityEngine_Ray : TryGetValue<Ray>
		{
			[Token(Token = "0x6002CE1")]
			[Address(RVA = "0xC22B5C", Offset = "0xC22B5C", VA = "0xC22B5C")]
			public FlowCanvas_Nodes_TryGetValue_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x2000D23")]
		private class FlowCanvas_Nodes_TryGetValue_UnityEngine_Space : TryGetValue<Space>
		{
			[Token(Token = "0x6002CE2")]
			[Address(RVA = "0xC22C9C", Offset = "0xC22C9C", VA = "0xC22C9C")]
			public FlowCanvas_Nodes_TryGetValue_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000D24")]
		private class FlowCanvas_Nodes_TryGetValue_ftg_DioramaFiveData_DioramaFiveKeys : TryGetValue<DioramaFiveData.DioramaFiveKeys>
		{
			[Token(Token = "0x6002CE3")]
			[Address(RVA = "0xC22DDC", Offset = "0xC22DDC", VA = "0xC22DDC")]
			public FlowCanvas_Nodes_TryGetValue_ftg_DioramaFiveData_DioramaFiveKeys()
			{
			}
		}

		[Token(Token = "0x2000D25")]
		private class FlowCanvas_Nodes_TryGetValue_ftg_DioramaFourData_DioramaFourKeys : TryGetValue<DioramaFourData.DioramaFourKeys>
		{
			[Token(Token = "0x6002CE4")]
			[Address(RVA = "0xC22E2C", Offset = "0xC22E2C", VA = "0xC22E2C")]
			public FlowCanvas_Nodes_TryGetValue_ftg_DioramaFourData_DioramaFourKeys()
			{
			}
		}

		[Token(Token = "0x2000D26")]
		private class FlowCanvas_Nodes_TryGetValue_ftg_DioramaOneData_DioramaOneKeys : TryGetValue<DioramaOneData.DioramaOneKeys>
		{
			[Token(Token = "0x6002CE5")]
			[Address(RVA = "0xC22E7C", Offset = "0xC22E7C", VA = "0xC22E7C")]
			public FlowCanvas_Nodes_TryGetValue_ftg_DioramaOneData_DioramaOneKeys()
			{
			}
		}

		[Token(Token = "0x2000D27")]
		private class FlowCanvas_Nodes_TryGetValue_ftg_DioramaThreeData_DioramaThreeKeys : TryGetValue<DioramaThreeData.DioramaThreeKeys>
		{
			[Token(Token = "0x6002CE6")]
			[Address(RVA = "0xC22ECC", Offset = "0xC22ECC", VA = "0xC22ECC")]
			public FlowCanvas_Nodes_TryGetValue_ftg_DioramaThreeData_DioramaThreeKeys()
			{
			}
		}

		[Token(Token = "0x2000D28")]
		private class FlowCanvas_Nodes_TryGetValue_ftg_DioramaTwoData_DioramaTwoKeys : TryGetValue<DioramaTwoData.DioramaTwoKeys>
		{
			[Token(Token = "0x6002CE7")]
			[Address(RVA = "0xC22F1C", Offset = "0xC22F1C", VA = "0xC22F1C")]
			public FlowCanvas_Nodes_TryGetValue_ftg_DioramaTwoData_DioramaTwoKeys()
			{
			}
		}

		[Token(Token = "0x2000D29")]
		private class FlowCanvas_Nodes_TryGetValue_ftg_SaveManager_DioramaWorlds : TryGetValue<SaveManager.DioramaWorlds>
		{
			[Token(Token = "0x6002CE8")]
			[Address(RVA = "0xC2300C", Offset = "0xC2300C", VA = "0xC2300C")]
			public FlowCanvas_Nodes_TryGetValue_ftg_SaveManager_DioramaWorlds()
			{
			}
		}

		[Token(Token = "0x2000D2A")]
		private class FlowCanvas_Nodes_TryGetValue_ftg_HubRoomData_HubRoomKeys : TryGetValue<HubRoomData.HubRoomKeys>
		{
			[Token(Token = "0x6002CE9")]
			[Address(RVA = "0xC22F6C", Offset = "0xC22F6C", VA = "0xC22F6C")]
			public FlowCanvas_Nodes_TryGetValue_ftg_HubRoomData_HubRoomKeys()
			{
			}
		}

		[Token(Token = "0x2000D2B")]
		private class FlowCanvas_Nodes_TryGetValue_ftg_PersonaSettings_PersonaKeys : TryGetValue<PersonaSettings.PersonaKeys>
		{
			[Token(Token = "0x6002CEA")]
			[Address(RVA = "0xC22FBC", Offset = "0xC22FBC", VA = "0xC22FBC")]
			public FlowCanvas_Nodes_TryGetValue_ftg_PersonaSettings_PersonaKeys()
			{
			}
		}

		[Token(Token = "0x2000D2C")]
		private class FlowCanvas_Nodes_TryGetValue_UnityEngine_LayerMask : TryGetValue<LayerMask>
		{
			[Token(Token = "0x6002CEB")]
			[Address(RVA = "0xC22ABC", Offset = "0xC22ABC", VA = "0xC22ABC")]
			public FlowCanvas_Nodes_TryGetValue_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000D2D")]
		private class FlowCanvas_Nodes_WriteFlowParameter_System_Boolean : WriteFlowParameter<bool>
		{
			[Token(Token = "0x6002CEC")]
			[Address(RVA = "0xC2305C", Offset = "0xC2305C", VA = "0xC2305C")]
			public FlowCanvas_Nodes_WriteFlowParameter_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000D2E")]
		private class FlowCanvas_Nodes_WriteFlowParameter_System_Single : WriteFlowParameter<float>
		{
			[Token(Token = "0x6002CED")]
			[Address(RVA = "0xC230FC", Offset = "0xC230FC", VA = "0xC230FC")]
			public FlowCanvas_Nodes_WriteFlowParameter_System_Single()
			{
			}
		}

		[Token(Token = "0x2000D2F")]
		private class FlowCanvas_Nodes_WriteFlowParameter_System_Int32 : WriteFlowParameter<int>
		{
			[Token(Token = "0x6002CEE")]
			[Address(RVA = "0xC230AC", Offset = "0xC230AC", VA = "0xC230AC")]
			public FlowCanvas_Nodes_WriteFlowParameter_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000D30")]
		private class FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_Vector2 : WriteFlowParameter<Vector2>
		{
			[Token(Token = "0x6002CEF")]
			[Address(RVA = "0xC235AC", Offset = "0xC235AC", VA = "0xC235AC")]
			public FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000D31")]
		private class FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_Vector3 : WriteFlowParameter<Vector3>
		{
			[Token(Token = "0x6002CF0")]
			[Address(RVA = "0xC235FC", Offset = "0xC235FC", VA = "0xC235FC")]
			public FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000D32")]
		private class FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_Vector4 : WriteFlowParameter<Vector4>
		{
			[Token(Token = "0x6002CF1")]
			[Address(RVA = "0xC2364C", Offset = "0xC2364C", VA = "0xC2364C")]
			public FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x2000D33")]
		private class FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_Quaternion : WriteFlowParameter<Quaternion>
		{
			[Token(Token = "0x6002CF2")]
			[Address(RVA = "0xC233CC", Offset = "0xC233CC", VA = "0xC233CC")]
			public FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000D34")]
		private class FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_Keyframe : WriteFlowParameter<Keyframe>
		{
			[Token(Token = "0x6002CF3")]
			[Address(RVA = "0xC2332C", Offset = "0xC2332C", VA = "0xC2332C")]
			public FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000D35")]
		private class FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_Bounds : WriteFlowParameter<Bounds>
		{
			[Token(Token = "0x6002CF4")]
			[Address(RVA = "0xC2314C", Offset = "0xC2314C", VA = "0xC2314C")]
			public FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000D36")]
		private class FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_Color : WriteFlowParameter<Color>
		{
			[Token(Token = "0x6002CF5")]
			[Address(RVA = "0xC2323C", Offset = "0xC2323C", VA = "0xC2323C")]
			public FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000D37")]
		private class FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_Rect : WriteFlowParameter<Rect>
		{
			[Token(Token = "0x6002CF6")]
			[Address(RVA = "0xC2350C", Offset = "0xC2350C", VA = "0xC2350C")]
			public FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000D38")]
		private class FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_ContactPoint : WriteFlowParameter<ContactPoint>
		{
			[Token(Token = "0x6002CF7")]
			[Address(RVA = "0xC2328C", Offset = "0xC2328C", VA = "0xC2328C")]
			public FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000D39")]
		private class FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_ContactPoint2D : WriteFlowParameter<ContactPoint2D>
		{
			[Token(Token = "0x6002CF8")]
			[Address(RVA = "0xC232DC", Offset = "0xC232DC", VA = "0xC232DC")]
			public FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000D3A")]
		private class FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_Collision : WriteFlowParameter<Collision>
		{
			[Token(Token = "0x6002CF9")]
			[Address(RVA = "0xC2319C", Offset = "0xC2319C", VA = "0xC2319C")]
			public FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x2000D3B")]
		private class FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_Collision2D : WriteFlowParameter<Collision2D>
		{
			[Token(Token = "0x6002CFA")]
			[Address(RVA = "0xC231EC", Offset = "0xC231EC", VA = "0xC231EC")]
			public FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000D3C")]
		private class FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_RaycastHit : WriteFlowParameter<RaycastHit>
		{
			[Token(Token = "0x6002CFB")]
			[Address(RVA = "0xC2346C", Offset = "0xC2346C", VA = "0xC2346C")]
			public FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000D3D")]
		private class FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_RaycastHit2D : WriteFlowParameter<RaycastHit2D>
		{
			[Token(Token = "0x6002CFC")]
			[Address(RVA = "0xC234BC", Offset = "0xC234BC", VA = "0xC234BC")]
			public FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000D3E")]
		private class FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_Ray : WriteFlowParameter<Ray>
		{
			[Token(Token = "0x6002CFD")]
			[Address(RVA = "0xC2341C", Offset = "0xC2341C", VA = "0xC2341C")]
			public FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x2000D3F")]
		private class FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_Space : WriteFlowParameter<Space>
		{
			[Token(Token = "0x6002CFE")]
			[Address(RVA = "0xC2355C", Offset = "0xC2355C", VA = "0xC2355C")]
			public FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000D40")]
		private class FlowCanvas_Nodes_WriteFlowParameter_ftg_DioramaFiveData_DioramaFiveKeys : WriteFlowParameter<DioramaFiveData.DioramaFiveKeys>
		{
			[Token(Token = "0x6002CFF")]
			[Address(RVA = "0xC2369C", Offset = "0xC2369C", VA = "0xC2369C")]
			public FlowCanvas_Nodes_WriteFlowParameter_ftg_DioramaFiveData_DioramaFiveKeys()
			{
			}
		}

		[Token(Token = "0x2000D41")]
		private class FlowCanvas_Nodes_WriteFlowParameter_ftg_DioramaFourData_DioramaFourKeys : WriteFlowParameter<DioramaFourData.DioramaFourKeys>
		{
			[Token(Token = "0x6002D00")]
			[Address(RVA = "0xC236EC", Offset = "0xC236EC", VA = "0xC236EC")]
			public FlowCanvas_Nodes_WriteFlowParameter_ftg_DioramaFourData_DioramaFourKeys()
			{
			}
		}

		[Token(Token = "0x2000D42")]
		private class FlowCanvas_Nodes_WriteFlowParameter_ftg_DioramaOneData_DioramaOneKeys : WriteFlowParameter<DioramaOneData.DioramaOneKeys>
		{
			[Token(Token = "0x6002D01")]
			[Address(RVA = "0xC2373C", Offset = "0xC2373C", VA = "0xC2373C")]
			public FlowCanvas_Nodes_WriteFlowParameter_ftg_DioramaOneData_DioramaOneKeys()
			{
			}
		}

		[Token(Token = "0x2000D43")]
		private class FlowCanvas_Nodes_WriteFlowParameter_ftg_DioramaThreeData_DioramaThreeKeys : WriteFlowParameter<DioramaThreeData.DioramaThreeKeys>
		{
			[Token(Token = "0x6002D02")]
			[Address(RVA = "0xC2378C", Offset = "0xC2378C", VA = "0xC2378C")]
			public FlowCanvas_Nodes_WriteFlowParameter_ftg_DioramaThreeData_DioramaThreeKeys()
			{
			}
		}

		[Token(Token = "0x2000D44")]
		private class FlowCanvas_Nodes_WriteFlowParameter_ftg_DioramaTwoData_DioramaTwoKeys : WriteFlowParameter<DioramaTwoData.DioramaTwoKeys>
		{
			[Token(Token = "0x6002D03")]
			[Address(RVA = "0xC237DC", Offset = "0xC237DC", VA = "0xC237DC")]
			public FlowCanvas_Nodes_WriteFlowParameter_ftg_DioramaTwoData_DioramaTwoKeys()
			{
			}
		}

		[Token(Token = "0x2000D45")]
		private class FlowCanvas_Nodes_WriteFlowParameter_ftg_SaveManager_DioramaWorlds : WriteFlowParameter<SaveManager.DioramaWorlds>
		{
			[Token(Token = "0x6002D04")]
			[Address(RVA = "0xC238CC", Offset = "0xC238CC", VA = "0xC238CC")]
			public FlowCanvas_Nodes_WriteFlowParameter_ftg_SaveManager_DioramaWorlds()
			{
			}
		}

		[Token(Token = "0x2000D46")]
		private class FlowCanvas_Nodes_WriteFlowParameter_ftg_HubRoomData_HubRoomKeys : WriteFlowParameter<HubRoomData.HubRoomKeys>
		{
			[Token(Token = "0x6002D05")]
			[Address(RVA = "0xC2382C", Offset = "0xC2382C", VA = "0xC2382C")]
			public FlowCanvas_Nodes_WriteFlowParameter_ftg_HubRoomData_HubRoomKeys()
			{
			}
		}

		[Token(Token = "0x2000D47")]
		private class FlowCanvas_Nodes_WriteFlowParameter_ftg_PersonaSettings_PersonaKeys : WriteFlowParameter<PersonaSettings.PersonaKeys>
		{
			[Token(Token = "0x6002D06")]
			[Address(RVA = "0xC2387C", Offset = "0xC2387C", VA = "0xC2387C")]
			public FlowCanvas_Nodes_WriteFlowParameter_ftg_PersonaSettings_PersonaKeys()
			{
			}
		}

		[Token(Token = "0x2000D48")]
		private class FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_LayerMask : WriteFlowParameter<LayerMask>
		{
			[Token(Token = "0x6002D07")]
			[Address(RVA = "0xC2337C", Offset = "0xC2337C", VA = "0xC2337C")]
			public FlowCanvas_Nodes_WriteFlowParameter_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000D49")]
		private class NodeCanvas_Framework_BBParameter_System_Boolean : BBParameter<bool>
		{
			[Token(Token = "0x6002D08")]
			[Address(RVA = "0xC24A9C", Offset = "0xC24A9C", VA = "0xC24A9C")]
			public NodeCanvas_Framework_BBParameter_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000D4A")]
		private class NodeCanvas_Framework_BBParameter_System_Single : BBParameter<float>
		{
			[Token(Token = "0x6002D09")]
			[Address(RVA = "0xC24B3C", Offset = "0xC24B3C", VA = "0xC24B3C")]
			public NodeCanvas_Framework_BBParameter_System_Single()
			{
			}
		}

		[Token(Token = "0x2000D4B")]
		private class NodeCanvas_Framework_BBParameter_System_Int32 : BBParameter<int>
		{
			[Token(Token = "0x6002D0A")]
			[Address(RVA = "0xC24AEC", Offset = "0xC24AEC", VA = "0xC24AEC")]
			public NodeCanvas_Framework_BBParameter_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000D4C")]
		private class NodeCanvas_Framework_BBParameter_UnityEngine_Vector2 : BBParameter<Vector2>
		{
			[Token(Token = "0x6002D0B")]
			[Address(RVA = "0xC24FEC", Offset = "0xC24FEC", VA = "0xC24FEC")]
			public NodeCanvas_Framework_BBParameter_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000D4D")]
		private class NodeCanvas_Framework_BBParameter_UnityEngine_Vector3 : BBParameter<Vector3>
		{
			[Token(Token = "0x6002D0C")]
			[Address(RVA = "0xC2503C", Offset = "0xC2503C", VA = "0xC2503C")]
			public NodeCanvas_Framework_BBParameter_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000D4E")]
		private class NodeCanvas_Framework_BBParameter_UnityEngine_Vector4 : BBParameter<Vector4>
		{
			[Token(Token = "0x6002D0D")]
			[Address(RVA = "0xC2508C", Offset = "0xC2508C", VA = "0xC2508C")]
			public NodeCanvas_Framework_BBParameter_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x2000D4F")]
		private class NodeCanvas_Framework_BBParameter_UnityEngine_Quaternion : BBParameter<Quaternion>
		{
			[Token(Token = "0x6002D0E")]
			[Address(RVA = "0xC24E0C", Offset = "0xC24E0C", VA = "0xC24E0C")]
			public NodeCanvas_Framework_BBParameter_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000D50")]
		private class NodeCanvas_Framework_BBParameter_UnityEngine_Keyframe : BBParameter<Keyframe>
		{
			[Token(Token = "0x6002D0F")]
			[Address(RVA = "0xC24D6C", Offset = "0xC24D6C", VA = "0xC24D6C")]
			public NodeCanvas_Framework_BBParameter_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000D51")]
		private class NodeCanvas_Framework_BBParameter_UnityEngine_Bounds : BBParameter<Bounds>
		{
			[Token(Token = "0x6002D10")]
			[Address(RVA = "0xC24B8C", Offset = "0xC24B8C", VA = "0xC24B8C")]
			public NodeCanvas_Framework_BBParameter_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000D52")]
		private class NodeCanvas_Framework_BBParameter_UnityEngine_Color : BBParameter<Color>
		{
			[Token(Token = "0x6002D11")]
			[Address(RVA = "0xC24C7C", Offset = "0xC24C7C", VA = "0xC24C7C")]
			public NodeCanvas_Framework_BBParameter_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000D53")]
		private class NodeCanvas_Framework_BBParameter_UnityEngine_Rect : BBParameter<Rect>
		{
			[Token(Token = "0x6002D12")]
			[Address(RVA = "0xC24F4C", Offset = "0xC24F4C", VA = "0xC24F4C")]
			public NodeCanvas_Framework_BBParameter_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000D54")]
		private class NodeCanvas_Framework_BBParameter_UnityEngine_ContactPoint : BBParameter<ContactPoint>
		{
			[Token(Token = "0x6002D13")]
			[Address(RVA = "0xC24CCC", Offset = "0xC24CCC", VA = "0xC24CCC")]
			public NodeCanvas_Framework_BBParameter_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000D55")]
		private class NodeCanvas_Framework_BBParameter_UnityEngine_ContactPoint2D : BBParameter<ContactPoint2D>
		{
			[Token(Token = "0x6002D14")]
			[Address(RVA = "0xC24D1C", Offset = "0xC24D1C", VA = "0xC24D1C")]
			public NodeCanvas_Framework_BBParameter_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000D56")]
		private class NodeCanvas_Framework_BBParameter_UnityEngine_Collision : BBParameter<Collision>
		{
			[Token(Token = "0x6002D15")]
			[Address(RVA = "0xC24BDC", Offset = "0xC24BDC", VA = "0xC24BDC")]
			public NodeCanvas_Framework_BBParameter_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x2000D57")]
		private class NodeCanvas_Framework_BBParameter_UnityEngine_Collision2D : BBParameter<Collision2D>
		{
			[Token(Token = "0x6002D16")]
			[Address(RVA = "0xC24C2C", Offset = "0xC24C2C", VA = "0xC24C2C")]
			public NodeCanvas_Framework_BBParameter_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000D58")]
		private class NodeCanvas_Framework_BBParameter_UnityEngine_RaycastHit : BBParameter<RaycastHit>
		{
			[Token(Token = "0x6002D17")]
			[Address(RVA = "0xC24EAC", Offset = "0xC24EAC", VA = "0xC24EAC")]
			public NodeCanvas_Framework_BBParameter_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000D59")]
		private class NodeCanvas_Framework_BBParameter_UnityEngine_RaycastHit2D : BBParameter<RaycastHit2D>
		{
			[Token(Token = "0x6002D18")]
			[Address(RVA = "0xC24EFC", Offset = "0xC24EFC", VA = "0xC24EFC")]
			public NodeCanvas_Framework_BBParameter_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000D5A")]
		private class NodeCanvas_Framework_BBParameter_UnityEngine_Ray : BBParameter<Ray>
		{
			[Token(Token = "0x6002D19")]
			[Address(RVA = "0xC24E5C", Offset = "0xC24E5C", VA = "0xC24E5C")]
			public NodeCanvas_Framework_BBParameter_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x2000D5B")]
		private class NodeCanvas_Framework_BBParameter_UnityEngine_Space : BBParameter<Space>
		{
			[Token(Token = "0x6002D1A")]
			[Address(RVA = "0xC24F9C", Offset = "0xC24F9C", VA = "0xC24F9C")]
			public NodeCanvas_Framework_BBParameter_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000D5C")]
		private class NodeCanvas_Framework_BBParameter_ftg_DioramaFiveData_DioramaFiveKeys : BBParameter<DioramaFiveData.DioramaFiveKeys>
		{
			[Token(Token = "0x6002D1B")]
			[Address(RVA = "0xC250DC", Offset = "0xC250DC", VA = "0xC250DC")]
			public NodeCanvas_Framework_BBParameter_ftg_DioramaFiveData_DioramaFiveKeys()
			{
			}
		}

		[Token(Token = "0x2000D5D")]
		private class NodeCanvas_Framework_BBParameter_ftg_DioramaFourData_DioramaFourKeys : BBParameter<DioramaFourData.DioramaFourKeys>
		{
			[Token(Token = "0x6002D1C")]
			[Address(RVA = "0xC2512C", Offset = "0xC2512C", VA = "0xC2512C")]
			public NodeCanvas_Framework_BBParameter_ftg_DioramaFourData_DioramaFourKeys()
			{
			}
		}

		[Token(Token = "0x2000D5E")]
		private class NodeCanvas_Framework_BBParameter_ftg_DioramaOneData_DioramaOneKeys : BBParameter<DioramaOneData.DioramaOneKeys>
		{
			[Token(Token = "0x6002D1D")]
			[Address(RVA = "0xC2517C", Offset = "0xC2517C", VA = "0xC2517C")]
			public NodeCanvas_Framework_BBParameter_ftg_DioramaOneData_DioramaOneKeys()
			{
			}
		}

		[Token(Token = "0x2000D5F")]
		private class NodeCanvas_Framework_BBParameter_ftg_DioramaThreeData_DioramaThreeKeys : BBParameter<DioramaThreeData.DioramaThreeKeys>
		{
			[Token(Token = "0x6002D1E")]
			[Address(RVA = "0xC251CC", Offset = "0xC251CC", VA = "0xC251CC")]
			public NodeCanvas_Framework_BBParameter_ftg_DioramaThreeData_DioramaThreeKeys()
			{
			}
		}

		[Token(Token = "0x2000D60")]
		private class NodeCanvas_Framework_BBParameter_ftg_DioramaTwoData_DioramaTwoKeys : BBParameter<DioramaTwoData.DioramaTwoKeys>
		{
			[Token(Token = "0x6002D1F")]
			[Address(RVA = "0xC2521C", Offset = "0xC2521C", VA = "0xC2521C")]
			public NodeCanvas_Framework_BBParameter_ftg_DioramaTwoData_DioramaTwoKeys()
			{
			}
		}

		[Token(Token = "0x2000D61")]
		private class NodeCanvas_Framework_BBParameter_ftg_SaveManager_DioramaWorlds : BBParameter<SaveManager.DioramaWorlds>
		{
			[Token(Token = "0x6002D20")]
			[Address(RVA = "0xC2530C", Offset = "0xC2530C", VA = "0xC2530C")]
			public NodeCanvas_Framework_BBParameter_ftg_SaveManager_DioramaWorlds()
			{
			}
		}

		[Token(Token = "0x2000D62")]
		private class NodeCanvas_Framework_BBParameter_ftg_HubRoomData_HubRoomKeys : BBParameter<HubRoomData.HubRoomKeys>
		{
			[Token(Token = "0x6002D21")]
			[Address(RVA = "0xC2526C", Offset = "0xC2526C", VA = "0xC2526C")]
			public NodeCanvas_Framework_BBParameter_ftg_HubRoomData_HubRoomKeys()
			{
			}
		}

		[Token(Token = "0x2000D63")]
		private class NodeCanvas_Framework_BBParameter_ftg_PersonaSettings_PersonaKeys : BBParameter<PersonaSettings.PersonaKeys>
		{
			[Token(Token = "0x6002D22")]
			[Address(RVA = "0xC252BC", Offset = "0xC252BC", VA = "0xC252BC")]
			public NodeCanvas_Framework_BBParameter_ftg_PersonaSettings_PersonaKeys()
			{
			}
		}

		[Token(Token = "0x2000D64")]
		private class NodeCanvas_Framework_BBParameter_UnityEngine_LayerMask : BBParameter<LayerMask>
		{
			[Token(Token = "0x6002D23")]
			[Address(RVA = "0xC24DBC", Offset = "0xC24DBC", VA = "0xC24DBC")]
			public NodeCanvas_Framework_BBParameter_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000D65")]
		private class NodeCanvas_Framework_Variable_System_Boolean : Variable<bool>
		{
			[Token(Token = "0x6002D24")]
			[Address(RVA = "0xC264DC", Offset = "0xC264DC", VA = "0xC264DC")]
			public NodeCanvas_Framework_Variable_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000D66")]
		private class NodeCanvas_Framework_Variable_System_Single : Variable<float>
		{
			[Token(Token = "0x6002D25")]
			[Address(RVA = "0xC2657C", Offset = "0xC2657C", VA = "0xC2657C")]
			public NodeCanvas_Framework_Variable_System_Single()
			{
			}
		}

		[Token(Token = "0x2000D67")]
		private class NodeCanvas_Framework_Variable_System_Int32 : Variable<int>
		{
			[Token(Token = "0x6002D26")]
			[Address(RVA = "0xC2652C", Offset = "0xC2652C", VA = "0xC2652C")]
			public NodeCanvas_Framework_Variable_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000D68")]
		private class NodeCanvas_Framework_Variable_UnityEngine_Vector2 : Variable<Vector2>
		{
			[Token(Token = "0x6002D27")]
			[Address(RVA = "0xC26A2C", Offset = "0xC26A2C", VA = "0xC26A2C")]
			public NodeCanvas_Framework_Variable_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000D69")]
		private class NodeCanvas_Framework_Variable_UnityEngine_Vector3 : Variable<Vector3>
		{
			[Token(Token = "0x6002D28")]
			[Address(RVA = "0xC26A7C", Offset = "0xC26A7C", VA = "0xC26A7C")]
			public NodeCanvas_Framework_Variable_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000D6A")]
		private class NodeCanvas_Framework_Variable_UnityEngine_Vector4 : Variable<Vector4>
		{
			[Token(Token = "0x6002D29")]
			[Address(RVA = "0xC26ACC", Offset = "0xC26ACC", VA = "0xC26ACC")]
			public NodeCanvas_Framework_Variable_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x2000D6B")]
		private class NodeCanvas_Framework_Variable_UnityEngine_Quaternion : Variable<Quaternion>
		{
			[Token(Token = "0x6002D2A")]
			[Address(RVA = "0xC2684C", Offset = "0xC2684C", VA = "0xC2684C")]
			public NodeCanvas_Framework_Variable_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000D6C")]
		private class NodeCanvas_Framework_Variable_UnityEngine_Keyframe : Variable<Keyframe>
		{
			[Token(Token = "0x6002D2B")]
			[Address(RVA = "0xC267AC", Offset = "0xC267AC", VA = "0xC267AC")]
			public NodeCanvas_Framework_Variable_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000D6D")]
		private class NodeCanvas_Framework_Variable_UnityEngine_Bounds : Variable<Bounds>
		{
			[Token(Token = "0x6002D2C")]
			[Address(RVA = "0xC265CC", Offset = "0xC265CC", VA = "0xC265CC")]
			public NodeCanvas_Framework_Variable_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000D6E")]
		private class NodeCanvas_Framework_Variable_UnityEngine_Color : Variable<Color>
		{
			[Token(Token = "0x6002D2D")]
			[Address(RVA = "0xC266BC", Offset = "0xC266BC", VA = "0xC266BC")]
			public NodeCanvas_Framework_Variable_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000D6F")]
		private class NodeCanvas_Framework_Variable_UnityEngine_Rect : Variable<Rect>
		{
			[Token(Token = "0x6002D2E")]
			[Address(RVA = "0xC2698C", Offset = "0xC2698C", VA = "0xC2698C")]
			public NodeCanvas_Framework_Variable_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000D70")]
		private class NodeCanvas_Framework_Variable_UnityEngine_ContactPoint : Variable<ContactPoint>
		{
			[Token(Token = "0x6002D2F")]
			[Address(RVA = "0xC2670C", Offset = "0xC2670C", VA = "0xC2670C")]
			public NodeCanvas_Framework_Variable_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000D71")]
		private class NodeCanvas_Framework_Variable_UnityEngine_ContactPoint2D : Variable<ContactPoint2D>
		{
			[Token(Token = "0x6002D30")]
			[Address(RVA = "0xC2675C", Offset = "0xC2675C", VA = "0xC2675C")]
			public NodeCanvas_Framework_Variable_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000D72")]
		private class NodeCanvas_Framework_Variable_UnityEngine_Collision : Variable<Collision>
		{
			[Token(Token = "0x6002D31")]
			[Address(RVA = "0xC2661C", Offset = "0xC2661C", VA = "0xC2661C")]
			public NodeCanvas_Framework_Variable_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x2000D73")]
		private class NodeCanvas_Framework_Variable_UnityEngine_Collision2D : Variable<Collision2D>
		{
			[Token(Token = "0x6002D32")]
			[Address(RVA = "0xC2666C", Offset = "0xC2666C", VA = "0xC2666C")]
			public NodeCanvas_Framework_Variable_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000D74")]
		private class NodeCanvas_Framework_Variable_UnityEngine_RaycastHit : Variable<RaycastHit>
		{
			[Token(Token = "0x6002D33")]
			[Address(RVA = "0xC268EC", Offset = "0xC268EC", VA = "0xC268EC")]
			public NodeCanvas_Framework_Variable_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000D75")]
		private class NodeCanvas_Framework_Variable_UnityEngine_RaycastHit2D : Variable<RaycastHit2D>
		{
			[Token(Token = "0x6002D34")]
			[Address(RVA = "0xC2693C", Offset = "0xC2693C", VA = "0xC2693C")]
			public NodeCanvas_Framework_Variable_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000D76")]
		private class NodeCanvas_Framework_Variable_UnityEngine_Ray : Variable<Ray>
		{
			[Token(Token = "0x6002D35")]
			[Address(RVA = "0xC2689C", Offset = "0xC2689C", VA = "0xC2689C")]
			public NodeCanvas_Framework_Variable_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x2000D77")]
		private class NodeCanvas_Framework_Variable_UnityEngine_Space : Variable<Space>
		{
			[Token(Token = "0x6002D36")]
			[Address(RVA = "0xC269DC", Offset = "0xC269DC", VA = "0xC269DC")]
			public NodeCanvas_Framework_Variable_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000D78")]
		private class NodeCanvas_Framework_Variable_ftg_DioramaFiveData_DioramaFiveKeys : Variable<DioramaFiveData.DioramaFiveKeys>
		{
			[Token(Token = "0x6002D37")]
			[Address(RVA = "0xC26B1C", Offset = "0xC26B1C", VA = "0xC26B1C")]
			public NodeCanvas_Framework_Variable_ftg_DioramaFiveData_DioramaFiveKeys()
			{
			}
		}

		[Token(Token = "0x2000D79")]
		private class NodeCanvas_Framework_Variable_ftg_DioramaFourData_DioramaFourKeys : Variable<DioramaFourData.DioramaFourKeys>
		{
			[Token(Token = "0x6002D38")]
			[Address(RVA = "0xC26B6C", Offset = "0xC26B6C", VA = "0xC26B6C")]
			public NodeCanvas_Framework_Variable_ftg_DioramaFourData_DioramaFourKeys()
			{
			}
		}

		[Token(Token = "0x2000D7A")]
		private class NodeCanvas_Framework_Variable_ftg_DioramaOneData_DioramaOneKeys : Variable<DioramaOneData.DioramaOneKeys>
		{
			[Token(Token = "0x6002D39")]
			[Address(RVA = "0xC26BBC", Offset = "0xC26BBC", VA = "0xC26BBC")]
			public NodeCanvas_Framework_Variable_ftg_DioramaOneData_DioramaOneKeys()
			{
			}
		}

		[Token(Token = "0x2000D7B")]
		private class NodeCanvas_Framework_Variable_ftg_DioramaThreeData_DioramaThreeKeys : Variable<DioramaThreeData.DioramaThreeKeys>
		{
			[Token(Token = "0x6002D3A")]
			[Address(RVA = "0xC26C0C", Offset = "0xC26C0C", VA = "0xC26C0C")]
			public NodeCanvas_Framework_Variable_ftg_DioramaThreeData_DioramaThreeKeys()
			{
			}
		}

		[Token(Token = "0x2000D7C")]
		private class NodeCanvas_Framework_Variable_ftg_DioramaTwoData_DioramaTwoKeys : Variable<DioramaTwoData.DioramaTwoKeys>
		{
			[Token(Token = "0x6002D3B")]
			[Address(RVA = "0xC26C5C", Offset = "0xC26C5C", VA = "0xC26C5C")]
			public NodeCanvas_Framework_Variable_ftg_DioramaTwoData_DioramaTwoKeys()
			{
			}
		}

		[Token(Token = "0x2000D7D")]
		private class NodeCanvas_Framework_Variable_ftg_SaveManager_DioramaWorlds : Variable<SaveManager.DioramaWorlds>
		{
			[Token(Token = "0x6002D3C")]
			[Address(RVA = "0xC26D4C", Offset = "0xC26D4C", VA = "0xC26D4C")]
			public NodeCanvas_Framework_Variable_ftg_SaveManager_DioramaWorlds()
			{
			}
		}

		[Token(Token = "0x2000D7E")]
		private class NodeCanvas_Framework_Variable_ftg_HubRoomData_HubRoomKeys : Variable<HubRoomData.HubRoomKeys>
		{
			[Token(Token = "0x6002D3D")]
			[Address(RVA = "0xC26CAC", Offset = "0xC26CAC", VA = "0xC26CAC")]
			public NodeCanvas_Framework_Variable_ftg_HubRoomData_HubRoomKeys()
			{
			}
		}

		[Token(Token = "0x2000D7F")]
		private class NodeCanvas_Framework_Variable_ftg_PersonaSettings_PersonaKeys : Variable<PersonaSettings.PersonaKeys>
		{
			[Token(Token = "0x6002D3E")]
			[Address(RVA = "0xC26CFC", Offset = "0xC26CFC", VA = "0xC26CFC")]
			public NodeCanvas_Framework_Variable_ftg_PersonaSettings_PersonaKeys()
			{
			}
		}

		[Token(Token = "0x2000D80")]
		private class NodeCanvas_Framework_Variable_UnityEngine_LayerMask : Variable<LayerMask>
		{
			[Token(Token = "0x6002D3F")]
			[Address(RVA = "0xC267FC", Offset = "0xC267FC", VA = "0xC267FC")]
			public NodeCanvas_Framework_Variable_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000D81")]
		private class NodeCanvas_Framework_Internal_ReflectedAction_System_Boolean : ReflectedAction<bool>
		{
			[Token(Token = "0x6002D40")]
			[Address(RVA = "0xC2535C", Offset = "0xC2535C", VA = "0xC2535C")]
			public NodeCanvas_Framework_Internal_ReflectedAction_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000D82")]
		private class NodeCanvas_Framework_Internal_ReflectedAction_System_Single : ReflectedAction<float>
		{
			[Token(Token = "0x6002D41")]
			[Address(RVA = "0xC253FC", Offset = "0xC253FC", VA = "0xC253FC")]
			public NodeCanvas_Framework_Internal_ReflectedAction_System_Single()
			{
			}
		}

		[Token(Token = "0x2000D83")]
		private class NodeCanvas_Framework_Internal_ReflectedAction_System_Int32 : ReflectedAction<int>
		{
			[Token(Token = "0x6002D42")]
			[Address(RVA = "0xC253AC", Offset = "0xC253AC", VA = "0xC253AC")]
			public NodeCanvas_Framework_Internal_ReflectedAction_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000D84")]
		private class NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_Vector2 : ReflectedAction<Vector2>
		{
			[Token(Token = "0x6002D43")]
			[Address(RVA = "0xC258AC", Offset = "0xC258AC", VA = "0xC258AC")]
			public NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000D85")]
		private class NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_Vector3 : ReflectedAction<Vector3>
		{
			[Token(Token = "0x6002D44")]
			[Address(RVA = "0xC258FC", Offset = "0xC258FC", VA = "0xC258FC")]
			public NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000D86")]
		private class NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_Vector4 : ReflectedAction<Vector4>
		{
			[Token(Token = "0x6002D45")]
			[Address(RVA = "0xC2594C", Offset = "0xC2594C", VA = "0xC2594C")]
			public NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x2000D87")]
		private class NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_Quaternion : ReflectedAction<Quaternion>
		{
			[Token(Token = "0x6002D46")]
			[Address(RVA = "0xC256CC", Offset = "0xC256CC", VA = "0xC256CC")]
			public NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000D88")]
		private class NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_Keyframe : ReflectedAction<Keyframe>
		{
			[Token(Token = "0x6002D47")]
			[Address(RVA = "0xC2562C", Offset = "0xC2562C", VA = "0xC2562C")]
			public NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000D89")]
		private class NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_Bounds : ReflectedAction<Bounds>
		{
			[Token(Token = "0x6002D48")]
			[Address(RVA = "0xC2544C", Offset = "0xC2544C", VA = "0xC2544C")]
			public NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000D8A")]
		private class NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_Color : ReflectedAction<Color>
		{
			[Token(Token = "0x6002D49")]
			[Address(RVA = "0xC2553C", Offset = "0xC2553C", VA = "0xC2553C")]
			public NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000D8B")]
		private class NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_Rect : ReflectedAction<Rect>
		{
			[Token(Token = "0x6002D4A")]
			[Address(RVA = "0xC2580C", Offset = "0xC2580C", VA = "0xC2580C")]
			public NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000D8C")]
		private class NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_ContactPoint : ReflectedAction<ContactPoint>
		{
			[Token(Token = "0x6002D4B")]
			[Address(RVA = "0xC2558C", Offset = "0xC2558C", VA = "0xC2558C")]
			public NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000D8D")]
		private class NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_ContactPoint2D : ReflectedAction<ContactPoint2D>
		{
			[Token(Token = "0x6002D4C")]
			[Address(RVA = "0xC255DC", Offset = "0xC255DC", VA = "0xC255DC")]
			public NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000D8E")]
		private class NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_Collision : ReflectedAction<Collision>
		{
			[Token(Token = "0x6002D4D")]
			[Address(RVA = "0xC2549C", Offset = "0xC2549C", VA = "0xC2549C")]
			public NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x2000D8F")]
		private class NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_Collision2D : ReflectedAction<Collision2D>
		{
			[Token(Token = "0x6002D4E")]
			[Address(RVA = "0xC254EC", Offset = "0xC254EC", VA = "0xC254EC")]
			public NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000D90")]
		private class NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_RaycastHit : ReflectedAction<RaycastHit>
		{
			[Token(Token = "0x6002D4F")]
			[Address(RVA = "0xC2576C", Offset = "0xC2576C", VA = "0xC2576C")]
			public NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000D91")]
		private class NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_RaycastHit2D : ReflectedAction<RaycastHit2D>
		{
			[Token(Token = "0x6002D50")]
			[Address(RVA = "0xC257BC", Offset = "0xC257BC", VA = "0xC257BC")]
			public NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000D92")]
		private class NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_Ray : ReflectedAction<Ray>
		{
			[Token(Token = "0x6002D51")]
			[Address(RVA = "0xC2571C", Offset = "0xC2571C", VA = "0xC2571C")]
			public NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x2000D93")]
		private class NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_Space : ReflectedAction<Space>
		{
			[Token(Token = "0x6002D52")]
			[Address(RVA = "0xC2585C", Offset = "0xC2585C", VA = "0xC2585C")]
			public NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000D94")]
		private class NodeCanvas_Framework_Internal_ReflectedAction_ftg_DioramaFiveData_DioramaFiveKeys : ReflectedAction<DioramaFiveData.DioramaFiveKeys>
		{
			[Token(Token = "0x6002D53")]
			[Address(RVA = "0xC2599C", Offset = "0xC2599C", VA = "0xC2599C")]
			public NodeCanvas_Framework_Internal_ReflectedAction_ftg_DioramaFiveData_DioramaFiveKeys()
			{
			}
		}

		[Token(Token = "0x2000D95")]
		private class NodeCanvas_Framework_Internal_ReflectedAction_ftg_DioramaFourData_DioramaFourKeys : ReflectedAction<DioramaFourData.DioramaFourKeys>
		{
			[Token(Token = "0x6002D54")]
			[Address(RVA = "0xC259EC", Offset = "0xC259EC", VA = "0xC259EC")]
			public NodeCanvas_Framework_Internal_ReflectedAction_ftg_DioramaFourData_DioramaFourKeys()
			{
			}
		}

		[Token(Token = "0x2000D96")]
		private class NodeCanvas_Framework_Internal_ReflectedAction_ftg_DioramaOneData_DioramaOneKeys : ReflectedAction<DioramaOneData.DioramaOneKeys>
		{
			[Token(Token = "0x6002D55")]
			[Address(RVA = "0xC25A3C", Offset = "0xC25A3C", VA = "0xC25A3C")]
			public NodeCanvas_Framework_Internal_ReflectedAction_ftg_DioramaOneData_DioramaOneKeys()
			{
			}
		}

		[Token(Token = "0x2000D97")]
		private class NodeCanvas_Framework_Internal_ReflectedAction_ftg_DioramaThreeData_DioramaThreeKeys : ReflectedAction<DioramaThreeData.DioramaThreeKeys>
		{
			[Token(Token = "0x6002D56")]
			[Address(RVA = "0xC25A8C", Offset = "0xC25A8C", VA = "0xC25A8C")]
			public NodeCanvas_Framework_Internal_ReflectedAction_ftg_DioramaThreeData_DioramaThreeKeys()
			{
			}
		}

		[Token(Token = "0x2000D98")]
		private class NodeCanvas_Framework_Internal_ReflectedAction_ftg_DioramaTwoData_DioramaTwoKeys : ReflectedAction<DioramaTwoData.DioramaTwoKeys>
		{
			[Token(Token = "0x6002D57")]
			[Address(RVA = "0xC25ADC", Offset = "0xC25ADC", VA = "0xC25ADC")]
			public NodeCanvas_Framework_Internal_ReflectedAction_ftg_DioramaTwoData_DioramaTwoKeys()
			{
			}
		}

		[Token(Token = "0x2000D99")]
		private class NodeCanvas_Framework_Internal_ReflectedAction_ftg_SaveManager_DioramaWorlds : ReflectedAction<SaveManager.DioramaWorlds>
		{
			[Token(Token = "0x6002D58")]
			[Address(RVA = "0xC25BCC", Offset = "0xC25BCC", VA = "0xC25BCC")]
			public NodeCanvas_Framework_Internal_ReflectedAction_ftg_SaveManager_DioramaWorlds()
			{
			}
		}

		[Token(Token = "0x2000D9A")]
		private class NodeCanvas_Framework_Internal_ReflectedAction_ftg_HubRoomData_HubRoomKeys : ReflectedAction<HubRoomData.HubRoomKeys>
		{
			[Token(Token = "0x6002D59")]
			[Address(RVA = "0xC25B2C", Offset = "0xC25B2C", VA = "0xC25B2C")]
			public NodeCanvas_Framework_Internal_ReflectedAction_ftg_HubRoomData_HubRoomKeys()
			{
			}
		}

		[Token(Token = "0x2000D9B")]
		private class NodeCanvas_Framework_Internal_ReflectedAction_ftg_PersonaSettings_PersonaKeys : ReflectedAction<PersonaSettings.PersonaKeys>
		{
			[Token(Token = "0x6002D5A")]
			[Address(RVA = "0xC25B7C", Offset = "0xC25B7C", VA = "0xC25B7C")]
			public NodeCanvas_Framework_Internal_ReflectedAction_ftg_PersonaSettings_PersonaKeys()
			{
			}
		}

		[Token(Token = "0x2000D9C")]
		private class NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_LayerMask : ReflectedAction<LayerMask>
		{
			[Token(Token = "0x6002D5B")]
			[Address(RVA = "0xC2567C", Offset = "0xC2567C", VA = "0xC2567C")]
			public NodeCanvas_Framework_Internal_ReflectedAction_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000D9D")]
		private class NodeCanvas_Framework_Internal_ReflectedFunction_System_Boolean : ReflectedFunction<bool>
		{
			[Token(Token = "0x6002D5C")]
			[Address(RVA = "0xC25C1C", Offset = "0xC25C1C", VA = "0xC25C1C")]
			public NodeCanvas_Framework_Internal_ReflectedFunction_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000D9E")]
		private class NodeCanvas_Framework_Internal_ReflectedFunction_System_Single : ReflectedFunction<float>
		{
			[Token(Token = "0x6002D5D")]
			[Address(RVA = "0xC25CBC", Offset = "0xC25CBC", VA = "0xC25CBC")]
			public NodeCanvas_Framework_Internal_ReflectedFunction_System_Single()
			{
			}
		}

		[Token(Token = "0x2000D9F")]
		private class NodeCanvas_Framework_Internal_ReflectedFunction_System_Int32 : ReflectedFunction<int>
		{
			[Token(Token = "0x6002D5E")]
			[Address(RVA = "0xC25C6C", Offset = "0xC25C6C", VA = "0xC25C6C")]
			public NodeCanvas_Framework_Internal_ReflectedFunction_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000DA0")]
		private class NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_Vector2 : ReflectedFunction<Vector2>
		{
			[Token(Token = "0x6002D5F")]
			[Address(RVA = "0xC2616C", Offset = "0xC2616C", VA = "0xC2616C")]
			public NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000DA1")]
		private class NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_Vector3 : ReflectedFunction<Vector3>
		{
			[Token(Token = "0x6002D60")]
			[Address(RVA = "0xC261BC", Offset = "0xC261BC", VA = "0xC261BC")]
			public NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000DA2")]
		private class NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_Vector4 : ReflectedFunction<Vector4>
		{
			[Token(Token = "0x6002D61")]
			[Address(RVA = "0xC2620C", Offset = "0xC2620C", VA = "0xC2620C")]
			public NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x2000DA3")]
		private class NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_Quaternion : ReflectedFunction<Quaternion>
		{
			[Token(Token = "0x6002D62")]
			[Address(RVA = "0xC25F8C", Offset = "0xC25F8C", VA = "0xC25F8C")]
			public NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000DA4")]
		private class NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_Keyframe : ReflectedFunction<Keyframe>
		{
			[Token(Token = "0x6002D63")]
			[Address(RVA = "0xC25EEC", Offset = "0xC25EEC", VA = "0xC25EEC")]
			public NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000DA5")]
		private class NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_Bounds : ReflectedFunction<Bounds>
		{
			[Token(Token = "0x6002D64")]
			[Address(RVA = "0xC25D0C", Offset = "0xC25D0C", VA = "0xC25D0C")]
			public NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000DA6")]
		private class NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_Color : ReflectedFunction<Color>
		{
			[Token(Token = "0x6002D65")]
			[Address(RVA = "0xC25DFC", Offset = "0xC25DFC", VA = "0xC25DFC")]
			public NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000DA7")]
		private class NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_Rect : ReflectedFunction<Rect>
		{
			[Token(Token = "0x6002D66")]
			[Address(RVA = "0xC260CC", Offset = "0xC260CC", VA = "0xC260CC")]
			public NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000DA8")]
		private class NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_ContactPoint : ReflectedFunction<ContactPoint>
		{
			[Token(Token = "0x6002D67")]
			[Address(RVA = "0xC25E4C", Offset = "0xC25E4C", VA = "0xC25E4C")]
			public NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000DA9")]
		private class NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_ContactPoint2D : ReflectedFunction<ContactPoint2D>
		{
			[Token(Token = "0x6002D68")]
			[Address(RVA = "0xC25E9C", Offset = "0xC25E9C", VA = "0xC25E9C")]
			public NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000DAA")]
		private class NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_Collision : ReflectedFunction<Collision>
		{
			[Token(Token = "0x6002D69")]
			[Address(RVA = "0xC25D5C", Offset = "0xC25D5C", VA = "0xC25D5C")]
			public NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x2000DAB")]
		private class NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_Collision2D : ReflectedFunction<Collision2D>
		{
			[Token(Token = "0x6002D6A")]
			[Address(RVA = "0xC25DAC", Offset = "0xC25DAC", VA = "0xC25DAC")]
			public NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000DAC")]
		private class NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_RaycastHit : ReflectedFunction<RaycastHit>
		{
			[Token(Token = "0x6002D6B")]
			[Address(RVA = "0xC2602C", Offset = "0xC2602C", VA = "0xC2602C")]
			public NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000DAD")]
		private class NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_RaycastHit2D : ReflectedFunction<RaycastHit2D>
		{
			[Token(Token = "0x6002D6C")]
			[Address(RVA = "0xC2607C", Offset = "0xC2607C", VA = "0xC2607C")]
			public NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000DAE")]
		private class NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_Ray : ReflectedFunction<Ray>
		{
			[Token(Token = "0x6002D6D")]
			[Address(RVA = "0xC25FDC", Offset = "0xC25FDC", VA = "0xC25FDC")]
			public NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x2000DAF")]
		private class NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_Space : ReflectedFunction<Space>
		{
			[Token(Token = "0x6002D6E")]
			[Address(RVA = "0xC2611C", Offset = "0xC2611C", VA = "0xC2611C")]
			public NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000DB0")]
		private class NodeCanvas_Framework_Internal_ReflectedFunction_ftg_DioramaFiveData_DioramaFiveKeys : ReflectedFunction<DioramaFiveData.DioramaFiveKeys>
		{
			[Token(Token = "0x6002D6F")]
			[Address(RVA = "0xC2625C", Offset = "0xC2625C", VA = "0xC2625C")]
			public NodeCanvas_Framework_Internal_ReflectedFunction_ftg_DioramaFiveData_DioramaFiveKeys()
			{
			}
		}

		[Token(Token = "0x2000DB1")]
		private class NodeCanvas_Framework_Internal_ReflectedFunction_ftg_DioramaFourData_DioramaFourKeys : ReflectedFunction<DioramaFourData.DioramaFourKeys>
		{
			[Token(Token = "0x6002D70")]
			[Address(RVA = "0xC262AC", Offset = "0xC262AC", VA = "0xC262AC")]
			public NodeCanvas_Framework_Internal_ReflectedFunction_ftg_DioramaFourData_DioramaFourKeys()
			{
			}
		}

		[Token(Token = "0x2000DB2")]
		private class NodeCanvas_Framework_Internal_ReflectedFunction_ftg_DioramaOneData_DioramaOneKeys : ReflectedFunction<DioramaOneData.DioramaOneKeys>
		{
			[Token(Token = "0x6002D71")]
			[Address(RVA = "0xC262FC", Offset = "0xC262FC", VA = "0xC262FC")]
			public NodeCanvas_Framework_Internal_ReflectedFunction_ftg_DioramaOneData_DioramaOneKeys()
			{
			}
		}

		[Token(Token = "0x2000DB3")]
		private class NodeCanvas_Framework_Internal_ReflectedFunction_ftg_DioramaThreeData_DioramaThreeKeys : ReflectedFunction<DioramaThreeData.DioramaThreeKeys>
		{
			[Token(Token = "0x6002D72")]
			[Address(RVA = "0xC2634C", Offset = "0xC2634C", VA = "0xC2634C")]
			public NodeCanvas_Framework_Internal_ReflectedFunction_ftg_DioramaThreeData_DioramaThreeKeys()
			{
			}
		}

		[Token(Token = "0x2000DB4")]
		private class NodeCanvas_Framework_Internal_ReflectedFunction_ftg_DioramaTwoData_DioramaTwoKeys : ReflectedFunction<DioramaTwoData.DioramaTwoKeys>
		{
			[Token(Token = "0x6002D73")]
			[Address(RVA = "0xC2639C", Offset = "0xC2639C", VA = "0xC2639C")]
			public NodeCanvas_Framework_Internal_ReflectedFunction_ftg_DioramaTwoData_DioramaTwoKeys()
			{
			}
		}

		[Token(Token = "0x2000DB5")]
		private class NodeCanvas_Framework_Internal_ReflectedFunction_ftg_SaveManager_DioramaWorlds : ReflectedFunction<SaveManager.DioramaWorlds>
		{
			[Token(Token = "0x6002D74")]
			[Address(RVA = "0xC2648C", Offset = "0xC2648C", VA = "0xC2648C")]
			public NodeCanvas_Framework_Internal_ReflectedFunction_ftg_SaveManager_DioramaWorlds()
			{
			}
		}

		[Token(Token = "0x2000DB6")]
		private class NodeCanvas_Framework_Internal_ReflectedFunction_ftg_HubRoomData_HubRoomKeys : ReflectedFunction<HubRoomData.HubRoomKeys>
		{
			[Token(Token = "0x6002D75")]
			[Address(RVA = "0xC263EC", Offset = "0xC263EC", VA = "0xC263EC")]
			public NodeCanvas_Framework_Internal_ReflectedFunction_ftg_HubRoomData_HubRoomKeys()
			{
			}
		}

		[Token(Token = "0x2000DB7")]
		private class NodeCanvas_Framework_Internal_ReflectedFunction_ftg_PersonaSettings_PersonaKeys : ReflectedFunction<PersonaSettings.PersonaKeys>
		{
			[Token(Token = "0x6002D76")]
			[Address(RVA = "0xC2643C", Offset = "0xC2643C", VA = "0xC2643C")]
			public NodeCanvas_Framework_Internal_ReflectedFunction_ftg_PersonaSettings_PersonaKeys()
			{
			}
		}

		[Token(Token = "0x2000DB8")]
		private class NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_LayerMask : ReflectedFunction<LayerMask>
		{
			[Token(Token = "0x6002D77")]
			[Address(RVA = "0xC25F3C", Offset = "0xC25F3C", VA = "0xC25F3C")]
			public NodeCanvas_Framework_Internal_ReflectedFunction_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x4000CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private object o;

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0xB31194", Offset = "0xB31194", VA = "0xB31194")]
		private void FlowCanvas_ValueHandler_Delegate()
		{
		}

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0xB31198", Offset = "0xB31198", VA = "0xB31198")]
		private void FlowCanvas_Flow_ReadParameter_1()
		{
		}

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0xB31EC8", Offset = "0xB31EC8", VA = "0xB31EC8")]
		private void FlowCanvas_Flow_WriteParameter_2()
		{
		}

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0xB3310C", Offset = "0xB3310C", VA = "0xB3310C")]
		private void FlowCanvas_FlowNode_AddValueInput_1()
		{
		}

		[Token(Token = "0x60014B9")]
		[Address(RVA = "0xB349E0", Offset = "0xB349E0", VA = "0xB349E0")]
		private void FlowCanvas_FlowNode_AddValueOutput_2()
		{
		}

		[Token(Token = "0x60014BA")]
		[Address(RVA = "0xB3704C", Offset = "0xB3704C", VA = "0xB3704C")]
		private void FlowCanvas_FlowNode_AddValueOutput_3()
		{
		}

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0xB39648", Offset = "0xB39648", VA = "0xB39648")]
		private void FlowCanvas_TypeConverter_GetConverterFuncFromTo_1()
		{
		}

		[Token(Token = "0x60014BC")]
		[Address(RVA = "0xB3C034", Offset = "0xB3C034", VA = "0xB3C034")]
		private void FlowCanvas_TypeConverter_QuickConvert_2()
		{
		}

		[Token(Token = "0x60014BD")]
		[Address(RVA = "0xB3C2C8", Offset = "0xB3C2C8", VA = "0xB3C2C8")]
		private void FlowCanvas_ValueInput_CreateInstance_1()
		{
		}

		[Token(Token = "0x60014BE")]
		[Address(RVA = "0xB3EA14", Offset = "0xB3EA14", VA = "0xB3EA14")]
		private void FlowCanvas_ValueOutput_CreateInstance_1()
		{
		}

		[Token(Token = "0x60014BF")]
		[Address(RVA = "0xB41D38", Offset = "0xB41D38", VA = "0xB41D38")]
		private void FlowCanvas_Nodes_ReflectedDelegateEvent_Callback1_1()
		{
		}

		[Token(Token = "0x60014C0")]
		[Address(RVA = "0xB425A4", Offset = "0xB425A4", VA = "0xB425A4")]
		private void FlowCanvas_Nodes_ReflectedUnityEvent_CallbackMethod1_1()
		{
		}

		[Token(Token = "0x60014C1")]
		[Address(RVA = "0xB42E10", Offset = "0xB42E10", VA = "0xB42E10")]
		private void NodeCanvas_Framework_Blackboard_GetVariable_1()
		{
		}

		[Token(Token = "0x60014C2")]
		[Address(RVA = "0xB43BF4", Offset = "0xB43BF4", VA = "0xB43BF4")]
		private void NodeCanvas_Framework_Blackboard_GetValue_2()
		{
		}

		[Token(Token = "0x60014C3")]
		[Address(RVA = "0xB449FC", Offset = "0xB449FC", VA = "0xB449FC")]
		private void NodeCanvas_Framework_IBlackboard_GetVariable_1()
		{
		}

		[Token(Token = "0x60014C4")]
		[Address(RVA = "0xB44AA4", Offset = "0xB44AA4", VA = "0xB44AA4")]
		private void NodeCanvas_Framework_IBlackboard_GetValue_2()
		{
		}

		[Token(Token = "0x60014C5")]
		[Address(RVA = "0xB44B4C", Offset = "0xB44B4C", VA = "0xB44B4C")]
		private void CustomSpoof()
		{
		}

		[Token(Token = "0x60014C6")]
		[Address(RVA = "0xB44B50", Offset = "0xB44B50", VA = "0xB44B50")]
		public AOTDummy()
		{
		}
	}
}
namespace ParadoxNotion.Services
{
	[Token(Token = "0x200037C")]
	public static class Logger
	{
		[Token(Token = "0x2000DB9")]
		public struct Message
		{
			[Token(Token = "0x4002183")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public LogType type;

			[Token(Token = "0x4002184")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string text;

			[Token(Token = "0x4002185")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string tag;

			[Token(Token = "0x4002186")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public object context;

			[Token(Token = "0x6002D78")]
			[Address(RVA = "0xA38B14", Offset = "0xA38B14", VA = "0xA38B14")]
			public bool IsSameAs(Message b)
			{
				return default(bool);
			}

			[Token(Token = "0x6002D79")]
			[Address(RVA = "0xA38B4C", Offset = "0xA38B4C", VA = "0xA38B4C")]
			public bool IsValid()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000DBA")]
		public delegate bool LogHandler(Message message);

		[Token(Token = "0x4000CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<LogHandler> subscribers;

		[Token(Token = "0x60014C7")]
		[Address(RVA = "0xF134C8", Offset = "0xF134C8", VA = "0xF134C8")]
		public static void AddListener(LogHandler callback)
		{
		}

		[Token(Token = "0x60014C8")]
		[Address(RVA = "0xF13554", Offset = "0xF13554", VA = "0xF13554")]
		public static void RemoveListener(LogHandler callback)
		{
		}

		[Token(Token = "0x60014C9")]
		[Address(RVA = "0xF135E0", Offset = "0xF135E0", VA = "0xF135E0")]
		public static void Log(object message, [Optional] Enum tag, [Optional] object context)
		{
		}

		[Token(Token = "0x60014CA")]
		[Address(RVA = "0xF13A68", Offset = "0xF13A68", VA = "0xF13A68")]
		public static void Log(object message, [Optional] string tag, [Optional] object context)
		{
		}

		[Token(Token = "0x60014CB")]
		[Address(RVA = "0xF13AE8", Offset = "0xF13AE8", VA = "0xF13AE8")]
		public static void LogWarning(object message, [Optional] Enum tag, [Optional] object context)
		{
		}

		[Token(Token = "0x60014CC")]
		[Address(RVA = "0xF13B8C", Offset = "0xF13B8C", VA = "0xF13B8C")]
		public static void LogWarning(object message, [Optional] string tag, [Optional] object context)
		{
		}

		[Token(Token = "0x60014CD")]
		[Address(RVA = "0xF13C0C", Offset = "0xF13C0C", VA = "0xF13C0C")]
		public static void LogError(object message, [Optional] Enum tag, [Optional] object context)
		{
		}

		[Token(Token = "0x60014CE")]
		[Address(RVA = "0xF13CB0", Offset = "0xF13CB0", VA = "0xF13CB0")]
		public static void LogError(object message, [Optional] string tag, [Optional] object context)
		{
		}

		[Token(Token = "0x60014CF")]
		[Address(RVA = "0xF13D30", Offset = "0xF13D30", VA = "0xF13D30")]
		public static void LogException(Exception exception, [Optional] Enum tag, [Optional] object context)
		{
		}

		[Token(Token = "0x60014D0")]
		[Address(RVA = "0xF10278", Offset = "0xF10278", VA = "0xF10278")]
		public static void LogException(Exception exception, [Optional] string tag, [Optional] object context)
		{
		}

		[Token(Token = "0x60014D1")]
		[Address(RVA = "0xF13684", Offset = "0xF13684", VA = "0xF13684")]
		private static void Internal_Log(LogType type, object message, string tag, object context)
		{
		}

		[Token(Token = "0x60014D2")]
		[Address(RVA = "0xF14390", Offset = "0xF14390", VA = "0xF14390")]
		private static void ForwardToUnity(LogType type, object message, string tag, object context)
		{
		}
	}
	[Token(Token = "0x200037D")]
	public class MessageRouter : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerDownHandler, IPointerUpHandler, IPointerClickHandler, IDragHandler, IScrollHandler, IUpdateSelectedHandler, ISelectHandler, IDeselectHandler, IMoveHandler, ISubmitHandler
	{
		[Token(Token = "0x2000DBB")]
		public class MessageData
		{
			[Token(Token = "0x4002187")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x983D1C", Offset = "0x983D1C")]
			private GameObject <receiver>k__BackingField;

			[Token(Token = "0x4002188")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x983D2C", Offset = "0x983D2C")]
			private object <sender>k__BackingField;

			[Token(Token = "0x1700039D")]
			public GameObject receiver
			{
				[Token(Token = "0x6002D7E")]
				[Address(RVA = "0xF16438", Offset = "0xF16438", VA = "0xF16438")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98AE70", Offset = "0x98AE70")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002D7F")]
				[Address(RVA = "0xF16440", Offset = "0xF16440", VA = "0xF16440")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98AE80", Offset = "0x98AE80")]
				private set
				{
				}
			}

			[Token(Token = "0x1700039E")]
			public object sender
			{
				[Token(Token = "0x6002D80")]
				[Address(RVA = "0xF16448", Offset = "0xF16448", VA = "0xF16448")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98AE90", Offset = "0x98AE90")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002D81")]
				[Address(RVA = "0xF16450", Offset = "0xF16450", VA = "0xF16450")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98AEA0", Offset = "0x98AEA0")]
				private set
				{
				}
			}

			[Token(Token = "0x6002D82")]
			[Address(RVA = "0xF16458", Offset = "0xF16458", VA = "0xF16458")]
			public MessageData(GameObject receiver, object sender)
			{
			}
		}

		[Token(Token = "0x2000DBC")]
		public class MessageData<T> : MessageData
		{
			[Token(Token = "0x4002189")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x983D3C", Offset = "0x983D3C")]
			private T <value>k__BackingField;

			[Token(Token = "0x1700039F")]
			public T value
			{
				[Token(Token = "0x6002D83")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98AEB0", Offset = "0x98AEB0")]
				get
				{
					return (T)null;
				}
				[Token(Token = "0x6002D84")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98AEC0", Offset = "0x98AEC0")]
				private set
				{
				}
			}

			[Token(Token = "0x6002D85")]
			public MessageData(T value, GameObject receiver, object sender)
			{
			}
		}

		[Token(Token = "0x4000CE8")]
		private const BindingFlags METHOD_FLAGS = BindingFlags.DeclaredOnly | BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic;

		[Token(Token = "0x4000CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<string, List<object>> listeners;

		[Token(Token = "0x4000CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private object _animator;

		[Token(Token = "0x1700023C")]
		private Animator animator
		{
			[Token(Token = "0x60014D4")]
			[Address(RVA = "0xF14828", Offset = "0xF14828", VA = "0xF14828")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014D5")]
		[Address(RVA = "0xF148F0", Offset = "0xF148F0", VA = "0xF148F0", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60014D6")]
		[Address(RVA = "0xF14960", Offset = "0xF14960", VA = "0xF14960", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60014D7")]
		[Address(RVA = "0xF149D0", Offset = "0xF149D0", VA = "0xF149D0", Slot = "6")]
		public void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60014D8")]
		[Address(RVA = "0xF14A40", Offset = "0xF14A40", VA = "0xF14A40", Slot = "7")]
		public void OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60014D9")]
		[Address(RVA = "0xF14AB0", Offset = "0xF14AB0", VA = "0xF14AB0", Slot = "8")]
		public void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60014DA")]
		[Address(RVA = "0xF14B20", Offset = "0xF14B20", VA = "0xF14B20", Slot = "9")]
		public void OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60014DB")]
		[Address(RVA = "0xF14B90", Offset = "0xF14B90", VA = "0xF14B90")]
		public void OnDrop(BaseEventData eventData)
		{
		}

		[Token(Token = "0x60014DC")]
		[Address(RVA = "0xF14C00", Offset = "0xF14C00", VA = "0xF14C00", Slot = "10")]
		public void OnScroll(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60014DD")]
		[Address(RVA = "0xF14C70", Offset = "0xF14C70", VA = "0xF14C70", Slot = "11")]
		public void OnUpdateSelected(BaseEventData eventData)
		{
		}

		[Token(Token = "0x60014DE")]
		[Address(RVA = "0xF14CE0", Offset = "0xF14CE0", VA = "0xF14CE0", Slot = "12")]
		public void OnSelect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x60014DF")]
		[Address(RVA = "0xF14D50", Offset = "0xF14D50", VA = "0xF14D50", Slot = "13")]
		public void OnDeselect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x60014E0")]
		[Address(RVA = "0xF14DC0", Offset = "0xF14DC0", VA = "0xF14DC0", Slot = "14")]
		public void OnMove(AxisEventData eventData)
		{
		}

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0xF14E30", Offset = "0xF14E30", VA = "0xF14E30", Slot = "15")]
		public void OnSubmit(BaseEventData eventData)
		{
		}

		[Token(Token = "0x60014E2")]
		[Address(RVA = "0xF14EA0", Offset = "0xF14EA0", VA = "0xF14EA0")]
		private void OnMouseDown()
		{
		}

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0xF14F60", Offset = "0xF14F60", VA = "0xF14F60")]
		private void OnMouseDrag()
		{
		}

		[Token(Token = "0x60014E4")]
		[Address(RVA = "0xF14FB4", Offset = "0xF14FB4", VA = "0xF14FB4")]
		private void OnMouseEnter()
		{
		}

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0xF15008", Offset = "0xF15008", VA = "0xF15008")]
		private void OnMouseExit()
		{
		}

		[Token(Token = "0x60014E6")]
		[Address(RVA = "0xF1505C", Offset = "0xF1505C", VA = "0xF1505C")]
		private void OnMouseOver()
		{
		}

		[Token(Token = "0x60014E7")]
		[Address(RVA = "0xF150B0", Offset = "0xF150B0", VA = "0xF150B0")]
		private void OnMouseUp()
		{
		}

		[Token(Token = "0x60014E8")]
		[Address(RVA = "0xF15104", Offset = "0xF15104", VA = "0xF15104")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60014E9")]
		[Address(RVA = "0xF15158", Offset = "0xF15158", VA = "0xF15158")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60014EA")]
		[Address(RVA = "0xF151AC", Offset = "0xF151AC", VA = "0xF151AC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60014EB")]
		[Address(RVA = "0xF15200", Offset = "0xF15200", VA = "0xF15200")]
		private void OnTransformChildrenChanged()
		{
		}

		[Token(Token = "0x60014EC")]
		[Address(RVA = "0xF15254", Offset = "0xF15254", VA = "0xF15254")]
		private void OnTransformParentChanged()
		{
		}

		[Token(Token = "0x60014ED")]
		[Address(RVA = "0xF152A8", Offset = "0xF152A8", VA = "0xF152A8")]
		private void OnAnimatorIK(int layerIndex)
		{
		}

		[Token(Token = "0x60014EE")]
		[Address(RVA = "0xF15318", Offset = "0xF15318", VA = "0xF15318")]
		private void OnAnimatorMove()
		{
		}

		[Token(Token = "0x60014EF")]
		[Address(RVA = "0xF153C0", Offset = "0xF153C0", VA = "0xF153C0")]
		private void OnBecameInvisible()
		{
		}

		[Token(Token = "0x60014F0")]
		[Address(RVA = "0xF15414", Offset = "0xF15414", VA = "0xF15414")]
		private void OnBecameVisible()
		{
		}

		[Token(Token = "0x60014F1")]
		[Address(RVA = "0xF15468", Offset = "0xF15468", VA = "0xF15468")]
		private void OnControllerColliderHit(ControllerColliderHit hit)
		{
		}

		[Token(Token = "0x60014F2")]
		[Address(RVA = "0xF154D8", Offset = "0xF154D8", VA = "0xF154D8")]
		private void OnParticleCollision(GameObject other)
		{
		}

		[Token(Token = "0x60014F3")]
		[Address(RVA = "0xF15548", Offset = "0xF15548", VA = "0xF15548")]
		private void OnCollisionEnter(Collision collisionInfo)
		{
		}

		[Token(Token = "0x60014F4")]
		[Address(RVA = "0xF155B8", Offset = "0xF155B8", VA = "0xF155B8")]
		private void OnCollisionExit(Collision collisionInfo)
		{
		}

		[Token(Token = "0x60014F5")]
		[Address(RVA = "0xF15628", Offset = "0xF15628", VA = "0xF15628")]
		private void OnCollisionEnter2D(Collision2D collisionInfo)
		{
		}

		[Token(Token = "0x60014F6")]
		[Address(RVA = "0xF15698", Offset = "0xF15698", VA = "0xF15698")]
		private void OnCollisionExit2D(Collision2D collisionInfo)
		{
		}

		[Token(Token = "0x60014F7")]
		[Address(RVA = "0xF15708", Offset = "0xF15708", VA = "0xF15708")]
		private void OnCollisionStay2D(Collision2D collisionInfo)
		{
		}

		[Token(Token = "0x60014F8")]
		[Address(RVA = "0xF15778", Offset = "0xF15778", VA = "0xF15778")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60014F9")]
		[Address(RVA = "0xF157E8", Offset = "0xF157E8", VA = "0xF157E8")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60014FA")]
		[Address(RVA = "0xF15858", Offset = "0xF15858", VA = "0xF15858")]
		private void OnTriggerEnter2D(Collider2D other)
		{
		}

		[Token(Token = "0x60014FB")]
		[Address(RVA = "0xF158C8", Offset = "0xF158C8", VA = "0xF158C8")]
		private void OnTriggerExit2D(Collider2D other)
		{
		}

		[Token(Token = "0x60014FC")]
		[Address(RVA = "0xF15938", Offset = "0xF15938", VA = "0xF15938")]
		private void OnTriggerStay2D(Collider2D other)
		{
		}

		[Token(Token = "0x60014FD")]
		[Address(RVA = "0xF159A8", Offset = "0xF159A8", VA = "0xF159A8")]
		public void Register(object target, params string[] messages)
		{
		}

		[Token(Token = "0x60014FE")]
		[Address(RVA = "0xF15C98", Offset = "0xF15C98", VA = "0xF15C98")]
		public void RegisterCallback(string message, Action callback)
		{
		}

		[Token(Token = "0x60014FF")]
		public void RegisterCallback<T>(string message, Action<T> callback)
		{
		}

		[Token(Token = "0x6001500")]
		[Address(RVA = "0xF15C9C", Offset = "0xF15C9C", VA = "0xF15C9C")]
		private void Internal_RegisterCallback(string message, Delegate callback)
		{
		}

		[Token(Token = "0x6001501")]
		[Address(RVA = "0xF15E28", Offset = "0xF15E28", VA = "0xF15E28")]
		public void UnRegister(object target)
		{
		}

		[Token(Token = "0x6001502")]
		[Address(RVA = "0xF16120", Offset = "0xF16120", VA = "0xF16120")]
		public void UnRegister(object target, params string[] messages)
		{
		}

		[Token(Token = "0x6001503")]
		[Address(RVA = "0xF14EF4", Offset = "0xF14EF4", VA = "0xF14EF4")]
		public bool Dispatch(string message, [Optional] object sender)
		{
			return default(bool);
		}

		[Token(Token = "0x6001504")]
		public bool Dispatch<T>(string message, T arg, [Optional] object sender)
		{
			return default(bool);
		}

		[Token(Token = "0x6001505")]
		[Address(RVA = "0xF1638C", Offset = "0xF1638C", VA = "0xF1638C")]
		public MessageRouter()
		{
		}
	}
	[Token(Token = "0x200037E")]
	public class MonoManager : MonoBehaviour
	{
		[Token(Token = "0x4000CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x980214", Offset = "0x980214")]
		private static bool <isQuiting>k__BackingField;

		[Token(Token = "0x4000CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static MonoManager _current;

		[Token(Token = "0x1700023D")]
		public static bool isQuiting
		{
			[Token(Token = "0x6001512")]
			[Address(RVA = "0xF16FA0", Offset = "0xF16FA0", VA = "0xF16FA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x987168", Offset = "0x987168")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001513")]
			[Address(RVA = "0xF16FF0", Offset = "0xF16FF0", VA = "0xF16FF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x987178", Offset = "0x987178")]
			private set
			{
			}
		}

		[Token(Token = "0x1700023E")]
		public static MonoManager current
		{
			[Token(Token = "0x6001514")]
			[Address(RVA = "0xF17048", Offset = "0xF17048", VA = "0xF17048")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000040")]
		public event Action onUpdate
		{
			[Token(Token = "0x6001506")]
			[Address(RVA = "0xF16490", Offset = "0xF16490", VA = "0xF16490")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9870A8", Offset = "0x9870A8")]
			add
			{
			}
			[Token(Token = "0x6001507")]
			[Address(RVA = "0xF1657C", Offset = "0xF1657C", VA = "0xF1657C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9870B8", Offset = "0x9870B8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000041")]
		public event Action onLateUpdate
		{
			[Token(Token = "0x6001508")]
			[Address(RVA = "0xF16668", Offset = "0xF16668", VA = "0xF16668")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9870C8", Offset = "0x9870C8")]
			add
			{
			}
			[Token(Token = "0x6001509")]
			[Address(RVA = "0xF16754", Offset = "0xF16754", VA = "0xF16754")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9870D8", Offset = "0x9870D8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000042")]
		public event Action onFixedUpdate
		{
			[Token(Token = "0x600150A")]
			[Address(RVA = "0xF16840", Offset = "0xF16840", VA = "0xF16840")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9870E8", Offset = "0x9870E8")]
			add
			{
			}
			[Token(Token = "0x600150B")]
			[Address(RVA = "0xF1692C", Offset = "0xF1692C", VA = "0xF1692C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9870F8", Offset = "0x9870F8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000043")]
		public event Action onGUI
		{
			[Token(Token = "0x600150C")]
			[Address(RVA = "0xF16A18", Offset = "0xF16A18", VA = "0xF16A18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x987108", Offset = "0x987108")]
			add
			{
			}
			[Token(Token = "0x600150D")]
			[Address(RVA = "0xF16B04", Offset = "0xF16B04", VA = "0xF16B04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x987118", Offset = "0x987118")]
			remove
			{
			}
		}

		[Token(Token = "0x14000044")]
		public event Action onApplicationQuit
		{
			[Token(Token = "0x600150E")]
			[Address(RVA = "0xF16BF0", Offset = "0xF16BF0", VA = "0xF16BF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x987128", Offset = "0x987128")]
			add
			{
			}
			[Token(Token = "0x600150F")]
			[Address(RVA = "0xF16CDC", Offset = "0xF16CDC", VA = "0xF16CDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x987138", Offset = "0x987138")]
			remove
			{
			}
		}

		[Token(Token = "0x14000045")]
		public event Action<bool> onApplicationPause
		{
			[Token(Token = "0x6001510")]
			[Address(RVA = "0xF16DC8", Offset = "0xF16DC8", VA = "0xF16DC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x987148", Offset = "0x987148")]
			add
			{
			}
			[Token(Token = "0x6001511")]
			[Address(RVA = "0xF16EB4", Offset = "0xF16EB4", VA = "0xF16EB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x987158", Offset = "0x987158")]
			remove
			{
			}
		}

		[Token(Token = "0x6001515")]
		[Address(RVA = "0xF171B4", Offset = "0xF171B4", VA = "0xF171B4")]
		public static void Create()
		{
		}

		[Token(Token = "0x6001516")]
		[Address(RVA = "0xF17208", Offset = "0xF17208", VA = "0xF17208")]
		protected void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001517")]
		[Address(RVA = "0xF17278", Offset = "0xF17278", VA = "0xF17278")]
		protected void OnApplicationPause(bool isPause)
		{
		}

		[Token(Token = "0x6001518")]
		[Address(RVA = "0xF172EC", Offset = "0xF172EC", VA = "0xF172EC")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6001519")]
		[Address(RVA = "0xF1743C", Offset = "0xF1743C", VA = "0xF1743C")]
		protected void Update()
		{
		}

		[Token(Token = "0x600151A")]
		[Address(RVA = "0xF17450", Offset = "0xF17450", VA = "0xF17450")]
		protected void LateUpdate()
		{
		}

		[Token(Token = "0x600151B")]
		[Address(RVA = "0xF17464", Offset = "0xF17464", VA = "0xF17464")]
		protected void FixedUpdate()
		{
		}

		[Token(Token = "0x600151C")]
		[Address(RVA = "0xF17478", Offset = "0xF17478", VA = "0xF17478")]
		public MonoManager()
		{
		}
	}
	[Token(Token = "0x200037F")]
	public static class Threader
	{
		[Token(Token = "0x2000DBD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979E94", Offset = "0x979E94")]
		private sealed class <>c__DisplayClass1_0<T1>
		{
			[Token(Token = "0x400218A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1> function;

			[Token(Token = "0x400218B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 parameter1;

			[Token(Token = "0x6002D86")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6002D87")]
			internal void <StartAction>b__0()
			{
			}
		}

		[Token(Token = "0x2000DBE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979EA4", Offset = "0x979EA4")]
		private sealed class <>c__DisplayClass2_0<T1, T2>
		{
			[Token(Token = "0x400218C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1, T2> function;

			[Token(Token = "0x400218D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 parameter1;

			[Token(Token = "0x400218E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T2 parameter2;

			[Token(Token = "0x6002D88")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6002D89")]
			internal void <StartAction>b__0()
			{
			}
		}

		[Token(Token = "0x2000DBF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979EB4", Offset = "0x979EB4")]
		private sealed class <>c__DisplayClass3_0<T1, T2, T3>
		{
			[Token(Token = "0x400218F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1, T2, T3> function;

			[Token(Token = "0x4002190")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 parameter1;

			[Token(Token = "0x4002191")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T2 parameter2;

			[Token(Token = "0x4002192")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T3 parameter3;

			[Token(Token = "0x6002D8A")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6002D8B")]
			internal void <StartAction>b__0()
			{
			}
		}

		[Token(Token = "0x2000DC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979EC4", Offset = "0x979EC4")]
		private sealed class <>c__DisplayClass4_0<TResult>
		{
			[Token(Token = "0x4002193")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TResult result;

			[Token(Token = "0x4002194")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<TResult> function;

			[Token(Token = "0x4002195")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<TResult> callback;

			[Token(Token = "0x6002D8C")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x6002D8D")]
			internal void <StartFunction>b__0()
			{
			}

			[Token(Token = "0x6002D8E")]
			internal void <StartFunction>b__1()
			{
			}
		}

		[Token(Token = "0x2000DC1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979ED4", Offset = "0x979ED4")]
		private sealed class <>c__DisplayClass5_0<TResult, T1>
		{
			[Token(Token = "0x4002196")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TResult result;

			[Token(Token = "0x4002197")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<T1, TResult> function;

			[Token(Token = "0x4002198")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 parameter1;

			[Token(Token = "0x4002199")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<TResult> callback;

			[Token(Token = "0x6002D8F")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x6002D90")]
			internal void <StartFunction>b__0()
			{
			}

			[Token(Token = "0x6002D91")]
			internal void <StartFunction>b__1()
			{
			}
		}

		[Token(Token = "0x2000DC2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979EE4", Offset = "0x979EE4")]
		private sealed class <>c__DisplayClass6_0<TResult, T1, T2>
		{
			[Token(Token = "0x400219A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TResult result;

			[Token(Token = "0x400219B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<T1, T2, TResult> function;

			[Token(Token = "0x400219C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 parameter1;

			[Token(Token = "0x400219D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T2 parameter2;

			[Token(Token = "0x400219E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<TResult> callback;

			[Token(Token = "0x6002D92")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x6002D93")]
			internal void <StartFunction>b__0()
			{
			}

			[Token(Token = "0x6002D94")]
			internal void <StartFunction>b__1()
			{
			}
		}

		[Token(Token = "0x2000DC3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979EF4", Offset = "0x979EF4")]
		private sealed class <>c__DisplayClass7_0<TResult, T1, T2, T3>
		{
			[Token(Token = "0x400219F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TResult result;

			[Token(Token = "0x40021A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<T1, T2, T3, TResult> function;

			[Token(Token = "0x40021A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 parameter1;

			[Token(Token = "0x40021A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T2 parameter2;

			[Token(Token = "0x40021A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T3 parameter3;

			[Token(Token = "0x40021A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<TResult> callback;

			[Token(Token = "0x6002D95")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6002D96")]
			internal void <StartFunction>b__0()
			{
			}

			[Token(Token = "0x6002D97")]
			internal void <StartFunction>b__1()
			{
			}
		}

		[Token(Token = "0x2000DC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979F04", Offset = "0x979F04")]
		private sealed class <ThreadUpdater>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40021A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40021A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40021A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Thread thread;

			[Token(Token = "0x40021A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action callback;

			[Token(Token = "0x170003A0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002D9B")]
				[Address(RVA = "0xF1770C", Offset = "0xF1770C", VA = "0xF1770C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003A1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002D9D")]
				[Address(RVA = "0xF1777C", Offset = "0xF1777C", VA = "0xF1777C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002D98")]
			[Address(RVA = "0xF1762C", Offset = "0xF1762C", VA = "0xF1762C")]
			[DebuggerHidden]
			public <ThreadUpdater>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6002D99")]
			[Address(RVA = "0xF17658", Offset = "0xF17658", VA = "0xF17658", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002D9A")]
			[Address(RVA = "0xF1765C", Offset = "0xF1765C", VA = "0xF1765C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002D9C")]
			[Address(RVA = "0xF17714", Offset = "0xF17714", VA = "0xF17714", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x600151D")]
		[Address(RVA = "0xF17480", Offset = "0xF17480", VA = "0xF17480")]
		public static Thread StartAction(Action function, [Optional] Action callback)
		{
			return null;
		}

		[Token(Token = "0x600151E")]
		public static Thread StartAction<T1>(Action<T1> function, T1 parameter1, [Optional] Action callback)
		{
			return null;
		}

		[Token(Token = "0x600151F")]
		public static Thread StartAction<T1, T2>(Action<T1, T2> function, T1 parameter1, T2 parameter2, [Optional] Action callback)
		{
			return null;
		}

		[Token(Token = "0x6001520")]
		public static Thread StartAction<T1, T2, T3>(Action<T1, T2, T3> function, T1 parameter1, T2 parameter2, T3 parameter3, [Optional] Action callback)
		{
			return null;
		}

		[Token(Token = "0x6001521")]
		public static Thread StartFunction<TResult>(Func<TResult> function, [Optional] Action<TResult> callback)
		{
			return null;
		}

		[Token(Token = "0x6001522")]
		public static Thread StartFunction<TResult, T1>(Func<T1, TResult> function, T1 parameter1, [Optional] Action<TResult> callback)
		{
			return null;
		}

		[Token(Token = "0x6001523")]
		public static Thread StartFunction<TResult, T1, T2>(Func<T1, T2, TResult> function, T1 parameter1, T2 parameter2, [Optional] Action<TResult> callback)
		{
			return null;
		}

		[Token(Token = "0x6001524")]
		public static Thread StartFunction<TResult, T1, T2, T3>(Func<T1, T2, T3, TResult> function, T1 parameter1, T2 parameter2, T3 parameter3, [Optional] Action<TResult> callback)
		{
			return null;
		}

		[Token(Token = "0x6001525")]
		[Address(RVA = "0xF17528", Offset = "0xF17528", VA = "0xF17528")]
		private static void Begin(Thread thread, Action callback)
		{
		}

		[Token(Token = "0x6001526")]
		[Address(RVA = "0xF17594", Offset = "0xF17594", VA = "0xF17594")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x987188", Offset = "0x987188")]
		private static IEnumerator ThreadUpdater(Thread thread, Action callback)
		{
			return null;
		}
	}
}
namespace ParadoxNotion.Serialization
{
	[Token(Token = "0x2000380")]
	public class DeserializeFromAttribute : Attribute
	{
		[Token(Token = "0x4000CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string previousTypeFullName;

		[Token(Token = "0x6001527")]
		[Address(RVA = "0xC2F294", Offset = "0xC2F294", VA = "0xC2F294")]
		public DeserializeFromAttribute(string previousTypeFullName)
		{
		}
	}
	[Token(Token = "0x2000381")]
	public class fsRecoveryProcessor<TCanProcess, TMissing> : fsObjectProcessor where TMissing : TCanProcess, IMissingRecoverable
	{
		[Token(Token = "0x2000DC5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979F14", Offset = "0x979F14")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x40021A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Dictionary<string, fsData> json;

			[Token(Token = "0x6002D9E")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6002D9F")]
			internal bool <OnBeforeDeserialize>b__0(KeyValuePair<string, fsData> kvp)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000DC6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979F24", Offset = "0x979F24")]
		private sealed class <>c
		{
			[Token(Token = "0x40021AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40021AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<KeyValuePair<string, fsData>, string> <>9__3_1;

			[Token(Token = "0x40021AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<KeyValuePair<string, fsData>, fsData> <>9__3_2;

			[Token(Token = "0x6002DA1")]
			public <>c()
			{
			}

			[Token(Token = "0x6002DA2")]
			internal string <OnBeforeDeserialize>b__3_1(KeyValuePair<string, fsData> c)
			{
				return null;
			}

			[Token(Token = "0x6002DA3")]
			internal fsData <OnBeforeDeserialize>b__3_2(KeyValuePair<string, fsData> c)
			{
				return null;
			}
		}

		[Token(Token = "0x4000CF4")]
		private const string FIELD_NAME_TYPE = "_missingType";

		[Token(Token = "0x4000CF5")]
		private const string FIELD_NAME_STATE = "_recoveryState";

		[Token(Token = "0x6001528")]
		public override bool CanProcess(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001529")]
		public override void OnBeforeDeserialize(Type storageType, ref fsData data)
		{
		}

		[Token(Token = "0x600152A")]
		public override void OnAfterDeserialize(Type storageType, object instance)
		{
		}

		[Token(Token = "0x600152B")]
		public fsRecoveryProcessor()
		{
		}
	}
	[Token(Token = "0x2000382")]
	public class fsUnityObjectConverter : fsConverter
	{
		[Token(Token = "0x600152C")]
		[Address(RVA = "0xF13048", Offset = "0xF13048", VA = "0xF13048", Slot = "9")]
		public override bool CanProcess(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x600152D")]
		[Address(RVA = "0xF130F4", Offset = "0xF130F4", VA = "0xF130F4", Slot = "5")]
		public override bool RequestCycleSupport(Type storageType)
		{
			return default(bool);
		}

		[Token(Token = "0x600152E")]
		[Address(RVA = "0xF130FC", Offset = "0xF130FC", VA = "0xF130FC", Slot = "6")]
		public override bool RequestInheritanceSupport(Type storageType)
		{
			return default(bool);
		}

		[Token(Token = "0x600152F")]
		[Address(RVA = "0xF13104", Offset = "0xF13104", VA = "0xF13104", Slot = "7")]
		public override fsResult TrySerialize(object instance, out fsData serialized, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001530")]
		[Address(RVA = "0xF13310", Offset = "0xF13310", VA = "0xF13310", Slot = "8")]
		public override fsResult TryDeserialize(fsData data, ref object instance, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001531")]
		[Address(RVA = "0xF134C0", Offset = "0xF134C0", VA = "0xF134C0", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x6001532")]
		[Address(RVA = "0xF0E644", Offset = "0xF0E644", VA = "0xF0E644")]
		public fsUnityObjectConverter()
		{
		}
	}
	[Token(Token = "0x2000383")]
	public interface IMissingRecoverable
	{
		[Token(Token = "0x1700023F")]
		string missingType
		{
			[Token(Token = "0x6001533")]
			get;
			[Token(Token = "0x6001534")]
			set;
		}

		[Token(Token = "0x17000240")]
		string recoveryState
		{
			[Token(Token = "0x6001535")]
			get;
			[Token(Token = "0x6001536")]
			set;
		}
	}
	[Token(Token = "0x2000384")]
	public static class JSONSerializer
	{
		[Token(Token = "0x4000CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x980224", Offset = "0x980224")]
		private static bool <applicationPlaying>k__BackingField;

		[Token(Token = "0x4000CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<string, fsData> cache;

		[Token(Token = "0x4000CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static object serializerLock;

		[Token(Token = "0x4000CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static fsSerializer serializer;

		[Token(Token = "0x17000241")]
		public static bool applicationPlaying
		{
			[Token(Token = "0x6001537")]
			[Address(RVA = "0xF102F8", Offset = "0xF102F8", VA = "0xF102F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9871EC", Offset = "0x9871EC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001538")]
			[Address(RVA = "0xF10360", Offset = "0xF10360", VA = "0xF10360")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9871FC", Offset = "0x9871FC")]
			private set
			{
			}
		}

		[Token(Token = "0x6001539")]
		[Address(RVA = "0xF103D0", Offset = "0xF103D0", VA = "0xF103D0")]
		static JSONSerializer()
		{
		}

		[Token(Token = "0x600153A")]
		[Address(RVA = "0xF10498", Offset = "0xF10498", VA = "0xF10498")]
		public static string Serialize(Type type, object instance, bool pretyJson = false, [Optional] List<UnityEngine.Object> objectReferences)
		{
			return null;
		}

		[Token(Token = "0x600153B")]
		public static T Deserialize<T>(string json, [Optional] List<UnityEngine.Object> objectReferences)
		{
			return (T)null;
		}

		[Token(Token = "0x600153C")]
		[Address(RVA = "0xF10734", Offset = "0xF10734", VA = "0xF10734")]
		public static object Deserialize(Type type, string json, [Optional] List<UnityEngine.Object> objectReferences)
		{
			return null;
		}

		[Token(Token = "0x600153D")]
		public static T DeserializeOverwrite<T>(T instance, string json, [Optional] List<UnityEngine.Object> objectReferences)
		{
			return (T)null;
		}

		[Token(Token = "0x600153E")]
		[Address(RVA = "0xF10B20", Offset = "0xF10B20", VA = "0xF10B20")]
		public static object DeserializeOverwrite(object instance, string json, [Optional] List<UnityEngine.Object> objectReferences)
		{
			return null;
		}

		[Token(Token = "0x600153F")]
		[Address(RVA = "0xF107B4", Offset = "0xF107B4", VA = "0xF107B4")]
		public static object Internal_Deserialize(Type type, string json, List<UnityEngine.Object> objectReferences, object instance)
		{
			return null;
		}

		[Token(Token = "0x6001540")]
		public static T Clone<T>(T original, [Optional] List<UnityEngine.Object> objectReferences)
		{
			return (T)null;
		}

		[Token(Token = "0x6001541")]
		[Address(RVA = "0xF10BC0", Offset = "0xF10BC0", VA = "0xF10BC0")]
		public static object Clone(object original, [Optional] List<UnityEngine.Object> objectReferences)
		{
			return null;
		}

		[Token(Token = "0x6001542")]
		[Address(RVA = "0xF10C6C", Offset = "0xF10C6C", VA = "0xF10C6C")]
		public static void ShowData(string json, string fileName = "")
		{
		}

		[Token(Token = "0x6001543")]
		[Address(RVA = "0xF10DD0", Offset = "0xF10DD0", VA = "0xF10DD0")]
		public static string PrettifyJson(string json)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000385")]
	public class SerializedConstructorInfo : SerializedMethodBaseInfo
	{
		[Serializable]
		[Token(Token = "0x2000DC7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979F34", Offset = "0x979F34")]
		private sealed class <>c
		{
			[Token(Token = "0x40021AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40021AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<ParameterInfo, string> <>9__4_0;

			[Token(Token = "0x40021AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<string, Type> <>9__5_0;

			[Token(Token = "0x40021B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<Type, bool> <>9__5_1;

			[Token(Token = "0x6002DA5")]
			[Address(RVA = "0xF1156C", Offset = "0xF1156C", VA = "0xF1156C")]
			public <>c()
			{
			}

			[Token(Token = "0x6002DA6")]
			[Address(RVA = "0xF11574", Offset = "0xF11574", VA = "0xF11574")]
			internal string <OnBeforeSerialize>b__4_0(ParameterInfo p)
			{
				return null;
			}

			[Token(Token = "0x6002DA7")]
			[Address(RVA = "0xF115C8", Offset = "0xF115C8", VA = "0xF115C8")]
			internal Type <OnAfterDeserialize>b__5_0(string n)
			{
				return null;
			}

			[Token(Token = "0x6002DA8")]
			[Address(RVA = "0xF11638", Offset = "0xF11638", VA = "0xF11638")]
			internal bool <OnAfterDeserialize>b__5_1(Type t)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private string _baseInfo;

		[Token(Token = "0x4000CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string _paramsInfo;

		[NonSerialized]
		[Token(Token = "0x4000CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ConstructorInfo _constructor;

		[NonSerialized]
		[Token(Token = "0x4000CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _hasChanged;

		[Token(Token = "0x6001544")]
		[Address(RVA = "0xF10DEC", Offset = "0xF10DEC", VA = "0xF10DEC", Slot = "9")]
		public override void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6001545")]
		[Address(RVA = "0xF10FE8", Offset = "0xF10FE8", VA = "0xF10FE8", Slot = "10")]
		public override void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6001546")]
		[Address(RVA = "0xF113E8", Offset = "0xF113E8", VA = "0xF113E8")]
		public SerializedConstructorInfo()
		{
		}

		[Token(Token = "0x6001547")]
		[Address(RVA = "0xF113F8", Offset = "0xF113F8", VA = "0xF113F8")]
		public SerializedConstructorInfo(ConstructorInfo constructor)
		{
		}

		[Token(Token = "0x6001548")]
		[Address(RVA = "0xF11428", Offset = "0xF11428", VA = "0xF11428")]
		public ConstructorInfo Get()
		{
			return null;
		}

		[Token(Token = "0x6001549")]
		[Address(RVA = "0xF11430", Offset = "0xF11430", VA = "0xF11430", Slot = "6")]
		public override MethodBase GetBase()
		{
			return null;
		}

		[Token(Token = "0x600154A")]
		[Address(RVA = "0xF11438", Offset = "0xF11438", VA = "0xF11438", Slot = "7")]
		public override bool HasChanged()
		{
			return default(bool);
		}

		[Token(Token = "0x600154B")]
		[Address(RVA = "0xF11440", Offset = "0xF11440", VA = "0xF11440", Slot = "8")]
		public override string GetMethodString()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000386")]
	public class SerializedEventInfo : ISerializationCallbackReceiver
	{
		[Token(Token = "0x4000CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private string _baseInfo;

		[NonSerialized]
		[Token(Token = "0x4000CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private System.Reflection.EventInfo _event;

		[Token(Token = "0x600154C")]
		[Address(RVA = "0xF116A4", Offset = "0xF116A4", VA = "0xF116A4", Slot = "4")]
		private void UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize()
		{
		}

		[Token(Token = "0x600154D")]
		[Address(RVA = "0xF11798", Offset = "0xF11798", VA = "0xF11798", Slot = "5")]
		private void UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize()
		{
		}

		[Token(Token = "0x600154E")]
		[Address(RVA = "0xF11924", Offset = "0xF11924", VA = "0xF11924")]
		public SerializedEventInfo()
		{
		}

		[Token(Token = "0x600154F")]
		[Address(RVA = "0xF1192C", Offset = "0xF1192C", VA = "0xF1192C")]
		public SerializedEventInfo(System.Reflection.EventInfo info)
		{
		}

		[Token(Token = "0x6001550")]
		[Address(RVA = "0xF11958", Offset = "0xF11958", VA = "0xF11958")]
		public System.Reflection.EventInfo Get()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000387")]
	public class SerializedFieldInfo : ISerializationCallbackReceiver
	{
		[Token(Token = "0x4000D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private string _baseInfo;

		[NonSerialized]
		[Token(Token = "0x4000D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private FieldInfo _field;

		[Token(Token = "0x6001551")]
		[Address(RVA = "0xF11960", Offset = "0xF11960", VA = "0xF11960", Slot = "4")]
		private void UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6001552")]
		[Address(RVA = "0xF11A54", Offset = "0xF11A54", VA = "0xF11A54", Slot = "5")]
		private void UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6001553")]
		[Address(RVA = "0xF11BE0", Offset = "0xF11BE0", VA = "0xF11BE0")]
		public SerializedFieldInfo()
		{
		}

		[Token(Token = "0x6001554")]
		[Address(RVA = "0xF11BE8", Offset = "0xF11BE8", VA = "0xF11BE8")]
		public SerializedFieldInfo(FieldInfo info)
		{
		}

		[Token(Token = "0x6001555")]
		[Address(RVA = "0xF11C14", Offset = "0xF11C14", VA = "0xF11C14")]
		public FieldInfo Get()
		{
			return null;
		}
	}
	[Token(Token = "0x2000388")]
	public abstract class SerializedMethodBaseInfo : ISerializationCallbackReceiver
	{
		[Token(Token = "0x6001556")]
		public abstract MethodBase GetBase();

		[Token(Token = "0x6001557")]
		public abstract bool HasChanged();

		[Token(Token = "0x6001558")]
		public abstract string GetMethodString();

		[Token(Token = "0x6001559")]
		[Address(RVA = "0xF11C1C", Offset = "0xF11C1C", VA = "0xF11C1C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600155A")]
		public abstract void OnBeforeSerialize();

		[Token(Token = "0x600155B")]
		public abstract void OnAfterDeserialize();

		[Token(Token = "0x600155C")]
		[Address(RVA = "0xF113F0", Offset = "0xF113F0", VA = "0xF113F0")]
		protected SerializedMethodBaseInfo()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000389")]
	public class SerializedMethodInfo : SerializedMethodBaseInfo
	{
		[Serializable]
		[Token(Token = "0x2000DC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979F44", Offset = "0x979F44")]
		private sealed class <>c
		{
			[Token(Token = "0x40021B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40021B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<ParameterInfo, string> <>9__5_0;

			[Token(Token = "0x40021B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Type, string> <>9__5_1;

			[Token(Token = "0x40021B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<string, Type> <>9__6_0;

			[Token(Token = "0x40021B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<Type, bool> <>9__6_1;

			[Token(Token = "0x40021B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<string, Type> <>9__6_3;

			[Token(Token = "0x40021B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Func<ParameterInfo, Type> <>9__6_5;

			[Token(Token = "0x6002DAA")]
			[Address(RVA = "0xF12A68", Offset = "0xF12A68", VA = "0xF12A68")]
			public <>c()
			{
			}

			[Token(Token = "0x6002DAB")]
			[Address(RVA = "0xF12A70", Offset = "0xF12A70", VA = "0xF12A70")]
			internal string <OnBeforeSerialize>b__5_0(ParameterInfo p)
			{
				return null;
			}

			[Token(Token = "0x6002DAC")]
			[Address(RVA = "0xF12AC4", Offset = "0xF12AC4", VA = "0xF12AC4")]
			internal string <OnBeforeSerialize>b__5_1(Type a)
			{
				return null;
			}

			[Token(Token = "0x6002DAD")]
			[Address(RVA = "0xF12AFC", Offset = "0xF12AFC", VA = "0xF12AFC")]
			internal Type <OnAfterDeserialize>b__6_0(string n)
			{
				return null;
			}

			[Token(Token = "0x6002DAE")]
			[Address(RVA = "0xF12B6C", Offset = "0xF12B6C", VA = "0xF12B6C")]
			internal bool <OnAfterDeserialize>b__6_1(Type t)
			{
				return default(bool);
			}

			[Token(Token = "0x6002DAF")]
			[Address(RVA = "0xF12BD8", Offset = "0xF12BD8", VA = "0xF12BD8")]
			internal Type <OnAfterDeserialize>b__6_3(string x)
			{
				return null;
			}

			[Token(Token = "0x6002DB0")]
			[Address(RVA = "0xF12C48", Offset = "0xF12C48", VA = "0xF12C48")]
			internal Type <OnAfterDeserialize>b__6_5(ParameterInfo p)
			{
				return null;
			}
		}

		[Token(Token = "0x2000DC9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979F54", Offset = "0x979F54")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x40021B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string name;

			[Token(Token = "0x40021B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Type[] parameterTypes;

			[Token(Token = "0x6002DB1")]
			[Address(RVA = "0xF128DC", Offset = "0xF128DC", VA = "0xF128DC")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x6002DB2")]
			[Address(RVA = "0xF12C7C", Offset = "0xF12C7C", VA = "0xF12C7C")]
			internal bool <OnAfterDeserialize>b__2(MethodInfo m)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000DCA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979F64", Offset = "0x979F64")]
		private sealed class <>c__DisplayClass6_1
		{
			[Token(Token = "0x40021BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Type[] genericArgumentTypes;

			[Token(Token = "0x40021BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass6_0 CS$<>8__locals1;

			[Token(Token = "0x6002DB3")]
			[Address(RVA = "0xF128E4", Offset = "0xF128E4", VA = "0xF128E4")]
			public <>c__DisplayClass6_1()
			{
			}

			[Token(Token = "0x6002DB4")]
			[Address(RVA = "0xF12CC0", Offset = "0xF12CC0", VA = "0xF12CC0")]
			internal bool <OnAfterDeserialize>b__4(MethodInfo m)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private string _baseInfo;

		[Token(Token = "0x4000D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string _paramsInfo;

		[Token(Token = "0x4000D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string _genericArgumentsInfo;

		[NonSerialized]
		[Token(Token = "0x4000D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private MethodInfo _method;

		[NonSerialized]
		[Token(Token = "0x4000D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _hasChanged;

		[Token(Token = "0x600155D")]
		[Address(RVA = "0xF11C28", Offset = "0xF11C28", VA = "0xF11C28", Slot = "9")]
		public override void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x600155E")]
		[Address(RVA = "0xF11FA4", Offset = "0xF11FA4", VA = "0xF11FA4", Slot = "10")]
		public override void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x600155F")]
		[Address(RVA = "0xF128EC", Offset = "0xF128EC", VA = "0xF128EC")]
		public SerializedMethodInfo()
		{
		}

		[Token(Token = "0x6001560")]
		[Address(RVA = "0xF128F4", Offset = "0xF128F4", VA = "0xF128F4")]
		public SerializedMethodInfo(MethodInfo method)
		{
		}

		[Token(Token = "0x6001561")]
		[Address(RVA = "0xF12924", Offset = "0xF12924", VA = "0xF12924")]
		public MethodInfo Get()
		{
			return null;
		}

		[Token(Token = "0x6001562")]
		[Address(RVA = "0xF1292C", Offset = "0xF1292C", VA = "0xF1292C", Slot = "6")]
		public override MethodBase GetBase()
		{
			return null;
		}

		[Token(Token = "0x6001563")]
		[Address(RVA = "0xF12934", Offset = "0xF12934", VA = "0xF12934", Slot = "7")]
		public override bool HasChanged()
		{
			return default(bool);
		}

		[Token(Token = "0x6001564")]
		[Address(RVA = "0xF1293C", Offset = "0xF1293C", VA = "0xF1293C", Slot = "8")]
		public override string GetMethodString()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x200038A")]
	public class SerializedTypeInfo : ISerializationCallbackReceiver
	{
		[Token(Token = "0x4000D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private string _baseInfo;

		[NonSerialized]
		[Token(Token = "0x4000D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Type _type;

		[Token(Token = "0x6001565")]
		[Address(RVA = "0xF12EEC", Offset = "0xF12EEC", VA = "0xF12EEC", Slot = "4")]
		private void UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6001566")]
		[Address(RVA = "0xF12F8C", Offset = "0xF12F8C", VA = "0xF12F8C", Slot = "5")]
		private void UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6001567")]
		[Address(RVA = "0xF1300C", Offset = "0xF1300C", VA = "0xF1300C")]
		public SerializedTypeInfo()
		{
		}

		[Token(Token = "0x6001568")]
		[Address(RVA = "0xF13014", Offset = "0xF13014", VA = "0xF13014")]
		public SerializedTypeInfo(Type info)
		{
		}

		[Token(Token = "0x6001569")]
		[Address(RVA = "0xF13040", Offset = "0xF13040", VA = "0xF13040")]
		public Type Get()
		{
			return null;
		}
	}
}
namespace ParadoxNotion.Serialization.FullSerializer
{
	[Token(Token = "0x200038B")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x9774A8", Offset = "0x9774A8")]
	public sealed class fsForwardAttribute : Attribute
	{
		[Token(Token = "0x4000D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string MemberName;

		[Token(Token = "0x600156A")]
		[Address(RVA = "0xC3B5C4", Offset = "0xC3B5C4", VA = "0xC3B5C4")]
		public fsForwardAttribute(string memberName)
		{
		}
	}
	[Token(Token = "0x200038C")]
	public abstract class fsBaseConverter
	{
		[Serializable]
		[Token(Token = "0x2000DCB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979F74", Offset = "0x979F74")]
		private sealed class <>c
		{
			[Token(Token = "0x40021BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40021BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<fsDataType, string> <>9__6_0;

			[Token(Token = "0x6002DB6")]
			[Address(RVA = "0xC3A5E8", Offset = "0xC3A5E8", VA = "0xC3A5E8")]
			public <>c()
			{
			}

			[Token(Token = "0x6002DB7")]
			[Address(RVA = "0xC3A5F0", Offset = "0xC3A5F0", VA = "0xC3A5F0")]
			internal string <FailExpectedType>b__6_0(fsDataType t)
			{
				return null;
			}
		}

		[Token(Token = "0x4000D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public fsSerializer Serializer;

		[Token(Token = "0x600156B")]
		[Address(RVA = "0xC39FBC", Offset = "0xC39FBC", VA = "0xC39FBC", Slot = "4")]
		public virtual object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x600156C")]
		[Address(RVA = "0xC3A19C", Offset = "0xC3A19C", VA = "0xC3A19C", Slot = "5")]
		public virtual bool RequestCycleSupport(Type storageType)
		{
			return default(bool);
		}

		[Token(Token = "0x600156D")]
		[Address(RVA = "0xC3A270", Offset = "0xC3A270", VA = "0xC3A270", Slot = "6")]
		public virtual bool RequestInheritanceSupport(Type storageType)
		{
			return default(bool);
		}

		[Token(Token = "0x600156E")]
		public abstract fsResult TrySerialize(object instance, out fsData serialized, Type storageType);

		[Token(Token = "0x600156F")]
		public abstract fsResult TryDeserialize(fsData data, ref object instance, Type storageType);

		[Token(Token = "0x6001570")]
		[Address(RVA = "0xC35888", Offset = "0xC35888", VA = "0xC35888")]
		protected fsResult FailExpectedType(fsData data, params fsDataType[] types)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001571")]
		[Address(RVA = "0xC335E8", Offset = "0xC335E8", VA = "0xC335E8")]
		protected fsResult CheckType(fsData data, fsDataType type)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001572")]
		[Address(RVA = "0xC35834", Offset = "0xC35834", VA = "0xC35834")]
		protected fsResult CheckKey(fsData data, string key, out fsData subitem)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001573")]
		[Address(RVA = "0xC3A2AC", Offset = "0xC3A2AC", VA = "0xC3A2AC")]
		protected fsResult CheckKey(Dictionary<string, fsData> data, string key, out fsData subitem)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001574")]
		protected fsResult SerializeMember<T>(Dictionary<string, fsData> data, Type overrideConverterType, string name, T value)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001575")]
		protected fsResult DeserializeMember<T>(Dictionary<string, fsData> data, Type overrideConverterType, string name, out T value)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001576")]
		[Address(RVA = "0xC3A57C", Offset = "0xC3A57C", VA = "0xC3A57C")]
		protected fsBaseConverter()
		{
		}
	}
	[Token(Token = "0x200038D")]
	public static class fsGlobalConfig
	{
		[Token(Token = "0x4000D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool SerializeDefaultValues;

		[Token(Token = "0x4000D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public static bool IsCaseSensitive;
	}
	[Token(Token = "0x200038E")]
	public class fsConfig
	{
		[Token(Token = "0x4000D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Type[] SerializeAttributes;

		[Token(Token = "0x4000D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Type[] IgnoreSerializeAttributes;

		[Token(Token = "0x4000D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string CustomDateTimeFormatString;

		[Token(Token = "0x4000D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool Serialize64BitIntegerAsString;

		[Token(Token = "0x4000D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool SerializeEnumsAsInteger;

		[Token(Token = "0x6001578")]
		[Address(RVA = "0xC3A684", Offset = "0xC3A684", VA = "0xC3A684")]
		public fsConfig()
		{
		}
	}
	[Token(Token = "0x200038F")]
	public sealed class fsContext
	{
		[Token(Token = "0x4000D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Dictionary<Type, object> _contextObjects;

		[Token(Token = "0x6001579")]
		[Address(RVA = "0xC3A8D0", Offset = "0xC3A8D0", VA = "0xC3A8D0")]
		public void Reset()
		{
		}

		[Token(Token = "0x600157A")]
		public void Set<T>(T obj)
		{
		}

		[Token(Token = "0x600157B")]
		public bool Has<T>()
		{
			return default(bool);
		}

		[Token(Token = "0x600157C")]
		public T Get<T>()
		{
			return (T)null;
		}

		[Token(Token = "0x600157D")]
		[Address(RVA = "0xC3A930", Offset = "0xC3A930", VA = "0xC3A930")]
		public fsContext()
		{
		}
	}
	[Token(Token = "0x2000390")]
	public abstract class fsConverter : fsBaseConverter
	{
		[Token(Token = "0x600157E")]
		public abstract bool CanProcess(Type type);

		[Token(Token = "0x600157F")]
		[Address(RVA = "0xC33A28", Offset = "0xC33A28", VA = "0xC33A28")]
		protected fsConverter()
		{
		}
	}
	[Token(Token = "0x2000391")]
	public enum fsDataType
	{
		[Token(Token = "0x4000D14")]
		Array,
		[Token(Token = "0x4000D15")]
		Object,
		[Token(Token = "0x4000D16")]
		Double,
		[Token(Token = "0x4000D17")]
		Int64,
		[Token(Token = "0x4000D18")]
		Boolean,
		[Token(Token = "0x4000D19")]
		String,
		[Token(Token = "0x4000D1A")]
		Null
	}
	[Token(Token = "0x2000392")]
	public sealed class fsData
	{
		[Token(Token = "0x4000D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private object _value;

		[Token(Token = "0x4000D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly fsData True;

		[Token(Token = "0x4000D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly fsData False;

		[Token(Token = "0x4000D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly fsData Null;

		[Token(Token = "0x17000242")]
		public fsDataType Type
		{
			[Token(Token = "0x6001580")]
			[Address(RVA = "0xC39228", Offset = "0xC39228", VA = "0xC39228")]
			get
			{
				return default(fsDataType);
			}
		}

		[Token(Token = "0x17000243")]
		public bool IsNull
		{
			[Token(Token = "0x600158D")]
			[Address(RVA = "0xC3AB94", Offset = "0xC3AB94", VA = "0xC3AB94")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000244")]
		public bool IsDouble
		{
			[Token(Token = "0x600158E")]
			[Address(RVA = "0xC39170", Offset = "0xC39170", VA = "0xC39170")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000245")]
		public bool IsInt64
		{
			[Token(Token = "0x600158F")]
			[Address(RVA = "0xC3681C", Offset = "0xC3681C", VA = "0xC3681C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000246")]
		public bool IsBool
		{
			[Token(Token = "0x6001590")]
			[Address(RVA = "0xC3ABA4", Offset = "0xC3ABA4", VA = "0xC3ABA4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000247")]
		public bool IsString
		{
			[Token(Token = "0x6001591")]
			[Address(RVA = "0xC34BBC", Offset = "0xC34BBC", VA = "0xC34BBC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000248")]
		public bool IsDictionary
		{
			[Token(Token = "0x6001592")]
			[Address(RVA = "0xC35700", Offset = "0xC35700", VA = "0xC35700")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000249")]
		public bool IsList
		{
			[Token(Token = "0x6001593")]
			[Address(RVA = "0xC357B0", Offset = "0xC357B0", VA = "0xC357B0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700024A")]
		public double AsDouble
		{
			[Token(Token = "0x6001594")]
			[Address(RVA = "0xC391D8", Offset = "0xC391D8", VA = "0xC391D8")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x1700024B")]
		public long AsInt64
		{
			[Token(Token = "0x6001595")]
			[Address(RVA = "0xC36884", Offset = "0xC36884", VA = "0xC36884")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x1700024C")]
		public bool AsBool
		{
			[Token(Token = "0x6001596")]
			[Address(RVA = "0xC39120", Offset = "0xC39120", VA = "0xC39120")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700024D")]
		public string AsString
		{
			[Token(Token = "0x6001597")]
			[Address(RVA = "0xC34D74", Offset = "0xC34D74", VA = "0xC34D74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024E")]
		public Dictionary<string, fsData> AsDictionary
		{
			[Token(Token = "0x6001598")]
			[Address(RVA = "0xC34D24", Offset = "0xC34D24", VA = "0xC34D24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024F")]
		public List<fsData> AsList
		{
			[Token(Token = "0x6001599")]
			[Address(RVA = "0xC33294", Offset = "0xC33294", VA = "0xC33294")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001581")]
		[Address(RVA = "0xC3A9A0", Offset = "0xC3A9A0", VA = "0xC3A9A0")]
		public fsData()
		{
		}

		[Token(Token = "0x6001582")]
		[Address(RVA = "0xC38840", Offset = "0xC38840", VA = "0xC38840")]
		public fsData(bool boolean)
		{
		}

		[Token(Token = "0x6001583")]
		[Address(RVA = "0xC388B4", Offset = "0xC388B4", VA = "0xC388B4")]
		public fsData(double f)
		{
		}

		[Token(Token = "0x6001584")]
		[Address(RVA = "0xC36244", Offset = "0xC36244", VA = "0xC36244")]
		public fsData(long i)
		{
		}

		[Token(Token = "0x6001585")]
		[Address(RVA = "0xC35784", Offset = "0xC35784", VA = "0xC35784")]
		public fsData(string str)
		{
		}

		[Token(Token = "0x6001586")]
		[Address(RVA = "0xC34DC4", Offset = "0xC34DC4", VA = "0xC34DC4")]
		public fsData(Dictionary<string, fsData> dict)
		{
		}

		[Token(Token = "0x6001587")]
		[Address(RVA = "0xC3A9C8", Offset = "0xC3A9C8", VA = "0xC3A9C8")]
		public fsData(List<fsData> list)
		{
		}

		[Token(Token = "0x6001588")]
		[Address(RVA = "0xC34C24", Offset = "0xC34C24", VA = "0xC34C24")]
		public static fsData CreateDictionary()
		{
			return null;
		}

		[Token(Token = "0x6001589")]
		[Address(RVA = "0xC3A9F4", Offset = "0xC3A9F4", VA = "0xC3A9F4")]
		public static fsData CreateList()
		{
			return null;
		}

		[Token(Token = "0x600158A")]
		[Address(RVA = "0xC33208", Offset = "0xC33208", VA = "0xC33208")]
		public static fsData CreateList(int capacity)
		{
			return null;
		}

		[Token(Token = "0x600158B")]
		[Address(RVA = "0xC3AA78", Offset = "0xC3AA78", VA = "0xC3AA78")]
		internal void BecomeDictionary()
		{
		}

		[Token(Token = "0x600158C")]
		[Address(RVA = "0xC3AB1C", Offset = "0xC3AB1C", VA = "0xC3AB1C")]
		internal fsData Clone()
		{
			return null;
		}

		[Token(Token = "0x600159A")]
		private T Cast<T>()
		{
			return (T)null;
		}

		[Token(Token = "0x600159B")]
		[Address(RVA = "0xC3AC0C", Offset = "0xC3AC0C", VA = "0xC3AC0C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600159C")]
		[Address(RVA = "0xC3AD80", Offset = "0xC3AD80", VA = "0xC3AD80", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600159D")]
		[Address(RVA = "0xC3ADF4", Offset = "0xC3ADF4", VA = "0xC3ADF4")]
		public bool Equals(fsData other)
		{
			return default(bool);
		}

		[Token(Token = "0x600159E")]
		[Address(RVA = "0xC3B330", Offset = "0xC3B330", VA = "0xC3B330")]
		public static bool operator ==(fsData a, fsData b)
		{
			return default(bool);
		}

		[Token(Token = "0x600159F")]
		[Address(RVA = "0xC3B464", Offset = "0xC3B464", VA = "0xC3B464")]
		public static bool operator !=(fsData a, fsData b)
		{
			return default(bool);
		}

		[Token(Token = "0x60015A0")]
		[Address(RVA = "0xC3B4E4", Offset = "0xC3B4E4", VA = "0xC3B4E4", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000393")]
	public abstract class fsDirectConverter : fsBaseConverter
	{
		[Token(Token = "0x17000250")]
		public abstract Type ModelType
		{
			[Token(Token = "0x60015A2")]
			get;
		}

		[Token(Token = "0x60015A3")]
		[Address(RVA = "0xC3B5BC", Offset = "0xC3B5BC", VA = "0xC3B5BC")]
		protected fsDirectConverter()
		{
		}
	}
	[Token(Token = "0x2000394")]
	public abstract class fsDirectConverter<TModel> : fsDirectConverter
	{
		[Token(Token = "0x17000251")]
		public override Type ModelType
		{
			[Token(Token = "0x60015A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015A5")]
		public sealed override fsResult TrySerialize(object instance, out fsData serialized, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60015A6")]
		public sealed override fsResult TryDeserialize(fsData data, ref object instance, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60015A7")]
		protected abstract fsResult DoSerialize(TModel model, Dictionary<string, fsData> serialized);

		[Token(Token = "0x60015A8")]
		protected abstract fsResult DoDeserialize(Dictionary<string, fsData> data, ref TModel model);

		[Token(Token = "0x60015A9")]
		protected fsDirectConverter()
		{
		}
	}
	[Token(Token = "0x2000395")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x9774BC", Offset = "0x9774BC")]
	public sealed class fsIgnoreAttribute : Attribute
	{
		[Token(Token = "0x60015AA")]
		[Address(RVA = "0xC3B5F4", Offset = "0xC3B5F4", VA = "0xC3B5F4")]
		public fsIgnoreAttribute()
		{
		}
	}
	[Token(Token = "0x2000396")]
	public class fsJsonParser
	{
		[Token(Token = "0x4000D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int _start;

		[Token(Token = "0x4000D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string _input;

		[Token(Token = "0x4000D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly StringBuilder _cachedStringBuilder;

		[Token(Token = "0x60015AB")]
		[Address(RVA = "0xC3B5FC", Offset = "0xC3B5FC", VA = "0xC3B5FC")]
		private fsResult MakeFailure(string message)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60015AC")]
		[Address(RVA = "0xC3B8C8", Offset = "0xC3B8C8", VA = "0xC3B8C8")]
		private bool TryMoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60015AD")]
		[Address(RVA = "0xC3B92C", Offset = "0xC3B92C", VA = "0xC3B92C")]
		private bool HasValue()
		{
			return default(bool);
		}

		[Token(Token = "0x60015AE")]
		[Address(RVA = "0xC3B934", Offset = "0xC3B934", VA = "0xC3B934")]
		private bool HasValue(int offset)
		{
			return default(bool);
		}

		[Token(Token = "0x60015AF")]
		[Address(RVA = "0xC3B984", Offset = "0xC3B984", VA = "0xC3B984")]
		private char Character()
		{
			return default(char);
		}

		[Token(Token = "0x60015B0")]
		[Address(RVA = "0xC3B98C", Offset = "0xC3B98C", VA = "0xC3B98C")]
		private char Character(int offset)
		{
			return default(char);
		}

		[Token(Token = "0x60015B1")]
		[Address(RVA = "0xC3B9D0", Offset = "0xC3B9D0", VA = "0xC3B9D0")]
		private void SkipSpace()
		{
		}

		[Token(Token = "0x60015B2")]
		[Address(RVA = "0xC3BBC4", Offset = "0xC3BBC4", VA = "0xC3BBC4")]
		private bool IsHex(char c)
		{
			return default(bool);
		}

		[Token(Token = "0x60015B3")]
		[Address(RVA = "0xC3BC00", Offset = "0xC3BC00", VA = "0xC3BC00")]
		private uint ParseSingleChar(char c1, uint multipliyer)
		{
			return default(uint);
		}

		[Token(Token = "0x60015B4")]
		[Address(RVA = "0xC3BC58", Offset = "0xC3BC58", VA = "0xC3BC58")]
		private uint ParseUnicode(char c1, char c2, char c3, char c4)
		{
			return default(uint);
		}

		[Token(Token = "0x60015B5")]
		[Address(RVA = "0xC3BDC4", Offset = "0xC3BDC4", VA = "0xC3BDC4")]
		private fsResult TryUnescapeChar(out char escaped)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60015B6")]
		[Address(RVA = "0xC3C340", Offset = "0xC3C340", VA = "0xC3C340")]
		private fsResult TryParseExact(string content)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60015B7")]
		[Address(RVA = "0xC3C4A0", Offset = "0xC3C4A0", VA = "0xC3C4A0")]
		private fsResult TryParseTrue(out fsData data)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60015B8")]
		[Address(RVA = "0xC3C588", Offset = "0xC3C588", VA = "0xC3C588")]
		private fsResult TryParseFalse(out fsData data)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60015B9")]
		[Address(RVA = "0xC3C670", Offset = "0xC3C670", VA = "0xC3C670")]
		private fsResult TryParseNull(out fsData data)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60015BA")]
		[Address(RVA = "0xC3C75C", Offset = "0xC3C75C", VA = "0xC3C75C")]
		private bool IsSeparator(char c)
		{
			return default(bool);
		}

		[Token(Token = "0x60015BB")]
		[Address(RVA = "0xC3C7F0", Offset = "0xC3C7F0", VA = "0xC3C7F0")]
		private fsResult TryParseNumber(out fsData data)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60015BC")]
		[Address(RVA = "0xC3CAE8", Offset = "0xC3CAE8", VA = "0xC3CAE8")]
		private fsResult TryParseString(out string str)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60015BD")]
		[Address(RVA = "0xC3CD5C", Offset = "0xC3CD5C", VA = "0xC3CD5C")]
		private fsResult TryParseArray(out fsData arr)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60015BE")]
		[Address(RVA = "0xC3D1FC", Offset = "0xC3D1FC", VA = "0xC3D1FC")]
		private fsResult TryParseObject(out fsData obj)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60015BF")]
		[Address(RVA = "0xC3CFA0", Offset = "0xC3CFA0", VA = "0xC3CFA0")]
		private fsResult RunParse(out fsData data)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60015C0")]
		[Address(RVA = "0xC3D55C", Offset = "0xC3D55C", VA = "0xC3D55C")]
		public static fsResult Parse(string input, out fsData data)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60015C1")]
		[Address(RVA = "0xC3D6B0", Offset = "0xC3D6B0", VA = "0xC3D6B0")]
		public static fsData Parse(string input)
		{
			return null;
		}

		[Token(Token = "0x60015C2")]
		[Address(RVA = "0xC3D62C", Offset = "0xC3D62C", VA = "0xC3D62C")]
		private fsJsonParser(string input)
		{
		}
	}
	[Token(Token = "0x2000397")]
	public static class fsJsonPrinter
	{
		[Token(Token = "0x60015C3")]
		[Address(RVA = "0xC3D6E8", Offset = "0xC3D6E8", VA = "0xC3D6E8")]
		private static void InsertSpacing(TextWriter stream, int count)
		{
		}

		[Token(Token = "0x60015C4")]
		[Address(RVA = "0xC3D770", Offset = "0xC3D770", VA = "0xC3D770")]
		private static string EscapeString(string str)
		{
			return null;
		}

		[Token(Token = "0x60015C5")]
		[Address(RVA = "0xC3DB00", Offset = "0xC3DB00", VA = "0xC3DB00")]
		private static void BuildCompressedString(fsData data, TextWriter stream)
		{
		}

		[Token(Token = "0x60015C6")]
		[Address(RVA = "0xC3E1BC", Offset = "0xC3E1BC", VA = "0xC3E1BC")]
		private static void BuildPrettyString(fsData data, TextWriter stream, int depth)
		{
		}

		[Token(Token = "0x60015C7")]
		[Address(RVA = "0xC3E82C", Offset = "0xC3E82C", VA = "0xC3E82C")]
		public static string ToJson(fsData data, bool pretty)
		{
			return null;
		}

		[Token(Token = "0x60015C8")]
		[Address(RVA = "0xC3E9AC", Offset = "0xC3E9AC", VA = "0xC3E9AC")]
		public static void PrettyJson(fsData data, TextWriter outputStream)
		{
		}

		[Token(Token = "0x60015C9")]
		[Address(RVA = "0xC3E838", Offset = "0xC3E838", VA = "0xC3E838")]
		public static string PrettyJson(fsData data)
		{
			return null;
		}

		[Token(Token = "0x60015CA")]
		[Address(RVA = "0xC3E9B4", Offset = "0xC3E9B4", VA = "0xC3E9B4")]
		public static void CompressedJson(fsData data, StreamWriter outputStream)
		{
		}

		[Token(Token = "0x60015CB")]
		[Address(RVA = "0xC3AC10", Offset = "0xC3AC10", VA = "0xC3AC10")]
		public static string CompressedJson(fsData data)
		{
			return null;
		}

		[Token(Token = "0x60015CC")]
		[Address(RVA = "0xC3E004", Offset = "0xC3E004", VA = "0xC3E004")]
		private static string ConvertDoubleToString(double d)
		{
			return null;
		}
	}
	[Token(Token = "0x2000398")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x9774D0", Offset = "0x9774D0")]
	public sealed class fsObjectAttribute : Attribute
	{
		[Token(Token = "0x4000D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Type Converter;

		[Token(Token = "0x4000D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Type Processor;

		[Token(Token = "0x60015CD")]
		[Address(RVA = "0xF0CC4C", Offset = "0xF0CC4C", VA = "0xF0CC4C")]
		public fsObjectAttribute()
		{
		}
	}
	[Token(Token = "0x2000399")]
	public abstract class fsObjectProcessor
	{
		[Token(Token = "0x60015CE")]
		[Address(RVA = "0xF0CC54", Offset = "0xF0CC54", VA = "0xF0CC54", Slot = "4")]
		public virtual bool CanProcess(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x60015CF")]
		[Address(RVA = "0xF0CCBC", Offset = "0xF0CCBC", VA = "0xF0CCBC", Slot = "5")]
		public virtual void OnBeforeSerialize(Type storageType, object instance)
		{
		}

		[Token(Token = "0x60015D0")]
		[Address(RVA = "0xF0CCC0", Offset = "0xF0CCC0", VA = "0xF0CCC0", Slot = "6")]
		public virtual void OnAfterSerialize(Type storageType, object instance, ref fsData data)
		{
		}

		[Token(Token = "0x60015D1")]
		[Address(RVA = "0xF0CCC4", Offset = "0xF0CCC4", VA = "0xF0CCC4", Slot = "7")]
		public virtual void OnBeforeDeserialize(Type storageType, ref fsData data)
		{
		}

		[Token(Token = "0x60015D2")]
		[Address(RVA = "0xF0CCC8", Offset = "0xF0CCC8", VA = "0xF0CCC8", Slot = "8")]
		public virtual void OnBeforeDeserializeAfterInstanceCreation(Type storageType, object instance, ref fsData data)
		{
		}

		[Token(Token = "0x60015D3")]
		[Address(RVA = "0xF0CCCC", Offset = "0xF0CCCC", VA = "0xF0CCCC", Slot = "9")]
		public virtual void OnAfterDeserialize(Type storageType, object instance)
		{
		}

		[Token(Token = "0x60015D4")]
		[Address(RVA = "0xF0CCD0", Offset = "0xF0CCD0", VA = "0xF0CCD0")]
		protected fsObjectProcessor()
		{
		}
	}
	[Token(Token = "0x200039A")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x9774E4", Offset = "0x9774E4")]
	public sealed class fsSerializeAsAttribute : Attribute
	{
		[Token(Token = "0x4000D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Name;

		[Token(Token = "0x60015D5")]
		[Address(RVA = "0xF0D3D4", Offset = "0xF0D3D4", VA = "0xF0D3D4")]
		public fsSerializeAsAttribute(string name)
		{
		}
	}
	[Token(Token = "0x200039B")]
	public struct fsResult
	{
		[Token(Token = "0x4000D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string[] EmptyStringArray;

		[Token(Token = "0x4000D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _success;

		[Token(Token = "0x4000D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private List<string> _messages;

		[Token(Token = "0x4000D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static fsResult Success;

		[Token(Token = "0x17000252")]
		public bool Failed
		{
			[Token(Token = "0x60015DC")]
			[Address(RVA = "0xA388F0", Offset = "0xA388F0", VA = "0xA388F0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000253")]
		public bool Succeeded
		{
			[Token(Token = "0x60015DD")]
			[Address(RVA = "0xA38900", Offset = "0xA38900", VA = "0xA38900")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000254")]
		public bool HasWarnings
		{
			[Token(Token = "0x60015DE")]
			[Address(RVA = "0xA38908", Offset = "0xA38908", VA = "0xA38908")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000255")]
		public Exception AsException
		{
			[Token(Token = "0x60015E1")]
			[Address(RVA = "0xA38920", Offset = "0xA38920", VA = "0xA38920")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000256")]
		public IEnumerable<string> RawMessages
		{
			[Token(Token = "0x60015E2")]
			[Address(RVA = "0xA38928", Offset = "0xA38928", VA = "0xA38928")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000257")]
		public string FormattedMessages
		{
			[Token(Token = "0x60015E3")]
			[Address(RVA = "0xA38930", Offset = "0xA38930", VA = "0xA38930")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015D6")]
		[Address(RVA = "0xF0CCD8", Offset = "0xF0CCD8", VA = "0xF0CCD8")]
		public static fsResult Warn(string warning)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60015D7")]
		[Address(RVA = "0xF0CD68", Offset = "0xF0CD68", VA = "0xF0CD68")]
		public static fsResult Fail(string warning)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60015D8")]
		[Address(RVA = "0xA388D8", Offset = "0xA388D8", VA = "0xA388D8")]
		public void AddMessage(string message)
		{
		}

		[Token(Token = "0x60015D9")]
		[Address(RVA = "0xA388E0", Offset = "0xA388E0", VA = "0xA388E0")]
		public void AddMessages(fsResult result)
		{
		}

		[Token(Token = "0x60015DA")]
		[Address(RVA = "0xA388E8", Offset = "0xA388E8", VA = "0xA388E8")]
		private fsResult Merge(fsResult other)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60015DB")]
		[Address(RVA = "0xF0D004", Offset = "0xF0D004", VA = "0xF0D004")]
		public static fsResult operator +(fsResult a, fsResult b)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60015DF")]
		[Address(RVA = "0xA38910", Offset = "0xA38910", VA = "0xA38910")]
		public fsResult AssertSuccess()
		{
			return default(fsResult);
		}

		[Token(Token = "0x60015E0")]
		[Address(RVA = "0xA38918", Offset = "0xA38918", VA = "0xA38918")]
		public fsResult AssertSuccessWithoutWarnings()
		{
			return default(fsResult);
		}
	}
	[Token(Token = "0x200039C")]
	public class fsSerializer
	{
		[Token(Token = "0x2000DCC")]
		internal class fsLazyCycleDefinitionWriter
		{
			[Token(Token = "0x40021BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Dictionary<int, fsData> _pendingDefinitions;

			[Token(Token = "0x40021BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private HashSet<int> _references;

			[Token(Token = "0x6002DB8")]
			[Address(RVA = "0xF0F8B8", Offset = "0xF0F8B8", VA = "0xF0F8B8")]
			public void WriteDefinition(int id, fsData data)
			{
			}

			[Token(Token = "0x6002DB9")]
			[Address(RVA = "0xF0F6C4", Offset = "0xF0F6C4", VA = "0xF0F6C4")]
			public void WriteReference(int id, Dictionary<string, fsData> dict)
			{
			}

			[Token(Token = "0x6002DBA")]
			[Address(RVA = "0xF0F640", Offset = "0xF0F640", VA = "0xF0F640")]
			public void Clear()
			{
			}

			[Token(Token = "0x6002DBB")]
			[Address(RVA = "0xF0E5AC", Offset = "0xF0E5AC", VA = "0xF0E5AC")]
			public fsLazyCycleDefinitionWriter()
			{
			}
		}

		[Token(Token = "0x4000D29")]
		public const string KEY_OBJECT_REFERENCE = "$ref";

		[Token(Token = "0x4000D2A")]
		public const string KEY_OBJECT_DEFINITION = "$id";

		[Token(Token = "0x4000D2B")]
		public const string KEY_INSTANCE_TYPE = "$type";

		[Token(Token = "0x4000D2C")]
		public const string KEY_VERSION = "$version";

		[Token(Token = "0x4000D2D")]
		public const string KEY_CONTENT = "$content";

		[Token(Token = "0x4000D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<Type, fsBaseConverter> _cachedOverrideConverterInstances;

		[Token(Token = "0x4000D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<Type, fsBaseConverter> _cachedConverters;

		[Token(Token = "0x4000D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly List<fsConverter> _availableConverters;

		[Token(Token = "0x4000D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Dictionary<Type, fsDirectConverter> _availableDirectConverters;

		[Token(Token = "0x4000D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly List<fsObjectProcessor> _processors;

		[Token(Token = "0x4000D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<Type, List<fsObjectProcessor>> _cachedProcessors;

		[Token(Token = "0x4000D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly fsCyclicReferenceManager _references;

		[Token(Token = "0x4000D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly fsLazyCycleDefinitionWriter _lazyReferenceWriter;

		[Token(Token = "0x4000D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<UnityEngine.Object> ReferencesDatabase;

		[Token(Token = "0x4000D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public fsConfig Config;

		[Token(Token = "0x60015E5")]
		[Address(RVA = "0xF0D400", Offset = "0xF0D400", VA = "0xF0D400")]
		public static bool IsReservedKeyword(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x60015E6")]
		[Address(RVA = "0xF0D4D4", Offset = "0xF0D4D4", VA = "0xF0D4D4")]
		private static bool IsObjectReference(fsData data)
		{
			return default(bool);
		}

		[Token(Token = "0x60015E7")]
		[Address(RVA = "0xF0D580", Offset = "0xF0D580", VA = "0xF0D580")]
		private static bool IsObjectDefinition(fsData data)
		{
			return default(bool);
		}

		[Token(Token = "0x60015E8")]
		[Address(RVA = "0xF0D62C", Offset = "0xF0D62C", VA = "0xF0D62C")]
		private static bool IsVersioned(fsData data)
		{
			return default(bool);
		}

		[Token(Token = "0x60015E9")]
		[Address(RVA = "0xF0D6D8", Offset = "0xF0D6D8", VA = "0xF0D6D8")]
		private static bool IsTypeSpecified(fsData data)
		{
			return default(bool);
		}

		[Token(Token = "0x60015EA")]
		[Address(RVA = "0xF0D784", Offset = "0xF0D784", VA = "0xF0D784")]
		private static bool IsWrappedData(fsData data)
		{
			return default(bool);
		}

		[Token(Token = "0x60015EB")]
		[Address(RVA = "0xF0D830", Offset = "0xF0D830", VA = "0xF0D830")]
		private static void Invoke_OnBeforeSerialize(List<fsObjectProcessor> processors, Type storageType, object instance)
		{
		}

		[Token(Token = "0x60015EC")]
		[Address(RVA = "0xF0DA84", Offset = "0xF0DA84", VA = "0xF0DA84")]
		private static void Invoke_OnAfterSerialize(List<fsObjectProcessor> processors, Type storageType, object instance, ref fsData data)
		{
		}

		[Token(Token = "0x60015ED")]
		[Address(RVA = "0xF0DB64", Offset = "0xF0DB64", VA = "0xF0DB64")]
		private static void Invoke_OnBeforeDeserialize(List<fsObjectProcessor> processors, Type storageType, ref fsData data)
		{
		}

		[Token(Token = "0x60015EE")]
		[Address(RVA = "0xF0DC40", Offset = "0xF0DC40", VA = "0xF0DC40")]
		private static void Invoke_OnBeforeDeserializeAfterInstanceCreation(List<fsObjectProcessor> processors, Type storageType, object instance, ref fsData data)
		{
		}

		[Token(Token = "0x60015EF")]
		[Address(RVA = "0xF0DD24", Offset = "0xF0DD24", VA = "0xF0DD24")]
		private static void Invoke_OnAfterDeserialize(List<fsObjectProcessor> processors, Type storageType, object instance)
		{
		}

		[Token(Token = "0x60015F0")]
		[Address(RVA = "0xF0DF78", Offset = "0xF0DF78", VA = "0xF0DF78")]
		private static void EnsureDictionary(fsData data)
		{
		}

		[Token(Token = "0x60015F1")]
		[Address(RVA = "0xF0E070", Offset = "0xF0E070", VA = "0xF0E070")]
		public fsSerializer()
		{
		}

		[Token(Token = "0x60015F2")]
		[Address(RVA = "0xF0E8A8", Offset = "0xF0E8A8", VA = "0xF0E8A8")]
		private List<fsObjectProcessor> GetProcessors(Type type)
		{
			return null;
		}

		[Token(Token = "0x60015F3")]
		[Address(RVA = "0xF0E64C", Offset = "0xF0E64C", VA = "0xF0E64C")]
		public void AddConverter(fsBaseConverter converter)
		{
		}

		[Token(Token = "0x60015F4")]
		[Address(RVA = "0xF0EBC8", Offset = "0xF0EBC8", VA = "0xF0EBC8")]
		private fsBaseConverter GetConverter(Type type, Type overrideConverterType)
		{
			return null;
		}

		[Token(Token = "0x60015F5")]
		public fsResult TrySerialize<T>(T instance, out fsData data)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60015F6")]
		[Address(RVA = "0xF0F078", Offset = "0xF0F078", VA = "0xF0F078")]
		public fsResult TrySerialize(Type storageType, object instance, out fsData data)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60015F7")]
		[Address(RVA = "0xF0F090", Offset = "0xF0F090", VA = "0xF0F090")]
		public fsResult TrySerialize(Type storageType, Type overrideConverterType, object instance, out fsData data)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60015F8")]
		[Address(RVA = "0xF0F288", Offset = "0xF0F288", VA = "0xF0F288")]
		private fsResult Internal_Serialize(Type storageType, Type overrideConverterType, object instance, out fsData data)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60015F9")]
		public fsResult TryDeserialize<T>(fsData data, ref T instance)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60015FA")]
		[Address(RVA = "0xF0FA04", Offset = "0xF0FA04", VA = "0xF0FA04")]
		public fsResult TryDeserialize(fsData data, Type storageType, ref object result)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60015FB")]
		[Address(RVA = "0xF0FA14", Offset = "0xF0FA14", VA = "0xF0FA14")]
		public fsResult TryDeserialize(fsData data, Type storageType, Type overrideConverterType, ref object result)
		{
			return default(fsResult);
		}

		[Token(Token = "0x60015FC")]
		[Address(RVA = "0xF0FD0C", Offset = "0xF0FD0C", VA = "0xF0FD0C")]
		private fsResult Internal_Deserialize(Type overrideConverterType, fsData data, Type storageType, ref object result, out List<fsObjectProcessor> processors)
		{
			return default(fsResult);
		}
	}
	[Token(Token = "0x200039D")]
	public class fsMetaType
	{
		[Token(Token = "0x2000DCD")]
		private delegate object ObjectGenerator();

		[Token(Token = "0x2000DCE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979F84", Offset = "0x979F84")]
		private sealed class <>c__DisplayClass14_0
		{
			[Token(Token = "0x40021C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FieldInfo field;

			[Token(Token = "0x6002DC0")]
			[Address(RVA = "0xF0BF20", Offset = "0xF0BF20", VA = "0xF0BF20")]
			public <>c__DisplayClass14_0()
			{
			}

			[Token(Token = "0x6002DC1")]
			[Address(RVA = "0xF0C9B0", Offset = "0xF0C9B0", VA = "0xF0C9B0")]
			internal bool <CollectProperties>b__0(Type t)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000DCF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979F94", Offset = "0x979F94")]
		private sealed class <>c__DisplayClass15_0
		{
			[Token(Token = "0x40021C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FieldInfo field;

			[Token(Token = "0x6002DC2")]
			[Address(RVA = "0xF0C168", Offset = "0xF0C168", VA = "0xF0C168")]
			public <>c__DisplayClass15_0()
			{
			}

			[Token(Token = "0x6002DC3")]
			[Address(RVA = "0xF0CA30", Offset = "0xF0CA30", VA = "0xF0CA30")]
			internal bool <CanSerializeField>b__0(Type t)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000DD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979FA4", Offset = "0x979FA4")]
		private sealed class <>c__DisplayClass16_0
		{
			[Token(Token = "0x40021C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Type reflectedType;

			[Token(Token = "0x6002DC4")]
			[Address(RVA = "0xF0C170", Offset = "0xF0C170", VA = "0xF0C170")]
			public <>c__DisplayClass16_0()
			{
			}

			[Token(Token = "0x6002DC5")]
			[Address(RVA = "0xF0CAB0", Offset = "0xF0CAB0", VA = "0xF0CAB0")]
			internal object <GetGenerator>b__0()
			{
				return null;
			}

			[Token(Token = "0x6002DC6")]
			[Address(RVA = "0xF0CB40", Offset = "0xF0CB40", VA = "0xF0CB40")]
			internal object <GetGenerator>b__1()
			{
				return null;
			}

			[Token(Token = "0x6002DC7")]
			[Address(RVA = "0xF0CB4C", Offset = "0xF0CB4C", VA = "0xF0CB4C")]
			internal object <GetGenerator>b__2()
			{
				return null;
			}

			[Token(Token = "0x6002DC8")]
			[Address(RVA = "0xF0CB90", Offset = "0xF0CB90", VA = "0xF0CB90")]
			internal object <GetGenerator>b__4()
			{
				return null;
			}

			[Token(Token = "0x6002DC9")]
			[Address(RVA = "0xF0CBFC", Offset = "0xF0CBFC", VA = "0xF0CBFC")]
			internal object <GetGenerator>b__5()
			{
				return null;
			}
		}

		[Serializable]
		[Token(Token = "0x2000DD1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979FB4", Offset = "0x979FB4")]
		private sealed class <>c
		{
			[Token(Token = "0x40021C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40021C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static ObjectGenerator <>9__16_3;

			[Token(Token = "0x6002DCB")]
			[Address(RVA = "0xF0C958", Offset = "0xF0C958", VA = "0xF0C958")]
			public <>c()
			{
			}

			[Token(Token = "0x6002DCC")]
			[Address(RVA = "0xF0C960", Offset = "0xF0C960", VA = "0xF0C960")]
			internal object <GetGenerator>b__16_3()
			{
				return null;
			}
		}

		[Token(Token = "0x4000D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<fsConfig, Dictionary<Type, fsMetaType>> _configMetaTypes;

		[Token(Token = "0x4000D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ObjectGenerator generator;

		[Token(Token = "0x4000D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9802B4", Offset = "0x9802B4")]
		private Type <reflectedType>k__BackingField;

		[Token(Token = "0x4000D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9802C4", Offset = "0x9802C4")]
		private fsMetaProperty[] <Properties>k__BackingField;

		[Token(Token = "0x17000258")]
		public Type reflectedType
		{
			[Token(Token = "0x60015FF")]
			[Address(RVA = "0xF0B924", Offset = "0xF0B924", VA = "0xF0B924")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98720C", Offset = "0x98720C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001600")]
			[Address(RVA = "0xF0B92C", Offset = "0xF0B92C", VA = "0xF0B92C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98721C", Offset = "0x98721C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000259")]
		public fsMetaProperty[] Properties
		{
			[Token(Token = "0x6001601")]
			[Address(RVA = "0xF0B934", Offset = "0xF0B934", VA = "0xF0B934")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98722C", Offset = "0x98722C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001602")]
			[Address(RVA = "0xF0B93C", Offset = "0xF0B93C", VA = "0xF0B93C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98723C", Offset = "0x98723C")]
			private set
			{
			}
		}

		[Token(Token = "0x60015FD")]
		[Address(RVA = "0xF0B604", Offset = "0xF0B604", VA = "0xF0B604")]
		public static fsMetaType Get(fsConfig config, Type type)
		{
			return null;
		}

		[Token(Token = "0x60015FE")]
		[Address(RVA = "0xF0B898", Offset = "0xF0B898", VA = "0xF0B898")]
		public static void ClearCache()
		{
		}

		[Token(Token = "0x6001603")]
		[Address(RVA = "0xF0B7B4", Offset = "0xF0B7B4", VA = "0xF0B7B4")]
		private fsMetaType(fsConfig config, Type reflectedType)
		{
		}

		[Token(Token = "0x6001604")]
		[Address(RVA = "0xF0BC78", Offset = "0xF0BC78", VA = "0xF0BC78")]
		private static void CollectProperties(fsConfig config, List<fsMetaProperty> properties, Type reflectedType)
		{
		}

		[Token(Token = "0x6001605")]
		[Address(RVA = "0xF0BF28", Offset = "0xF0BF28", VA = "0xF0BF28")]
		private static bool CanSerializeField(fsConfig config, FieldInfo field)
		{
			return default(bool);
		}

		[Token(Token = "0x6001606")]
		[Address(RVA = "0xF0B944", Offset = "0xF0B944", VA = "0xF0B944")]
		private static ObjectGenerator GetGenerator(Type reflectedType)
		{
			return null;
		}

		[Token(Token = "0x6001607")]
		[Address(RVA = "0xF0C188", Offset = "0xF0C188", VA = "0xF0C188")]
		private static bool HasDefaultConstructor(Type reflectedType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001608")]
		[Address(RVA = "0xF0C270", Offset = "0xF0C270", VA = "0xF0C270")]
		public object CreateInstance()
		{
			return null;
		}
	}
}
namespace ParadoxNotion.Serialization.FullSerializer.Internal
{
	[Token(Token = "0x200039E")]
	public class fsArrayConverter : fsConverter
	{
		[Token(Token = "0x600160A")]
		[Address(RVA = "0xC32E28", Offset = "0xC32E28", VA = "0xC32E28", Slot = "9")]
		public override bool CanProcess(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x600160B")]
		[Address(RVA = "0xC32E58", Offset = "0xC32E58", VA = "0xC32E58", Slot = "5")]
		public override bool RequestCycleSupport(Type storageType)
		{
			return default(bool);
		}

		[Token(Token = "0x600160C")]
		[Address(RVA = "0xC32E60", Offset = "0xC32E60", VA = "0xC32E60", Slot = "6")]
		public override bool RequestInheritanceSupport(Type storageType)
		{
			return default(bool);
		}

		[Token(Token = "0x600160D")]
		[Address(RVA = "0xC32E68", Offset = "0xC32E68", VA = "0xC32E68", Slot = "7")]
		public override fsResult TrySerialize(object instance, out fsData serialized, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x600160E")]
		[Address(RVA = "0xC332E4", Offset = "0xC332E4", VA = "0xC332E4", Slot = "8")]
		public override fsResult TryDeserialize(fsData data, ref object instance, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x600160F")]
		[Address(RVA = "0xC3397C", Offset = "0xC3397C", VA = "0xC3397C", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x6001610")]
		[Address(RVA = "0xC33A20", Offset = "0xC33A20", VA = "0xC33A20")]
		public fsArrayConverter()
		{
		}
	}
	[Token(Token = "0x200039F")]
	public class fsDictionaryConverter : fsConverter
	{
		[Token(Token = "0x6001611")]
		[Address(RVA = "0xC34068", Offset = "0xC34068", VA = "0xC34068", Slot = "9")]
		public override bool CanProcess(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001612")]
		[Address(RVA = "0xC3413C", Offset = "0xC3413C", VA = "0xC3413C", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x6001613")]
		[Address(RVA = "0xC341E0", Offset = "0xC341E0", VA = "0xC341E0", Slot = "7")]
		public override fsResult TrySerialize(object instance_, out fsData serialized, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001614")]
		[Address(RVA = "0xC34DF0", Offset = "0xC34DF0", VA = "0xC34DF0", Slot = "8")]
		public override fsResult TryDeserialize(fsData data, ref object instance_, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001615")]
		[Address(RVA = "0xC35C9C", Offset = "0xC35C9C", VA = "0xC35C9C")]
		public fsDictionaryConverter()
		{
		}
	}
	[Token(Token = "0x20003A0")]
	public class fsEnumConverter : fsConverter
	{
		[Token(Token = "0x6001616")]
		[Address(RVA = "0xC35CA4", Offset = "0xC35CA4", VA = "0xC35CA4", Slot = "9")]
		public override bool CanProcess(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001617")]
		[Address(RVA = "0xC35CDC", Offset = "0xC35CDC", VA = "0xC35CDC", Slot = "5")]
		public override bool RequestCycleSupport(Type storageType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001618")]
		[Address(RVA = "0xC35CE4", Offset = "0xC35CE4", VA = "0xC35CE4", Slot = "6")]
		public override bool RequestInheritanceSupport(Type storageType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001619")]
		[Address(RVA = "0xC35CEC", Offset = "0xC35CEC", VA = "0xC35CEC", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x600161A")]
		[Address(RVA = "0xC35D84", Offset = "0xC35D84", VA = "0xC35D84", Slot = "7")]
		public override fsResult TrySerialize(object instance, out fsData serialized, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x600161B")]
		[Address(RVA = "0xC362B8", Offset = "0xC362B8", VA = "0xC362B8", Slot = "8")]
		public override fsResult TryDeserialize(fsData data, ref object instance, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x600161C")]
		private static bool ArrayContains<T>(T[] values, T value)
		{
			return default(bool);
		}

		[Token(Token = "0x600161D")]
		[Address(RVA = "0xC368D4", Offset = "0xC368D4", VA = "0xC368D4")]
		public fsEnumConverter()
		{
		}
	}
	[Token(Token = "0x20003A1")]
	public class fsForwardConverter : fsConverter
	{
		[Token(Token = "0x4000D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string _memberName;

		[Token(Token = "0x600161E")]
		[Address(RVA = "0xC368DC", Offset = "0xC368DC", VA = "0xC368DC")]
		public fsForwardConverter(fsForwardAttribute attribute)
		{
		}

		[Token(Token = "0x600161F")]
		[Address(RVA = "0xC36918", Offset = "0xC36918", VA = "0xC36918", Slot = "9")]
		public override bool CanProcess(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001620")]
		[Address(RVA = "0xC3698C", Offset = "0xC3698C", VA = "0xC3698C")]
		private fsResult GetProperty(object instance, out fsMetaProperty property)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001621")]
		[Address(RVA = "0xC36C3C", Offset = "0xC36C3C", VA = "0xC36C3C", Slot = "7")]
		public override fsResult TrySerialize(object instance, out fsData serialized, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001622")]
		[Address(RVA = "0xC36E04", Offset = "0xC36E04", VA = "0xC36E04", Slot = "8")]
		public override fsResult TryDeserialize(fsData data, ref object instance, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001623")]
		[Address(RVA = "0xC36FDC", Offset = "0xC36FDC", VA = "0xC36FDC", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}
	}
	[Token(Token = "0x20003A2")]
	public class fsListConverter : fsConverter
	{
		[Token(Token = "0x6001624")]
		[Address(RVA = "0xC37080", Offset = "0xC37080", VA = "0xC37080", Slot = "9")]
		public override bool CanProcess(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001625")]
		[Address(RVA = "0xC37154", Offset = "0xC37154", VA = "0xC37154", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x6001626")]
		[Address(RVA = "0xC371F8", Offset = "0xC371F8", VA = "0xC371F8", Slot = "7")]
		public override fsResult TrySerialize(object instance_, out fsData serialized, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001627")]
		[Address(RVA = "0xC376E4", Offset = "0xC376E4", VA = "0xC376E4", Slot = "8")]
		public override fsResult TryDeserialize(fsData data, ref object instance_, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001628")]
		[Address(RVA = "0xC37A34", Offset = "0xC37A34", VA = "0xC37A34")]
		public fsListConverter()
		{
		}
	}
	[Token(Token = "0x20003A3")]
	public class fsPrimitiveConverter : fsConverter
	{
		[Token(Token = "0x6001629")]
		[Address(RVA = "0xC37B44", Offset = "0xC37B44", VA = "0xC37B44", Slot = "9")]
		public override bool CanProcess(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x600162A")]
		[Address(RVA = "0xC37C44", Offset = "0xC37C44", VA = "0xC37C44", Slot = "5")]
		public override bool RequestCycleSupport(Type storageType)
		{
			return default(bool);
		}

		[Token(Token = "0x600162B")]
		[Address(RVA = "0xC37C4C", Offset = "0xC37C4C", VA = "0xC37C4C", Slot = "6")]
		public override bool RequestInheritanceSupport(Type storageType)
		{
			return default(bool);
		}

		[Token(Token = "0x600162C")]
		[Address(RVA = "0xC37C54", Offset = "0xC37C54", VA = "0xC37C54")]
		private static bool UseBool(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x600162D")]
		[Address(RVA = "0xC37CD8", Offset = "0xC37CD8", VA = "0xC37CD8")]
		private static bool UseInt64(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x600162E")]
		[Address(RVA = "0xC37F54", Offset = "0xC37F54", VA = "0xC37F54")]
		private static bool UseDouble(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x600162F")]
		[Address(RVA = "0xC3807C", Offset = "0xC3807C", VA = "0xC3807C")]
		private static bool UseString(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001630")]
		[Address(RVA = "0xC38160", Offset = "0xC38160", VA = "0xC38160", Slot = "7")]
		public override fsResult TrySerialize(object instance, out fsData serialized, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001631")]
		[Address(RVA = "0xC38928", Offset = "0xC38928", VA = "0xC38928", Slot = "8")]
		public override fsResult TryDeserialize(fsData storage, ref object instance, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001632")]
		[Address(RVA = "0xC39398", Offset = "0xC39398", VA = "0xC39398")]
		public fsPrimitiveConverter()
		{
		}
	}
	[Token(Token = "0x20003A4")]
	public class fsReflectedConverter : fsConverter
	{
		[Token(Token = "0x6001633")]
		[Address(RVA = "0xC393A0", Offset = "0xC393A0", VA = "0xC393A0", Slot = "9")]
		public override bool CanProcess(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001634")]
		[Address(RVA = "0xC39468", Offset = "0xC39468", VA = "0xC39468", Slot = "7")]
		public override fsResult TrySerialize(object instance, out fsData serialized, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001635")]
		[Address(RVA = "0xC39868", Offset = "0xC39868", VA = "0xC39868", Slot = "8")]
		public override fsResult TryDeserialize(fsData data, ref object instance, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001636")]
		[Address(RVA = "0xC39B78", Offset = "0xC39B78", VA = "0xC39B78", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x6001637")]
		[Address(RVA = "0xC39C1C", Offset = "0xC39C1C", VA = "0xC39C1C")]
		public fsReflectedConverter()
		{
		}
	}
	[Token(Token = "0x20003A5")]
	public class fsTypeConverter : fsConverter
	{
		[Token(Token = "0x6001638")]
		[Address(RVA = "0xC39C24", Offset = "0xC39C24", VA = "0xC39C24", Slot = "9")]
		public override bool CanProcess(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001639")]
		[Address(RVA = "0xC39CBC", Offset = "0xC39CBC", VA = "0xC39CBC", Slot = "5")]
		public override bool RequestCycleSupport(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x600163A")]
		[Address(RVA = "0xC39CC4", Offset = "0xC39CC4", VA = "0xC39CC4", Slot = "6")]
		public override bool RequestInheritanceSupport(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x600163B")]
		[Address(RVA = "0xC39CCC", Offset = "0xC39CCC", VA = "0xC39CCC", Slot = "7")]
		public override fsResult TrySerialize(object instance, out fsData serialized, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x600163C")]
		[Address(RVA = "0xC39E08", Offset = "0xC39E08", VA = "0xC39E08", Slot = "8")]
		public override fsResult TryDeserialize(fsData data, ref object instance, Type storageType)
		{
			return default(fsResult);
		}

		[Token(Token = "0x600163D")]
		[Address(RVA = "0xC39FAC", Offset = "0xC39FAC", VA = "0xC39FAC", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x600163E")]
		[Address(RVA = "0xC39FB4", Offset = "0xC39FB4", VA = "0xC39FB4")]
		public fsTypeConverter()
		{
		}
	}
	[Token(Token = "0x20003A6")]
	public class fsCyclicReferenceManager
	{
		[Token(Token = "0x2000DD2")]
		private class ObjectReferenceEqualityComparator : IEqualityComparer<object>
		{
			[Token(Token = "0x40021C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly IEqualityComparer<object> Instance;

			[Token(Token = "0x6002DCD")]
			[Address(RVA = "0xC33FE4", Offset = "0xC33FE4", VA = "0xC33FE4", Slot = "4")]
			private bool System.Collections.Generic.IEqualityComparer<System.Object>.Equals(object x, object y)
			{
				return default(bool);
			}

			[Token(Token = "0x6002DCE")]
			[Address(RVA = "0xC33FF0", Offset = "0xC33FF0", VA = "0xC33FF0", Slot = "5")]
			private int System.Collections.Generic.IEqualityComparer<System.Object>.GetHashCode(object obj)
			{
				return default(int);
			}

			[Token(Token = "0x6002DCF")]
			[Address(RVA = "0xC33FFC", Offset = "0xC33FFC", VA = "0xC33FFC")]
			public ObjectReferenceEqualityComparator()
			{
			}
		}

		[Token(Token = "0x4000D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<object, int> _objectIds;

		[Token(Token = "0x4000D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int _nextId;

		[Token(Token = "0x4000D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<int, object> _marked;

		[Token(Token = "0x4000D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int _depth;

		[Token(Token = "0x600163F")]
		[Address(RVA = "0xC33A30", Offset = "0xC33A30", VA = "0xC33A30")]
		public fsCyclicReferenceManager()
		{
		}

		[Token(Token = "0x6001640")]
		[Address(RVA = "0xC33B04", Offset = "0xC33B04", VA = "0xC33B04")]
		public void Enter()
		{
		}

		[Token(Token = "0x6001641")]
		[Address(RVA = "0xC33B14", Offset = "0xC33B14", VA = "0xC33B14")]
		public bool Exit()
		{
			return default(bool);
		}

		[Token(Token = "0x6001642")]
		[Address(RVA = "0xC33C08", Offset = "0xC33C08", VA = "0xC33C08")]
		public object GetReferenceObject(int id)
		{
			return null;
		}

		[Token(Token = "0x6001643")]
		[Address(RVA = "0xC33D14", Offset = "0xC33D14", VA = "0xC33D14")]
		public void AddReferenceWithId(int id, object reference)
		{
		}

		[Token(Token = "0x6001644")]
		[Address(RVA = "0xC33D8C", Offset = "0xC33D8C", VA = "0xC33D8C")]
		public int GetReferenceId(object item)
		{
			return default(int);
		}

		[Token(Token = "0x6001645")]
		[Address(RVA = "0xC33E4C", Offset = "0xC33E4C", VA = "0xC33E4C")]
		public bool IsReference(object item)
		{
			return default(bool);
		}

		[Token(Token = "0x6001646")]
		[Address(RVA = "0xC33ECC", Offset = "0xC33ECC", VA = "0xC33ECC")]
		public void MarkSerialized(object item)
		{
		}
	}
	[Token(Token = "0x20003A7")]
	public class fsMetaProperty
	{
		[Token(Token = "0x4000D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private FieldInfo _fieldInfo;

		[Token(Token = "0x4000D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9802D4", Offset = "0x9802D4")]
		private Type <StorageType>k__BackingField;

		[Token(Token = "0x4000D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9802E4", Offset = "0x9802E4")]
		private string <JsonName>k__BackingField;

		[Token(Token = "0x1700025A")]
		public Type StorageType
		{
			[Token(Token = "0x6001647")]
			[Address(RVA = "0xC36DFC", Offset = "0xC36DFC", VA = "0xC36DFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98724C", Offset = "0x98724C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001648")]
			[Address(RVA = "0xC37A3C", Offset = "0xC37A3C", VA = "0xC37A3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98725C", Offset = "0x98725C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700025B")]
		public string JsonName
		{
			[Token(Token = "0x6001649")]
			[Address(RVA = "0xC37A44", Offset = "0xC37A44", VA = "0xC37A44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98726C", Offset = "0x98726C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600164A")]
			[Address(RVA = "0xC37A4C", Offset = "0xC37A4C", VA = "0xC37A4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98727C", Offset = "0x98727C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700025C")]
		public string MemberName
		{
			[Token(Token = "0x600164B")]
			[Address(RVA = "0xC36C08", Offset = "0xC36C08", VA = "0xC36C08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600164C")]
		[Address(RVA = "0xC37A54", Offset = "0xC37A54", VA = "0xC37A54")]
		internal fsMetaProperty(fsConfig config, FieldInfo field)
		{
		}

		[Token(Token = "0x600164D")]
		[Address(RVA = "0xC36F94", Offset = "0xC36F94", VA = "0xC36F94")]
		public void Write(object context, object value)
		{
		}

		[Token(Token = "0x600164E")]
		[Address(RVA = "0xC36DBC", Offset = "0xC36DBC", VA = "0xC36DBC")]
		public object Read(object context)
		{
			return null;
		}
	}
}
namespace ParadoxNotion.Serialization.FullSerializer.Internal.DirectConverters
{
	[Token(Token = "0x20003A8")]
	public class AnimationCurve_DirectConverter : fsDirectConverter<AnimationCurve>
	{
		[Token(Token = "0x600164F")]
		[Address(RVA = "0xC2F2C0", Offset = "0xC2F2C0", VA = "0xC2F2C0", Slot = "10")]
		protected override fsResult DoSerialize(AnimationCurve model, Dictionary<string, fsData> serialized)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001650")]
		[Address(RVA = "0xC2F45C", Offset = "0xC2F45C", VA = "0xC2F45C", Slot = "11")]
		protected override fsResult DoDeserialize(Dictionary<string, fsData> data, ref AnimationCurve model)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001651")]
		[Address(RVA = "0xC2F6A4", Offset = "0xC2F6A4", VA = "0xC2F6A4", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x6001652")]
		[Address(RVA = "0xC2F700", Offset = "0xC2F700", VA = "0xC2F700")]
		public AnimationCurve_DirectConverter()
		{
		}
	}
	[Token(Token = "0x20003A9")]
	public class Bounds_DirectConverter : fsDirectConverter<Bounds>
	{
		[Token(Token = "0x6001653")]
		[Address(RVA = "0xC2F750", Offset = "0xC2F750", VA = "0xC2F750", Slot = "10")]
		protected override fsResult DoSerialize(Bounds model, Dictionary<string, fsData> serialized)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001654")]
		[Address(RVA = "0xC2F868", Offset = "0xC2F868", VA = "0xC2F868", Slot = "11")]
		protected override fsResult DoDeserialize(Dictionary<string, fsData> data, ref Bounds model)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001655")]
		[Address(RVA = "0xC2F9EC", Offset = "0xC2F9EC", VA = "0xC2F9EC", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x6001656")]
		[Address(RVA = "0xC2FA4C", Offset = "0xC2FA4C", VA = "0xC2FA4C")]
		public Bounds_DirectConverter()
		{
		}
	}
	[Token(Token = "0x20003AA")]
	public class Gradient_DirectConverter : fsDirectConverter<Gradient>
	{
		[Token(Token = "0x6001657")]
		[Address(RVA = "0xC3188C", Offset = "0xC3188C", VA = "0xC3188C", Slot = "10")]
		protected override fsResult DoSerialize(Gradient model, Dictionary<string, fsData> serialized)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001658")]
		[Address(RVA = "0xC319CC", Offset = "0xC319CC", VA = "0xC319CC", Slot = "11")]
		protected override fsResult DoDeserialize(Dictionary<string, fsData> data, ref Gradient model)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001659")]
		[Address(RVA = "0xC31B90", Offset = "0xC31B90", VA = "0xC31B90", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x600165A")]
		[Address(RVA = "0xC31BEC", Offset = "0xC31BEC", VA = "0xC31BEC")]
		public Gradient_DirectConverter()
		{
		}
	}
	[Token(Token = "0x20003AB")]
	public class GUIStyle_DirectConverter : fsDirectConverter<GUIStyle>
	{
		[Token(Token = "0x600165B")]
		[Address(RVA = "0xC2FE70", Offset = "0xC2FE70", VA = "0xC2FE70", Slot = "10")]
		protected override fsResult DoSerialize(GUIStyle model, Dictionary<string, fsData> serialized)
		{
			return default(fsResult);
		}

		[Token(Token = "0x600165C")]
		[Address(RVA = "0xC3089C", Offset = "0xC3089C", VA = "0xC3089C", Slot = "11")]
		protected override fsResult DoDeserialize(Dictionary<string, fsData> data, ref GUIStyle model)
		{
			return default(fsResult);
		}

		[Token(Token = "0x600165D")]
		[Address(RVA = "0xC317E0", Offset = "0xC317E0", VA = "0xC317E0", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x600165E")]
		[Address(RVA = "0xC3183C", Offset = "0xC3183C", VA = "0xC3183C")]
		public GUIStyle_DirectConverter()
		{
		}
	}
	[Token(Token = "0x20003AC")]
	public class GUIStyleState_DirectConverter : fsDirectConverter<GUIStyleState>
	{
		[Token(Token = "0x600165F")]
		[Address(RVA = "0xC2FA9C", Offset = "0xC2FA9C", VA = "0xC2FA9C", Slot = "10")]
		protected override fsResult DoSerialize(GUIStyleState model, Dictionary<string, fsData> serialized)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001660")]
		[Address(RVA = "0xC2FBD8", Offset = "0xC2FBD8", VA = "0xC2FBD8", Slot = "11")]
		protected override fsResult DoDeserialize(Dictionary<string, fsData> data, ref GUIStyleState model)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001661")]
		[Address(RVA = "0xC2FDC4", Offset = "0xC2FDC4", VA = "0xC2FDC4", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x6001662")]
		[Address(RVA = "0xC2FE20", Offset = "0xC2FE20", VA = "0xC2FE20")]
		public GUIStyleState_DirectConverter()
		{
		}
	}
	[Token(Token = "0x20003AD")]
	public class Keyframe_DirectConverter : fsDirectConverter<Keyframe>
	{
		[Token(Token = "0x6001663")]
		[Address(RVA = "0xC31C3C", Offset = "0xC31C3C", VA = "0xC31C3C", Slot = "10")]
		protected override fsResult DoSerialize(Keyframe model, Dictionary<string, fsData> serialized)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001664")]
		[Address(RVA = "0xC31E44", Offset = "0xC31E44", VA = "0xC31E44", Slot = "11")]
		protected override fsResult DoDeserialize(Dictionary<string, fsData> data, ref Keyframe model)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001665")]
		[Address(RVA = "0xC320EC", Offset = "0xC320EC", VA = "0xC320EC", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x6001666")]
		[Address(RVA = "0xC32150", Offset = "0xC32150", VA = "0xC32150")]
		public Keyframe_DirectConverter()
		{
		}
	}
	[Token(Token = "0x20003AE")]
	public class LayerMask_DirectConverter : fsDirectConverter<LayerMask>
	{
		[Token(Token = "0x6001667")]
		[Address(RVA = "0xC321A0", Offset = "0xC321A0", VA = "0xC321A0", Slot = "10")]
		protected override fsResult DoSerialize(LayerMask model, Dictionary<string, fsData> serialized)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001668")]
		[Address(RVA = "0xC32274", Offset = "0xC32274", VA = "0xC32274", Slot = "11")]
		protected override fsResult DoDeserialize(Dictionary<string, fsData> data, ref LayerMask model)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001669")]
		[Address(RVA = "0xC32374", Offset = "0xC32374", VA = "0xC32374", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x600166A")]
		[Address(RVA = "0xC323C8", Offset = "0xC323C8", VA = "0xC323C8")]
		public LayerMask_DirectConverter()
		{
		}
	}
	[Token(Token = "0x20003AF")]
	public class Rect_DirectConverter : fsDirectConverter<Rect>
	{
		[Token(Token = "0x600166B")]
		[Address(RVA = "0xC32984", Offset = "0xC32984", VA = "0xC32984", Slot = "10")]
		protected override fsResult DoSerialize(Rect model, Dictionary<string, fsData> serialized)
		{
			return default(fsResult);
		}

		[Token(Token = "0x600166C")]
		[Address(RVA = "0xC32B44", Offset = "0xC32B44", VA = "0xC32B44", Slot = "11")]
		protected override fsResult DoDeserialize(Dictionary<string, fsData> data, ref Rect model)
		{
			return default(fsResult);
		}

		[Token(Token = "0x600166D")]
		[Address(RVA = "0xC32D7C", Offset = "0xC32D7C", VA = "0xC32D7C", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x600166E")]
		[Address(RVA = "0xC32DD8", Offset = "0xC32DD8", VA = "0xC32DD8")]
		public Rect_DirectConverter()
		{
		}
	}
	[Token(Token = "0x20003B0")]
	public class RectOffset_DirectConverter : fsDirectConverter<RectOffset>
	{
		[Token(Token = "0x600166F")]
		[Address(RVA = "0xC32418", Offset = "0xC32418", VA = "0xC32418", Slot = "10")]
		protected override fsResult DoSerialize(RectOffset model, Dictionary<string, fsData> serialized)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001670")]
		[Address(RVA = "0xC32608", Offset = "0xC32608", VA = "0xC32608", Slot = "11")]
		protected override fsResult DoDeserialize(Dictionary<string, fsData> data, ref RectOffset model)
		{
			return default(fsResult);
		}

		[Token(Token = "0x6001671")]
		[Address(RVA = "0xC328D8", Offset = "0xC328D8", VA = "0xC328D8", Slot = "4")]
		public override object CreateInstance(fsData data, Type storageType)
		{
			return null;
		}

		[Token(Token = "0x6001672")]
		[Address(RVA = "0xC32934", Offset = "0xC32934", VA = "0xC32934")]
		public RectOffset_DirectConverter()
		{
		}
	}
}
namespace ParadoxNotion.Design
{
	[Token(Token = "0x20003B1")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x9774F8", Offset = "0x9774F8")]
	public class SpoofAOTAttribute : Attribute
	{
		[Token(Token = "0x6001673")]
		[Address(RVA = "0xB30B80", Offset = "0xB30B80", VA = "0xB30B80")]
		public SpoofAOTAttribute()
		{
		}
	}
	[Token(Token = "0x20003B2")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x97750C", Offset = "0x97750C")]
	public class DoNotListAttribute : Attribute
	{
		[Token(Token = "0x6001674")]
		[Address(RVA = "0xB308D0", Offset = "0xB308D0", VA = "0xB308D0")]
		public DoNotListAttribute()
		{
		}
	}
	[Token(Token = "0x20003B3")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x977520", Offset = "0x977520")]
	public class ProtectedSingletonAttribute : Attribute
	{
		[Token(Token = "0x6001675")]
		[Address(RVA = "0xB30A74", Offset = "0xB30A74", VA = "0xB30A74")]
		public ProtectedSingletonAttribute()
		{
		}
	}
	[Token(Token = "0x20003B4")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x977534", Offset = "0x977534")]
	public class ExecutionPriorityAttribute : Attribute
	{
		[Token(Token = "0x4000D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int priority;

		[Token(Token = "0x6001676")]
		[Address(RVA = "0xB308E0", Offset = "0xB308E0", VA = "0xB308E0")]
		public ExecutionPriorityAttribute(int priority)
		{
		}
	}
	[Token(Token = "0x20003B5")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x977548", Offset = "0x977548")]
	public class ExposeAsDefinitionAttribute : Attribute
	{
		[Token(Token = "0x6001677")]
		[Address(RVA = "0xB3090C", Offset = "0xB3090C", VA = "0xB3090C")]
		public ExposeAsDefinitionAttribute()
		{
		}
	}
	[Token(Token = "0x20003B6")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x97755C", Offset = "0x97755C")]
	public class ExposeFieldAttribute : Attribute
	{
		[Token(Token = "0x6001678")]
		[Address(RVA = "0xB30914", Offset = "0xB30914", VA = "0xB30914")]
		public ExposeFieldAttribute()
		{
		}
	}
	[Token(Token = "0x20003B7")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x977570", Offset = "0x977570")]
	public class NameAttribute : Attribute
	{
		[Token(Token = "0x4000D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string name;

		[Token(Token = "0x4000D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly int priority;

		[Token(Token = "0x6001679")]
		[Address(RVA = "0xB30A0C", Offset = "0xB30A0C", VA = "0xB30A0C")]
		public NameAttribute(string name, int priority = 0)
		{
		}
	}
	[Token(Token = "0x20003B8")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x977584", Offset = "0x977584")]
	public class CategoryAttribute : Attribute
	{
		[Token(Token = "0x4000D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string category;

		[Token(Token = "0x600167A")]
		[Address(RVA = "0xB30844", Offset = "0xB30844", VA = "0xB30844")]
		public CategoryAttribute(string category)
		{
		}
	}
	[Token(Token = "0x20003B9")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x977598", Offset = "0x977598")]
	public class DescriptionAttribute : Attribute
	{
		[Token(Token = "0x4000D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string description;

		[Token(Token = "0x600167B")]
		[Address(RVA = "0xB308A4", Offset = "0xB308A4", VA = "0xB308A4")]
		public DescriptionAttribute(string description)
		{
		}
	}
	[Token(Token = "0x20003BA")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x9775AC", Offset = "0x9775AC")]
	public class IconAttribute : Attribute
	{
		[Token(Token = "0x4000D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string iconName;

		[Token(Token = "0x4000D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly bool fixedColor;

		[Token(Token = "0x4000D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string runtimeIconTypeCallback;

		[Token(Token = "0x4000D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly Type fromType;

		[Token(Token = "0x600167C")]
		[Address(RVA = "0xB30924", Offset = "0xB30924", VA = "0xB30924")]
		public IconAttribute(string iconName = "", bool fixedColor = false, string runtimeIconTypeCallback = "")
		{
		}

		[Token(Token = "0x600167D")]
		[Address(RVA = "0xB3096C", Offset = "0xB3096C", VA = "0xB3096C")]
		public IconAttribute(Type fromType)
		{
		}
	}
	[Token(Token = "0x20003BB")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x9775C0", Offset = "0x9775C0")]
	public class ColorAttribute : Attribute
	{
		[Token(Token = "0x4000D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string hexColor;

		[Token(Token = "0x600167E")]
		[Address(RVA = "0xB30870", Offset = "0xB30870", VA = "0xB30870")]
		public ColorAttribute(string hexColor)
		{
		}
	}
	[Token(Token = "0x20003BC")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x9775D4", Offset = "0x9775D4")]
	public abstract class DrawerAttribute : Attribute
	{
		[Token(Token = "0x1700025D")]
		public virtual int priority
		{
			[Token(Token = "0x600167F")]
			[Address(RVA = "0xB308D8", Offset = "0xB308D8", VA = "0xB308D8", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001680")]
		[Address(RVA = "0xB3083C", Offset = "0xB3083C", VA = "0xB3083C")]
		protected DrawerAttribute()
		{
		}
	}
	[Token(Token = "0x20003BD")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x9775E8", Offset = "0x9775E8")]
	public class ShowIfAttribute : DrawerAttribute
	{
		[Token(Token = "0x4000D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string fieldName;

		[Token(Token = "0x4000D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly int checkValue;

		[Token(Token = "0x1700025E")]
		public override int priority
		{
			[Token(Token = "0x6001681")]
			[Address(RVA = "0xB30AC4", Offset = "0xB30AC4", VA = "0xB30AC4", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001682")]
		[Address(RVA = "0xB30ACC", Offset = "0xB30ACC", VA = "0xB30ACC")]
		public ShowIfAttribute(string fieldName, int checkValue)
		{
		}
	}
	[Token(Token = "0x20003BE")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x9775FC", Offset = "0x9775FC")]
	public class RequiredFieldAttribute : DrawerAttribute
	{
		[Token(Token = "0x1700025F")]
		public override int priority
		{
			[Token(Token = "0x6001683")]
			[Address(RVA = "0xB30A7C", Offset = "0xB30A7C", VA = "0xB30A7C", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001684")]
		[Address(RVA = "0xB30A84", Offset = "0xB30A84", VA = "0xB30A84")]
		public RequiredFieldAttribute()
		{
		}
	}
	[Token(Token = "0x20003BF")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x977610", Offset = "0x977610")]
	public class CallbackAttribute : DrawerAttribute
	{
		[Token(Token = "0x4000D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string methodName;

		[Token(Token = "0x17000260")]
		public override int priority
		{
			[Token(Token = "0x6001685")]
			[Address(RVA = "0xB30808", Offset = "0xB30808", VA = "0xB30808", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001686")]
		[Address(RVA = "0xB30810", Offset = "0xB30810", VA = "0xB30810")]
		public CallbackAttribute(string methodName)
		{
		}
	}
	[Token(Token = "0x20003C0")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x977624", Offset = "0x977624")]
	public class MinValueAttribute : DrawerAttribute
	{
		[Token(Token = "0x4000D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly float min;

		[Token(Token = "0x17000261")]
		public override int priority
		{
			[Token(Token = "0x6001687")]
			[Address(RVA = "0xB309A0", Offset = "0xB309A0", VA = "0xB309A0", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001688")]
		[Address(RVA = "0xB309A8", Offset = "0xB309A8", VA = "0xB309A8")]
		public MinValueAttribute(float min)
		{
		}

		[Token(Token = "0x6001689")]
		[Address(RVA = "0xB309DC", Offset = "0xB309DC", VA = "0xB309DC")]
		public MinValueAttribute(int min)
		{
		}
	}
	[Token(Token = "0x20003C1")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x977638", Offset = "0x977638")]
	public class DelayedFieldAttribute : DrawerAttribute
	{
		[Token(Token = "0x600168A")]
		[Address(RVA = "0xB3089C", Offset = "0xB3089C", VA = "0xB3089C")]
		public DelayedFieldAttribute()
		{
		}
	}
	[Token(Token = "0x20003C2")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x97764C", Offset = "0x97764C")]
	public class LayerFieldAttribute : DrawerAttribute
	{
		[Token(Token = "0x600168B")]
		[Address(RVA = "0xB30998", Offset = "0xB30998", VA = "0xB30998")]
		public LayerFieldAttribute()
		{
		}
	}
	[Token(Token = "0x20003C3")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x977660", Offset = "0x977660")]
	public class TagFieldAttribute : DrawerAttribute
	{
		[Token(Token = "0x600168C")]
		[Address(RVA = "0xB30B88", Offset = "0xB30B88", VA = "0xB30B88")]
		public TagFieldAttribute()
		{
		}
	}
	[Token(Token = "0x20003C4")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x977674", Offset = "0x977674")]
	public class TextAreaFieldAttribute : DrawerAttribute
	{
		[Token(Token = "0x4000D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int numberOfLines;

		[Token(Token = "0x600168D")]
		[Address(RVA = "0xB30B90", Offset = "0xB30B90", VA = "0xB30B90")]
		public TextAreaFieldAttribute(int numberOfLines)
		{
		}
	}
	[Token(Token = "0x20003C5")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x977688", Offset = "0x977688")]
	public class PopupFieldAttribute : DrawerAttribute
	{
		[Token(Token = "0x4000D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly object[] options;

		[Token(Token = "0x600168E")]
		[Address(RVA = "0xB30A48", Offset = "0xB30A48", VA = "0xB30A48")]
		public PopupFieldAttribute(params object[] options)
		{
		}
	}
	[Token(Token = "0x20003C6")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x97769C", Offset = "0x97769C")]
	public class SliderFieldAttribute : DrawerAttribute
	{
		[Token(Token = "0x4000D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly float min;

		[Token(Token = "0x4000D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly float max;

		[Token(Token = "0x600168F")]
		[Address(RVA = "0xB30B08", Offset = "0xB30B08", VA = "0xB30B08")]
		public SliderFieldAttribute(float min, float max)
		{
		}

		[Token(Token = "0x6001690")]
		[Address(RVA = "0xB30B40", Offset = "0xB30B40", VA = "0xB30B40")]
		public SliderFieldAttribute(int min, int max)
		{
		}
	}
	[Token(Token = "0x20003C7")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x9776B0", Offset = "0x9776B0")]
	public class ShowButtonAttribute : DrawerAttribute
	{
		[Token(Token = "0x4000D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string buttonTitle;

		[Token(Token = "0x4000D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string methodnameCallback;

		[Token(Token = "0x6001691")]
		[Address(RVA = "0xB30A8C", Offset = "0xB30A8C", VA = "0xB30A8C")]
		public ShowButtonAttribute(string buttonTitle, string methodnameCallback)
		{
		}
	}
	[Token(Token = "0x20003C8")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x9776C4", Offset = "0x9776C4")]
	public class ForceObjectFieldAttribute : DrawerAttribute
	{
		[Token(Token = "0x6001692")]
		[Address(RVA = "0xB3091C", Offset = "0xB3091C", VA = "0xB3091C")]
		public ForceObjectFieldAttribute()
		{
		}
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x20003C9")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4000D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x4000D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x4000D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x4000D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x4000D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x17000262")]
		public bool Highlight
		{
			[Token(Token = "0x6001693")]
			[Address(RVA = "0xDECB30", Offset = "0xDECB30", VA = "0xDECB30")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001694")]
			[Address(RVA = "0xDECB38", Offset = "0xDECB38", VA = "0xDECB38")]
			set
			{
			}
		}

		[Token(Token = "0x6001695")]
		[Address(RVA = "0xDECB44", Offset = "0xDECB44", VA = "0xDECB44")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x6001696")]
		[Address(RVA = "0xDECD6C", Offset = "0xDECD6C", VA = "0xDECD6C", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x6001697")]
		[Address(RVA = "0xDECD94", Offset = "0xDECD94", VA = "0xDECD94", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6001698")]
		[Address(RVA = "0xDECDBC", Offset = "0xDECDBC", VA = "0xDECDBC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001699")]
		[Address(RVA = "0xDECC10", Offset = "0xDECC10", VA = "0xDECC10")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x600169A")]
		[Address(RVA = "0xDED064", Offset = "0xDED064", VA = "0xDED064")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x20003CA")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4000D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x4000D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x4000D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x4000D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x4000D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x4000D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x4000D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x17000263")]
		public bool InRange
		{
			[Token(Token = "0x600169C")]
			[Address(RVA = "0xDED65C", Offset = "0xDED65C", VA = "0xDED65C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600169D")]
			[Address(RVA = "0xDED664", Offset = "0xDED664", VA = "0xDED664")]
			set
			{
			}
		}

		[Token(Token = "0x17000264")]
		public bool Targeted
		{
			[Token(Token = "0x600169E")]
			[Address(RVA = "0xDED874", Offset = "0xDED874", VA = "0xDED874")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600169F")]
			[Address(RVA = "0xDED87C", Offset = "0xDED87C", VA = "0xDED87C")]
			set
			{
			}
		}

		[Token(Token = "0x60016A0")]
		[Address(RVA = "0xDED888", Offset = "0xDED888", VA = "0xDED888", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60016A1")]
		[Address(RVA = "0xDED670", Offset = "0xDED670", VA = "0xDED670")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x60016A2")]
		[Address(RVA = "0xDEDAE8", Offset = "0xDEDAE8", VA = "0xDEDAE8")]
		public void SetColor(Color focusColor)
		{
		}

		[Token(Token = "0x60016A3")]
		[Address(RVA = "0xDEDB80", Offset = "0xDEDB80", VA = "0xDEDB80")]
		public void ClearColor()
		{
		}

		[Token(Token = "0x60016A4")]
		[Address(RVA = "0xDEDC20", Offset = "0xDEDC20", VA = "0xDEDC20")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x20003CB")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9776D8", Offset = "0x9776D8")]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x4000D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		public Color m_focusColor;

		[Token(Token = "0x4000D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x4000D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x4000D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x4000D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x4000D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x4000D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x4000D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x4000D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x4000D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x4000D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x4000D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x4000D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x4000D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		protected Collider m_targetCollider;

		[Token(Token = "0x17000265")]
		public bool UseSpherecast
		{
			[Token(Token = "0x60016A5")]
			[Address(RVA = "0xDEDC28", Offset = "0xDEDC28", VA = "0xDEDC28")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60016A6")]
			[Address(RVA = "0xDEDC30", Offset = "0xDEDC30", VA = "0xDEDC30")]
			set
			{
			}
		}

		[Token(Token = "0x60016A7")]
		[Address(RVA = "0xDEDC4C", Offset = "0xDEDC4C", VA = "0xDEDC4C", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60016A8")]
		[Address(RVA = "0xDEDDFC", Offset = "0xDEDDFC", VA = "0xDEDDFC", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x60016A9")]
		[Address(RVA = "0xDEE908", Offset = "0xDEE908", VA = "0xDEE908", Slot = "8")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x60016AA")]
		[Address(RVA = "0xDEF0EC", Offset = "0xDEF0EC", VA = "0xDEF0EC", Slot = "9")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x60016AB")]
		[Address(RVA = "0xDEF54C", Offset = "0xDEF54C", VA = "0xDEF54C")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x60016AC")]
		[Address(RVA = "0xDEE11C", Offset = "0xDEE11C", VA = "0xDEE11C")]
		protected bool FindTarget(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x60016AD")]
		[Address(RVA = "0xDEF644", Offset = "0xDEF644", VA = "0xDEF644")]
		protected bool FindTargetWithSpherecast(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x60016AE")]
		[Address(RVA = "0xDEFADC", Offset = "0xDEFADC", VA = "0xDEFADC", Slot = "10")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x60016AF")]
		[Address(RVA = "0xDEFAF4", Offset = "0xDEFAF4", VA = "0xDEFAF4", Slot = "11")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x60016B0")]
		[Address(RVA = "0xDEFAFC", Offset = "0xDEFAFC", VA = "0xDEFAFC")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x20003CC")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x2000DD3")]
		public enum CrosshairState
		{
			[Token(Token = "0x40021C7")]
			Disabled,
			[Token(Token = "0x40021C8")]
			Enabled,
			[Token(Token = "0x40021C9")]
			Targeted
		}

		[Token(Token = "0x4000D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x4000D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x4000D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x4000D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x60016B1")]
		[Address(RVA = "0xDF17D0", Offset = "0xDF17D0", VA = "0xDF17D0")]
		private void Start()
		{
		}

		[Token(Token = "0x60016B2")]
		[Address(RVA = "0xDEDA14", Offset = "0xDEDA14", VA = "0xDEDA14")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x60016B3")]
		[Address(RVA = "0xDF1840", Offset = "0xDF1840", VA = "0xDF1840")]
		private void Update()
		{
		}

		[Token(Token = "0x60016B4")]
		[Address(RVA = "0xDF1898", Offset = "0xDF1898", VA = "0xDF1898")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x20003CD")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x4000D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x4000D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x4000D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x60016B5")]
		[Address(RVA = "0xDF1654", Offset = "0xDF1654", VA = "0xDF1654")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x60016B6")]
		[Address(RVA = "0xDF1710", Offset = "0xDF1710", VA = "0xDF1710")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x60016B7")]
		[Address(RVA = "0xDF17C8", Offset = "0xDF17C8", VA = "0xDF17C8")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x20003CE")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x60016B8")]
		[Address(RVA = "0xCB2FA0", Offset = "0xCB2FA0", VA = "0xCB2FA0")]
		private void Start()
		{
		}

		[Token(Token = "0x60016B9")]
		[Address(RVA = "0xCB306C", Offset = "0xCB306C", VA = "0xCB306C")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60016BA")]
		[Address(RVA = "0xCB3078", Offset = "0xCB3078", VA = "0xCB3078")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60016BB")]
		[Address(RVA = "0xCB3084", Offset = "0xCB3084", VA = "0xCB3084")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x20003CF")]
	public class BoneCapsuleTriggerLogic : MonoBehaviour
	{
		[Token(Token = "0x4000D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x4000D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x4000D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x60016BC")]
		[Address(RVA = "0xDEB3B8", Offset = "0xDEB3B8", VA = "0xDEB3B8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60016BD")]
		[Address(RVA = "0xDEB418", Offset = "0xDEB418", VA = "0xDEB418")]
		private void Update()
		{
		}

		[Token(Token = "0x60016BE")]
		[Address(RVA = "0xDEB734", Offset = "0xDEB734", VA = "0xDEB734")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60016BF")]
		[Address(RVA = "0xDEB850", Offset = "0xDEB850", VA = "0xDEB850")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60016C0")]
		[Address(RVA = "0xDEB41C", Offset = "0xDEB41C", VA = "0xDEB41C")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x60016C1")]
		[Address(RVA = "0xDEB964", Offset = "0xDEB964", VA = "0xDEB964")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x20003D0")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x2000DD4")]
		public enum ContactTest
		{
			[Token(Token = "0x40021CB")]
			PerpenTest,
			[Token(Token = "0x40021CC")]
			BackwardsPress
		}

		[Token(Token = "0x4000D7C")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x4000D7D")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x4000D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x4000D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x4000D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x4000D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x4000D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x4000D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x4000D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 _localButtonDirection;

		[Token(Token = "0x4000D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x4000D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _toolTagsMask;

		[Token(Token = "0x4000D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private InteractableState _currentButtonState;

		[Token(Token = "0x4000D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x17000266")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x60016C2")]
			[Address(RVA = "0xDEB9FC", Offset = "0xDEB9FC", VA = "0xDEB9FC", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000267")]
		public Vector3 LocalButtonDirection
		{
			[Token(Token = "0x60016C3")]
			[Address(RVA = "0xDEBA04", Offset = "0xDEBA04", VA = "0xDEBA04")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60016C4")]
		[Address(RVA = "0xDEBA10", Offset = "0xDEBA10", VA = "0xDEBA10", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60016C5")]
		[Address(RVA = "0xDEBB24", Offset = "0xDEBB24", VA = "0xDEBB24")]
		private void CallEventsOnOldDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool)
		{
		}

		[Token(Token = "0x60016C6")]
		[Address(RVA = "0xDEBD4C", Offset = "0xDEBD4C", VA = "0xDEBD4C")]
		private void CallEventsOnNewDepth(InteractableCollisionDepth newDepth, InteractableTool collidingTool)
		{
		}

		[Token(Token = "0x60016C7")]
		[Address(RVA = "0xDEBED0", Offset = "0xDEBED0", VA = "0xDEBED0")]
		private void SustainEventsOnDepth(InteractableCollisionDepth depth, InteractableTool collidingTool)
		{
		}

		[Token(Token = "0x60016C8")]
		[Address(RVA = "0xDEC054", Offset = "0xDEC054", VA = "0xDEC054", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}

		[Token(Token = "0x60016C9")]
		[Address(RVA = "0xDEC5D4", Offset = "0xDEC5D4", VA = "0xDEC5D4")]
		private bool IsValidContact(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x60016CA")]
		[Address(RVA = "0xDEC6C4", Offset = "0xDEC6C4", VA = "0xDEC6C4")]
		private bool PassEntryTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x60016CB")]
		[Address(RVA = "0xDEC7C0", Offset = "0xDEC7C0", VA = "0xDEC7C0")]
		private bool PassPerpTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x60016CC")]
		[Address(RVA = "0xDEC908", Offset = "0xDEC908", VA = "0xDEC908")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x20003D1")]
	public class ButtonTriggerZone : MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x4000D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x4000D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x980434", Offset = "0x980434")]
		private Collider <Collider>k__BackingField;

		[Token(Token = "0x4000D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x980444", Offset = "0x980444")]
		private Interactable <ParentInteractable>k__BackingField;

		[Token(Token = "0x17000268")]
		public Collider Collider
		{
			[Token(Token = "0x60016CD")]
			[Address(RVA = "0xDEC9F4", Offset = "0xDEC9F4", VA = "0xDEC9F4", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98728C", Offset = "0x98728C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016CE")]
			[Address(RVA = "0xDEC9FC", Offset = "0xDEC9FC", VA = "0xDEC9FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98729C", Offset = "0x98729C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000269")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x60016CF")]
			[Address(RVA = "0xDEB848", Offset = "0xDEB848", VA = "0xDEB848", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9872AC", Offset = "0x9872AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016D0")]
			[Address(RVA = "0xDECA04", Offset = "0xDECA04", VA = "0xDECA04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9872BC", Offset = "0x9872BC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700026A")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x60016D1")]
			[Address(RVA = "0xDECA0C", Offset = "0xDECA0C", VA = "0xDECA0C", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x60016D2")]
		[Address(RVA = "0xDECAA8", Offset = "0xDECAA8", VA = "0xDECAA8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016D3")]
		[Address(RVA = "0xDECB28", Offset = "0xDECB28", VA = "0xDECB28")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x20003D2")]
	public interface ColliderZone
	{
		[Token(Token = "0x1700026B")]
		Collider Collider
		{
			[Token(Token = "0x60016D4")]
			get;
		}

		[Token(Token = "0x1700026C")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x60016D5")]
			get;
		}

		[Token(Token = "0x1700026D")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x60016D6")]
			get;
		}
	}
	[Token(Token = "0x20003D3")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x4000D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x4000D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float FrameTime;

		[Token(Token = "0x4000D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x4000D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x60016D7")]
		[Address(RVA = "0xDEBCA8", Offset = "0xDEBCA8", VA = "0xDEBCA8")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x20003D4")]
	public enum InteractionType
	{
		[Token(Token = "0x4000D91")]
		Enter,
		[Token(Token = "0x4000D92")]
		Stay,
		[Token(Token = "0x4000D93")]
		Exit
	}
	[Token(Token = "0x20003D5")]
	public class HandsManager : MonoBehaviour
	{
		[Token(Token = "0x2000DD5")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x40021CE")]
			Mesh,
			[Token(Token = "0x40021CF")]
			Skeleton,
			[Token(Token = "0x40021D0")]
			Both
		}

		[Token(Token = "0x2000DD6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979FC4", Offset = "0x979FC4")]
		private sealed class <FindSkeletonVisualGameObjects>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40021D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40021D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40021D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandsManager <>4__this;

			[Token(Token = "0x170003A2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002DD4")]
				[Address(RVA = "0xCADF50", Offset = "0xCADF50", VA = "0xCADF50", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003A3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002DD6")]
				[Address(RVA = "0xCADFC0", Offset = "0xCADFC0", VA = "0xCADFC0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002DD1")]
			[Address(RVA = "0xCADCB4", Offset = "0xCADCB4", VA = "0xCADCB4")]
			[DebuggerHidden]
			public <FindSkeletonVisualGameObjects>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x6002DD2")]
			[Address(RVA = "0xCADCE0", Offset = "0xCADCE0", VA = "0xCADCE0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002DD3")]
			[Address(RVA = "0xCADCE4", Offset = "0xCADCE4", VA = "0xCADCE4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002DD5")]
			[Address(RVA = "0xCADF58", Offset = "0xCADF58", VA = "0xCADF58", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000D94")]
		private const string SKELETON_VISUALIZER_NAME = "SkeletonRenderer";

		[Token(Token = "0x4000D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _leftHand;

		[Token(Token = "0x4000D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _rightHand;

		[Token(Token = "0x4000D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x4000D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRHand[] _hand;

		[Token(Token = "0x4000D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRSkeleton[] _handSkeleton;

		[Token(Token = "0x4000D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRSkeletonRenderer[] _handSkeletonRenderer;

		[Token(Token = "0x4000D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRMesh[] _handMesh;

		[Token(Token = "0x4000D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OVRMeshRenderer[] _handMeshRenderer;

		[Token(Token = "0x4000D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkinnedMeshRenderer _leftMeshRenderer;

		[Token(Token = "0x4000D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkinnedMeshRenderer _rightMeshRenderer;

		[Token(Token = "0x4000D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _leftSkeletonVisual;

		[Token(Token = "0x4000DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _rightSkeletonVisual;

		[Token(Token = "0x4000DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentHandAlpha;

		[Token(Token = "0x4000DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int HandAlphaId;

		[Token(Token = "0x4000DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x980474", Offset = "0x980474")]
		private static HandsManager <Instance>k__BackingField;

		[Token(Token = "0x1700026E")]
		public OVRHand RightHand
		{
			[Token(Token = "0x60016D8")]
			[Address(RVA = "0xDF0640", Offset = "0xDF0640", VA = "0xDF0640")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016D9")]
			[Address(RVA = "0xDF18A0", Offset = "0xDF18A0", VA = "0xDF18A0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700026F")]
		public OVRSkeleton RightHandSkeleton
		{
			[Token(Token = "0x60016DA")]
			[Address(RVA = "0xDF1244", Offset = "0xDF1244", VA = "0xDF1244")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016DB")]
			[Address(RVA = "0xDF191C", Offset = "0xDF191C", VA = "0xDF191C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000270")]
		public OVRSkeletonRenderer RightHandSkeletonRenderer
		{
			[Token(Token = "0x60016DC")]
			[Address(RVA = "0xDF1998", Offset = "0xDF1998", VA = "0xDF1998")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016DD")]
			[Address(RVA = "0xDF19E0", Offset = "0xDF19E0", VA = "0xDF19E0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000271")]
		public OVRMesh RightHandMesh
		{
			[Token(Token = "0x60016DE")]
			[Address(RVA = "0xDF1A5C", Offset = "0xDF1A5C", VA = "0xDF1A5C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016DF")]
			[Address(RVA = "0xDF1AA4", Offset = "0xDF1AA4", VA = "0xDF1AA4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000272")]
		public OVRMeshRenderer RightHandMeshRenderer
		{
			[Token(Token = "0x60016E0")]
			[Address(RVA = "0xDF1B20", Offset = "0xDF1B20", VA = "0xDF1B20")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016E1")]
			[Address(RVA = "0xDF1B68", Offset = "0xDF1B68", VA = "0xDF1B68")]
			private set
			{
			}
		}

		[Token(Token = "0x17000273")]
		public OVRHand LeftHand
		{
			[Token(Token = "0x60016E2")]
			[Address(RVA = "0xDF05FC", Offset = "0xDF05FC", VA = "0xDF05FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016E3")]
			[Address(RVA = "0xDF1BE4", Offset = "0xDF1BE4", VA = "0xDF1BE4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000274")]
		public OVRSkeleton LeftHandSkeleton
		{
			[Token(Token = "0x60016E4")]
			[Address(RVA = "0xDF1200", Offset = "0xDF1200", VA = "0xDF1200")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016E5")]
			[Address(RVA = "0xDF1C5C", Offset = "0xDF1C5C", VA = "0xDF1C5C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000275")]
		public OVRSkeletonRenderer LeftHandSkeletonRenderer
		{
			[Token(Token = "0x60016E6")]
			[Address(RVA = "0xDF1CD4", Offset = "0xDF1CD4", VA = "0xDF1CD4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016E7")]
			[Address(RVA = "0xDF1D18", Offset = "0xDF1D18", VA = "0xDF1D18")]
			private set
			{
			}
		}

		[Token(Token = "0x17000276")]
		public OVRMesh LeftHandMesh
		{
			[Token(Token = "0x60016E8")]
			[Address(RVA = "0xDF1D90", Offset = "0xDF1D90", VA = "0xDF1D90")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016E9")]
			[Address(RVA = "0xDF1DD4", Offset = "0xDF1DD4", VA = "0xDF1DD4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000277")]
		public OVRMeshRenderer LeftHandMeshRenderer
		{
			[Token(Token = "0x60016EA")]
			[Address(RVA = "0xDF1E4C", Offset = "0xDF1E4C", VA = "0xDF1E4C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016EB")]
			[Address(RVA = "0xDF1E90", Offset = "0xDF1E90", VA = "0xDF1E90")]
			private set
			{
			}
		}

		[Token(Token = "0x17000278")]
		public static HandsManager Instance
		{
			[Token(Token = "0x60016EC")]
			[Address(RVA = "0xDED414", Offset = "0xDED414", VA = "0xDED414")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9872CC", Offset = "0x9872CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016ED")]
			[Address(RVA = "0xDF1F08", Offset = "0xDF1F08", VA = "0xDF1F08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9872DC", Offset = "0x9872DC")]
			private set
			{
			}
		}

		[Token(Token = "0x60016EE")]
		[Address(RVA = "0xDF1F5C", Offset = "0xDF1F5C", VA = "0xDF1F5C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016EF")]
		[Address(RVA = "0xDF236C", Offset = "0xDF236C", VA = "0xDF236C")]
		private void Update()
		{
		}

		[Token(Token = "0x60016F0")]
		[Address(RVA = "0xDF22F8", Offset = "0xDF22F8", VA = "0xDF22F8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9872EC", Offset = "0x9872EC")]
		private IEnumerator FindSkeletonVisualGameObjects()
		{
			return null;
		}

		[Token(Token = "0x60016F1")]
		[Address(RVA = "0xDED464", Offset = "0xDED464", VA = "0xDED464")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x60016F2")]
		[Address(RVA = "0xDF2440", Offset = "0xDF2440", VA = "0xDF2440")]
		private void SetToCurrentVisualMode()
		{
		}

		[Token(Token = "0x60016F3")]
		[Address(RVA = "0xDF128C", Offset = "0xDF128C", VA = "0xDF128C")]
		public static List<OVRBoneCapsule> GetCapsulesPerBone(OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x60016F4")]
		[Address(RVA = "0xDF0430", Offset = "0xDF0430", VA = "0xDF0430")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x60016F5")]
		[Address(RVA = "0xDF2724", Offset = "0xDF2724", VA = "0xDF2724")]
		public HandsManager()
		{
		}
	}
	[Token(Token = "0x20003D6")]
	public abstract class Interactable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000DD7")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x6002DD7")]
			[Address(RVA = "0xCAE8A4", Offset = "0xCAE8A4", VA = "0xCAE8A4")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x4000DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x4000DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x4000DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x4000DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x17000279")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x60016F6")]
			[Address(RVA = "0xCADFC8", Offset = "0xCADFC8", VA = "0xCADFC8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027A")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x60016F7")]
			[Address(RVA = "0xCADFD0", Offset = "0xCADFD0", VA = "0xCADFD0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027B")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x60016F8")]
			[Address(RVA = "0xCADFD8", Offset = "0xCADFD8", VA = "0xCADFD8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027C")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x60016F9")]
			[Address(RVA = "0xCADFE0", Offset = "0xCADFE0", VA = "0xCADFE0", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000046")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x60016FA")]
			[Address(RVA = "0xCADFE8", Offset = "0xCADFE8", VA = "0xCADFE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x987350", Offset = "0x987350")]
			add
			{
			}
			[Token(Token = "0x60016FB")]
			[Address(RVA = "0xCAE0D4", Offset = "0xCAE0D4", VA = "0xCAE0D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x987360", Offset = "0x987360")]
			remove
			{
			}
		}

		[Token(Token = "0x14000047")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x60016FD")]
			[Address(RVA = "0xCAE234", Offset = "0xCAE234", VA = "0xCAE234")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x987370", Offset = "0x987370")]
			add
			{
			}
			[Token(Token = "0x60016FE")]
			[Address(RVA = "0xCAE320", Offset = "0xCAE320", VA = "0xCAE320")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x987380", Offset = "0x987380")]
			remove
			{
			}
		}

		[Token(Token = "0x14000048")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x6001700")]
			[Address(RVA = "0xCAE480", Offset = "0xCAE480", VA = "0xCAE480")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x987390", Offset = "0x987390")]
			add
			{
			}
			[Token(Token = "0x6001701")]
			[Address(RVA = "0xCAE56C", Offset = "0xCAE56C", VA = "0xCAE56C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9873A0", Offset = "0x9873A0")]
			remove
			{
			}
		}

		[Token(Token = "0x60016FC")]
		[Address(RVA = "0xCAE1C0", Offset = "0xCAE1C0", VA = "0xCAE1C0", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x60016FF")]
		[Address(RVA = "0xCAE40C", Offset = "0xCAE40C", VA = "0xCAE40C", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6001702")]
		[Address(RVA = "0xCAE658", Offset = "0xCAE658", VA = "0xCAE658", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6001703")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool);

		[Token(Token = "0x6001704")]
		[Address(RVA = "0xCAE6CC", Offset = "0xCAE6CC", VA = "0xCAE6CC", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001705")]
		[Address(RVA = "0xCAE7B4", Offset = "0xCAE7B4", VA = "0xCAE7B4", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001706")]
		[Address(RVA = "0xCAE89C", Offset = "0xCAE89C", VA = "0xCAE89C")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x20003D7")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x4000DAC")]
		None,
		[Token(Token = "0x4000DAD")]
		Proximity,
		[Token(Token = "0x4000DAE")]
		Contact,
		[Token(Token = "0x4000DAF")]
		Action
	}
	[Token(Token = "0x20003D8")]
	public enum InteractableState
	{
		[Token(Token = "0x4000DB1")]
		Default,
		[Token(Token = "0x4000DB2")]
		ProximityState,
		[Token(Token = "0x4000DB3")]
		ContactState,
		[Token(Token = "0x4000DB4")]
		ActionState
	}
	[Token(Token = "0x20003D9")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x4000DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Interactable Interactable;

		[Token(Token = "0x4000DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x4000DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x4000DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x4000DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x6001707")]
		[Address(RVA = "0xCAEA1C", Offset = "0xCAEA1C", VA = "0xCAEA1C")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x20003DA")]
	public class InteractableRegistry : MonoBehaviour
	{
		[Token(Token = "0x4000DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x1700027D")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x6001708")]
			[Address(RVA = "0xCAE938", Offset = "0xCAE938", VA = "0xCAE938")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001709")]
		[Address(RVA = "0xCAE730", Offset = "0xCAE730", VA = "0xCAE730")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x600170A")]
		[Address(RVA = "0xCAE818", Offset = "0xCAE818", VA = "0xCAE818")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x600170B")]
		[Address(RVA = "0xCAE9A0", Offset = "0xCAE9A0", VA = "0xCAE9A0")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x20003DB")]
	public class InteractableToolsCreator : MonoBehaviour
	{
		[Token(Token = "0x2000DD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979FD4", Offset = "0x979FD4")]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40021D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40021D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40021D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform[] toolObjects;

			[Token(Token = "0x40021D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isRightHand;

			[Token(Token = "0x40021D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x40021D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HandsManager <handsManagerObj>5__2;

			[Token(Token = "0x40021DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x40021DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x40021DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private OVRSkeleton <handSkeletonToAttachTo>5__5;

			[Token(Token = "0x170003A4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002DDC")]
				[Address(RVA = "0xCAFF14", Offset = "0xCAFF14", VA = "0xCAFF14", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003A5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002DDE")]
				[Address(RVA = "0xCAFF84", Offset = "0xCAFF84", VA = "0xCAFF84", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002DD8")]
			[Address(RVA = "0xCAF928", Offset = "0xCAF928", VA = "0xCAF928")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6002DD9")]
			[Address(RVA = "0xCAFAD4", Offset = "0xCAFAD4", VA = "0xCAFAD4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002DDA")]
			[Address(RVA = "0xCAFB48", Offset = "0xCAFB48", VA = "0xCAFB48", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002DDB")]
			[Address(RVA = "0xCAFAF0", Offset = "0xCAFAF0", VA = "0xCAFAF0")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002DDD")]
			[Address(RVA = "0xCAFF1C", Offset = "0xCAFF1C", VA = "0xCAFF1C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x4000DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x600170D")]
		[Address(RVA = "0xCAF7F8", Offset = "0xCAF7F8", VA = "0xCAF7F8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600170E")]
		[Address(RVA = "0xCAF874", Offset = "0xCAF874", VA = "0xCAF874")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9873B0", Offset = "0x9873B0")]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x600170F")]
		[Address(RVA = "0xCAF954", Offset = "0xCAF954", VA = "0xCAF954")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x6001710")]
		[Address(RVA = "0xCAFACC", Offset = "0xCAFACC", VA = "0xCAFACC")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x20003DC")]
	public class InteractableToolsInputRouter : MonoBehaviour
	{
		[Token(Token = "0x4000DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x4000DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _leftPinch;

		[Token(Token = "0x4000DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _rightPinch;

		[Token(Token = "0x4000DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x4000DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x4000DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x4000DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x1700027E")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x6001711")]
			[Address(RVA = "0xCAFF8C", Offset = "0xCAFF8C", VA = "0xCAFF8C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001712")]
		[Address(RVA = "0xCB0114", Offset = "0xCB0114", VA = "0xCB0114")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6001713")]
		[Address(RVA = "0xCB01E8", Offset = "0xCB01E8", VA = "0xCB01E8")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6001714")]
		[Address(RVA = "0xCB02BC", Offset = "0xCB02BC", VA = "0xCB02BC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001715")]
		[Address(RVA = "0xCB0550", Offset = "0xCB0550", VA = "0xCB0550")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x6001716")]
		[Address(RVA = "0xCB0598", Offset = "0xCB0598", VA = "0xCB0598")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001717")]
		[Address(RVA = "0xCB093C", Offset = "0xCB093C", VA = "0xCB093C")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x6001718")]
		[Address(RVA = "0xCB0A88", Offset = "0xCB0A88", VA = "0xCB0A88")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x20003DD")]
	public class FingerTipPokeTool : InteractableTool
	{
		[Token(Token = "0x2000DD9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979FE4", Offset = "0x979FE4")]
		private sealed class <AttachTriggerLogic>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40021DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40021DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40021DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x170003A6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002DE2")]
				[Address(RVA = "0xDF14E8", Offset = "0xDF14E8", VA = "0xDF14E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003A7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002DE4")]
				[Address(RVA = "0xDF1558", Offset = "0xDF1558", VA = "0xDF1558", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002DDF")]
			[Address(RVA = "0xDF0014", Offset = "0xDF0014", VA = "0xDF0014")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6002DE0")]
			[Address(RVA = "0xDF0DA8", Offset = "0xDF0DA8", VA = "0xDF0DA8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002DE1")]
			[Address(RVA = "0xDF0DAC", Offset = "0xDF0DAC", VA = "0xDF0DAC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002DE3")]
			[Address(RVA = "0xDF14F0", Offset = "0xDF14F0", VA = "0xDF14F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000DC4")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x4000DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x4000DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private OVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x4000DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] _velocityFrames;

		[Token(Token = "0x4000DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _currVelocityFrame;

		[Token(Token = "0x4000DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x4000DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _position;

		[Token(Token = "0x4000DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x4000DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _lastScale;

		[Token(Token = "0x4000DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _isInitialized;

		[Token(Token = "0x4000DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private OVRBoneCapsule _capsuleToTrack;

		[Token(Token = "0x1700027F")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6001719")]
			[Address(RVA = "0xDEFE34", Offset = "0xDEFE34", VA = "0xDEFE34", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x17000280")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x600171A")]
			[Address(RVA = "0xDEFE3C", Offset = "0xDEFE3C", VA = "0xDEFE3C", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x17000281")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x600171B")]
			[Address(RVA = "0xDEFE44", Offset = "0xDEFE44", VA = "0xDEFE44", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000282")]
		public override bool EnableState
		{
			[Token(Token = "0x600171C")]
			[Address(RVA = "0xDEFE4C", Offset = "0xDEFE4C", VA = "0xDEFE4C", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600171D")]
			[Address(RVA = "0xDEFE94", Offset = "0xDEFE94", VA = "0xDEFE94", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x600171E")]
		[Address(RVA = "0xDEFEE4", Offset = "0xDEFEE4", VA = "0xDEFEE4", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x600171F")]
		[Address(RVA = "0xDEFFA0", Offset = "0xDEFFA0", VA = "0xDEFFA0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x987414", Offset = "0x987414")]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x6001720")]
		[Address(RVA = "0xDF0040", Offset = "0xDF0040", VA = "0xDF0040")]
		private void Update()
		{
		}

		[Token(Token = "0x6001721")]
		[Address(RVA = "0xDF0690", Offset = "0xDF0690", VA = "0xDF0690")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x6001722")]
		[Address(RVA = "0xDF0968", Offset = "0xDF0968", VA = "0xDF0968")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x6001723")]
		[Address(RVA = "0xDF0AE0", Offset = "0xDF0AE0", VA = "0xDF0AE0", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6001724")]
		[Address(RVA = "0xDF0D88", Offset = "0xDF0D88", VA = "0xDF0D88", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6001725")]
		[Address(RVA = "0xDF0D8C", Offset = "0xDF0D8C", VA = "0xDF0D8C", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6001726")]
		[Address(RVA = "0xDF0D90", Offset = "0xDF0D90", VA = "0xDF0D90")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x20003DE")]
	public class FingerTipPokeToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4000DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x4000DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x980504", Offset = "0x980504")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x4000DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x980514", Offset = "0x980514")]
		private bool <ToolActivateState>k__BackingField;

		[Token(Token = "0x4000DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x980524", Offset = "0x980524")]
		private float <SphereRadius>k__BackingField;

		[Token(Token = "0x17000283")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6001727")]
			[Address(RVA = "0xDF1560", Offset = "0xDF1560", VA = "0xDF1560", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x987478", Offset = "0x987478")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001728")]
			[Address(RVA = "0xDEFF98", Offset = "0xDEFF98", VA = "0xDEFF98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x987488", Offset = "0x987488")]
			set
			{
			}
		}

		[Token(Token = "0x17000284")]
		public bool EnableState
		{
			[Token(Token = "0x6001729")]
			[Address(RVA = "0xDF1568", Offset = "0xDF1568", VA = "0xDF1568", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600172A")]
			[Address(RVA = "0xDF1598", Offset = "0xDF1598", VA = "0xDF1598", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000285")]
		public bool ToolActivateState
		{
			[Token(Token = "0x600172B")]
			[Address(RVA = "0xDF15D0", Offset = "0xDF15D0", VA = "0xDF15D0", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x987498", Offset = "0x987498")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600172C")]
			[Address(RVA = "0xDF15D8", Offset = "0xDF15D8", VA = "0xDF15D8", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9874A8", Offset = "0x9874A8")]
			set
			{
			}
		}

		[Token(Token = "0x17000286")]
		public float SphereRadius
		{
			[Token(Token = "0x600172D")]
			[Address(RVA = "0xDF0688", Offset = "0xDF0688", VA = "0xDF0688")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9874B8", Offset = "0x9874B8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600172E")]
			[Address(RVA = "0xDF15E4", Offset = "0xDF15E4", VA = "0xDF15E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9874C8", Offset = "0x9874C8")]
			private set
			{
			}
		}

		[Token(Token = "0x600172F")]
		[Address(RVA = "0xDF15EC", Offset = "0xDF15EC", VA = "0xDF15EC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001730")]
		[Address(RVA = "0xDF1648", Offset = "0xDF1648", VA = "0xDF1648", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001731")]
		[Address(RVA = "0xDF164C", Offset = "0xDF164C", VA = "0xDF164C")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x20003DF")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x4000DD4")]
		None = 0,
		[Token(Token = "0x4000DD5")]
		Ray = 1,
		[Token(Token = "0x4000DD6")]
		Poke = 4,
		[Token(Token = "0x4000DD7")]
		All = -1
	}
	[Token(Token = "0x20003E0")]
	public enum ToolInputState
	{
		[Token(Token = "0x4000DD9")]
		Inactive,
		[Token(Token = "0x4000DDA")]
		PrimaryInputDown,
		[Token(Token = "0x4000DDB")]
		PrimaryInputDownStay,
		[Token(Token = "0x4000DDC")]
		PrimaryInputUp
	}
	[Token(Token = "0x20003E1")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x4000DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x4000DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x4000DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x6001732")]
		[Address(RVA = "0xCAE8F4", Offset = "0xCAE8F4", VA = "0xCAE8F4")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x20003E2")]
	public abstract class InteractableTool : MonoBehaviour
	{
		[Token(Token = "0x4000DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x980534", Offset = "0x980534")]
		private bool <IsRightHandedTool>k__BackingField;

		[Token(Token = "0x4000DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x980544", Offset = "0x980544")]
		private Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x4000DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x980554", Offset = "0x980554")]
		private Vector3 <InteractionPosition>k__BackingField;

		[Token(Token = "0x4000DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<InteractableCollisionInfo> _currentIntersectingObjects;

		[Token(Token = "0x4000DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x4000DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x4000DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x4000DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Interactable, InteractableCollisionInfo> _currInteractableToCollisionInfos;

		[Token(Token = "0x4000DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Interactable, InteractableCollisionInfo> _prevInteractableToCollisionInfos;

		[Token(Token = "0x17000287")]
		public Transform ToolTransform
		{
			[Token(Token = "0x6001733")]
			[Address(RVA = "0xCAEAC0", Offset = "0xCAEAC0", VA = "0xCAEAC0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000288")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x6001734")]
			[Address(RVA = "0xCAEAC8", Offset = "0xCAEAC8", VA = "0xCAEAC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9874D8", Offset = "0x9874D8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001735")]
			[Address(RVA = "0xCAEAD0", Offset = "0xCAEAD0", VA = "0xCAEAD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9874E8", Offset = "0x9874E8")]
			set
			{
			}
		}

		[Token(Token = "0x17000289")]
		public abstract InteractableToolTags ToolTags
		{
			[Token(Token = "0x6001736")]
			get;
		}

		[Token(Token = "0x1700028A")]
		public abstract ToolInputState ToolInputState
		{
			[Token(Token = "0x6001737")]
			get;
		}

		[Token(Token = "0x1700028B")]
		public abstract bool IsFarFieldTool
		{
			[Token(Token = "0x6001738")]
			get;
		}

		[Token(Token = "0x1700028C")]
		public Vector3 Velocity
		{
			[Token(Token = "0x6001739")]
			[Address(RVA = "0xCAEADC", Offset = "0xCAEADC", VA = "0xCAEADC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9874F8", Offset = "0x9874F8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600173A")]
			[Address(RVA = "0xCAEAE8", Offset = "0xCAEAE8", VA = "0xCAEAE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x987508", Offset = "0x987508")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700028D")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x600173B")]
			[Address(RVA = "0xCAEAF4", Offset = "0xCAEAF4", VA = "0xCAEAF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x987518", Offset = "0x987518")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600173C")]
			[Address(RVA = "0xCAEB00", Offset = "0xCAEB00", VA = "0xCAEB00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x987528", Offset = "0x987528")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700028E")]
		public abstract bool EnableState
		{
			[Token(Token = "0x6001741")]
			get;
			[Token(Token = "0x6001742")]
			set;
		}

		[Token(Token = "0x600173D")]
		[Address(RVA = "0xCAEB0C", Offset = "0xCAEB0C", VA = "0xCAEB0C")]
		public List<InteractableCollisionInfo> GetCurrentIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x600173E")]
		public abstract List<InteractableCollisionInfo> GetNextIntersectingObjects();

		[Token(Token = "0x600173F")]
		public abstract void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x6001740")]
		public abstract void DeFocus();

		[Token(Token = "0x6001743")]
		public abstract void Initialize();

		[Token(Token = "0x6001744")]
		[Address(RVA = "0xCAEB14", Offset = "0xCAEB14", VA = "0xCAEB14")]
		public KeyValuePair<Interactable, InteractableCollisionInfo> GetFirstCurrentCollisionInfo()
		{
			return default(KeyValuePair<Interactable, InteractableCollisionInfo>);
		}

		[Token(Token = "0x6001745")]
		[Address(RVA = "0xCAEB64", Offset = "0xCAEB64", VA = "0xCAEB64")]
		public void ClearAllCurrentCollisionInfos()
		{
		}

		[Token(Token = "0x6001746")]
		[Address(RVA = "0xCAEBC4", Offset = "0xCAEBC4", VA = "0xCAEBC4", Slot = "13")]
		public virtual void UpdateCurrentCollisionsBasedOnDepth()
		{
		}

		[Token(Token = "0x6001747")]
		[Address(RVA = "0xCAEE90", Offset = "0xCAEE90", VA = "0xCAEE90", Slot = "14")]
		public virtual void UpdateLatestCollisionData()
		{
		}

		[Token(Token = "0x6001748")]
		[Address(RVA = "0xCAF6E8", Offset = "0xCAF6E8", VA = "0xCAF6E8")]
		protected InteractableTool()
		{
		}
	}
	[Token(Token = "0x20003E3")]
	public interface InteractableToolView
	{
		[Token(Token = "0x1700028F")]
		InteractableTool InteractableTool
		{
			[Token(Token = "0x6001749")]
			get;
		}

		[Token(Token = "0x17000290")]
		bool EnableState
		{
			[Token(Token = "0x600174B")]
			get;
			[Token(Token = "0x600174C")]
			set;
		}

		[Token(Token = "0x17000291")]
		bool ToolActivateState
		{
			[Token(Token = "0x600174D")]
			get;
			[Token(Token = "0x600174E")]
			set;
		}

		[Token(Token = "0x600174A")]
		void SetFocusedInteractable(Interactable interactable);
	}
	[Token(Token = "0x20003E4")]
	public class PinchStateModule
	{
		[Token(Token = "0x2000DDA")]
		private enum PinchState
		{
			[Token(Token = "0x40021E1")]
			None,
			[Token(Token = "0x40021E2")]
			PinchDown,
			[Token(Token = "0x40021E3")]
			PinchStay,
			[Token(Token = "0x40021E4")]
			PinchUp
		}

		[Token(Token = "0x4000DE9")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x4000DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PinchState _currPinchState;

		[Token(Token = "0x4000DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x17000292")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x600174F")]
			[Address(RVA = "0xCB308C", Offset = "0xCB308C", VA = "0xCB308C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000293")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x6001750")]
			[Address(RVA = "0xCB3118", Offset = "0xCB3118", VA = "0xCB3118")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000294")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x6001751")]
			[Address(RVA = "0xCB31A4", Offset = "0xCB31A4", VA = "0xCB31A4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001752")]
		[Address(RVA = "0xCB3230", Offset = "0xCB3230", VA = "0xCB3230")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x6001753")]
		[Address(RVA = "0xCB325C", Offset = "0xCB325C", VA = "0xCB325C")]
		public void UpdateState(OVRHand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x20003E5")]
	public class RayTool : InteractableTool
	{
		[Token(Token = "0x4000DEC")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x4000DED")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x4000DEE")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x4000DEF")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x4000DF0")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x4000DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x4000DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x980574", Offset = "0x980574")]
		[SerializeField]
		private float _coneAngleDegrees;

		[Token(Token = "0x4000DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x4000DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x4000DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x4000DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x4000DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x4000DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x4000DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x4000DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x4000DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _initialized;

		[Token(Token = "0x17000295")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6001754")]
			[Address(RVA = "0xCB3504", Offset = "0xCB3504", VA = "0xCB3504", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x17000296")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6001755")]
			[Address(RVA = "0xCB350C", Offset = "0xCB350C", VA = "0xCB350C", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x17000297")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6001756")]
			[Address(RVA = "0xCB3594", Offset = "0xCB3594", VA = "0xCB3594", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000298")]
		public override bool EnableState
		{
			[Token(Token = "0x6001757")]
			[Address(RVA = "0xCB359C", Offset = "0xCB359C", VA = "0xCB359C", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001758")]
			[Address(RVA = "0xCB35F8", Offset = "0xCB35F8", VA = "0xCB35F8", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6001759")]
		[Address(RVA = "0xCB36AC", Offset = "0xCB36AC", VA = "0xCB36AC", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x600175A")]
		[Address(RVA = "0xCB371C", Offset = "0xCB371C", VA = "0xCB371C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600175B")]
		[Address(RVA = "0xCB37C0", Offset = "0xCB37C0", VA = "0xCB37C0")]
		private void Update()
		{
		}

		[Token(Token = "0x600175C")]
		[Address(RVA = "0xCB3B38", Offset = "0xCB3B38", VA = "0xCB3B38")]
		private Vector3 GetRayCastOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600175D")]
		[Address(RVA = "0xCB3C48", Offset = "0xCB3C48", VA = "0xCB3C48", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x600175E")]
		[Address(RVA = "0xCB4008", Offset = "0xCB4008", VA = "0xCB4008")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x600175F")]
		[Address(RVA = "0xCB41C8", Offset = "0xCB41C8", VA = "0xCB41C8")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x6001760")]
		[Address(RVA = "0xCB42F8", Offset = "0xCB42F8", VA = "0xCB42F8")]
		private Interactable FindPrimaryRaycastHit(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6001761")]
		[Address(RVA = "0xCB4658", Offset = "0xCB4658", VA = "0xCB4658")]
		private Interactable FindInteractableViaConeTest(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6001762")]
		[Address(RVA = "0xCB4AA4", Offset = "0xCB4AA4", VA = "0xCB4AA4", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6001763")]
		[Address(RVA = "0xCB4B90", Offset = "0xCB4B90", VA = "0xCB4B90", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6001764")]
		[Address(RVA = "0xCB4BCC", Offset = "0xCB4BCC", VA = "0xCB4BCC")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x20003E6")]
	public class RayToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4000DFC")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x4000DFD")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x4000DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x4000DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x4000E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _toolActivateState;

		[Token(Token = "0x4000E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _focusedTransform;

		[Token(Token = "0x4000E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] linePositions;

		[Token(Token = "0x4000E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Gradient _oldColorGradient;

		[Token(Token = "0x4000E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Gradient _highLightColorGradient;

		[Token(Token = "0x4000E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9805E8", Offset = "0x9805E8")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x17000299")]
		public bool EnableState
		{
			[Token(Token = "0x6001765")]
			[Address(RVA = "0xCB35C8", Offset = "0xCB35C8", VA = "0xCB35C8", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001766")]
			[Address(RVA = "0xCB362C", Offset = "0xCB362C", VA = "0xCB362C", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x1700029A")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6001767")]
			[Address(RVA = "0xCB4C84", Offset = "0xCB4C84", VA = "0xCB4C84", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001768")]
			[Address(RVA = "0xCB3AE8", Offset = "0xCB3AE8", VA = "0xCB3AE8", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x1700029B")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x600176A")]
			[Address(RVA = "0xCB4F1C", Offset = "0xCB4F1C", VA = "0xCB4F1C", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x987538", Offset = "0x987538")]
			get
			{
				return null;
			}
			[Token(Token = "0x600176B")]
			[Address(RVA = "0xCB3714", Offset = "0xCB3714", VA = "0xCB3714")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x987548", Offset = "0x987548")]
			set
			{
			}
		}

		[Token(Token = "0x6001769")]
		[Address(RVA = "0xCB4C8C", Offset = "0xCB4C8C", VA = "0xCB4C8C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600176C")]
		[Address(RVA = "0xCB4AEC", Offset = "0xCB4AEC", VA = "0xCB4AEC", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x600176D")]
		[Address(RVA = "0xCB4F24", Offset = "0xCB4F24", VA = "0xCB4F24")]
		private void Update()
		{
		}

		[Token(Token = "0x600176E")]
		[Address(RVA = "0xCB52B8", Offset = "0xCB52B8", VA = "0xCB52B8")]
		public static Vector3 GetPointOnBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600176F")]
		[Address(RVA = "0xCB54A8", Offset = "0xCB54A8", VA = "0xCB54A8")]
		public RayToolView()
		{
		}
	}
	[Token(Token = "0x20003E7")]
	public class DistanceGrabberSample : MonoBehaviour
	{
		[Token(Token = "0x4000E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool useSpherecast;

		[Token(Token = "0x4000E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool allowGrabThroughWalls;

		[Token(Token = "0x4000E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DistanceGrabber[] m_grabbers;

		[Token(Token = "0x1700029C")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6001770")]
			[Address(RVA = "0xDEFB1C", Offset = "0xDEFB1C", VA = "0xDEFB1C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001771")]
			[Address(RVA = "0xDEFB24", Offset = "0xDEFB24", VA = "0xDEFB24")]
			set
			{
			}
		}

		[Token(Token = "0x1700029D")]
		public bool AllowGrabThroughWalls
		{
			[Token(Token = "0x6001772")]
			[Address(RVA = "0xDEFBDC", Offset = "0xDEFBDC", VA = "0xDEFBDC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001773")]
			[Address(RVA = "0xDEFBE4", Offset = "0xDEFBE4", VA = "0xDEFBE4")]
			set
			{
			}
		}

		[Token(Token = "0x6001774")]
		[Address(RVA = "0xDEFC88", Offset = "0xDEFC88", VA = "0xDEFC88")]
		private void Start()
		{
		}

		[Token(Token = "0x6001775")]
		[Address(RVA = "0xDEFE0C", Offset = "0xDEFE0C", VA = "0xDEFE0C")]
		public void ToggleSphereCasting(UnityEngine.UI.Toggle t)
		{
		}

		[Token(Token = "0x6001776")]
		[Address(RVA = "0xDEFE1C", Offset = "0xDEFE1C", VA = "0xDEFE1C")]
		public void ToggleGrabThroughWalls(UnityEngine.UI.Toggle t)
		{
		}

		[Token(Token = "0x6001777")]
		[Address(RVA = "0xDEFE2C", Offset = "0xDEFE2C", VA = "0xDEFE2C")]
		public DistanceGrabberSample()
		{
		}
	}
	[Token(Token = "0x20003E8")]
	public class ControllerBoxController : MonoBehaviour
	{
		[Token(Token = "0x4000E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TrainLocomotive _locomotive;

		[Token(Token = "0x4000E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CowController _cowController;

		[Token(Token = "0x6001778")]
		[Address(RVA = "0xDED160", Offset = "0xDED160", VA = "0xDED160")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001779")]
		[Address(RVA = "0xDED164", Offset = "0xDED164", VA = "0xDED164")]
		public void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600177A")]
		[Address(RVA = "0xDED1C0", Offset = "0xDED1C0", VA = "0xDED1C0")]
		public void DecreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600177B")]
		[Address(RVA = "0xDED21C", Offset = "0xDED21C", VA = "0xDED21C")]
		public void IncreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600177C")]
		[Address(RVA = "0xDED278", Offset = "0xDED278", VA = "0xDED278")]
		public void SmokeButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600177D")]
		[Address(RVA = "0xDED2D4", Offset = "0xDED2D4", VA = "0xDED2D4")]
		public void WhistleButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600177E")]
		[Address(RVA = "0xDED330", Offset = "0xDED330", VA = "0xDED330")]
		public void ReverseButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600177F")]
		[Address(RVA = "0xDED38C", Offset = "0xDED38C", VA = "0xDED38C")]
		public void SwitchVisualization(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001780")]
		[Address(RVA = "0xDED54C", Offset = "0xDED54C", VA = "0xDED54C")]
		public void GoMoo(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001781")]
		[Address(RVA = "0xDED5F4", Offset = "0xDED5F4", VA = "0xDED5F4")]
		public ControllerBoxController()
		{
		}
	}
	[Token(Token = "0x20003E9")]
	public class CowController : MonoBehaviour
	{
		[Token(Token = "0x4000E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animation _cowAnimation;

		[Token(Token = "0x4000E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _mooCowAudioSource;

		[Token(Token = "0x6001782")]
		[Address(RVA = "0xDED5FC", Offset = "0xDED5FC", VA = "0xDED5FC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001783")]
		[Address(RVA = "0xDED600", Offset = "0xDED600", VA = "0xDED600")]
		public void PlayMooSound()
		{
		}

		[Token(Token = "0x6001784")]
		[Address(RVA = "0xDED5A4", Offset = "0xDED5A4", VA = "0xDED5A4")]
		public void GoMooCowGo()
		{
		}

		[Token(Token = "0x6001785")]
		[Address(RVA = "0xDED654", Offset = "0xDED654", VA = "0xDED654")]
		public CowController()
		{
		}
	}
	[Token(Token = "0x20003EA")]
	public class PanelHMDFollower : MonoBehaviour
	{
		[Token(Token = "0x2000DDB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x979FF4", Offset = "0x979FF4")]
		private sealed class <LerpToHMD>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40021E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40021E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40021E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PanelHMDFollower <>4__this;

			[Token(Token = "0x40021E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <newPanelPosition>5__2;

			[Token(Token = "0x40021E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startTime>5__3;

			[Token(Token = "0x40021EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <endTime>5__4;

			[Token(Token = "0x170003A8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002DE8")]
				[Address(RVA = "0xCB2F28", Offset = "0xCB2F28", VA = "0xCB2F28", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003A9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002DEA")]
				[Address(RVA = "0xCB2F98", Offset = "0xCB2F98", VA = "0xCB2F98", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002DE5")]
			[Address(RVA = "0xCB2BB8", Offset = "0xCB2BB8", VA = "0xCB2BB8")]
			[DebuggerHidden]
			public <LerpToHMD>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6002DE6")]
			[Address(RVA = "0xCB2C9C", Offset = "0xCB2C9C", VA = "0xCB2C9C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002DE7")]
			[Address(RVA = "0xCB2CA0", Offset = "0xCB2CA0", VA = "0xCB2CA0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002DE9")]
			[Address(RVA = "0xCB2F30", Offset = "0xCB2F30", VA = "0xCB2F30", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E0D")]
		private const float TOTAL_DURATION = 3f;

		[Token(Token = "0x4000E0E")]
		private const float HMD_MOVEMENT_THRESHOLD = 0.3f;

		[Token(Token = "0x4000E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _maxDistance;

		[Token(Token = "0x4000E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _minDistance;

		[Token(Token = "0x4000E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _minZDistance;

		[Token(Token = "0x4000E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRCameraRig _cameraRig;

		[Token(Token = "0x4000E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _panelInitialPosition;

		[Token(Token = "0x4000E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _coroutine;

		[Token(Token = "0x4000E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _prevPos;

		[Token(Token = "0x4000E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _lastMovedToPos;

		[Token(Token = "0x6001786")]
		[Address(RVA = "0xCB2744", Offset = "0xCB2744", VA = "0xCB2744")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001787")]
		[Address(RVA = "0xCB27E4", Offset = "0xCB27E4", VA = "0xCB27E4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001788")]
		[Address(RVA = "0xCB2ADC", Offset = "0xCB2ADC", VA = "0xCB2ADC")]
		private Vector3 CalculateIdealAnchorPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001789")]
		[Address(RVA = "0xCB2A68", Offset = "0xCB2A68", VA = "0xCB2A68")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x987558", Offset = "0x987558")]
		private IEnumerator LerpToHMD()
		{
			return null;
		}

		[Token(Token = "0x600178A")]
		[Address(RVA = "0xCB2BE4", Offset = "0xCB2BE4", VA = "0xCB2BE4")]
		public PanelHMDFollower()
		{
		}
	}
	[Token(Token = "0x20003EB")]
	public class SelectionCylinder : MonoBehaviour
	{
		[Token(Token = "0x2000DDC")]
		public enum SelectionState
		{
			[Token(Token = "0x40021EC")]
			Off,
			[Token(Token = "0x40021ED")]
			Selected,
			[Token(Token = "0x40021EE")]
			Highlighted
		}

		[Token(Token = "0x4000E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _selectionMeshRenderer;

		[Token(Token = "0x4000E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _colorId;

		[Token(Token = "0x4000E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material[] _selectionMaterials;

		[Token(Token = "0x4000E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] _defaultSelectionColors;

		[Token(Token = "0x4000E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color[] _highlightColors;

		[Token(Token = "0x4000E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SelectionState _currSelectionState;

		[Token(Token = "0x1700029E")]
		public SelectionState CurrSelectionState
		{
			[Token(Token = "0x600178B")]
			[Address(RVA = "0xCB5508", Offset = "0xCB5508", VA = "0xCB5508")]
			get
			{
				return default(SelectionState);
			}
			[Token(Token = "0x600178C")]
			[Address(RVA = "0xCB5510", Offset = "0xCB5510", VA = "0xCB5510")]
			set
			{
			}
		}

		[Token(Token = "0x600178D")]
		[Address(RVA = "0xCB5708", Offset = "0xCB5708", VA = "0xCB5708")]
		private void Awake()
		{
		}

		[Token(Token = "0x600178E")]
		[Address(RVA = "0xCB5960", Offset = "0xCB5960", VA = "0xCB5960")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600178F")]
		[Address(RVA = "0xCB55B8", Offset = "0xCB55B8", VA = "0xCB55B8")]
		private void AffectSelectionColor(Color[] newColors)
		{
		}

		[Token(Token = "0x6001790")]
		[Address(RVA = "0xCB5A4C", Offset = "0xCB5A4C", VA = "0xCB5A4C")]
		public SelectionCylinder()
		{
		}
	}
	[Token(Token = "0x20003EC")]
	public class TrackSegment : MonoBehaviour
	{
		[Token(Token = "0x2000DDD")]
		public enum SegmentType
		{
			[Token(Token = "0x40021F0")]
			Straight,
			[Token(Token = "0x40021F1")]
			LeftTurn,
			[Token(Token = "0x40021F2")]
			RightTurn,
			[Token(Token = "0x40021F3")]
			Switch
		}

		[Token(Token = "0x4000E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SegmentType _segmentType;

		[Token(Token = "0x4000E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshFilter _straight;

		[Token(Token = "0x4000E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshFilter _leftTurn;

		[Token(Token = "0x4000E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshFilter _rightTurn;

		[Token(Token = "0x4000E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _gridSize;

		[Token(Token = "0x4000E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _subDivCount;

		[Token(Token = "0x4000E23")]
		private const float _originalGridSize = 0.8f;

		[Token(Token = "0x4000E24")]
		private const float _trackWidth = 0.15f;

		[Token(Token = "0x4000E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _mesh;

		[Token(Token = "0x4000E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9806C8", Offset = "0x9806C8")]
		private float <StartDistance>k__BackingField;

		[Token(Token = "0x4000E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Pose _p1;

		[Token(Token = "0x4000E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Pose _p2;

		[Token(Token = "0x4000E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Pose _endPose;

		[Token(Token = "0x1700029F")]
		public float StartDistance
		{
			[Token(Token = "0x6001792")]
			[Address(RVA = "0xCB5AB8", Offset = "0xCB5AB8", VA = "0xCB5AB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9875BC", Offset = "0x9875BC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001793")]
			[Address(RVA = "0xCB5AC0", Offset = "0xCB5AC0", VA = "0xCB5AC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9875CC", Offset = "0x9875CC")]
			set
			{
			}
		}

		[Token(Token = "0x170002A0")]
		public float GridSize
		{
			[Token(Token = "0x6001794")]
			[Address(RVA = "0xCB5AC8", Offset = "0xCB5AC8", VA = "0xCB5AC8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001795")]
			[Address(RVA = "0xCB5AD0", Offset = "0xCB5AD0", VA = "0xCB5AD0")]
			private set
			{
			}
		}

		[Token(Token = "0x170002A1")]
		public int SubDivCount
		{
			[Token(Token = "0x6001796")]
			[Address(RVA = "0xCB5AD8", Offset = "0xCB5AD8", VA = "0xCB5AD8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001797")]
			[Address(RVA = "0xCB5AE0", Offset = "0xCB5AE0", VA = "0xCB5AE0")]
			set
			{
			}
		}

		[Token(Token = "0x170002A2")]
		public SegmentType Type
		{
			[Token(Token = "0x6001798")]
			[Address(RVA = "0xCB5AE8", Offset = "0xCB5AE8", VA = "0xCB5AE8")]
			get
			{
				return default(SegmentType);
			}
		}

		[Token(Token = "0x170002A3")]
		public Pose EndPose
		{
			[Token(Token = "0x6001799")]
			[Address(RVA = "0xCB5AF0", Offset = "0xCB5AF0", VA = "0xCB5AF0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A4")]
		public float Radius
		{
			[Token(Token = "0x600179A")]
			[Address(RVA = "0xCB6000", Offset = "0xCB6000", VA = "0xCB6000")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002A5")]
		public float SegmentLength
		{
			[Token(Token = "0x600179C")]
			[Address(RVA = "0xCB5B58", Offset = "0xCB5B58", VA = "0xCB5B58")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600179B")]
		[Address(RVA = "0xCB6010", Offset = "0xCB6010", VA = "0xCB6010")]
		public float setGridSize(float size)
		{
			return default(float);
		}

		[Token(Token = "0x600179D")]
		[Address(RVA = "0xCB6028", Offset = "0xCB6028", VA = "0xCB6028")]
		private void Awake()
		{
		}

		[Token(Token = "0x600179E")]
		[Address(RVA = "0xCB5B98", Offset = "0xCB5B98", VA = "0xCB5B98")]
		public void UpdatePose(float distanceIntoSegment, Pose pose)
		{
		}

		[Token(Token = "0x600179F")]
		[Address(RVA = "0xCB602C", Offset = "0xCB602C", VA = "0xCB602C")]
		private void Update()
		{
		}

		[Token(Token = "0x60017A0")]
		[Address(RVA = "0xCB6030", Offset = "0xCB6030", VA = "0xCB6030")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60017A1")]
		[Address(RVA = "0xCB609C", Offset = "0xCB609C", VA = "0xCB609C")]
		private void DrawDebugLines()
		{
		}

		[Token(Token = "0x60017A2")]
		[Address(RVA = "0xCB6D60", Offset = "0xCB6D60", VA = "0xCB6D60")]
		public void RegenerateTrackAndMesh()
		{
		}

		[Token(Token = "0x60017A3")]
		[Address(RVA = "0xCB7108", Offset = "0xCB7108", VA = "0xCB7108")]
		public TrackSegment()
		{
		}
	}
	[Token(Token = "0x20003ED")]
	public class TrainButtonVisualController : MonoBehaviour
	{
		[Token(Token = "0x2000DDE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97A004", Offset = "0x97A004")]
		private sealed class <ResetPosition>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40021F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40021F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40021F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainButtonVisualController <>4__this;

			[Token(Token = "0x40021F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x40021F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <endTime>5__3;

			[Token(Token = "0x170003AA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002DEE")]
				[Address(RVA = "0xCB7F24", Offset = "0xCB7F24", VA = "0xCB7F24", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003AB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002DF0")]
				[Address(RVA = "0xCB7F94", Offset = "0xCB7F94", VA = "0xCB7F94", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002DEB")]
			[Address(RVA = "0xCB7C04", Offset = "0xCB7C04", VA = "0xCB7C04")]
			[DebuggerHidden]
			public <ResetPosition>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6002DEC")]
			[Address(RVA = "0xCB7D00", Offset = "0xCB7D00", VA = "0xCB7D00", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002DED")]
			[Address(RVA = "0xCB7D04", Offset = "0xCB7D04", VA = "0xCB7D04", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002DEF")]
			[Address(RVA = "0xCB7F2C", Offset = "0xCB7F2C", VA = "0xCB7F2C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E2A")]
		private const float LERP_TO_OLD_POS_DURATION = 1f;

		[Token(Token = "0x4000E2B")]
		private const float LOCAL_SIZE_HALVED = 0.5f;

		[Token(Token = "0x4000E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x4000E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _glowRenderer;

		[Token(Token = "0x4000E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ButtonController _buttonController;

		[Token(Token = "0x4000E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _buttonContactColor;

		[Token(Token = "0x4000E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _buttonActionColor;

		[Token(Token = "0x4000E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _actionSoundEffect;

		[Token(Token = "0x4000E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform _buttonContactTransform;

		[Token(Token = "0x4000E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _contactMaxDisplacementDistance;

		[Token(Token = "0x4000E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _buttonMaterial;

		[Token(Token = "0x4000E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color _buttonDefaultColor;

		[Token(Token = "0x4000E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _materialColorId;

		[Token(Token = "0x4000E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _buttonInContactOrActionStates;

		[Token(Token = "0x4000E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine _lerpToOldPositionCr;

		[Token(Token = "0x4000E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 _oldPosition;

		[Token(Token = "0x60017A4")]
		[Address(RVA = "0xCB71AC", Offset = "0xCB71AC", VA = "0xCB71AC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017A5")]
		[Address(RVA = "0xCB7280", Offset = "0xCB7280", VA = "0xCB7280")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60017A6")]
		[Address(RVA = "0xCB7334", Offset = "0xCB7334", VA = "0xCB7334")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60017A7")]
		[Address(RVA = "0xCB747C", Offset = "0xCB747C", VA = "0xCB747C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60017A8")]
		[Address(RVA = "0xCB7608", Offset = "0xCB7608", VA = "0xCB7608")]
		private void ActionOrInContactZoneStayEvent(ColliderZoneArgs collisionArgs)
		{
		}

		[Token(Token = "0x60017A9")]
		[Address(RVA = "0xCB77E8", Offset = "0xCB77E8", VA = "0xCB77E8")]
		private void InteractableStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60017AA")]
		[Address(RVA = "0xCB7B10", Offset = "0xCB7B10", VA = "0xCB7B10")]
		private void PlaySound(AudioClip clip)
		{
		}

		[Token(Token = "0x60017AB")]
		[Address(RVA = "0xCB79A0", Offset = "0xCB79A0", VA = "0xCB79A0")]
		private void StopResetLerping()
		{
		}

		[Token(Token = "0x60017AC")]
		[Address(RVA = "0xCB79B4", Offset = "0xCB79B4", VA = "0xCB79B4")]
		private void LerpToOldPosition()
		{
		}

		[Token(Token = "0x60017AD")]
		[Address(RVA = "0xCB7B90", Offset = "0xCB7B90", VA = "0xCB7B90")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9875DC", Offset = "0x9875DC")]
		private IEnumerator ResetPosition()
		{
			return null;
		}

		[Token(Token = "0x60017AE")]
		[Address(RVA = "0xCB7C30", Offset = "0xCB7C30", VA = "0xCB7C30")]
		public TrainButtonVisualController()
		{
		}
	}
	[Token(Token = "0x20003EE")]
	public class TrainCar : TrainCarBase
	{
		[Token(Token = "0x4000E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TrainCarBase _parentLocomotive;

		[Token(Token = "0x4000E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected float _distanceBehindParent;

		[Token(Token = "0x170002A6")]
		public float DistanceBehindParentScaled
		{
			[Token(Token = "0x60017AF")]
			[Address(RVA = "0xCB7F9C", Offset = "0xCB7F9C", VA = "0xCB7F9C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60017B0")]
		[Address(RVA = "0xCB7FAC", Offset = "0xCB7FAC", VA = "0xCB7FAC", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60017B1")]
		[Address(RVA = "0xCB7FB4", Offset = "0xCB7FB4", VA = "0xCB7FB4", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x60017B2")]
		[Address(RVA = "0xCB8580", Offset = "0xCB8580", VA = "0xCB8580")]
		public TrainCar()
		{
		}
	}
	[Token(Token = "0x20003EF")]
	public abstract class TrainCarBase : MonoBehaviour
	{
		[Token(Token = "0x4000E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 OFFSET;

		[Token(Token = "0x4000E3E")]
		private const float WHEEL_RADIUS = 0.027f;

		[Token(Token = "0x4000E3F")]
		private const float TWO_PI = (float)Math.PI * 2f;

		[Token(Token = "0x4000E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform _frontWheels;

		[Token(Token = "0x4000E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform _rearWheels;

		[Token(Token = "0x4000E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected TrainTrack _trainTrack;

		[Token(Token = "0x4000E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Transform[] _individualWheels;

		[Token(Token = "0x4000E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9807C8", Offset = "0x9807C8")]
		private float <Distance>k__BackingField;

		[Token(Token = "0x4000E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float scale;

		[Token(Token = "0x4000E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Pose _frontPose;

		[Token(Token = "0x4000E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Pose _rearPose;

		[Token(Token = "0x170002A7")]
		public float Distance
		{
			[Token(Token = "0x60017B3")]
			[Address(RVA = "0xCB8004", Offset = "0xCB8004", VA = "0xCB8004")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x987640", Offset = "0x987640")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60017B4")]
			[Address(RVA = "0xCB800C", Offset = "0xCB800C", VA = "0xCB800C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x987650", Offset = "0x987650")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002A8")]
		public float Scale
		{
			[Token(Token = "0x60017B5")]
			[Address(RVA = "0xCB8678", Offset = "0xCB8678", VA = "0xCB8678")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60017B6")]
			[Address(RVA = "0xCB8680", Offset = "0xCB8680", VA = "0xCB8680")]
			set
			{
			}
		}

		[Token(Token = "0x60017B7")]
		[Address(RVA = "0xCB7FB0", Offset = "0xCB7FB0", VA = "0xCB7FB0", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60017B8")]
		[Address(RVA = "0xCB8688", Offset = "0xCB8688", VA = "0xCB8688")]
		public void UpdatePose(float distance, TrainCarBase train, Pose pose)
		{
		}

		[Token(Token = "0x60017B9")]
		[Address(RVA = "0xCB8014", Offset = "0xCB8014", VA = "0xCB8014")]
		protected void UpdateCarPosition()
		{
		}

		[Token(Token = "0x60017BA")]
		[Address(RVA = "0xCB8400", Offset = "0xCB8400", VA = "0xCB8400")]
		protected void RotateCarWheels()
		{
		}

		[Token(Token = "0x60017BB")]
		public abstract void UpdatePosition();

		[Token(Token = "0x60017BC")]
		[Address(RVA = "0xCB85F0", Offset = "0xCB85F0", VA = "0xCB85F0")]
		protected TrainCarBase()
		{
		}
	}
	[Token(Token = "0x20003F0")]
	public class TrainCrossingController : MonoBehaviour
	{
		[Token(Token = "0x2000DDF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97A014", Offset = "0x97A014")]
		private sealed class <AnimateCrossing>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40021F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40021FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40021FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainCrossingController <>4__this;

			[Token(Token = "0x40021FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float animationLength;

			[Token(Token = "0x40021FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <animationEndTime>5__2;

			[Token(Token = "0x40021FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lightBlinkDuration>5__3;

			[Token(Token = "0x40021FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <lightBlinkStartTime>5__4;

			[Token(Token = "0x4002200")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <lightBlinkEndTime>5__5;

			[Token(Token = "0x4002201")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Material <lightToBlinkOn>5__6;

			[Token(Token = "0x4002202")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Material <lightToBlinkOff>5__7;

			[Token(Token = "0x4002203")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Color <onColor>5__8;

			[Token(Token = "0x4002204")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Color <offColor>5__9;

			[Token(Token = "0x170003AC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002DF4")]
				[Address(RVA = "0xCB92B8", Offset = "0xCB92B8", VA = "0xCB92B8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003AD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002DF6")]
				[Address(RVA = "0xCB9328", Offset = "0xCB9328", VA = "0xCB9328", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002DF1")]
			[Address(RVA = "0xCB8DFC", Offset = "0xCB8DFC", VA = "0xCB8DFC")]
			[DebuggerHidden]
			public <AnimateCrossing>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6002DF2")]
			[Address(RVA = "0xCB8FE4", Offset = "0xCB8FE4", VA = "0xCB8FE4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002DF3")]
			[Address(RVA = "0xCB8FE8", Offset = "0xCB8FE8", VA = "0xCB8FE8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002DF5")]
			[Address(RVA = "0xCB92C0", Offset = "0xCB92C0", VA = "0xCB92C0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] _crossingSounds;

		[Token(Token = "0x4000E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer _lightSide1Renderer;

		[Token(Token = "0x4000E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer _lightSide2Renderer;

		[Token(Token = "0x4000E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4000E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _lightsSide1Mat;

		[Token(Token = "0x4000E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _lightsSide2Mat;

		[Token(Token = "0x4000E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _colorId;

		[Token(Token = "0x4000E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _xingAnimationCr;

		[Token(Token = "0x4000E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x60017BE")]
		[Address(RVA = "0xCB893C", Offset = "0xCB893C", VA = "0xCB893C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017BF")]
		[Address(RVA = "0xCB8998", Offset = "0xCB8998", VA = "0xCB8998")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60017C0")]
		[Address(RVA = "0xCB8AA4", Offset = "0xCB8AA4", VA = "0xCB8AA4")]
		public void CrossingButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60017C1")]
		[Address(RVA = "0xCB8C54", Offset = "0xCB8C54", VA = "0xCB8C54")]
		private void Update()
		{
		}

		[Token(Token = "0x60017C2")]
		[Address(RVA = "0xCB8B10", Offset = "0xCB8B10", VA = "0xCB8B10")]
		private void ActivateTrainCrossing()
		{
		}

		[Token(Token = "0x60017C3")]
		[Address(RVA = "0xCB8D64", Offset = "0xCB8D64", VA = "0xCB8D64")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x987660", Offset = "0x987660")]
		private IEnumerator AnimateCrossing(float animationLength)
		{
			return null;
		}

		[Token(Token = "0x60017C4")]
		[Address(RVA = "0xCB8E28", Offset = "0xCB8E28", VA = "0xCB8E28")]
		private void AffectMaterials(Material[] materials, Color newColor)
		{
		}

		[Token(Token = "0x60017C5")]
		[Address(RVA = "0xCB8EF0", Offset = "0xCB8EF0", VA = "0xCB8EF0")]
		private void ToggleLightObjects(bool enableState)
		{
		}

		[Token(Token = "0x60017C6")]
		[Address(RVA = "0xCB8F84", Offset = "0xCB8F84", VA = "0xCB8F84")]
		public TrainCrossingController()
		{
		}
	}
	[Token(Token = "0x20003F1")]
	public class TrainLocomotive : TrainCarBase
	{
		[Token(Token = "0x2000DE0")]
		private enum EngineSoundState
		{
			[Token(Token = "0x4002206")]
			Start,
			[Token(Token = "0x4002207")]
			AccelerateOrSetProperSpeed,
			[Token(Token = "0x4002208")]
			Stop
		}

		[Token(Token = "0x2000DE1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97A024", Offset = "0x97A024")]
		private sealed class <StartStopTrain>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002209")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400220A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400220B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool startTrain;

			[Token(Token = "0x400220C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrainLocomotive <>4__this;

			[Token(Token = "0x400220D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <endSpeed>5__2;

			[Token(Token = "0x400220E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timePeriodForSpeedChange>5__3;

			[Token(Token = "0x400220F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4002210")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <endTime>5__5;

			[Token(Token = "0x4002211")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startSpeed>5__6;

			[Token(Token = "0x170003AE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002DFA")]
				[Address(RVA = "0xCBA1D0", Offset = "0xCBA1D0", VA = "0xCBA1D0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003AF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002DFC")]
				[Address(RVA = "0xCBA240", Offset = "0xCBA240", VA = "0xCBA240", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002DF7")]
			[Address(RVA = "0xCB969C", Offset = "0xCB969C", VA = "0xCB969C")]
			[DebuggerHidden]
			public <StartStopTrain>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6002DF8")]
			[Address(RVA = "0xCB9E84", Offset = "0xCB9E84", VA = "0xCB9E84", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002DF9")]
			[Address(RVA = "0xCB9E88", Offset = "0xCB9E88", VA = "0xCB9E88", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002DFB")]
			[Address(RVA = "0xCBA1D8", Offset = "0xCBA1D8", VA = "0xCBA1D8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E52")]
		private const float MIN_SPEED = 0.2f;

		[Token(Token = "0x4000E53")]
		private const float MAX_SPEED = 2.7f;

		[Token(Token = "0x4000E54")]
		private const float SMOKE_SPEED_MULTIPLIER = 8f;

		[Token(Token = "0x4000E55")]
		private const int MAX_PARTICLES_MULTIPLIER = 3;

		[Token(Token = "0x4000E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x980828", Offset = "0x980828")]
		protected float _initialSpeed;

		[Token(Token = "0x4000E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4000E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _decreaseSpeedButton;

		[Token(Token = "0x4000E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _increaseSpeedButton;

		[Token(Token = "0x4000E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _smokeButton;

		[Token(Token = "0x4000E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _whistleButton;

		[Token(Token = "0x4000E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _reverseButton;

		[Token(Token = "0x4000E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioSource _whistleAudioSource;

		[Token(Token = "0x4000E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioClip _whistleSound;

		[Token(Token = "0x4000E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioSource _engineAudioSource;

		[Token(Token = "0x4000E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioClip[] _accelerationSounds;

		[Token(Token = "0x4000E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AudioClip[] _decelerationSounds;

		[Token(Token = "0x4000E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AudioClip _startUpSound;

		[Token(Token = "0x4000E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AudioSource _smokeStackAudioSource;

		[Token(Token = "0x4000E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AudioClip _smokeSound;

		[Token(Token = "0x4000E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ParticleSystem _smoke1;

		[Token(Token = "0x4000E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ParticleSystem _smoke2;

		[Token(Token = "0x4000E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TrainCarBase[] _childCars;

		[Token(Token = "0x4000E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool _isMoving;

		[Token(Token = "0x4000E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool _reverse;

		[Token(Token = "0x4000E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _currentSpeed;

		[Token(Token = "0x4000E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _speedDiv;

		[Token(Token = "0x4000E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _standardRateOverTimeMultiplier;

		[Token(Token = "0x4000E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int _standardMaxParticles;

		[Token(Token = "0x4000E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Coroutine _startStopTrainCr;

		[Token(Token = "0x60017C7")]
		[Address(RVA = "0xCB9330", Offset = "0xCB9330", VA = "0xCB9330")]
		private void Start()
		{
		}

		[Token(Token = "0x60017C8")]
		[Address(RVA = "0xCB94C8", Offset = "0xCB94C8", VA = "0xCB94C8")]
		private void Update()
		{
		}

		[Token(Token = "0x60017C9")]
		[Address(RVA = "0xCB94D4", Offset = "0xCB94D4", VA = "0xCB94D4", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x60017CA")]
		[Address(RVA = "0xCB9650", Offset = "0xCB9650", VA = "0xCB9650")]
		public void StartStopStateChanged()
		{
		}

		[Token(Token = "0x60017CB")]
		[Address(RVA = "0xCB942C", Offset = "0xCB942C", VA = "0xCB942C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9876C4", Offset = "0x9876C4")]
		private IEnumerator StartStopTrain(bool startTrain)
		{
			return null;
		}

		[Token(Token = "0x60017CC")]
		[Address(RVA = "0xCB96C8", Offset = "0xCB96C8", VA = "0xCB96C8")]
		private float PlayEngineSound(EngineSoundState engineSoundState)
		{
			return default(float);
		}

		[Token(Token = "0x60017CD")]
		[Address(RVA = "0xCB95DC", Offset = "0xCB95DC", VA = "0xCB95DC")]
		private void UpdateDistance()
		{
		}

		[Token(Token = "0x60017CE")]
		[Address(RVA = "0xCB994C", Offset = "0xCB994C", VA = "0xCB994C")]
		public void DecreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x60017CF")]
		[Address(RVA = "0xCB9B0C", Offset = "0xCB9B0C", VA = "0xCB9B0C")]
		public void IncreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x60017D0")]
		[Address(RVA = "0xCB9A08", Offset = "0xCB9A08", VA = "0xCB9A08")]
		private void UpdateSmokeEmissionBasedOnSpeed()
		{
		}

		[Token(Token = "0x60017D1")]
		[Address(RVA = "0xCB9BC8", Offset = "0xCB9BC8", VA = "0xCB9BC8")]
		private float GetCurrentSmokeEmission()
		{
			return default(float);
		}

		[Token(Token = "0x60017D2")]
		[Address(RVA = "0xCB9C50", Offset = "0xCB9C50", VA = "0xCB9C50")]
		public void SmokeButtonStateChanged()
		{
		}

		[Token(Token = "0x60017D3")]
		[Address(RVA = "0xCB9D20", Offset = "0xCB9D20", VA = "0xCB9D20")]
		public void WhistleButtonStateChanged()
		{
		}

		[Token(Token = "0x60017D4")]
		[Address(RVA = "0xCB9E08", Offset = "0xCB9E08", VA = "0xCB9E08")]
		public void ReverseButtonStateChanged()
		{
		}

		[Token(Token = "0x60017D5")]
		[Address(RVA = "0xCB9E18", Offset = "0xCB9E18", VA = "0xCB9E18")]
		public TrainLocomotive()
		{
		}
	}
	[Token(Token = "0x20003F2")]
	public class TrainTrack : MonoBehaviour
	{
		[Token(Token = "0x4000E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _gridSize;

		[Token(Token = "0x4000E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _subDivCount;

		[Token(Token = "0x4000E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _segmentParent;

		[Token(Token = "0x4000E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _trainParent;

		[Token(Token = "0x4000E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _regnerateTrackMeshOnAwake;

		[Token(Token = "0x4000E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _trainLength;

		[Token(Token = "0x4000E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrackSegment[] _trackSegments;

		[Token(Token = "0x170002A9")]
		public float TrackLength
		{
			[Token(Token = "0x60017D6")]
			[Address(RVA = "0xCB876C", Offset = "0xCB876C", VA = "0xCB876C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60017D7")]
			[Address(RVA = "0xCBA248", Offset = "0xCBA248", VA = "0xCBA248")]
			private set
			{
			}
		}

		[Token(Token = "0x60017D8")]
		[Address(RVA = "0xCBA250", Offset = "0xCBA250", VA = "0xCBA250")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017D9")]
		[Address(RVA = "0xCB8774", Offset = "0xCB8774", VA = "0xCB8774")]
		public TrackSegment GetSegment(float distance)
		{
			return null;
		}

		[Token(Token = "0x60017DA")]
		[Address(RVA = "0xCBA254", Offset = "0xCBA254", VA = "0xCBA254")]
		public void Regenerate()
		{
		}

		[Token(Token = "0x60017DB")]
		[Address(RVA = "0xCBA4E8", Offset = "0xCBA4E8", VA = "0xCBA4E8")]
		private void SetScale(float ratio)
		{
		}

		[Token(Token = "0x60017DC")]
		[Address(RVA = "0xCBA63C", Offset = "0xCBA63C", VA = "0xCBA63C")]
		public TrainTrack()
		{
		}
	}
	[Token(Token = "0x20003F3")]
	public class Pose
	{
		[Token(Token = "0x4000E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x4000E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rotation;

		[Token(Token = "0x60017DD")]
		[Address(RVA = "0xCB33E8", Offset = "0xCB33E8", VA = "0xCB33E8")]
		public Pose()
		{
		}

		[Token(Token = "0x60017DE")]
		[Address(RVA = "0xCB3494", Offset = "0xCB3494", VA = "0xCB3494")]
		public Pose(Vector3 position, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x20003F4")]
	public class WindmillBladesController : MonoBehaviour
	{
		[Token(Token = "0x2000DE2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97A034", Offset = "0x97A034")]
		private sealed class <LerpToSpeed>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002212")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002213")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002214")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4002215")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float goalSpeed;

			[Token(Token = "0x4002216")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <totalTime>5__2;

			[Token(Token = "0x4002217")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startSpeed>5__3;

			[Token(Token = "0x170003B0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E00")]
				[Address(RVA = "0xCBAD18", Offset = "0xCBAD18", VA = "0xCBAD18", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003B1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E02")]
				[Address(RVA = "0xCBAD88", Offset = "0xCBAD88", VA = "0xCBAD88", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002DFD")]
			[Address(RVA = "0xCBA928", Offset = "0xCBA928", VA = "0xCBA928")]
			[DebuggerHidden]
			public <LerpToSpeed>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6002DFE")]
			[Address(RVA = "0xCBAAF8", Offset = "0xCBAAF8", VA = "0xCBAAF8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002DFF")]
			[Address(RVA = "0xCBAAFC", Offset = "0xCBAAFC", VA = "0xCBAAFC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E01")]
			[Address(RVA = "0xCBAD20", Offset = "0xCBAD20", VA = "0xCBAD20", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000DE3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97A044", Offset = "0x97A044")]
		private sealed class <PlaySoundDelayed>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002218")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002219")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400221A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x400221B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioClip initial;

			[Token(Token = "0x400221C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeDelayAfterInitial;

			[Token(Token = "0x400221D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AudioClip clip;

			[Token(Token = "0x170003B2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E06")]
				[Address(RVA = "0xCBAE80", Offset = "0xCBAE80", VA = "0xCBAE80", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003B3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E08")]
				[Address(RVA = "0xCBAEF0", Offset = "0xCBAEF0", VA = "0xCBAEF0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E03")]
			[Address(RVA = "0xCBAA20", Offset = "0xCBAA20", VA = "0xCBAA20")]
			[DebuggerHidden]
			public <PlaySoundDelayed>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6002E04")]
			[Address(RVA = "0xCBAD90", Offset = "0xCBAD90", VA = "0xCBAD90", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E05")]
			[Address(RVA = "0xCBAD94", Offset = "0xCBAD94", VA = "0xCBAD94", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E07")]
			[Address(RVA = "0xCBAE88", Offset = "0xCBAE88", VA = "0xCBAE88", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E78")]
		private const float MAX_TIME = 1f;

		[Token(Token = "0x4000E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _windMillRotationSound;

		[Token(Token = "0x4000E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _windMillStartSound;

		[Token(Token = "0x4000E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _windMillStopSound;

		[Token(Token = "0x4000E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x980A10", Offset = "0x980A10")]
		private bool <IsMoving>k__BackingField;

		[Token(Token = "0x4000E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _currentSpeed;

		[Token(Token = "0x4000E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _lerpSpeedCoroutine;

		[Token(Token = "0x4000E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine _audioChangeCr;

		[Token(Token = "0x4000E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _originalRotation;

		[Token(Token = "0x4000E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _rotAngle;

		[Token(Token = "0x170002AA")]
		public bool IsMoving
		{
			[Token(Token = "0x60017DF")]
			[Address(RVA = "0xCBA658", Offset = "0xCBA658", VA = "0xCBA658")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x987728", Offset = "0x987728")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60017E0")]
			[Address(RVA = "0xCBA660", Offset = "0xCBA660", VA = "0xCBA660")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x987738", Offset = "0x987738")]
			private set
			{
			}
		}

		[Token(Token = "0x60017E1")]
		[Address(RVA = "0xCBA66C", Offset = "0xCBA66C", VA = "0xCBA66C")]
		private void Start()
		{
		}

		[Token(Token = "0x60017E2")]
		[Address(RVA = "0xCBA6B0", Offset = "0xCBA6B0", VA = "0xCBA6B0")]
		private void Update()
		{
		}

		[Token(Token = "0x60017E3")]
		[Address(RVA = "0xCBA828", Offset = "0xCBA828", VA = "0xCBA828")]
		public void SetMoveState(bool newMoveState, float goalSpeed)
		{
		}

		[Token(Token = "0x60017E4")]
		[Address(RVA = "0xCBA890", Offset = "0xCBA890", VA = "0xCBA890")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x987748", Offset = "0x987748")]
		private IEnumerator LerpToSpeed(float goalSpeed)
		{
			return null;
		}

		[Token(Token = "0x60017E5")]
		[Address(RVA = "0xCBA954", Offset = "0xCBA954", VA = "0xCBA954")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9877AC", Offset = "0x9877AC")]
		private IEnumerator PlaySoundDelayed(AudioClip initial, AudioClip clip, float timeDelayAfterInitial)
		{
			return null;
		}

		[Token(Token = "0x60017E6")]
		[Address(RVA = "0xCBAA4C", Offset = "0xCBAA4C", VA = "0xCBAA4C")]
		private void PlaySound(AudioClip clip, bool loop = false)
		{
		}

		[Token(Token = "0x60017E7")]
		[Address(RVA = "0xCBAAF0", Offset = "0xCBAAF0", VA = "0xCBAAF0")]
		public WindmillBladesController()
		{
		}
	}
	[Token(Token = "0x20003F5")]
	public class WindmillController : MonoBehaviour
	{
		[Token(Token = "0x4000E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4000E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _maxSpeed;

		[Token(Token = "0x4000E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4000E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WindmillBladesController _bladesRotation;

		[Token(Token = "0x4000E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x60017E8")]
		[Address(RVA = "0xCBAEF8", Offset = "0xCBAEF8", VA = "0xCBAEF8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017E9")]
		[Address(RVA = "0xCBAF74", Offset = "0xCBAF74", VA = "0xCBAF74")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60017EA")]
		[Address(RVA = "0xCBB044", Offset = "0xCBB044", VA = "0xCBB044")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60017EB")]
		[Address(RVA = "0xCBB15C", Offset = "0xCBB15C", VA = "0xCBB15C")]
		private void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60017EC")]
		[Address(RVA = "0xCBB22C", Offset = "0xCBB22C", VA = "0xCBB22C")]
		private void Update()
		{
		}

		[Token(Token = "0x60017ED")]
		[Address(RVA = "0xCBB33C", Offset = "0xCBB33C", VA = "0xCBB33C")]
		public WindmillController()
		{
		}
	}
	[Token(Token = "0x20003F6")]
	public enum EUiDisplayType
	{
		[Token(Token = "0x4000E89")]
		EUDT_WorldGeoQuad,
		[Token(Token = "0x4000E8A")]
		EUDT_OverlayQuad,
		[Token(Token = "0x4000E8B")]
		EUDT_None,
		[Token(Token = "0x4000E8C")]
		EUDT_MaxDislayTypes
	}
	[Token(Token = "0x20003F7")]
	public class OVROverlaySample : MonoBehaviour
	{
		[Token(Token = "0x2000DE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97A054", Offset = "0x97A054")]
		private sealed class <WaitforOVROverlay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400221E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400221F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002220")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x170003B4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E0C")]
				[Address(RVA = "0xCB26CC", Offset = "0xCB26CC", VA = "0xCB26CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003B5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E0E")]
				[Address(RVA = "0xCB273C", Offset = "0xCB273C", VA = "0xCB273C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E09")]
			[Address(RVA = "0xCB1BD8", Offset = "0xCB1BD8", VA = "0xCB1BD8")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6002E0A")]
			[Address(RVA = "0xCB23D0", Offset = "0xCB23D0", VA = "0xCB23D0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E0B")]
			[Address(RVA = "0xCB23D4", Offset = "0xCB23D4", VA = "0xCB23D4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E0D")]
			[Address(RVA = "0xCB26D4", Offset = "0xCB26D4", VA = "0xCB26D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inMenu;

		[Token(Token = "0x4000E8E")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x4000E8F")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x4000E90")]
		private const string noneID = "NoneID";

		[Token(Token = "0x4000E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private UnityEngine.UI.Toggle applicationRadioButton;

		[Token(Token = "0x4000E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityEngine.UI.Toggle noneRadioButton;

		[Token(Token = "0x4000E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x980A50", Offset = "0x980A50")]
		public GameObject mainCamera;

		[Token(Token = "0x4000E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject uiCamera;

		[Token(Token = "0x4000E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject uiGeoParent;

		[Token(Token = "0x4000E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x4000E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x4000E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x4000E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x4000E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x4000E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x980A88", Offset = "0x980A88")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x4000E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x4000E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x4000E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x4000E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float cubeSpawnRadius;

		[Token(Token = "0x4000EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float heightBetweenItems;

		[Token(Token = "0x4000EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int numObjectsPerLevel;

		[Token(Token = "0x4000EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int numLevels;

		[Token(Token = "0x4000EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int numLoopsTrigger;

		[Token(Token = "0x4000EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x60017EE")]
		[Address(RVA = "0xCB0B48", Offset = "0xCB0B48", VA = "0xCB0B48")]
		private void Start()
		{
		}

		[Token(Token = "0x60017EF")]
		[Address(RVA = "0xCB15F8", Offset = "0xCB15F8", VA = "0xCB15F8")]
		private void Update()
		{
		}

		[Token(Token = "0x60017F0")]
		[Address(RVA = "0xCB1754", Offset = "0xCB1754", VA = "0xCB1754")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x60017F1")]
		[Address(RVA = "0xCB18D4", Offset = "0xCB18D4", VA = "0xCB18D4")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x60017F2")]
		[Address(RVA = "0xCB1A54", Offset = "0xCB1A54", VA = "0xCB1A54")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x60017F3")]
		[Address(RVA = "0xCB1728", Offset = "0xCB1728", VA = "0xCB1728")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x60017F4")]
		[Address(RVA = "0xCB1B64", Offset = "0xCB1B64", VA = "0xCB1B64")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x987810", Offset = "0x987810")]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x60017F5")]
		[Address(RVA = "0xCB1C04", Offset = "0xCB1C04", VA = "0xCB1C04")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x60017F6")]
		[Address(RVA = "0xCB0F68", Offset = "0xCB0F68", VA = "0xCB0F68")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x60017F7")]
		[Address(RVA = "0xCB1D68", Offset = "0xCB1D68", VA = "0xCB1D68")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x60017F8")]
		[Address(RVA = "0xCB1C40", Offset = "0xCB1C40", VA = "0xCB1C40")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x60017F9")]
		[Address(RVA = "0xCB2188", Offset = "0xCB2188", VA = "0xCB2188")]
		public void RadioPressed(string radioLabel, string group, UnityEngine.UI.Toggle t)
		{
		}

		[Token(Token = "0x60017FA")]
		[Address(RVA = "0xCB2264", Offset = "0xCB2264", VA = "0xCB2264")]
		public OVROverlaySample()
		{
		}

		[Token(Token = "0x60017FB")]
		[Address(RVA = "0xCB22E0", Offset = "0xCB22E0", VA = "0xCB22E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x987874", Offset = "0x987874")]
		private void <Start>b__24_0(UnityEngine.UI.Toggle t)
		{
		}

		[Token(Token = "0x60017FC")]
		[Address(RVA = "0xCB2330", Offset = "0xCB2330", VA = "0xCB2330")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x987884", Offset = "0x987884")]
		private void <Start>b__24_1(UnityEngine.UI.Toggle t)
		{
		}

		[Token(Token = "0x60017FD")]
		[Address(RVA = "0xCB2380", Offset = "0xCB2380", VA = "0xCB2380")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x987894", Offset = "0x987894")]
		private void <Start>b__24_2(UnityEngine.UI.Toggle t)
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x20003F8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x97774C", Offset = "0x97774C")]
	public class Hand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000DE5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97A064", Offset = "0x97A064")]
		private sealed class <>c
		{
			[Token(Token = "0x4002221")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002222")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__28_0;

			[Token(Token = "0x6002E10")]
			[Address(RVA = "0xDE174C", Offset = "0xDE174C", VA = "0xDE174C")]
			public <>c()
			{
			}

			[Token(Token = "0x6002E11")]
			[Address(RVA = "0xDE1754", Offset = "0xDE1754", VA = "0xDE1754")]
			internal bool <Start>b__28_0(Collider childCollider)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000EA5")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x4000EA6")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x4000EA7")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x4000EA8")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x4000EA9")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x4000EAA")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x4000EAB")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x4000EAC")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x4000EAD")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x4000EAE")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x4000EAF")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x4000EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4000EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4000EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x4000EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x4000EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x4000EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x4000EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x4000EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x4000EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x4000EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x4000EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x4000EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x4000EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x4000EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x4000EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x4000EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x4000EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x60017FE")]
		[Address(RVA = "0xDE0754", Offset = "0xDE0754", VA = "0xDE0754")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017FF")]
		[Address(RVA = "0xDE07AC", Offset = "0xDE07AC", VA = "0xDE07AC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001800")]
		[Address(RVA = "0xDE0C54", Offset = "0xDE0C54", VA = "0xDE0C54")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001801")]
		[Address(RVA = "0xDE0D20", Offset = "0xDE0D20", VA = "0xDE0D20")]
		private void Update()
		{
		}

		[Token(Token = "0x6001802")]
		[Address(RVA = "0xDE0E40", Offset = "0xDE0E40", VA = "0xDE0E40")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x6001803")]
		[Address(RVA = "0xDE1220", Offset = "0xDE1220", VA = "0xDE1220")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001804")]
		[Address(RVA = "0xDE13B8", Offset = "0xDE13B8", VA = "0xDE13B8")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6001805")]
		[Address(RVA = "0xDE1568", Offset = "0xDE1568", VA = "0xDE1568")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6001806")]
		[Address(RVA = "0xDE0EDC", Offset = "0xDE0EDC", VA = "0xDE0EDC")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001807")]
		[Address(RVA = "0xDE0F7C", Offset = "0xDE0F7C", VA = "0xDE0F7C")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x6001808")]
		[Address(RVA = "0xDE0A18", Offset = "0xDE0A18", VA = "0xDE0A18")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x6001809")]
		[Address(RVA = "0xDE16D0", Offset = "0xDE16D0", VA = "0xDE16D0")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x20003F9")]
	public enum HandPoseId
	{
		[Token(Token = "0x4000EC2")]
		Default,
		[Token(Token = "0x4000EC3")]
		Generic,
		[Token(Token = "0x4000EC4")]
		PingPongBall,
		[Token(Token = "0x4000EC5")]
		Controller
	}
	[Token(Token = "0x20003FA")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x4000EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x4000EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x4000EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x170002AB")]
		public bool AllowPointing
		{
			[Token(Token = "0x600180A")]
			[Address(RVA = "0xDE16C0", Offset = "0xDE16C0", VA = "0xDE16C0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002AC")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x600180B")]
			[Address(RVA = "0xDE16C8", Offset = "0xDE16C8", VA = "0xDE16C8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002AD")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x600180C")]
			[Address(RVA = "0xDE16B8", Offset = "0xDE16B8", VA = "0xDE16B8")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x600180D")]
		[Address(RVA = "0xDE1790", Offset = "0xDE1790", VA = "0xDE1790")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x20003FB")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x4000EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4000ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4000ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x600180E")]
		[Address(RVA = "0xDE1798", Offset = "0xDE1798", VA = "0xDE1798")]
		private void Update()
		{
		}

		[Token(Token = "0x600180F")]
		[Address(RVA = "0xDE1A64", Offset = "0xDE1A64", VA = "0xDE1A64")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6001810")]
		[Address(RVA = "0xDE1AD4", Offset = "0xDE1AD4", VA = "0xDE1AD4")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6001811")]
		[Address(RVA = "0xDE1B24", Offset = "0xDE1B24", VA = "0xDE1B24")]
		public TouchController()
		{
		}
	}
}
namespace Oculus.Spatializer.Propagation
{
	[Token(Token = "0x20003FC")]
	public enum FaceType : uint
	{
		[Token(Token = "0x4000ECD")]
		TRIANGLES,
		[Token(Token = "0x4000ECE")]
		QUADS
	}
	[Token(Token = "0x20003FD")]
	public enum MaterialProperty : uint
	{
		[Token(Token = "0x4000ED0")]
		ABSORPTION,
		[Token(Token = "0x4000ED1")]
		TRANSMISSION,
		[Token(Token = "0x4000ED2")]
		SCATTERING
	}
	[Token(Token = "0x20003FE")]
	public struct MeshGroup
	{
		[Token(Token = "0x4000ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UIntPtr indexOffset;

		[Token(Token = "0x4000ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UIntPtr faceCount;

		[Token(Token = "0x4000ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FaceType faceType;

		[Token(Token = "0x4000ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public IntPtr material;
	}
}
namespace Oculus.Avatar
{
	[Token(Token = "0x20003FF")]
	public static class AvatarLogger
	{
		[Token(Token = "0x4000ED7")]
		public const string LogAvatar = "[Avatars] - ";

		[Token(Token = "0x4000ED8")]
		public const string Tab = "    ";

		[Token(Token = "0x6001812")]
		[Address(RVA = "0xDE20F4", Offset = "0xDE20F4", VA = "0xDE20F4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9878A4", Offset = "0x9878A4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9878A4", Offset = "0x9878A4")]
		public static void Log(string logMsg)
		{
		}

		[Token(Token = "0x6001813")]
		[Address(RVA = "0xDE217C", Offset = "0xDE217C", VA = "0xDE217C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x987904", Offset = "0x987904")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x987904", Offset = "0x987904")]
		public static void Log(string logMsg, UnityEngine.Object context)
		{
		}

		[Token(Token = "0x6001814")]
		[Address(RVA = "0xDE2214", Offset = "0xDE2214", VA = "0xDE2214")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x987964", Offset = "0x987964")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x987964", Offset = "0x987964")]
		public static void LogWarning(string logMsg)
		{
		}

		[Token(Token = "0x6001815")]
		[Address(RVA = "0xDE229C", Offset = "0xDE229C", VA = "0xDE229C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9879C4", Offset = "0x9879C4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9879C4", Offset = "0x9879C4")]
		public static void LogError(string logMsg)
		{
		}

		[Token(Token = "0x6001816")]
		[Address(RVA = "0xDE2324", Offset = "0xDE2324", VA = "0xDE2324")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x987A24", Offset = "0x987A24")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x987A24", Offset = "0x987A24")]
		public static void LogError(string logMsg, UnityEngine.Object context)
		{
		}
	}
	[Token(Token = "0x2000400")]
	public class CAPI
	{
		[Token(Token = "0x2000DE6")]
		public delegate void LoggingDelegate(IntPtr str);

		[Token(Token = "0x2000DE7")]
		public enum Result
		{
			[Token(Token = "0x4002224")]
			Success = 0,
			[Token(Token = "0x4002225")]
			Failure = -1000,
			[Token(Token = "0x4002226")]
			Failure_InvalidParameter = -1001,
			[Token(Token = "0x4002227")]
			Failure_NotInitialized = -1002,
			[Token(Token = "0x4002228")]
			Failure_InvalidOperation = -1003,
			[Token(Token = "0x4002229")]
			Failure_Unsupported = -1004,
			[Token(Token = "0x400222A")]
			Failure_NotYetImplemented = -1005,
			[Token(Token = "0x400222B")]
			Failure_OperationFailed = -1006,
			[Token(Token = "0x400222C")]
			Failure_InsufficientSize = -1007
		}

		[Token(Token = "0x2000DE8")]
		private static class OVRP_1_30_0
		{
			[Token(Token = "0x400222D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly Version version;

			[PreserveSig]
			[Token(Token = "0x6002E16")]
			[Address(RVA = "0xDEAC24", Offset = "0xDEAC24", VA = "0xDEAC24")]
			public static extern Result ovrp_SendEvent2(string name, string param, string source);
		}

		[Token(Token = "0x4000ED9")]
		private const string LibFile = "ovravatarloader";

		[Token(Token = "0x4000EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IntPtr nativeVisemeData;

		[Token(Token = "0x4000EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IntPtr nativeGazeTargetsData;

		[Token(Token = "0x4000EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IntPtr nativeAvatarLightsData;

		[Token(Token = "0x4000EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IntPtr DebugLineCountData;

		[Token(Token = "0x4000EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static float[] scratchBufferFloat;

		[Token(Token = "0x4000EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject debugLineGo;

		[Token(Token = "0x4000EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static string SDKRuntimePrefix;

		[Token(Token = "0x4000EE1")]
		private const string ovrPluginDLL = "OVRPlugin";

		[Token(Token = "0x4000EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Version ovrPluginVersion;

		[PreserveSig]
		[Token(Token = "0x6001817")]
		[Address(RVA = "0xDE2424", Offset = "0xDE2424", VA = "0xDE2424")]
		public static extern void ovrAvatar_InitializeAndroidUnity(string appID);

		[Token(Token = "0x6001818")]
		[Address(RVA = "0xDE24D4", Offset = "0xDE24D4", VA = "0xDE24D4")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x6001819")]
		[Address(RVA = "0xDE2698", Offset = "0xDE2698", VA = "0xDE2698")]
		public static void Shutdown()
		{
		}

		[PreserveSig]
		[Token(Token = "0x600181A")]
		[Address(RVA = "0xDE2778", Offset = "0xDE2778", VA = "0xDE2778")]
		public static extern void ovrAvatar_Shutdown();

		[PreserveSig]
		[Token(Token = "0x600181B")]
		[Address(RVA = "0xDE2808", Offset = "0xDE2808", VA = "0xDE2808")]
		public static extern IntPtr ovrAvatarMessage_Pop();

		[PreserveSig]
		[Token(Token = "0x600181C")]
		[Address(RVA = "0xDE2898", Offset = "0xDE2898", VA = "0xDE2898")]
		public static extern ovrAvatarMessageType ovrAvatarMessage_GetType(IntPtr msg);

		[Token(Token = "0x600181D")]
		[Address(RVA = "0xDE2938", Offset = "0xDE2938", VA = "0xDE2938")]
		public static ovrAvatarMessage_AvatarSpecification ovrAvatarMessage_GetAvatarSpecification(IntPtr msg)
		{
			return default(ovrAvatarMessage_AvatarSpecification);
		}

		[PreserveSig]
		[Token(Token = "0x600181E")]
		[Address(RVA = "0xDE2A30", Offset = "0xDE2A30", VA = "0xDE2A30")]
		private static extern IntPtr ovrAvatarMessage_GetAvatarSpecification_Native(IntPtr msg);

		[Token(Token = "0x600181F")]
		[Address(RVA = "0xDE2AD0", Offset = "0xDE2AD0", VA = "0xDE2AD0")]
		public static ovrAvatarMessage_AssetLoaded ovrAvatarMessage_GetAssetLoaded(IntPtr msg)
		{
			return default(ovrAvatarMessage_AssetLoaded);
		}

		[PreserveSig]
		[Token(Token = "0x6001820")]
		[Address(RVA = "0xDE2BC8", Offset = "0xDE2BC8", VA = "0xDE2BC8")]
		private static extern IntPtr ovrAvatarMessage_GetAssetLoaded_Native(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6001821")]
		[Address(RVA = "0xDE2C68", Offset = "0xDE2C68", VA = "0xDE2C68")]
		public static extern void ovrAvatarMessage_Free(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6001822")]
		[Address(RVA = "0xDE2D08", Offset = "0xDE2D08", VA = "0xDE2D08")]
		public static extern IntPtr ovrAvatarSpecificationRequest_Create(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001823")]
		[Address(RVA = "0xDE2DA8", Offset = "0xDE2DA8", VA = "0xDE2DA8")]
		public static extern void ovrAvatarSpecificationRequest_Destroy(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6001824")]
		[Address(RVA = "0xDE2E48", Offset = "0xDE2E48", VA = "0xDE2E48")]
		public static extern void ovrAvatarSpecificationRequest_SetCombineMeshes(IntPtr specificationRequest, bool useCombinedMesh);

		[PreserveSig]
		[Token(Token = "0x6001825")]
		[Address(RVA = "0xDE2EF8", Offset = "0xDE2EF8", VA = "0xDE2EF8")]
		public static extern void ovrAvatarSpecificationRequest_SetLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6001826")]
		[Address(RVA = "0xDE2FA8", Offset = "0xDE2FA8", VA = "0xDE2FA8")]
		public static extern void ovrAvatarSpecificationRequest_SetLevelOfDetail(IntPtr specificationRequest, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6001827")]
		[Address(RVA = "0xDE3058", Offset = "0xDE3058", VA = "0xDE3058")]
		public static extern void ovrAvatar_RequestAvatarSpecification(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001828")]
		[Address(RVA = "0xDE30F8", Offset = "0xDE30F8", VA = "0xDE30F8")]
		public static extern void ovrAvatar_RequestAvatarSpecificationFromSpecRequest(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6001829")]
		[Address(RVA = "0xDE3198", Offset = "0xDE3198", VA = "0xDE3198")]
		public static extern void ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x600182A")]
		[Address(RVA = "0xDE3248", Offset = "0xDE3248", VA = "0xDE3248")]
		public static extern void ovrAvatarSpecificationRequest_SetExpressiveFlag(IntPtr specificationRequest, bool enable);

		[PreserveSig]
		[Token(Token = "0x600182B")]
		[Address(RVA = "0xDE32F8", Offset = "0xDE32F8", VA = "0xDE32F8")]
		public static extern IntPtr ovrAvatar_Create(IntPtr avatarSpecification, ovrAvatarCapabilities capabilities);

		[PreserveSig]
		[Token(Token = "0x600182C")]
		[Address(RVA = "0xDE33A8", Offset = "0xDE33A8", VA = "0xDE33A8")]
		public static extern void ovrAvatar_Destroy(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x600182D")]
		[Address(RVA = "0xDE3448", Offset = "0xDE3448", VA = "0xDE3448")]
		public static extern void ovrAvatarPose_UpdateBody(IntPtr avatar, ovrAvatarTransform headPose);

		[Token(Token = "0x600182E")]
		[Address(RVA = "0xDE3510", Offset = "0xDE3510", VA = "0xDE3510")]
		public static void ovrAvatarPose_UpdateVoiceVisualization(IntPtr avatar, float[] pcmData)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600182F")]
		[Address(RVA = "0xDE3594", Offset = "0xDE3594", VA = "0xDE3594")]
		private static extern void ovrAvatarPose_UpdateVoiceVisualization_Native(IntPtr avatar, uint pcmDataSize, [In] float[] pcmData);

		[PreserveSig]
		[Token(Token = "0x6001830")]
		[Address(RVA = "0xDE3654", Offset = "0xDE3654", VA = "0xDE3654")]
		public static extern void ovrAvatarPose_UpdateHands(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight);

		[PreserveSig]
		[Token(Token = "0x6001831")]
		[Address(RVA = "0xDE3734", Offset = "0xDE3734", VA = "0xDE3734")]
		public static extern void ovrAvatarPose_UpdateHandsWithType(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight, ovrAvatarControllerType type);

		[PreserveSig]
		[Token(Token = "0x6001832")]
		[Address(RVA = "0xDE3824", Offset = "0xDE3824", VA = "0xDE3824")]
		public static extern void ovrAvatarPose_Finalize(IntPtr avatar, float elapsedSeconds);

		[PreserveSig]
		[Token(Token = "0x6001833")]
		[Address(RVA = "0xDE38D4", Offset = "0xDE38D4", VA = "0xDE38D4")]
		public static extern void ovrAvatar_SetLeftControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001834")]
		[Address(RVA = "0xDE3984", Offset = "0xDE3984", VA = "0xDE3984")]
		public static extern void ovrAvatar_SetRightControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001835")]
		[Address(RVA = "0xDE3A34", Offset = "0xDE3A34", VA = "0xDE3A34")]
		public static extern void ovrAvatar_SetLeftHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001836")]
		[Address(RVA = "0xDE3AE4", Offset = "0xDE3AE4", VA = "0xDE3AE4")]
		public static extern void ovrAvatar_SetRightHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001837")]
		[Address(RVA = "0xDE3B94", Offset = "0xDE3B94", VA = "0xDE3B94")]
		public static extern uint ovrAvatarComponent_Count(IntPtr avatar);

		[Token(Token = "0x6001838")]
		[Address(RVA = "0xDE3C34", Offset = "0xDE3C34", VA = "0xDE3C34")]
		public static void ovrAvatarComponent_Get(IntPtr avatar, uint index, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[Token(Token = "0x6001839")]
		[Address(RVA = "0xDE3D74", Offset = "0xDE3D74", VA = "0xDE3D74")]
		public static void ovrAvatarComponent_Get(IntPtr componentPtr, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600183A")]
		[Address(RVA = "0xDE3CC4", Offset = "0xDE3CC4", VA = "0xDE3CC4")]
		public static extern IntPtr ovrAvatarComponent_Get_Native(IntPtr avatar, uint index);

		[Token(Token = "0x600183B")]
		[Address(RVA = "0xDE3F68", Offset = "0xDE3F68", VA = "0xDE3F68")]
		public static bool ovrAvatarPose_GetBaseComponent(IntPtr avatar, ref ovrAvatarBaseComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x600183C")]
		[Address(RVA = "0xDE40A0", Offset = "0xDE40A0", VA = "0xDE40A0")]
		private static extern IntPtr ovrAvatarPose_GetBaseComponent_Native(IntPtr avatar);

		[Token(Token = "0x600183D")]
		public static IntPtr MarshalRenderComponent<T>(IntPtr ptr) where T : struct
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600183E")]
		[Address(RVA = "0xDE4140", Offset = "0xDE4140", VA = "0xDE4140")]
		public static bool ovrAvatarPose_GetBodyComponent(IntPtr avatar, ref ovrAvatarBodyComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x600183F")]
		[Address(RVA = "0xDE43B0", Offset = "0xDE43B0", VA = "0xDE43B0")]
		private static extern IntPtr ovrAvatarPose_GetBodyComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001840")]
		[Address(RVA = "0xDE4450", Offset = "0xDE4450", VA = "0xDE4450")]
		public static bool ovrAvatarPose_GetLeftControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001841")]
		[Address(RVA = "0xDE4588", Offset = "0xDE4588", VA = "0xDE4588")]
		private static extern IntPtr ovrAvatarPose_GetLeftControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001842")]
		[Address(RVA = "0xDE4628", Offset = "0xDE4628", VA = "0xDE4628")]
		public static bool ovrAvatarPose_GetRightControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001843")]
		[Address(RVA = "0xDE4760", Offset = "0xDE4760", VA = "0xDE4760")]
		private static extern IntPtr ovrAvatarPose_GetRightControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001844")]
		[Address(RVA = "0xDE4800", Offset = "0xDE4800", VA = "0xDE4800")]
		public static bool ovrAvatarPose_GetLeftHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001845")]
		[Address(RVA = "0xDE4938", Offset = "0xDE4938", VA = "0xDE4938")]
		private static extern IntPtr ovrAvatarPose_GetLeftHandComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001846")]
		[Address(RVA = "0xDE49D8", Offset = "0xDE49D8", VA = "0xDE49D8")]
		public static bool ovrAvatarPose_GetRightHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001847")]
		[Address(RVA = "0xDE4B10", Offset = "0xDE4B10", VA = "0xDE4B10")]
		private static extern IntPtr ovrAvatarPose_GetRightHandComponent_Native(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001848")]
		[Address(RVA = "0xDE4BB0", Offset = "0xDE4BB0", VA = "0xDE4BB0")]
		public static extern void ovrAvatarAsset_BeginLoading(ulong assetID);

		[PreserveSig]
		[Token(Token = "0x6001849")]
		[Address(RVA = "0xDE4C50", Offset = "0xDE4C50", VA = "0xDE4C50")]
		public static extern bool ovrAvatarAsset_BeginLoadingLOD(ulong assetId, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x600184A")]
		[Address(RVA = "0xDE4D08", Offset = "0xDE4D08", VA = "0xDE4D08")]
		public static extern ovrAvatarAssetType ovrAvatarAsset_GetType(IntPtr assetHandle);

		[Token(Token = "0x600184B")]
		[Address(RVA = "0xDE4DA8", Offset = "0xDE4DA8", VA = "0xDE4DA8")]
		public static ovrAvatarMeshAssetData ovrAvatarAsset_GetMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetData);
		}

		[Token(Token = "0x600184C")]
		[Address(RVA = "0xDE4F64", Offset = "0xDE4F64", VA = "0xDE4F64")]
		public static ovrAvatarMeshAssetDataV2 ovrAvatarAsset_GetCombinedMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetDataV2);
		}

		[PreserveSig]
		[Token(Token = "0x600184D")]
		[Address(RVA = "0xDE5080", Offset = "0xDE5080", VA = "0xDE5080")]
		private static extern IntPtr ovrAvatarAsset_GetCombinedMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x600184E")]
		[Address(RVA = "0xDE4EC4", Offset = "0xDE4EC4", VA = "0xDE4EC4")]
		private static extern IntPtr ovrAvatarAsset_GetMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x600184F")]
		[Address(RVA = "0xDE5120", Offset = "0xDE5120", VA = "0xDE5120")]
		public static extern uint ovrAvatarAsset_GetMeshBlendShapeCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001850")]
		[Address(RVA = "0xDE51C0", Offset = "0xDE51C0", VA = "0xDE51C0")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeName(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6001851")]
		[Address(RVA = "0xDE5270", Offset = "0xDE5270", VA = "0xDE5270")]
		public static extern uint ovrAvatarAsset_GetSubmeshCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001852")]
		[Address(RVA = "0xDE5310", Offset = "0xDE5310", VA = "0xDE5310")]
		public static extern uint ovrAvatarAsset_GetSubmeshLastIndex(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6001853")]
		[Address(RVA = "0xDE53C0", Offset = "0xDE53C0", VA = "0xDE53C0")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeVertices(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001854")]
		[Address(RVA = "0xDE5460", Offset = "0xDE5460", VA = "0xDE5460")]
		public static extern IntPtr ovrAvatarAsset_GetAvatar(IntPtr assetHandle);

		[Token(Token = "0x6001855")]
		[Address(RVA = "0xDE5500", Offset = "0xDE5500", VA = "0xDE5500")]
		public static ulong[] ovrAvatarAsset_GetCombinedMeshIDs(IntPtr assetHandle)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001856")]
		[Address(RVA = "0xDE572C", Offset = "0xDE572C", VA = "0xDE572C")]
		public static extern IntPtr ovrAvatarAsset_GetCombinedMeshIDs_Native(IntPtr assetHandle, IntPtr count);

		[Token(Token = "0x6001857")]
		[Address(RVA = "0xDE57DC", Offset = "0xDE57DC", VA = "0xDE57DC")]
		public static void ovrAvatar_GetCombinedMeshAlphaData(IntPtr avatar, ref ulong textureID, ref Vector4 offset)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001858")]
		[Address(RVA = "0xDE5990", Offset = "0xDE5990", VA = "0xDE5990")]
		public static extern IntPtr ovrAvatar_GetCombinedMeshAlphaData_Native(IntPtr avatar, IntPtr textureIDPtr, IntPtr offsetPtr);

		[Token(Token = "0x6001859")]
		[Address(RVA = "0xDE5A48", Offset = "0xDE5A48", VA = "0xDE5A48")]
		public static ovrAvatarTextureAssetData ovrAvatarAsset_GetTextureData(IntPtr assetPtr)
		{
			return default(ovrAvatarTextureAssetData);
		}

		[PreserveSig]
		[Token(Token = "0x600185A")]
		[Address(RVA = "0xDE5B54", Offset = "0xDE5B54", VA = "0xDE5B54")]
		private static extern IntPtr ovrAvatarAsset_GetTextureData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x600185B")]
		[Address(RVA = "0xDE5BF4", Offset = "0xDE5BF4", VA = "0xDE5BF4")]
		private static extern IntPtr ovrAvatarAsset_GetMaterialData_Native(IntPtr assetPtr);

		[Token(Token = "0x600185C")]
		[Address(RVA = "0xDE5C94", Offset = "0xDE5C94", VA = "0xDE5C94")]
		public static ovrAvatarMaterialState ovrAvatarAsset_GetMaterialState(IntPtr assetPtr)
		{
			return default(ovrAvatarMaterialState);
		}

		[PreserveSig]
		[Token(Token = "0x600185D")]
		[Address(RVA = "0xDE5D9C", Offset = "0xDE5D9C", VA = "0xDE5D9C")]
		public static extern ovrAvatarRenderPartType ovrAvatarRenderPart_GetType(IntPtr renderPart);

		[Token(Token = "0x600185E")]
		[Address(RVA = "0xDE5E3C", Offset = "0xDE5E3C", VA = "0xDE5E3C")]
		public static ovrAvatarRenderPart_SkinnedMeshRender ovrAvatarRenderPart_GetSkinnedMeshRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRender);
		}

		[PreserveSig]
		[Token(Token = "0x600185F")]
		[Address(RVA = "0xDE5F44", Offset = "0xDE5F44", VA = "0xDE5F44")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001860")]
		[Address(RVA = "0xDE5FE4", Offset = "0xDE5FE4", VA = "0xDE5FE4")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001861")]
		[Address(RVA = "0xDE6094", Offset = "0xDE6094", VA = "0xDE6094")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001862")]
		[Address(RVA = "0xDE6144", Offset = "0xDE6144", VA = "0xDE6144")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001863")]
		[Address(RVA = "0xDE61F4", Offset = "0xDE61F4", VA = "0xDE61F4")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRender_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001864")]
		[Address(RVA = "0xDE6294", Offset = "0xDE6294", VA = "0xDE6294")]
		public static extern bool ovrAvatarSkinnedMeshRender_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001865")]
		[Address(RVA = "0xDE633C", Offset = "0xDE633C", VA = "0xDE633C")]
		public static extern bool ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001866")]
		[Address(RVA = "0xDE63E4", Offset = "0xDE63E4", VA = "0xDE63E4")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001867")]
		[Address(RVA = "0xDE6484", Offset = "0xDE6484", VA = "0xDE6484")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001868")]
		[Address(RVA = "0xDE6524", Offset = "0xDE6524", VA = "0xDE6524")]
		public static extern ovrAvatarMaterialState ovrAvatarSkinnedMeshRender_GetMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001869")]
		[Address(RVA = "0xDE65F8", Offset = "0xDE65F8", VA = "0xDE65F8")]
		public static extern ovrAvatarPBSMaterialState ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600186A")]
		[Address(RVA = "0xDE66A8", Offset = "0xDE66A8", VA = "0xDE66A8")]
		public static extern ovrAvatarExpressiveParameters ovrAvatar_GetExpressiveParameters(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x600186B")]
		[Address(RVA = "0xDE6758", Offset = "0xDE6758", VA = "0xDE6758")]
		public static extern ulong ovrAvatarSkinnedMeshRender_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600186C")]
		[Address(RVA = "0xDE67F8", Offset = "0xDE67F8", VA = "0xDE67F8")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600186D")]
		[Address(RVA = "0xDE6898", Offset = "0xDE6898", VA = "0xDE6898")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600186E")]
		[Address(RVA = "0xDE6938", Offset = "0xDE6938", VA = "0xDE6938")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x600186F")]
		[Address(RVA = "0xDE69F0", Offset = "0xDE69F0", VA = "0xDE69F0")]
		public static extern void ovrAvatar_SetActionUnitOnsetSpeed(IntPtr avatar, float onsetSpeed);

		[PreserveSig]
		[Token(Token = "0x6001870")]
		[Address(RVA = "0xDE6AA0", Offset = "0xDE6AA0", VA = "0xDE6AA0")]
		public static extern void ovrAvatar_SetActionUnitFalloffSpeed(IntPtr avatar, float falloffSpeed);

		[PreserveSig]
		[Token(Token = "0x6001871")]
		[Address(RVA = "0xDE6B50", Offset = "0xDE6B50", VA = "0xDE6B50")]
		public static extern void ovrAvatar_SetVisemeMultiplier(IntPtr avatar, float visemeMultiplier);

		[PreserveSig]
		[Token(Token = "0x6001872")]
		[Address(RVA = "0xDE6C00", Offset = "0xDE6C00", VA = "0xDE6C00")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6001873")]
		[Address(RVA = "0xDE6CB8", Offset = "0xDE6CB8", VA = "0xDE6CB8")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6001874")]
		[Address(RVA = "0xDE6D70", Offset = "0xDE6D70", VA = "0xDE6D70")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001875")]
		[Address(RVA = "0xDE6E10", Offset = "0xDE6E10", VA = "0xDE6E10")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID(IntPtr renderPart);

		[Token(Token = "0x6001876")]
		[Address(RVA = "0xDE6EB0", Offset = "0xDE6EB0", VA = "0xDE6EB0")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS ovrAvatarRenderPart_GetSkinnedMeshRenderPBS(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS);
		}

		[PreserveSig]
		[Token(Token = "0x6001877")]
		[Address(RVA = "0xDE6FB8", Offset = "0xDE6FB8", VA = "0xDE6FB8")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native(IntPtr renderPart);

		[Token(Token = "0x6001878")]
		[Address(RVA = "0xDE7058", Offset = "0xDE7058", VA = "0xDE7058")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2);
		}

		[PreserveSig]
		[Token(Token = "0x6001879")]
		[Address(RVA = "0xDE7160", Offset = "0xDE7160", VA = "0xDE7160")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native(IntPtr renderPart);

		[Token(Token = "0x600187A")]
		[Address(RVA = "0xDE7200", Offset = "0xDE7200", VA = "0xDE7200")]
		public static void ovrAvatarSkinnedMeshRender_GetBlendShapeParams(IntPtr renderPart, ref ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600187B")]
		[Address(RVA = "0xDE7328", Offset = "0xDE7328", VA = "0xDE7328")]
		private static extern IntPtr ovrAvatarSkinnedMeshRender_GetBlendShapeParams_Native(IntPtr renderPart);

		[Token(Token = "0x600187C")]
		[Address(RVA = "0xDE73C8", Offset = "0xDE73C8", VA = "0xDE73C8")]
		public static ovrAvatarRenderPart_ProjectorRender ovrAvatarRenderPart_GetProjectorRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_ProjectorRender);
		}

		[Token(Token = "0x600187D")]
		[Address(RVA = "0xDE7570", Offset = "0xDE7570", VA = "0xDE7570")]
		public static ovrAvatarPBSMaterialState[] ovrAvatar_GetBodyPBSMaterialStates(IntPtr renderPart)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600187E")]
		[Address(RVA = "0xDE77F8", Offset = "0xDE77F8", VA = "0xDE77F8")]
		private static extern IntPtr ovrAvatar_GetBodyPBSMaterialStates_Native(IntPtr avatar, IntPtr count);

		[PreserveSig]
		[Token(Token = "0x600187F")]
		[Address(RVA = "0xDE74D0", Offset = "0xDE74D0", VA = "0xDE74D0")]
		private static extern IntPtr ovrAvatarRenderPart_GetProjectorRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001880")]
		[Address(RVA = "0xDE78A8", Offset = "0xDE78A8", VA = "0xDE78A8")]
		public static extern uint ovrAvatar_GetReferencedAssetCount(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001881")]
		[Address(RVA = "0xDE7948", Offset = "0xDE7948", VA = "0xDE7948")]
		public static extern ulong ovrAvatar_GetReferencedAsset(IntPtr avatar, uint index);

		[PreserveSig]
		[Token(Token = "0x6001882")]
		[Address(RVA = "0xDE79F8", Offset = "0xDE79F8", VA = "0xDE79F8")]
		public static extern void ovrAvatar_SetLeftHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6001883")]
		[Address(RVA = "0xDE7AA8", Offset = "0xDE7AA8", VA = "0xDE7AA8")]
		public static extern void ovrAvatar_SetRightHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6001884")]
		[Address(RVA = "0xDE7B58", Offset = "0xDE7B58", VA = "0xDE7B58")]
		public static extern void ovrAvatar_SetLeftHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6001885")]
		[Address(RVA = "0xDE7C18", Offset = "0xDE7C18", VA = "0xDE7C18")]
		public static extern void ovrAvatar_SetRightHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6001886")]
		[Address(RVA = "0xDE7CD8", Offset = "0xDE7CD8", VA = "0xDE7CD8")]
		public static extern void ovrAvatar_UpdatePoseFromPacket(IntPtr avatar, IntPtr packet, float secondsFromStart);

		[PreserveSig]
		[Token(Token = "0x6001887")]
		[Address(RVA = "0xDE7D98", Offset = "0xDE7D98", VA = "0xDE7D98")]
		public static extern void ovrAvatarPacket_BeginRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001888")]
		[Address(RVA = "0xDE7E38", Offset = "0xDE7E38", VA = "0xDE7E38")]
		public static extern IntPtr ovrAvatarPacket_EndRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001889")]
		[Address(RVA = "0xDE7ED8", Offset = "0xDE7ED8", VA = "0xDE7ED8")]
		public static extern uint ovrAvatarPacket_GetSize(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x600188A")]
		[Address(RVA = "0xDE7F78", Offset = "0xDE7F78", VA = "0xDE7F78")]
		public static extern float ovrAvatarPacket_GetDurationSeconds(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x600188B")]
		[Address(RVA = "0xDE8018", Offset = "0xDE8018", VA = "0xDE8018")]
		public static extern void ovrAvatarPacket_Free(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x600188C")]
		[Address(RVA = "0xDE80B8", Offset = "0xDE80B8", VA = "0xDE80B8")]
		public static extern bool ovrAvatarPacket_Write(IntPtr packet, uint bufferSize, [Out] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x600188D")]
		[Address(RVA = "0xDE81FC", Offset = "0xDE81FC", VA = "0xDE81FC")]
		public static extern IntPtr ovrAvatarPacket_Read(uint bufferSize, [In] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x600188E")]
		[Address(RVA = "0xDE82B4", Offset = "0xDE82B4", VA = "0xDE82B4")]
		private static extern void ovrAvatar_SetInternalForceASTCTextures(bool value);

		[Token(Token = "0x600188F")]
		[Address(RVA = "0xDE8354", Offset = "0xDE8354", VA = "0xDE8354")]
		public static void ovrAvatar_SetForceASTCTextures(bool value)
		{
		}

		[Token(Token = "0x6001890")]
		[Address(RVA = "0xDE83B8", Offset = "0xDE83B8", VA = "0xDE83B8")]
		public static void ovrAvatar_OverrideExpressiveLogic(IntPtr avatar, ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001891")]
		[Address(RVA = "0xDE84D4", Offset = "0xDE84D4", VA = "0xDE84D4")]
		private static extern void ovrAvatar_OverrideExpressiveLogic_Native(IntPtr avatar, IntPtr state);

		[Token(Token = "0x6001892")]
		[Address(RVA = "0xDE8584", Offset = "0xDE8584", VA = "0xDE8584")]
		public static void ovrAvatar_SetVisemes(IntPtr avatar, ovrAvatarVisemes visemes)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001893")]
		[Address(RVA = "0xDE86C8", Offset = "0xDE86C8", VA = "0xDE86C8")]
		private static extern void ovrAvatar_SetVisemes_Native(IntPtr avatar, IntPtr visemes);

		[PreserveSig]
		[Token(Token = "0x6001894")]
		[Address(RVA = "0xDE8778", Offset = "0xDE8778", VA = "0xDE8778")]
		public static extern void ovrAvatar_UpdateWorldTransform(IntPtr avatar, ovrAvatarTransform transform);

		[Token(Token = "0x6001895")]
		[Address(RVA = "0xDE8840", Offset = "0xDE8840", VA = "0xDE8840")]
		public static void ovrAvatar_UpdateGazeTargets(ovrAvatarGazeTargets targets)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001896")]
		[Address(RVA = "0xDE8C68", Offset = "0xDE8C68", VA = "0xDE8C68")]
		private static extern void ovrAvatar_UpdateGazeTargets_Native(IntPtr targets);

		[PreserveSig]
		[Token(Token = "0x6001897")]
		[Address(RVA = "0xDE8D08", Offset = "0xDE8D08", VA = "0xDE8D08")]
		public static extern void ovrAvatar_RemoveGazeTargets(uint targetCount, uint[] ids);

		[Token(Token = "0x6001898")]
		[Address(RVA = "0xDE8DC0", Offset = "0xDE8DC0", VA = "0xDE8DC0")]
		public static void ovrAvatar_UpdateLights(ovrAvatarLights lights)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001899")]
		[Address(RVA = "0xDE9724", Offset = "0xDE9724", VA = "0xDE9724")]
		private static extern void ovrAvatar_UpdateLights_Native(IntPtr lights);

		[PreserveSig]
		[Token(Token = "0x600189A")]
		[Address(RVA = "0xDE97C4", Offset = "0xDE97C4", VA = "0xDE97C4")]
		public static extern void ovrAvatar_RemoveLights(uint lightCount, uint[] ids);

		[Token(Token = "0x600189B")]
		[Address(RVA = "0xDE23BC", Offset = "0xDE23BC", VA = "0xDE23BC")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x987A84", Offset = "0x987A84")]
		public static void LoggingCallback(IntPtr str)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600189C")]
		[Address(RVA = "0xDE987C", Offset = "0xDE987C", VA = "0xDE987C")]
		public static extern void ovrAvatar_RegisterLoggingCallback(LoggingDelegate callback);

		[PreserveSig]
		[Token(Token = "0x600189D")]
		[Address(RVA = "0xDE9920", Offset = "0xDE9920", VA = "0xDE9920")]
		public static extern void ovrAvatar_SetLoggingLevel(ovrAvatarLogLevel level);

		[PreserveSig]
		[Token(Token = "0x600189E")]
		[Address(RVA = "0xDE99C0", Offset = "0xDE99C0", VA = "0xDE99C0")]
		public static extern IntPtr ovrAvatar_GetDebugTransforms_Native(IntPtr count);

		[PreserveSig]
		[Token(Token = "0x600189F")]
		[Address(RVA = "0xDE9A60", Offset = "0xDE9A60", VA = "0xDE9A60")]
		public static extern IntPtr ovrAvatar_GetDebugLines_Native(IntPtr count);

		[Token(Token = "0x60018A0")]
		[Address(RVA = "0xDE9B00", Offset = "0xDE9B00", VA = "0xDE9B00")]
		public static void ovrAvatar_DrawDebugLines()
		{
		}

		[PreserveSig]
		[Token(Token = "0x60018A1")]
		[Address(RVA = "0xDEA770", Offset = "0xDEA770", VA = "0xDEA770")]
		public static extern void ovrAvatar_SetDebugDrawContext(uint context);

		[Token(Token = "0x60018A2")]
		[Address(RVA = "0xDEA810", Offset = "0xDEA810", VA = "0xDEA810")]
		public static bool SendEvent(string name, string param = "", string source = "")
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60018A3")]
		[Address(RVA = "0xDEAD20", Offset = "0xDEAD20", VA = "0xDEAD20")]
		private static extern IntPtr _ovrp_GetVersion();

		[Token(Token = "0x60018A4")]
		[Address(RVA = "0xDEAB94", Offset = "0xDEAB94", VA = "0xDEAB94")]
		public static string ovrp_GetVersion()
		{
			return null;
		}

		[Token(Token = "0x60018A5")]
		[Address(RVA = "0xDEADB0", Offset = "0xDEADB0", VA = "0xDEADB0")]
		public CAPI()
		{
		}
	}
}
namespace OVR
{
	[Token(Token = "0x2000401")]
	public class TestScript : MonoBehaviour
	{
		[Token(Token = "0x4000EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "InspectorNoteAttribute", RVA = "0x980B40", Offset = "0x980B40")]
		public SoundFXRef testSound1;

		[Token(Token = "0x4000EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoundFXRef testSound2;

		[Token(Token = "0x60018A7")]
		[Address(RVA = "0xDD6584", Offset = "0xDD6584", VA = "0xDD6584")]
		private void Start()
		{
		}

		[Token(Token = "0x60018A8")]
		[Address(RVA = "0xDD6588", Offset = "0xDD6588", VA = "0xDD6588")]
		private void Update()
		{
		}

		[Token(Token = "0x60018A9")]
		[Address(RVA = "0xDD6690", Offset = "0xDD6690", VA = "0xDD6690")]
		public TestScript()
		{
		}
	}
	[Token(Token = "0x2000402")]
	public class AmbienceEmitter : MonoBehaviour
	{
		[Token(Token = "0x4000EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFXRef[] ambientSounds;

		[Token(Token = "0x4000EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool autoActivate;

		[Token(Token = "0x4000EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x980B8C", Offset = "0x980B8C")]
		public bool autoRetrigger;

		[Token(Token = "0x4000EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x980BC4", Offset = "0x980BC4")]
		public Vector2 randomRetriggerDelaySecs;

		[Token(Token = "0x4000EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x980BE8", Offset = "0x980BE8")]
		public Transform[] playPositions;

		[Token(Token = "0x4000EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool activated;

		[Token(Token = "0x4000EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int playingIdx;

		[Token(Token = "0x4000EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float nextPlayTime;

		[Token(Token = "0x4000EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float fadeTime;

		[Token(Token = "0x4000EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int lastPosIdx;

		[Token(Token = "0x60018AA")]
		[Address(RVA = "0x171934C", Offset = "0x171934C", VA = "0x171934C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018AB")]
		[Address(RVA = "0x17194C8", Offset = "0x17194C8", VA = "0x17194C8")]
		private void Update()
		{
		}

		[Token(Token = "0x60018AC")]
		[Address(RVA = "0x1719750", Offset = "0x1719750", VA = "0x1719750")]
		public void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x60018AD")]
		[Address(RVA = "0x1719528", Offset = "0x1719528", VA = "0x1719528")]
		public void Play()
		{
		}

		[Token(Token = "0x60018AE")]
		[Address(RVA = "0x1719834", Offset = "0x1719834", VA = "0x1719834")]
		public void EnableEmitter(bool enable)
		{
		}

		[Token(Token = "0x60018AF")]
		[Address(RVA = "0x17199CC", Offset = "0x17199CC", VA = "0x17199CC")]
		public AmbienceEmitter()
		{
		}
	}
	[Token(Token = "0x2000403")]
	public enum PreloadSounds
	{
		[Token(Token = "0x4000EF0")]
		Default,
		[Token(Token = "0x4000EF1")]
		Preload,
		[Token(Token = "0x4000EF2")]
		ManualPreload
	}
	[Token(Token = "0x2000404")]
	public enum Fade
	{
		[Token(Token = "0x4000EF4")]
		In,
		[Token(Token = "0x4000EF5")]
		Out
	}
	[Serializable]
	[Token(Token = "0x2000405")]
	public class SoundGroup
	{
		[Token(Token = "0x4000EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4000EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFX[] soundList;

		[Token(Token = "0x4000EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioMixerGroup mixerGroup;

		[Token(Token = "0x4000EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x980C20", Offset = "0x980C20")]
		public int maxPlayingSounds;

		[Token(Token = "0x4000EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public PreloadSounds preloadAudio;

		[Token(Token = "0x4000EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float volumeOverride;

		[Token(Token = "0x4000EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public int playingSoundCount;

		[Token(Token = "0x60018B0")]
		[Address(RVA = "0xDD6464", Offset = "0xDD6464", VA = "0xDD6464")]
		public SoundGroup(string name)
		{
		}

		[Token(Token = "0x60018B1")]
		[Address(RVA = "0xDD64F8", Offset = "0xDD64F8", VA = "0xDD64F8")]
		public SoundGroup()
		{
		}

		[Token(Token = "0x60018B2")]
		[Address(RVA = "0xDD3CF0", Offset = "0xDD3CF0", VA = "0xDD3CF0")]
		public void IncrementPlayCount()
		{
		}

		[Token(Token = "0x60018B3")]
		[Address(RVA = "0xDD4048", Offset = "0xDD4048", VA = "0xDD4048")]
		public void DecrementPlayCount()
		{
		}

		[Token(Token = "0x60018B4")]
		[Address(RVA = "0xDD5968", Offset = "0xDD5968", VA = "0xDD5968")]
		public bool CanPlaySound()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000406")]
	public class AudioManager : MonoBehaviour
	{
		[Token(Token = "0x2000DE9")]
		public enum Fade
		{
			[Token(Token = "0x400222F")]
			In,
			[Token(Token = "0x4002230")]
			Out
		}

		[Token(Token = "0x2000DEA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97A074", Offset = "0x97A074")]
		private sealed class <>c__DisplayClass75_0
		{
			[Token(Token = "0x4002231")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SoundPriority priority;

			[Token(Token = "0x6002E18")]
			[Address(RVA = "0xDD3590", Offset = "0xDD3590", VA = "0xDD3590")]
			public <>c__DisplayClass75_0()
			{
			}

			[Token(Token = "0x6002E19")]
			[Address(RVA = "0xDD3598", Offset = "0xDD3598", VA = "0xDD3598")]
			internal bool <FindFreeEmitter>b__0(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000DEB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97A084", Offset = "0x97A084")]
		private sealed class <>c
		{
			[Token(Token = "0x4002232")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002233")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<SoundEmitter> <>9__75_1;

			[Token(Token = "0x6002E1B")]
			[Address(RVA = "0xDD34F4", Offset = "0xDD34F4", VA = "0xDD34F4")]
			public <>c()
			{
			}

			[Token(Token = "0x6002E1C")]
			[Address(RVA = "0xDD34FC", Offset = "0xDD34FC", VA = "0xDD34FC")]
			internal bool <FindFreeEmitter>b__75_1(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x980C4C", Offset = "0x980C4C")]
		public bool makePersistent;

		[Token(Token = "0x4000EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x980C84", Offset = "0x980C84")]
		public bool enableSpatializedAudio;

		[Token(Token = "0x4000EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x980CBC", Offset = "0x980CBC")]
		public bool enableSpatializedFastOverride;

		[Token(Token = "0x4000F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x980CF4", Offset = "0x980CF4")]
		public UnityEngine.Audio.AudioMixer audioMixer;

		[Token(Token = "0x4000F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x980D2C", Offset = "0x980D2C")]
		public AudioMixerGroup defaultMixerGroup;

		[Token(Token = "0x4000F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x980D64", Offset = "0x980D64")]
		public AudioMixerGroup reservedMixerGroup;

		[Token(Token = "0x4000F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x980D9C", Offset = "0x980D9C")]
		public AudioMixerGroup voiceChatMixerGroup;

		[Token(Token = "0x4000F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x980DD4", Offset = "0x980DD4")]
		public bool verboseLogging;

		[Token(Token = "0x4000F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x980E0C", Offset = "0x980E0C")]
		public int maxSoundEmitters;

		[Token(Token = "0x4000F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x980E44", Offset = "0x980E44")]
		public float volumeSoundFX;

		[Token(Token = "0x4000F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x980E7C", Offset = "0x980E7C")]
		public float soundFxFadeSecs;

		[Token(Token = "0x4000F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float audioMinFallOffDistance;

		[Token(Token = "0x4000F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float audioMaxFallOffDistance;

		[Token(Token = "0x4000F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SoundGroup[] soundGroupings;

		[Token(Token = "0x4000F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<string, SoundFX> soundFXCache;

		[Token(Token = "0x4000F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AudioManager theAudioManager;

		[Token(Token = "0x4000F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static FastList<string> names;

		[Token(Token = "0x4000F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string[] defaultSound;

		[Token(Token = "0x4000F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static SoundFX nullSound;

		[Token(Token = "0x4000F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static bool hideWarnings;

		[Token(Token = "0x4000F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float audioMaxFallOffDistanceSqr;

		[Token(Token = "0x4000F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private SoundEmitter[] soundEmitters;

		[Token(Token = "0x4000F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private FastList<SoundEmitter> playingEmitters;

		[Token(Token = "0x4000F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private FastList<SoundEmitter> nextFreeEmitters;

		[Token(Token = "0x4000F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MixerSnapshot currentSnapshot;

		[Token(Token = "0x4000F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject soundEmitterParent;

		[Token(Token = "0x4000F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Transform staticListenerPosition;

		[Token(Token = "0x4000F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static bool showPlayingEmitterCount;

		[Token(Token = "0x4000F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private static bool forceShowEmitterCount;

		[Token(Token = "0x4000F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private static bool soundEnabled;

		[Token(Token = "0x4000F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly AnimationCurve defaultReverbZoneMix;

		[Token(Token = "0x170002AE")]
		public static bool enableSpatialization
		{
			[Token(Token = "0x60018B5")]
			[Address(RVA = "0x1719A88", Offset = "0x1719A88", VA = "0x1719A88")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002AF")]
		public static AudioManager Instance
		{
			[Token(Token = "0x60018B6")]
			[Address(RVA = "0x1719B6C", Offset = "0x1719B6C", VA = "0x1719B6C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B0")]
		public static float NearFallOff
		{
			[Token(Token = "0x60018B7")]
			[Address(RVA = "0x1719BD4", Offset = "0x1719BD4", VA = "0x1719BD4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002B1")]
		public static float FarFallOff
		{
			[Token(Token = "0x60018B8")]
			[Address(RVA = "0x1719C4C", Offset = "0x1719C4C", VA = "0x1719C4C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002B2")]
		public static AudioMixerGroup EmitterGroup
		{
			[Token(Token = "0x60018B9")]
			[Address(RVA = "0x1719CC4", Offset = "0x1719CC4", VA = "0x1719CC4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B3")]
		public static AudioMixerGroup ReservedGroup
		{
			[Token(Token = "0x60018BA")]
			[Address(RVA = "0x1719D3C", Offset = "0x1719D3C", VA = "0x1719D3C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B4")]
		public static AudioMixerGroup VoipGroup
		{
			[Token(Token = "0x60018BB")]
			[Address(RVA = "0x1719DB4", Offset = "0x1719DB4", VA = "0x1719DB4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B5")]
		public static bool SoundEnabled
		{
			[Token(Token = "0x60018C6")]
			[Address(RVA = "0x171C43C", Offset = "0x171C43C", VA = "0x171C43C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60018BC")]
		[Address(RVA = "0x1719E2C", Offset = "0x1719E2C", VA = "0x1719E2C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018BD")]
		[Address(RVA = "0x171A064", Offset = "0x171A064", VA = "0x171A064")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60018BE")]
		[Address(RVA = "0x1719E30", Offset = "0x1719E30", VA = "0x1719E30")]
		private void Init()
		{
		}

		[Token(Token = "0x60018BF")]
		[Address(RVA = "0x171B230", Offset = "0x171B230", VA = "0x171B230")]
		private void Update()
		{
		}

		[Token(Token = "0x60018C0")]
		[Address(RVA = "0x171A1BC", Offset = "0x171A1BC", VA = "0x171A1BC")]
		private void RebuildSoundFXCache()
		{
		}

		[Token(Token = "0x60018C1")]
		[Address(RVA = "0x171B9C4", Offset = "0x171B9C4", VA = "0x171B9C4")]
		public static SoundFX FindSoundFX(string name, bool rebuildCache = false)
		{
			return null;
		}

		[Token(Token = "0x60018C2")]
		[Address(RVA = "0x171BB74", Offset = "0x171BB74", VA = "0x171BB74")]
		private static bool FindAudioManager()
		{
			return default(bool);
		}

		[Token(Token = "0x60018C3")]
		[Address(RVA = "0x171BD2C", Offset = "0x171BD2C", VA = "0x171BD2C")]
		public static GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x60018C4")]
		[Address(RVA = "0x171BE34", Offset = "0x171BE34", VA = "0x171BE34")]
		public static string NameMinusGroup(string name)
		{
			return null;
		}

		[Token(Token = "0x60018C5")]
		[Address(RVA = "0x171BEF8", Offset = "0x171BEF8", VA = "0x171BEF8")]
		public static string[] GetSoundFXNames(string currentValue, out int currentIdx)
		{
			return null;
		}

		[Token(Token = "0x60018C7")]
		[Address(RVA = "0x171A9B4", Offset = "0x171A9B4", VA = "0x171A9B4")]
		private void InitializeSoundSystem()
		{
		}

		[Token(Token = "0x60018C8")]
		[Address(RVA = "0x171B234", Offset = "0x171B234", VA = "0x171B234")]
		private void UpdateFreeEmitters()
		{
		}

		[Token(Token = "0x60018C9")]
		[Address(RVA = "0x171C5BC", Offset = "0x171C5BC", VA = "0x171C5BC")]
		private string Fmt(int count)
		{
			return null;
		}

		[Token(Token = "0x60018CA")]
		[Address(RVA = "0x171C6B8", Offset = "0x171C6B8", VA = "0x171C6B8")]
		private string FmtFree(int count)
		{
			return null;
		}

		[Token(Token = "0x60018CB")]
		[Address(RVA = "0x171C7B8", Offset = "0x171C7B8", VA = "0x171C7B8")]
		private void OnPreSceneLoad()
		{
		}

		[Token(Token = "0x60018CC")]
		[Address(RVA = "0x171C4A4", Offset = "0x171C4A4", VA = "0x171C4A4")]
		private void ResetFreeEmitters()
		{
		}

		[Token(Token = "0x60018CD")]
		[Address(RVA = "0x171C950", Offset = "0x171C950", VA = "0x171C950")]
		public static void FadeOutSoundChannel(int channel, float delaySecs, float fadeTime)
		{
		}

		[Token(Token = "0x60018CE")]
		[Address(RVA = "0x171CA2C", Offset = "0x171CA2C", VA = "0x171CA2C")]
		public static bool StopSound(int idx, bool fadeOut = true, bool stopReserved = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60018CF")]
		[Address(RVA = "0x171CBC0", Offset = "0x171CBC0", VA = "0x171CBC0")]
		public static void FadeInSound(int idx, float fadeTime, float volume)
		{
		}

		[Token(Token = "0x60018D0")]
		[Address(RVA = "0x1719760", Offset = "0x1719760", VA = "0x1719760")]
		public static void FadeInSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x60018D1")]
		[Address(RVA = "0x17198F8", Offset = "0x17198F8", VA = "0x17198F8")]
		public static void FadeOutSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x60018D2")]
		[Address(RVA = "0x171CC9C", Offset = "0x171CC9C", VA = "0x171CC9C")]
		public static void StopAllSounds(bool fadeOut, bool stopReserved = false)
		{
		}

		[Token(Token = "0x60018D3")]
		[Address(RVA = "0x171CD80", Offset = "0x171CD80", VA = "0x171CD80")]
		public void MuteAllSounds(bool mute, bool muteReserved = false)
		{
		}

		[Token(Token = "0x60018D4")]
		[Address(RVA = "0x171CE4C", Offset = "0x171CE4C", VA = "0x171CE4C")]
		public void UnMuteAllSounds(bool unmute, bool unmuteReserved = false)
		{
		}

		[Token(Token = "0x60018D5")]
		[Address(RVA = "0x171CF78", Offset = "0x171CF78", VA = "0x171CF78")]
		public static float GetEmitterEndTime(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x60018D6")]
		[Address(RVA = "0x171D038", Offset = "0x171D038", VA = "0x171D038")]
		public static float SetEmitterTime(int idx, float time)
		{
			return default(float);
		}

		[Token(Token = "0x60018D7")]
		[Address(RVA = "0x171D114", Offset = "0x171D114", VA = "0x171D114")]
		public static int PlaySound(AudioClip clip, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitchVariance = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x60018D8")]
		[Address(RVA = "0x171DF08", Offset = "0x171DF08", VA = "0x171DF08")]
		private static int FindFreeEmitter(EmitterChannel src, SoundPriority priority)
		{
			return default(int);
		}

		[Token(Token = "0x60018D9")]
		[Address(RVA = "0x171E6F4", Offset = "0x171E6F4", VA = "0x171E6F4")]
		public static int PlaySound(SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x60018DA")]
		[Address(RVA = "0x171E8A0", Offset = "0x171E8A0", VA = "0x171E8A0")]
		public static int PlaySoundAt(Vector3 position, SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x60018DB")]
		[Address(RVA = "0x171F764", Offset = "0x171F764", VA = "0x171F764")]
		public static int PlayRandomSoundAt(Vector3 position, AudioClip[] clips, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x60018DC")]
		[Address(RVA = "0x171D2E8", Offset = "0x171D2E8", VA = "0x171D2E8")]
		public static int PlaySoundAt(Vector3 position, AudioClip clip, float volume = 1f, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x60018DD")]
		[Address(RVA = "0x171F888", Offset = "0x171F888", VA = "0x171F888")]
		public static void SetOnFinished(int emitterIdx, Action onFinished)
		{
		}

		[Token(Token = "0x60018DE")]
		[Address(RVA = "0x171F9AC", Offset = "0x171F9AC", VA = "0x171F9AC")]
		public static void SetOnFinished(int emitterIdx, Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x60018DF")]
		[Address(RVA = "0x171FAE4", Offset = "0x171FAE4", VA = "0x171FAE4")]
		public static void AttachSoundToParent(int idx, Transform parent)
		{
		}

		[Token(Token = "0x60018E0")]
		[Address(RVA = "0x171FE80", Offset = "0x171FE80", VA = "0x171FE80")]
		public static void DetachSoundFromParent(int idx)
		{
		}

		[Token(Token = "0x60018E1")]
		[Address(RVA = "0x171FFF0", Offset = "0x171FFF0", VA = "0x171FFF0")]
		public static void DetachSoundsFromParent(SoundEmitter[] emitters, bool stopSounds = true)
		{
		}

		[Token(Token = "0x60018E2")]
		[Address(RVA = "0x1720128", Offset = "0x1720128", VA = "0x1720128")]
		public static void SetEmitterMixerGroup(int idx, AudioMixerGroup mixerGroup)
		{
		}

		[Token(Token = "0x60018E3")]
		[Address(RVA = "0x172026C", Offset = "0x172026C", VA = "0x172026C")]
		public static MixerSnapshot GetActiveSnapshot()
		{
			return null;
		}

		[Token(Token = "0x60018E4")]
		[Address(RVA = "0x1720348", Offset = "0x1720348", VA = "0x1720348")]
		public static void SetCurrentSnapshot(MixerSnapshot mixerSnapshot)
		{
		}

		[Token(Token = "0x60018E5")]
		[Address(RVA = "0x1720498", Offset = "0x1720498", VA = "0x1720498")]
		public static void BlendWithCurrentSnapshot(MixerSnapshot blendSnapshot, float weight, float blendTime = 0f)
		{
		}

		[Token(Token = "0x60018E6")]
		[Address(RVA = "0x1720954", Offset = "0x1720954", VA = "0x1720954")]
		public AudioManager()
		{
		}
	}
	[Token(Token = "0x2000407")]
	public enum EmitterChannel
	{
		[Token(Token = "0x4000F1D")]
		None = -1,
		[Token(Token = "0x4000F1E")]
		Reserved,
		[Token(Token = "0x4000F1F")]
		Any
	}
	[Serializable]
	[Token(Token = "0x2000408")]
	public class MixerSnapshot
	{
		[Token(Token = "0x4000F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioMixerSnapshot snapshot;

		[Token(Token = "0x4000F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float transitionTime;

		[Token(Token = "0x60018E8")]
		[Address(RVA = "0xDD3698", Offset = "0xDD3698", VA = "0xDD3698")]
		public MixerSnapshot()
		{
		}
	}
	[Token(Token = "0x2000409")]
	public class MinMaxAttribute : PropertyAttribute
	{
		[Token(Token = "0x4000F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float minDefaultVal;

		[Token(Token = "0x4000F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float maxDefaultVal;

		[Token(Token = "0x4000F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float min;

		[Token(Token = "0x4000F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float max;

		[Token(Token = "0x60018E9")]
		[Address(RVA = "0xDD363C", Offset = "0xDD363C", VA = "0xDD363C")]
		public MinMaxAttribute(float minDefaultVal, float maxDefaultVal, float min, float max)
		{
		}
	}
	[Token(Token = "0x200040A")]
	public class SoundEmitter : MonoBehaviour
	{
		[Token(Token = "0x2000DEC")]
		public enum FadeState
		{
			[Token(Token = "0x4002235")]
			Null,
			[Token(Token = "0x4002236")]
			FadingIn,
			[Token(Token = "0x4002237")]
			FadingOut,
			[Token(Token = "0x4002238")]
			Ducking
		}

		[Token(Token = "0x2000DED")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97A094", Offset = "0x97A094")]
		private sealed class <DelayedSyncTo>d__57 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002239")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400223A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400223B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x400223C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SoundEmitter other;

			[Token(Token = "0x400223D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float fadeTime;

			[Token(Token = "0x400223E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float toVolume;

			[Token(Token = "0x170003B6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E20")]
				[Address(RVA = "0xDD4AAC", Offset = "0xDD4AAC", VA = "0xDD4AAC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003B7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E22")]
				[Address(RVA = "0xDD4B1C", Offset = "0xDD4B1C", VA = "0xDD4B1C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E1D")]
			[Address(RVA = "0xDD4488", Offset = "0xDD4488", VA = "0xDD4488")]
			[DebuggerHidden]
			public <DelayedSyncTo>d__57(int <>1__state)
			{
			}

			[Token(Token = "0x6002E1E")]
			[Address(RVA = "0xDD4994", Offset = "0xDD4994", VA = "0xDD4994", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E1F")]
			[Address(RVA = "0xDD4998", Offset = "0xDD4998", VA = "0xDD4998", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E21")]
			[Address(RVA = "0xDD4AB4", Offset = "0xDD4AB4", VA = "0xDD4AB4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000DEE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97A0A4", Offset = "0x97A0A4")]
		private sealed class <FadeSoundChannelTo>d__63 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400223F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002240")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002241")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4002242")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float toVolume;

			[Token(Token = "0x4002243")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float fadeTime;

			[Token(Token = "0x4002244")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <start>5__2;

			[Token(Token = "0x4002245")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <end>5__3;

			[Token(Token = "0x4002246")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4002247")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <elapsedTime>5__5;

			[Token(Token = "0x170003B8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E26")]
				[Address(RVA = "0xDD5018", Offset = "0xDD5018", VA = "0xDD5018", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003B9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E28")]
				[Address(RVA = "0xDD5088", Offset = "0xDD5088", VA = "0xDD5088", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E23")]
			[Address(RVA = "0xDD4924", Offset = "0xDD4924", VA = "0xDD4924")]
			[DebuggerHidden]
			public <FadeSoundChannelTo>d__63(int <>1__state)
			{
			}

			[Token(Token = "0x6002E24")]
			[Address(RVA = "0xDD4E74", Offset = "0xDD4E74", VA = "0xDD4E74", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E25")]
			[Address(RVA = "0xDD4E78", Offset = "0xDD4E78", VA = "0xDD4E78", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E27")]
			[Address(RVA = "0xDD5020", Offset = "0xDD5020", VA = "0xDD5020", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000DEF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97A0B4", Offset = "0x97A0B4")]
		private sealed class <FadeSoundChannel>d__64 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002248")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002249")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400224A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delaySecs;

			[Token(Token = "0x400224B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Fade fadeType;

			[Token(Token = "0x400224C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float defaultVolume;

			[Token(Token = "0x400224D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x400224E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float fadeTime;

			[Token(Token = "0x400224F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <start>5__2;

			[Token(Token = "0x4002250")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <end>5__3;

			[Token(Token = "0x4002251")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private bool <restartPlay>5__4;

			[Token(Token = "0x4002252")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <startTime>5__5;

			[Token(Token = "0x4002253")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <elapsedTime>5__6;

			[Token(Token = "0x170003BA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E2C")]
				[Address(RVA = "0xDD4DFC", Offset = "0xDD4DFC", VA = "0xDD4DFC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003BB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E2E")]
				[Address(RVA = "0xDD4E6C", Offset = "0xDD4E6C", VA = "0xDD4E6C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E29")]
			[Address(RVA = "0xDD4950", Offset = "0xDD4950", VA = "0xDD4950")]
			[DebuggerHidden]
			public <FadeSoundChannel>d__64(int <>1__state)
			{
			}

			[Token(Token = "0x6002E2A")]
			[Address(RVA = "0xDD4B24", Offset = "0xDD4B24", VA = "0xDD4B24", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E2B")]
			[Address(RVA = "0xDD4B28", Offset = "0xDD4B28", VA = "0xDD4B28", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E2D")]
			[Address(RVA = "0xDD4E04", Offset = "0xDD4E04", VA = "0xDD4E04", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EmitterChannel channel;

		[Token(Token = "0x4000F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool disableSpatialization;

		[Token(Token = "0x4000F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FadeState state;

		[NonSerialized]
		[Token(Token = "0x4000F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public AudioSource audioSource;

		[NonSerialized]
		[Token(Token = "0x4000F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public SoundPriority priority;

		[NonSerialized]
		[Token(Token = "0x4000F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public ONSPAudioSource osp;

		[NonSerialized]
		[Token(Token = "0x4000F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public float endPlayTime;

		[Token(Token = "0x4000F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform lastParentTransform;

		[NonSerialized]
		[Token(Token = "0x4000F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public float defaultVolume;

		[NonSerialized]
		[Token(Token = "0x4000F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public Transform defaultParent;

		[NonSerialized]
		[Token(Token = "0x4000F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public int originalIdx;

		[NonSerialized]
		[Token(Token = "0x4000F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Action onFinished;

		[NonSerialized]
		[Token(Token = "0x4000F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public Action<object> onFinishedObject;

		[NonSerialized]
		[Token(Token = "0x4000F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public object onFinishedParam;

		[NonSerialized]
		[Token(Token = "0x4000F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public SoundGroup playingSoundGroup;

		[Token(Token = "0x170002B6")]
		public float volume
		{
			[Token(Token = "0x60018EA")]
			[Address(RVA = "0xDD3738", Offset = "0xDD3738", VA = "0xDD3738")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60018EB")]
			[Address(RVA = "0xDD3768", Offset = "0xDD3768", VA = "0xDD3768")]
			set
			{
			}
		}

		[Token(Token = "0x170002B7")]
		public float pitch
		{
			[Token(Token = "0x60018EC")]
			[Address(RVA = "0xDD37A8", Offset = "0xDD37A8", VA = "0xDD37A8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60018ED")]
			[Address(RVA = "0xDD37D8", Offset = "0xDD37D8", VA = "0xDD37D8")]
			set
			{
			}
		}

		[Token(Token = "0x170002B8")]
		public AudioClip clip
		{
			[Token(Token = "0x60018EE")]
			[Address(RVA = "0xDD3818", Offset = "0xDD3818", VA = "0xDD3818")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018EF")]
			[Address(RVA = "0xDD3848", Offset = "0xDD3848", VA = "0xDD3848")]
			set
			{
			}
		}

		[Token(Token = "0x170002B9")]
		public float time
		{
			[Token(Token = "0x60018F0")]
			[Address(RVA = "0xDD3880", Offset = "0xDD3880", VA = "0xDD3880")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60018F1")]
			[Address(RVA = "0xDD38B0", Offset = "0xDD38B0", VA = "0xDD38B0")]
			set
			{
			}
		}

		[Token(Token = "0x170002BA")]
		public float length
		{
			[Token(Token = "0x60018F2")]
			[Address(RVA = "0xDD38F0", Offset = "0xDD38F0", VA = "0xDD38F0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002BB")]
		public bool loop
		{
			[Token(Token = "0x60018F3")]
			[Address(RVA = "0xDD39C8", Offset = "0xDD39C8", VA = "0xDD39C8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60018F4")]
			[Address(RVA = "0xDD39F8", Offset = "0xDD39F8", VA = "0xDD39F8")]
			set
			{
			}
		}

		[Token(Token = "0x170002BC")]
		public bool mute
		{
			[Token(Token = "0x60018F5")]
			[Address(RVA = "0xDD3A30", Offset = "0xDD3A30", VA = "0xDD3A30")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60018F6")]
			[Address(RVA = "0xDD3A60", Offset = "0xDD3A60", VA = "0xDD3A60")]
			set
			{
			}
		}

		[Token(Token = "0x170002BD")]
		public AudioVelocityUpdateMode velocityUpdateMode
		{
			[Token(Token = "0x60018F7")]
			[Address(RVA = "0xDD3A98", Offset = "0xDD3A98", VA = "0xDD3A98")]
			get
			{
				return default(AudioVelocityUpdateMode);
			}
			[Token(Token = "0x60018F8")]
			[Address(RVA = "0xDD3AC8", Offset = "0xDD3AC8", VA = "0xDD3AC8")]
			set
			{
			}
		}

		[Token(Token = "0x170002BE")]
		public bool isPlaying
		{
			[Token(Token = "0x60018F9")]
			[Address(RVA = "0xDD3B00", Offset = "0xDD3B00", VA = "0xDD3B00")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60018FA")]
		[Address(RVA = "0xDD3B30", Offset = "0xDD3B30", VA = "0xDD3B30")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018FB")]
		[Address(RVA = "0xDD3CDC", Offset = "0xDD3CDC", VA = "0xDD3CDC")]
		public void SetPlayingSoundGroup(SoundGroup soundGroup)
		{
		}

		[Token(Token = "0x60018FC")]
		[Address(RVA = "0xDD3D80", Offset = "0xDD3D80", VA = "0xDD3D80")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x60018FD")]
		[Address(RVA = "0xDD3D88", Offset = "0xDD3D88", VA = "0xDD3D88")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x60018FE")]
		[Address(RVA = "0xDD3D90", Offset = "0xDD3D90", VA = "0xDD3D90")]
		public void SetChannel(int _channel)
		{
		}

		[Token(Token = "0x60018FF")]
		[Address(RVA = "0xDD3D98", Offset = "0xDD3D98", VA = "0xDD3D98")]
		public void SetDefaultParent(Transform parent)
		{
		}

		[Token(Token = "0x6001900")]
		[Address(RVA = "0xDD3DA0", Offset = "0xDD3DA0", VA = "0xDD3DA0")]
		public void SetAudioMixer(AudioMixerGroup _mixer)
		{
		}

		[Token(Token = "0x6001901")]
		[Address(RVA = "0xDD3E50", Offset = "0xDD3E50", VA = "0xDD3E50")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6001902")]
		[Address(RVA = "0xDD3EB8", Offset = "0xDD3EB8", VA = "0xDD3EB8")]
		public void Play()
		{
		}

		[Token(Token = "0x6001903")]
		[Address(RVA = "0xDD3F20", Offset = "0xDD3F20", VA = "0xDD3F20")]
		public void Pause()
		{
		}

		[Token(Token = "0x6001904")]
		[Address(RVA = "0xDD3F60", Offset = "0xDD3F60", VA = "0xDD3F60")]
		public void Stop()
		{
		}

		[Token(Token = "0x6001905")]
		[Address(RVA = "0xDD40D8", Offset = "0xDD40D8", VA = "0xDD40D8")]
		private int GetSampleTime()
		{
			return default(int);
		}

		[Token(Token = "0x6001906")]
		[Address(RVA = "0xDD414C", Offset = "0xDD414C", VA = "0xDD414C")]
		public void ParentTo(Transform parent)
		{
		}

		[Token(Token = "0x6001907")]
		[Address(RVA = "0xDD425C", Offset = "0xDD425C", VA = "0xDD425C")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x6001908")]
		[Address(RVA = "0xDD4340", Offset = "0xDD4340", VA = "0xDD4340")]
		public void ResetParent(Transform parent)
		{
		}

		[Token(Token = "0x6001909")]
		[Address(RVA = "0xDD4390", Offset = "0xDD4390", VA = "0xDD4390")]
		public void SyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x600190A")]
		[Address(RVA = "0xDD43BC", Offset = "0xDD43BC", VA = "0xDD43BC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x987AE8", Offset = "0x987AE8")]
		private IEnumerator DelayedSyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x600190B")]
		[Address(RVA = "0xDD44B4", Offset = "0xDD44B4", VA = "0xDD44B4")]
		public void FadeTo(float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x600190C")]
		[Address(RVA = "0xDD45D8", Offset = "0xDD45D8", VA = "0xDD45D8")]
		public void FadeIn(float fadeTime, float defaultVolume)
		{
		}

		[Token(Token = "0x600190D")]
		[Address(RVA = "0xDD4748", Offset = "0xDD4748", VA = "0xDD4748")]
		public void FadeIn(float fadeTime)
		{
		}

		[Token(Token = "0x600190E")]
		[Address(RVA = "0xDD47C8", Offset = "0xDD47C8", VA = "0xDD47C8")]
		public void FadeOut(float fadeTime)
		{
		}

		[Token(Token = "0x600190F")]
		[Address(RVA = "0xDD4874", Offset = "0xDD4874", VA = "0xDD4874")]
		public void FadeOutDelayed(float delayedSecs, float fadeTime)
		{
		}

		[Token(Token = "0x6001910")]
		[Address(RVA = "0xDD452C", Offset = "0xDD452C", VA = "0xDD452C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x987B4C", Offset = "0x987B4C")]
		private IEnumerator FadeSoundChannelTo(float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x6001911")]
		[Address(RVA = "0xDD465C", Offset = "0xDD465C", VA = "0xDD465C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x987BB0", Offset = "0x987BB0")]
		private IEnumerator FadeSoundChannel(float delaySecs, float fadeTime, Fade fadeType, float defaultVolume)
		{
			return null;
		}

		[Token(Token = "0x6001912")]
		[Address(RVA = "0xDD497C", Offset = "0xDD497C", VA = "0xDD497C")]
		public SoundEmitter()
		{
		}
	}
	[Token(Token = "0x200040B")]
	public enum SoundFXNext
	{
		[Token(Token = "0x4000F36")]
		Random,
		[Token(Token = "0x4000F37")]
		Sequential
	}
	[Token(Token = "0x200040C")]
	public enum FreqHint
	{
		[Token(Token = "0x4000F39")]
		None,
		[Token(Token = "0x4000F3A")]
		Wide,
		[Token(Token = "0x4000F3B")]
		Narrow
	}
	[Token(Token = "0x200040D")]
	public enum SoundPriority
	{
		[Token(Token = "0x4000F3D")]
		VeryLow = -2,
		[Token(Token = "0x4000F3E")]
		Low,
		[Token(Token = "0x4000F3F")]
		Default,
		[Token(Token = "0x4000F40")]
		High,
		[Token(Token = "0x4000F41")]
		VeryHigh
	}
	[Serializable]
	[Token(Token = "0x200040E")]
	public class OSPProps
	{
		[Token(Token = "0x4000F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x980F64", Offset = "0x980F64")]
		public bool enableSpatialization;

		[Token(Token = "0x4000F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x980F9C", Offset = "0x980F9C")]
		public bool useFastOverride;

		[Token(Token = "0x4000F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x980FD4", Offset = "0x980FD4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x980FD4", Offset = "0x980FD4")]
		public float gain;

		[Token(Token = "0x4000F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x981028", Offset = "0x981028")]
		public bool enableInvSquare;

		[Token(Token = "0x4000F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x981060", Offset = "0x981060")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x981060", Offset = "0x981060")]
		public float volumetric;

		[Token(Token = "0x4000F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9810B8", Offset = "0x9810B8")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x9810B8", Offset = "0x9810B8")]
		public Vector2 invSquareFalloff;

		[Token(Token = "0x6001913")]
		[Address(RVA = "0xDD36A8", Offset = "0xDD36A8", VA = "0xDD36A8")]
		public OSPProps()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200040F")]
	public class SoundFX
	{
		[Token(Token = "0x4000F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x981118", Offset = "0x981118")]
		public string name;

		[Token(Token = "0x4000F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x981150", Offset = "0x981150")]
		public SoundFXNext playback;

		[Token(Token = "0x4000F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x981188", Offset = "0x981188")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x981188", Offset = "0x981188")]
		public float volume;

		[Token(Token = "0x4000F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9811DC", Offset = "0x9811DC")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x9811DC", Offset = "0x9811DC")]
		public Vector2 pitchVariance;

		[Token(Token = "0x4000F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x981238", Offset = "0x981238")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x981238", Offset = "0x981238")]
		public Vector2 falloffDistance;

		[Token(Token = "0x4000F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x981298", Offset = "0x981298")]
		public AudioRolloffMode falloffCurve;

		[Token(Token = "0x4000F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9812D0", Offset = "0x9812D0")]
		public AnimationCurve volumeFalloffCurve;

		[Token(Token = "0x4000F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x981308", Offset = "0x981308")]
		public AnimationCurve reverbZoneMix;

		[Token(Token = "0x4000F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x981340", Offset = "0x981340")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x981340", Offset = "0x981340")]
		public float spread;

		[Token(Token = "0x4000F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x981398", Offset = "0x981398")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x981398", Offset = "0x981398")]
		public float pctChanceToPlay;

		[Token(Token = "0x4000F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9813EC", Offset = "0x9813EC")]
		public SoundPriority priority;

		[Token(Token = "0x4000F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x981424", Offset = "0x981424")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x981424", Offset = "0x981424")]
		public Vector2 delay;

		[Token(Token = "0x4000F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x981480", Offset = "0x981480")]
		public bool looping;

		[Token(Token = "0x4000F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public OSPProps ospProps;

		[Token(Token = "0x4000F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9814B8", Offset = "0x9814B8")]
		public AudioClip[] soundClips;

		[Token(Token = "0x4000F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool visibilityToggle;

		[NonSerialized]
		[Token(Token = "0x4000F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private SoundGroup soundGroup;

		[Token(Token = "0x4000F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int lastIdx;

		[Token(Token = "0x4000F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int playingIdx;

		[Token(Token = "0x170002BF")]
		public int Length
		{
			[Token(Token = "0x6001915")]
			[Address(RVA = "0xDD5604", Offset = "0xDD5604", VA = "0xDD5604")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002C0")]
		public bool IsValid
		{
			[Token(Token = "0x6001916")]
			[Address(RVA = "0xDD5630", Offset = "0xDD5630", VA = "0xDD5630")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002C1")]
		public SoundGroup Group
		{
			[Token(Token = "0x6001917")]
			[Address(RVA = "0xDD56F0", Offset = "0xDD56F0", VA = "0xDD56F0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001918")]
			[Address(RVA = "0xDD56F8", Offset = "0xDD56F8", VA = "0xDD56F8")]
			set
			{
			}
		}

		[Token(Token = "0x170002C2")]
		public float MaxFalloffDistSquared
		{
			[Token(Token = "0x6001919")]
			[Address(RVA = "0xDD5700", Offset = "0xDD5700", VA = "0xDD5700")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002C3")]
		public float GroupVolumeOverride
		{
			[Token(Token = "0x600191A")]
			[Address(RVA = "0xDD570C", Offset = "0xDD570C", VA = "0xDD570C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001914")]
		[Address(RVA = "0xDD5090", Offset = "0xDD5090", VA = "0xDD5090")]
		public SoundFX()
		{
		}

		[Token(Token = "0x600191B")]
		[Address(RVA = "0xDD5724", Offset = "0xDD5724", VA = "0xDD5724")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x600191C")]
		[Address(RVA = "0xDD589C", Offset = "0xDD589C", VA = "0xDD589C")]
		public AudioMixerGroup GetMixerGroup(AudioMixerGroup defaultMixerGroup)
		{
			return null;
		}

		[Token(Token = "0x600191D")]
		[Address(RVA = "0xDD5940", Offset = "0xDD5940", VA = "0xDD5940")]
		public bool ReachedGroupPlayLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x600191E")]
		[Address(RVA = "0xDD5988", Offset = "0xDD5988", VA = "0xDD5988")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x600191F")]
		[Address(RVA = "0xDD5AD8", Offset = "0xDD5AD8", VA = "0xDD5AD8")]
		public float GetPitch()
		{
			return default(float);
		}

		[Token(Token = "0x6001920")]
		[Address(RVA = "0xDD5AE4", Offset = "0xDD5AE4", VA = "0xDD5AE4")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6001921")]
		[Address(RVA = "0xDD5BC4", Offset = "0xDD5BC4", VA = "0xDD5BC4")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6001922")]
		[Address(RVA = "0xDD5CDC", Offset = "0xDD5CDC", VA = "0xDD5CDC")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6001923")]
		[Address(RVA = "0xDD5D6C", Offset = "0xDD5D6C", VA = "0xDD5D6C")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6001924")]
		[Address(RVA = "0xDD5E04", Offset = "0xDD5E04", VA = "0xDD5E04")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x6001925")]
		[Address(RVA = "0xDD5E94", Offset = "0xDD5E94", VA = "0xDD5E94")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x6001926")]
		[Address(RVA = "0xDD5F24", Offset = "0xDD5F24", VA = "0xDD5F24")]
		public void DetachFromParent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000410")]
	public class SoundFXRef
	{
		[Token(Token = "0x4000F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string soundFXName;

		[Token(Token = "0x4000F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool initialized;

		[Token(Token = "0x4000F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SoundFX soundFXCached;

		[Token(Token = "0x170002C4")]
		public SoundFX soundFX
		{
			[Token(Token = "0x6001927")]
			[Address(RVA = "0xDD5FA0", Offset = "0xDD5FA0", VA = "0xDD5FA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C5")]
		public string name
		{
			[Token(Token = "0x6001928")]
			[Address(RVA = "0xDD609C", Offset = "0xDD609C", VA = "0xDD609C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001929")]
			[Address(RVA = "0xDD60A4", Offset = "0xDD60A4", VA = "0xDD60A4")]
			set
			{
			}
		}

		[Token(Token = "0x170002C6")]
		public int Length
		{
			[Token(Token = "0x600192B")]
			[Address(RVA = "0xDD60AC", Offset = "0xDD60AC", VA = "0xDD60AC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002C7")]
		public bool IsValid
		{
			[Token(Token = "0x600192C")]
			[Address(RVA = "0xDD60FC", Offset = "0xDD60FC", VA = "0xDD60FC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600192A")]
		[Address(RVA = "0xDD5FD0", Offset = "0xDD5FD0", VA = "0xDD5FD0")]
		private void Init()
		{
		}

		[Token(Token = "0x600192D")]
		[Address(RVA = "0xDD613C", Offset = "0xDD613C", VA = "0xDD613C")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x600192E")]
		[Address(RVA = "0xDD617C", Offset = "0xDD617C", VA = "0xDD617C")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x600192F")]
		[Address(RVA = "0xDD61C4", Offset = "0xDD61C4", VA = "0xDD61C4")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6001930")]
		[Address(RVA = "0xDD6214", Offset = "0xDD6214", VA = "0xDD6214")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volume = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6001931")]
		[Address(RVA = "0xDD629C", Offset = "0xDD629C", VA = "0xDD629C")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6001932")]
		[Address(RVA = "0xDD62E4", Offset = "0xDD62E4", VA = "0xDD62E4")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6001933")]
		[Address(RVA = "0xDD633C", Offset = "0xDD633C", VA = "0xDD633C")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x6001934")]
		[Address(RVA = "0xDD637C", Offset = "0xDD637C", VA = "0xDD637C")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x6001935")]
		[Address(RVA = "0xDD63C4", Offset = "0xDD63C4", VA = "0xDD63C4")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x6001936")]
		[Address(RVA = "0xDD6404", Offset = "0xDD6404", VA = "0xDD6404")]
		public SoundFXRef()
		{
		}
	}
}
namespace LIV.SDK.Unity
{
	[Token(Token = "0x2000411")]
	public static class Calibration
	{
		[Serializable]
		[Token(Token = "0x2000DF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97A0C4", Offset = "0x97A0C4")]
		private sealed class <>c
		{
			[Token(Token = "0x4002254")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x6002E30")]
			[Address(RVA = "0xCAC644", Offset = "0xCAC644", VA = "0xCAC644")]
			public <>c()
			{
			}

			[Token(Token = "0x6002E31")]
			[Address(RVA = "0xCAC64C", Offset = "0xCAC64C", VA = "0xCAC64C")]
			internal void <.cctor>b__20_0(object o, FileSystemEventArgs e)
			{
			}
		}

		[Token(Token = "0x4000F5E")]
		private const string ConfigFileName = "externalcamera.cfg";

		[Token(Token = "0x4000F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static float X;

		[Token(Token = "0x4000F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static float Y;

		[Token(Token = "0x4000F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static float Z;

		[Token(Token = "0x4000F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static float Yaw;

		[Token(Token = "0x4000F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static float Pitch;

		[Token(Token = "0x4000F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public static float Roll;

		[Token(Token = "0x4000F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static float FieldOfVision;

		[Token(Token = "0x4000F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public static float NearClip;

		[Token(Token = "0x4000F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static float FarClip;

		[Token(Token = "0x4000F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public static float HMDOffset;

		[Token(Token = "0x4000F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static float NearOffset;

		[Token(Token = "0x4000F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static readonly FileSystemWatcher ConfigWatcher;

		[Token(Token = "0x170002C8")]
		public static Vector3 PositionOffset
		{
			[Token(Token = "0x6001939")]
			[Address(RVA = "0xCAB894", Offset = "0xCAB894", VA = "0xCAB894")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002C9")]
		public static Quaternion RotationOffset
		{
			[Token(Token = "0x600193A")]
			[Address(RVA = "0xCAB924", Offset = "0xCAB924", VA = "0xCAB924")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x14000049")]
		public static event EventHandler Changed
		{
			[Token(Token = "0x6001937")]
			[Address(RVA = "0xCAB63C", Offset = "0xCAB63C", VA = "0xCAB63C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x987C14", Offset = "0x987C14")]
			add
			{
			}
			[Token(Token = "0x6001938")]
			[Address(RVA = "0xCAB768", Offset = "0xCAB768", VA = "0xCAB768")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x987C24", Offset = "0x987C24")]
			remove
			{
			}
		}

		[Token(Token = "0x600193B")]
		[Address(RVA = "0xCAB9D0", Offset = "0xCAB9D0", VA = "0xCAB9D0")]
		static Calibration()
		{
		}

		[Token(Token = "0x600193C")]
		[Address(RVA = "0xCAC490", Offset = "0xCAC490", VA = "0xCAC490")]
		private static void Reset()
		{
		}

		[Token(Token = "0x600193D")]
		[Address(RVA = "0xCABC24", Offset = "0xCABC24", VA = "0xCABC24")]
		public static void Read()
		{
		}

		[Token(Token = "0x600193E")]
		[Address(RVA = "0xCAC558", Offset = "0xCAC558", VA = "0xCAC558")]
		private static bool TryParseInvariantFloat(string number, out float result)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000412")]
	public static class Extensions
	{
		[Token(Token = "0x600193F")]
		[Address(RVA = "0xCAC6A8", Offset = "0xCAC6A8", VA = "0xCAC6A8")]
		private static float _copysign(float sizeval, float signval)
		{
			return default(float);
		}

		[Token(Token = "0x6001940")]
		[Address(RVA = "0xCAC764", Offset = "0xCAC764", VA = "0xCAC764")]
		public static Quaternion GetRotation(this Matrix4x4 matrix)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001941")]
		[Address(RVA = "0xCAC930", Offset = "0xCAC930", VA = "0xCAC930")]
		public static Vector3 GetPosition(this Matrix4x4 matrix)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x2000413")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9777C0", Offset = "0x9777C0")]
	public class ExternalCamera : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000DF1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97A0D4", Offset = "0x97A0D4")]
		private sealed class <>c
		{
			[Token(Token = "0x4002255")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002256")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<TrackedDevicePose_t, int, <>f__AnonymousType0<TrackedDevicePose_t, uint>> <>9__17_0;

			[Token(Token = "0x4002257")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<<>f__AnonymousType0<TrackedDevicePose_t, uint>, bool> <>9__17_1;

			[Token(Token = "0x4002258")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<<>f__AnonymousType0<TrackedDevicePose_t, uint>, <>f__AnonymousType1<TrackedDevicePose_t, uint, ETrackedDeviceClass>> <>9__17_2;

			[Token(Token = "0x4002259")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<<>f__AnonymousType1<TrackedDevicePose_t, uint, ETrackedDeviceClass>, bool> <>9__17_3;

			[Token(Token = "0x400225A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<<>f__AnonymousType1<TrackedDevicePose_t, uint, ETrackedDeviceClass>, <>f__AnonymousType2<TrackedDevicePose_t, uint, ETrackedDeviceClass, ETrackedControllerRole, string, string>> <>9__17_4;

			[Token(Token = "0x400225B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Func<<>f__AnonymousType2<TrackedDevicePose_t, uint, ETrackedDeviceClass, ETrackedControllerRole, string, string>, int> <>9__17_5;

			[Token(Token = "0x6002E33")]
			[Address(RVA = "0xCAD60C", Offset = "0xCAD60C", VA = "0xCAD60C")]
			public <>c()
			{
			}

			[Token(Token = "0x6002E34")]
			[Address(RVA = "0xCAD614", Offset = "0xCAD614", VA = "0xCAD614")]
			internal <>f__AnonymousType0<TrackedDevicePose_t, uint> <IdentifyExternalCameraDevice>b__17_0(TrackedDevicePose_t pose, int index)
			{
				return null;
			}

			[Token(Token = "0x6002E35")]
			[Address(RVA = "0xCAD6C0", Offset = "0xCAD6C0", VA = "0xCAD6C0")]
			internal bool <IdentifyExternalCameraDevice>b__17_1(<>f__AnonymousType0<TrackedDevicePose_t, uint> candidate)
			{
				return default(bool);
			}

			[Token(Token = "0x6002E36")]
			[Address(RVA = "0xCAD730", Offset = "0xCAD730", VA = "0xCAD730")]
			internal <>f__AnonymousType1<TrackedDevicePose_t, uint, ETrackedDeviceClass> <IdentifyExternalCameraDevice>b__17_2(<>f__AnonymousType0<TrackedDevicePose_t, uint> candidate)
			{
				return null;
			}

			[Token(Token = "0x6002E37")]
			[Address(RVA = "0xCAD884", Offset = "0xCAD884", VA = "0xCAD884")]
			internal bool <IdentifyExternalCameraDevice>b__17_3(<>f__AnonymousType1<TrackedDevicePose_t, uint, ETrackedDeviceClass> candidate)
			{
				return default(bool);
			}

			[Token(Token = "0x6002E38")]
			[Address(RVA = "0xCAD914", Offset = "0xCAD914", VA = "0xCAD914")]
			internal <>f__AnonymousType2<TrackedDevicePose_t, uint, ETrackedDeviceClass, ETrackedControllerRole, string, string> <IdentifyExternalCameraDevice>b__17_4(<>f__AnonymousType1<TrackedDevicePose_t, uint, ETrackedDeviceClass> candidate)
			{
				return null;
			}

			[Token(Token = "0x6002E39")]
			[Address(RVA = "0xCADB10", Offset = "0xCADB10", VA = "0xCADB10")]
			internal int <IdentifyExternalCameraDevice>b__17_5(<>f__AnonymousType2<TrackedDevicePose_t, uint, ETrackedDeviceClass, ETrackedControllerRole, string, string> candidate)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4000F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x981500", Offset = "0x981500")]
		private uint <OpenVRTrackedDeviceId>k__BackingField;

		[Token(Token = "0x4000F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private TrackedDevicePose_t _trackedDevicePose;

		[Token(Token = "0x4000F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private TrackedDevicePose_t[] _devices;

		[Token(Token = "0x4000F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private TrackedDevicePose_t[] _gameDevices;

		[Token(Token = "0x170002CA")]
		public bool IsValid
		{
			[Token(Token = "0x6001942")]
			[Address(RVA = "0xCAC96C", Offset = "0xCAC96C", VA = "0xCAC96C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002CB")]
		public uint OpenVRTrackedDeviceId
		{
			[Token(Token = "0x6001943")]
			[Address(RVA = "0xCAC97C", Offset = "0xCAC97C", VA = "0xCAC97C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x987C54", Offset = "0x987C54")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6001944")]
			[Address(RVA = "0xCAC984", Offset = "0xCAC984", VA = "0xCAC984")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x987C64", Offset = "0x987C64")]
			protected set
			{
			}
		}

		[Token(Token = "0x6001945")]
		[Address(RVA = "0xCAC98C", Offset = "0xCAC98C", VA = "0xCAC98C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001946")]
		[Address(RVA = "0xCACA1C", Offset = "0xCACA1C", VA = "0xCACA1C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001947")]
		[Address(RVA = "0xCACA70", Offset = "0xCACA70", VA = "0xCACA70")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001948")]
		[Address(RVA = "0xCACAF8", Offset = "0xCACAF8", VA = "0xCACAF8")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x6001949")]
		[Address(RVA = "0xCACA74", Offset = "0xCACA74", VA = "0xCACA74")]
		private void UpdateCamera()
		{
		}

		[Token(Token = "0x600194A")]
		[Address(RVA = "0xCACAFC", Offset = "0xCACAFC", VA = "0xCACAFC")]
		private void UpdateOpenVRPose()
		{
		}

		[Token(Token = "0x600194B")]
		[Address(RVA = "0xCACBDC", Offset = "0xCACBDC", VA = "0xCACBDC")]
		private void UpdateTransform(HmdMatrix34_t deviceToAbsolute)
		{
		}

		[Token(Token = "0x600194C")]
		[Address(RVA = "0xCAC9F8", Offset = "0xCAC9F8", VA = "0xCAC9F8")]
		private void UpdateOpenVRDevice()
		{
		}

		[Token(Token = "0x600194D")]
		[Address(RVA = "0xCACE74", Offset = "0xCACE74", VA = "0xCACE74")]
		private uint IdentifyExternalCameraDevice()
		{
			return default(uint);
		}

		[Token(Token = "0x600194E")]
		[Address(RVA = "0xCAD3C0", Offset = "0xCAD3C0", VA = "0xCAD3C0")]
		private static string GetStringTrackedDeviceProperty(uint device, ETrackedDeviceProperty property)
		{
			return null;
		}

		[Token(Token = "0x600194F")]
		[Address(RVA = "0xCAD538", Offset = "0xCAD538", VA = "0xCAD538")]
		public ExternalCamera()
		{
		}
	}
	[Token(Token = "0x2000414")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x9777F8", Offset = "0x9777F8")]
	public class HelpAttribute : PropertyAttribute
	{
		[Token(Token = "0x4000F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string text;

		[Token(Token = "0x6001950")]
		[Address(RVA = "0xF6DDF8", Offset = "0xF6DDF8", VA = "0xF6DDF8")]
		public HelpAttribute(string text)
		{
		}
	}
	[Token(Token = "0x2000415")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x977834", Offset = "0x977834")]
	public class LIV : MonoBehaviour
	{
		[Token(Token = "0x4000F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x981510", Offset = "0x981510")]
		public Transform TrackedSpaceOrigin;

		[Token(Token = "0x4000F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x981548", Offset = "0x981548")]
		public Camera HMDCamera;

		[Token(Token = "0x4000F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x981558", Offset = "0x981558")]
		public bool DisableStandardAssets;

		[Token(Token = "0x4000F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x981568", Offset = "0x981568")]
		public LayerMask SpectatorLayerMask;

		[Token(Token = "0x4000F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected bool WasActive;

		[Token(Token = "0x4000F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SharedTextureProtocol _sharedTextureProtocol;

		[Token(Token = "0x4000F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ExternalCamera _externalCamera;

		[Token(Token = "0x4000F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private MixedRealityRender _mixedRealityRender;

		[Token(Token = "0x4000F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _wasSteamVRExternalCameraActive;

		[Token(Token = "0x170002CC")]
		public Transform Origin
		{
			[Token(Token = "0x6001951")]
			[Address(RVA = "0xF6DE24", Offset = "0xF6DE24", VA = "0xF6DE24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001952")]
		[Address(RVA = "0xF6DECC", Offset = "0xF6DECC", VA = "0xF6DECC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001953")]
		[Address(RVA = "0xF6E19C", Offset = "0xF6E19C", VA = "0xF6E19C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001954")]
		[Address(RVA = "0xF6E394", Offset = "0xF6E394", VA = "0xF6E394")]
		private void Update()
		{
		}

		[Token(Token = "0x6001955")]
		[Address(RVA = "0xF6E3EC", Offset = "0xF6E3EC", VA = "0xF6E3EC")]
		private void OnCompositorActivated()
		{
		}

		[Token(Token = "0x6001956")]
		[Address(RVA = "0xF6E228", Offset = "0xF6E228", VA = "0xF6E228")]
		private void OnCompositorDeactivated()
		{
		}

		[Token(Token = "0x6001957")]
		[Address(RVA = "0xF6E598", Offset = "0xF6E598", VA = "0xF6E598")]
		private void CreateSharedTextureProtocol()
		{
		}

		[Token(Token = "0x6001958")]
		[Address(RVA = "0xF6EB00", Offset = "0xF6EB00", VA = "0xF6EB00")]
		private void DestroySharedTextureProtocol()
		{
		}

		[Token(Token = "0x6001959")]
		[Address(RVA = "0xF6E608", Offset = "0xF6E608", VA = "0xF6E608")]
		private void CreateExternalCamera()
		{
		}

		[Token(Token = "0x600195A")]
		[Address(RVA = "0xF6EC78", Offset = "0xF6EC78", VA = "0xF6EC78")]
		private void DestroyExternalCamera()
		{
		}

		[Token(Token = "0x600195B")]
		[Address(RVA = "0xF6E6E0", Offset = "0xF6E6E0", VA = "0xF6E6E0")]
		private void CreateMixedRealityRender()
		{
		}

		[Token(Token = "0x600195C")]
		[Address(RVA = "0xF6EBAC", Offset = "0xF6EBAC", VA = "0xF6EBAC")]
		private void DestroyMixedRealityRender()
		{
		}

		[Token(Token = "0x600195D")]
		[Address(RVA = "0xF6EF04", Offset = "0xF6EF04", VA = "0xF6EF04")]
		public LIV()
		{
		}
	}
	[Token(Token = "0x2000416")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x97786C", Offset = "0x97786C")]
	public class MixedRealityRender : MonoBehaviour
	{
		[Token(Token = "0x2000DF2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97A0E4", Offset = "0x97A0E4")]
		private sealed class <RenderLoop>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400225C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400225D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400225E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MixedRealityRender <>4__this;

			[Token(Token = "0x170003BC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E3D")]
				[Address(RVA = "0xF706CC", Offset = "0xF706CC", VA = "0xF706CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003BD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E3F")]
				[Address(RVA = "0xF7073C", Offset = "0xF7073C", VA = "0xF7073C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E3A")]
			[Address(RVA = "0xF70588", Offset = "0xF70588", VA = "0xF70588")]
			[DebuggerHidden]
			public <RenderLoop>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x6002E3B")]
			[Address(RVA = "0xF705BC", Offset = "0xF705BC", VA = "0xF705BC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E3C")]
			[Address(RVA = "0xF705C0", Offset = "0xF705C0", VA = "0xF705C0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E3E")]
			[Address(RVA = "0xF706D4", Offset = "0xF706D4", VA = "0xF706D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _isSetup;

		[Token(Token = "0x4000F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LIV _liv;

		[Token(Token = "0x4000F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Camera _mrCamera;

		[Token(Token = "0x4000F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _hmd;

		[Token(Token = "0x4000F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject _clipQuad;

		[Token(Token = "0x4000F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _clipMaterial;

		[Token(Token = "0x4000F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _blitMaterial;

		[Token(Token = "0x4000F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private RenderTexture _compositeTexture;

		[Token(Token = "0x4000F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private RenderTexture _foregroundTexture;

		[Token(Token = "0x4000F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private RenderTexture _backgroundTexture;

		[Token(Token = "0x600195E")]
		[Address(RVA = "0xF6ED44", Offset = "0xF6ED44", VA = "0xF6ED44")]
		public void Setup(LIV liv)
		{
		}

		[Token(Token = "0x600195F")]
		[Address(RVA = "0xF6EF38", Offset = "0xF6EF38", VA = "0xF6EF38")]
		private void CreateClipQuad()
		{
		}

		[Token(Token = "0x6001960")]
		[Address(RVA = "0xF6F23C", Offset = "0xF6F23C", VA = "0xF6F23C")]
		private void UpdateCamera()
		{
		}

		[Token(Token = "0x6001961")]
		[Address(RVA = "0xF6F4A4", Offset = "0xF6F4A4", VA = "0xF6F4A4")]
		private void UpdateTextures()
		{
		}

		[Token(Token = "0x6001962")]
		[Address(RVA = "0xF6F88C", Offset = "0xF6F88C", VA = "0xF6F88C")]
		public float GetDistanceToHMD()
		{
			return default(float);
		}

		[Token(Token = "0x6001963")]
		[Address(RVA = "0xF6FB94", Offset = "0xF6FB94", VA = "0xF6FB94")]
		private void OrientClipQuad()
		{
		}

		[Token(Token = "0x6001964")]
		[Address(RVA = "0xF6FED0", Offset = "0xF6FED0", VA = "0xF6FED0")]
		private void RenderNear()
		{
		}

		[Token(Token = "0x6001965")]
		[Address(RVA = "0xF70314", Offset = "0xF70314", VA = "0xF70314")]
		private void RenderFar()
		{
		}

		[Token(Token = "0x6001966")]
		[Address(RVA = "0xF70398", Offset = "0xF70398", VA = "0xF70398")]
		private void Composite()
		{
		}

		[Token(Token = "0x6001967")]
		[Address(RVA = "0xF704E8", Offset = "0xF704E8", VA = "0xF704E8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001968")]
		[Address(RVA = "0xF70514", Offset = "0xF70514", VA = "0xF70514")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x987C74", Offset = "0x987C74")]
		private IEnumerator RenderLoop()
		{
			return null;
		}

		[Token(Token = "0x6001969")]
		[Address(RVA = "0xF705B4", Offset = "0xF705B4", VA = "0xF705B4")]
		public MixedRealityRender()
		{
		}
	}
	[Token(Token = "0x2000417")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9778A4", Offset = "0x9778A4")]
	public class SharedTextureProtocol : MonoBehaviour
	{
		[Token(Token = "0x2000DF3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97A0F4", Offset = "0x97A0F4")]
		private sealed class <CallPluginAtEndOfFrames>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400225F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002260")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002261")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SharedTextureProtocol <>4__this;

			[Token(Token = "0x170003BE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E43")]
				[Address(RVA = "0xF70BF8", Offset = "0xF70BF8", VA = "0xF70BF8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003BF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E45")]
				[Address(RVA = "0xF70C68", Offset = "0xF70C68", VA = "0xF70C68", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E40")]
			[Address(RVA = "0xF70AB8", Offset = "0xF70AB8", VA = "0xF70AB8")]
			[DebuggerHidden]
			public <CallPluginAtEndOfFrames>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6002E41")]
			[Address(RVA = "0xF70B2C", Offset = "0xF70B2C", VA = "0xF70B2C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E42")]
			[Address(RVA = "0xF70B30", Offset = "0xF70B30", VA = "0xF70B30", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E44")]
			[Address(RVA = "0xF70C00", Offset = "0xF70C00", VA = "0xF70C00", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x170002CD")]
		public static bool IsActive
		{
			[Token(Token = "0x600196F")]
			[Address(RVA = "0xF6E3E8", Offset = "0xF6E3E8", VA = "0xF6E3E8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002CE")]
		public static int TextureWidth
		{
			[Token(Token = "0x6001970")]
			[Address(RVA = "0xF6F884", Offset = "0xF6F884", VA = "0xF6F884")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002CF")]
		public static int TextureHeight
		{
			[Token(Token = "0x6001971")]
			[Address(RVA = "0xF6F888", Offset = "0xF6F888", VA = "0xF6F888")]
			get
			{
				return default(int);
			}
		}

		[PreserveSig]
		[Token(Token = "0x600196A")]
		[Address(RVA = "0xF70744", Offset = "0xF70744", VA = "0xF70744")]
		private static extern IntPtr GetRenderEventFunc();

		[PreserveSig]
		[Token(Token = "0x600196B")]
		[Address(RVA = "0xF707D0", Offset = "0xF707D0", VA = "0xF707D0")]
		private static extern bool GetIsCaptureActive();

		[PreserveSig]
		[Token(Token = "0x600196C")]
		[Address(RVA = "0xF70864", Offset = "0xF70864", VA = "0xF70864")]
		private static extern int GetTextureWidth();

		[PreserveSig]
		[Token(Token = "0x600196D")]
		[Address(RVA = "0xF708F0", Offset = "0xF708F0", VA = "0xF708F0")]
		private static extern int GetTextureHeight();

		[PreserveSig]
		[Token(Token = "0x600196E")]
		[Address(RVA = "0xF7097C", Offset = "0xF7097C", VA = "0xF7097C")]
		private static extern void SetTexture(IntPtr texture);

		[Token(Token = "0x6001972")]
		[Address(RVA = "0xF704A0", Offset = "0xF704A0", VA = "0xF704A0")]
		public static void SetOutputTexture(Texture texture)
		{
		}

		[Token(Token = "0x6001973")]
		[Address(RVA = "0xF70A18", Offset = "0xF70A18", VA = "0xF70A18")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001974")]
		[Address(RVA = "0xF70A44", Offset = "0xF70A44", VA = "0xF70A44")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x987CD8", Offset = "0x987CD8")]
		private IEnumerator CallPluginAtEndOfFrames()
		{
			return null;
		}

		[Token(Token = "0x6001975")]
		[Address(RVA = "0xF70AE4", Offset = "0xF70AE4", VA = "0xF70AE4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001976")]
		[Address(RVA = "0xF70B24", Offset = "0xF70B24", VA = "0xF70B24")]
		public SharedTextureProtocol()
		{
		}
	}
	[Token(Token = "0x2000418")]
	internal static class SteamVRCompatibility
	{
		[Token(Token = "0x4000F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool IsAvailable;

		[Token(Token = "0x4000F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Type SteamVRCamera;

		[Token(Token = "0x4000F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Type SteamVRExternalCamera;

		[Token(Token = "0x4000F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Type SteamVRFade;

		[Token(Token = "0x6001977")]
		[Address(RVA = "0xF70C70", Offset = "0xF70C70", VA = "0xF70C70")]
		static SteamVRCompatibility()
		{
		}

		[Token(Token = "0x6001978")]
		[Address(RVA = "0xF70CC8", Offset = "0xF70CC8", VA = "0xF70CC8")]
		private static bool FindSteamVRAsset()
		{
			return default(bool);
		}
	}
}
namespace Valve.VR
{
	[Token(Token = "0x2000419")]
	public struct IVRSystem
	{
		[Token(Token = "0x2000DF4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A104", Offset = "0x97A104")]
		internal delegate void _GetRecommendedRenderTargetSize(ref uint pnWidth, ref uint pnHeight);

		[Token(Token = "0x2000DF5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A118", Offset = "0x97A118")]
		internal delegate HmdMatrix44_t _GetProjectionMatrix(EVREye eEye, float fNearZ, float fFarZ);

		[Token(Token = "0x2000DF6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A12C", Offset = "0x97A12C")]
		internal delegate void _GetProjectionRaw(EVREye eEye, ref float pfLeft, ref float pfRight, ref float pfTop, ref float pfBottom);

		[Token(Token = "0x2000DF7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A140", Offset = "0x97A140")]
		internal delegate bool _ComputeDistortion(EVREye eEye, float fU, float fV, ref DistortionCoordinates_t pDistortionCoordinates);

		[Token(Token = "0x2000DF8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A154", Offset = "0x97A154")]
		internal delegate HmdMatrix34_t _GetEyeToHeadTransform(EVREye eEye);

		[Token(Token = "0x2000DF9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A168", Offset = "0x97A168")]
		internal delegate bool _GetTimeSinceLastVsync(ref float pfSecondsSinceLastVsync, ref ulong pulFrameCounter);

		[Token(Token = "0x2000DFA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A17C", Offset = "0x97A17C")]
		internal delegate int _GetD3D9AdapterIndex();

		[Token(Token = "0x2000DFB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A190", Offset = "0x97A190")]
		internal delegate void _GetDXGIOutputInfo(ref int pnAdapterIndex);

		[Token(Token = "0x2000DFC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A1A4", Offset = "0x97A1A4")]
		internal delegate void _GetOutputDevice(ref ulong pnDevice, ETextureType textureType, IntPtr pInstance);

		[Token(Token = "0x2000DFD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A1B8", Offset = "0x97A1B8")]
		internal delegate bool _IsDisplayOnDesktop();

		[Token(Token = "0x2000DFE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A1CC", Offset = "0x97A1CC")]
		internal delegate bool _SetDisplayVisibility(bool bIsVisibleOnDesktop);

		[Token(Token = "0x2000DFF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A1E0", Offset = "0x97A1E0")]
		internal delegate void _GetDeviceToAbsoluteTrackingPose(ETrackingUniverseOrigin eOrigin, float fPredictedSecondsToPhotonsFromNow, [In][Out] TrackedDevicePose_t[] pTrackedDevicePoseArray, uint unTrackedDevicePoseArrayCount);

		[Token(Token = "0x2000E00")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A1F4", Offset = "0x97A1F4")]
		internal delegate void _ResetSeatedZeroPose();

		[Token(Token = "0x2000E01")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A208", Offset = "0x97A208")]
		internal delegate HmdMatrix34_t _GetSeatedZeroPoseToStandingAbsoluteTrackingPose();

		[Token(Token = "0x2000E02")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A21C", Offset = "0x97A21C")]
		internal delegate HmdMatrix34_t _GetRawZeroPoseToStandingAbsoluteTrackingPose();

		[Token(Token = "0x2000E03")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A230", Offset = "0x97A230")]
		internal delegate uint _GetSortedTrackedDeviceIndicesOfClass(ETrackedDeviceClass eTrackedDeviceClass, [In][Out] uint[] punTrackedDeviceIndexArray, uint unTrackedDeviceIndexArrayCount, uint unRelativeToTrackedDeviceIndex);

		[Token(Token = "0x2000E04")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A244", Offset = "0x97A244")]
		internal delegate EDeviceActivityLevel _GetTrackedDeviceActivityLevel(uint unDeviceId);

		[Token(Token = "0x2000E05")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A258", Offset = "0x97A258")]
		internal delegate void _ApplyTransform(ref TrackedDevicePose_t pOutputPose, ref TrackedDevicePose_t pTrackedDevicePose, ref HmdMatrix34_t pTransform);

		[Token(Token = "0x2000E06")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A26C", Offset = "0x97A26C")]
		internal delegate uint _GetTrackedDeviceIndexForControllerRole(ETrackedControllerRole unDeviceType);

		[Token(Token = "0x2000E07")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A280", Offset = "0x97A280")]
		internal delegate ETrackedControllerRole _GetControllerRoleForTrackedDeviceIndex(uint unDeviceIndex);

		[Token(Token = "0x2000E08")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A294", Offset = "0x97A294")]
		internal delegate ETrackedDeviceClass _GetTrackedDeviceClass(uint unDeviceIndex);

		[Token(Token = "0x2000E09")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A2A8", Offset = "0x97A2A8")]
		internal delegate bool _IsTrackedDeviceConnected(uint unDeviceIndex);

		[Token(Token = "0x2000E0A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A2BC", Offset = "0x97A2BC")]
		internal delegate bool _GetBoolTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x2000E0B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A2D0", Offset = "0x97A2D0")]
		internal delegate float _GetFloatTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x2000E0C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A2E4", Offset = "0x97A2E4")]
		internal delegate int _GetInt32TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x2000E0D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A2F8", Offset = "0x97A2F8")]
		internal delegate ulong _GetUint64TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x2000E0E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A30C", Offset = "0x97A30C")]
		internal delegate HmdMatrix34_t _GetMatrix34TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x2000E0F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A320", Offset = "0x97A320")]
		internal delegate uint _GetArrayTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, uint propType, IntPtr pBuffer, uint unBufferSize, ref ETrackedPropertyError pError);

		[Token(Token = "0x2000E10")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A334", Offset = "0x97A334")]
		internal delegate uint _GetStringTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, StringBuilder pchValue, uint unBufferSize, ref ETrackedPropertyError pError);

		[Token(Token = "0x2000E11")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A348", Offset = "0x97A348")]
		internal delegate IntPtr _GetPropErrorNameFromEnum(ETrackedPropertyError error);

		[Token(Token = "0x2000E12")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A35C", Offset = "0x97A35C")]
		internal delegate bool _PollNextEvent(ref VREvent_t pEvent, uint uncbVREvent);

		[Token(Token = "0x2000E13")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A370", Offset = "0x97A370")]
		internal delegate bool _PollNextEventWithPose(ETrackingUniverseOrigin eOrigin, ref VREvent_t pEvent, uint uncbVREvent, ref TrackedDevicePose_t pTrackedDevicePose);

		[Token(Token = "0x2000E14")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A384", Offset = "0x97A384")]
		internal delegate IntPtr _GetEventTypeNameFromEnum(EVREventType eType);

		[Token(Token = "0x2000E15")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A398", Offset = "0x97A398")]
		internal delegate HiddenAreaMesh_t _GetHiddenAreaMesh(EVREye eEye, EHiddenAreaMeshType type);

		[Token(Token = "0x2000E16")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A3AC", Offset = "0x97A3AC")]
		internal delegate bool _GetControllerState(uint unControllerDeviceIndex, ref VRControllerState_t pControllerState, uint unControllerStateSize);

		[Token(Token = "0x2000E17")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A3C0", Offset = "0x97A3C0")]
		internal delegate bool _GetControllerStateWithPose(ETrackingUniverseOrigin eOrigin, uint unControllerDeviceIndex, ref VRControllerState_t pControllerState, uint unControllerStateSize, ref TrackedDevicePose_t pTrackedDevicePose);

		[Token(Token = "0x2000E18")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A3D4", Offset = "0x97A3D4")]
		internal delegate void _TriggerHapticPulse(uint unControllerDeviceIndex, uint unAxisId, char usDurationMicroSec);

		[Token(Token = "0x2000E19")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A3E8", Offset = "0x97A3E8")]
		internal delegate IntPtr _GetButtonIdNameFromEnum(EVRButtonId eButtonId);

		[Token(Token = "0x2000E1A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A3FC", Offset = "0x97A3FC")]
		internal delegate IntPtr _GetControllerAxisTypeNameFromEnum(EVRControllerAxisType eAxisType);

		[Token(Token = "0x2000E1B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A410", Offset = "0x97A410")]
		internal delegate bool _IsInputAvailable();

		[Token(Token = "0x2000E1C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A424", Offset = "0x97A424")]
		internal delegate bool _IsSteamVRDrawingControllers();

		[Token(Token = "0x2000E1D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A438", Offset = "0x97A438")]
		internal delegate bool _ShouldApplicationPause();

		[Token(Token = "0x2000E1E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A44C", Offset = "0x97A44C")]
		internal delegate bool _ShouldApplicationReduceRenderingWork();

		[Token(Token = "0x2000E1F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A460", Offset = "0x97A460")]
		internal delegate uint _DriverDebugRequest(uint unDeviceIndex, string pchRequest, StringBuilder pchResponseBuffer, uint unResponseBufferSize);

		[Token(Token = "0x2000E20")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A474", Offset = "0x97A474")]
		internal delegate EVRFirmwareError _PerformFirmwareUpdate(uint unDeviceIndex);

		[Token(Token = "0x2000E21")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A488", Offset = "0x97A488")]
		internal delegate void _AcknowledgeQuit_Exiting();

		[Token(Token = "0x2000E22")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A49C", Offset = "0x97A49C")]
		internal delegate void _AcknowledgeQuit_UserPrompt();

		[Token(Token = "0x4000F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetRecommendedRenderTargetSize GetRecommendedRenderTargetSize;

		[Token(Token = "0x4000F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetProjectionMatrix GetProjectionMatrix;

		[Token(Token = "0x4000F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetProjectionRaw GetProjectionRaw;

		[Token(Token = "0x4000F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _ComputeDistortion ComputeDistortion;

		[Token(Token = "0x4000F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetEyeToHeadTransform GetEyeToHeadTransform;

		[Token(Token = "0x4000F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetTimeSinceLastVsync GetTimeSinceLastVsync;

		[Token(Token = "0x4000F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _GetD3D9AdapterIndex GetD3D9AdapterIndex;

		[Token(Token = "0x4000F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetDXGIOutputInfo GetDXGIOutputInfo;

		[Token(Token = "0x4000F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetOutputDevice GetOutputDevice;

		[Token(Token = "0x4000F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _IsDisplayOnDesktop IsDisplayOnDesktop;

		[Token(Token = "0x4000F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _SetDisplayVisibility SetDisplayVisibility;

		[Token(Token = "0x4000F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _GetDeviceToAbsoluteTrackingPose GetDeviceToAbsoluteTrackingPose;

		[Token(Token = "0x4000F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _ResetSeatedZeroPose ResetSeatedZeroPose;

		[Token(Token = "0x4000F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetSeatedZeroPoseToStandingAbsoluteTrackingPose GetSeatedZeroPoseToStandingAbsoluteTrackingPose;

		[Token(Token = "0x4000F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _GetRawZeroPoseToStandingAbsoluteTrackingPose GetRawZeroPoseToStandingAbsoluteTrackingPose;

		[Token(Token = "0x4000F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetSortedTrackedDeviceIndicesOfClass GetSortedTrackedDeviceIndicesOfClass;

		[Token(Token = "0x4000F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _GetTrackedDeviceActivityLevel GetTrackedDeviceActivityLevel;

		[Token(Token = "0x4000F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _ApplyTransform ApplyTransform;

		[Token(Token = "0x4000F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _GetTrackedDeviceIndexForControllerRole GetTrackedDeviceIndexForControllerRole;

		[Token(Token = "0x4000F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _GetControllerRoleForTrackedDeviceIndex GetControllerRoleForTrackedDeviceIndex;

		[Token(Token = "0x4000F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal _GetTrackedDeviceClass GetTrackedDeviceClass;

		[Token(Token = "0x4000F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal _IsTrackedDeviceConnected IsTrackedDeviceConnected;

		[Token(Token = "0x4000F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		internal _GetBoolTrackedDeviceProperty GetBoolTrackedDeviceProperty;

		[Token(Token = "0x4000F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal _GetFloatTrackedDeviceProperty GetFloatTrackedDeviceProperty;

		[Token(Token = "0x4000FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		internal _GetInt32TrackedDeviceProperty GetInt32TrackedDeviceProperty;

		[Token(Token = "0x4000FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		internal _GetUint64TrackedDeviceProperty GetUint64TrackedDeviceProperty;

		[Token(Token = "0x4000FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		internal _GetMatrix34TrackedDeviceProperty GetMatrix34TrackedDeviceProperty;

		[Token(Token = "0x4000FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		internal _GetArrayTrackedDeviceProperty GetArrayTrackedDeviceProperty;

		[Token(Token = "0x4000FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		internal _GetStringTrackedDeviceProperty GetStringTrackedDeviceProperty;

		[Token(Token = "0x4000FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		internal _GetPropErrorNameFromEnum GetPropErrorNameFromEnum;

		[Token(Token = "0x4000FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		internal _PollNextEvent PollNextEvent;

		[Token(Token = "0x4000FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		internal _PollNextEventWithPose PollNextEventWithPose;

		[Token(Token = "0x4000FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		internal _GetEventTypeNameFromEnum GetEventTypeNameFromEnum;

		[Token(Token = "0x4000FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		internal _GetHiddenAreaMesh GetHiddenAreaMesh;

		[Token(Token = "0x4000FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		internal _GetControllerState GetControllerState;

		[Token(Token = "0x4000FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		internal _GetControllerStateWithPose GetControllerStateWithPose;

		[Token(Token = "0x4000FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		internal _TriggerHapticPulse TriggerHapticPulse;

		[Token(Token = "0x4000FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		internal _GetButtonIdNameFromEnum GetButtonIdNameFromEnum;

		[Token(Token = "0x4000FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		internal _GetControllerAxisTypeNameFromEnum GetControllerAxisTypeNameFromEnum;

		[Token(Token = "0x4000FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		internal _IsInputAvailable IsInputAvailable;

		[Token(Token = "0x4000FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		internal _IsSteamVRDrawingControllers IsSteamVRDrawingControllers;

		[Token(Token = "0x4000FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		internal _ShouldApplicationPause ShouldApplicationPause;

		[Token(Token = "0x4000FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		internal _ShouldApplicationReduceRenderingWork ShouldApplicationReduceRenderingWork;

		[Token(Token = "0x4000FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		internal _DriverDebugRequest DriverDebugRequest;

		[Token(Token = "0x4000FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		internal _PerformFirmwareUpdate PerformFirmwareUpdate;

		[Token(Token = "0x4000FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		internal _AcknowledgeQuit_Exiting AcknowledgeQuit_Exiting;

		[Token(Token = "0x4000FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		internal _AcknowledgeQuit_UserPrompt AcknowledgeQuit_UserPrompt;
	}
	[Token(Token = "0x200041A")]
	public struct IVRExtendedDisplay
	{
		[Token(Token = "0x2000E23")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A4B0", Offset = "0x97A4B0")]
		internal delegate void _GetWindowBounds(ref int pnX, ref int pnY, ref uint pnWidth, ref uint pnHeight);

		[Token(Token = "0x2000E24")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A4C4", Offset = "0x97A4C4")]
		internal delegate void _GetEyeOutputViewport(EVREye eEye, ref uint pnX, ref uint pnY, ref uint pnWidth, ref uint pnHeight);

		[Token(Token = "0x2000E25")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A4D8", Offset = "0x97A4D8")]
		internal delegate void _GetDXGIOutputInfo(ref int pnAdapterIndex, ref int pnAdapterOutputIndex);

		[Token(Token = "0x4000FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetWindowBounds GetWindowBounds;

		[Token(Token = "0x4000FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetEyeOutputViewport GetEyeOutputViewport;

		[Token(Token = "0x4000FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetDXGIOutputInfo GetDXGIOutputInfo;
	}
	[Token(Token = "0x200041B")]
	public struct IVRTrackedCamera
	{
		[Token(Token = "0x2000E26")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A4EC", Offset = "0x97A4EC")]
		internal delegate IntPtr _GetCameraErrorNameFromEnum(EVRTrackedCameraError eCameraError);

		[Token(Token = "0x2000E27")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A500", Offset = "0x97A500")]
		internal delegate EVRTrackedCameraError _HasCamera(uint nDeviceIndex, ref bool pHasCamera);

		[Token(Token = "0x2000E28")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A514", Offset = "0x97A514")]
		internal delegate EVRTrackedCameraError _GetCameraFrameSize(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref uint pnWidth, ref uint pnHeight, ref uint pnFrameBufferSize);

		[Token(Token = "0x2000E29")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A528", Offset = "0x97A528")]
		internal delegate EVRTrackedCameraError _GetCameraIntrinsics(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref HmdVector2_t pFocalLength, ref HmdVector2_t pCenter);

		[Token(Token = "0x2000E2A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A53C", Offset = "0x97A53C")]
		internal delegate EVRTrackedCameraError _GetCameraProjection(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, float flZNear, float flZFar, ref HmdMatrix44_t pProjection);

		[Token(Token = "0x2000E2B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A550", Offset = "0x97A550")]
		internal delegate EVRTrackedCameraError _AcquireVideoStreamingService(uint nDeviceIndex, ref ulong pHandle);

		[Token(Token = "0x2000E2C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A564", Offset = "0x97A564")]
		internal delegate EVRTrackedCameraError _ReleaseVideoStreamingService(ulong hTrackedCamera);

		[Token(Token = "0x2000E2D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A578", Offset = "0x97A578")]
		internal delegate EVRTrackedCameraError _GetVideoStreamFrameBuffer(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, IntPtr pFrameBuffer, uint nFrameBufferSize, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize);

		[Token(Token = "0x2000E2E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A58C", Offset = "0x97A58C")]
		internal delegate EVRTrackedCameraError _GetVideoStreamTextureSize(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref VRTextureBounds_t pTextureBounds, ref uint pnWidth, ref uint pnHeight);

		[Token(Token = "0x2000E2F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A5A0", Offset = "0x97A5A0")]
		internal delegate EVRTrackedCameraError _GetVideoStreamTextureD3D11(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, IntPtr pD3D11DeviceOrResource, ref IntPtr ppD3D11ShaderResourceView, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize);

		[Token(Token = "0x2000E30")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A5B4", Offset = "0x97A5B4")]
		internal delegate EVRTrackedCameraError _GetVideoStreamTextureGL(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, ref uint pglTextureId, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize);

		[Token(Token = "0x2000E31")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A5C8", Offset = "0x97A5C8")]
		internal delegate EVRTrackedCameraError _ReleaseVideoStreamTextureGL(ulong hTrackedCamera, uint glTextureId);

		[Token(Token = "0x4000FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetCameraErrorNameFromEnum GetCameraErrorNameFromEnum;

		[Token(Token = "0x4000FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _HasCamera HasCamera;

		[Token(Token = "0x4000FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetCameraFrameSize GetCameraFrameSize;

		[Token(Token = "0x4000FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetCameraIntrinsics GetCameraIntrinsics;

		[Token(Token = "0x4000FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetCameraProjection GetCameraProjection;

		[Token(Token = "0x4000FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _AcquireVideoStreamingService AcquireVideoStreamingService;

		[Token(Token = "0x4000FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _ReleaseVideoStreamingService ReleaseVideoStreamingService;

		[Token(Token = "0x4000FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetVideoStreamFrameBuffer GetVideoStreamFrameBuffer;

		[Token(Token = "0x4000FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetVideoStreamTextureSize GetVideoStreamTextureSize;

		[Token(Token = "0x4000FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetVideoStreamTextureD3D11 GetVideoStreamTextureD3D11;

		[Token(Token = "0x4000FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _GetVideoStreamTextureGL GetVideoStreamTextureGL;

		[Token(Token = "0x4000FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _ReleaseVideoStreamTextureGL ReleaseVideoStreamTextureGL;
	}
	[Token(Token = "0x200041C")]
	public struct IVRApplications
	{
		[Token(Token = "0x2000E32")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A5DC", Offset = "0x97A5DC")]
		internal delegate EVRApplicationError _AddApplicationManifest(string pchApplicationManifestFullPath, bool bTemporary);

		[Token(Token = "0x2000E33")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A5F0", Offset = "0x97A5F0")]
		internal delegate EVRApplicationError _RemoveApplicationManifest(string pchApplicationManifestFullPath);

		[Token(Token = "0x2000E34")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A604", Offset = "0x97A604")]
		internal delegate bool _IsApplicationInstalled(string pchAppKey);

		[Token(Token = "0x2000E35")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A618", Offset = "0x97A618")]
		internal delegate uint _GetApplicationCount();

		[Token(Token = "0x2000E36")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A62C", Offset = "0x97A62C")]
		internal delegate EVRApplicationError _GetApplicationKeyByIndex(uint unApplicationIndex, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen);

		[Token(Token = "0x2000E37")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A640", Offset = "0x97A640")]
		internal delegate EVRApplicationError _GetApplicationKeyByProcessId(uint unProcessId, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen);

		[Token(Token = "0x2000E38")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A654", Offset = "0x97A654")]
		internal delegate EVRApplicationError _LaunchApplication(string pchAppKey);

		[Token(Token = "0x2000E39")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A668", Offset = "0x97A668")]
		internal delegate EVRApplicationError _LaunchTemplateApplication(string pchTemplateAppKey, string pchNewAppKey, [In][Out] AppOverrideKeys_t[] pKeys, uint unKeys);

		[Token(Token = "0x2000E3A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A67C", Offset = "0x97A67C")]
		internal delegate EVRApplicationError _LaunchApplicationFromMimeType(string pchMimeType, string pchArgs);

		[Token(Token = "0x2000E3B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A690", Offset = "0x97A690")]
		internal delegate EVRApplicationError _LaunchDashboardOverlay(string pchAppKey);

		[Token(Token = "0x2000E3C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A6A4", Offset = "0x97A6A4")]
		internal delegate bool _CancelApplicationLaunch(string pchAppKey);

		[Token(Token = "0x2000E3D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A6B8", Offset = "0x97A6B8")]
		internal delegate EVRApplicationError _IdentifyApplication(uint unProcessId, string pchAppKey);

		[Token(Token = "0x2000E3E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A6CC", Offset = "0x97A6CC")]
		internal delegate uint _GetApplicationProcessId(string pchAppKey);

		[Token(Token = "0x2000E3F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A6E0", Offset = "0x97A6E0")]
		internal delegate IntPtr _GetApplicationsErrorNameFromEnum(EVRApplicationError error);

		[Token(Token = "0x2000E40")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A6F4", Offset = "0x97A6F4")]
		internal delegate uint _GetApplicationPropertyString(string pchAppKey, EVRApplicationProperty eProperty, StringBuilder pchPropertyValueBuffer, uint unPropertyValueBufferLen, ref EVRApplicationError peError);

		[Token(Token = "0x2000E41")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A708", Offset = "0x97A708")]
		internal delegate bool _GetApplicationPropertyBool(string pchAppKey, EVRApplicationProperty eProperty, ref EVRApplicationError peError);

		[Token(Token = "0x2000E42")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A71C", Offset = "0x97A71C")]
		internal delegate ulong _GetApplicationPropertyUint64(string pchAppKey, EVRApplicationProperty eProperty, ref EVRApplicationError peError);

		[Token(Token = "0x2000E43")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A730", Offset = "0x97A730")]
		internal delegate EVRApplicationError _SetApplicationAutoLaunch(string pchAppKey, bool bAutoLaunch);

		[Token(Token = "0x2000E44")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A744", Offset = "0x97A744")]
		internal delegate bool _GetApplicationAutoLaunch(string pchAppKey);

		[Token(Token = "0x2000E45")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A758", Offset = "0x97A758")]
		internal delegate EVRApplicationError _SetDefaultApplicationForMimeType(string pchAppKey, string pchMimeType);

		[Token(Token = "0x2000E46")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A76C", Offset = "0x97A76C")]
		internal delegate bool _GetDefaultApplicationForMimeType(string pchMimeType, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen);

		[Token(Token = "0x2000E47")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A780", Offset = "0x97A780")]
		internal delegate bool _GetApplicationSupportedMimeTypes(string pchAppKey, StringBuilder pchMimeTypesBuffer, uint unMimeTypesBuffer);

		[Token(Token = "0x2000E48")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A794", Offset = "0x97A794")]
		internal delegate uint _GetApplicationsThatSupportMimeType(string pchMimeType, StringBuilder pchAppKeysThatSupportBuffer, uint unAppKeysThatSupportBuffer);

		[Token(Token = "0x2000E49")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A7A8", Offset = "0x97A7A8")]
		internal delegate uint _GetApplicationLaunchArguments(uint unHandle, StringBuilder pchArgs, uint unArgs);

		[Token(Token = "0x2000E4A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A7BC", Offset = "0x97A7BC")]
		internal delegate EVRApplicationError _GetStartingApplication(StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen);

		[Token(Token = "0x2000E4B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A7D0", Offset = "0x97A7D0")]
		internal delegate EVRApplicationTransitionState _GetTransitionState();

		[Token(Token = "0x2000E4C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A7E4", Offset = "0x97A7E4")]
		internal delegate EVRApplicationError _PerformApplicationPrelaunchCheck(string pchAppKey);

		[Token(Token = "0x2000E4D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A7F8", Offset = "0x97A7F8")]
		internal delegate IntPtr _GetApplicationsTransitionStateNameFromEnum(EVRApplicationTransitionState state);

		[Token(Token = "0x2000E4E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A80C", Offset = "0x97A80C")]
		internal delegate bool _IsQuitUserPromptRequested();

		[Token(Token = "0x2000E4F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A820", Offset = "0x97A820")]
		internal delegate EVRApplicationError _LaunchInternalProcess(string pchBinaryPath, string pchArguments, string pchWorkingDirectory);

		[Token(Token = "0x2000E50")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A834", Offset = "0x97A834")]
		internal delegate uint _GetCurrentSceneProcessId();

		[Token(Token = "0x4000FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _AddApplicationManifest AddApplicationManifest;

		[Token(Token = "0x4000FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _RemoveApplicationManifest RemoveApplicationManifest;

		[Token(Token = "0x4000FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _IsApplicationInstalled IsApplicationInstalled;

		[Token(Token = "0x4000FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetApplicationCount GetApplicationCount;

		[Token(Token = "0x4000FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetApplicationKeyByIndex GetApplicationKeyByIndex;

		[Token(Token = "0x4000FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetApplicationKeyByProcessId GetApplicationKeyByProcessId;

		[Token(Token = "0x4000FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _LaunchApplication LaunchApplication;

		[Token(Token = "0x4000FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _LaunchTemplateApplication LaunchTemplateApplication;

		[Token(Token = "0x4000FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _LaunchApplicationFromMimeType LaunchApplicationFromMimeType;

		[Token(Token = "0x4000FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _LaunchDashboardOverlay LaunchDashboardOverlay;

		[Token(Token = "0x4000FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _CancelApplicationLaunch CancelApplicationLaunch;

		[Token(Token = "0x4000FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _IdentifyApplication IdentifyApplication;

		[Token(Token = "0x4000FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _GetApplicationProcessId GetApplicationProcessId;

		[Token(Token = "0x4000FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetApplicationsErrorNameFromEnum GetApplicationsErrorNameFromEnum;

		[Token(Token = "0x4000FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _GetApplicationPropertyString GetApplicationPropertyString;

		[Token(Token = "0x4000FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetApplicationPropertyBool GetApplicationPropertyBool;

		[Token(Token = "0x4000FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _GetApplicationPropertyUint64 GetApplicationPropertyUint64;

		[Token(Token = "0x4000FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _SetApplicationAutoLaunch SetApplicationAutoLaunch;

		[Token(Token = "0x4000FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _GetApplicationAutoLaunch GetApplicationAutoLaunch;

		[Token(Token = "0x4000FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _SetDefaultApplicationForMimeType SetDefaultApplicationForMimeType;

		[Token(Token = "0x4000FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal _GetDefaultApplicationForMimeType GetDefaultApplicationForMimeType;

		[Token(Token = "0x4000FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal _GetApplicationSupportedMimeTypes GetApplicationSupportedMimeTypes;

		[Token(Token = "0x4000FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		internal _GetApplicationsThatSupportMimeType GetApplicationsThatSupportMimeType;

		[Token(Token = "0x4000FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal _GetApplicationLaunchArguments GetApplicationLaunchArguments;

		[Token(Token = "0x4000FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		internal _GetStartingApplication GetStartingApplication;

		[Token(Token = "0x4000FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		internal _GetTransitionState GetTransitionState;

		[Token(Token = "0x4000FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		internal _PerformApplicationPrelaunchCheck PerformApplicationPrelaunchCheck;

		[Token(Token = "0x4000FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		internal _GetApplicationsTransitionStateNameFromEnum GetApplicationsTransitionStateNameFromEnum;

		[Token(Token = "0x4000FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		internal _IsQuitUserPromptRequested IsQuitUserPromptRequested;

		[Token(Token = "0x4000FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		internal _LaunchInternalProcess LaunchInternalProcess;

		[Token(Token = "0x4000FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		internal _GetCurrentSceneProcessId GetCurrentSceneProcessId;
	}
	[Token(Token = "0x200041D")]
	public struct IVRChaperone
	{
		[Token(Token = "0x2000E51")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A848", Offset = "0x97A848")]
		internal delegate ChaperoneCalibrationState _GetCalibrationState();

		[Token(Token = "0x2000E52")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A85C", Offset = "0x97A85C")]
		internal delegate bool _GetPlayAreaSize(ref float pSizeX, ref float pSizeZ);

		[Token(Token = "0x2000E53")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A870", Offset = "0x97A870")]
		internal delegate bool _GetPlayAreaRect(ref HmdQuad_t rect);

		[Token(Token = "0x2000E54")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A884", Offset = "0x97A884")]
		internal delegate void _ReloadInfo();

		[Token(Token = "0x2000E55")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A898", Offset = "0x97A898")]
		internal delegate void _SetSceneColor(HmdColor_t color);

		[Token(Token = "0x2000E56")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A8AC", Offset = "0x97A8AC")]
		internal delegate void _GetBoundsColor(ref HmdColor_t pOutputColorArray, int nNumOutputColors, float flCollisionBoundsFadeDistance, ref HmdColor_t pOutputCameraColor);

		[Token(Token = "0x2000E57")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A8C0", Offset = "0x97A8C0")]
		internal delegate bool _AreBoundsVisible();

		[Token(Token = "0x2000E58")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A8D4", Offset = "0x97A8D4")]
		internal delegate void _ForceBoundsVisible(bool bForce);

		[Token(Token = "0x4000FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetCalibrationState GetCalibrationState;

		[Token(Token = "0x4000FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetPlayAreaSize GetPlayAreaSize;

		[Token(Token = "0x4000FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetPlayAreaRect GetPlayAreaRect;

		[Token(Token = "0x4000FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _ReloadInfo ReloadInfo;

		[Token(Token = "0x4000FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _SetSceneColor SetSceneColor;

		[Token(Token = "0x4000FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetBoundsColor GetBoundsColor;

		[Token(Token = "0x4000FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _AreBoundsVisible AreBoundsVisible;

		[Token(Token = "0x4000FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _ForceBoundsVisible ForceBoundsVisible;
	}
	[Token(Token = "0x200041E")]
	public struct IVRChaperoneSetup
	{
		[Token(Token = "0x2000E59")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A8E8", Offset = "0x97A8E8")]
		internal delegate bool _CommitWorkingCopy(EChaperoneConfigFile configFile);

		[Token(Token = "0x2000E5A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A8FC", Offset = "0x97A8FC")]
		internal delegate void _RevertWorkingCopy();

		[Token(Token = "0x2000E5B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A910", Offset = "0x97A910")]
		internal delegate bool _GetWorkingPlayAreaSize(ref float pSizeX, ref float pSizeZ);

		[Token(Token = "0x2000E5C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A924", Offset = "0x97A924")]
		internal delegate bool _GetWorkingPlayAreaRect(ref HmdQuad_t rect);

		[Token(Token = "0x2000E5D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A938", Offset = "0x97A938")]
		internal delegate bool _GetWorkingCollisionBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, ref uint punQuadsCount);

		[Token(Token = "0x2000E5E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A94C", Offset = "0x97A94C")]
		internal delegate bool _GetLiveCollisionBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, ref uint punQuadsCount);

		[Token(Token = "0x2000E5F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A960", Offset = "0x97A960")]
		internal delegate bool _GetWorkingSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose);

		[Token(Token = "0x2000E60")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A974", Offset = "0x97A974")]
		internal delegate bool _GetWorkingStandingZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatStandingZeroPoseToRawTrackingPose);

		[Token(Token = "0x2000E61")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A988", Offset = "0x97A988")]
		internal delegate void _SetWorkingPlayAreaSize(float sizeX, float sizeZ);

		[Token(Token = "0x2000E62")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A99C", Offset = "0x97A99C")]
		internal delegate void _SetWorkingCollisionBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, uint unQuadsCount);

		[Token(Token = "0x2000E63")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A9B0", Offset = "0x97A9B0")]
		internal delegate void _SetWorkingSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pMatSeatedZeroPoseToRawTrackingPose);

		[Token(Token = "0x2000E64")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A9C4", Offset = "0x97A9C4")]
		internal delegate void _SetWorkingStandingZeroPoseToRawTrackingPose(ref HmdMatrix34_t pMatStandingZeroPoseToRawTrackingPose);

		[Token(Token = "0x2000E65")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A9D8", Offset = "0x97A9D8")]
		internal delegate void _ReloadFromDisk(EChaperoneConfigFile configFile);

		[Token(Token = "0x2000E66")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97A9EC", Offset = "0x97A9EC")]
		internal delegate bool _GetLiveSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose);

		[Token(Token = "0x2000E67")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97AA00", Offset = "0x97AA00")]
		internal delegate void _SetWorkingCollisionBoundsTagsInfo([In][Out] byte[] pTagsBuffer, uint unTagCount);

		[Token(Token = "0x2000E68")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97AA14", Offset = "0x97AA14")]
		internal delegate bool _GetLiveCollisionBoundsTagsInfo([In][Out] byte[] pTagsBuffer, ref uint punTagCount);

		[Token(Token = "0x2000E69")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97AA28", Offset = "0x97AA28")]
		internal delegate bool _SetWorkingPhysicalBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, uint unQuadsCount);

		[Token(Token = "0x2000E6A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97AA3C", Offset = "0x97AA3C")]
		internal delegate bool _GetLivePhysicalBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, ref uint punQuadsCount);

		[Token(Token = "0x2000E6B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97AA50", Offset = "0x97AA50")]
		internal delegate bool _ExportLiveToBuffer(StringBuilder pBuffer, ref uint pnBufferLength);

		[Token(Token = "0x2000E6C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97AA64", Offset = "0x97AA64")]
		internal delegate bool _ImportFromBufferToWorking(string pBuffer, uint nImportFlags);

		[Token(Token = "0x4000FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _CommitWorkingCopy CommitWorkingCopy;

		[Token(Token = "0x4000FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _RevertWorkingCopy RevertWorkingCopy;

		[Token(Token = "0x4000FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetWorkingPlayAreaSize GetWorkingPlayAreaSize;

		[Token(Token = "0x4000FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetWorkingPlayAreaRect GetWorkingPlayAreaRect;

		[Token(Token = "0x4000FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetWorkingCollisionBoundsInfo GetWorkingCollisionBoundsInfo;

		[Token(Token = "0x4000FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetLiveCollisionBoundsInfo GetLiveCollisionBoundsInfo;

		[Token(Token = "0x4000FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _GetWorkingSeatedZeroPoseToRawTrackingPose GetWorkingSeatedZeroPoseToRawTrackingPose;

		[Token(Token = "0x4000FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetWorkingStandingZeroPoseToRawTrackingPose GetWorkingStandingZeroPoseToRawTrackingPose;

		[Token(Token = "0x4000FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _SetWorkingPlayAreaSize SetWorkingPlayAreaSize;

		[Token(Token = "0x4000FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _SetWorkingCollisionBoundsInfo SetWorkingCollisionBoundsInfo;

		[Token(Token = "0x4000FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _SetWorkingSeatedZeroPoseToRawTrackingPose SetWorkingSeatedZeroPoseToRawTrackingPose;

		[Token(Token = "0x4000FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _SetWorkingStandingZeroPoseToRawTrackingPose SetWorkingStandingZeroPoseToRawTrackingPose;

		[Token(Token = "0x4000FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _ReloadFromDisk ReloadFromDisk;

		[Token(Token = "0x4000FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetLiveSeatedZeroPoseToRawTrackingPose GetLiveSeatedZeroPoseToRawTrackingPose;

		[Token(Token = "0x4000FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _SetWorkingCollisionBoundsTagsInfo SetWorkingCollisionBoundsTagsInfo;

		[Token(Token = "0x4000FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetLiveCollisionBoundsTagsInfo GetLiveCollisionBoundsTagsInfo;

		[Token(Token = "0x4000FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _SetWorkingPhysicalBoundsInfo SetWorkingPhysicalBoundsInfo;

		[Token(Token = "0x4000FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _GetLivePhysicalBoundsInfo GetLivePhysicalBoundsInfo;

		[Token(Token = "0x4000FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _ExportLiveToBuffer ExportLiveToBuffer;

		[Token(Token = "0x4001000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _ImportFromBufferToWorking ImportFromBufferToWorking;
	}
	[Token(Token = "0x200041F")]
	public struct IVRCompositor
	{
		[Token(Token = "0x2000E6D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97AA78", Offset = "0x97AA78")]
		internal delegate void _SetTrackingSpace(ETrackingUniverseOrigin eOrigin);

		[Token(Token = "0x2000E6E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97AA8C", Offset = "0x97AA8C")]
		internal delegate ETrackingUniverseOrigin _GetTrackingSpace();

		[Token(Token = "0x2000E6F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97AAA0", Offset = "0x97AAA0")]
		internal delegate EVRCompositorError _WaitGetPoses([In][Out] TrackedDevicePose_t[] pRenderPoseArray, uint unRenderPoseArrayCount, [In][Out] TrackedDevicePose_t[] pGamePoseArray, uint unGamePoseArrayCount);

		[Token(Token = "0x2000E70")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97AAB4", Offset = "0x97AAB4")]
		internal delegate EVRCompositorError _GetLastPoses([In][Out] TrackedDevicePose_t[] pRenderPoseArray, uint unRenderPoseArrayCount, [In][Out] TrackedDevicePose_t[] pGamePoseArray, uint unGamePoseArrayCount);

		[Token(Token = "0x2000E71")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97AAC8", Offset = "0x97AAC8")]
		internal delegate EVRCompositorError _GetLastPoseForTrackedDeviceIndex(uint unDeviceIndex, ref TrackedDevicePose_t pOutputPose, ref TrackedDevicePose_t pOutputGamePose);

		[Token(Token = "0x2000E72")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97AADC", Offset = "0x97AADC")]
		internal delegate EVRCompositorError _Submit(EVREye eEye, ref Texture_t pTexture, ref VRTextureBounds_t pBounds, EVRSubmitFlags nSubmitFlags);

		[Token(Token = "0x2000E73")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97AAF0", Offset = "0x97AAF0")]
		internal delegate void _ClearLastSubmittedFrame();

		[Token(Token = "0x2000E74")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97AB04", Offset = "0x97AB04")]
		internal delegate void _PostPresentHandoff();

		[Token(Token = "0x2000E75")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97AB18", Offset = "0x97AB18")]
		internal delegate bool _GetFrameTiming(ref Compositor_FrameTiming pTiming, uint unFramesAgo);

		[Token(Token = "0x2000E76")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97AB2C", Offset = "0x97AB2C")]
		internal delegate uint _GetFrameTimings(ref Compositor_FrameTiming pTiming, uint nFrames);

		[Token(Token = "0x2000E77")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97AB40", Offset = "0x97AB40")]
		internal delegate float _GetFrameTimeRemaining();

		[Token(Token = "0x2000E78")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97AB54", Offset = "0x97AB54")]
		internal delegate void _GetCumulativeStats(ref Compositor_CumulativeStats pStats, uint nStatsSizeInBytes);

		[Token(Token = "0x2000E79")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97AB68", Offset = "0x97AB68")]
		internal delegate void _FadeToColor(float fSeconds, float fRed, float fGreen, float fBlue, float fAlpha, bool bBackground);

		[Token(Token = "0x2000E7A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97AB7C", Offset = "0x97AB7C")]
		internal delegate HmdColor_t _GetCurrentFadeColor(bool bBackground);

		[Token(Token = "0x2000E7B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97AB90", Offset = "0x97AB90")]
		internal delegate void _FadeGrid(float fSeconds, bool bFadeIn);

		[Token(Token = "0x2000E7C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97ABA4", Offset = "0x97ABA4")]
		internal delegate float _GetCurrentGridAlpha();

		[Token(Token = "0x2000E7D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97ABB8", Offset = "0x97ABB8")]
		internal delegate EVRCompositorError _SetSkyboxOverride([In][Out] Texture_t[] pTextures, uint unTextureCount);

		[Token(Token = "0x2000E7E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97ABCC", Offset = "0x97ABCC")]
		internal delegate void _ClearSkyboxOverride();

		[Token(Token = "0x2000E7F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97ABE0", Offset = "0x97ABE0")]
		internal delegate void _CompositorBringToFront();

		[Token(Token = "0x2000E80")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97ABF4", Offset = "0x97ABF4")]
		internal delegate void _CompositorGoToBack();

		[Token(Token = "0x2000E81")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97AC08", Offset = "0x97AC08")]
		internal delegate void _CompositorQuit();

		[Token(Token = "0x2000E82")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97AC1C", Offset = "0x97AC1C")]
		internal delegate bool _IsFullscreen();

		[Token(Token = "0x2000E83")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97AC30", Offset = "0x97AC30")]
		internal delegate uint _GetCurrentSceneFocusProcess();

		[Token(Token = "0x2000E84")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97AC44", Offset = "0x97AC44")]
		internal delegate uint _GetLastFrameRenderer();

		[Token(Token = "0x2000E85")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97AC58", Offset = "0x97AC58")]
		internal delegate bool _CanRenderScene();

		[Token(Token = "0x2000E86")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97AC6C", Offset = "0x97AC6C")]
		internal delegate void _ShowMirrorWindow();

		[Token(Token = "0x2000E87")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97AC80", Offset = "0x97AC80")]
		internal delegate void _HideMirrorWindow();

		[Token(Token = "0x2000E88")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97AC94", Offset = "0x97AC94")]
		internal delegate bool _IsMirrorWindowVisible();

		[Token(Token = "0x2000E89")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97ACA8", Offset = "0x97ACA8")]
		internal delegate void _CompositorDumpImages();

		[Token(Token = "0x2000E8A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97ACBC", Offset = "0x97ACBC")]
		internal delegate bool _ShouldAppRenderWithLowResources();

		[Token(Token = "0x2000E8B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97ACD0", Offset = "0x97ACD0")]
		internal delegate void _ForceInterleavedReprojectionOn(bool bOverride);

		[Token(Token = "0x2000E8C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97ACE4", Offset = "0x97ACE4")]
		internal delegate void _ForceReconnectProcess();

		[Token(Token = "0x2000E8D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97ACF8", Offset = "0x97ACF8")]
		internal delegate void _SuspendRendering(bool bSuspend);

		[Token(Token = "0x2000E8E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97AD0C", Offset = "0x97AD0C")]
		internal delegate EVRCompositorError _GetMirrorTextureD3D11(EVREye eEye, IntPtr pD3D11DeviceOrResource, ref IntPtr ppD3D11ShaderResourceView);

		[Token(Token = "0x2000E8F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97AD20", Offset = "0x97AD20")]
		internal delegate void _ReleaseMirrorTextureD3D11(IntPtr pD3D11ShaderResourceView);

		[Token(Token = "0x2000E90")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97AD34", Offset = "0x97AD34")]
		internal delegate EVRCompositorError _GetMirrorTextureGL(EVREye eEye, ref uint pglTextureId, IntPtr pglSharedTextureHandle);

		[Token(Token = "0x2000E91")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97AD48", Offset = "0x97AD48")]
		internal delegate bool _ReleaseSharedGLTexture(uint glTextureId, IntPtr glSharedTextureHandle);

		[Token(Token = "0x2000E92")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97AD5C", Offset = "0x97AD5C")]
		internal delegate void _LockGLSharedTextureForAccess(IntPtr glSharedTextureHandle);

		[Token(Token = "0x2000E93")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97AD70", Offset = "0x97AD70")]
		internal delegate void _UnlockGLSharedTextureForAccess(IntPtr glSharedTextureHandle);

		[Token(Token = "0x2000E94")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97AD84", Offset = "0x97AD84")]
		internal delegate uint _GetVulkanInstanceExtensionsRequired(StringBuilder pchValue, uint unBufferSize);

		[Token(Token = "0x2000E95")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97AD98", Offset = "0x97AD98")]
		internal delegate uint _GetVulkanDeviceExtensionsRequired(IntPtr pPhysicalDevice, StringBuilder pchValue, uint unBufferSize);

		[Token(Token = "0x2000E96")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97ADAC", Offset = "0x97ADAC")]
		internal delegate void _SetExplicitTimingMode(EVRCompositorTimingMode eTimingMode);

		[Token(Token = "0x2000E97")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97ADC0", Offset = "0x97ADC0")]
		internal delegate EVRCompositorError _SubmitExplicitTimingData();

		[Token(Token = "0x4001001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _SetTrackingSpace SetTrackingSpace;

		[Token(Token = "0x4001002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetTrackingSpace GetTrackingSpace;

		[Token(Token = "0x4001003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _WaitGetPoses WaitGetPoses;

		[Token(Token = "0x4001004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetLastPoses GetLastPoses;

		[Token(Token = "0x4001005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetLastPoseForTrackedDeviceIndex GetLastPoseForTrackedDeviceIndex;

		[Token(Token = "0x4001006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _Submit Submit;

		[Token(Token = "0x4001007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _ClearLastSubmittedFrame ClearLastSubmittedFrame;

		[Token(Token = "0x4001008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _PostPresentHandoff PostPresentHandoff;

		[Token(Token = "0x4001009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetFrameTiming GetFrameTiming;

		[Token(Token = "0x400100A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetFrameTimings GetFrameTimings;

		[Token(Token = "0x400100B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _GetFrameTimeRemaining GetFrameTimeRemaining;

		[Token(Token = "0x400100C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _GetCumulativeStats GetCumulativeStats;

		[Token(Token = "0x400100D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _FadeToColor FadeToColor;

		[Token(Token = "0x400100E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetCurrentFadeColor GetCurrentFadeColor;

		[Token(Token = "0x400100F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _FadeGrid FadeGrid;

		[Token(Token = "0x4001010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetCurrentGridAlpha GetCurrentGridAlpha;

		[Token(Token = "0x4001011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _SetSkyboxOverride SetSkyboxOverride;

		[Token(Token = "0x4001012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _ClearSkyboxOverride ClearSkyboxOverride;

		[Token(Token = "0x4001013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _CompositorBringToFront CompositorBringToFront;

		[Token(Token = "0x4001014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _CompositorGoToBack CompositorGoToBack;

		[Token(Token = "0x4001015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal _CompositorQuit CompositorQuit;

		[Token(Token = "0x4001016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal _IsFullscreen IsFullscreen;

		[Token(Token = "0x4001017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		internal _GetCurrentSceneFocusProcess GetCurrentSceneFocusProcess;

		[Token(Token = "0x4001018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal _GetLastFrameRenderer GetLastFrameRenderer;

		[Token(Token = "0x4001019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		internal _CanRenderScene CanRenderScene;

		[Token(Token = "0x400101A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		internal _ShowMirrorWindow ShowMirrorWindow;

		[Token(Token = "0x400101B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		internal _HideMirrorWindow HideMirrorWindow;

		[Token(Token = "0x400101C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		internal _IsMirrorWindowVisible IsMirrorWindowVisible;

		[Token(Token = "0x400101D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		internal _CompositorDumpImages CompositorDumpImages;

		[Token(Token = "0x400101E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		internal _ShouldAppRenderWithLowResources ShouldAppRenderWithLowResources;

		[Token(Token = "0x400101F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		internal _ForceInterleavedReprojectionOn ForceInterleavedReprojectionOn;

		[Token(Token = "0x4001020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		internal _ForceReconnectProcess ForceReconnectProcess;

		[Token(Token = "0x4001021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		internal _SuspendRendering SuspendRendering;

		[Token(Token = "0x4001022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		internal _GetMirrorTextureD3D11 GetMirrorTextureD3D11;

		[Token(Token = "0x4001023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		internal _ReleaseMirrorTextureD3D11 ReleaseMirrorTextureD3D11;

		[Token(Token = "0x4001024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		internal _GetMirrorTextureGL GetMirrorTextureGL;

		[Token(Token = "0x4001025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		internal _ReleaseSharedGLTexture ReleaseSharedGLTexture;

		[Token(Token = "0x4001026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		internal _LockGLSharedTextureForAccess LockGLSharedTextureForAccess;

		[Token(Token = "0x4001027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		internal _UnlockGLSharedTextureForAccess UnlockGLSharedTextureForAccess;

		[Token(Token = "0x4001028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		internal _GetVulkanInstanceExtensionsRequired GetVulkanInstanceExtensionsRequired;

		[Token(Token = "0x4001029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		internal _GetVulkanDeviceExtensionsRequired GetVulkanDeviceExtensionsRequired;

		[Token(Token = "0x400102A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		internal _SetExplicitTimingMode SetExplicitTimingMode;

		[Token(Token = "0x400102B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		internal _SubmitExplicitTimingData SubmitExplicitTimingData;
	}
	[Token(Token = "0x2000420")]
	public struct IVROverlay
	{
		[Token(Token = "0x2000E98")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97ADD4", Offset = "0x97ADD4")]
		internal delegate EVROverlayError _FindOverlay(string pchOverlayKey, ref ulong pOverlayHandle);

		[Token(Token = "0x2000E99")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97ADE8", Offset = "0x97ADE8")]
		internal delegate EVROverlayError _CreateOverlay(string pchOverlayKey, string pchOverlayName, ref ulong pOverlayHandle);

		[Token(Token = "0x2000E9A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97ADFC", Offset = "0x97ADFC")]
		internal delegate EVROverlayError _DestroyOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x2000E9B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97AE10", Offset = "0x97AE10")]
		internal delegate EVROverlayError _SetHighQualityOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x2000E9C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97AE24", Offset = "0x97AE24")]
		internal delegate ulong _GetHighQualityOverlay();

		[Token(Token = "0x2000E9D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97AE38", Offset = "0x97AE38")]
		internal delegate uint _GetOverlayKey(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref EVROverlayError pError);

		[Token(Token = "0x2000E9E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97AE4C", Offset = "0x97AE4C")]
		internal delegate uint _GetOverlayName(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref EVROverlayError pError);

		[Token(Token = "0x2000E9F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97AE60", Offset = "0x97AE60")]
		internal delegate EVROverlayError _SetOverlayName(ulong ulOverlayHandle, string pchName);

		[Token(Token = "0x2000EA0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97AE74", Offset = "0x97AE74")]
		internal delegate EVROverlayError _GetOverlayImageData(ulong ulOverlayHandle, IntPtr pvBuffer, uint unBufferSize, ref uint punWidth, ref uint punHeight);

		[Token(Token = "0x2000EA1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97AE88", Offset = "0x97AE88")]
		internal delegate IntPtr _GetOverlayErrorNameFromEnum(EVROverlayError error);

		[Token(Token = "0x2000EA2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97AE9C", Offset = "0x97AE9C")]
		internal delegate EVROverlayError _SetOverlayRenderingPid(ulong ulOverlayHandle, uint unPID);

		[Token(Token = "0x2000EA3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97AEB0", Offset = "0x97AEB0")]
		internal delegate uint _GetOverlayRenderingPid(ulong ulOverlayHandle);

		[Token(Token = "0x2000EA4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97AEC4", Offset = "0x97AEC4")]
		internal delegate EVROverlayError _SetOverlayFlag(ulong ulOverlayHandle, VROverlayFlags eOverlayFlag, bool bEnabled);

		[Token(Token = "0x2000EA5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97AED8", Offset = "0x97AED8")]
		internal delegate EVROverlayError _GetOverlayFlag(ulong ulOverlayHandle, VROverlayFlags eOverlayFlag, ref bool pbEnabled);

		[Token(Token = "0x2000EA6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97AEEC", Offset = "0x97AEEC")]
		internal delegate EVROverlayError _SetOverlayColor(ulong ulOverlayHandle, float fRed, float fGreen, float fBlue);

		[Token(Token = "0x2000EA7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97AF00", Offset = "0x97AF00")]
		internal delegate EVROverlayError _GetOverlayColor(ulong ulOverlayHandle, ref float pfRed, ref float pfGreen, ref float pfBlue);

		[Token(Token = "0x2000EA8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97AF14", Offset = "0x97AF14")]
		internal delegate EVROverlayError _SetOverlayAlpha(ulong ulOverlayHandle, float fAlpha);

		[Token(Token = "0x2000EA9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97AF28", Offset = "0x97AF28")]
		internal delegate EVROverlayError _GetOverlayAlpha(ulong ulOverlayHandle, ref float pfAlpha);

		[Token(Token = "0x2000EAA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97AF3C", Offset = "0x97AF3C")]
		internal delegate EVROverlayError _SetOverlayTexelAspect(ulong ulOverlayHandle, float fTexelAspect);

		[Token(Token = "0x2000EAB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97AF50", Offset = "0x97AF50")]
		internal delegate EVROverlayError _GetOverlayTexelAspect(ulong ulOverlayHandle, ref float pfTexelAspect);

		[Token(Token = "0x2000EAC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97AF64", Offset = "0x97AF64")]
		internal delegate EVROverlayError _SetOverlaySortOrder(ulong ulOverlayHandle, uint unSortOrder);

		[Token(Token = "0x2000EAD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97AF78", Offset = "0x97AF78")]
		internal delegate EVROverlayError _GetOverlaySortOrder(ulong ulOverlayHandle, ref uint punSortOrder);

		[Token(Token = "0x2000EAE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97AF8C", Offset = "0x97AF8C")]
		internal delegate EVROverlayError _SetOverlayWidthInMeters(ulong ulOverlayHandle, float fWidthInMeters);

		[Token(Token = "0x2000EAF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97AFA0", Offset = "0x97AFA0")]
		internal delegate EVROverlayError _GetOverlayWidthInMeters(ulong ulOverlayHandle, ref float pfWidthInMeters);

		[Token(Token = "0x2000EB0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97AFB4", Offset = "0x97AFB4")]
		internal delegate EVROverlayError _SetOverlayAutoCurveDistanceRangeInMeters(ulong ulOverlayHandle, float fMinDistanceInMeters, float fMaxDistanceInMeters);

		[Token(Token = "0x2000EB1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97AFC8", Offset = "0x97AFC8")]
		internal delegate EVROverlayError _GetOverlayAutoCurveDistanceRangeInMeters(ulong ulOverlayHandle, ref float pfMinDistanceInMeters, ref float pfMaxDistanceInMeters);

		[Token(Token = "0x2000EB2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97AFDC", Offset = "0x97AFDC")]
		internal delegate EVROverlayError _SetOverlayTextureColorSpace(ulong ulOverlayHandle, EColorSpace eTextureColorSpace);

		[Token(Token = "0x2000EB3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97AFF0", Offset = "0x97AFF0")]
		internal delegate EVROverlayError _GetOverlayTextureColorSpace(ulong ulOverlayHandle, ref EColorSpace peTextureColorSpace);

		[Token(Token = "0x2000EB4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B004", Offset = "0x97B004")]
		internal delegate EVROverlayError _SetOverlayTextureBounds(ulong ulOverlayHandle, ref VRTextureBounds_t pOverlayTextureBounds);

		[Token(Token = "0x2000EB5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B018", Offset = "0x97B018")]
		internal delegate EVROverlayError _GetOverlayTextureBounds(ulong ulOverlayHandle, ref VRTextureBounds_t pOverlayTextureBounds);

		[Token(Token = "0x2000EB6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B02C", Offset = "0x97B02C")]
		internal delegate uint _GetOverlayRenderModel(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref HmdColor_t pColor, ref EVROverlayError pError);

		[Token(Token = "0x2000EB7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B040", Offset = "0x97B040")]
		internal delegate EVROverlayError _SetOverlayRenderModel(ulong ulOverlayHandle, string pchRenderModel, ref HmdColor_t pColor);

		[Token(Token = "0x2000EB8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B054", Offset = "0x97B054")]
		internal delegate EVROverlayError _GetOverlayTransformType(ulong ulOverlayHandle, ref VROverlayTransformType peTransformType);

		[Token(Token = "0x2000EB9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B068", Offset = "0x97B068")]
		internal delegate EVROverlayError _SetOverlayTransformAbsolute(ulong ulOverlayHandle, ETrackingUniverseOrigin eTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToOverlayTransform);

		[Token(Token = "0x2000EBA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B07C", Offset = "0x97B07C")]
		internal delegate EVROverlayError _GetOverlayTransformAbsolute(ulong ulOverlayHandle, ref ETrackingUniverseOrigin peTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToOverlayTransform);

		[Token(Token = "0x2000EBB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B090", Offset = "0x97B090")]
		internal delegate EVROverlayError _SetOverlayTransformTrackedDeviceRelative(ulong ulOverlayHandle, uint unTrackedDevice, ref HmdMatrix34_t pmatTrackedDeviceToOverlayTransform);

		[Token(Token = "0x2000EBC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B0A4", Offset = "0x97B0A4")]
		internal delegate EVROverlayError _GetOverlayTransformTrackedDeviceRelative(ulong ulOverlayHandle, ref uint punTrackedDevice, ref HmdMatrix34_t pmatTrackedDeviceToOverlayTransform);

		[Token(Token = "0x2000EBD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B0B8", Offset = "0x97B0B8")]
		internal delegate EVROverlayError _SetOverlayTransformTrackedDeviceComponent(ulong ulOverlayHandle, uint unDeviceIndex, string pchComponentName);

		[Token(Token = "0x2000EBE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B0CC", Offset = "0x97B0CC")]
		internal delegate EVROverlayError _GetOverlayTransformTrackedDeviceComponent(ulong ulOverlayHandle, ref uint punDeviceIndex, StringBuilder pchComponentName, uint unComponentNameSize);

		[Token(Token = "0x2000EBF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B0E0", Offset = "0x97B0E0")]
		internal delegate EVROverlayError _GetOverlayTransformOverlayRelative(ulong ulOverlayHandle, ref ulong ulOverlayHandleParent, ref HmdMatrix34_t pmatParentOverlayToOverlayTransform);

		[Token(Token = "0x2000EC0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B0F4", Offset = "0x97B0F4")]
		internal delegate EVROverlayError _SetOverlayTransformOverlayRelative(ulong ulOverlayHandle, ulong ulOverlayHandleParent, ref HmdMatrix34_t pmatParentOverlayToOverlayTransform);

		[Token(Token = "0x2000EC1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B108", Offset = "0x97B108")]
		internal delegate EVROverlayError _ShowOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x2000EC2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B11C", Offset = "0x97B11C")]
		internal delegate EVROverlayError _HideOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x2000EC3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B130", Offset = "0x97B130")]
		internal delegate bool _IsOverlayVisible(ulong ulOverlayHandle);

		[Token(Token = "0x2000EC4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B144", Offset = "0x97B144")]
		internal delegate EVROverlayError _GetTransformForOverlayCoordinates(ulong ulOverlayHandle, ETrackingUniverseOrigin eTrackingOrigin, HmdVector2_t coordinatesInOverlay, ref HmdMatrix34_t pmatTransform);

		[Token(Token = "0x2000EC5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B158", Offset = "0x97B158")]
		internal delegate bool _PollNextOverlayEvent(ulong ulOverlayHandle, ref VREvent_t pEvent, uint uncbVREvent);

		[Token(Token = "0x2000EC6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B16C", Offset = "0x97B16C")]
		internal delegate EVROverlayError _GetOverlayInputMethod(ulong ulOverlayHandle, ref VROverlayInputMethod peInputMethod);

		[Token(Token = "0x2000EC7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B180", Offset = "0x97B180")]
		internal delegate EVROverlayError _SetOverlayInputMethod(ulong ulOverlayHandle, VROverlayInputMethod eInputMethod);

		[Token(Token = "0x2000EC8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B194", Offset = "0x97B194")]
		internal delegate EVROverlayError _GetOverlayMouseScale(ulong ulOverlayHandle, ref HmdVector2_t pvecMouseScale);

		[Token(Token = "0x2000EC9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B1A8", Offset = "0x97B1A8")]
		internal delegate EVROverlayError _SetOverlayMouseScale(ulong ulOverlayHandle, ref HmdVector2_t pvecMouseScale);

		[Token(Token = "0x2000ECA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B1BC", Offset = "0x97B1BC")]
		internal delegate bool _ComputeOverlayIntersection(ulong ulOverlayHandle, ref VROverlayIntersectionParams_t pParams, ref VROverlayIntersectionResults_t pResults);

		[Token(Token = "0x2000ECB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B1D0", Offset = "0x97B1D0")]
		internal delegate bool _IsHoverTargetOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x2000ECC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B1E4", Offset = "0x97B1E4")]
		internal delegate ulong _GetGamepadFocusOverlay();

		[Token(Token = "0x2000ECD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B1F8", Offset = "0x97B1F8")]
		internal delegate EVROverlayError _SetGamepadFocusOverlay(ulong ulNewFocusOverlay);

		[Token(Token = "0x2000ECE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B20C", Offset = "0x97B20C")]
		internal delegate EVROverlayError _SetOverlayNeighbor(EOverlayDirection eDirection, ulong ulFrom, ulong ulTo);

		[Token(Token = "0x2000ECF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B220", Offset = "0x97B220")]
		internal delegate EVROverlayError _MoveGamepadFocusToNeighbor(EOverlayDirection eDirection, ulong ulFrom);

		[Token(Token = "0x2000ED0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B234", Offset = "0x97B234")]
		internal delegate EVROverlayError _SetOverlayDualAnalogTransform(ulong ulOverlay, EDualAnalogWhich eWhich, IntPtr vCenter, float fRadius);

		[Token(Token = "0x2000ED1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B248", Offset = "0x97B248")]
		internal delegate EVROverlayError _GetOverlayDualAnalogTransform(ulong ulOverlay, EDualAnalogWhich eWhich, ref HmdVector2_t pvCenter, ref float pfRadius);

		[Token(Token = "0x2000ED2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B25C", Offset = "0x97B25C")]
		internal delegate EVROverlayError _SetOverlayTexture(ulong ulOverlayHandle, ref Texture_t pTexture);

		[Token(Token = "0x2000ED3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B270", Offset = "0x97B270")]
		internal delegate EVROverlayError _ClearOverlayTexture(ulong ulOverlayHandle);

		[Token(Token = "0x2000ED4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B284", Offset = "0x97B284")]
		internal delegate EVROverlayError _SetOverlayRaw(ulong ulOverlayHandle, IntPtr pvBuffer, uint unWidth, uint unHeight, uint unDepth);

		[Token(Token = "0x2000ED5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B298", Offset = "0x97B298")]
		internal delegate EVROverlayError _SetOverlayFromFile(ulong ulOverlayHandle, string pchFilePath);

		[Token(Token = "0x2000ED6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B2AC", Offset = "0x97B2AC")]
		internal delegate EVROverlayError _GetOverlayTexture(ulong ulOverlayHandle, ref IntPtr pNativeTextureHandle, IntPtr pNativeTextureRef, ref uint pWidth, ref uint pHeight, ref uint pNativeFormat, ref ETextureType pAPIType, ref EColorSpace pColorSpace, ref VRTextureBounds_t pTextureBounds);

		[Token(Token = "0x2000ED7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B2C0", Offset = "0x97B2C0")]
		internal delegate EVROverlayError _ReleaseNativeOverlayHandle(ulong ulOverlayHandle, IntPtr pNativeTextureHandle);

		[Token(Token = "0x2000ED8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B2D4", Offset = "0x97B2D4")]
		internal delegate EVROverlayError _GetOverlayTextureSize(ulong ulOverlayHandle, ref uint pWidth, ref uint pHeight);

		[Token(Token = "0x2000ED9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B2E8", Offset = "0x97B2E8")]
		internal delegate EVROverlayError _CreateDashboardOverlay(string pchOverlayKey, string pchOverlayFriendlyName, ref ulong pMainHandle, ref ulong pThumbnailHandle);

		[Token(Token = "0x2000EDA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B2FC", Offset = "0x97B2FC")]
		internal delegate bool _IsDashboardVisible();

		[Token(Token = "0x2000EDB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B310", Offset = "0x97B310")]
		internal delegate bool _IsActiveDashboardOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x2000EDC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B324", Offset = "0x97B324")]
		internal delegate EVROverlayError _SetDashboardOverlaySceneProcess(ulong ulOverlayHandle, uint unProcessId);

		[Token(Token = "0x2000EDD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B338", Offset = "0x97B338")]
		internal delegate EVROverlayError _GetDashboardOverlaySceneProcess(ulong ulOverlayHandle, ref uint punProcessId);

		[Token(Token = "0x2000EDE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B34C", Offset = "0x97B34C")]
		internal delegate void _ShowDashboard(string pchOverlayToShow);

		[Token(Token = "0x2000EDF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B360", Offset = "0x97B360")]
		internal delegate uint _GetPrimaryDashboardDevice();

		[Token(Token = "0x2000EE0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B374", Offset = "0x97B374")]
		internal delegate EVROverlayError _ShowKeyboard(int eInputMode, int eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText, bool bUseMinimalMode, ulong uUserValue);

		[Token(Token = "0x2000EE1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B388", Offset = "0x97B388")]
		internal delegate EVROverlayError _ShowKeyboardForOverlay(ulong ulOverlayHandle, int eInputMode, int eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText, bool bUseMinimalMode, ulong uUserValue);

		[Token(Token = "0x2000EE2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B39C", Offset = "0x97B39C")]
		internal delegate uint _GetKeyboardText(StringBuilder pchText, uint cchText);

		[Token(Token = "0x2000EE3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B3B0", Offset = "0x97B3B0")]
		internal delegate void _HideKeyboard();

		[Token(Token = "0x2000EE4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B3C4", Offset = "0x97B3C4")]
		internal delegate void _SetKeyboardTransformAbsolute(ETrackingUniverseOrigin eTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToKeyboardTransform);

		[Token(Token = "0x2000EE5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B3D8", Offset = "0x97B3D8")]
		internal delegate void _SetKeyboardPositionForOverlay(ulong ulOverlayHandle, HmdRect2_t avoidRect);

		[Token(Token = "0x2000EE6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B3EC", Offset = "0x97B3EC")]
		internal delegate EVROverlayError _SetOverlayIntersectionMask(ulong ulOverlayHandle, ref VROverlayIntersectionMaskPrimitive_t pMaskPrimitives, uint unNumMaskPrimitives, uint unPrimitiveSize);

		[Token(Token = "0x2000EE7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B400", Offset = "0x97B400")]
		internal delegate EVROverlayError _GetOverlayFlags(ulong ulOverlayHandle, ref uint pFlags);

		[Token(Token = "0x2000EE8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B414", Offset = "0x97B414")]
		internal delegate VRMessageOverlayResponse _ShowMessageOverlay(string pchText, string pchCaption, string pchButton0Text, string pchButton1Text, string pchButton2Text, string pchButton3Text);

		[Token(Token = "0x2000EE9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B428", Offset = "0x97B428")]
		internal delegate void _CloseMessageOverlay();

		[Token(Token = "0x400102C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _FindOverlay FindOverlay;

		[Token(Token = "0x400102D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _CreateOverlay CreateOverlay;

		[Token(Token = "0x400102E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _DestroyOverlay DestroyOverlay;

		[Token(Token = "0x400102F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _SetHighQualityOverlay SetHighQualityOverlay;

		[Token(Token = "0x4001030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetHighQualityOverlay GetHighQualityOverlay;

		[Token(Token = "0x4001031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetOverlayKey GetOverlayKey;

		[Token(Token = "0x4001032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _GetOverlayName GetOverlayName;

		[Token(Token = "0x4001033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _SetOverlayName SetOverlayName;

		[Token(Token = "0x4001034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetOverlayImageData GetOverlayImageData;

		[Token(Token = "0x4001035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetOverlayErrorNameFromEnum GetOverlayErrorNameFromEnum;

		[Token(Token = "0x4001036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _SetOverlayRenderingPid SetOverlayRenderingPid;

		[Token(Token = "0x4001037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _GetOverlayRenderingPid GetOverlayRenderingPid;

		[Token(Token = "0x4001038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _SetOverlayFlag SetOverlayFlag;

		[Token(Token = "0x4001039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetOverlayFlag GetOverlayFlag;

		[Token(Token = "0x400103A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _SetOverlayColor SetOverlayColor;

		[Token(Token = "0x400103B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetOverlayColor GetOverlayColor;

		[Token(Token = "0x400103C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _SetOverlayAlpha SetOverlayAlpha;

		[Token(Token = "0x400103D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _GetOverlayAlpha GetOverlayAlpha;

		[Token(Token = "0x400103E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _SetOverlayTexelAspect SetOverlayTexelAspect;

		[Token(Token = "0x400103F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _GetOverlayTexelAspect GetOverlayTexelAspect;

		[Token(Token = "0x4001040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal _SetOverlaySortOrder SetOverlaySortOrder;

		[Token(Token = "0x4001041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal _GetOverlaySortOrder GetOverlaySortOrder;

		[Token(Token = "0x4001042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		internal _SetOverlayWidthInMeters SetOverlayWidthInMeters;

		[Token(Token = "0x4001043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal _GetOverlayWidthInMeters GetOverlayWidthInMeters;

		[Token(Token = "0x4001044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		internal _SetOverlayAutoCurveDistanceRangeInMeters SetOverlayAutoCurveDistanceRangeInMeters;

		[Token(Token = "0x4001045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		internal _GetOverlayAutoCurveDistanceRangeInMeters GetOverlayAutoCurveDistanceRangeInMeters;

		[Token(Token = "0x4001046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		internal _SetOverlayTextureColorSpace SetOverlayTextureColorSpace;

		[Token(Token = "0x4001047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		internal _GetOverlayTextureColorSpace GetOverlayTextureColorSpace;

		[Token(Token = "0x4001048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		internal _SetOverlayTextureBounds SetOverlayTextureBounds;

		[Token(Token = "0x4001049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		internal _GetOverlayTextureBounds GetOverlayTextureBounds;

		[Token(Token = "0x400104A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		internal _GetOverlayRenderModel GetOverlayRenderModel;

		[Token(Token = "0x400104B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		internal _SetOverlayRenderModel SetOverlayRenderModel;

		[Token(Token = "0x400104C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		internal _GetOverlayTransformType GetOverlayTransformType;

		[Token(Token = "0x400104D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		internal _SetOverlayTransformAbsolute SetOverlayTransformAbsolute;

		[Token(Token = "0x400104E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		internal _GetOverlayTransformAbsolute GetOverlayTransformAbsolute;

		[Token(Token = "0x400104F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		internal _SetOverlayTransformTrackedDeviceRelative SetOverlayTransformTrackedDeviceRelative;

		[Token(Token = "0x4001050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		internal _GetOverlayTransformTrackedDeviceRelative GetOverlayTransformTrackedDeviceRelative;

		[Token(Token = "0x4001051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		internal _SetOverlayTransformTrackedDeviceComponent SetOverlayTransformTrackedDeviceComponent;

		[Token(Token = "0x4001052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		internal _GetOverlayTransformTrackedDeviceComponent GetOverlayTransformTrackedDeviceComponent;

		[Token(Token = "0x4001053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		internal _GetOverlayTransformOverlayRelative GetOverlayTransformOverlayRelative;

		[Token(Token = "0x4001054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		internal _SetOverlayTransformOverlayRelative SetOverlayTransformOverlayRelative;

		[Token(Token = "0x4001055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		internal _ShowOverlay ShowOverlay;

		[Token(Token = "0x4001056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		internal _HideOverlay HideOverlay;

		[Token(Token = "0x4001057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		internal _IsOverlayVisible IsOverlayVisible;

		[Token(Token = "0x4001058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		internal _GetTransformForOverlayCoordinates GetTransformForOverlayCoordinates;

		[Token(Token = "0x4001059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		internal _PollNextOverlayEvent PollNextOverlayEvent;

		[Token(Token = "0x400105A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		internal _GetOverlayInputMethod GetOverlayInputMethod;

		[Token(Token = "0x400105B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		internal _SetOverlayInputMethod SetOverlayInputMethod;

		[Token(Token = "0x400105C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		internal _GetOverlayMouseScale GetOverlayMouseScale;

		[Token(Token = "0x400105D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		internal _SetOverlayMouseScale SetOverlayMouseScale;

		[Token(Token = "0x400105E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		internal _ComputeOverlayIntersection ComputeOverlayIntersection;

		[Token(Token = "0x400105F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		internal _IsHoverTargetOverlay IsHoverTargetOverlay;

		[Token(Token = "0x4001060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		internal _GetGamepadFocusOverlay GetGamepadFocusOverlay;

		[Token(Token = "0x4001061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		internal _SetGamepadFocusOverlay SetGamepadFocusOverlay;

		[Token(Token = "0x4001062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		internal _SetOverlayNeighbor SetOverlayNeighbor;

		[Token(Token = "0x4001063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		internal _MoveGamepadFocusToNeighbor MoveGamepadFocusToNeighbor;

		[Token(Token = "0x4001064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		internal _SetOverlayDualAnalogTransform SetOverlayDualAnalogTransform;

		[Token(Token = "0x4001065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		internal _GetOverlayDualAnalogTransform GetOverlayDualAnalogTransform;

		[Token(Token = "0x4001066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		internal _SetOverlayTexture SetOverlayTexture;

		[Token(Token = "0x4001067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		internal _ClearOverlayTexture ClearOverlayTexture;

		[Token(Token = "0x4001068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		internal _SetOverlayRaw SetOverlayRaw;

		[Token(Token = "0x4001069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		internal _SetOverlayFromFile SetOverlayFromFile;

		[Token(Token = "0x400106A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		internal _GetOverlayTexture GetOverlayTexture;

		[Token(Token = "0x400106B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		internal _ReleaseNativeOverlayHandle ReleaseNativeOverlayHandle;

		[Token(Token = "0x400106C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		internal _GetOverlayTextureSize GetOverlayTextureSize;

		[Token(Token = "0x400106D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		internal _CreateDashboardOverlay CreateDashboardOverlay;

		[Token(Token = "0x400106E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		internal _IsDashboardVisible IsDashboardVisible;

		[Token(Token = "0x400106F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		internal _IsActiveDashboardOverlay IsActiveDashboardOverlay;

		[Token(Token = "0x4001070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		internal _SetDashboardOverlaySceneProcess SetDashboardOverlaySceneProcess;

		[Token(Token = "0x4001071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		internal _GetDashboardOverlaySceneProcess GetDashboardOverlaySceneProcess;

		[Token(Token = "0x4001072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		internal _ShowDashboard ShowDashboard;

		[Token(Token = "0x4001073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		internal _GetPrimaryDashboardDevice GetPrimaryDashboardDevice;

		[Token(Token = "0x4001074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		internal _ShowKeyboard ShowKeyboard;

		[Token(Token = "0x4001075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		internal _ShowKeyboardForOverlay ShowKeyboardForOverlay;

		[Token(Token = "0x4001076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		internal _GetKeyboardText GetKeyboardText;

		[Token(Token = "0x4001077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		internal _HideKeyboard HideKeyboard;

		[Token(Token = "0x4001078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		internal _SetKeyboardTransformAbsolute SetKeyboardTransformAbsolute;

		[Token(Token = "0x4001079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		internal _SetKeyboardPositionForOverlay SetKeyboardPositionForOverlay;

		[Token(Token = "0x400107A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		internal _SetOverlayIntersectionMask SetOverlayIntersectionMask;

		[Token(Token = "0x400107B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		internal _GetOverlayFlags GetOverlayFlags;

		[Token(Token = "0x400107C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		internal _ShowMessageOverlay ShowMessageOverlay;

		[Token(Token = "0x400107D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		internal _CloseMessageOverlay CloseMessageOverlay;
	}
	[Token(Token = "0x2000421")]
	public struct IVRRenderModels
	{
		[Token(Token = "0x2000EEA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B43C", Offset = "0x97B43C")]
		internal delegate EVRRenderModelError _LoadRenderModel_Async(string pchRenderModelName, ref IntPtr ppRenderModel);

		[Token(Token = "0x2000EEB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B450", Offset = "0x97B450")]
		internal delegate void _FreeRenderModel(IntPtr pRenderModel);

		[Token(Token = "0x2000EEC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B464", Offset = "0x97B464")]
		internal delegate EVRRenderModelError _LoadTexture_Async(int textureId, ref IntPtr ppTexture);

		[Token(Token = "0x2000EED")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B478", Offset = "0x97B478")]
		internal delegate void _FreeTexture(IntPtr pTexture);

		[Token(Token = "0x2000EEE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B48C", Offset = "0x97B48C")]
		internal delegate EVRRenderModelError _LoadTextureD3D11_Async(int textureId, IntPtr pD3D11Device, ref IntPtr ppD3D11Texture2D);

		[Token(Token = "0x2000EEF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B4A0", Offset = "0x97B4A0")]
		internal delegate EVRRenderModelError _LoadIntoTextureD3D11_Async(int textureId, IntPtr pDstTexture);

		[Token(Token = "0x2000EF0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B4B4", Offset = "0x97B4B4")]
		internal delegate void _FreeTextureD3D11(IntPtr pD3D11Texture2D);

		[Token(Token = "0x2000EF1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B4C8", Offset = "0x97B4C8")]
		internal delegate uint _GetRenderModelName(uint unRenderModelIndex, StringBuilder pchRenderModelName, uint unRenderModelNameLen);

		[Token(Token = "0x2000EF2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B4DC", Offset = "0x97B4DC")]
		internal delegate uint _GetRenderModelCount();

		[Token(Token = "0x2000EF3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B4F0", Offset = "0x97B4F0")]
		internal delegate uint _GetComponentCount(string pchRenderModelName);

		[Token(Token = "0x2000EF4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B504", Offset = "0x97B504")]
		internal delegate uint _GetComponentName(string pchRenderModelName, uint unComponentIndex, StringBuilder pchComponentName, uint unComponentNameLen);

		[Token(Token = "0x2000EF5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B518", Offset = "0x97B518")]
		internal delegate ulong _GetComponentButtonMask(string pchRenderModelName, string pchComponentName);

		[Token(Token = "0x2000EF6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B52C", Offset = "0x97B52C")]
		internal delegate uint _GetComponentRenderModelName(string pchRenderModelName, string pchComponentName, StringBuilder pchComponentRenderModelName, uint unComponentRenderModelNameLen);

		[Token(Token = "0x2000EF7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B540", Offset = "0x97B540")]
		internal delegate bool _GetComponentState(string pchRenderModelName, string pchComponentName, ref VRControllerState_t pControllerState, ref RenderModel_ControllerMode_State_t pState, ref RenderModel_ComponentState_t pComponentState);

		[Token(Token = "0x2000EF8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B554", Offset = "0x97B554")]
		internal delegate bool _RenderModelHasComponent(string pchRenderModelName, string pchComponentName);

		[Token(Token = "0x2000EF9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B568", Offset = "0x97B568")]
		internal delegate uint _GetRenderModelThumbnailURL(string pchRenderModelName, StringBuilder pchThumbnailURL, uint unThumbnailURLLen, ref EVRRenderModelError peError);

		[Token(Token = "0x2000EFA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B57C", Offset = "0x97B57C")]
		internal delegate uint _GetRenderModelOriginalPath(string pchRenderModelName, StringBuilder pchOriginalPath, uint unOriginalPathLen, ref EVRRenderModelError peError);

		[Token(Token = "0x2000EFB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B590", Offset = "0x97B590")]
		internal delegate IntPtr _GetRenderModelErrorNameFromEnum(EVRRenderModelError error);

		[Token(Token = "0x400107E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _LoadRenderModel_Async LoadRenderModel_Async;

		[Token(Token = "0x400107F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _FreeRenderModel FreeRenderModel;

		[Token(Token = "0x4001080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _LoadTexture_Async LoadTexture_Async;

		[Token(Token = "0x4001081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _FreeTexture FreeTexture;

		[Token(Token = "0x4001082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _LoadTextureD3D11_Async LoadTextureD3D11_Async;

		[Token(Token = "0x4001083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _LoadIntoTextureD3D11_Async LoadIntoTextureD3D11_Async;

		[Token(Token = "0x4001084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _FreeTextureD3D11 FreeTextureD3D11;

		[Token(Token = "0x4001085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetRenderModelName GetRenderModelName;

		[Token(Token = "0x4001086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetRenderModelCount GetRenderModelCount;

		[Token(Token = "0x4001087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetComponentCount GetComponentCount;

		[Token(Token = "0x4001088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _GetComponentName GetComponentName;

		[Token(Token = "0x4001089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _GetComponentButtonMask GetComponentButtonMask;

		[Token(Token = "0x400108A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _GetComponentRenderModelName GetComponentRenderModelName;

		[Token(Token = "0x400108B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetComponentState GetComponentState;

		[Token(Token = "0x400108C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _RenderModelHasComponent RenderModelHasComponent;

		[Token(Token = "0x400108D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetRenderModelThumbnailURL GetRenderModelThumbnailURL;

		[Token(Token = "0x400108E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _GetRenderModelOriginalPath GetRenderModelOriginalPath;

		[Token(Token = "0x400108F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _GetRenderModelErrorNameFromEnum GetRenderModelErrorNameFromEnum;
	}
	[Token(Token = "0x2000422")]
	public struct IVRNotifications
	{
		[Token(Token = "0x2000EFC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B5A4", Offset = "0x97B5A4")]
		internal delegate EVRNotificationError _CreateNotification(ulong ulOverlayHandle, ulong ulUserValue, EVRNotificationType type, string pchText, EVRNotificationStyle style, ref NotificationBitmap_t pImage, ref uint pNotificationId);

		[Token(Token = "0x2000EFD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B5B8", Offset = "0x97B5B8")]
		internal delegate EVRNotificationError _RemoveNotification(uint notificationId);

		[Token(Token = "0x4001090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _CreateNotification CreateNotification;

		[Token(Token = "0x4001091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _RemoveNotification RemoveNotification;
	}
	[Token(Token = "0x2000423")]
	public struct IVRSettings
	{
		[Token(Token = "0x2000EFE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B5CC", Offset = "0x97B5CC")]
		internal delegate IntPtr _GetSettingsErrorNameFromEnum(EVRSettingsError eError);

		[Token(Token = "0x2000EFF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B5E0", Offset = "0x97B5E0")]
		internal delegate bool _Sync(bool bForce, ref EVRSettingsError peError);

		[Token(Token = "0x2000F00")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B5F4", Offset = "0x97B5F4")]
		internal delegate void _SetBool(string pchSection, string pchSettingsKey, bool bValue, ref EVRSettingsError peError);

		[Token(Token = "0x2000F01")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B608", Offset = "0x97B608")]
		internal delegate void _SetInt32(string pchSection, string pchSettingsKey, int nValue, ref EVRSettingsError peError);

		[Token(Token = "0x2000F02")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B61C", Offset = "0x97B61C")]
		internal delegate void _SetFloat(string pchSection, string pchSettingsKey, float flValue, ref EVRSettingsError peError);

		[Token(Token = "0x2000F03")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B630", Offset = "0x97B630")]
		internal delegate void _SetString(string pchSection, string pchSettingsKey, string pchValue, ref EVRSettingsError peError);

		[Token(Token = "0x2000F04")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B644", Offset = "0x97B644")]
		internal delegate bool _GetBool(string pchSection, string pchSettingsKey, ref EVRSettingsError peError);

		[Token(Token = "0x2000F05")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B658", Offset = "0x97B658")]
		internal delegate int _GetInt32(string pchSection, string pchSettingsKey, ref EVRSettingsError peError);

		[Token(Token = "0x2000F06")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B66C", Offset = "0x97B66C")]
		internal delegate float _GetFloat(string pchSection, string pchSettingsKey, ref EVRSettingsError peError);

		[Token(Token = "0x2000F07")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B680", Offset = "0x97B680")]
		internal delegate void _GetString(string pchSection, string pchSettingsKey, StringBuilder pchValue, uint unValueLen, ref EVRSettingsError peError);

		[Token(Token = "0x2000F08")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B694", Offset = "0x97B694")]
		internal delegate void _RemoveSection(string pchSection, ref EVRSettingsError peError);

		[Token(Token = "0x2000F09")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B6A8", Offset = "0x97B6A8")]
		internal delegate void _RemoveKeyInSection(string pchSection, string pchSettingsKey, ref EVRSettingsError peError);

		[Token(Token = "0x4001092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetSettingsErrorNameFromEnum GetSettingsErrorNameFromEnum;

		[Token(Token = "0x4001093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _Sync Sync;

		[Token(Token = "0x4001094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _SetBool SetBool;

		[Token(Token = "0x4001095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _SetInt32 SetInt32;

		[Token(Token = "0x4001096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _SetFloat SetFloat;

		[Token(Token = "0x4001097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _SetString SetString;

		[Token(Token = "0x4001098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _GetBool GetBool;

		[Token(Token = "0x4001099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetInt32 GetInt32;

		[Token(Token = "0x400109A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetFloat GetFloat;

		[Token(Token = "0x400109B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetString GetString;

		[Token(Token = "0x400109C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _RemoveSection RemoveSection;

		[Token(Token = "0x400109D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _RemoveKeyInSection RemoveKeyInSection;
	}
	[Token(Token = "0x2000424")]
	public struct IVRScreenshots
	{
		[Token(Token = "0x2000F0A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B6BC", Offset = "0x97B6BC")]
		internal delegate EVRScreenshotError _RequestScreenshot(ref uint pOutScreenshotHandle, EVRScreenshotType type, string pchPreviewFilename, string pchVRFilename);

		[Token(Token = "0x2000F0B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B6D0", Offset = "0x97B6D0")]
		internal delegate EVRScreenshotError _HookScreenshot([In][Out] EVRScreenshotType[] pSupportedTypes, int numTypes);

		[Token(Token = "0x2000F0C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B6E4", Offset = "0x97B6E4")]
		internal delegate EVRScreenshotType _GetScreenshotPropertyType(uint screenshotHandle, ref EVRScreenshotError pError);

		[Token(Token = "0x2000F0D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B6F8", Offset = "0x97B6F8")]
		internal delegate uint _GetScreenshotPropertyFilename(uint screenshotHandle, EVRScreenshotPropertyFilenames filenameType, StringBuilder pchFilename, uint cchFilename, ref EVRScreenshotError pError);

		[Token(Token = "0x2000F0E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B70C", Offset = "0x97B70C")]
		internal delegate EVRScreenshotError _UpdateScreenshotProgress(uint screenshotHandle, float flProgress);

		[Token(Token = "0x2000F0F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B720", Offset = "0x97B720")]
		internal delegate EVRScreenshotError _TakeStereoScreenshot(ref uint pOutScreenshotHandle, string pchPreviewFilename, string pchVRFilename);

		[Token(Token = "0x2000F10")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B734", Offset = "0x97B734")]
		internal delegate EVRScreenshotError _SubmitScreenshot(uint screenshotHandle, EVRScreenshotType type, string pchSourcePreviewFilename, string pchSourceVRFilename);

		[Token(Token = "0x400109E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _RequestScreenshot RequestScreenshot;

		[Token(Token = "0x400109F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _HookScreenshot HookScreenshot;

		[Token(Token = "0x40010A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetScreenshotPropertyType GetScreenshotPropertyType;

		[Token(Token = "0x40010A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetScreenshotPropertyFilename GetScreenshotPropertyFilename;

		[Token(Token = "0x40010A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _UpdateScreenshotProgress UpdateScreenshotProgress;

		[Token(Token = "0x40010A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _TakeStereoScreenshot TakeStereoScreenshot;

		[Token(Token = "0x40010A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _SubmitScreenshot SubmitScreenshot;
	}
	[Token(Token = "0x2000425")]
	public struct IVRResources
	{
		[Token(Token = "0x2000F11")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B748", Offset = "0x97B748")]
		internal delegate uint _LoadSharedResource(string pchResourceName, string pchBuffer, uint unBufferLen);

		[Token(Token = "0x2000F12")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B75C", Offset = "0x97B75C")]
		internal delegate uint _GetResourceFullPath(string pchResourceName, string pchResourceTypeDirectory, StringBuilder pchPathBuffer, uint unBufferLen);

		[Token(Token = "0x40010A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _LoadSharedResource LoadSharedResource;

		[Token(Token = "0x40010A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetResourceFullPath GetResourceFullPath;
	}
	[Token(Token = "0x2000426")]
	public struct IVRDriverManager
	{
		[Token(Token = "0x2000F13")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B770", Offset = "0x97B770")]
		internal delegate uint _GetDriverCount();

		[Token(Token = "0x2000F14")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B784", Offset = "0x97B784")]
		internal delegate uint _GetDriverName(uint nDriver, StringBuilder pchValue, uint unBufferSize);

		[Token(Token = "0x2000F15")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B798", Offset = "0x97B798")]
		internal delegate ulong _GetDriverHandle(string pchDriverName);

		[Token(Token = "0x40010A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetDriverCount GetDriverCount;

		[Token(Token = "0x40010A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetDriverName GetDriverName;

		[Token(Token = "0x40010A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetDriverHandle GetDriverHandle;
	}
	[Token(Token = "0x2000427")]
	public class CVRSystem
	{
		[Token(Token = "0x2000F16")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B7AC", Offset = "0x97B7AC")]
		internal delegate bool _PollNextEventPacked(ref VREvent_t_Packed pEvent, uint uncbVREvent);

		[StructLayout(LayoutKind.Explicit)]
		[Token(Token = "0x2000F17")]
		private struct PollNextEventUnion
		{
			[Token(Token = "0x4002262")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVRSystem._PollNextEvent pPollNextEvent;

			[Token(Token = "0x4002263")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _PollNextEventPacked pPollNextEventPacked;
		}

		[Token(Token = "0x2000F18")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B7C0", Offset = "0x97B7C0")]
		internal delegate bool _GetControllerStatePacked(uint unControllerDeviceIndex, ref VRControllerState_t_Packed pControllerState, uint unControllerStateSize);

		[StructLayout(LayoutKind.Explicit)]
		[Token(Token = "0x2000F19")]
		private struct GetControllerStateUnion
		{
			[Token(Token = "0x4002264")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVRSystem._GetControllerState pGetControllerState;

			[Token(Token = "0x4002265")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _GetControllerStatePacked pGetControllerStatePacked;
		}

		[Token(Token = "0x2000F1A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B7D4", Offset = "0x97B7D4")]
		internal delegate bool _GetControllerStateWithPosePacked(ETrackingUniverseOrigin eOrigin, uint unControllerDeviceIndex, ref VRControllerState_t_Packed pControllerState, uint unControllerStateSize, ref TrackedDevicePose_t pTrackedDevicePose);

		[StructLayout(LayoutKind.Explicit)]
		[Token(Token = "0x2000F1B")]
		private struct GetControllerStateWithPoseUnion
		{
			[Token(Token = "0x4002266")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVRSystem._GetControllerStateWithPose pGetControllerStateWithPose;

			[Token(Token = "0x4002267")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _GetControllerStateWithPosePacked pGetControllerStateWithPosePacked;
		}

		[Token(Token = "0x40010AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRSystem FnTable;

		[Token(Token = "0x6001979")]
		[Address(RVA = "0xC8E874", Offset = "0xC8E874", VA = "0xC8E874")]
		internal CVRSystem(IntPtr pInterface)
		{
		}

		[Token(Token = "0x600197A")]
		[Address(RVA = "0xC8E95C", Offset = "0xC8E95C", VA = "0xC8E95C")]
		public void GetRecommendedRenderTargetSize(ref uint pnWidth, ref uint pnHeight)
		{
		}

		[Token(Token = "0x600197B")]
		[Address(RVA = "0xC8E9AC", Offset = "0xC8E9AC", VA = "0xC8E9AC")]
		public HmdMatrix44_t GetProjectionMatrix(EVREye eEye, float fNearZ, float fFarZ)
		{
			return default(HmdMatrix44_t);
		}

		[Token(Token = "0x600197C")]
		[Address(RVA = "0xC8EA0C", Offset = "0xC8EA0C", VA = "0xC8EA0C")]
		public void GetProjectionRaw(EVREye eEye, ref float pfLeft, ref float pfRight, ref float pfTop, ref float pfBottom)
		{
		}

		[Token(Token = "0x600197D")]
		[Address(RVA = "0xC8EA84", Offset = "0xC8EA84", VA = "0xC8EA84")]
		public bool ComputeDistortion(EVREye eEye, float fU, float fV, ref DistortionCoordinates_t pDistortionCoordinates)
		{
			return default(bool);
		}

		[Token(Token = "0x600197E")]
		[Address(RVA = "0xC8EAE4", Offset = "0xC8EAE4", VA = "0xC8EAE4")]
		public HmdMatrix34_t GetEyeToHeadTransform(EVREye eEye)
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x600197F")]
		[Address(RVA = "0xC8EB2C", Offset = "0xC8EB2C", VA = "0xC8EB2C")]
		public bool GetTimeSinceLastVsync(ref float pfSecondsSinceLastVsync, ref ulong pulFrameCounter)
		{
			return default(bool);
		}

		[Token(Token = "0x6001980")]
		[Address(RVA = "0xC8EB7C", Offset = "0xC8EB7C", VA = "0xC8EB7C")]
		public int GetD3D9AdapterIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6001981")]
		[Address(RVA = "0xC8EBAC", Offset = "0xC8EBAC", VA = "0xC8EBAC")]
		public void GetDXGIOutputInfo(ref int pnAdapterIndex)
		{
		}

		[Token(Token = "0x6001982")]
		[Address(RVA = "0xC8EBE8", Offset = "0xC8EBE8", VA = "0xC8EBE8")]
		public void GetOutputDevice(ref ulong pnDevice, ETextureType textureType, IntPtr pInstance)
		{
		}

		[Token(Token = "0x6001983")]
		[Address(RVA = "0xC8EC3C", Offset = "0xC8EC3C", VA = "0xC8EC3C")]
		public bool IsDisplayOnDesktop()
		{
			return default(bool);
		}

		[Token(Token = "0x6001984")]
		[Address(RVA = "0xC8EC6C", Offset = "0xC8EC6C", VA = "0xC8EC6C")]
		public bool SetDisplayVisibility(bool bIsVisibleOnDesktop)
		{
			return default(bool);
		}

		[Token(Token = "0x6001985")]
		[Address(RVA = "0xC8ECA4", Offset = "0xC8ECA4", VA = "0xC8ECA4")]
		public void GetDeviceToAbsoluteTrackingPose(ETrackingUniverseOrigin eOrigin, float fPredictedSecondsToPhotonsFromNow, TrackedDevicePose_t[] pTrackedDevicePoseArray)
		{
		}

		[Token(Token = "0x6001986")]
		[Address(RVA = "0xC8ED14", Offset = "0xC8ED14", VA = "0xC8ED14")]
		public void ResetSeatedZeroPose()
		{
		}

		[Token(Token = "0x6001987")]
		[Address(RVA = "0xC8ED44", Offset = "0xC8ED44", VA = "0xC8ED44")]
		public HmdMatrix34_t GetSeatedZeroPoseToStandingAbsoluteTrackingPose()
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x6001988")]
		[Address(RVA = "0xC8ED7C", Offset = "0xC8ED7C", VA = "0xC8ED7C")]
		public HmdMatrix34_t GetRawZeroPoseToStandingAbsoluteTrackingPose()
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x6001989")]
		[Address(RVA = "0xC8EDB4", Offset = "0xC8EDB4", VA = "0xC8EDB4")]
		public uint GetSortedTrackedDeviceIndicesOfClass(ETrackedDeviceClass eTrackedDeviceClass, uint[] punTrackedDeviceIndexArray, uint unRelativeToTrackedDeviceIndex)
		{
			return default(uint);
		}

		[Token(Token = "0x600198A")]
		[Address(RVA = "0xC8EE1C", Offset = "0xC8EE1C", VA = "0xC8EE1C")]
		public EDeviceActivityLevel GetTrackedDeviceActivityLevel(uint unDeviceId)
		{
			return default(EDeviceActivityLevel);
		}

		[Token(Token = "0x600198B")]
		[Address(RVA = "0xC8EE54", Offset = "0xC8EE54", VA = "0xC8EE54")]
		public void ApplyTransform(ref TrackedDevicePose_t pOutputPose, ref TrackedDevicePose_t pTrackedDevicePose, ref HmdMatrix34_t pTransform)
		{
		}

		[Token(Token = "0x600198C")]
		[Address(RVA = "0xC8EEA4", Offset = "0xC8EEA4", VA = "0xC8EEA4")]
		public uint GetTrackedDeviceIndexForControllerRole(ETrackedControllerRole unDeviceType)
		{
			return default(uint);
		}

		[Token(Token = "0x600198D")]
		[Address(RVA = "0xC8EEDC", Offset = "0xC8EEDC", VA = "0xC8EEDC")]
		public ETrackedControllerRole GetControllerRoleForTrackedDeviceIndex(uint unDeviceIndex)
		{
			return default(ETrackedControllerRole);
		}

		[Token(Token = "0x600198E")]
		[Address(RVA = "0xC8EF14", Offset = "0xC8EF14", VA = "0xC8EF14")]
		public ETrackedDeviceClass GetTrackedDeviceClass(uint unDeviceIndex)
		{
			return default(ETrackedDeviceClass);
		}

		[Token(Token = "0x600198F")]
		[Address(RVA = "0xC8EF4C", Offset = "0xC8EF4C", VA = "0xC8EF4C")]
		public bool IsTrackedDeviceConnected(uint unDeviceIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001990")]
		[Address(RVA = "0xC8EF84", Offset = "0xC8EF84", VA = "0xC8EF84")]
		public bool GetBoolTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(bool);
		}

		[Token(Token = "0x6001991")]
		[Address(RVA = "0xC8EFD4", Offset = "0xC8EFD4", VA = "0xC8EFD4")]
		public float GetFloatTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(float);
		}

		[Token(Token = "0x6001992")]
		[Address(RVA = "0xC8F024", Offset = "0xC8F024", VA = "0xC8F024")]
		public int GetInt32TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(int);
		}

		[Token(Token = "0x6001993")]
		[Address(RVA = "0xC8F074", Offset = "0xC8F074", VA = "0xC8F074")]
		public ulong GetUint64TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(ulong);
		}

		[Token(Token = "0x6001994")]
		[Address(RVA = "0xC8F0C4", Offset = "0xC8F0C4", VA = "0xC8F0C4")]
		public HmdMatrix34_t GetMatrix34TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x6001995")]
		[Address(RVA = "0xC8F124", Offset = "0xC8F124", VA = "0xC8F124")]
		public uint GetArrayTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, uint propType, IntPtr pBuffer, uint unBufferSize, ref ETrackedPropertyError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x6001996")]
		[Address(RVA = "0xC8F19C", Offset = "0xC8F19C", VA = "0xC8F19C")]
		public uint GetStringTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, StringBuilder pchValue, uint unBufferSize, ref ETrackedPropertyError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x6001997")]
		[Address(RVA = "0xC8F204", Offset = "0xC8F204", VA = "0xC8F204")]
		public string GetPropErrorNameFromEnum(ETrackedPropertyError error)
		{
			return null;
		}

		[Token(Token = "0x6001998")]
		[Address(RVA = "0xC8F2A0", Offset = "0xC8F2A0", VA = "0xC8F2A0")]
		public bool PollNextEvent(ref VREvent_t pEvent, uint uncbVREvent)
		{
			return default(bool);
		}

		[Token(Token = "0x6001999")]
		[Address(RVA = "0xC8F8CC", Offset = "0xC8F8CC", VA = "0xC8F8CC")]
		public bool PollNextEventWithPose(ETrackingUniverseOrigin eOrigin, ref VREvent_t pEvent, uint uncbVREvent, ref TrackedDevicePose_t pTrackedDevicePose)
		{
			return default(bool);
		}

		[Token(Token = "0x600199A")]
		[Address(RVA = "0xC8F92C", Offset = "0xC8F92C", VA = "0xC8F92C")]
		public string GetEventTypeNameFromEnum(EVREventType eType)
		{
			return null;
		}

		[Token(Token = "0x600199B")]
		[Address(RVA = "0xC8F9C8", Offset = "0xC8F9C8", VA = "0xC8F9C8")]
		public HiddenAreaMesh_t GetHiddenAreaMesh(EVREye eEye, EHiddenAreaMeshType type)
		{
			return default(HiddenAreaMesh_t);
		}

		[Token(Token = "0x600199C")]
		[Address(RVA = "0xC8FA10", Offset = "0xC8FA10", VA = "0xC8FA10")]
		public bool GetControllerState(uint unControllerDeviceIndex, ref VRControllerState_t pControllerState, uint unControllerStateSize)
		{
			return default(bool);
		}

		[Token(Token = "0x600199D")]
		[Address(RVA = "0xC900A4", Offset = "0xC900A4", VA = "0xC900A4")]
		public bool GetControllerStateWithPose(ETrackingUniverseOrigin eOrigin, uint unControllerDeviceIndex, ref VRControllerState_t pControllerState, uint unControllerStateSize, ref TrackedDevicePose_t pTrackedDevicePose)
		{
			return default(bool);
		}

		[Token(Token = "0x600199E")]
		[Address(RVA = "0xC907A8", Offset = "0xC907A8", VA = "0xC907A8")]
		public void TriggerHapticPulse(uint unControllerDeviceIndex, uint unAxisId, char usDurationMicroSec)
		{
		}

		[Token(Token = "0x600199F")]
		[Address(RVA = "0xC907F8", Offset = "0xC907F8", VA = "0xC907F8")]
		public string GetButtonIdNameFromEnum(EVRButtonId eButtonId)
		{
			return null;
		}

		[Token(Token = "0x60019A0")]
		[Address(RVA = "0xC90894", Offset = "0xC90894", VA = "0xC90894")]
		public string GetControllerAxisTypeNameFromEnum(EVRControllerAxisType eAxisType)
		{
			return null;
		}

		[Token(Token = "0x60019A1")]
		[Address(RVA = "0xC90930", Offset = "0xC90930", VA = "0xC90930")]
		public bool IsInputAvailable()
		{
			return default(bool);
		}

		[Token(Token = "0x60019A2")]
		[Address(RVA = "0xC90960", Offset = "0xC90960", VA = "0xC90960")]
		public bool IsSteamVRDrawingControllers()
		{
			return default(bool);
		}

		[Token(Token = "0x60019A3")]
		[Address(RVA = "0xC90990", Offset = "0xC90990", VA = "0xC90990")]
		public bool ShouldApplicationPause()
		{
			return default(bool);
		}

		[Token(Token = "0x60019A4")]
		[Address(RVA = "0xC909C0", Offset = "0xC909C0", VA = "0xC909C0")]
		public bool ShouldApplicationReduceRenderingWork()
		{
			return default(bool);
		}

		[Token(Token = "0x60019A5")]
		[Address(RVA = "0xC909F0", Offset = "0xC909F0", VA = "0xC909F0")]
		public uint DriverDebugRequest(uint unDeviceIndex, string pchRequest, StringBuilder pchResponseBuffer, uint unResponseBufferSize)
		{
			return default(uint);
		}

		[Token(Token = "0x60019A6")]
		[Address(RVA = "0xC90A50", Offset = "0xC90A50", VA = "0xC90A50")]
		public EVRFirmwareError PerformFirmwareUpdate(uint unDeviceIndex)
		{
			return default(EVRFirmwareError);
		}

		[Token(Token = "0x60019A7")]
		[Address(RVA = "0xC90A88", Offset = "0xC90A88", VA = "0xC90A88")]
		public void AcknowledgeQuit_Exiting()
		{
		}

		[Token(Token = "0x60019A8")]
		[Address(RVA = "0xC90AB8", Offset = "0xC90AB8", VA = "0xC90AB8")]
		public void AcknowledgeQuit_UserPrompt()
		{
		}
	}
	[Token(Token = "0x2000428")]
	public class CVRExtendedDisplay
	{
		[Token(Token = "0x40010AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRExtendedDisplay FnTable;

		[Token(Token = "0x60019A9")]
		[Address(RVA = "0xC8A80C", Offset = "0xC8A80C", VA = "0xC8A80C")]
		internal CVRExtendedDisplay(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60019AA")]
		[Address(RVA = "0xC8A8F4", Offset = "0xC8A8F4", VA = "0xC8A8F4")]
		public void GetWindowBounds(ref int pnX, ref int pnY, ref uint pnWidth, ref uint pnHeight)
		{
		}

		[Token(Token = "0x60019AB")]
		[Address(RVA = "0xC8A964", Offset = "0xC8A964", VA = "0xC8A964")]
		public void GetEyeOutputViewport(EVREye eEye, ref uint pnX, ref uint pnY, ref uint pnWidth, ref uint pnHeight)
		{
		}

		[Token(Token = "0x60019AC")]
		[Address(RVA = "0xC8A9DC", Offset = "0xC8A9DC", VA = "0xC8A9DC")]
		public void GetDXGIOutputInfo(ref int pnAdapterIndex, ref int pnAdapterOutputIndex)
		{
		}
	}
	[Token(Token = "0x2000429")]
	public class CVRTrackedCamera
	{
		[Token(Token = "0x40010AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRTrackedCamera FnTable;

		[Token(Token = "0x60019AD")]
		[Address(RVA = "0xC90E68", Offset = "0xC90E68", VA = "0xC90E68")]
		internal CVRTrackedCamera(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60019AE")]
		[Address(RVA = "0xC90F50", Offset = "0xC90F50", VA = "0xC90F50")]
		public string GetCameraErrorNameFromEnum(EVRTrackedCameraError eCameraError)
		{
			return null;
		}

		[Token(Token = "0x60019AF")]
		[Address(RVA = "0xC90FEC", Offset = "0xC90FEC", VA = "0xC90FEC")]
		public EVRTrackedCameraError HasCamera(uint nDeviceIndex, ref bool pHasCamera)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60019B0")]
		[Address(RVA = "0xC91038", Offset = "0xC91038", VA = "0xC91038")]
		public EVRTrackedCameraError GetCameraFrameSize(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref uint pnWidth, ref uint pnHeight, ref uint pnFrameBufferSize)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60019B1")]
		[Address(RVA = "0xC910AC", Offset = "0xC910AC", VA = "0xC910AC")]
		public EVRTrackedCameraError GetCameraIntrinsics(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref HmdVector2_t pFocalLength, ref HmdVector2_t pCenter)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60019B2")]
		[Address(RVA = "0xC9110C", Offset = "0xC9110C", VA = "0xC9110C")]
		public EVRTrackedCameraError GetCameraProjection(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, float flZNear, float flZFar, ref HmdMatrix44_t pProjection)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60019B3")]
		[Address(RVA = "0xC91174", Offset = "0xC91174", VA = "0xC91174")]
		public EVRTrackedCameraError AcquireVideoStreamingService(uint nDeviceIndex, ref ulong pHandle)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60019B4")]
		[Address(RVA = "0xC911C0", Offset = "0xC911C0", VA = "0xC911C0")]
		public EVRTrackedCameraError ReleaseVideoStreamingService(ulong hTrackedCamera)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60019B5")]
		[Address(RVA = "0xC911F8", Offset = "0xC911F8", VA = "0xC911F8")]
		public EVRTrackedCameraError GetVideoStreamFrameBuffer(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, IntPtr pFrameBuffer, uint nFrameBufferSize, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60019B6")]
		[Address(RVA = "0xC91270", Offset = "0xC91270", VA = "0xC91270")]
		public EVRTrackedCameraError GetVideoStreamTextureSize(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref VRTextureBounds_t pTextureBounds, ref uint pnWidth, ref uint pnHeight)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60019B7")]
		[Address(RVA = "0xC912E0", Offset = "0xC912E0", VA = "0xC912E0")]
		public EVRTrackedCameraError GetVideoStreamTextureD3D11(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, IntPtr pD3D11DeviceOrResource, ref IntPtr ppD3D11ShaderResourceView, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60019B8")]
		[Address(RVA = "0xC91358", Offset = "0xC91358", VA = "0xC91358")]
		public EVRTrackedCameraError GetVideoStreamTextureGL(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, ref uint pglTextureId, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60019B9")]
		[Address(RVA = "0xC913C4", Offset = "0xC913C4", VA = "0xC913C4")]
		public EVRTrackedCameraError ReleaseVideoStreamTextureGL(ulong hTrackedCamera, uint glTextureId)
		{
			return default(EVRTrackedCameraError);
		}
	}
	[Token(Token = "0x200042A")]
	public class CVRApplications
	{
		[Token(Token = "0x40010AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRApplications FnTable;

		[Token(Token = "0x60019BA")]
		[Address(RVA = "0xC84EB4", Offset = "0xC84EB4", VA = "0xC84EB4")]
		internal CVRApplications(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60019BB")]
		[Address(RVA = "0xC84F9C", Offset = "0xC84F9C", VA = "0xC84F9C")]
		public EVRApplicationError AddApplicationManifest(string pchApplicationManifestFullPath, bool bTemporary)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60019BC")]
		[Address(RVA = "0xC85770", Offset = "0xC85770", VA = "0xC85770")]
		public EVRApplicationError RemoveApplicationManifest(string pchApplicationManifestFullPath)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60019BD")]
		[Address(RVA = "0xC857A8", Offset = "0xC857A8", VA = "0xC857A8")]
		public bool IsApplicationInstalled(string pchAppKey)
		{
			return default(bool);
		}

		[Token(Token = "0x60019BE")]
		[Address(RVA = "0xC857E0", Offset = "0xC857E0", VA = "0xC857E0")]
		public uint GetApplicationCount()
		{
			return default(uint);
		}

		[Token(Token = "0x60019BF")]
		[Address(RVA = "0xC85C28", Offset = "0xC85C28", VA = "0xC85C28")]
		public EVRApplicationError GetApplicationKeyByIndex(uint unApplicationIndex, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60019C0")]
		[Address(RVA = "0xC8612C", Offset = "0xC8612C", VA = "0xC8612C")]
		public EVRApplicationError GetApplicationKeyByProcessId(uint unProcessId, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60019C1")]
		[Address(RVA = "0xC86630", Offset = "0xC86630", VA = "0xC86630")]
		public EVRApplicationError LaunchApplication(string pchAppKey)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60019C2")]
		[Address(RVA = "0xC86668", Offset = "0xC86668", VA = "0xC86668")]
		public EVRApplicationError LaunchTemplateApplication(string pchTemplateAppKey, string pchNewAppKey, AppOverrideKeys_t[] pKeys)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60019C3")]
		[Address(RVA = "0xC866D0", Offset = "0xC866D0", VA = "0xC866D0")]
		public EVRApplicationError LaunchApplicationFromMimeType(string pchMimeType, string pchArgs)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60019C4")]
		[Address(RVA = "0xC86718", Offset = "0xC86718", VA = "0xC86718")]
		public EVRApplicationError LaunchDashboardOverlay(string pchAppKey)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60019C5")]
		[Address(RVA = "0xC86750", Offset = "0xC86750", VA = "0xC86750")]
		public bool CancelApplicationLaunch(string pchAppKey)
		{
			return default(bool);
		}

		[Token(Token = "0x60019C6")]
		[Address(RVA = "0xC86EDC", Offset = "0xC86EDC", VA = "0xC86EDC")]
		public EVRApplicationError IdentifyApplication(uint unProcessId, string pchAppKey)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60019C7")]
		[Address(RVA = "0xC86F24", Offset = "0xC86F24", VA = "0xC86F24")]
		public uint GetApplicationProcessId(string pchAppKey)
		{
			return default(uint);
		}

		[Token(Token = "0x60019C8")]
		[Address(RVA = "0xC876A8", Offset = "0xC876A8", VA = "0xC876A8")]
		public string GetApplicationsErrorNameFromEnum(EVRApplicationError error)
		{
			return null;
		}

		[Token(Token = "0x60019C9")]
		[Address(RVA = "0xC87744", Offset = "0xC87744", VA = "0xC87744")]
		public uint GetApplicationPropertyString(string pchAppKey, EVRApplicationProperty eProperty, StringBuilder pchPropertyValueBuffer, uint unPropertyValueBufferLen, ref EVRApplicationError peError)
		{
			return default(uint);
		}

		[Token(Token = "0x60019CA")]
		[Address(RVA = "0xC877AC", Offset = "0xC877AC", VA = "0xC877AC")]
		public bool GetApplicationPropertyBool(string pchAppKey, EVRApplicationProperty eProperty, ref EVRApplicationError peError)
		{
			return default(bool);
		}

		[Token(Token = "0x60019CB")]
		[Address(RVA = "0xC87FD8", Offset = "0xC87FD8", VA = "0xC87FD8")]
		public ulong GetApplicationPropertyUint64(string pchAppKey, EVRApplicationProperty eProperty, ref EVRApplicationError peError)
		{
			return default(ulong);
		}

		[Token(Token = "0x60019CC")]
		[Address(RVA = "0xC88028", Offset = "0xC88028", VA = "0xC88028")]
		public EVRApplicationError SetApplicationAutoLaunch(string pchAppKey, bool bAutoLaunch)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60019CD")]
		[Address(RVA = "0xC88070", Offset = "0xC88070", VA = "0xC88070")]
		public bool GetApplicationAutoLaunch(string pchAppKey)
		{
			return default(bool);
		}

		[Token(Token = "0x60019CE")]
		[Address(RVA = "0xC887FC", Offset = "0xC887FC", VA = "0xC887FC")]
		public EVRApplicationError SetDefaultApplicationForMimeType(string pchAppKey, string pchMimeType)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60019CF")]
		[Address(RVA = "0xC88844", Offset = "0xC88844", VA = "0xC88844")]
		public bool GetDefaultApplicationForMimeType(string pchMimeType, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)
		{
			return default(bool);
		}

		[Token(Token = "0x60019D0")]
		[Address(RVA = "0xC88894", Offset = "0xC88894", VA = "0xC88894")]
		public bool GetApplicationSupportedMimeTypes(string pchAppKey, StringBuilder pchMimeTypesBuffer, uint unMimeTypesBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x60019D1")]
		[Address(RVA = "0xC888E4", Offset = "0xC888E4", VA = "0xC888E4")]
		public uint GetApplicationsThatSupportMimeType(string pchMimeType, StringBuilder pchAppKeysThatSupportBuffer, uint unAppKeysThatSupportBuffer)
		{
			return default(uint);
		}

		[Token(Token = "0x60019D2")]
		[Address(RVA = "0xC88934", Offset = "0xC88934", VA = "0xC88934")]
		public uint GetApplicationLaunchArguments(uint unHandle, StringBuilder pchArgs, uint unArgs)
		{
			return default(uint);
		}

		[Token(Token = "0x60019D3")]
		[Address(RVA = "0xC88E38", Offset = "0xC88E38", VA = "0xC88E38")]
		public EVRApplicationError GetStartingApplication(StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60019D4")]
		[Address(RVA = "0xC88E80", Offset = "0xC88E80", VA = "0xC88E80")]
		public EVRApplicationTransitionState GetTransitionState()
		{
			return default(EVRApplicationTransitionState);
		}

		[Token(Token = "0x60019D5")]
		[Address(RVA = "0xC88EB0", Offset = "0xC88EB0", VA = "0xC88EB0")]
		public EVRApplicationError PerformApplicationPrelaunchCheck(string pchAppKey)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60019D6")]
		[Address(RVA = "0xC88EE8", Offset = "0xC88EE8", VA = "0xC88EE8")]
		public string GetApplicationsTransitionStateNameFromEnum(EVRApplicationTransitionState state)
		{
			return null;
		}

		[Token(Token = "0x60019D7")]
		[Address(RVA = "0xC88F84", Offset = "0xC88F84", VA = "0xC88F84")]
		public bool IsQuitUserPromptRequested()
		{
			return default(bool);
		}

		[Token(Token = "0x60019D8")]
		[Address(RVA = "0xC88FB4", Offset = "0xC88FB4", VA = "0xC88FB4")]
		public EVRApplicationError LaunchInternalProcess(string pchBinaryPath, string pchArguments, string pchWorkingDirectory)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60019D9")]
		[Address(RVA = "0xC89004", Offset = "0xC89004", VA = "0xC89004")]
		public uint GetCurrentSceneProcessId()
		{
			return default(uint);
		}
	}
	[Token(Token = "0x200042B")]
	public class CVRChaperone
	{
		[Token(Token = "0x40010AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRChaperone FnTable;

		[Token(Token = "0x60019DA")]
		[Address(RVA = "0xC89034", Offset = "0xC89034", VA = "0xC89034")]
		internal CVRChaperone(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60019DB")]
		[Address(RVA = "0xC8911C", Offset = "0xC8911C", VA = "0xC8911C")]
		public ChaperoneCalibrationState GetCalibrationState()
		{
			return default(ChaperoneCalibrationState);
		}

		[Token(Token = "0x60019DC")]
		[Address(RVA = "0xC8914C", Offset = "0xC8914C", VA = "0xC8914C")]
		public bool GetPlayAreaSize(ref float pSizeX, ref float pSizeZ)
		{
			return default(bool);
		}

		[Token(Token = "0x60019DD")]
		[Address(RVA = "0xC8919C", Offset = "0xC8919C", VA = "0xC8919C")]
		public bool GetPlayAreaRect(ref HmdQuad_t rect)
		{
			return default(bool);
		}

		[Token(Token = "0x60019DE")]
		[Address(RVA = "0xC891D4", Offset = "0xC891D4", VA = "0xC891D4")]
		public void ReloadInfo()
		{
		}

		[Token(Token = "0x60019DF")]
		[Address(RVA = "0xC89204", Offset = "0xC89204", VA = "0xC89204")]
		public void SetSceneColor(HmdColor_t color)
		{
		}

		[Token(Token = "0x60019E0")]
		[Address(RVA = "0xC89264", Offset = "0xC89264", VA = "0xC89264")]
		public void GetBoundsColor(ref HmdColor_t pOutputColorArray, int nNumOutputColors, float flCollisionBoundsFadeDistance, ref HmdColor_t pOutputCameraColor)
		{
		}

		[Token(Token = "0x60019E1")]
		[Address(RVA = "0xC892C4", Offset = "0xC892C4", VA = "0xC892C4")]
		public bool AreBoundsVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x60019E2")]
		[Address(RVA = "0xC892F4", Offset = "0xC892F4", VA = "0xC892F4")]
		public void ForceBoundsVisible(bool bForce)
		{
		}
	}
	[Token(Token = "0x200042C")]
	public class CVRChaperoneSetup
	{
		[Token(Token = "0x40010AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRChaperoneSetup FnTable;

		[Token(Token = "0x60019E3")]
		[Address(RVA = "0xC8932C", Offset = "0xC8932C", VA = "0xC8932C")]
		internal CVRChaperoneSetup(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60019E4")]
		[Address(RVA = "0xC89414", Offset = "0xC89414", VA = "0xC89414")]
		public bool CommitWorkingCopy(EChaperoneConfigFile configFile)
		{
			return default(bool);
		}

		[Token(Token = "0x60019E5")]
		[Address(RVA = "0xC8944C", Offset = "0xC8944C", VA = "0xC8944C")]
		public void RevertWorkingCopy()
		{
		}

		[Token(Token = "0x60019E6")]
		[Address(RVA = "0xC8947C", Offset = "0xC8947C", VA = "0xC8947C")]
		public bool GetWorkingPlayAreaSize(ref float pSizeX, ref float pSizeZ)
		{
			return default(bool);
		}

		[Token(Token = "0x60019E7")]
		[Address(RVA = "0xC894CC", Offset = "0xC894CC", VA = "0xC894CC")]
		public bool GetWorkingPlayAreaRect(ref HmdQuad_t rect)
		{
			return default(bool);
		}

		[Token(Token = "0x60019E8")]
		[Address(RVA = "0xC89504", Offset = "0xC89504", VA = "0xC89504")]
		public bool GetWorkingCollisionBoundsInfo(out HmdQuad_t[] pQuadsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x60019E9")]
		[Address(RVA = "0xC895BC", Offset = "0xC895BC", VA = "0xC895BC")]
		public bool GetLiveCollisionBoundsInfo(out HmdQuad_t[] pQuadsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x60019EA")]
		[Address(RVA = "0xC89674", Offset = "0xC89674", VA = "0xC89674")]
		public bool GetWorkingSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose)
		{
			return default(bool);
		}

		[Token(Token = "0x60019EB")]
		[Address(RVA = "0xC896AC", Offset = "0xC896AC", VA = "0xC896AC")]
		public bool GetWorkingStandingZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatStandingZeroPoseToRawTrackingPose)
		{
			return default(bool);
		}

		[Token(Token = "0x60019EC")]
		[Address(RVA = "0xC896E4", Offset = "0xC896E4", VA = "0xC896E4")]
		public void SetWorkingPlayAreaSize(float sizeX, float sizeZ)
		{
		}

		[Token(Token = "0x60019ED")]
		[Address(RVA = "0xC8972C", Offset = "0xC8972C", VA = "0xC8972C")]
		public void SetWorkingCollisionBoundsInfo(HmdQuad_t[] pQuadsBuffer)
		{
		}

		[Token(Token = "0x60019EE")]
		[Address(RVA = "0xC8977C", Offset = "0xC8977C", VA = "0xC8977C")]
		public void SetWorkingSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pMatSeatedZeroPoseToRawTrackingPose)
		{
		}

		[Token(Token = "0x60019EF")]
		[Address(RVA = "0xC897B4", Offset = "0xC897B4", VA = "0xC897B4")]
		public void SetWorkingStandingZeroPoseToRawTrackingPose(ref HmdMatrix34_t pMatStandingZeroPoseToRawTrackingPose)
		{
		}

		[Token(Token = "0x60019F0")]
		[Address(RVA = "0xC897EC", Offset = "0xC897EC", VA = "0xC897EC")]
		public void ReloadFromDisk(EChaperoneConfigFile configFile)
		{
		}

		[Token(Token = "0x60019F1")]
		[Address(RVA = "0xC89824", Offset = "0xC89824", VA = "0xC89824")]
		public bool GetLiveSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose)
		{
			return default(bool);
		}

		[Token(Token = "0x60019F2")]
		[Address(RVA = "0xC8985C", Offset = "0xC8985C", VA = "0xC8985C")]
		public void SetWorkingCollisionBoundsTagsInfo(byte[] pTagsBuffer)
		{
		}

		[Token(Token = "0x60019F3")]
		[Address(RVA = "0xC898AC", Offset = "0xC898AC", VA = "0xC898AC")]
		public bool GetLiveCollisionBoundsTagsInfo(out byte[] pTagsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x60019F4")]
		[Address(RVA = "0xC89964", Offset = "0xC89964", VA = "0xC89964")]
		public bool SetWorkingPhysicalBoundsInfo(HmdQuad_t[] pQuadsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x60019F5")]
		[Address(RVA = "0xC899B4", Offset = "0xC899B4", VA = "0xC899B4")]
		public bool GetLivePhysicalBoundsInfo(out HmdQuad_t[] pQuadsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x60019F6")]
		[Address(RVA = "0xC89A6C", Offset = "0xC89A6C", VA = "0xC89A6C")]
		public bool ExportLiveToBuffer(StringBuilder pBuffer, ref uint pnBufferLength)
		{
			return default(bool);
		}

		[Token(Token = "0x60019F7")]
		[Address(RVA = "0xC89AB8", Offset = "0xC89AB8", VA = "0xC89AB8")]
		public bool ImportFromBufferToWorking(string pBuffer, uint nImportFlags)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200042D")]
	public class CVRCompositor
	{
		[Token(Token = "0x40010B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRCompositor FnTable;

		[Token(Token = "0x60019F8")]
		[Address(RVA = "0xC89B00", Offset = "0xC89B00", VA = "0xC89B00")]
		internal CVRCompositor(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60019F9")]
		[Address(RVA = "0xC89BE8", Offset = "0xC89BE8", VA = "0xC89BE8")]
		public void SetTrackingSpace(ETrackingUniverseOrigin eOrigin)
		{
		}

		[Token(Token = "0x60019FA")]
		[Address(RVA = "0xC89C20", Offset = "0xC89C20", VA = "0xC89C20")]
		public ETrackingUniverseOrigin GetTrackingSpace()
		{
			return default(ETrackingUniverseOrigin);
		}

		[Token(Token = "0x60019FB")]
		[Address(RVA = "0xC89C50", Offset = "0xC89C50", VA = "0xC89C50")]
		public EVRCompositorError WaitGetPoses(TrackedDevicePose_t[] pRenderPoseArray, TrackedDevicePose_t[] pGamePoseArray)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x60019FC")]
		[Address(RVA = "0xC89CC4", Offset = "0xC89CC4", VA = "0xC89CC4")]
		public EVRCompositorError GetLastPoses(TrackedDevicePose_t[] pRenderPoseArray, TrackedDevicePose_t[] pGamePoseArray)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x60019FD")]
		[Address(RVA = "0xC89D38", Offset = "0xC89D38", VA = "0xC89D38")]
		public EVRCompositorError GetLastPoseForTrackedDeviceIndex(uint unDeviceIndex, ref TrackedDevicePose_t pOutputPose, ref TrackedDevicePose_t pOutputGamePose)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x60019FE")]
		[Address(RVA = "0xC89D88", Offset = "0xC89D88", VA = "0xC89D88")]
		public EVRCompositorError Submit(EVREye eEye, ref Texture_t pTexture, ref VRTextureBounds_t pBounds, EVRSubmitFlags nSubmitFlags)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x60019FF")]
		[Address(RVA = "0xC89DE8", Offset = "0xC89DE8", VA = "0xC89DE8")]
		public void ClearLastSubmittedFrame()
		{
		}

		[Token(Token = "0x6001A00")]
		[Address(RVA = "0xC89E18", Offset = "0xC89E18", VA = "0xC89E18")]
		public void PostPresentHandoff()
		{
		}

		[Token(Token = "0x6001A01")]
		[Address(RVA = "0xC89E48", Offset = "0xC89E48", VA = "0xC89E48")]
		public bool GetFrameTiming(ref Compositor_FrameTiming pTiming, uint unFramesAgo)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A02")]
		[Address(RVA = "0xC89E90", Offset = "0xC89E90", VA = "0xC89E90")]
		public uint GetFrameTimings(ref Compositor_FrameTiming pTiming, uint nFrames)
		{
			return default(uint);
		}

		[Token(Token = "0x6001A03")]
		[Address(RVA = "0xC89ED8", Offset = "0xC89ED8", VA = "0xC89ED8")]
		public float GetFrameTimeRemaining()
		{
			return default(float);
		}

		[Token(Token = "0x6001A04")]
		[Address(RVA = "0xC89F08", Offset = "0xC89F08", VA = "0xC89F08")]
		public void GetCumulativeStats(ref Compositor_CumulativeStats pStats, uint nStatsSizeInBytes)
		{
		}

		[Token(Token = "0x6001A05")]
		[Address(RVA = "0xC89F50", Offset = "0xC89F50", VA = "0xC89F50")]
		public void FadeToColor(float fSeconds, float fRed, float fGreen, float fBlue, float fAlpha, bool bBackground)
		{
		}

		[Token(Token = "0x6001A06")]
		[Address(RVA = "0xC89FC8", Offset = "0xC89FC8", VA = "0xC89FC8")]
		public HmdColor_t GetCurrentFadeColor(bool bBackground)
		{
			return default(HmdColor_t);
		}

		[Token(Token = "0x6001A07")]
		[Address(RVA = "0xC8A000", Offset = "0xC8A000", VA = "0xC8A000")]
		public void FadeGrid(float fSeconds, bool bFadeIn)
		{
		}

		[Token(Token = "0x6001A08")]
		[Address(RVA = "0xC8A048", Offset = "0xC8A048", VA = "0xC8A048")]
		public float GetCurrentGridAlpha()
		{
			return default(float);
		}

		[Token(Token = "0x6001A09")]
		[Address(RVA = "0xC8A078", Offset = "0xC8A078", VA = "0xC8A078")]
		public EVRCompositorError SetSkyboxOverride(Texture_t[] pTextures)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6001A0A")]
		[Address(RVA = "0xC8A0C8", Offset = "0xC8A0C8", VA = "0xC8A0C8")]
		public void ClearSkyboxOverride()
		{
		}

		[Token(Token = "0x6001A0B")]
		[Address(RVA = "0xC8A0F8", Offset = "0xC8A0F8", VA = "0xC8A0F8")]
		public void CompositorBringToFront()
		{
		}

		[Token(Token = "0x6001A0C")]
		[Address(RVA = "0xC8A128", Offset = "0xC8A128", VA = "0xC8A128")]
		public void CompositorGoToBack()
		{
		}

		[Token(Token = "0x6001A0D")]
		[Address(RVA = "0xC8A158", Offset = "0xC8A158", VA = "0xC8A158")]
		public void CompositorQuit()
		{
		}

		[Token(Token = "0x6001A0E")]
		[Address(RVA = "0xC8A188", Offset = "0xC8A188", VA = "0xC8A188")]
		public bool IsFullscreen()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A0F")]
		[Address(RVA = "0xC8A1B8", Offset = "0xC8A1B8", VA = "0xC8A1B8")]
		public uint GetCurrentSceneFocusProcess()
		{
			return default(uint);
		}

		[Token(Token = "0x6001A10")]
		[Address(RVA = "0xC8A1E8", Offset = "0xC8A1E8", VA = "0xC8A1E8")]
		public uint GetLastFrameRenderer()
		{
			return default(uint);
		}

		[Token(Token = "0x6001A11")]
		[Address(RVA = "0xC8A218", Offset = "0xC8A218", VA = "0xC8A218")]
		public bool CanRenderScene()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A12")]
		[Address(RVA = "0xC8A248", Offset = "0xC8A248", VA = "0xC8A248")]
		public void ShowMirrorWindow()
		{
		}

		[Token(Token = "0x6001A13")]
		[Address(RVA = "0xC8A278", Offset = "0xC8A278", VA = "0xC8A278")]
		public void HideMirrorWindow()
		{
		}

		[Token(Token = "0x6001A14")]
		[Address(RVA = "0xC8A2A8", Offset = "0xC8A2A8", VA = "0xC8A2A8")]
		public bool IsMirrorWindowVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A15")]
		[Address(RVA = "0xC8A2D8", Offset = "0xC8A2D8", VA = "0xC8A2D8")]
		public void CompositorDumpImages()
		{
		}

		[Token(Token = "0x6001A16")]
		[Address(RVA = "0xC8A308", Offset = "0xC8A308", VA = "0xC8A308")]
		public bool ShouldAppRenderWithLowResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A17")]
		[Address(RVA = "0xC8A338", Offset = "0xC8A338", VA = "0xC8A338")]
		public void ForceInterleavedReprojectionOn(bool bOverride)
		{
		}

		[Token(Token = "0x6001A18")]
		[Address(RVA = "0xC8A370", Offset = "0xC8A370", VA = "0xC8A370")]
		public void ForceReconnectProcess()
		{
		}

		[Token(Token = "0x6001A19")]
		[Address(RVA = "0xC8A3A0", Offset = "0xC8A3A0", VA = "0xC8A3A0")]
		public void SuspendRendering(bool bSuspend)
		{
		}

		[Token(Token = "0x6001A1A")]
		[Address(RVA = "0xC8A3D8", Offset = "0xC8A3D8", VA = "0xC8A3D8")]
		public EVRCompositorError GetMirrorTextureD3D11(EVREye eEye, IntPtr pD3D11DeviceOrResource, ref IntPtr ppD3D11ShaderResourceView)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6001A1B")]
		[Address(RVA = "0xC8A428", Offset = "0xC8A428", VA = "0xC8A428")]
		public void ReleaseMirrorTextureD3D11(IntPtr pD3D11ShaderResourceView)
		{
		}

		[Token(Token = "0x6001A1C")]
		[Address(RVA = "0xC8A460", Offset = "0xC8A460", VA = "0xC8A460")]
		public EVRCompositorError GetMirrorTextureGL(EVREye eEye, ref uint pglTextureId, IntPtr pglSharedTextureHandle)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6001A1D")]
		[Address(RVA = "0xC8A4B4", Offset = "0xC8A4B4", VA = "0xC8A4B4")]
		public bool ReleaseSharedGLTexture(uint glTextureId, IntPtr glSharedTextureHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A1E")]
		[Address(RVA = "0xC8A4FC", Offset = "0xC8A4FC", VA = "0xC8A4FC")]
		public void LockGLSharedTextureForAccess(IntPtr glSharedTextureHandle)
		{
		}

		[Token(Token = "0x6001A1F")]
		[Address(RVA = "0xC8A534", Offset = "0xC8A534", VA = "0xC8A534")]
		public void UnlockGLSharedTextureForAccess(IntPtr glSharedTextureHandle)
		{
		}

		[Token(Token = "0x6001A20")]
		[Address(RVA = "0xC8A56C", Offset = "0xC8A56C", VA = "0xC8A56C")]
		public uint GetVulkanInstanceExtensionsRequired(StringBuilder pchValue, uint unBufferSize)
		{
			return default(uint);
		}

		[Token(Token = "0x6001A21")]
		[Address(RVA = "0xC8A5B4", Offset = "0xC8A5B4", VA = "0xC8A5B4")]
		public uint GetVulkanDeviceExtensionsRequired(IntPtr pPhysicalDevice, StringBuilder pchValue, uint unBufferSize)
		{
			return default(uint);
		}

		[Token(Token = "0x6001A22")]
		[Address(RVA = "0xC8A604", Offset = "0xC8A604", VA = "0xC8A604")]
		public void SetExplicitTimingMode(EVRCompositorTimingMode eTimingMode)
		{
		}

		[Token(Token = "0x6001A23")]
		[Address(RVA = "0xC8A63C", Offset = "0xC8A63C", VA = "0xC8A63C")]
		public EVRCompositorError SubmitExplicitTimingData()
		{
			return default(EVRCompositorError);
		}
	}
	[Token(Token = "0x200042E")]
	public class CVROverlay
	{
		[Token(Token = "0x2000F1C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B7E8", Offset = "0x97B7E8")]
		internal delegate bool _PollNextOverlayEventPacked(ulong ulOverlayHandle, ref VREvent_t_Packed pEvent, uint uncbVREvent);

		[StructLayout(LayoutKind.Explicit)]
		[Token(Token = "0x2000F1D")]
		private struct PollNextOverlayEventUnion
		{
			[Token(Token = "0x4002268")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVROverlay._PollNextOverlayEvent pPollNextOverlayEvent;

			[Token(Token = "0x4002269")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _PollNextOverlayEventPacked pPollNextOverlayEventPacked;
		}

		[Token(Token = "0x40010B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVROverlay FnTable;

		[Token(Token = "0x6001A24")]
		[Address(RVA = "0xC8ABC8", Offset = "0xC8ABC8", VA = "0xC8ABC8")]
		internal CVROverlay(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001A25")]
		[Address(RVA = "0xC8ACB0", Offset = "0xC8ACB0", VA = "0xC8ACB0")]
		public EVROverlayError FindOverlay(string pchOverlayKey, ref ulong pOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A26")]
		[Address(RVA = "0xC8ACFC", Offset = "0xC8ACFC", VA = "0xC8ACFC")]
		public EVROverlayError CreateOverlay(string pchOverlayKey, string pchOverlayName, ref ulong pOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A27")]
		[Address(RVA = "0xC8AD50", Offset = "0xC8AD50", VA = "0xC8AD50")]
		public EVROverlayError DestroyOverlay(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A28")]
		[Address(RVA = "0xC8AD88", Offset = "0xC8AD88", VA = "0xC8AD88")]
		public EVROverlayError SetHighQualityOverlay(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A29")]
		[Address(RVA = "0xC8ADC0", Offset = "0xC8ADC0", VA = "0xC8ADC0")]
		public ulong GetHighQualityOverlay()
		{
			return default(ulong);
		}

		[Token(Token = "0x6001A2A")]
		[Address(RVA = "0xC8ADF0", Offset = "0xC8ADF0", VA = "0xC8ADF0")]
		public uint GetOverlayKey(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref EVROverlayError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x6001A2B")]
		[Address(RVA = "0xC8AE50", Offset = "0xC8AE50", VA = "0xC8AE50")]
		public uint GetOverlayName(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref EVROverlayError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x6001A2C")]
		[Address(RVA = "0xC8AEB0", Offset = "0xC8AEB0", VA = "0xC8AEB0")]
		public EVROverlayError SetOverlayName(ulong ulOverlayHandle, string pchName)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A2D")]
		[Address(RVA = "0xC8AEF8", Offset = "0xC8AEF8", VA = "0xC8AEF8")]
		public EVROverlayError GetOverlayImageData(ulong ulOverlayHandle, IntPtr pvBuffer, uint unBufferSize, ref uint punWidth, ref uint punHeight)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A2E")]
		[Address(RVA = "0xC8AF68", Offset = "0xC8AF68", VA = "0xC8AF68")]
		public string GetOverlayErrorNameFromEnum(EVROverlayError error)
		{
			return null;
		}

		[Token(Token = "0x6001A2F")]
		[Address(RVA = "0xC8B004", Offset = "0xC8B004", VA = "0xC8B004")]
		public EVROverlayError SetOverlayRenderingPid(ulong ulOverlayHandle, uint unPID)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A30")]
		[Address(RVA = "0xC8B04C", Offset = "0xC8B04C", VA = "0xC8B04C")]
		public uint GetOverlayRenderingPid(ulong ulOverlayHandle)
		{
			return default(uint);
		}

		[Token(Token = "0x6001A31")]
		[Address(RVA = "0xC8B084", Offset = "0xC8B084", VA = "0xC8B084")]
		public EVROverlayError SetOverlayFlag(ulong ulOverlayHandle, VROverlayFlags eOverlayFlag, bool bEnabled)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A32")]
		[Address(RVA = "0xC8B0D4", Offset = "0xC8B0D4", VA = "0xC8B0D4")]
		public EVROverlayError GetOverlayFlag(ulong ulOverlayHandle, VROverlayFlags eOverlayFlag, ref bool pbEnabled)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A33")]
		[Address(RVA = "0xC8B128", Offset = "0xC8B128", VA = "0xC8B128")]
		public EVROverlayError SetOverlayColor(ulong ulOverlayHandle, float fRed, float fGreen, float fBlue)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A34")]
		[Address(RVA = "0xC8B188", Offset = "0xC8B188", VA = "0xC8B188")]
		public EVROverlayError GetOverlayColor(ulong ulOverlayHandle, ref float pfRed, ref float pfGreen, ref float pfBlue)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A35")]
		[Address(RVA = "0xC8B1F4", Offset = "0xC8B1F4", VA = "0xC8B1F4")]
		public EVROverlayError SetOverlayAlpha(ulong ulOverlayHandle, float fAlpha)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A36")]
		[Address(RVA = "0xC8B23C", Offset = "0xC8B23C", VA = "0xC8B23C")]
		public EVROverlayError GetOverlayAlpha(ulong ulOverlayHandle, ref float pfAlpha)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A37")]
		[Address(RVA = "0xC8B288", Offset = "0xC8B288", VA = "0xC8B288")]
		public EVROverlayError SetOverlayTexelAspect(ulong ulOverlayHandle, float fTexelAspect)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A38")]
		[Address(RVA = "0xC8B2D0", Offset = "0xC8B2D0", VA = "0xC8B2D0")]
		public EVROverlayError GetOverlayTexelAspect(ulong ulOverlayHandle, ref float pfTexelAspect)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A39")]
		[Address(RVA = "0xC8B31C", Offset = "0xC8B31C", VA = "0xC8B31C")]
		public EVROverlayError SetOverlaySortOrder(ulong ulOverlayHandle, uint unSortOrder)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A3A")]
		[Address(RVA = "0xC8B364", Offset = "0xC8B364", VA = "0xC8B364")]
		public EVROverlayError GetOverlaySortOrder(ulong ulOverlayHandle, ref uint punSortOrder)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A3B")]
		[Address(RVA = "0xC8B3B0", Offset = "0xC8B3B0", VA = "0xC8B3B0")]
		public EVROverlayError SetOverlayWidthInMeters(ulong ulOverlayHandle, float fWidthInMeters)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A3C")]
		[Address(RVA = "0xC8B3F8", Offset = "0xC8B3F8", VA = "0xC8B3F8")]
		public EVROverlayError GetOverlayWidthInMeters(ulong ulOverlayHandle, ref float pfWidthInMeters)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A3D")]
		[Address(RVA = "0xC8B444", Offset = "0xC8B444", VA = "0xC8B444")]
		public EVROverlayError SetOverlayAutoCurveDistanceRangeInMeters(ulong ulOverlayHandle, float fMinDistanceInMeters, float fMaxDistanceInMeters)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A3E")]
		[Address(RVA = "0xC8B494", Offset = "0xC8B494", VA = "0xC8B494")]
		public EVROverlayError GetOverlayAutoCurveDistanceRangeInMeters(ulong ulOverlayHandle, ref float pfMinDistanceInMeters, ref float pfMaxDistanceInMeters)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A3F")]
		[Address(RVA = "0xC8B4EC", Offset = "0xC8B4EC", VA = "0xC8B4EC")]
		public EVROverlayError SetOverlayTextureColorSpace(ulong ulOverlayHandle, EColorSpace eTextureColorSpace)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A40")]
		[Address(RVA = "0xC8B534", Offset = "0xC8B534", VA = "0xC8B534")]
		public EVROverlayError GetOverlayTextureColorSpace(ulong ulOverlayHandle, ref EColorSpace peTextureColorSpace)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A41")]
		[Address(RVA = "0xC8B57C", Offset = "0xC8B57C", VA = "0xC8B57C")]
		public EVROverlayError SetOverlayTextureBounds(ulong ulOverlayHandle, ref VRTextureBounds_t pOverlayTextureBounds)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A42")]
		[Address(RVA = "0xC8B5C4", Offset = "0xC8B5C4", VA = "0xC8B5C4")]
		public EVROverlayError GetOverlayTextureBounds(ulong ulOverlayHandle, ref VRTextureBounds_t pOverlayTextureBounds)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A43")]
		[Address(RVA = "0xC8B60C", Offset = "0xC8B60C", VA = "0xC8B60C")]
		public uint GetOverlayRenderModel(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref HmdColor_t pColor, ref EVROverlayError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x6001A44")]
		[Address(RVA = "0xC8B674", Offset = "0xC8B674", VA = "0xC8B674")]
		public EVROverlayError SetOverlayRenderModel(ulong ulOverlayHandle, string pchRenderModel, ref HmdColor_t pColor)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A45")]
		[Address(RVA = "0xC8B6C4", Offset = "0xC8B6C4", VA = "0xC8B6C4")]
		public EVROverlayError GetOverlayTransformType(ulong ulOverlayHandle, ref VROverlayTransformType peTransformType)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A46")]
		[Address(RVA = "0xC8B70C", Offset = "0xC8B70C", VA = "0xC8B70C")]
		public EVROverlayError SetOverlayTransformAbsolute(ulong ulOverlayHandle, ETrackingUniverseOrigin eTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A47")]
		[Address(RVA = "0xC8B75C", Offset = "0xC8B75C", VA = "0xC8B75C")]
		public EVROverlayError GetOverlayTransformAbsolute(ulong ulOverlayHandle, ref ETrackingUniverseOrigin peTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A48")]
		[Address(RVA = "0xC8B7AC", Offset = "0xC8B7AC", VA = "0xC8B7AC")]
		public EVROverlayError SetOverlayTransformTrackedDeviceRelative(ulong ulOverlayHandle, uint unTrackedDevice, ref HmdMatrix34_t pmatTrackedDeviceToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A49")]
		[Address(RVA = "0xC8B7FC", Offset = "0xC8B7FC", VA = "0xC8B7FC")]
		public EVROverlayError GetOverlayTransformTrackedDeviceRelative(ulong ulOverlayHandle, ref uint punTrackedDevice, ref HmdMatrix34_t pmatTrackedDeviceToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A4A")]
		[Address(RVA = "0xC8B850", Offset = "0xC8B850", VA = "0xC8B850")]
		public EVROverlayError SetOverlayTransformTrackedDeviceComponent(ulong ulOverlayHandle, uint unDeviceIndex, string pchComponentName)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A4B")]
		[Address(RVA = "0xC8B8A0", Offset = "0xC8B8A0", VA = "0xC8B8A0")]
		public EVROverlayError GetOverlayTransformTrackedDeviceComponent(ulong ulOverlayHandle, ref uint punDeviceIndex, StringBuilder pchComponentName, uint unComponentNameSize)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A4C")]
		[Address(RVA = "0xC8B904", Offset = "0xC8B904", VA = "0xC8B904")]
		public EVROverlayError GetOverlayTransformOverlayRelative(ulong ulOverlayHandle, ref ulong ulOverlayHandleParent, ref HmdMatrix34_t pmatParentOverlayToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A4D")]
		[Address(RVA = "0xC8B958", Offset = "0xC8B958", VA = "0xC8B958")]
		public EVROverlayError SetOverlayTransformOverlayRelative(ulong ulOverlayHandle, ulong ulOverlayHandleParent, ref HmdMatrix34_t pmatParentOverlayToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A4E")]
		[Address(RVA = "0xC8B9A8", Offset = "0xC8B9A8", VA = "0xC8B9A8")]
		public EVROverlayError ShowOverlay(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A4F")]
		[Address(RVA = "0xC8B9E0", Offset = "0xC8B9E0", VA = "0xC8B9E0")]
		public EVROverlayError HideOverlay(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A50")]
		[Address(RVA = "0xC8BA18", Offset = "0xC8BA18", VA = "0xC8BA18")]
		public bool IsOverlayVisible(ulong ulOverlayHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A51")]
		[Address(RVA = "0xC8BA50", Offset = "0xC8BA50", VA = "0xC8BA50")]
		public EVROverlayError GetTransformForOverlayCoordinates(ulong ulOverlayHandle, ETrackingUniverseOrigin eTrackingOrigin, HmdVector2_t coordinatesInOverlay, ref HmdMatrix34_t pmatTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A52")]
		[Address(RVA = "0xC8BAB8", Offset = "0xC8BAB8", VA = "0xC8BAB8")]
		public bool PollNextOverlayEvent(ulong ulOverlayHandle, ref VREvent_t pEvent, uint uncbVREvent)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A53")]
		[Address(RVA = "0xC8C128", Offset = "0xC8C128", VA = "0xC8C128")]
		public EVROverlayError GetOverlayInputMethod(ulong ulOverlayHandle, ref VROverlayInputMethod peInputMethod)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A54")]
		[Address(RVA = "0xC8C170", Offset = "0xC8C170", VA = "0xC8C170")]
		public EVROverlayError SetOverlayInputMethod(ulong ulOverlayHandle, VROverlayInputMethod eInputMethod)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A55")]
		[Address(RVA = "0xC8C1B8", Offset = "0xC8C1B8", VA = "0xC8C1B8")]
		public EVROverlayError GetOverlayMouseScale(ulong ulOverlayHandle, ref HmdVector2_t pvecMouseScale)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A56")]
		[Address(RVA = "0xC8C200", Offset = "0xC8C200", VA = "0xC8C200")]
		public EVROverlayError SetOverlayMouseScale(ulong ulOverlayHandle, ref HmdVector2_t pvecMouseScale)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A57")]
		[Address(RVA = "0xC8C248", Offset = "0xC8C248", VA = "0xC8C248")]
		public bool ComputeOverlayIntersection(ulong ulOverlayHandle, ref VROverlayIntersectionParams_t pParams, ref VROverlayIntersectionResults_t pResults)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A58")]
		[Address(RVA = "0xC8C298", Offset = "0xC8C298", VA = "0xC8C298")]
		public bool IsHoverTargetOverlay(ulong ulOverlayHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A59")]
		[Address(RVA = "0xC8C2D0", Offset = "0xC8C2D0", VA = "0xC8C2D0")]
		public ulong GetGamepadFocusOverlay()
		{
			return default(ulong);
		}

		[Token(Token = "0x6001A5A")]
		[Address(RVA = "0xC8C300", Offset = "0xC8C300", VA = "0xC8C300")]
		public EVROverlayError SetGamepadFocusOverlay(ulong ulNewFocusOverlay)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A5B")]
		[Address(RVA = "0xC8C338", Offset = "0xC8C338", VA = "0xC8C338")]
		public EVROverlayError SetOverlayNeighbor(EOverlayDirection eDirection, ulong ulFrom, ulong ulTo)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A5C")]
		[Address(RVA = "0xC8C388", Offset = "0xC8C388", VA = "0xC8C388")]
		public EVROverlayError MoveGamepadFocusToNeighbor(EOverlayDirection eDirection, ulong ulFrom)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A5D")]
		[Address(RVA = "0xC8C3D0", Offset = "0xC8C3D0", VA = "0xC8C3D0")]
		public EVROverlayError SetOverlayDualAnalogTransform(ulong ulOverlay, EDualAnalogWhich eWhich, IntPtr vCenter, float fRadius)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A5E")]
		[Address(RVA = "0xC8C430", Offset = "0xC8C430", VA = "0xC8C430")]
		public EVROverlayError GetOverlayDualAnalogTransform(ulong ulOverlay, EDualAnalogWhich eWhich, ref HmdVector2_t pvCenter, ref float pfRadius)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A5F")]
		[Address(RVA = "0xC8C494", Offset = "0xC8C494", VA = "0xC8C494")]
		public EVROverlayError SetOverlayTexture(ulong ulOverlayHandle, ref Texture_t pTexture)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A60")]
		[Address(RVA = "0xC8C4DC", Offset = "0xC8C4DC", VA = "0xC8C4DC")]
		public EVROverlayError ClearOverlayTexture(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A61")]
		[Address(RVA = "0xC8C514", Offset = "0xC8C514", VA = "0xC8C514")]
		public EVROverlayError SetOverlayRaw(ulong ulOverlayHandle, IntPtr pvBuffer, uint unWidth, uint unHeight, uint unDepth)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A62")]
		[Address(RVA = "0xC8C57C", Offset = "0xC8C57C", VA = "0xC8C57C")]
		public EVROverlayError SetOverlayFromFile(ulong ulOverlayHandle, string pchFilePath)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A63")]
		[Address(RVA = "0xC8C5C4", Offset = "0xC8C5C4", VA = "0xC8C5C4")]
		public EVROverlayError GetOverlayTexture(ulong ulOverlayHandle, ref IntPtr pNativeTextureHandle, IntPtr pNativeTextureRef, ref uint pWidth, ref uint pHeight, ref uint pNativeFormat, ref ETextureType pAPIType, ref EColorSpace pColorSpace, ref VRTextureBounds_t pTextureBounds)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A64")]
		[Address(RVA = "0xC8C660", Offset = "0xC8C660", VA = "0xC8C660")]
		public EVROverlayError ReleaseNativeOverlayHandle(ulong ulOverlayHandle, IntPtr pNativeTextureHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A65")]
		[Address(RVA = "0xC8C6A8", Offset = "0xC8C6A8", VA = "0xC8C6A8")]
		public EVROverlayError GetOverlayTextureSize(ulong ulOverlayHandle, ref uint pWidth, ref uint pHeight)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A66")]
		[Address(RVA = "0xC8C700", Offset = "0xC8C700", VA = "0xC8C700")]
		public EVROverlayError CreateDashboardOverlay(string pchOverlayKey, string pchOverlayFriendlyName, ref ulong pMainHandle, ref ulong pThumbnailHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A67")]
		[Address(RVA = "0xC8C768", Offset = "0xC8C768", VA = "0xC8C768")]
		public bool IsDashboardVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A68")]
		[Address(RVA = "0xC8C798", Offset = "0xC8C798", VA = "0xC8C798")]
		public bool IsActiveDashboardOverlay(ulong ulOverlayHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A69")]
		[Address(RVA = "0xC8C7D0", Offset = "0xC8C7D0", VA = "0xC8C7D0")]
		public EVROverlayError SetDashboardOverlaySceneProcess(ulong ulOverlayHandle, uint unProcessId)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A6A")]
		[Address(RVA = "0xC8C818", Offset = "0xC8C818", VA = "0xC8C818")]
		public EVROverlayError GetDashboardOverlaySceneProcess(ulong ulOverlayHandle, ref uint punProcessId)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A6B")]
		[Address(RVA = "0xC8C864", Offset = "0xC8C864", VA = "0xC8C864")]
		public void ShowDashboard(string pchOverlayToShow)
		{
		}

		[Token(Token = "0x6001A6C")]
		[Address(RVA = "0xC8C89C", Offset = "0xC8C89C", VA = "0xC8C89C")]
		public uint GetPrimaryDashboardDevice()
		{
			return default(uint);
		}

		[Token(Token = "0x6001A6D")]
		[Address(RVA = "0xC8C8CC", Offset = "0xC8C8CC", VA = "0xC8C8CC")]
		public EVROverlayError ShowKeyboard(int eInputMode, int eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText, bool bUseMinimalMode, ulong uUserValue)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A6E")]
		[Address(RVA = "0xC8C94C", Offset = "0xC8C94C", VA = "0xC8C94C")]
		public EVROverlayError ShowKeyboardForOverlay(ulong ulOverlayHandle, int eInputMode, int eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText, bool bUseMinimalMode, ulong uUserValue)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A6F")]
		[Address(RVA = "0xC8C9D8", Offset = "0xC8C9D8", VA = "0xC8C9D8")]
		public uint GetKeyboardText(StringBuilder pchText, uint cchText)
		{
			return default(uint);
		}

		[Token(Token = "0x6001A70")]
		[Address(RVA = "0xC8CA20", Offset = "0xC8CA20", VA = "0xC8CA20")]
		public void HideKeyboard()
		{
		}

		[Token(Token = "0x6001A71")]
		[Address(RVA = "0xC8CA50", Offset = "0xC8CA50", VA = "0xC8CA50")]
		public void SetKeyboardTransformAbsolute(ETrackingUniverseOrigin eTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToKeyboardTransform)
		{
		}

		[Token(Token = "0x6001A72")]
		[Address(RVA = "0xC8CA98", Offset = "0xC8CA98", VA = "0xC8CA98")]
		public void SetKeyboardPositionForOverlay(ulong ulOverlayHandle, HmdRect2_t avoidRect)
		{
		}

		[Token(Token = "0x6001A73")]
		[Address(RVA = "0xC8CB00", Offset = "0xC8CB00", VA = "0xC8CB00")]
		public EVROverlayError SetOverlayIntersectionMask(ulong ulOverlayHandle, ref VROverlayIntersectionMaskPrimitive_t pMaskPrimitives, uint unNumMaskPrimitives, uint unPrimitiveSize)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A74")]
		[Address(RVA = "0xC8CB60", Offset = "0xC8CB60", VA = "0xC8CB60")]
		public EVROverlayError GetOverlayFlags(ulong ulOverlayHandle, ref uint pFlags)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001A75")]
		[Address(RVA = "0xC8CBAC", Offset = "0xC8CBAC", VA = "0xC8CBAC")]
		public VRMessageOverlayResponse ShowMessageOverlay(string pchText, string pchCaption, string pchButton0Text, string pchButton1Text, string pchButton2Text, string pchButton3Text)
		{
			return default(VRMessageOverlayResponse);
		}

		[Token(Token = "0x6001A76")]
		[Address(RVA = "0xC8CC24", Offset = "0xC8CC24", VA = "0xC8CC24")]
		public void CloseMessageOverlay()
		{
		}
	}
	[Token(Token = "0x200042F")]
	public class CVRRenderModels
	{
		[Token(Token = "0x2000F1E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x97B7FC", Offset = "0x97B7FC")]
		internal delegate bool _GetComponentStatePacked(string pchRenderModelName, string pchComponentName, ref VRControllerState_t_Packed pControllerState, ref RenderModel_ControllerMode_State_t pState, ref RenderModel_ComponentState_t pComponentState);

		[StructLayout(LayoutKind.Explicit)]
		[Token(Token = "0x2000F1F")]
		private struct GetComponentStateUnion
		{
			[Token(Token = "0x400226A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVRRenderModels._GetComponentState pGetComponentState;

			[Token(Token = "0x400226B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _GetComponentStatePacked pGetComponentStatePacked;
		}

		[Token(Token = "0x40010B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRRenderModels FnTable;

		[Token(Token = "0x6001A77")]
		[Address(RVA = "0xC8CD78", Offset = "0xC8CD78", VA = "0xC8CD78")]
		internal CVRRenderModels(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001A78")]
		[Address(RVA = "0xC8CE60", Offset = "0xC8CE60", VA = "0xC8CE60")]
		public EVRRenderModelError LoadRenderModel_Async(string pchRenderModelName, ref IntPtr ppRenderModel)
		{
			return default(EVRRenderModelError);
		}

		[Token(Token = "0x6001A79")]
		[Address(RVA = "0xC8CEA8", Offset = "0xC8CEA8", VA = "0xC8CEA8")]
		public void FreeRenderModel(IntPtr pRenderModel)
		{
		}

		[Token(Token = "0x6001A7A")]
		[Address(RVA = "0xC8CEE0", Offset = "0xC8CEE0", VA = "0xC8CEE0")]
		public EVRRenderModelError LoadTexture_Async(int textureId, ref IntPtr ppTexture)
		{
			return default(EVRRenderModelError);
		}

		[Token(Token = "0x6001A7B")]
		[Address(RVA = "0xC8CF28", Offset = "0xC8CF28", VA = "0xC8CF28")]
		public void FreeTexture(IntPtr pTexture)
		{
		}

		[Token(Token = "0x6001A7C")]
		[Address(RVA = "0xC8CF60", Offset = "0xC8CF60", VA = "0xC8CF60")]
		public EVRRenderModelError LoadTextureD3D11_Async(int textureId, IntPtr pD3D11Device, ref IntPtr ppD3D11Texture2D)
		{
			return default(EVRRenderModelError);
		}

		[Token(Token = "0x6001A7D")]
		[Address(RVA = "0xC8CFB0", Offset = "0xC8CFB0", VA = "0xC8CFB0")]
		public EVRRenderModelError LoadIntoTextureD3D11_Async(int textureId, IntPtr pDstTexture)
		{
			return default(EVRRenderModelError);
		}

		[Token(Token = "0x6001A7E")]
		[Address(RVA = "0xC8CFF8", Offset = "0xC8CFF8", VA = "0xC8CFF8")]
		public void FreeTextureD3D11(IntPtr pD3D11Texture2D)
		{
		}

		[Token(Token = "0x6001A7F")]
		[Address(RVA = "0xC8D030", Offset = "0xC8D030", VA = "0xC8D030")]
		public uint GetRenderModelName(uint unRenderModelIndex, StringBuilder pchRenderModelName, uint unRenderModelNameLen)
		{
			return default(uint);
		}

		[Token(Token = "0x6001A80")]
		[Address(RVA = "0xC8D080", Offset = "0xC8D080", VA = "0xC8D080")]
		public uint GetRenderModelCount()
		{
			return default(uint);
		}

		[Token(Token = "0x6001A81")]
		[Address(RVA = "0xC8D0B0", Offset = "0xC8D0B0", VA = "0xC8D0B0")]
		public uint GetComponentCount(string pchRenderModelName)
		{
			return default(uint);
		}

		[Token(Token = "0x6001A82")]
		[Address(RVA = "0xC8D0E8", Offset = "0xC8D0E8", VA = "0xC8D0E8")]
		public uint GetComponentName(string pchRenderModelName, uint unComponentIndex, StringBuilder pchComponentName, uint unComponentNameLen)
		{
			return default(uint);
		}

		[Token(Token = "0x6001A83")]
		[Address(RVA = "0xC8D148", Offset = "0xC8D148", VA = "0xC8D148")]
		public ulong GetComponentButtonMask(string pchRenderModelName, string pchComponentName)
		{
			return default(ulong);
		}

		[Token(Token = "0x6001A84")]
		[Address(RVA = "0xC8D190", Offset = "0xC8D190", VA = "0xC8D190")]
		public uint GetComponentRenderModelName(string pchRenderModelName, string pchComponentName, StringBuilder pchComponentRenderModelName, uint unComponentRenderModelNameLen)
		{
			return default(uint);
		}

		[Token(Token = "0x6001A85")]
		[Address(RVA = "0xC8D1F0", Offset = "0xC8D1F0", VA = "0xC8D1F0")]
		public bool GetComponentState(string pchRenderModelName, string pchComponentName, ref VRControllerState_t pControllerState, ref RenderModel_ControllerMode_State_t pState, ref RenderModel_ComponentState_t pComponentState)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A86")]
		[Address(RVA = "0xC8DB6C", Offset = "0xC8DB6C", VA = "0xC8DB6C")]
		public bool RenderModelHasComponent(string pchRenderModelName, string pchComponentName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A87")]
		[Address(RVA = "0xC8DBB4", Offset = "0xC8DBB4", VA = "0xC8DBB4")]
		public uint GetRenderModelThumbnailURL(string pchRenderModelName, StringBuilder pchThumbnailURL, uint unThumbnailURLLen, ref EVRRenderModelError peError)
		{
			return default(uint);
		}

		[Token(Token = "0x6001A88")]
		[Address(RVA = "0xC8DC14", Offset = "0xC8DC14", VA = "0xC8DC14")]
		public uint GetRenderModelOriginalPath(string pchRenderModelName, StringBuilder pchOriginalPath, uint unOriginalPathLen, ref EVRRenderModelError peError)
		{
			return default(uint);
		}

		[Token(Token = "0x6001A89")]
		[Address(RVA = "0xC8DC74", Offset = "0xC8DC74", VA = "0xC8DC74")]
		public string GetRenderModelErrorNameFromEnum(EVRRenderModelError error)
		{
			return null;
		}
	}
	[Token(Token = "0x2000430")]
	public class CVRNotifications
	{
		[Token(Token = "0x40010B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRNotifications FnTable;

		[Token(Token = "0x6001A8A")]
		[Address(RVA = "0xC8AA2C", Offset = "0xC8AA2C", VA = "0xC8AA2C")]
		internal CVRNotifications(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001A8B")]
		[Address(RVA = "0xC8AB0C", Offset = "0xC8AB0C", VA = "0xC8AB0C")]
		public EVRNotificationError CreateNotification(ulong ulOverlayHandle, ulong ulUserValue, EVRNotificationType type, string pchText, EVRNotificationStyle style, ref NotificationBitmap_t pImage, ref uint pNotificationId)
		{
			return default(EVRNotificationError);
		}

		[Token(Token = "0x6001A8C")]
		[Address(RVA = "0xC8AB90", Offset = "0xC8AB90", VA = "0xC8AB90")]
		public EVRNotificationError RemoveNotification(uint notificationId)
		{
			return default(EVRNotificationError);
		}
	}
	[Token(Token = "0x2000431")]
	public class CVRSettings
	{
		[Token(Token = "0x40010B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRSettings FnTable;

		[Token(Token = "0x6001A8D")]
		[Address(RVA = "0xC8E338", Offset = "0xC8E338", VA = "0xC8E338")]
		internal CVRSettings(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001A8E")]
		[Address(RVA = "0xC8E420", Offset = "0xC8E420", VA = "0xC8E420")]
		public string GetSettingsErrorNameFromEnum(EVRSettingsError eError)
		{
			return null;
		}

		[Token(Token = "0x6001A8F")]
		[Address(RVA = "0xC8E4BC", Offset = "0xC8E4BC", VA = "0xC8E4BC")]
		public bool Sync(bool bForce, ref EVRSettingsError peError)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A90")]
		[Address(RVA = "0xC8E504", Offset = "0xC8E504", VA = "0xC8E504")]
		public void SetBool(string pchSection, string pchSettingsKey, bool bValue, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x6001A91")]
		[Address(RVA = "0xC8E564", Offset = "0xC8E564", VA = "0xC8E564")]
		public void SetInt32(string pchSection, string pchSettingsKey, int nValue, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x6001A92")]
		[Address(RVA = "0xC8E5C4", Offset = "0xC8E5C4", VA = "0xC8E5C4")]
		public void SetFloat(string pchSection, string pchSettingsKey, float flValue, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x6001A93")]
		[Address(RVA = "0xC8E624", Offset = "0xC8E624", VA = "0xC8E624")]
		public void SetString(string pchSection, string pchSettingsKey, string pchValue, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x6001A94")]
		[Address(RVA = "0xC8E684", Offset = "0xC8E684", VA = "0xC8E684")]
		public bool GetBool(string pchSection, string pchSettingsKey, ref EVRSettingsError peError)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A95")]
		[Address(RVA = "0xC8E6D4", Offset = "0xC8E6D4", VA = "0xC8E6D4")]
		public int GetInt32(string pchSection, string pchSettingsKey, ref EVRSettingsError peError)
		{
			return default(int);
		}

		[Token(Token = "0x6001A96")]
		[Address(RVA = "0xC8E724", Offset = "0xC8E724", VA = "0xC8E724")]
		public float GetFloat(string pchSection, string pchSettingsKey, ref EVRSettingsError peError)
		{
			return default(float);
		}

		[Token(Token = "0x6001A97")]
		[Address(RVA = "0xC8E774", Offset = "0xC8E774", VA = "0xC8E774")]
		public void GetString(string pchSection, string pchSettingsKey, StringBuilder pchValue, uint unValueLen, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x6001A98")]
		[Address(RVA = "0xC8E7DC", Offset = "0xC8E7DC", VA = "0xC8E7DC")]
		public void RemoveSection(string pchSection, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x6001A99")]
		[Address(RVA = "0xC8E824", Offset = "0xC8E824", VA = "0xC8E824")]
		public void RemoveKeyInSection(string pchSection, string pchSettingsKey, ref EVRSettingsError peError)
		{
		}
	}
	[Token(Token = "0x2000432")]
	public class CVRScreenshots
	{
		[Token(Token = "0x40010B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRScreenshots FnTable;

		[Token(Token = "0x6001A9A")]
		[Address(RVA = "0xC8DFE8", Offset = "0xC8DFE8", VA = "0xC8DFE8")]
		internal CVRScreenshots(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001A9B")]
		[Address(RVA = "0xC8E0D8", Offset = "0xC8E0D8", VA = "0xC8E0D8")]
		public EVRScreenshotError RequestScreenshot(ref uint pOutScreenshotHandle, EVRScreenshotType type, string pchPreviewFilename, string pchVRFilename)
		{
			return default(EVRScreenshotError);
		}

		[Token(Token = "0x6001A9C")]
		[Address(RVA = "0xC8E13C", Offset = "0xC8E13C", VA = "0xC8E13C")]
		public EVRScreenshotError HookScreenshot(EVRScreenshotType[] pSupportedTypes)
		{
			return default(EVRScreenshotError);
		}

		[Token(Token = "0x6001A9D")]
		[Address(RVA = "0xC8E18C", Offset = "0xC8E18C", VA = "0xC8E18C")]
		public EVRScreenshotType GetScreenshotPropertyType(uint screenshotHandle, ref EVRScreenshotError pError)
		{
			return default(EVRScreenshotType);
		}

		[Token(Token = "0x6001A9E")]
		[Address(RVA = "0xC8E1D4", Offset = "0xC8E1D4", VA = "0xC8E1D4")]
		public uint GetScreenshotPropertyFilename(uint screenshotHandle, EVRScreenshotPropertyFilenames filenameType, StringBuilder pchFilename, uint cchFilename, ref EVRScreenshotError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x6001A9F")]
		[Address(RVA = "0xC8E23C", Offset = "0xC8E23C", VA = "0xC8E23C")]
		public EVRScreenshotError UpdateScreenshotProgress(uint screenshotHandle, float flProgress)
		{
			return default(EVRScreenshotError);
		}

		[Token(Token = "0x6001AA0")]
		[Address(RVA = "0xC8E284", Offset = "0xC8E284", VA = "0xC8E284")]
		public EVRScreenshotError TakeStereoScreenshot(ref uint pOutScreenshotHandle, string pchPreviewFilename, string pchVRFilename)
		{
			return default(EVRScreenshotError);
		}

		[Token(Token = "0x6001AA1")]
		[Address(RVA = "0xC8E2D8", Offset = "0xC8E2D8", VA = "0xC8E2D8")]
		public EVRScreenshotError SubmitScreenshot(uint screenshotHandle, EVRScreenshotType type, string pchSourcePreviewFilename, string pchSourceVRFilename)
		{
			return default(EVRScreenshotError);
		}
	}
	[Token(Token = "0x2000433")]
	public class CVRResources
	{
		[Token(Token = "0x40010B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRResources FnTable;

		[Token(Token = "0x6001AA2")]
		[Address(RVA = "0xC8DE58", Offset = "0xC8DE58", VA = "0xC8DE58")]
		internal CVRResources(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001AA3")]
		[Address(RVA = "0xC8DF38", Offset = "0xC8DF38", VA = "0xC8DF38")]
		public uint LoadSharedResource(string pchResourceName, string pchBuffer, uint unBufferLen)
		{
			return default(uint);
		}

		[Token(Token = "0x6001AA4")]
		[Address(RVA = "0xC8DF88", Offset = "0xC8DF88", VA = "0xC8DF88")]
		public uint GetResourceFullPath(string pchResourceName, string pchResourceTypeDirectory, StringBuilder pchPathBuffer, uint unBufferLen)
		{
			return default(uint);
		}
	}
	[Token(Token = "0x2000434")]
	public class CVRDriverManager
	{
		[Token(Token = "0x40010B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRDriverManager FnTable;

		[Token(Token = "0x6001AA5")]
		[Address(RVA = "0xC8A66C", Offset = "0xC8A66C", VA = "0xC8A66C")]
		internal CVRDriverManager(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001AA6")]
		[Address(RVA = "0xC8A754", Offset = "0xC8A754", VA = "0xC8A754")]
		public uint GetDriverCount()
		{
			return default(uint);
		}

		[Token(Token = "0x6001AA7")]
		[Address(RVA = "0xC8A784", Offset = "0xC8A784", VA = "0xC8A784")]
		public uint GetDriverName(uint nDriver, StringBuilder pchValue, uint unBufferSize)
		{
			return default(uint);
		}

		[Token(Token = "0x6001AA8")]
		[Address(RVA = "0xC8A7D4", Offset = "0xC8A7D4", VA = "0xC8A7D4")]
		public ulong GetDriverHandle(string pchDriverName)
		{
			return default(ulong);
		}
	}
	[Token(Token = "0x2000435")]
	public class OpenVRInterop
	{
		[PreserveSig]
		[Token(Token = "0x6001AA9")]
		[Address(RVA = "0xD7E3DC", Offset = "0xD7E3DC", VA = "0xD7E3DC")]
		internal static extern uint InitInternal(ref EVRInitError peError, EVRApplicationType eApplicationType);

		[PreserveSig]
		[Token(Token = "0x6001AAA")]
		[Address(RVA = "0xD7E490", Offset = "0xD7E490", VA = "0xD7E490")]
		internal static extern void ShutdownInternal();

		[PreserveSig]
		[Token(Token = "0x6001AAB")]
		[Address(RVA = "0xD7E524", Offset = "0xD7E524", VA = "0xD7E524")]
		internal static extern bool IsHmdPresent();

		[PreserveSig]
		[Token(Token = "0x6001AAC")]
		[Address(RVA = "0xD7E5C0", Offset = "0xD7E5C0", VA = "0xD7E5C0")]
		internal static extern bool IsRuntimeInstalled();

		[PreserveSig]
		[Token(Token = "0x6001AAD")]
		[Address(RVA = "0xD7E6D0", Offset = "0xD7E6D0", VA = "0xD7E6D0")]
		internal static extern IntPtr GetStringForHmdError(EVRInitError error);

		[PreserveSig]
		[Token(Token = "0x6001AAE")]
		[Address(RVA = "0xD7E774", Offset = "0xD7E774", VA = "0xD7E774")]
		internal static extern IntPtr GetGenericInterface([In] string pchInterfaceVersion, ref EVRInitError peError);

		[PreserveSig]
		[Token(Token = "0x6001AAF")]
		[Address(RVA = "0xD7E840", Offset = "0xD7E840", VA = "0xD7E840")]
		internal static extern bool IsInterfaceVersionValid([In] string pchInterfaceVersion);

		[PreserveSig]
		[Token(Token = "0x6001AB0")]
		[Address(RVA = "0xD7E900", Offset = "0xD7E900", VA = "0xD7E900")]
		internal static extern uint GetInitToken();

		[Token(Token = "0x6001AB1")]
		[Address(RVA = "0xD7FAE0", Offset = "0xD7FAE0", VA = "0xD7FAE0")]
		public OpenVRInterop()
		{
		}
	}
	[Token(Token = "0x2000436")]
	public enum EVREye
	{
		[Token(Token = "0x40010B9")]
		Eye_Left,
		[Token(Token = "0x40010BA")]
		Eye_Right
	}
	[Token(Token = "0x2000437")]
	public enum ETextureType
	{
		[Token(Token = "0x40010BC")]
		DirectX,
		[Token(Token = "0x40010BD")]
		OpenGL,
		[Token(Token = "0x40010BE")]
		Vulkan,
		[Token(Token = "0x40010BF")]
		IOSurface,
		[Token(Token = "0x40010C0")]
		DirectX12,
		[Token(Token = "0x40010C1")]
		DXGISharedHandle
	}
	[Token(Token = "0x2000438")]
	public enum EColorSpace
	{
		[Token(Token = "0x40010C3")]
		Auto,
		[Token(Token = "0x40010C4")]
		Gamma,
		[Token(Token = "0x40010C5")]
		Linear
	}
	[Token(Token = "0x2000439")]
	public enum ETrackingResult
	{
		[Token(Token = "0x40010C7")]
		Uninitialized = 1,
		[Token(Token = "0x40010C8")]
		Calibrating_InProgress = 100,
		[Token(Token = "0x40010C9")]
		Calibrating_OutOfRange = 101,
		[Token(Token = "0x40010CA")]
		Running_OK = 200,
		[Token(Token = "0x40010CB")]
		Running_OutOfRange = 201
	}
	[Token(Token = "0x200043A")]
	public enum ETrackedDeviceClass
	{
		[Token(Token = "0x40010CD")]
		Invalid,
		[Token(Token = "0x40010CE")]
		HMD,
		[Token(Token = "0x40010CF")]
		Controller,
		[Token(Token = "0x40010D0")]
		GenericTracker,
		[Token(Token = "0x40010D1")]
		TrackingReference,
		[Token(Token = "0x40010D2")]
		DisplayRedirect
	}
	[Token(Token = "0x200043B")]
	public enum ETrackedControllerRole
	{
		[Token(Token = "0x40010D4")]
		Invalid,
		[Token(Token = "0x40010D5")]
		LeftHand,
		[Token(Token = "0x40010D6")]
		RightHand,
		[Token(Token = "0x40010D7")]
		OptOut
	}
	[Token(Token = "0x200043C")]
	public enum ETrackingUniverseOrigin
	{
		[Token(Token = "0x40010D9")]
		TrackingUniverseSeated,
		[Token(Token = "0x40010DA")]
		TrackingUniverseStanding,
		[Token(Token = "0x40010DB")]
		TrackingUniverseRawAndUncalibrated
	}
	[Token(Token = "0x200043D")]
	public enum ETrackedDeviceProperty
	{
		[Token(Token = "0x40010DD")]
		Prop_Invalid = 0,
		[Token(Token = "0x40010DE")]
		Prop_TrackingSystemName_String = 1000,
		[Token(Token = "0x40010DF")]
		Prop_ModelNumber_String = 1001,
		[Token(Token = "0x40010E0")]
		Prop_SerialNumber_String = 1002,
		[Token(Token = "0x40010E1")]
		Prop_RenderModelName_String = 1003,
		[Token(Token = "0x40010E2")]
		Prop_WillDriftInYaw_Bool = 1004,
		[Token(Token = "0x40010E3")]
		Prop_ManufacturerName_String = 1005,
		[Token(Token = "0x40010E4")]
		Prop_TrackingFirmwareVersion_String = 1006,
		[Token(Token = "0x40010E5")]
		Prop_HardwareRevision_String = 1007,
		[Token(Token = "0x40010E6")]
		Prop_AllWirelessDongleDescriptions_String = 1008,
		[Token(Token = "0x40010E7")]
		Prop_ConnectedWirelessDongle_String = 1009,
		[Token(Token = "0x40010E8")]
		Prop_DeviceIsWireless_Bool = 1010,
		[Token(Token = "0x40010E9")]
		Prop_DeviceIsCharging_Bool = 1011,
		[Token(Token = "0x40010EA")]
		Prop_DeviceBatteryPercentage_Float = 1012,
		[Token(Token = "0x40010EB")]
		Prop_StatusDisplayTransform_Matrix34 = 1013,
		[Token(Token = "0x40010EC")]
		Prop_Firmware_UpdateAvailable_Bool = 1014,
		[Token(Token = "0x40010ED")]
		Prop_Firmware_ManualUpdate_Bool = 1015,
		[Token(Token = "0x40010EE")]
		Prop_Firmware_ManualUpdateURL_String = 1016,
		[Token(Token = "0x40010EF")]
		Prop_HardwareRevision_Uint64 = 1017,
		[Token(Token = "0x40010F0")]
		Prop_FirmwareVersion_Uint64 = 1018,
		[Token(Token = "0x40010F1")]
		Prop_FPGAVersion_Uint64 = 1019,
		[Token(Token = "0x40010F2")]
		Prop_VRCVersion_Uint64 = 1020,
		[Token(Token = "0x40010F3")]
		Prop_RadioVersion_Uint64 = 1021,
		[Token(Token = "0x40010F4")]
		Prop_DongleVersion_Uint64 = 1022,
		[Token(Token = "0x40010F5")]
		Prop_BlockServerShutdown_Bool = 1023,
		[Token(Token = "0x40010F6")]
		Prop_CanUnifyCoordinateSystemWithHmd_Bool = 1024,
		[Token(Token = "0x40010F7")]
		Prop_ContainsProximitySensor_Bool = 1025,
		[Token(Token = "0x40010F8")]
		Prop_DeviceProvidesBatteryStatus_Bool = 1026,
		[Token(Token = "0x40010F9")]
		Prop_DeviceCanPowerOff_Bool = 1027,
		[Token(Token = "0x40010FA")]
		Prop_Firmware_ProgrammingTarget_String = 1028,
		[Token(Token = "0x40010FB")]
		Prop_DeviceClass_Int32 = 1029,
		[Token(Token = "0x40010FC")]
		Prop_HasCamera_Bool = 1030,
		[Token(Token = "0x40010FD")]
		Prop_DriverVersion_String = 1031,
		[Token(Token = "0x40010FE")]
		Prop_Firmware_ForceUpdateRequired_Bool = 1032,
		[Token(Token = "0x40010FF")]
		Prop_ViveSystemButtonFixRequired_Bool = 1033,
		[Token(Token = "0x4001100")]
		Prop_ParentDriver_Uint64 = 1034,
		[Token(Token = "0x4001101")]
		Prop_ResourceRoot_String = 1035,
		[Token(Token = "0x4001102")]
		Prop_RegisteredDeviceType_String = 1036,
		[Token(Token = "0x4001103")]
		Prop_InputProfilePath_String = 1037,
		[Token(Token = "0x4001104")]
		Prop_NeverTracked_Bool = 1038,
		[Token(Token = "0x4001105")]
		Prop_ReportsTimeSinceVSync_Bool = 2000,
		[Token(Token = "0x4001106")]
		Prop_SecondsFromVsyncToPhotons_Float = 2001,
		[Token(Token = "0x4001107")]
		Prop_DisplayFrequency_Float = 2002,
		[Token(Token = "0x4001108")]
		Prop_UserIpdMeters_Float = 2003,
		[Token(Token = "0x4001109")]
		Prop_CurrentUniverseId_Uint64 = 2004,
		[Token(Token = "0x400110A")]
		Prop_PreviousUniverseId_Uint64 = 2005,
		[Token(Token = "0x400110B")]
		Prop_DisplayFirmwareVersion_Uint64 = 2006,
		[Token(Token = "0x400110C")]
		Prop_IsOnDesktop_Bool = 2007,
		[Token(Token = "0x400110D")]
		Prop_DisplayMCType_Int32 = 2008,
		[Token(Token = "0x400110E")]
		Prop_DisplayMCOffset_Float = 2009,
		[Token(Token = "0x400110F")]
		Prop_DisplayMCScale_Float = 2010,
		[Token(Token = "0x4001110")]
		Prop_EdidVendorID_Int32 = 2011,
		[Token(Token = "0x4001111")]
		Prop_DisplayMCImageLeft_String = 2012,
		[Token(Token = "0x4001112")]
		Prop_DisplayMCImageRight_String = 2013,
		[Token(Token = "0x4001113")]
		Prop_DisplayGCBlackClamp_Float = 2014,
		[Token(Token = "0x4001114")]
		Prop_EdidProductID_Int32 = 2015,
		[Token(Token = "0x4001115")]
		Prop_CameraToHeadTransform_Matrix34 = 2016,
		[Token(Token = "0x4001116")]
		Prop_DisplayGCType_Int32 = 2017,
		[Token(Token = "0x4001117")]
		Prop_DisplayGCOffset_Float = 2018,
		[Token(Token = "0x4001118")]
		Prop_DisplayGCScale_Float = 2019,
		[Token(Token = "0x4001119")]
		Prop_DisplayGCPrescale_Float = 2020,
		[Token(Token = "0x400111A")]
		Prop_DisplayGCImage_String = 2021,
		[Token(Token = "0x400111B")]
		Prop_LensCenterLeftU_Float = 2022,
		[Token(Token = "0x400111C")]
		Prop_LensCenterLeftV_Float = 2023,
		[Token(Token = "0x400111D")]
		Prop_LensCenterRightU_Float = 2024,
		[Token(Token = "0x400111E")]
		Prop_LensCenterRightV_Float = 2025,
		[Token(Token = "0x400111F")]
		Prop_UserHeadToEyeDepthMeters_Float = 2026,
		[Token(Token = "0x4001120")]
		Prop_CameraFirmwareVersion_Uint64 = 2027,
		[Token(Token = "0x4001121")]
		Prop_CameraFirmwareDescription_String = 2028,
		[Token(Token = "0x4001122")]
		Prop_DisplayFPGAVersion_Uint64 = 2029,
		[Token(Token = "0x4001123")]
		Prop_DisplayBootloaderVersion_Uint64 = 2030,
		[Token(Token = "0x4001124")]
		Prop_DisplayHardwareVersion_Uint64 = 2031,
		[Token(Token = "0x4001125")]
		Prop_AudioFirmwareVersion_Uint64 = 2032,
		[Token(Token = "0x4001126")]
		Prop_CameraCompatibilityMode_Int32 = 2033,
		[Token(Token = "0x4001127")]
		Prop_ScreenshotHorizontalFieldOfViewDegrees_Float = 2034,
		[Token(Token = "0x4001128")]
		Prop_ScreenshotVerticalFieldOfViewDegrees_Float = 2035,
		[Token(Token = "0x4001129")]
		Prop_DisplaySuppressed_Bool = 2036,
		[Token(Token = "0x400112A")]
		Prop_DisplayAllowNightMode_Bool = 2037,
		[Token(Token = "0x400112B")]
		Prop_DisplayMCImageWidth_Int32 = 2038,
		[Token(Token = "0x400112C")]
		Prop_DisplayMCImageHeight_Int32 = 2039,
		[Token(Token = "0x400112D")]
		Prop_DisplayMCImageNumChannels_Int32 = 2040,
		[Token(Token = "0x400112E")]
		Prop_DisplayMCImageData_Binary = 2041,
		[Token(Token = "0x400112F")]
		Prop_SecondsFromPhotonsToVblank_Float = 2042,
		[Token(Token = "0x4001130")]
		Prop_DriverDirectModeSendsVsyncEvents_Bool = 2043,
		[Token(Token = "0x4001131")]
		Prop_DisplayDebugMode_Bool = 2044,
		[Token(Token = "0x4001132")]
		Prop_GraphicsAdapterLuid_Uint64 = 2045,
		[Token(Token = "0x4001133")]
		Prop_DriverProvidedChaperonePath_String = 2048,
		[Token(Token = "0x4001134")]
		Prop_ExpectedTrackingReferenceCount_Int32 = 2049,
		[Token(Token = "0x4001135")]
		Prop_ExpectedControllerCount_Int32 = 2050,
		[Token(Token = "0x4001136")]
		Prop_NamedIconPathControllerLeftDeviceOff_String = 2051,
		[Token(Token = "0x4001137")]
		Prop_NamedIconPathControllerRightDeviceOff_String = 2052,
		[Token(Token = "0x4001138")]
		Prop_NamedIconPathTrackingReferenceDeviceOff_String = 2053,
		[Token(Token = "0x4001139")]
		Prop_DoNotApplyPrediction_Bool = 2054,
		[Token(Token = "0x400113A")]
		Prop_CameraToHeadTransforms_Matrix34_Array = 2055,
		[Token(Token = "0x400113B")]
		Prop_DistortionMeshResolution_Int32 = 2056,
		[Token(Token = "0x400113C")]
		Prop_DriverIsDrawingControllers_Bool = 2057,
		[Token(Token = "0x400113D")]
		Prop_DriverRequestsApplicationPause_Bool = 2058,
		[Token(Token = "0x400113E")]
		Prop_DriverRequestsReducedRendering_Bool = 2059,
		[Token(Token = "0x400113F")]
		Prop_MinimumIpdStepMeters_Float = 2060,
		[Token(Token = "0x4001140")]
		Prop_AudioBridgeFirmwareVersion_Uint64 = 2061,
		[Token(Token = "0x4001141")]
		Prop_ImageBridgeFirmwareVersion_Uint64 = 2062,
		[Token(Token = "0x4001142")]
		Prop_AttachedDeviceId_String = 3000,
		[Token(Token = "0x4001143")]
		Prop_SupportedButtons_Uint64 = 3001,
		[Token(Token = "0x4001144")]
		Prop_Axis0Type_Int32 = 3002,
		[Token(Token = "0x4001145")]
		Prop_Axis1Type_Int32 = 3003,
		[Token(Token = "0x4001146")]
		Prop_Axis2Type_Int32 = 3004,
		[Token(Token = "0x4001147")]
		Prop_Axis3Type_Int32 = 3005,
		[Token(Token = "0x4001148")]
		Prop_Axis4Type_Int32 = 3006,
		[Token(Token = "0x4001149")]
		Prop_ControllerRoleHint_Int32 = 3007,
		[Token(Token = "0x400114A")]
		Prop_FieldOfViewLeftDegrees_Float = 4000,
		[Token(Token = "0x400114B")]
		Prop_FieldOfViewRightDegrees_Float = 4001,
		[Token(Token = "0x400114C")]
		Prop_FieldOfViewTopDegrees_Float = 4002,
		[Token(Token = "0x400114D")]
		Prop_FieldOfViewBottomDegrees_Float = 4003,
		[Token(Token = "0x400114E")]
		Prop_TrackingRangeMinimumMeters_Float = 4004,
		[Token(Token = "0x400114F")]
		Prop_TrackingRangeMaximumMeters_Float = 4005,
		[Token(Token = "0x4001150")]
		Prop_ModeLabel_String = 4006,
		[Token(Token = "0x4001151")]
		Prop_IconPathName_String = 5000,
		[Token(Token = "0x4001152")]
		Prop_NamedIconPathDeviceOff_String = 5001,
		[Token(Token = "0x4001153")]
		Prop_NamedIconPathDeviceSearching_String = 5002,
		[Token(Token = "0x4001154")]
		Prop_NamedIconPathDeviceSearchingAlert_String = 5003,
		[Token(Token = "0x4001155")]
		Prop_NamedIconPathDeviceReady_String = 5004,
		[Token(Token = "0x4001156")]
		Prop_NamedIconPathDeviceReadyAlert_String = 5005,
		[Token(Token = "0x4001157")]
		Prop_NamedIconPathDeviceNotReady_String = 5006,
		[Token(Token = "0x4001158")]
		Prop_NamedIconPathDeviceStandby_String = 5007,
		[Token(Token = "0x4001159")]
		Prop_NamedIconPathDeviceAlertLow_String = 5008,
		[Token(Token = "0x400115A")]
		Prop_DisplayHiddenArea_Binary_Start = 5100,
		[Token(Token = "0x400115B")]
		Prop_DisplayHiddenArea_Binary_End = 5150,
		[Token(Token = "0x400115C")]
		Prop_ParentContainer = 5151,
		[Token(Token = "0x400115D")]
		Prop_UserConfigPath_String = 6000,
		[Token(Token = "0x400115E")]
		Prop_InstallPath_String = 6001,
		[Token(Token = "0x400115F")]
		Prop_HasDisplayComponent_Bool = 6002,
		[Token(Token = "0x4001160")]
		Prop_HasControllerComponent_Bool = 6003,
		[Token(Token = "0x4001161")]
		Prop_HasCameraComponent_Bool = 6004,
		[Token(Token = "0x4001162")]
		Prop_HasDriverDirectModeComponent_Bool = 6005,
		[Token(Token = "0x4001163")]
		Prop_HasVirtualDisplayComponent_Bool = 6006,
		[Token(Token = "0x4001164")]
		Prop_ControllerType_String = 7000,
		[Token(Token = "0x4001165")]
		Prop_LegacyInputProfile_String = 7001,
		[Token(Token = "0x4001166")]
		Prop_VendorSpecific_Reserved_Start = 10000,
		[Token(Token = "0x4001167")]
		Prop_VendorSpecific_Reserved_End = 10999,
		[Token(Token = "0x4001168")]
		Prop_TrackedDeviceProperty_Max = 1000000
	}
	[Token(Token = "0x200043E")]
	public enum ETrackedPropertyError
	{
		[Token(Token = "0x400116A")]
		TrackedProp_Success,
		[Token(Token = "0x400116B")]
		TrackedProp_WrongDataType,
		[Token(Token = "0x400116C")]
		TrackedProp_WrongDeviceClass,
		[Token(Token = "0x400116D")]
		TrackedProp_BufferTooSmall,
		[Token(Token = "0x400116E")]
		TrackedProp_UnknownProperty,
		[Token(Token = "0x400116F")]
		TrackedProp_InvalidDevice,
		[Token(Token = "0x4001170")]
		TrackedProp_CouldNotContactServer,
		[Token(Token = "0x4001171")]
		TrackedProp_ValueNotProvidedByDevice,
		[Token(Token = "0x4001172")]
		TrackedProp_StringExceedsMaximumLength,
		[Token(Token = "0x4001173")]
		TrackedProp_NotYetAvailable,
		[Token(Token = "0x4001174")]
		TrackedProp_PermissionDenied,
		[Token(Token = "0x4001175")]
		TrackedProp_InvalidOperation,
		[Token(Token = "0x4001176")]
		TrackedProp_CannotWriteToWildcards
	}
	[Token(Token = "0x200043F")]
	public enum EVRSubmitFlags
	{
		[Token(Token = "0x4001178")]
		Submit_Default = 0,
		[Token(Token = "0x4001179")]
		Submit_LensDistortionAlreadyApplied = 1,
		[Token(Token = "0x400117A")]
		Submit_GlRenderBuffer = 2,
		[Token(Token = "0x400117B")]
		Submit_Reserved = 4,
		[Token(Token = "0x400117C")]
		Submit_TextureWithPose = 8,
		[Token(Token = "0x400117D")]
		Submit_TextureWithDepth = 0x10
	}
	[Token(Token = "0x2000440")]
	public enum EVRState
	{
		[Token(Token = "0x400117F")]
		Undefined = -1,
		[Token(Token = "0x4001180")]
		Off,
		[Token(Token = "0x4001181")]
		Searching,
		[Token(Token = "0x4001182")]
		Searching_Alert,
		[Token(Token = "0x4001183")]
		Ready,
		[Token(Token = "0x4001184")]
		Ready_Alert,
		[Token(Token = "0x4001185")]
		NotReady,
		[Token(Token = "0x4001186")]
		Standby,
		[Token(Token = "0x4001187")]
		Ready_Alert_Low
	}
	[Token(Token = "0x2000441")]
	public enum EVREventType
	{
		[Token(Token = "0x4001189")]
		VREvent_None = 0,
		[Token(Token = "0x400118A")]
		VREvent_TrackedDeviceActivated = 100,
		[Token(Token = "0x400118B")]
		VREvent_TrackedDeviceDeactivated = 101,
		[Token(Token = "0x400118C")]
		VREvent_TrackedDeviceUpdated = 102,
		[Token(Token = "0x400118D")]
		VREvent_TrackedDeviceUserInteractionStarted = 103,
		[Token(Token = "0x400118E")]
		VREvent_TrackedDeviceUserInteractionEnded = 104,
		[Token(Token = "0x400118F")]
		VREvent_IpdChanged = 105,
		[Token(Token = "0x4001190")]
		VREvent_EnterStandbyMode = 106,
		[Token(Token = "0x4001191")]
		VREvent_LeaveStandbyMode = 107,
		[Token(Token = "0x4001192")]
		VREvent_TrackedDeviceRoleChanged = 108,
		[Token(Token = "0x4001193")]
		VREvent_WatchdogWakeUpRequested = 109,
		[Token(Token = "0x4001194")]
		VREvent_LensDistortionChanged = 110,
		[Token(Token = "0x4001195")]
		VREvent_PropertyChanged = 111,
		[Token(Token = "0x4001196")]
		VREvent_WirelessDisconnect = 112,
		[Token(Token = "0x4001197")]
		VREvent_WirelessReconnect = 113,
		[Token(Token = "0x4001198")]
		VREvent_ButtonPress = 200,
		[Token(Token = "0x4001199")]
		VREvent_ButtonUnpress = 201,
		[Token(Token = "0x400119A")]
		VREvent_ButtonTouch = 202,
		[Token(Token = "0x400119B")]
		VREvent_ButtonUntouch = 203,
		[Token(Token = "0x400119C")]
		VREvent_DualAnalog_Press = 250,
		[Token(Token = "0x400119D")]
		VREvent_DualAnalog_Unpress = 251,
		[Token(Token = "0x400119E")]
		VREvent_DualAnalog_Touch = 252,
		[Token(Token = "0x400119F")]
		VREvent_DualAnalog_Untouch = 253,
		[Token(Token = "0x40011A0")]
		VREvent_DualAnalog_Move = 254,
		[Token(Token = "0x40011A1")]
		VREvent_DualAnalog_ModeSwitch1 = 255,
		[Token(Token = "0x40011A2")]
		VREvent_DualAnalog_ModeSwitch2 = 256,
		[Token(Token = "0x40011A3")]
		VREvent_DualAnalog_Cancel = 257,
		[Token(Token = "0x40011A4")]
		VREvent_MouseMove = 300,
		[Token(Token = "0x40011A5")]
		VREvent_MouseButtonDown = 301,
		[Token(Token = "0x40011A6")]
		VREvent_MouseButtonUp = 302,
		[Token(Token = "0x40011A7")]
		VREvent_FocusEnter = 303,
		[Token(Token = "0x40011A8")]
		VREvent_FocusLeave = 304,
		[Token(Token = "0x40011A9")]
		VREvent_Scroll = 305,
		[Token(Token = "0x40011AA")]
		VREvent_TouchPadMove = 306,
		[Token(Token = "0x40011AB")]
		VREvent_OverlayFocusChanged = 307,
		[Token(Token = "0x40011AC")]
		VREvent_InputFocusCaptured = 400,
		[Token(Token = "0x40011AD")]
		VREvent_InputFocusReleased = 401,
		[Token(Token = "0x40011AE")]
		VREvent_SceneFocusLost = 402,
		[Token(Token = "0x40011AF")]
		VREvent_SceneFocusGained = 403,
		[Token(Token = "0x40011B0")]
		VREvent_SceneApplicationChanged = 404,
		[Token(Token = "0x40011B1")]
		VREvent_SceneFocusChanged = 405,
		[Token(Token = "0x40011B2")]
		VREvent_InputFocusChanged = 406,
		[Token(Token = "0x40011B3")]
		VREvent_SceneApplicationSecondaryRenderingStarted = 407,
		[Token(Token = "0x40011B4")]
		VREvent_SceneApplicationUsingWrongGraphicsAdapter = 408,
		[Token(Token = "0x40011B5")]
		VREvent_HideRenderModels = 410,
		[Token(Token = "0x40011B6")]
		VREvent_ShowRenderModels = 411,
		[Token(Token = "0x40011B7")]
		VREvent_ConsoleOpened = 420,
		[Token(Token = "0x40011B8")]
		VREvent_ConsoleClosed = 421,
		[Token(Token = "0x40011B9")]
		VREvent_OverlayShown = 500,
		[Token(Token = "0x40011BA")]
		VREvent_OverlayHidden = 501,
		[Token(Token = "0x40011BB")]
		VREvent_DashboardActivated = 502,
		[Token(Token = "0x40011BC")]
		VREvent_DashboardDeactivated = 503,
		[Token(Token = "0x40011BD")]
		VREvent_DashboardThumbSelected = 504,
		[Token(Token = "0x40011BE")]
		VREvent_DashboardRequested = 505,
		[Token(Token = "0x40011BF")]
		VREvent_ResetDashboard = 506,
		[Token(Token = "0x40011C0")]
		VREvent_RenderToast = 507,
		[Token(Token = "0x40011C1")]
		VREvent_ImageLoaded = 508,
		[Token(Token = "0x40011C2")]
		VREvent_ShowKeyboard = 509,
		[Token(Token = "0x40011C3")]
		VREvent_HideKeyboard = 510,
		[Token(Token = "0x40011C4")]
		VREvent_OverlayGamepadFocusGained = 511,
		[Token(Token = "0x40011C5")]
		VREvent_OverlayGamepadFocusLost = 512,
		[Token(Token = "0x40011C6")]
		VREvent_OverlaySharedTextureChanged = 513,
		[Token(Token = "0x40011C7")]
		VREvent_ScreenshotTriggered = 516,
		[Token(Token = "0x40011C8")]
		VREvent_ImageFailed = 517,
		[Token(Token = "0x40011C9")]
		VREvent_DashboardOverlayCreated = 518,
		[Token(Token = "0x40011CA")]
		VREvent_SwitchGamepadFocus = 519,
		[Token(Token = "0x40011CB")]
		VREvent_RequestScreenshot = 520,
		[Token(Token = "0x40011CC")]
		VREvent_ScreenshotTaken = 521,
		[Token(Token = "0x40011CD")]
		VREvent_ScreenshotFailed = 522,
		[Token(Token = "0x40011CE")]
		VREvent_SubmitScreenshotToDashboard = 523,
		[Token(Token = "0x40011CF")]
		VREvent_ScreenshotProgressToDashboard = 524,
		[Token(Token = "0x40011D0")]
		VREvent_PrimaryDashboardDeviceChanged = 525,
		[Token(Token = "0x40011D1")]
		VREvent_RoomViewShown = 526,
		[Token(Token = "0x40011D2")]
		VREvent_RoomViewHidden = 527,
		[Token(Token = "0x40011D3")]
		VREvent_Notification_Shown = 600,
		[Token(Token = "0x40011D4")]
		VREvent_Notification_Hidden = 601,
		[Token(Token = "0x40011D5")]
		VREvent_Notification_BeginInteraction = 602,
		[Token(Token = "0x40011D6")]
		VREvent_Notification_Destroyed = 603,
		[Token(Token = "0x40011D7")]
		VREvent_Quit = 700,
		[Token(Token = "0x40011D8")]
		VREvent_ProcessQuit = 701,
		[Token(Token = "0x40011D9")]
		VREvent_QuitAborted_UserPrompt = 702,
		[Token(Token = "0x40011DA")]
		VREvent_QuitAcknowledged = 703,
		[Token(Token = "0x40011DB")]
		VREvent_DriverRequestedQuit = 704,
		[Token(Token = "0x40011DC")]
		VREvent_ChaperoneDataHasChanged = 800,
		[Token(Token = "0x40011DD")]
		VREvent_ChaperoneUniverseHasChanged = 801,
		[Token(Token = "0x40011DE")]
		VREvent_ChaperoneTempDataHasChanged = 802,
		[Token(Token = "0x40011DF")]
		VREvent_ChaperoneSettingsHaveChanged = 803,
		[Token(Token = "0x40011E0")]
		VREvent_SeatedZeroPoseReset = 804,
		[Token(Token = "0x40011E1")]
		VREvent_AudioSettingsHaveChanged = 820,
		[Token(Token = "0x40011E2")]
		VREvent_BackgroundSettingHasChanged = 850,
		[Token(Token = "0x40011E3")]
		VREvent_CameraSettingsHaveChanged = 851,
		[Token(Token = "0x40011E4")]
		VREvent_ReprojectionSettingHasChanged = 852,
		[Token(Token = "0x40011E5")]
		VREvent_ModelSkinSettingsHaveChanged = 853,
		[Token(Token = "0x40011E6")]
		VREvent_EnvironmentSettingsHaveChanged = 854,
		[Token(Token = "0x40011E7")]
		VREvent_PowerSettingsHaveChanged = 855,
		[Token(Token = "0x40011E8")]
		VREvent_EnableHomeAppSettingsHaveChanged = 856,
		[Token(Token = "0x40011E9")]
		VREvent_SteamVRSectionSettingChanged = 857,
		[Token(Token = "0x40011EA")]
		VREvent_LighthouseSectionSettingChanged = 858,
		[Token(Token = "0x40011EB")]
		VREvent_NullSectionSettingChanged = 859,
		[Token(Token = "0x40011EC")]
		VREvent_UserInterfaceSectionSettingChanged = 860,
		[Token(Token = "0x40011ED")]
		VREvent_NotificationsSectionSettingChanged = 861,
		[Token(Token = "0x40011EE")]
		VREvent_KeyboardSectionSettingChanged = 862,
		[Token(Token = "0x40011EF")]
		VREvent_PerfSectionSettingChanged = 863,
		[Token(Token = "0x40011F0")]
		VREvent_DashboardSectionSettingChanged = 864,
		[Token(Token = "0x40011F1")]
		VREvent_WebInterfaceSectionSettingChanged = 865,
		[Token(Token = "0x40011F2")]
		VREvent_StatusUpdate = 900,
		[Token(Token = "0x40011F3")]
		VREvent_WebInterface_InstallDriverCompleted = 950,
		[Token(Token = "0x40011F4")]
		VREvent_MCImageUpdated = 1000,
		[Token(Token = "0x40011F5")]
		VREvent_FirmwareUpdateStarted = 1100,
		[Token(Token = "0x40011F6")]
		VREvent_FirmwareUpdateFinished = 1101,
		[Token(Token = "0x40011F7")]
		VREvent_KeyboardClosed = 1200,
		[Token(Token = "0x40011F8")]
		VREvent_KeyboardCharInput = 1201,
		[Token(Token = "0x40011F9")]
		VREvent_KeyboardDone = 1202,
		[Token(Token = "0x40011FA")]
		VREvent_ApplicationTransitionStarted = 1300,
		[Token(Token = "0x40011FB")]
		VREvent_ApplicationTransitionAborted = 1301,
		[Token(Token = "0x40011FC")]
		VREvent_ApplicationTransitionNewAppStarted = 1302,
		[Token(Token = "0x40011FD")]
		VREvent_ApplicationListUpdated = 1303,
		[Token(Token = "0x40011FE")]
		VREvent_ApplicationMimeTypeLoad = 1304,
		[Token(Token = "0x40011FF")]
		VREvent_ApplicationTransitionNewAppLaunchComplete = 1305,
		[Token(Token = "0x4001200")]
		VREvent_ProcessConnected = 1306,
		[Token(Token = "0x4001201")]
		VREvent_ProcessDisconnected = 1307,
		[Token(Token = "0x4001202")]
		VREvent_Compositor_MirrorWindowShown = 1400,
		[Token(Token = "0x4001203")]
		VREvent_Compositor_MirrorWindowHidden = 1401,
		[Token(Token = "0x4001204")]
		VREvent_Compositor_ChaperoneBoundsShown = 1410,
		[Token(Token = "0x4001205")]
		VREvent_Compositor_ChaperoneBoundsHidden = 1411,
		[Token(Token = "0x4001206")]
		VREvent_TrackedCamera_StartVideoStream = 1500,
		[Token(Token = "0x4001207")]
		VREvent_TrackedCamera_StopVideoStream = 1501,
		[Token(Token = "0x4001208")]
		VREvent_TrackedCamera_PauseVideoStream = 1502,
		[Token(Token = "0x4001209")]
		VREvent_TrackedCamera_ResumeVideoStream = 1503,
		[Token(Token = "0x400120A")]
		VREvent_TrackedCamera_EditingSurface = 1550,
		[Token(Token = "0x400120B")]
		VREvent_PerformanceTest_EnableCapture = 1600,
		[Token(Token = "0x400120C")]
		VREvent_PerformanceTest_DisableCapture = 1601,
		[Token(Token = "0x400120D")]
		VREvent_PerformanceTest_FidelityLevel = 1602,
		[Token(Token = "0x400120E")]
		VREvent_MessageOverlay_Closed = 1650,
		[Token(Token = "0x400120F")]
		VREvent_MessageOverlayCloseRequested = 1651,
		[Token(Token = "0x4001210")]
		VREvent_Input_HapticVibration = 1700,
		[Token(Token = "0x4001211")]
		VREvent_VendorSpecific_Reserved_Start = 10000,
		[Token(Token = "0x4001212")]
		VREvent_VendorSpecific_Reserved_End = 19999
	}
	[Token(Token = "0x2000442")]
	public enum EDeviceActivityLevel
	{
		[Token(Token = "0x4001214")]
		k_EDeviceActivityLevel_Unknown = -1,
		[Token(Token = "0x4001215")]
		k_EDeviceActivityLevel_Idle,
		[Token(Token = "0x4001216")]
		k_EDeviceActivityLevel_UserInteraction,
		[Token(Token = "0x4001217")]
		k_EDeviceActivityLevel_UserInteraction_Timeout,
		[Token(Token = "0x4001218")]
		k_EDeviceActivityLevel_Standby
	}
	[Token(Token = "0x2000443")]
	public enum EVRButtonId
	{
		[Token(Token = "0x400121A")]
		k_EButton_System = 0,
		[Token(Token = "0x400121B")]
		k_EButton_ApplicationMenu = 1,
		[Token(Token = "0x400121C")]
		k_EButton_Grip = 2,
		[Token(Token = "0x400121D")]
		k_EButton_DPad_Left = 3,
		[Token(Token = "0x400121E")]
		k_EButton_DPad_Up = 4,
		[Token(Token = "0x400121F")]
		k_EButton_DPad_Right = 5,
		[Token(Token = "0x4001220")]
		k_EButton_DPad_Down = 6,
		[Token(Token = "0x4001221")]
		k_EButton_A = 7,
		[Token(Token = "0x4001222")]
		k_EButton_ProximitySensor = 31,
		[Token(Token = "0x4001223")]
		k_EButton_Axis0 = 32,
		[Token(Token = "0x4001224")]
		k_EButton_Axis1 = 33,
		[Token(Token = "0x4001225")]
		k_EButton_Axis2 = 34,
		[Token(Token = "0x4001226")]
		k_EButton_Axis3 = 35,
		[Token(Token = "0x4001227")]
		k_EButton_Axis4 = 36,
		[Token(Token = "0x4001228")]
		k_EButton_SteamVR_Touchpad = 32,
		[Token(Token = "0x4001229")]
		k_EButton_SteamVR_Trigger = 33,
		[Token(Token = "0x400122A")]
		k_EButton_Dashboard_Back = 2,
		[Token(Token = "0x400122B")]
		k_EButton_Max = 64
	}
	[Token(Token = "0x2000444")]
	public enum EVRMouseButton
	{
		[Token(Token = "0x400122D")]
		Left = 1,
		[Token(Token = "0x400122E")]
		Right = 2,
		[Token(Token = "0x400122F")]
		Middle = 4
	}
	[Token(Token = "0x2000445")]
	public enum EDualAnalogWhich
	{
		[Token(Token = "0x4001231")]
		k_EDualAnalog_Left,
		[Token(Token = "0x4001232")]
		k_EDualAnalog_Right
	}
	[Token(Token = "0x2000446")]
	public enum EVRInputError
	{
		[Token(Token = "0x4001234")]
		None,
		[Token(Token = "0x4001235")]
		NameNotFound,
		[Token(Token = "0x4001236")]
		WrongType,
		[Token(Token = "0x4001237")]
		InvalidHandle,
		[Token(Token = "0x4001238")]
		InvalidParam,
		[Token(Token = "0x4001239")]
		NoSteam,
		[Token(Token = "0x400123A")]
		MaxCapacityReached,
		[Token(Token = "0x400123B")]
		IPCError,
		[Token(Token = "0x400123C")]
		NoActiveActionSet,
		[Token(Token = "0x400123D")]
		InvalidDevice
	}
	[Token(Token = "0x2000447")]
	public enum EHiddenAreaMeshType
	{
		[Token(Token = "0x400123F")]
		k_eHiddenAreaMesh_Standard,
		[Token(Token = "0x4001240")]
		k_eHiddenAreaMesh_Inverse,
		[Token(Token = "0x4001241")]
		k_eHiddenAreaMesh_LineLoop,
		[Token(Token = "0x4001242")]
		k_eHiddenAreaMesh_Max
	}
	[Token(Token = "0x2000448")]
	public enum EVRControllerAxisType
	{
		[Token(Token = "0x4001244")]
		k_eControllerAxis_None,
		[Token(Token = "0x4001245")]
		k_eControllerAxis_TrackPad,
		[Token(Token = "0x4001246")]
		k_eControllerAxis_Joystick,
		[Token(Token = "0x4001247")]
		k_eControllerAxis_Trigger
	}
	[Token(Token = "0x2000449")]
	public enum EVRControllerEventOutputType
	{
		[Token(Token = "0x4001249")]
		ControllerEventOutput_OSEvents,
		[Token(Token = "0x400124A")]
		ControllerEventOutput_VREvents
	}
	[Token(Token = "0x200044A")]
	public enum ECollisionBoundsStyle
	{
		[Token(Token = "0x400124C")]
		COLLISION_BOUNDS_STYLE_BEGINNER,
		[Token(Token = "0x400124D")]
		COLLISION_BOUNDS_STYLE_INTERMEDIATE,
		[Token(Token = "0x400124E")]
		COLLISION_BOUNDS_STYLE_SQUARES,
		[Token(Token = "0x400124F")]
		COLLISION_BOUNDS_STYLE_ADVANCED,
		[Token(Token = "0x4001250")]
		COLLISION_BOUNDS_STYLE_NONE,
		[Token(Token = "0x4001251")]
		COLLISION_BOUNDS_STYLE_COUNT
	}
	[Token(Token = "0x200044B")]
	public enum EVROverlayError
	{
		[Token(Token = "0x4001253")]
		None = 0,
		[Token(Token = "0x4001254")]
		UnknownOverlay = 10,
		[Token(Token = "0x4001255")]
		InvalidHandle = 11,
		[Token(Token = "0x4001256")]
		PermissionDenied = 12,
		[Token(Token = "0x4001257")]
		OverlayLimitExceeded = 13,
		[Token(Token = "0x4001258")]
		WrongVisibilityType = 14,
		[Token(Token = "0x4001259")]
		KeyTooLong = 15,
		[Token(Token = "0x400125A")]
		NameTooLong = 16,
		[Token(Token = "0x400125B")]
		KeyInUse = 17,
		[Token(Token = "0x400125C")]
		WrongTransformType = 18,
		[Token(Token = "0x400125D")]
		InvalidTrackedDevice = 19,
		[Token(Token = "0x400125E")]
		InvalidParameter = 20,
		[Token(Token = "0x400125F")]
		ThumbnailCantBeDestroyed = 21,
		[Token(Token = "0x4001260")]
		ArrayTooSmall = 22,
		[Token(Token = "0x4001261")]
		RequestFailed = 23,
		[Token(Token = "0x4001262")]
		InvalidTexture = 24,
		[Token(Token = "0x4001263")]
		UnableToLoadFile = 25,
		[Token(Token = "0x4001264")]
		KeyboardAlreadyInUse = 26,
		[Token(Token = "0x4001265")]
		NoNeighbor = 27,
		[Token(Token = "0x4001266")]
		TooManyMaskPrimitives = 29,
		[Token(Token = "0x4001267")]
		BadMaskPrimitive = 30,
		[Token(Token = "0x4001268")]
		TextureAlreadyLocked = 31,
		[Token(Token = "0x4001269")]
		TextureLockCapacityReached = 32,
		[Token(Token = "0x400126A")]
		TextureNotLocked = 33
	}
	[Token(Token = "0x200044C")]
	public enum EVRApplicationType
	{
		[Token(Token = "0x400126C")]
		VRApplication_Other,
		[Token(Token = "0x400126D")]
		VRApplication_Scene,
		[Token(Token = "0x400126E")]
		VRApplication_Overlay,
		[Token(Token = "0x400126F")]
		VRApplication_Background,
		[Token(Token = "0x4001270")]
		VRApplication_Utility,
		[Token(Token = "0x4001271")]
		VRApplication_VRMonitor,
		[Token(Token = "0x4001272")]
		VRApplication_SteamWatchdog,
		[Token(Token = "0x4001273")]
		VRApplication_Bootstrapper,
		[Token(Token = "0x4001274")]
		VRApplication_Max
	}
	[Token(Token = "0x200044D")]
	public enum EVRFirmwareError
	{
		[Token(Token = "0x4001276")]
		None,
		[Token(Token = "0x4001277")]
		Success,
		[Token(Token = "0x4001278")]
		Fail
	}
	[Token(Token = "0x200044E")]
	public enum EVRNotificationError
	{
		[Token(Token = "0x400127A")]
		OK = 0,
		[Token(Token = "0x400127B")]
		InvalidNotificationId = 100,
		[Token(Token = "0x400127C")]
		NotificationQueueFull = 101,
		[Token(Token = "0x400127D")]
		InvalidOverlayHandle = 102,
		[Token(Token = "0x400127E")]
		SystemWithUserValueAlreadyExists = 103
	}
	[Token(Token = "0x200044F")]
	public enum EVRInitError
	{
		[Token(Token = "0x4001280")]
		None = 0,
		[Token(Token = "0x4001281")]
		Unknown = 1,
		[Token(Token = "0x4001282")]
		Init_InstallationNotFound = 100,
		[Token(Token = "0x4001283")]
		Init_InstallationCorrupt = 101,
		[Token(Token = "0x4001284")]
		Init_VRClientDLLNotFound = 102,
		[Token(Token = "0x4001285")]
		Init_FileNotFound = 103,
		[Token(Token = "0x4001286")]
		Init_FactoryNotFound = 104,
		[Token(Token = "0x4001287")]
		Init_InterfaceNotFound = 105,
		[Token(Token = "0x4001288")]
		Init_InvalidInterface = 106,
		[Token(Token = "0x4001289")]
		Init_UserConfigDirectoryInvalid = 107,
		[Token(Token = "0x400128A")]
		Init_HmdNotFound = 108,
		[Token(Token = "0x400128B")]
		Init_NotInitialized = 109,
		[Token(Token = "0x400128C")]
		Init_PathRegistryNotFound = 110,
		[Token(Token = "0x400128D")]
		Init_NoConfigPath = 111,
		[Token(Token = "0x400128E")]
		Init_NoLogPath = 112,
		[Token(Token = "0x400128F")]
		Init_PathRegistryNotWritable = 113,
		[Token(Token = "0x4001290")]
		Init_AppInfoInitFailed = 114,
		[Token(Token = "0x4001291")]
		Init_Retry = 115,
		[Token(Token = "0x4001292")]
		Init_InitCanceledByUser = 116,
		[Token(Token = "0x4001293")]
		Init_AnotherAppLaunching = 117,
		[Token(Token = "0x4001294")]
		Init_SettingsInitFailed = 118,
		[Token(Token = "0x4001295")]
		Init_ShuttingDown = 119,
		[Token(Token = "0x4001296")]
		Init_TooManyObjects = 120,
		[Token(Token = "0x4001297")]
		Init_NoServerForBackgroundApp = 121,
		[Token(Token = "0x4001298")]
		Init_NotSupportedWithCompositor = 122,
		[Token(Token = "0x4001299")]
		Init_NotAvailableToUtilityApps = 123,
		[Token(Token = "0x400129A")]
		Init_Internal = 124,
		[Token(Token = "0x400129B")]
		Init_HmdDriverIdIsNone = 125,
		[Token(Token = "0x400129C")]
		Init_HmdNotFoundPresenceFailed = 126,
		[Token(Token = "0x400129D")]
		Init_VRMonitorNotFound = 127,
		[Token(Token = "0x400129E")]
		Init_VRMonitorStartupFailed = 128,
		[Token(Token = "0x400129F")]
		Init_LowPowerWatchdogNotSupported = 129,
		[Token(Token = "0x40012A0")]
		Init_InvalidApplicationType = 130,
		[Token(Token = "0x40012A1")]
		Init_NotAvailableToWatchdogApps = 131,
		[Token(Token = "0x40012A2")]
		Init_WatchdogDisabledInSettings = 132,
		[Token(Token = "0x40012A3")]
		Init_VRDashboardNotFound = 133,
		[Token(Token = "0x40012A4")]
		Init_VRDashboardStartupFailed = 134,
		[Token(Token = "0x40012A5")]
		Init_VRHomeNotFound = 135,
		[Token(Token = "0x40012A6")]
		Init_VRHomeStartupFailed = 136,
		[Token(Token = "0x40012A7")]
		Init_RebootingBusy = 137,
		[Token(Token = "0x40012A8")]
		Init_FirmwareUpdateBusy = 138,
		[Token(Token = "0x40012A9")]
		Init_FirmwareRecoveryBusy = 139,
		[Token(Token = "0x40012AA")]
		Init_USBServiceBusy = 140,
		[Token(Token = "0x40012AB")]
		Init_VRWebHelperStartupFailed = 141,
		[Token(Token = "0x40012AC")]
		Driver_Failed = 200,
		[Token(Token = "0x40012AD")]
		Driver_Unknown = 201,
		[Token(Token = "0x40012AE")]
		Driver_HmdUnknown = 202,
		[Token(Token = "0x40012AF")]
		Driver_NotLoaded = 203,
		[Token(Token = "0x40012B0")]
		Driver_RuntimeOutOfDate = 204,
		[Token(Token = "0x40012B1")]
		Driver_HmdInUse = 205,
		[Token(Token = "0x40012B2")]
		Driver_NotCalibrated = 206,
		[Token(Token = "0x40012B3")]
		Driver_CalibrationInvalid = 207,
		[Token(Token = "0x40012B4")]
		Driver_HmdDisplayNotFound = 208,
		[Token(Token = "0x40012B5")]
		Driver_TrackedDeviceInterfaceUnknown = 209,
		[Token(Token = "0x40012B6")]
		Driver_HmdDriverIdOutOfBounds = 211,
		[Token(Token = "0x40012B7")]
		Driver_HmdDisplayMirrored = 212,
		[Token(Token = "0x40012B8")]
		IPC_ServerInitFailed = 300,
		[Token(Token = "0x40012B9")]
		IPC_ConnectFailed = 301,
		[Token(Token = "0x40012BA")]
		IPC_SharedStateInitFailed = 302,
		[Token(Token = "0x40012BB")]
		IPC_CompositorInitFailed = 303,
		[Token(Token = "0x40012BC")]
		IPC_MutexInitFailed = 304,
		[Token(Token = "0x40012BD")]
		IPC_Failed = 305,
		[Token(Token = "0x40012BE")]
		IPC_CompositorConnectFailed = 306,
		[Token(Token = "0x40012BF")]
		IPC_CompositorInvalidConnectResponse = 307,
		[Token(Token = "0x40012C0")]
		IPC_ConnectFailedAfterMultipleAttempts = 308,
		[Token(Token = "0x40012C1")]
		Compositor_Failed = 400,
		[Token(Token = "0x40012C2")]
		Compositor_D3D11HardwareRequired = 401,
		[Token(Token = "0x40012C3")]
		Compositor_FirmwareRequiresUpdate = 402,
		[Token(Token = "0x40012C4")]
		Compositor_OverlayInitFailed = 403,
		[Token(Token = "0x40012C5")]
		Compositor_ScreenshotsInitFailed = 404,
		[Token(Token = "0x40012C6")]
		Compositor_UnableToCreateDevice = 405,
		[Token(Token = "0x40012C7")]
		VendorSpecific_UnableToConnectToOculusRuntime = 1000,
		[Token(Token = "0x40012C8")]
		VendorSpecific_WindowsNotInDevMode = 1001,
		[Token(Token = "0x40012C9")]
		VendorSpecific_HmdFound_CantOpenDevice = 1101,
		[Token(Token = "0x40012CA")]
		VendorSpecific_HmdFound_UnableToRequestConfigStart = 1102,
		[Token(Token = "0x40012CB")]
		VendorSpecific_HmdFound_NoStoredConfig = 1103,
		[Token(Token = "0x40012CC")]
		VendorSpecific_HmdFound_ConfigTooBig = 1104,
		[Token(Token = "0x40012CD")]
		VendorSpecific_HmdFound_ConfigTooSmall = 1105,
		[Token(Token = "0x40012CE")]
		VendorSpecific_HmdFound_UnableToInitZLib = 1106,
		[Token(Token = "0x40012CF")]
		VendorSpecific_HmdFound_CantReadFirmwareVersion = 1107,
		[Token(Token = "0x40012D0")]
		VendorSpecific_HmdFound_UnableToSendUserDataStart = 1108,
		[Token(Token = "0x40012D1")]
		VendorSpecific_HmdFound_UnableToGetUserDataStart = 1109,
		[Token(Token = "0x40012D2")]
		VendorSpecific_HmdFound_UnableToGetUserDataNext = 1110,
		[Token(Token = "0x40012D3")]
		VendorSpecific_HmdFound_UserDataAddressRange = 1111,
		[Token(Token = "0x40012D4")]
		VendorSpecific_HmdFound_UserDataError = 1112,
		[Token(Token = "0x40012D5")]
		VendorSpecific_HmdFound_ConfigFailedSanityCheck = 1113,
		[Token(Token = "0x40012D6")]
		Steam_SteamInstallationNotFound = 2000
	}
	[Token(Token = "0x2000450")]
	public enum EVRScreenshotType
	{
		[Token(Token = "0x40012D8")]
		None,
		[Token(Token = "0x40012D9")]
		Mono,
		[Token(Token = "0x40012DA")]
		Stereo,
		[Token(Token = "0x40012DB")]
		Cubemap,
		[Token(Token = "0x40012DC")]
		MonoPanorama,
		[Token(Token = "0x40012DD")]
		StereoPanorama
	}
	[Token(Token = "0x2000451")]
	public enum EVRScreenshotPropertyFilenames
	{
		[Token(Token = "0x40012DF")]
		Preview,
		[Token(Token = "0x40012E0")]
		VR
	}
	[Token(Token = "0x2000452")]
	public enum EVRTrackedCameraError
	{
		[Token(Token = "0x40012E2")]
		None = 0,
		[Token(Token = "0x40012E3")]
		OperationFailed = 100,
		[Token(Token = "0x40012E4")]
		InvalidHandle = 101,
		[Token(Token = "0x40012E5")]
		InvalidFrameHeaderVersion = 102,
		[Token(Token = "0x40012E6")]
		OutOfHandles = 103,
		[Token(Token = "0x40012E7")]
		IPCFailure = 104,
		[Token(Token = "0x40012E8")]
		NotSupportedForThisDevice = 105,
		[Token(Token = "0x40012E9")]
		SharedMemoryFailure = 106,
		[Token(Token = "0x40012EA")]
		FrameBufferingFailure = 107,
		[Token(Token = "0x40012EB")]
		StreamSetupFailure = 108,
		[Token(Token = "0x40012EC")]
		InvalidGLTextureId = 109,
		[Token(Token = "0x40012ED")]
		InvalidSharedTextureHandle = 110,
		[Token(Token = "0x40012EE")]
		FailedToGetGLTextureId = 111,
		[Token(Token = "0x40012EF")]
		SharedTextureFailure = 112,
		[Token(Token = "0x40012F0")]
		NoFrameAvailable = 113,
		[Token(Token = "0x40012F1")]
		InvalidArgument = 114,
		[Token(Token = "0x40012F2")]
		InvalidFrameBufferSize = 115
	}
	[Token(Token = "0x2000453")]
	public enum EVRTrackedCameraFrameType
	{
		[Token(Token = "0x40012F4")]
		Distorted,
		[Token(Token = "0x40012F5")]
		Undistorted,
		[Token(Token = "0x40012F6")]
		MaximumUndistorted,
		[Token(Token = "0x40012F7")]
		MAX_CAMERA_FRAME_TYPES
	}
	[Token(Token = "0x2000454")]
	public enum EVRApplicationError
	{
		[Token(Token = "0x40012F9")]
		None = 0,
		[Token(Token = "0x40012FA")]
		AppKeyAlreadyExists = 100,
		[Token(Token = "0x40012FB")]
		NoManifest = 101,
		[Token(Token = "0x40012FC")]
		NoApplication = 102,
		[Token(Token = "0x40012FD")]
		InvalidIndex = 103,
		[Token(Token = "0x40012FE")]
		UnknownApplication = 104,
		[Token(Token = "0x40012FF")]
		IPCFailed = 105,
		[Token(Token = "0x4001300")]
		ApplicationAlreadyRunning = 106,
		[Token(Token = "0x4001301")]
		InvalidManifest = 107,
		[Token(Token = "0x4001302")]
		InvalidApplication = 108,
		[Token(Token = "0x4001303")]
		LaunchFailed = 109,
		[Token(Token = "0x4001304")]
		ApplicationAlreadyStarting = 110,
		[Token(Token = "0x4001305")]
		LaunchInProgress = 111,
		[Token(Token = "0x4001306")]
		OldApplicationQuitting = 112,
		[Token(Token = "0x4001307")]
		TransitionAborted = 113,
		[Token(Token = "0x4001308")]
		IsTemplate = 114,
		[Token(Token = "0x4001309")]
		SteamVRIsExiting = 115,
		[Token(Token = "0x400130A")]
		BufferTooSmall = 200,
		[Token(Token = "0x400130B")]
		PropertyNotSet = 201,
		[Token(Token = "0x400130C")]
		UnknownProperty = 202,
		[Token(Token = "0x400130D")]
		InvalidParameter = 203
	}
	[Token(Token = "0x2000455")]
	public enum EVRApplicationProperty
	{
		[Token(Token = "0x400130F")]
		Name_String = 0,
		[Token(Token = "0x4001310")]
		LaunchType_String = 11,
		[Token(Token = "0x4001311")]
		WorkingDirectory_String = 12,
		[Token(Token = "0x4001312")]
		BinaryPath_String = 13,
		[Token(Token = "0x4001313")]
		Arguments_String = 14,
		[Token(Token = "0x4001314")]
		URL_String = 15,
		[Token(Token = "0x4001315")]
		Description_String = 50,
		[Token(Token = "0x4001316")]
		NewsURL_String = 51,
		[Token(Token = "0x4001317")]
		ImagePath_String = 52,
		[Token(Token = "0x4001318")]
		Source_String = 53,
		[Token(Token = "0x4001319")]
		ActionManifestURL_String = 54,
		[Token(Token = "0x400131A")]
		IsDashboardOverlay_Bool = 60,
		[Token(Token = "0x400131B")]
		IsTemplate_Bool = 61,
		[Token(Token = "0x400131C")]
		IsInstanced_Bool = 62,
		[Token(Token = "0x400131D")]
		IsInternal_Bool = 63,
		[Token(Token = "0x400131E")]
		WantsCompositorPauseInStandby_Bool = 64,
		[Token(Token = "0x400131F")]
		LastLaunchTime_Uint64 = 70
	}
	[Token(Token = "0x2000456")]
	public enum EVRApplicationTransitionState
	{
		[Token(Token = "0x4001321")]
		VRApplicationTransition_None = 0,
		[Token(Token = "0x4001322")]
		VRApplicationTransition_OldAppQuitSent = 10,
		[Token(Token = "0x4001323")]
		VRApplicationTransition_WaitingForExternalLaunch = 11,
		[Token(Token = "0x4001324")]
		VRApplicationTransition_NewAppLaunched = 20
	}
	[Token(Token = "0x2000457")]
	public enum ChaperoneCalibrationState
	{
		[Token(Token = "0x4001326")]
		OK = 1,
		[Token(Token = "0x4001327")]
		Warning = 100,
		[Token(Token = "0x4001328")]
		Warning_BaseStationMayHaveMoved = 101,
		[Token(Token = "0x4001329")]
		Warning_BaseStationRemoved = 102,
		[Token(Token = "0x400132A")]
		Warning_SeatedBoundsInvalid = 103,
		[Token(Token = "0x400132B")]
		Error = 200,
		[Token(Token = "0x400132C")]
		Error_BaseStationUninitialized = 201,
		[Token(Token = "0x400132D")]
		Error_BaseStationConflict = 202,
		[Token(Token = "0x400132E")]
		Error_PlayAreaInvalid = 203,
		[Token(Token = "0x400132F")]
		Error_CollisionBoundsInvalid = 204
	}
	[Token(Token = "0x2000458")]
	public enum EChaperoneConfigFile
	{
		[Token(Token = "0x4001331")]
		Live = 1,
		[Token(Token = "0x4001332")]
		Temp
	}
	[Token(Token = "0x2000459")]
	public enum EChaperoneImportFlags
	{
		[Token(Token = "0x4001334")]
		EChaperoneImport_BoundsOnly = 1
	}
	[Token(Token = "0x200045A")]
	public enum EVRCompositorError
	{
		[Token(Token = "0x4001336")]
		None = 0,
		[Token(Token = "0x4001337")]
		RequestFailed = 1,
		[Token(Token = "0x4001338")]
		IncompatibleVersion = 100,
		[Token(Token = "0x4001339")]
		DoNotHaveFocus = 101,
		[Token(Token = "0x400133A")]
		InvalidTexture = 102,
		[Token(Token = "0x400133B")]
		IsNotSceneApplication = 103,
		[Token(Token = "0x400133C")]
		TextureIsOnWrongDevice = 104,
		[Token(Token = "0x400133D")]
		TextureUsesUnsupportedFormat = 105,
		[Token(Token = "0x400133E")]
		SharedTexturesNotSupported = 106,
		[Token(Token = "0x400133F")]
		IndexOutOfRange = 107,
		[Token(Token = "0x4001340")]
		AlreadySubmitted = 108,
		[Token(Token = "0x4001341")]
		InvalidBounds = 109
	}
	[Token(Token = "0x200045B")]
	public enum EVRCompositorTimingMode
	{
		[Token(Token = "0x4001343")]
		Implicit,
		[Token(Token = "0x4001344")]
		Explicit_RuntimePerformsPostPresentHandoff,
		[Token(Token = "0x4001345")]
		Explicit_ApplicationPerformsPostPresentHandoff
	}
	[Token(Token = "0x200045C")]
	public enum VROverlayInputMethod
	{
		[Token(Token = "0x4001347")]
		None,
		[Token(Token = "0x4001348")]
		Mouse,
		[Token(Token = "0x4001349")]
		DualAnalog
	}
	[Token(Token = "0x200045D")]
	public enum VROverlayTransformType
	{
		[Token(Token = "0x400134B")]
		VROverlayTransform_Absolute,
		[Token(Token = "0x400134C")]
		VROverlayTransform_TrackedDeviceRelative,
		[Token(Token = "0x400134D")]
		VROverlayTransform_SystemOverlay,
		[Token(Token = "0x400134E")]
		VROverlayTransform_TrackedComponent
	}
	[Token(Token = "0x200045E")]
	public enum VROverlayFlags
	{
		[Token(Token = "0x4001350")]
		None,
		[Token(Token = "0x4001351")]
		Curved,
		[Token(Token = "0x4001352")]
		RGSS4X,
		[Token(Token = "0x4001353")]
		NoDashboardTab,
		[Token(Token = "0x4001354")]
		AcceptsGamepadEvents,
		[Token(Token = "0x4001355")]
		ShowGamepadFocus,
		[Token(Token = "0x4001356")]
		SendVRScrollEvents,
		[Token(Token = "0x4001357")]
		SendVRTouchpadEvents,
		[Token(Token = "0x4001358")]
		ShowTouchPadScrollWheel,
		[Token(Token = "0x4001359")]
		TransferOwnershipToInternalProcess,
		[Token(Token = "0x400135A")]
		SideBySide_Parallel,
		[Token(Token = "0x400135B")]
		SideBySide_Crossed,
		[Token(Token = "0x400135C")]
		Panorama,
		[Token(Token = "0x400135D")]
		StereoPanorama,
		[Token(Token = "0x400135E")]
		SortWithNonSceneOverlays,
		[Token(Token = "0x400135F")]
		VisibleInDashboard
	}
	[Token(Token = "0x200045F")]
	public enum VRMessageOverlayResponse
	{
		[Token(Token = "0x4001361")]
		ButtonPress_0,
		[Token(Token = "0x4001362")]
		ButtonPress_1,
		[Token(Token = "0x4001363")]
		ButtonPress_2,
		[Token(Token = "0x4001364")]
		ButtonPress_3,
		[Token(Token = "0x4001365")]
		CouldntFindSystemOverlay,
		[Token(Token = "0x4001366")]
		CouldntFindOrCreateClientOverlay,
		[Token(Token = "0x4001367")]
		ApplicationQuit
	}
	[Token(Token = "0x2000460")]
	public enum EGamepadTextInputMode
	{
		[Token(Token = "0x4001369")]
		k_EGamepadTextInputModeNormal,
		[Token(Token = "0x400136A")]
		k_EGamepadTextInputModePassword,
		[Token(Token = "0x400136B")]
		k_EGamepadTextInputModeSubmit
	}
	[Token(Token = "0x2000461")]
	public enum EGamepadTextInputLineMode
	{
		[Token(Token = "0x400136D")]
		k_EGamepadTextInputLineModeSingleLine,
		[Token(Token = "0x400136E")]
		k_EGamepadTextInputLineModeMultipleLines
	}
	[Token(Token = "0x2000462")]
	public enum EOverlayDirection
	{
		[Token(Token = "0x4001370")]
		Up,
		[Token(Token = "0x4001371")]
		Down,
		[Token(Token = "0x4001372")]
		Left,
		[Token(Token = "0x4001373")]
		Right,
		[Token(Token = "0x4001374")]
		Count
	}
	[Token(Token = "0x2000463")]
	public enum EVROverlayIntersectionMaskPrimitiveType
	{
		[Token(Token = "0x4001376")]
		OverlayIntersectionPrimitiveType_Rectangle,
		[Token(Token = "0x4001377")]
		OverlayIntersectionPrimitiveType_Circle
	}
	[Token(Token = "0x2000464")]
	public enum EVRRenderModelError
	{
		[Token(Token = "0x4001379")]
		None = 0,
		[Token(Token = "0x400137A")]
		Loading = 100,
		[Token(Token = "0x400137B")]
		NotSupported = 200,
		[Token(Token = "0x400137C")]
		InvalidArg = 300,
		[Token(Token = "0x400137D")]
		InvalidModel = 301,
		[Token(Token = "0x400137E")]
		NoShapes = 302,
		[Token(Token = "0x400137F")]
		MultipleShapes = 303,
		[Token(Token = "0x4001380")]
		TooManyVertices = 304,
		[Token(Token = "0x4001381")]
		MultipleTextures = 305,
		[Token(Token = "0x4001382")]
		BufferTooSmall = 306,
		[Token(Token = "0x4001383")]
		NotEnoughNormals = 307,
		[Token(Token = "0x4001384")]
		NotEnoughTexCoords = 308,
		[Token(Token = "0x4001385")]
		InvalidTexture = 400
	}
	[Token(Token = "0x2000465")]
	public enum EVRComponentProperty
	{
		[Token(Token = "0x4001387")]
		IsStatic = 1,
		[Token(Token = "0x4001388")]
		IsVisible = 2,
		[Token(Token = "0x4001389")]
		IsTouched = 4,
		[Token(Token = "0x400138A")]
		IsPressed = 8,
		[Token(Token = "0x400138B")]
		IsScrolled = 0x10
	}
	[Token(Token = "0x2000466")]
	public enum EVRNotificationType
	{
		[Token(Token = "0x400138D")]
		Transient,
		[Token(Token = "0x400138E")]
		Persistent,
		[Token(Token = "0x400138F")]
		Transient_SystemWithUserValue
	}
	[Token(Token = "0x2000467")]
	public enum EVRNotificationStyle
	{
		[Token(Token = "0x4001391")]
		None = 0,
		[Token(Token = "0x4001392")]
		Application = 100,
		[Token(Token = "0x4001393")]
		Contact_Disabled = 200,
		[Token(Token = "0x4001394")]
		Contact_Enabled = 201,
		[Token(Token = "0x4001395")]
		Contact_Active = 202
	}
	[Token(Token = "0x2000468")]
	public enum EVRSettingsError
	{
		[Token(Token = "0x4001397")]
		None,
		[Token(Token = "0x4001398")]
		IPCFailed,
		[Token(Token = "0x4001399")]
		WriteFailed,
		[Token(Token = "0x400139A")]
		ReadFailed,
		[Token(Token = "0x400139B")]
		JsonParseFailed,
		[Token(Token = "0x400139C")]
		UnsetSettingHasNoDefault
	}
	[Token(Token = "0x2000469")]
	public enum EVRScreenshotError
	{
		[Token(Token = "0x400139E")]
		None = 0,
		[Token(Token = "0x400139F")]
		RequestFailed = 1,
		[Token(Token = "0x40013A0")]
		IncompatibleVersion = 100,
		[Token(Token = "0x40013A1")]
		NotFound = 101,
		[Token(Token = "0x40013A2")]
		BufferTooSmall = 102,
		[Token(Token = "0x40013A3")]
		ScreenshotAlreadyInProgress = 108
	}
	[StructLayout(LayoutKind.Explicit)]
	[Token(Token = "0x200046A")]
	public struct VREvent_Data_t
	{
		[Token(Token = "0x40013A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Reserved_t reserved;

		[Token(Token = "0x40013A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Controller_t controller;

		[Token(Token = "0x40013A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Mouse_t mouse;

		[Token(Token = "0x40013A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Scroll_t scroll;

		[Token(Token = "0x40013A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Process_t process;

		[Token(Token = "0x40013A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Notification_t notification;

		[Token(Token = "0x40013AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Overlay_t overlay;

		[Token(Token = "0x40013AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Status_t status;

		[Token(Token = "0x40013AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Ipd_t ipd;

		[Token(Token = "0x40013AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Chaperone_t chaperone;

		[Token(Token = "0x40013AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_PerformanceTest_t performanceTest;

		[Token(Token = "0x40013AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_TouchPadMove_t touchPadMove;

		[Token(Token = "0x40013B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_SeatedZeroPoseReset_t seatedZeroPoseReset;

		[Token(Token = "0x40013B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Screenshot_t screenshot;

		[Token(Token = "0x40013B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_ScreenshotProgress_t screenshotProgress;

		[Token(Token = "0x40013B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_ApplicationLaunch_t applicationLaunch;

		[Token(Token = "0x40013B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_EditingCameraSurface_t cameraSurface;

		[Token(Token = "0x40013B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_MessageOverlay_t messageOverlay;

		[Token(Token = "0x40013B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Property_t property;

		[Token(Token = "0x40013B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_DualAnalog_t dualAnalog;

		[Token(Token = "0x40013B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_HapticVibration_t hapticVibration;

		[Token(Token = "0x40013B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Keyboard_t keyboard;
	}
	[StructLayout(LayoutKind.Explicit)]
	[Token(Token = "0x200046B")]
	public struct VROverlayIntersectionMaskPrimitive_Data_t
	{
		[Token(Token = "0x40013BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntersectionMaskRectangle_t m_Rectangle;

		[Token(Token = "0x40013BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntersectionMaskCircle_t m_Circle;
	}
	[Token(Token = "0x200046C")]
	public struct HmdMatrix34_t
	{
		[Token(Token = "0x40013BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m0;

		[Token(Token = "0x40013BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m1;

		[Token(Token = "0x40013BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m2;

		[Token(Token = "0x40013BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m3;

		[Token(Token = "0x40013C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m4;

		[Token(Token = "0x40013C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m5;

		[Token(Token = "0x40013C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m6;

		[Token(Token = "0x40013C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m7;

		[Token(Token = "0x40013C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m8;

		[Token(Token = "0x40013C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m9;

		[Token(Token = "0x40013C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m10;

		[Token(Token = "0x40013C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m11;
	}
	[Token(Token = "0x200046D")]
	public struct HmdMatrix44_t
	{
		[Token(Token = "0x40013C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m0;

		[Token(Token = "0x40013C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m1;

		[Token(Token = "0x40013CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m2;

		[Token(Token = "0x40013CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m3;

		[Token(Token = "0x40013CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m4;

		[Token(Token = "0x40013CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m5;

		[Token(Token = "0x40013CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m6;

		[Token(Token = "0x40013CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m7;

		[Token(Token = "0x40013D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m8;

		[Token(Token = "0x40013D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m9;

		[Token(Token = "0x40013D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m10;

		[Token(Token = "0x40013D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m11;

		[Token(Token = "0x40013D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m12;

		[Token(Token = "0x40013D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m13;

		[Token(Token = "0x40013D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m14;

		[Token(Token = "0x40013D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m15;
	}
	[Token(Token = "0x200046E")]
	public struct HmdVector3_t
	{
		[Token(Token = "0x40013D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float v0;

		[Token(Token = "0x40013D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float v1;

		[Token(Token = "0x40013DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float v2;
	}
	[Token(Token = "0x200046F")]
	public struct HmdVector4_t
	{
		[Token(Token = "0x40013DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float v0;

		[Token(Token = "0x40013DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float v1;

		[Token(Token = "0x40013DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float v2;

		[Token(Token = "0x40013DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float v3;
	}
	[Token(Token = "0x2000470")]
	public struct HmdVector3d_t
	{
		[Token(Token = "0x40013DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public double v0;

		[Token(Token = "0x40013E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public double v1;

		[Token(Token = "0x40013E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public double v2;
	}
	[Token(Token = "0x2000471")]
	public struct HmdVector2_t
	{
		[Token(Token = "0x40013E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float v0;

		[Token(Token = "0x40013E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float v1;
	}
	[Token(Token = "0x2000472")]
	public struct HmdQuaternion_t
	{
		[Token(Token = "0x40013E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public double w;

		[Token(Token = "0x40013E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public double x;

		[Token(Token = "0x40013E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public double y;

		[Token(Token = "0x40013E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public double z;
	}
	[Token(Token = "0x2000473")]
	public struct HmdColor_t
	{
		[Token(Token = "0x40013E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float r;

		[Token(Token = "0x40013E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float g;

		[Token(Token = "0x40013EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float b;

		[Token(Token = "0x40013EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float a;
	}
	[Token(Token = "0x2000474")]
	public struct HmdQuad_t
	{
		[Token(Token = "0x40013EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector3_t vCorners0;

		[Token(Token = "0x40013ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HmdVector3_t vCorners1;

		[Token(Token = "0x40013EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HmdVector3_t vCorners2;

		[Token(Token = "0x40013EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public HmdVector3_t vCorners3;
	}
	[Token(Token = "0x2000475")]
	public struct HmdRect2_t
	{
		[Token(Token = "0x40013F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector2_t vTopLeft;

		[Token(Token = "0x40013F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public HmdVector2_t vBottomRight;
	}
	[Token(Token = "0x2000476")]
	public struct DistortionCoordinates_t
	{
		[Token(Token = "0x40013F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float rfRed0;

		[Token(Token = "0x40013F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float rfRed1;

		[Token(Token = "0x40013F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float rfGreen0;

		[Token(Token = "0x40013F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float rfGreen1;

		[Token(Token = "0x40013F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float rfBlue0;

		[Token(Token = "0x40013F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float rfBlue1;
	}
	[Token(Token = "0x2000477")]
	public struct Texture_t
	{
		[Token(Token = "0x40013F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr handle;

		[Token(Token = "0x40013F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ETextureType eType;

		[Token(Token = "0x40013FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public EColorSpace eColorSpace;
	}
	[Token(Token = "0x2000478")]
	public struct TrackedDevicePose_t
	{
		[Token(Token = "0x40013FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdMatrix34_t mDeviceToAbsoluteTracking;

		[Token(Token = "0x40013FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HmdVector3_t vVelocity;

		[Token(Token = "0x40013FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public HmdVector3_t vAngularVelocity;

		[Token(Token = "0x40013FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public ETrackingResult eTrackingResult;

		[Token(Token = "0x40013FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool bPoseIsValid;

		[Token(Token = "0x4001400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		public bool bDeviceIsConnected;
	}
	[Token(Token = "0x2000479")]
	public struct VRTextureBounds_t
	{
		[Token(Token = "0x4001401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float uMin;

		[Token(Token = "0x4001402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float vMin;

		[Token(Token = "0x4001403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float uMax;

		[Token(Token = "0x4001404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float vMax;
	}
	[Token(Token = "0x200047A")]
	public struct VRTextureWithPose_t
	{
		[Token(Token = "0x4001405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdMatrix34_t mDeviceToAbsoluteTracking;
	}
	[Token(Token = "0x200047B")]
	public struct VRTextureDepthInfo_t
	{
		[Token(Token = "0x4001406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr handle;

		[Token(Token = "0x4001407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public HmdMatrix44_t mProjection;

		[Token(Token = "0x4001408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public HmdVector2_t vRange;
	}
	[Token(Token = "0x200047C")]
	public struct VRTextureWithDepth_t
	{
		[Token(Token = "0x4001409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VRTextureDepthInfo_t depth;
	}
	[Token(Token = "0x200047D")]
	public struct VRTextureWithPoseAndDepth_t
	{
		[Token(Token = "0x400140A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VRTextureDepthInfo_t depth;
	}
	[Token(Token = "0x200047E")]
	public struct VRVulkanTextureData_t
	{
		[Token(Token = "0x400140B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong m_nImage;

		[Token(Token = "0x400140C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr m_pDevice;

		[Token(Token = "0x400140D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr m_pPhysicalDevice;

		[Token(Token = "0x400140E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IntPtr m_pInstance;

		[Token(Token = "0x400140F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IntPtr m_pQueue;

		[Token(Token = "0x4001410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public uint m_nQueueFamilyIndex;

		[Token(Token = "0x4001411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public uint m_nWidth;

		[Token(Token = "0x4001412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public uint m_nHeight;

		[Token(Token = "0x4001413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public uint m_nFormat;

		[Token(Token = "0x4001414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public uint m_nSampleCount;
	}
	[Token(Token = "0x200047F")]
	public struct D3D12TextureData_t
	{
		[Token(Token = "0x4001415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr m_pResource;

		[Token(Token = "0x4001416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr m_pCommandQueue;

		[Token(Token = "0x4001417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint m_nNodeMask;
	}
	[Token(Token = "0x2000480")]
	public struct VREvent_Controller_t
	{
		[Token(Token = "0x4001418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint button;
	}
	[Token(Token = "0x2000481")]
	public struct VREvent_Mouse_t
	{
		[Token(Token = "0x4001419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x400141A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x400141B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint button;
	}
	[Token(Token = "0x2000482")]
	public struct VREvent_Scroll_t
	{
		[Token(Token = "0x400141C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float xdelta;

		[Token(Token = "0x400141D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float ydelta;

		[Token(Token = "0x400141E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint repeatCount;
	}
	[Token(Token = "0x2000483")]
	public struct VREvent_TouchPadMove_t
	{
		[Token(Token = "0x400141F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool bFingerDown;

		[Token(Token = "0x4001420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float flSecondsFingerDown;

		[Token(Token = "0x4001421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float fValueXFirst;

		[Token(Token = "0x4001422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float fValueYFirst;

		[Token(Token = "0x4001423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float fValueXRaw;

		[Token(Token = "0x4001424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float fValueYRaw;
	}
	[Token(Token = "0x2000484")]
	public struct VREvent_Notification_t
	{
		[Token(Token = "0x4001425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong ulUserValue;

		[Token(Token = "0x4001426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint notificationId;
	}
	[Token(Token = "0x2000485")]
	public struct VREvent_Process_t
	{
		[Token(Token = "0x4001427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint pid;

		[Token(Token = "0x4001428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint oldPid;

		[Token(Token = "0x4001429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool bForced;
	}
	[Token(Token = "0x2000486")]
	public struct VREvent_Overlay_t
	{
		[Token(Token = "0x400142A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong overlayHandle;
	}
	[Token(Token = "0x2000487")]
	public struct VREvent_Status_t
	{
		[Token(Token = "0x400142B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint statusState;
	}
	[Token(Token = "0x2000488")]
	public struct VREvent_Keyboard_t
	{
		[Token(Token = "0x400142C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public byte cNewInput0;

		[Token(Token = "0x400142D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public byte cNewInput1;

		[Token(Token = "0x400142E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public byte cNewInput2;

		[Token(Token = "0x400142F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		public byte cNewInput3;

		[Token(Token = "0x4001430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public byte cNewInput4;

		[Token(Token = "0x4001431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		public byte cNewInput5;

		[Token(Token = "0x4001432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		public byte cNewInput6;

		[Token(Token = "0x4001433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7")]
		public byte cNewInput7;

		[Token(Token = "0x4001434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong uUserValue;
	}
	[Token(Token = "0x2000489")]
	public struct VREvent_Ipd_t
	{
		[Token(Token = "0x4001435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float ipdMeters;
	}
	[Token(Token = "0x200048A")]
	public struct VREvent_Chaperone_t
	{
		[Token(Token = "0x4001436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong m_nPreviousUniverse;

		[Token(Token = "0x4001437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong m_nCurrentUniverse;
	}
	[Token(Token = "0x200048B")]
	public struct VREvent_Reserved_t
	{
		[Token(Token = "0x4001438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong reserved0;

		[Token(Token = "0x4001439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong reserved1;

		[Token(Token = "0x400143A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ulong reserved2;

		[Token(Token = "0x400143B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ulong reserved3;
	}
	[Token(Token = "0x200048C")]
	public struct VREvent_PerformanceTest_t
	{
		[Token(Token = "0x400143C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nFidelityLevel;
	}
	[Token(Token = "0x200048D")]
	public struct VREvent_SeatedZeroPoseReset_t
	{
		[Token(Token = "0x400143D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool bResetBySystemMenu;
	}
	[Token(Token = "0x200048E")]
	public struct VREvent_Screenshot_t
	{
		[Token(Token = "0x400143E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint handle;

		[Token(Token = "0x400143F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint type;
	}
	[Token(Token = "0x200048F")]
	public struct VREvent_ScreenshotProgress_t
	{
		[Token(Token = "0x4001440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float progress;
	}
	[Token(Token = "0x2000490")]
	public struct VREvent_ApplicationLaunch_t
	{
		[Token(Token = "0x4001441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint pid;

		[Token(Token = "0x4001442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint unArgsHandle;
	}
	[Token(Token = "0x2000491")]
	public struct VREvent_EditingCameraSurface_t
	{
		[Token(Token = "0x4001443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong overlayHandle;

		[Token(Token = "0x4001444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint nVisualMode;
	}
	[Token(Token = "0x2000492")]
	public struct VREvent_MessageOverlay_t
	{
		[Token(Token = "0x4001445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint unVRMessageOverlayResponse;
	}
	[Token(Token = "0x2000493")]
	public struct VREvent_Property_t
	{
		[Token(Token = "0x4001446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong container;

		[Token(Token = "0x4001447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ETrackedDeviceProperty prop;
	}
	[Token(Token = "0x2000494")]
	public struct VREvent_DualAnalog_t
	{
		[Token(Token = "0x4001448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4001449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x400144A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float transformedX;

		[Token(Token = "0x400144B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float transformedY;

		[Token(Token = "0x400144C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EDualAnalogWhich which;
	}
	[Token(Token = "0x2000495")]
	public struct VREvent_HapticVibration_t
	{
		[Token(Token = "0x400144D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong containerHandle;

		[Token(Token = "0x400144E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong componentHandle;

		[Token(Token = "0x400144F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float fDurationSeconds;

		[Token(Token = "0x4001450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float fFrequency;

		[Token(Token = "0x4001451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float fAmplitude;
	}
	[Token(Token = "0x2000496")]
	public struct VREvent_t
	{
		[Token(Token = "0x4001452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint eventType;

		[Token(Token = "0x4001453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint trackedDeviceIndex;

		[Token(Token = "0x4001454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float eventAgeSeconds;

		[Token(Token = "0x4001455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public VREvent_Data_t data;
	}
	[Token(Token = "0x2000497")]
	public struct VREvent_t_Packed
	{
		[Token(Token = "0x4001456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint eventType;

		[Token(Token = "0x4001457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint trackedDeviceIndex;

		[Token(Token = "0x4001458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float eventAgeSeconds;

		[Token(Token = "0x4001459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public VREvent_Data_t data;

		[Token(Token = "0x6001AB2")]
		[Address(RVA = "0xA2BC94", Offset = "0xA2BC94", VA = "0xA2BC94")]
		public VREvent_t_Packed(VREvent_t unpacked)
		{
		}

		[Token(Token = "0x6001AB3")]
		[Address(RVA = "0xA2BCE8", Offset = "0xA2BCE8", VA = "0xA2BCE8")]
		public void Unpack(ref VREvent_t unpacked)
		{
		}
	}
	[Token(Token = "0x2000498")]
	public struct HiddenAreaMesh_t
	{
		[Token(Token = "0x400145A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr pVertexData;

		[Token(Token = "0x400145B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint unTriangleCount;
	}
	[Token(Token = "0x2000499")]
	public struct VRControllerAxis_t
	{
		[Token(Token = "0x400145C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x400145D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;
	}
	[Token(Token = "0x200049A")]
	public struct VRControllerState_t
	{
		[Token(Token = "0x400145E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint unPacketNum;

		[Token(Token = "0x400145F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong ulButtonPressed;

		[Token(Token = "0x4001460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ulong ulButtonTouched;

		[Token(Token = "0x4001461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VRControllerAxis_t rAxis0;

		[Token(Token = "0x4001462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRControllerAxis_t rAxis1;

		[Token(Token = "0x4001463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VRControllerAxis_t rAxis2;

		[Token(Token = "0x4001464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public VRControllerAxis_t rAxis3;

		[Token(Token = "0x4001465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public VRControllerAxis_t rAxis4;
	}
	[Token(Token = "0x200049B")]
	public struct VRControllerState_t_Packed
	{
		[Token(Token = "0x4001466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint unPacketNum;

		[Token(Token = "0x4001467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ulong ulButtonPressed;

		[Token(Token = "0x4001468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public ulong ulButtonTouched;

		[Token(Token = "0x4001469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public VRControllerAxis_t rAxis0;

		[Token(Token = "0x400146A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public VRControllerAxis_t rAxis1;

		[Token(Token = "0x400146B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public VRControllerAxis_t rAxis2;

		[Token(Token = "0x400146C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public VRControllerAxis_t rAxis3;

		[Token(Token = "0x400146D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public VRControllerAxis_t rAxis4;

		[Token(Token = "0x6001AB4")]
		[Address(RVA = "0xA2BC4C", Offset = "0xA2BC4C", VA = "0xA2BC4C")]
		public VRControllerState_t_Packed(VRControllerState_t unpacked)
		{
		}

		[Token(Token = "0x6001AB5")]
		[Address(RVA = "0xA2BC8C", Offset = "0xA2BC8C", VA = "0xA2BC8C")]
		public void Unpack(ref VRControllerState_t unpacked)
		{
		}
	}
	[Token(Token = "0x200049C")]
	public struct Compositor_OverlaySettings
	{
		[Token(Token = "0x400146E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint size;

		[Token(Token = "0x400146F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public bool curved;

		[Token(Token = "0x4001470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		public bool antialias;

		[Token(Token = "0x4001471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float scale;

		[Token(Token = "0x4001472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float distance;

		[Token(Token = "0x4001473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float alpha;

		[Token(Token = "0x4001474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float uOffset;

		[Token(Token = "0x4001475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float vOffset;

		[Token(Token = "0x4001476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float uScale;

		[Token(Token = "0x4001477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float vScale;

		[Token(Token = "0x4001478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float gridDivs;

		[Token(Token = "0x4001479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float gridWidth;

		[Token(Token = "0x400147A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float gridScale;

		[Token(Token = "0x400147B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HmdMatrix44_t transform;
	}
	[Token(Token = "0x200049D")]
	public struct CameraVideoStreamFrameHeader_t
	{
		[Token(Token = "0x400147C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public EVRTrackedCameraFrameType eFrameType;

		[Token(Token = "0x400147D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint nWidth;

		[Token(Token = "0x400147E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint nHeight;

		[Token(Token = "0x400147F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint nBytesPerPixel;

		[Token(Token = "0x4001480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint nFrameSequence;

		[Token(Token = "0x4001481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public TrackedDevicePose_t standingTrackedDevicePose;
	}
	[Token(Token = "0x200049E")]
	public struct DriverDirectMode_FrameTiming
	{
		[Token(Token = "0x4001482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nSize;

		[Token(Token = "0x4001483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint m_nNumFramePresents;

		[Token(Token = "0x4001484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint m_nNumMisPresented;

		[Token(Token = "0x4001485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint m_nNumDroppedFrames;

		[Token(Token = "0x4001486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint m_nReprojectionFlags;
	}
	[Token(Token = "0x200049F")]
	public struct AppOverrideKeys_t
	{
		[Token(Token = "0x4001487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr pchKey;

		[Token(Token = "0x4001488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr pchValue;
	}
	[Token(Token = "0x20004A0")]
	public struct Compositor_FrameTiming
	{
		[Token(Token = "0x4001489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nSize;

		[Token(Token = "0x400148A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint m_nFrameIndex;

		[Token(Token = "0x400148B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint m_nNumFramePresents;

		[Token(Token = "0x400148C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint m_nNumMisPresented;

		[Token(Token = "0x400148D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint m_nNumDroppedFrames;

		[Token(Token = "0x400148E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public uint m_nReprojectionFlags;

		[Token(Token = "0x400148F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public double m_flSystemTimeInSeconds;

		[Token(Token = "0x4001490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_flPreSubmitGpuMs;

		[Token(Token = "0x4001491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m_flPostSubmitGpuMs;

		[Token(Token = "0x4001492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_flTotalRenderGpuMs;

		[Token(Token = "0x4001493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m_flCompositorRenderGpuMs;

		[Token(Token = "0x4001494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_flCompositorRenderCpuMs;

		[Token(Token = "0x4001495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m_flCompositorIdleCpuMs;

		[Token(Token = "0x4001496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m_flClientFrameIntervalMs;

		[Token(Token = "0x4001497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m_flPresentCallCpuMs;

		[Token(Token = "0x4001498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float m_flWaitForPresentCpuMs;

		[Token(Token = "0x4001499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float m_flSubmitFrameMs;

		[Token(Token = "0x400149A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float m_flWaitGetPosesCalledMs;

		[Token(Token = "0x400149B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float m_flNewPosesReadyMs;

		[Token(Token = "0x400149C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float m_flNewFrameReadyMs;

		[Token(Token = "0x400149D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float m_flCompositorUpdateStartMs;

		[Token(Token = "0x400149E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float m_flCompositorUpdateEndMs;

		[Token(Token = "0x400149F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float m_flCompositorRenderStartMs;

		[Token(Token = "0x40014A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public TrackedDevicePose_t m_HmdPose;
	}
	[Token(Token = "0x20004A1")]
	public struct Compositor_CumulativeStats
	{
		[Token(Token = "0x40014A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nPid;

		[Token(Token = "0x40014A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint m_nNumFramePresents;

		[Token(Token = "0x40014A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint m_nNumDroppedFrames;

		[Token(Token = "0x40014A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint m_nNumReprojectedFrames;

		[Token(Token = "0x40014A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint m_nNumFramePresentsOnStartup;

		[Token(Token = "0x40014A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public uint m_nNumDroppedFramesOnStartup;

		[Token(Token = "0x40014A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public uint m_nNumReprojectedFramesOnStartup;

		[Token(Token = "0x40014A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public uint m_nNumLoading;

		[Token(Token = "0x40014A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public uint m_nNumFramePresentsLoading;

		[Token(Token = "0x40014AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public uint m_nNumDroppedFramesLoading;

		[Token(Token = "0x40014AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public uint m_nNumReprojectedFramesLoading;

		[Token(Token = "0x40014AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public uint m_nNumTimedOut;

		[Token(Token = "0x40014AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public uint m_nNumFramePresentsTimedOut;

		[Token(Token = "0x40014AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public uint m_nNumDroppedFramesTimedOut;

		[Token(Token = "0x40014AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public uint m_nNumReprojectedFramesTimedOut;
	}
	[Token(Token = "0x20004A2")]
	public struct VROverlayIntersectionParams_t
	{
		[Token(Token = "0x40014B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector3_t vSource;

		[Token(Token = "0x40014B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HmdVector3_t vDirection;

		[Token(Token = "0x40014B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ETrackingUniverseOrigin eOrigin;
	}
	[Token(Token = "0x20004A3")]
	public struct VROverlayIntersectionResults_t
	{
		[Token(Token = "0x40014B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector3_t vPoint;

		[Token(Token = "0x40014B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HmdVector3_t vNormal;

		[Token(Token = "0x40014B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HmdVector2_t vUVs;

		[Token(Token = "0x40014B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fDistance;
	}
	[Token(Token = "0x20004A4")]
	public struct IntersectionMaskRectangle_t
	{
		[Token(Token = "0x40014B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m_flTopLeftX;

		[Token(Token = "0x40014B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m_flTopLeftY;

		[Token(Token = "0x40014B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m_flWidth;

		[Token(Token = "0x40014BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m_flHeight;
	}
	[Token(Token = "0x20004A5")]
	public struct IntersectionMaskCircle_t
	{
		[Token(Token = "0x40014BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m_flCenterX;

		[Token(Token = "0x40014BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m_flCenterY;

		[Token(Token = "0x40014BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m_flRadius;
	}
	[Token(Token = "0x20004A6")]
	public struct VROverlayIntersectionMaskPrimitive_t
	{
		[Token(Token = "0x40014BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public EVROverlayIntersectionMaskPrimitiveType m_nPrimitiveType;

		[Token(Token = "0x40014BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public VROverlayIntersectionMaskPrimitive_Data_t m_Primitive;
	}
	[Token(Token = "0x20004A7")]
	public struct RenderModel_ComponentState_t
	{
		[Token(Token = "0x40014C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdMatrix34_t mTrackingToComponentRenderModel;

		[Token(Token = "0x40014C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HmdMatrix34_t mTrackingToComponentLocal;

		[Token(Token = "0x40014C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public uint uProperties;
	}
	[Token(Token = "0x20004A8")]
	public struct RenderModel_Vertex_t
	{
		[Token(Token = "0x40014C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector3_t vPosition;

		[Token(Token = "0x40014C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HmdVector3_t vNormal;

		[Token(Token = "0x40014C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float rfTextureCoord0;

		[Token(Token = "0x40014C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float rfTextureCoord1;
	}
	[Token(Token = "0x20004A9")]
	public struct RenderModel_TextureMap_t
	{
		[Token(Token = "0x40014C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public char unWidth;

		[Token(Token = "0x40014C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public char unHeight;

		[Token(Token = "0x40014C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr rubTextureMapData;
	}
	[Token(Token = "0x20004AA")]
	public struct RenderModel_TextureMap_t_Packed
	{
		[Token(Token = "0x40014CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public char unWidth;

		[Token(Token = "0x40014CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public char unHeight;

		[Token(Token = "0x40014CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr rubTextureMapData;

		[Token(Token = "0x6001AB6")]
		[Address(RVA = "0xA2BBCC", Offset = "0xA2BBCC", VA = "0xA2BBCC")]
		public RenderModel_TextureMap_t_Packed(RenderModel_TextureMap_t unpacked)
		{
		}

		[Token(Token = "0x6001AB7")]
		[Address(RVA = "0xA2BBE0", Offset = "0xA2BBE0", VA = "0xA2BBE0")]
		public void Unpack(ref RenderModel_TextureMap_t unpacked)
		{
		}
	}
	[Token(Token = "0x20004AB")]
	public struct RenderModel_t
	{
		[Token(Token = "0x40014CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr rVertexData;

		[Token(Token = "0x40014CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint unVertexCount;

		[Token(Token = "0x40014CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr rIndexData;

		[Token(Token = "0x40014D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public uint unTriangleCount;

		[Token(Token = "0x40014D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int diffuseTextureId;
	}
	[Token(Token = "0x20004AC")]
	public struct RenderModel_t_Packed
	{
		[Token(Token = "0x40014D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr rVertexData;

		[Token(Token = "0x40014D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint unVertexCount;

		[Token(Token = "0x40014D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public IntPtr rIndexData;

		[Token(Token = "0x40014D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public uint unTriangleCount;

		[Token(Token = "0x40014D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int diffuseTextureId;

		[Token(Token = "0x6001AB8")]
		[Address(RVA = "0xA2BBFC", Offset = "0xA2BBFC", VA = "0xA2BBFC")]
		public RenderModel_t_Packed(RenderModel_t unpacked)
		{
		}

		[Token(Token = "0x6001AB9")]
		[Address(RVA = "0xA2BC20", Offset = "0xA2BC20", VA = "0xA2BC20")]
		public void Unpack(ref RenderModel_t unpacked)
		{
		}
	}
	[Token(Token = "0x20004AD")]
	public struct RenderModel_ControllerMode_State_t
	{
		[Token(Token = "0x40014D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool bScrollWheelVisible;
	}
	[Token(Token = "0x20004AE")]
	public struct NotificationBitmap_t
	{
		[Token(Token = "0x40014D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr m_pImageData;

		[Token(Token = "0x40014D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int m_nWidth;

		[Token(Token = "0x40014DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int m_nHeight;

		[Token(Token = "0x40014DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int m_nBytesPerPixel;
	}
	[Token(Token = "0x20004AF")]
	public struct COpenVRContext
	{
		[Token(Token = "0x40014DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr m_pVRSystem;

		[Token(Token = "0x40014DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr m_pVRChaperone;

		[Token(Token = "0x40014DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr m_pVRChaperoneSetup;

		[Token(Token = "0x40014DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IntPtr m_pVRCompositor;

		[Token(Token = "0x40014E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IntPtr m_pVROverlay;

		[Token(Token = "0x40014E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IntPtr m_pVRResources;

		[Token(Token = "0x40014E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public IntPtr m_pVRRenderModels;

		[Token(Token = "0x40014E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IntPtr m_pVRExtendedDisplay;

		[Token(Token = "0x40014E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public IntPtr m_pVRSettings;

		[Token(Token = "0x40014E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public IntPtr m_pVRApplications;

		[Token(Token = "0x40014E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public IntPtr m_pVRTrackedCamera;

		[Token(Token = "0x40014E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public IntPtr m_pVRScreenshots;

		[Token(Token = "0x40014E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public IntPtr m_pVRDriverManager;
	}
	[Token(Token = "0x20004B0")]
	public class OpenVR
	{
		[Token(Token = "0x2000F20")]
		private class COpenVRContext
		{
			[Token(Token = "0x400226C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private CVRSystem m_pVRSystem;

			[Token(Token = "0x400226D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private CVRChaperone m_pVRChaperone;

			[Token(Token = "0x400226E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private CVRChaperoneSetup m_pVRChaperoneSetup;

			[Token(Token = "0x400226F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private CVRCompositor m_pVRCompositor;

			[Token(Token = "0x4002270")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private CVROverlay m_pVROverlay;

			[Token(Token = "0x4002271")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private CVRRenderModels m_pVRRenderModels;

			[Token(Token = "0x4002272")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private CVRExtendedDisplay m_pVRExtendedDisplay;

			[Token(Token = "0x4002273")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private CVRSettings m_pVRSettings;

			[Token(Token = "0x4002274")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private CVRApplications m_pVRApplications;

			[Token(Token = "0x4002275")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private CVRScreenshots m_pVRScreenshots;

			[Token(Token = "0x4002276")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private CVRTrackedCamera m_pVRTrackedCamera;

			[Token(Token = "0x60032E2")]
			[Address(RVA = "0xD7EB40", Offset = "0xD7EB40", VA = "0xD7EB40")]
			public COpenVRContext()
			{
			}

			[Token(Token = "0x60032E3")]
			[Address(RVA = "0xD7F9A0", Offset = "0xD7F9A0", VA = "0xD7F9A0")]
			public void Clear()
			{
			}

			[Token(Token = "0x60032E4")]
			[Address(RVA = "0xD7FA28", Offset = "0xD7FA28", VA = "0xD7FA28")]
			private void CheckClear()
			{
			}

			[Token(Token = "0x60032E5")]
			[Address(RVA = "0xD7EBE0", Offset = "0xD7EBE0", VA = "0xD7EBE0")]
			public CVRSystem VRSystem()
			{
				return null;
			}

			[Token(Token = "0x60032E6")]
			[Address(RVA = "0xD7ED10", Offset = "0xD7ED10", VA = "0xD7ED10")]
			public CVRChaperone VRChaperone()
			{
				return null;
			}

			[Token(Token = "0x60032E7")]
			[Address(RVA = "0xD7EE40", Offset = "0xD7EE40", VA = "0xD7EE40")]
			public CVRChaperoneSetup VRChaperoneSetup()
			{
				return null;
			}

			[Token(Token = "0x60032E8")]
			[Address(RVA = "0xD7EF70", Offset = "0xD7EF70", VA = "0xD7EF70")]
			public CVRCompositor VRCompositor()
			{
				return null;
			}

			[Token(Token = "0x60032E9")]
			[Address(RVA = "0xD7F0A0", Offset = "0xD7F0A0", VA = "0xD7F0A0")]
			public CVROverlay VROverlay()
			{
				return null;
			}

			[Token(Token = "0x60032EA")]
			[Address(RVA = "0xD7F1D0", Offset = "0xD7F1D0", VA = "0xD7F1D0")]
			public CVRRenderModels VRRenderModels()
			{
				return null;
			}

			[Token(Token = "0x60032EB")]
			[Address(RVA = "0xD7F300", Offset = "0xD7F300", VA = "0xD7F300")]
			public CVRExtendedDisplay VRExtendedDisplay()
			{
				return null;
			}

			[Token(Token = "0x60032EC")]
			[Address(RVA = "0xD7F430", Offset = "0xD7F430", VA = "0xD7F430")]
			public CVRSettings VRSettings()
			{
				return null;
			}

			[Token(Token = "0x60032ED")]
			[Address(RVA = "0xD7F560", Offset = "0xD7F560", VA = "0xD7F560")]
			public CVRApplications VRApplications()
			{
				return null;
			}

			[Token(Token = "0x60032EE")]
			[Address(RVA = "0xD7F690", Offset = "0xD7F690", VA = "0xD7F690")]
			public CVRScreenshots VRScreenshots()
			{
				return null;
			}

			[Token(Token = "0x60032EF")]
			[Address(RVA = "0xD7F7C0", Offset = "0xD7F7C0", VA = "0xD7F7C0")]
			public CVRTrackedCamera VRTrackedCamera()
			{
				return null;
			}
		}

		[Token(Token = "0x40014E9")]
		public const uint k_nDriverNone = uint.MaxValue;

		[Token(Token = "0x40014EA")]
		public const uint k_unMaxDriverDebugResponseSize = 32768u;

		[Token(Token = "0x40014EB")]
		public const uint k_unTrackedDeviceIndex_Hmd = 0u;

		[Token(Token = "0x40014EC")]
		public const uint k_unMaxTrackedDeviceCount = 64u;

		[Token(Token = "0x40014ED")]
		public const uint k_unTrackedDeviceIndexOther = 4294967294u;

		[Token(Token = "0x40014EE")]
		public const uint k_unTrackedDeviceIndexInvalid = uint.MaxValue;

		[Token(Token = "0x40014EF")]
		public const ulong k_ulInvalidPropertyContainer = 0uL;

		[Token(Token = "0x40014F0")]
		public const uint k_unInvalidPropertyTag = 0u;

		[Token(Token = "0x40014F1")]
		public const ulong k_ulInvalidDriverHandle = 0uL;

		[Token(Token = "0x40014F2")]
		public const uint k_unFloatPropertyTag = 1u;

		[Token(Token = "0x40014F3")]
		public const uint k_unInt32PropertyTag = 2u;

		[Token(Token = "0x40014F4")]
		public const uint k_unUint64PropertyTag = 3u;

		[Token(Token = "0x40014F5")]
		public const uint k_unBoolPropertyTag = 4u;

		[Token(Token = "0x40014F6")]
		public const uint k_unStringPropertyTag = 5u;

		[Token(Token = "0x40014F7")]
		public const uint k_unHmdMatrix34PropertyTag = 20u;

		[Token(Token = "0x40014F8")]
		public const uint k_unHmdMatrix44PropertyTag = 21u;

		[Token(Token = "0x40014F9")]
		public const uint k_unHmdVector3PropertyTag = 22u;

		[Token(Token = "0x40014FA")]
		public const uint k_unHmdVector4PropertyTag = 23u;

		[Token(Token = "0x40014FB")]
		public const uint k_unHiddenAreaPropertyTag = 30u;

		[Token(Token = "0x40014FC")]
		public const uint k_unPathHandleInfoTag = 31u;

		[Token(Token = "0x40014FD")]
		public const uint k_unActionPropertyTag = 32u;

		[Token(Token = "0x40014FE")]
		public const uint k_unInputValuePropertyTag = 33u;

		[Token(Token = "0x40014FF")]
		public const uint k_unWildcardPropertyTag = 34u;

		[Token(Token = "0x4001500")]
		public const uint k_unHapticVibrationPropertyTag = 35u;

		[Token(Token = "0x4001501")]
		public const uint k_unOpenVRInternalReserved_Start = 1000u;

		[Token(Token = "0x4001502")]
		public const uint k_unOpenVRInternalReserved_End = 10000u;

		[Token(Token = "0x4001503")]
		public const uint k_unMaxPropertyStringSize = 32768u;

		[Token(Token = "0x4001504")]
		public const uint k_unControllerStateAxisCount = 5u;

		[Token(Token = "0x4001505")]
		public const ulong k_ulOverlayHandleInvalid = 0uL;

		[Token(Token = "0x4001506")]
		public const uint k_unScreenshotHandleInvalid = 0u;

		[Token(Token = "0x4001507")]
		public const string IVRSystem_Version = "IVRSystem_019";

		[Token(Token = "0x4001508")]
		public const string IVRExtendedDisplay_Version = "IVRExtendedDisplay_001";

		[Token(Token = "0x4001509")]
		public const string IVRTrackedCamera_Version = "IVRTrackedCamera_003";

		[Token(Token = "0x400150A")]
		public const uint k_unMaxApplicationKeyLength = 128u;

		[Token(Token = "0x400150B")]
		public const string k_pch_MimeType_HomeApp = "vr/home";

		[Token(Token = "0x400150C")]
		public const string k_pch_MimeType_GameTheater = "vr/game_theater";

		[Token(Token = "0x400150D")]
		public const string IVRApplications_Version = "IVRApplications_006";

		[Token(Token = "0x400150E")]
		public const string IVRChaperone_Version = "IVRChaperone_003";

		[Token(Token = "0x400150F")]
		public const string IVRChaperoneSetup_Version = "IVRChaperoneSetup_005";

		[Token(Token = "0x4001510")]
		public const string IVRCompositor_Version = "IVRCompositor_022";

		[Token(Token = "0x4001511")]
		public const uint k_unVROverlayMaxKeyLength = 128u;

		[Token(Token = "0x4001512")]
		public const uint k_unVROverlayMaxNameLength = 128u;

		[Token(Token = "0x4001513")]
		public const uint k_unMaxOverlayCount = 64u;

		[Token(Token = "0x4001514")]
		public const uint k_unMaxOverlayIntersectionMaskPrimitivesCount = 32u;

		[Token(Token = "0x4001515")]
		public const string IVROverlay_Version = "IVROverlay_018";

		[Token(Token = "0x4001516")]
		public const string k_pch_Controller_Component_GDC2015 = "gdc2015";

		[Token(Token = "0x4001517")]
		public const string k_pch_Controller_Component_Base = "base";

		[Token(Token = "0x4001518")]
		public const string k_pch_Controller_Component_Tip = "tip";

		[Token(Token = "0x4001519")]
		public const string k_pch_Controller_Component_HandGrip = "handgrip";

		[Token(Token = "0x400151A")]
		public const string k_pch_Controller_Component_Status = "status";

		[Token(Token = "0x400151B")]
		public const string IVRRenderModels_Version = "IVRRenderModels_005";

		[Token(Token = "0x400151C")]
		public const uint k_unNotificationTextMaxSize = 256u;

		[Token(Token = "0x400151D")]
		public const string IVRNotifications_Version = "IVRNotifications_002";

		[Token(Token = "0x400151E")]
		public const uint k_unMaxSettingsKeyLength = 128u;

		[Token(Token = "0x400151F")]
		public const string IVRSettings_Version = "IVRSettings_002";

		[Token(Token = "0x4001520")]
		public const string k_pch_SteamVR_Section = "steamvr";

		[Token(Token = "0x4001521")]
		public const string k_pch_SteamVR_RequireHmd_String = "requireHmd";

		[Token(Token = "0x4001522")]
		public const string k_pch_SteamVR_ForcedDriverKey_String = "forcedDriver";

		[Token(Token = "0x4001523")]
		public const string k_pch_SteamVR_ForcedHmdKey_String = "forcedHmd";

		[Token(Token = "0x4001524")]
		public const string k_pch_SteamVR_DisplayDebug_Bool = "displayDebug";

		[Token(Token = "0x4001525")]
		public const string k_pch_SteamVR_DebugProcessPipe_String = "debugProcessPipe";

		[Token(Token = "0x4001526")]
		public const string k_pch_SteamVR_DisplayDebugX_Int32 = "displayDebugX";

		[Token(Token = "0x4001527")]
		public const string k_pch_SteamVR_DisplayDebugY_Int32 = "displayDebugY";

		[Token(Token = "0x4001528")]
		public const string k_pch_SteamVR_SendSystemButtonToAllApps_Bool = "sendSystemButtonToAllApps";

		[Token(Token = "0x4001529")]
		public const string k_pch_SteamVR_LogLevel_Int32 = "loglevel";

		[Token(Token = "0x400152A")]
		public const string k_pch_SteamVR_IPD_Float = "ipd";

		[Token(Token = "0x400152B")]
		public const string k_pch_SteamVR_Background_String = "background";

		[Token(Token = "0x400152C")]
		public const string k_pch_SteamVR_BackgroundUseDomeProjection_Bool = "backgroundUseDomeProjection";

		[Token(Token = "0x400152D")]
		public const string k_pch_SteamVR_BackgroundCameraHeight_Float = "backgroundCameraHeight";

		[Token(Token = "0x400152E")]
		public const string k_pch_SteamVR_BackgroundDomeRadius_Float = "backgroundDomeRadius";

		[Token(Token = "0x400152F")]
		public const string k_pch_SteamVR_GridColor_String = "gridColor";

		[Token(Token = "0x4001530")]
		public const string k_pch_SteamVR_PlayAreaColor_String = "playAreaColor";

		[Token(Token = "0x4001531")]
		public const string k_pch_SteamVR_ShowStage_Bool = "showStage";

		[Token(Token = "0x4001532")]
		public const string k_pch_SteamVR_ActivateMultipleDrivers_Bool = "activateMultipleDrivers";

		[Token(Token = "0x4001533")]
		public const string k_pch_SteamVR_DirectMode_Bool = "directMode";

		[Token(Token = "0x4001534")]
		public const string k_pch_SteamVR_DirectModeEdidVid_Int32 = "directModeEdidVid";

		[Token(Token = "0x4001535")]
		public const string k_pch_SteamVR_DirectModeEdidPid_Int32 = "directModeEdidPid";

		[Token(Token = "0x4001536")]
		public const string k_pch_SteamVR_UsingSpeakers_Bool = "usingSpeakers";

		[Token(Token = "0x4001537")]
		public const string k_pch_SteamVR_SpeakersForwardYawOffsetDegrees_Float = "speakersForwardYawOffsetDegrees";

		[Token(Token = "0x4001538")]
		public const string k_pch_SteamVR_BaseStationPowerManagement_Bool = "basestationPowerManagement";

		[Token(Token = "0x4001539")]
		public const string k_pch_SteamVR_NeverKillProcesses_Bool = "neverKillProcesses";

		[Token(Token = "0x400153A")]
		public const string k_pch_SteamVR_SupersampleScale_Float = "supersampleScale";

		[Token(Token = "0x400153B")]
		public const string k_pch_SteamVR_AllowAsyncReprojection_Bool = "allowAsyncReprojection";

		[Token(Token = "0x400153C")]
		public const string k_pch_SteamVR_AllowReprojection_Bool = "allowInterleavedReprojection";

		[Token(Token = "0x400153D")]
		public const string k_pch_SteamVR_ForceReprojection_Bool = "forceReprojection";

		[Token(Token = "0x400153E")]
		public const string k_pch_SteamVR_ForceFadeOnBadTracking_Bool = "forceFadeOnBadTracking";

		[Token(Token = "0x400153F")]
		public const string k_pch_SteamVR_DefaultMirrorView_Int32 = "defaultMirrorView";

		[Token(Token = "0x4001540")]
		public const string k_pch_SteamVR_ShowMirrorView_Bool = "showMirrorView";

		[Token(Token = "0x4001541")]
		public const string k_pch_SteamVR_MirrorViewGeometry_String = "mirrorViewGeometry";

		[Token(Token = "0x4001542")]
		public const string k_pch_SteamVR_StartMonitorFromAppLaunch = "startMonitorFromAppLaunch";

		[Token(Token = "0x4001543")]
		public const string k_pch_SteamVR_StartCompositorFromAppLaunch_Bool = "startCompositorFromAppLaunch";

		[Token(Token = "0x4001544")]
		public const string k_pch_SteamVR_StartDashboardFromAppLaunch_Bool = "startDashboardFromAppLaunch";

		[Token(Token = "0x4001545")]
		public const string k_pch_SteamVR_StartOverlayAppsFromDashboard_Bool = "startOverlayAppsFromDashboard";

		[Token(Token = "0x4001546")]
		public const string k_pch_SteamVR_EnableHomeApp = "enableHomeApp";

		[Token(Token = "0x4001547")]
		public const string k_pch_SteamVR_CycleBackgroundImageTimeSec_Int32 = "CycleBackgroundImageTimeSec";

		[Token(Token = "0x4001548")]
		public const string k_pch_SteamVR_RetailDemo_Bool = "retailDemo";

		[Token(Token = "0x4001549")]
		public const string k_pch_SteamVR_IpdOffset_Float = "ipdOffset";

		[Token(Token = "0x400154A")]
		public const string k_pch_SteamVR_AllowSupersampleFiltering_Bool = "allowSupersampleFiltering";

		[Token(Token = "0x400154B")]
		public const string k_pch_SteamVR_EnableLinuxVulkanAsync_Bool = "enableLinuxVulkanAsync";

		[Token(Token = "0x400154C")]
		public const string k_pch_SteamVR_AllowDisplayLockedMode_Bool = "allowDisplayLockedMode";

		[Token(Token = "0x400154D")]
		public const string k_pch_SteamVR_HaveStartedTutorialForNativeChaperoneDriver_Bool = "haveStartedTutorialForNativeChaperoneDriver";

		[Token(Token = "0x400154E")]
		public const string k_pch_SteamVR_ForceWindows32bitVRMonitor = "forceWindows32BitVRMonitor";

		[Token(Token = "0x400154F")]
		public const string k_pch_SteamVR_DebugInput = "debugInput";

		[Token(Token = "0x4001550")]
		public const string k_pch_Lighthouse_Section = "driver_lighthouse";

		[Token(Token = "0x4001551")]
		public const string k_pch_Lighthouse_DisableIMU_Bool = "disableimu";

		[Token(Token = "0x4001552")]
		public const string k_pch_Lighthouse_DisableIMUExceptHMD_Bool = "disableimuexcepthmd";

		[Token(Token = "0x4001553")]
		public const string k_pch_Lighthouse_UseDisambiguation_String = "usedisambiguation";

		[Token(Token = "0x4001554")]
		public const string k_pch_Lighthouse_DisambiguationDebug_Int32 = "disambiguationdebug";

		[Token(Token = "0x4001555")]
		public const string k_pch_Lighthouse_PrimaryBasestation_Int32 = "primarybasestation";

		[Token(Token = "0x4001556")]
		public const string k_pch_Lighthouse_DBHistory_Bool = "dbhistory";

		[Token(Token = "0x4001557")]
		public const string k_pch_Lighthouse_EnableBluetooth_Bool = "enableBluetooth";

		[Token(Token = "0x4001558")]
		public const string k_pch_Lighthouse_PowerManagedBaseStations_String = "PowerManagedBaseStations";

		[Token(Token = "0x4001559")]
		public const string k_pch_Null_Section = "driver_null";

		[Token(Token = "0x400155A")]
		public const string k_pch_Null_SerialNumber_String = "serialNumber";

		[Token(Token = "0x400155B")]
		public const string k_pch_Null_ModelNumber_String = "modelNumber";

		[Token(Token = "0x400155C")]
		public const string k_pch_Null_WindowX_Int32 = "windowX";

		[Token(Token = "0x400155D")]
		public const string k_pch_Null_WindowY_Int32 = "windowY";

		[Token(Token = "0x400155E")]
		public const string k_pch_Null_WindowWidth_Int32 = "windowWidth";

		[Token(Token = "0x400155F")]
		public const string k_pch_Null_WindowHeight_Int32 = "windowHeight";

		[Token(Token = "0x4001560")]
		public const string k_pch_Null_RenderWidth_Int32 = "renderWidth";

		[Token(Token = "0x4001561")]
		public const string k_pch_Null_RenderHeight_Int32 = "renderHeight";

		[Token(Token = "0x4001562")]
		public const string k_pch_Null_SecondsFromVsyncToPhotons_Float = "secondsFromVsyncToPhotons";

		[Token(Token = "0x4001563")]
		public const string k_pch_Null_DisplayFrequency_Float = "displayFrequency";

		[Token(Token = "0x4001564")]
		public const string k_pch_UserInterface_Section = "userinterface";

		[Token(Token = "0x4001565")]
		public const string k_pch_UserInterface_StatusAlwaysOnTop_Bool = "StatusAlwaysOnTop";

		[Token(Token = "0x4001566")]
		public const string k_pch_UserInterface_MinimizeToTray_Bool = "MinimizeToTray";

		[Token(Token = "0x4001567")]
		public const string k_pch_UserInterface_Screenshots_Bool = "screenshots";

		[Token(Token = "0x4001568")]
		public const string k_pch_UserInterface_ScreenshotType_Int = "screenshotType";

		[Token(Token = "0x4001569")]
		public const string k_pch_Notifications_Section = "notifications";

		[Token(Token = "0x400156A")]
		public const string k_pch_Notifications_DoNotDisturb_Bool = "DoNotDisturb";

		[Token(Token = "0x400156B")]
		public const string k_pch_Keyboard_Section = "keyboard";

		[Token(Token = "0x400156C")]
		public const string k_pch_Keyboard_TutorialCompletions = "TutorialCompletions";

		[Token(Token = "0x400156D")]
		public const string k_pch_Keyboard_ScaleX = "ScaleX";

		[Token(Token = "0x400156E")]
		public const string k_pch_Keyboard_ScaleY = "ScaleY";

		[Token(Token = "0x400156F")]
		public const string k_pch_Keyboard_OffsetLeftX = "OffsetLeftX";

		[Token(Token = "0x4001570")]
		public const string k_pch_Keyboard_OffsetRightX = "OffsetRightX";

		[Token(Token = "0x4001571")]
		public const string k_pch_Keyboard_OffsetY = "OffsetY";

		[Token(Token = "0x4001572")]
		public const string k_pch_Keyboard_Smoothing = "Smoothing";

		[Token(Token = "0x4001573")]
		public const string k_pch_Perf_Section = "perfcheck";

		[Token(Token = "0x4001574")]
		public const string k_pch_Perf_HeuristicActive_Bool = "heuristicActive";

		[Token(Token = "0x4001575")]
		public const string k_pch_Perf_NotifyInHMD_Bool = "warnInHMD";

		[Token(Token = "0x4001576")]
		public const string k_pch_Perf_NotifyOnlyOnce_Bool = "warnOnlyOnce";

		[Token(Token = "0x4001577")]
		public const string k_pch_Perf_AllowTimingStore_Bool = "allowTimingStore";

		[Token(Token = "0x4001578")]
		public const string k_pch_Perf_SaveTimingsOnExit_Bool = "saveTimingsOnExit";

		[Token(Token = "0x4001579")]
		public const string k_pch_Perf_TestData_Float = "perfTestData";

		[Token(Token = "0x400157A")]
		public const string k_pch_Perf_LinuxGPUProfiling_Bool = "linuxGPUProfiling";

		[Token(Token = "0x400157B")]
		public const string k_pch_CollisionBounds_Section = "collisionBounds";

		[Token(Token = "0x400157C")]
		public const string k_pch_CollisionBounds_Style_Int32 = "CollisionBoundsStyle";

		[Token(Token = "0x400157D")]
		public const string k_pch_CollisionBounds_GroundPerimeterOn_Bool = "CollisionBoundsGroundPerimeterOn";

		[Token(Token = "0x400157E")]
		public const string k_pch_CollisionBounds_CenterMarkerOn_Bool = "CollisionBoundsCenterMarkerOn";

		[Token(Token = "0x400157F")]
		public const string k_pch_CollisionBounds_PlaySpaceOn_Bool = "CollisionBoundsPlaySpaceOn";

		[Token(Token = "0x4001580")]
		public const string k_pch_CollisionBounds_FadeDistance_Float = "CollisionBoundsFadeDistance";

		[Token(Token = "0x4001581")]
		public const string k_pch_CollisionBounds_ColorGammaR_Int32 = "CollisionBoundsColorGammaR";

		[Token(Token = "0x4001582")]
		public const string k_pch_CollisionBounds_ColorGammaG_Int32 = "CollisionBoundsColorGammaG";

		[Token(Token = "0x4001583")]
		public const string k_pch_CollisionBounds_ColorGammaB_Int32 = "CollisionBoundsColorGammaB";

		[Token(Token = "0x4001584")]
		public const string k_pch_CollisionBounds_ColorGammaA_Int32 = "CollisionBoundsColorGammaA";

		[Token(Token = "0x4001585")]
		public const string k_pch_Camera_Section = "camera";

		[Token(Token = "0x4001586")]
		public const string k_pch_Camera_EnableCamera_Bool = "enableCamera";

		[Token(Token = "0x4001587")]
		public const string k_pch_Camera_EnableCameraInDashboard_Bool = "enableCameraInDashboard";

		[Token(Token = "0x4001588")]
		public const string k_pch_Camera_EnableCameraForCollisionBounds_Bool = "enableCameraForCollisionBounds";

		[Token(Token = "0x4001589")]
		public const string k_pch_Camera_EnableCameraForRoomView_Bool = "enableCameraForRoomView";

		[Token(Token = "0x400158A")]
		public const string k_pch_Camera_BoundsColorGammaR_Int32 = "cameraBoundsColorGammaR";

		[Token(Token = "0x400158B")]
		public const string k_pch_Camera_BoundsColorGammaG_Int32 = "cameraBoundsColorGammaG";

		[Token(Token = "0x400158C")]
		public const string k_pch_Camera_BoundsColorGammaB_Int32 = "cameraBoundsColorGammaB";

		[Token(Token = "0x400158D")]
		public const string k_pch_Camera_BoundsColorGammaA_Int32 = "cameraBoundsColorGammaA";

		[Token(Token = "0x400158E")]
		public const string k_pch_Camera_BoundsStrength_Int32 = "cameraBoundsStrength";

		[Token(Token = "0x400158F")]
		public const string k_pch_audio_Section = "audio";

		[Token(Token = "0x4001590")]
		public const string k_pch_audio_OnPlaybackDevice_String = "onPlaybackDevice";

		[Token(Token = "0x4001591")]
		public const string k_pch_audio_OnRecordDevice_String = "onRecordDevice";

		[Token(Token = "0x4001592")]
		public const string k_pch_audio_OnPlaybackMirrorDevice_String = "onPlaybackMirrorDevice";

		[Token(Token = "0x4001593")]
		public const string k_pch_audio_OffPlaybackDevice_String = "offPlaybackDevice";

		[Token(Token = "0x4001594")]
		public const string k_pch_audio_OffRecordDevice_String = "offRecordDevice";

		[Token(Token = "0x4001595")]
		public const string k_pch_audio_VIVEHDMIGain = "viveHDMIGain";

		[Token(Token = "0x4001596")]
		public const string k_pch_Power_Section = "power";

		[Token(Token = "0x4001597")]
		public const string k_pch_Power_PowerOffOnExit_Bool = "powerOffOnExit";

		[Token(Token = "0x4001598")]
		public const string k_pch_Power_TurnOffScreensTimeout_Float = "turnOffScreensTimeout";

		[Token(Token = "0x4001599")]
		public const string k_pch_Power_TurnOffControllersTimeout_Float = "turnOffControllersTimeout";

		[Token(Token = "0x400159A")]
		public const string k_pch_Power_ReturnToWatchdogTimeout_Float = "returnToWatchdogTimeout";

		[Token(Token = "0x400159B")]
		public const string k_pch_Power_AutoLaunchSteamVROnButtonPress = "autoLaunchSteamVROnButtonPress";

		[Token(Token = "0x400159C")]
		public const string k_pch_Power_PauseCompositorOnStandby_Bool = "pauseCompositorOnStandby";

		[Token(Token = "0x400159D")]
		public const string k_pch_Dashboard_Section = "dashboard";

		[Token(Token = "0x400159E")]
		public const string k_pch_Dashboard_EnableDashboard_Bool = "enableDashboard";

		[Token(Token = "0x400159F")]
		public const string k_pch_Dashboard_ArcadeMode_Bool = "arcadeMode";

		[Token(Token = "0x40015A0")]
		public const string k_pch_Dashboard_EnableWebUI = "webUI";

		[Token(Token = "0x40015A1")]
		public const string k_pch_modelskin_Section = "modelskins";

		[Token(Token = "0x40015A2")]
		public const string k_pch_Driver_Enable_Bool = "enable";

		[Token(Token = "0x40015A3")]
		public const string k_pch_WebInterface_Section = "WebInterface";

		[Token(Token = "0x40015A4")]
		public const string k_pch_WebInterface_WebPort_String = "WebPort";

		[Token(Token = "0x40015A5")]
		public const string IVRScreenshots_Version = "IVRScreenshots_001";

		[Token(Token = "0x40015A6")]
		public const string IVRResources_Version = "IVRResources_001";

		[Token(Token = "0x40015A7")]
		public const string IVRDriverManager_Version = "IVRDriverManager_001";

		[Token(Token = "0x40015A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x981578", Offset = "0x981578")]
		private static uint <VRToken>k__BackingField;

		[Token(Token = "0x40015A9")]
		private const string FnTable_Prefix = "FnTable:";

		[Token(Token = "0x40015AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static COpenVRContext _OpenVRInternal_ModuleContext;

		[Token(Token = "0x170002D0")]
		private static uint VRToken
		{
			[Token(Token = "0x6001AC2")]
			[Address(RVA = "0xD7E990", Offset = "0xD7E990", VA = "0xD7E990")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x987D3C", Offset = "0x987D3C")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6001AC3")]
			[Address(RVA = "0xD7E9F8", Offset = "0xD7E9F8", VA = "0xD7E9F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x987D4C", Offset = "0x987D4C")]
			set
			{
			}
		}

		[Token(Token = "0x170002D1")]
		private static COpenVRContext OpenVRInternal_ModuleContext
		{
			[Token(Token = "0x6001AC4")]
			[Address(RVA = "0xD7EA64", Offset = "0xD7EA64", VA = "0xD7EA64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D2")]
		public static CVRSystem System
		{
			[Token(Token = "0x6001AC5")]
			[Address(RVA = "0xD7EB70", Offset = "0xD7EB70", VA = "0xD7EB70")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D3")]
		public static CVRChaperone Chaperone
		{
			[Token(Token = "0x6001AC6")]
			[Address(RVA = "0xD7ECA0", Offset = "0xD7ECA0", VA = "0xD7ECA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D4")]
		public static CVRChaperoneSetup ChaperoneSetup
		{
			[Token(Token = "0x6001AC7")]
			[Address(RVA = "0xD7EDD0", Offset = "0xD7EDD0", VA = "0xD7EDD0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D5")]
		public static CVRCompositor Compositor
		{
			[Token(Token = "0x6001AC8")]
			[Address(RVA = "0xD7EF00", Offset = "0xD7EF00", VA = "0xD7EF00")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D6")]
		public static CVROverlay Overlay
		{
			[Token(Token = "0x6001AC9")]
			[Address(RVA = "0xD7F030", Offset = "0xD7F030", VA = "0xD7F030")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D7")]
		public static CVRRenderModels RenderModels
		{
			[Token(Token = "0x6001ACA")]
			[Address(RVA = "0xD7F160", Offset = "0xD7F160", VA = "0xD7F160")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D8")]
		public static CVRExtendedDisplay ExtendedDisplay
		{
			[Token(Token = "0x6001ACB")]
			[Address(RVA = "0xD7F290", Offset = "0xD7F290", VA = "0xD7F290")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D9")]
		public static CVRSettings Settings
		{
			[Token(Token = "0x6001ACC")]
			[Address(RVA = "0xD7F3C0", Offset = "0xD7F3C0", VA = "0xD7F3C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002DA")]
		public static CVRApplications Applications
		{
			[Token(Token = "0x6001ACD")]
			[Address(RVA = "0xD7F4F0", Offset = "0xD7F4F0", VA = "0xD7F4F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002DB")]
		public static CVRScreenshots Screenshots
		{
			[Token(Token = "0x6001ACE")]
			[Address(RVA = "0xD7F620", Offset = "0xD7F620", VA = "0xD7F620")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002DC")]
		public static CVRTrackedCamera TrackedCamera
		{
			[Token(Token = "0x6001ACF")]
			[Address(RVA = "0xD7F750", Offset = "0xD7F750", VA = "0xD7F750")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001ABA")]
		[Address(RVA = "0xD7E3D8", Offset = "0xD7E3D8", VA = "0xD7E3D8")]
		public static uint InitInternal(ref EVRInitError peError, EVRApplicationType eApplicationType)
		{
			return default(uint);
		}

		[Token(Token = "0x6001ABB")]
		[Address(RVA = "0xD7E48C", Offset = "0xD7E48C", VA = "0xD7E48C")]
		public static void ShutdownInternal()
		{
		}

		[Token(Token = "0x6001ABC")]
		[Address(RVA = "0xD7E520", Offset = "0xD7E520", VA = "0xD7E520")]
		public static bool IsHmdPresent()
		{
			return default(bool);
		}

		[Token(Token = "0x6001ABD")]
		[Address(RVA = "0xD7E5BC", Offset = "0xD7E5BC", VA = "0xD7E5BC")]
		public static bool IsRuntimeInstalled()
		{
			return default(bool);
		}

		[Token(Token = "0x6001ABE")]
		[Address(RVA = "0xD7E658", Offset = "0xD7E658", VA = "0xD7E658")]
		public static string GetStringForHmdError(EVRInitError error)
		{
			return null;
		}

		[Token(Token = "0x6001ABF")]
		[Address(RVA = "0xD7E770", Offset = "0xD7E770", VA = "0xD7E770")]
		public static IntPtr GetGenericInterface(string pchInterfaceVersion, ref EVRInitError peError)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001AC0")]
		[Address(RVA = "0xD7E83C", Offset = "0xD7E83C", VA = "0xD7E83C")]
		public static bool IsInterfaceVersionValid(string pchInterfaceVersion)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AC1")]
		[Address(RVA = "0xD7E8FC", Offset = "0xD7E8FC", VA = "0xD7E8FC")]
		public static uint GetInitToken()
		{
			return default(uint);
		}

		[Token(Token = "0x6001AD0")]
		[Address(RVA = "0xD7F880", Offset = "0xD7F880", VA = "0xD7F880")]
		public static CVRSystem Init(ref EVRInitError peError, EVRApplicationType eApplicationType = EVRApplicationType.VRApplication_Scene)
		{
			return null;
		}

		[Token(Token = "0x6001AD1")]
		[Address(RVA = "0xD7F9C0", Offset = "0xD7F9C0", VA = "0xD7F9C0")]
		public static void Shutdown()
		{
		}

		[Token(Token = "0x6001AD2")]
		[Address(RVA = "0xD7FA1C", Offset = "0xD7FA1C", VA = "0xD7FA1C")]
		public OpenVR()
		{
		}
	}
}
namespace hapticu3d
{
	[Token(Token = "0x20004B1")]
	public enum UIFeedbackType
	{
		[Token(Token = "0x40015AC")]
		Selection,
		[Token(Token = "0x40015AD")]
		ImpactLight,
		[Token(Token = "0x40015AE")]
		ImpactMedium,
		[Token(Token = "0x40015AF")]
		ImpactHeavy,
		[Token(Token = "0x40015B0")]
		Success,
		[Token(Token = "0x40015B1")]
		Warning,
		[Token(Token = "0x40015B2")]
		Error
	}
	[Token(Token = "0x20004B2")]
	public class HapticFeedback
	{
		[Token(Token = "0x6001AD4")]
		[Address(RVA = "0xF4F7A8", Offset = "0xF4F7A8", VA = "0xF4F7A8")]
		public static void Generate(UIFeedbackType type)
		{
		}

		[Token(Token = "0x6001AD5")]
		[Address(RVA = "0xF4F7AC", Offset = "0xF4F7AC", VA = "0xF4F7AC")]
		public HapticFeedback()
		{
		}
	}
}
namespace Fabric
{
	[Token(Token = "0x20004B3")]
	[ExecuteInEditMode]
	public class FabricSpringBoard : MonoBehaviour
	{
		[Token(Token = "0x40015B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string _fabricManagerPrefabPath;

		[Token(Token = "0x40015B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool _isPresent;

		[Token(Token = "0x6001AD6")]
		[Address(RVA = "0xC1ADE0", Offset = "0xC1ADE0", VA = "0xC1ADE0")]
		public FabricSpringBoard()
		{
		}

		[Token(Token = "0x6001AD7")]
		[Address(RVA = "0xC1AE5C", Offset = "0xC1AE5C", VA = "0xC1AE5C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001AD8")]
		[Address(RVA = "0xC1AEC8", Offset = "0xC1AEC8", VA = "0xC1AEC8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001AD9")]
		[Address(RVA = "0xC1AECC", Offset = "0xC1AECC", VA = "0xC1AECC")]
		public void Load()
		{
		}

		[Token(Token = "0x6001ADA")]
		[Address(RVA = "0xC1B040", Offset = "0xC1B040", VA = "0xC1B040")]
		public static FabricManager GetFabricManagerInEditor()
		{
			return null;
		}
	}
}
namespace AnimationInstancing
{
	[Token(Token = "0x20004B4")]
	public class AnimationEvent
	{
		[Token(Token = "0x40015B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string function;

		[Token(Token = "0x40015B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int intParameter;

		[Token(Token = "0x40015B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float floatParameter;

		[Token(Token = "0x40015B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string stringParameter;

		[Token(Token = "0x40015B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string objectParameter;

		[Token(Token = "0x40015BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float time;

		[Token(Token = "0x6001ADC")]
		[Address(RVA = "0xC015AC", Offset = "0xC015AC", VA = "0xC015AC")]
		public AnimationEvent()
		{
		}
	}
	[Token(Token = "0x20004B5")]
	public class AnimationInfo
	{
		[Token(Token = "0x40015BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string animationName;

		[Token(Token = "0x40015BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int animationNameHash;

		[Token(Token = "0x40015BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int totalFrame;

		[Token(Token = "0x40015BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int fps;

		[Token(Token = "0x40015BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int animationIndex;

		[Token(Token = "0x40015C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int textureIndex;

		[Token(Token = "0x40015C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool rootMotion;

		[Token(Token = "0x40015C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public WrapMode wrapMode;

		[Token(Token = "0x40015C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3[] velocity;

		[Token(Token = "0x40015C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3[] angularVelocity;

		[Token(Token = "0x40015C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<AnimationEvent> eventList;

		[Token(Token = "0x6001ADD")]
		[Address(RVA = "0xC015B4", Offset = "0xC015B4", VA = "0xC015B4")]
		public AnimationInfo()
		{
		}
	}
	[Token(Token = "0x20004B6")]
	public class ExtraBoneInfo
	{
		[Token(Token = "0x40015C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string[] extraBone;

		[Token(Token = "0x40015C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Matrix4x4[] extraBindPose;

		[Token(Token = "0x6001ADE")]
		[Address(RVA = "0xC0CC3C", Offset = "0xC0CC3C", VA = "0xC0CC3C")]
		public ExtraBoneInfo()
		{
		}
	}
	[Token(Token = "0x20004B7")]
	public class AnimationTexture
	{
		[Token(Token = "0x40015C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x981588", Offset = "0x981588")]
		private string <name>k__BackingField;

		[Token(Token = "0x40015C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x981598", Offset = "0x981598")]
		private Texture2D[] <boneTexture>k__BackingField;

		[Token(Token = "0x40015CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9815A8", Offset = "0x9815A8")]
		private int <blockWidth>k__BackingField;

		[Token(Token = "0x40015CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9815B8", Offset = "0x9815B8")]
		private int <blockHeight>k__BackingField;

		[Token(Token = "0x170002DD")]
		public string name
		{
			[Token(Token = "0x6001ADF")]
			[Address(RVA = "0xC0922C", Offset = "0xC0922C", VA = "0xC0922C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x987D5C", Offset = "0x987D5C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001AE0")]
			[Address(RVA = "0xC0CC54", Offset = "0xC0CC54", VA = "0xC0CC54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x987D6C", Offset = "0x987D6C")]
			set
			{
			}
		}

		[Token(Token = "0x170002DE")]
		public Texture2D[] boneTexture
		{
			[Token(Token = "0x6001AE1")]
			[Address(RVA = "0xC0AE64", Offset = "0xC0AE64", VA = "0xC0AE64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x987D7C", Offset = "0x987D7C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001AE2")]
			[Address(RVA = "0xC0CC4C", Offset = "0xC0CC4C", VA = "0xC0CC4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x987D8C", Offset = "0x987D8C")]
			set
			{
			}
		}

		[Token(Token = "0x170002DF")]
		public int blockWidth
		{
			[Token(Token = "0x6001AE3")]
			[Address(RVA = "0xC0AE84", Offset = "0xC0AE84", VA = "0xC0AE84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x987D9C", Offset = "0x987D9C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001AE4")]
			[Address(RVA = "0xC0CC5C", Offset = "0xC0CC5C", VA = "0xC0CC5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x987DAC", Offset = "0x987DAC")]
			set
			{
			}
		}

		[Token(Token = "0x170002E0")]
		public int blockHeight
		{
			[Token(Token = "0x6001AE5")]
			[Address(RVA = "0xC0AE8C", Offset = "0xC0AE8C", VA = "0xC0AE8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x987DBC", Offset = "0x987DBC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001AE6")]
			[Address(RVA = "0xC0CC64", Offset = "0xC0CC64", VA = "0xC0CC64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x987DCC", Offset = "0x987DCC")]
			set
			{
			}
		}

		[Token(Token = "0x6001AE7")]
		[Address(RVA = "0xC0CC44", Offset = "0xC0CC44", VA = "0xC0CC44")]
		public AnimationTexture()
		{
		}
	}
	[Token(Token = "0x20004B8")]
	public class InstanceAnimationInfo
	{
		[Token(Token = "0x40015CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<AnimationInfo> listAniInfo;

		[Token(Token = "0x40015CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ExtraBoneInfo extraBoneInfo;

		[Token(Token = "0x6001AE8")]
		[Address(RVA = "0xC0B224", Offset = "0xC0B224", VA = "0xC0B224")]
		public InstanceAnimationInfo()
		{
		}
	}
	[Token(Token = "0x20004B9")]
	public class InstanceData
	{
		[Token(Token = "0x40015CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Matrix4x4[]>[] worldMatrix;

		[Token(Token = "0x40015CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<float[]>[] frameIndex;

		[Token(Token = "0x40015D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<float[]>[] preFrameIndex;

		[Token(Token = "0x40015D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<float[]>[] transitionProgress;

		[Token(Token = "0x6001AE9")]
		[Address(RVA = "0xC0975C", Offset = "0xC0975C", VA = "0xC0975C")]
		public InstanceData()
		{
		}
	}
	[Token(Token = "0x20004BA")]
	public class InstancingPackage
	{
		[Token(Token = "0x40015D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Material[] material;

		[Token(Token = "0x40015D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int animationTextureIndex;

		[Token(Token = "0x40015D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int subMeshCount;

		[Token(Token = "0x40015D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int instancingCount;

		[Token(Token = "0x40015D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int size;

		[Token(Token = "0x40015D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MaterialPropertyBlock propertyBlock;

		[Token(Token = "0x6001AEA")]
		[Address(RVA = "0xC09374", Offset = "0xC09374", VA = "0xC09374")]
		public InstancingPackage()
		{
		}
	}
	[Token(Token = "0x20004BB")]
	public class MaterialBlock
	{
		[Token(Token = "0x40015D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public InstanceData instanceData;

		[Token(Token = "0x40015D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int[] runtimePackageIndex;

		[Token(Token = "0x40015DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<InstancingPackage>[] packageList;

		[Token(Token = "0x6001AEB")]
		[Address(RVA = "0xC0AE6C", Offset = "0xC0AE6C", VA = "0xC0AE6C")]
		public MaterialBlock()
		{
		}
	}
	[Token(Token = "0x20004BC")]
	public class VertexCache
	{
		[Token(Token = "0x40015DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int nameCode;

		[Token(Token = "0x40015DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Mesh mesh;

		[Token(Token = "0x40015DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Dictionary<int, MaterialBlock> instanceBlockList;

		[Token(Token = "0x40015DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector4[] weight;

		[Token(Token = "0x40015DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector4[] boneIndex;

		[Token(Token = "0x40015E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Material[] materials;

		[Token(Token = "0x40015E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Matrix4x4[] bindPose;

		[Token(Token = "0x40015E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform[] bonePose;

		[Token(Token = "0x40015E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int boneTextureIndex;

		[Token(Token = "0x40015E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public ShadowCastingMode shadowcastingMode;

		[Token(Token = "0x40015E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool receiveShadow;

		[Token(Token = "0x40015E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int layer;

		[Token(Token = "0x6001AEC")]
		[Address(RVA = "0xC0AE74", Offset = "0xC0AE74", VA = "0xC0AE74")]
		public VertexCache()
		{
		}
	}
	[Token(Token = "0x20004BD")]
	public class LodInfo
	{
		[Token(Token = "0x40015E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int lodLevel;

		[Token(Token = "0x40015E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SkinnedMeshRenderer[] skinnedMeshRenderer;

		[Token(Token = "0x40015E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MeshRenderer[] meshRenderer;

		[Token(Token = "0x40015EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MeshFilter[] meshFilter;

		[Token(Token = "0x40015EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public VertexCache[] vertexCacheList;

		[Token(Token = "0x40015EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public MaterialBlock[] materialBlockList;

		[Token(Token = "0x6001AED")]
		[Address(RVA = "0xC02008", Offset = "0xC02008", VA = "0xC02008")]
		public LodInfo()
		{
		}
	}
	[Token(Token = "0x20004BE")]
	public class ComparerHash : IComparer<AnimationInfo>
	{
		[Token(Token = "0x6001AEE")]
		[Address(RVA = "0xC0CC7C", Offset = "0xC0CC7C", VA = "0xC0CC7C", Slot = "4")]
		public int Compare(AnimationInfo x, AnimationInfo y)
		{
			return default(int);
		}

		[Token(Token = "0x6001AEF")]
		[Address(RVA = "0xC03DC4", Offset = "0xC03DC4", VA = "0xC03DC4")]
		public ComparerHash()
		{
		}
	}
	[Token(Token = "0x20004BF")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9778EC", Offset = "0x9778EC")]
	public class AnimationInstancing : MonoBehaviour
	{
		[NonSerialized]
		[Token(Token = "0x40015ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform worldTransform;

		[Token(Token = "0x40015EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationPackageData packageData;

		[Token(Token = "0x40015EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BoundingSphere boundingSpere;

		[Token(Token = "0x40015F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9815C8", Offset = "0x9815C8")]
		private bool <visible>k__BackingField;

		[Token(Token = "0x40015F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9815D8", Offset = "0x9815D8")]
		private AnimationInstancing <parentInstance>k__BackingField;

		[Token(Token = "0x40015F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float playSpeed;

		[Token(Token = "0x40015F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public ShadowCastingMode shadowCastingMode;

		[Token(Token = "0x40015F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool receiveShadow;

		[NonSerialized]
		[Token(Token = "0x40015F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int layer;

		[Token(Token = "0x40015F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private WrapMode m_wrapMode;

		[Token(Token = "0x40015F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float speedParameter;

		[Token(Token = "0x40015F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float cacheParameter;

		[Token(Token = "0x40015F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<AnimationInfo> aniInfo;

		[Token(Token = "0x40015FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool applyRootMotion;

		[Token(Token = "0x40015FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9815E8", Offset = "0x9815E8")]
		public int bonePerVertex;

		[NonSerialized]
		[Token(Token = "0x40015FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float curFrame;

		[NonSerialized]
		[Token(Token = "0x40015FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float preAniFrame;

		[NonSerialized]
		[Token(Token = "0x40015FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public int aniIndex;

		[NonSerialized]
		[Token(Token = "0x40015FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public int preAniIndex;

		[NonSerialized]
		[Token(Token = "0x4001600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public int aniTextureIndex;

		[Token(Token = "0x4001601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private int preAniTextureIndex;

		[Token(Token = "0x4001602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float transitionDuration;

		[Token(Token = "0x4001603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private bool isInTransition;

		[Token(Token = "0x4001604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float transitionTimer;

		[NonSerialized]
		[Token(Token = "0x4001605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float transitionProgress;

		[Token(Token = "0x4001606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private int eventIndex;

		[Token(Token = "0x4001607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private ComparerHash comparer;

		[Token(Token = "0x4001608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private AnimationInfo searchInfo;

		[Token(Token = "0x4001609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private AnimationEvent aniEvent;

		[NonSerialized]
		[Token(Token = "0x400160A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public LodInfo[] lodInfo;

		[NonSerialized]
		[Token(Token = "0x400160B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public int lodLevel;

		[Token(Token = "0x400160C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private float lodCalculateFrequency;

		[Token(Token = "0x400160D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float lodFrequencyCount;

		[Token(Token = "0x400160E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Transform[] allTransforms;

		[Token(Token = "0x400160F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool isMeshRender;

		[Token(Token = "0x4001610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Animator m_animator;

		[Token(Token = "0x4001611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private List<AnimationInstancing> m_listAttachment;

		[Token(Token = "0x4001612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private bool m_shouldPlayAnimIndexOnInit;

		[Token(Token = "0x4001613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private int m_playAnimIdxOnInit;

		[Token(Token = "0x170002E1")]
		public bool visible
		{
			[Token(Token = "0x6001AF0")]
			[Address(RVA = "0xC015BC", Offset = "0xC015BC", VA = "0xC015BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x987DDC", Offset = "0x987DDC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001AF1")]
			[Address(RVA = "0xC015C4", Offset = "0xC015C4", VA = "0xC015C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x987DEC", Offset = "0x987DEC")]
			set
			{
			}
		}

		[Token(Token = "0x170002E2")]
		public AnimationInstancing parentInstance
		{
			[Token(Token = "0x6001AF2")]
			[Address(RVA = "0xC015D0", Offset = "0xC015D0", VA = "0xC015D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x987DFC", Offset = "0x987DFC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001AF3")]
			[Address(RVA = "0xC015D8", Offset = "0xC015D8", VA = "0xC015D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x987E0C", Offset = "0x987E0C")]
			set
			{
			}
		}

		[Token(Token = "0x170002E3")]
		public WrapMode Mode
		{
			[Token(Token = "0x6001AF4")]
			[Address(RVA = "0xC015E0", Offset = "0xC015E0", VA = "0xC015E0")]
			get
			{
				return default(WrapMode);
			}
			[Token(Token = "0x6001AF5")]
			[Address(RVA = "0xC015E8", Offset = "0xC015E8", VA = "0xC015E8")]
			set
			{
			}
		}

		[Token(Token = "0x6001AF6")]
		[Address(RVA = "0xC015F0", Offset = "0xC015F0", VA = "0xC015F0")]
		public bool IsLoop()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AF7")]
		[Address(RVA = "0xC01600", Offset = "0xC01600", VA = "0xC01600")]
		public bool IsPause()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AF8")]
		[Address(RVA = "0xC01610", Offset = "0xC01610", VA = "0xC01610")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AF9")]
		[Address(RVA = "0xC025A0", Offset = "0xC025A0", VA = "0xC025A0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001AFA")]
		[Address(RVA = "0xC02830", Offset = "0xC02830", VA = "0xC02830")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001AFB")]
		[Address(RVA = "0xC0292C", Offset = "0xC0292C", VA = "0xC0292C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001AFC")]
		[Address(RVA = "0xC02A20", Offset = "0xC02A20", VA = "0xC02A20")]
		public void PlayAnimIdxOnInit(int idx)
		{
		}

		[Token(Token = "0x6001AFD")]
		[Address(RVA = "0xC02A30", Offset = "0xC02A30", VA = "0xC02A30")]
		public bool InitializeAnimation()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AFE")]
		[Address(RVA = "0xC038BC", Offset = "0xC038BC", VA = "0xC038BC")]
		public void Prepare(List<AnimationInfo> infoList, ExtraBoneInfo extraBoneInfo)
		{
		}

		[Token(Token = "0x6001AFF")]
		[Address(RVA = "0xC02010", Offset = "0xC02010", VA = "0xC02010")]
		private void CalcBoundingSphere()
		{
		}

		[Token(Token = "0x6001B00")]
		[Address(RVA = "0xC043C4", Offset = "0xC043C4", VA = "0xC043C4")]
		public void PlayAnimation(string name)
		{
		}

		[Token(Token = "0x6001B01")]
		[Address(RVA = "0xC04228", Offset = "0xC04228", VA = "0xC04228")]
		public void PlayAnimation(int animationIndex)
		{
		}

		[Token(Token = "0x6001B02")]
		[Address(RVA = "0xC04690", Offset = "0xC04690", VA = "0xC04690")]
		public void CrossFade(string animationName, float duration)
		{
		}

		[Token(Token = "0x6001B03")]
		[Address(RVA = "0xC04718", Offset = "0xC04718", VA = "0xC04718")]
		public void CrossFade(int animationIndex, float duration)
		{
		}

		[Token(Token = "0x6001B04")]
		[Address(RVA = "0xC0476C", Offset = "0xC0476C", VA = "0xC0476C")]
		public void Pause()
		{
		}

		[Token(Token = "0x6001B05")]
		[Address(RVA = "0xC04778", Offset = "0xC04778", VA = "0xC04778")]
		public void Resume()
		{
		}

		[Token(Token = "0x6001B06")]
		[Address(RVA = "0xC04784", Offset = "0xC04784", VA = "0xC04784")]
		public void Stop()
		{
		}

		[Token(Token = "0x6001B07")]
		[Address(RVA = "0xC04798", Offset = "0xC04798", VA = "0xC04798")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B08")]
		[Address(RVA = "0xC047B8", Offset = "0xC047B8", VA = "0xC047B8")]
		public bool IsReady()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B09")]
		[Address(RVA = "0xC047C8", Offset = "0xC047C8", VA = "0xC047C8")]
		public AnimationInfo GetCurrentAnimationInfo()
		{
			return null;
		}

		[Token(Token = "0x6001B0A")]
		[Address(RVA = "0xC04864", Offset = "0xC04864", VA = "0xC04864")]
		public float GetAnimationLength(int index)
		{
			return default(float);
		}

		[Token(Token = "0x6001B0B")]
		[Address(RVA = "0xC04958", Offset = "0xC04958", VA = "0xC04958")]
		public AnimationInfo GetPreAnimationInfo()
		{
			return null;
		}

		[Token(Token = "0x6001B0C")]
		[Address(RVA = "0xC049F4", Offset = "0xC049F4", VA = "0xC049F4")]
		public void UpdateAnimation()
		{
		}

		[Token(Token = "0x6001B0D")]
		[Address(RVA = "0xC05014", Offset = "0xC05014", VA = "0xC05014")]
		public void UpdateLod(Vector3 cameraPosition)
		{
		}

		[Token(Token = "0x6001B0E")]
		[Address(RVA = "0xC04E44", Offset = "0xC04E44", VA = "0xC04E44")]
		private void UpdateAnimationEvent()
		{
		}

		[Token(Token = "0x6001B0F")]
		[Address(RVA = "0xC04414", Offset = "0xC04414", VA = "0xC04414")]
		private int FindAnimationInfo(int hash)
		{
			return default(int);
		}

		[Token(Token = "0x6001B10")]
		[Address(RVA = "0xC051A4", Offset = "0xC051A4", VA = "0xC051A4")]
		public void Attach(string boneName, AnimationInstancing attachment)
		{
		}

		[Token(Token = "0x6001B11")]
		[Address(RVA = "0xC0278C", Offset = "0xC0278C", VA = "0xC0278C")]
		public void Deattach(AnimationInstancing attachment)
		{
		}

		[Token(Token = "0x6001B12")]
		[Address(RVA = "0xC06300", Offset = "0xC06300", VA = "0xC06300")]
		public int GetAnimationCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001B13")]
		[Address(RVA = "0xC044BC", Offset = "0xC044BC", VA = "0xC044BC")]
		private void RefreshAttachmentAnimation(int index)
		{
		}

		[Token(Token = "0x6001B14")]
		[Address(RVA = "0xC06360", Offset = "0xC06360", VA = "0xC06360")]
		public AnimationInstancing()
		{
		}
	}
	[Token(Token = "0x20004C0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x977924", Offset = "0x977924")]
	public class AnimationInstancingMgr : Singleton<AnimationInstancingMgr>
	{
		[Token(Token = "0x2000F21")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97B810", Offset = "0x97B810")]
		private sealed class <Start>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002277")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002278")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002279")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AnimationInstancingMgr <>4__this;

			[Token(Token = "0x170003C0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60032F3")]
				[Address(RVA = "0xC0BFA0", Offset = "0xC0BFA0", VA = "0xC0BFA0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003C1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60032F5")]
				[Address(RVA = "0xC0C010", Offset = "0xC0C010", VA = "0xC0C010", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60032F0")]
			[Address(RVA = "0xC066A4", Offset = "0xC066A4", VA = "0xC066A4")]
			[DebuggerHidden]
			public <Start>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x60032F1")]
			[Address(RVA = "0xC0BEA8", Offset = "0xC0BEA8", VA = "0xC0BEA8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60032F2")]
			[Address(RVA = "0xC0BEAC", Offset = "0xC0BEAC", VA = "0xC0BEAC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60032F4")]
			[Address(RVA = "0xC0BFA8", Offset = "0xC0BFA8", VA = "0xC0BFA8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<AnimationInstancing> m_aniInstancingList;

		[Token(Token = "0x4001615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_cameraTransform;

		[Token(Token = "0x4001616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<int, VertexCache> m_vertexCachePool;

		[Token(Token = "0x4001617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<int, InstanceData> m_instanceDataPool;

		[Token(Token = "0x4001618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<AnimationTexture> m_animationTextureList;

		[Token(Token = "0x4001619")]
		private const int c_InstancingPackageSize = 200;

		[Token(Token = "0x400161A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private BoundingSphere[] m_boundingSpheres;

		[Token(Token = "0x400161B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int m_usedBoundingSphereCount;

		[Token(Token = "0x400161C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private CullingGroup m_cullingGroup;

		[Token(Token = "0x400161D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<string, InstanceAnimationInfo> m_animationInfo;

		[Token(Token = "0x6001B15")]
		[Address(RVA = "0xC063FC", Offset = "0xC063FC", VA = "0xC063FC")]
		public static AnimationInstancingMgr GetInstance()
		{
			return null;
		}

		[Token(Token = "0x6001B16")]
		[Address(RVA = "0xC06464", Offset = "0xC06464", VA = "0xC06464")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B17")]
		[Address(RVA = "0xC06630", Offset = "0xC06630", VA = "0xC06630")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x987E1C", Offset = "0x987E1C")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001B18")]
		[Address(RVA = "0xC06524", Offset = "0xC06524", VA = "0xC06524")]
		private void InitializeCullingGroup()
		{
		}

		[Token(Token = "0x6001B19")]
		[Address(RVA = "0xC066D0", Offset = "0xC066D0", VA = "0xC066D0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B1A")]
		[Address(RVA = "0xC07538", Offset = "0xC07538", VA = "0xC07538")]
		private void Render()
		{
		}

		[Token(Token = "0x6001B1B")]
		[Address(RVA = "0xC07E74", Offset = "0xC07E74", VA = "0xC07E74")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001B1C")]
		[Address(RVA = "0xC0235C", Offset = "0xC0235C", VA = "0xC0235C")]
		public void AddInstance(GameObject obj)
		{
		}

		[Token(Token = "0x6001B1D")]
		[Address(RVA = "0xC026AC", Offset = "0xC026AC", VA = "0xC026AC")]
		public void RemoveInstance(AnimationInstancing instance)
		{
		}

		[Token(Token = "0x6001B1E")]
		[Address(RVA = "0xC07F40", Offset = "0xC07F40", VA = "0xC07F40")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001B1F")]
		[Address(RVA = "0xC07FE0", Offset = "0xC07FE0", VA = "0xC07FE0")]
		private void RefreshMaterial()
		{
		}

		[Token(Token = "0x6001B20")]
		[Address(RVA = "0xC06760", Offset = "0xC06760", VA = "0xC06760")]
		private void ApplyBoneMatrix()
		{
		}

		[Token(Token = "0x6001B21")]
		[Address(RVA = "0xC087E4", Offset = "0xC087E4", VA = "0xC087E4")]
		private void ApplyRootMotion(AnimationInstancing instance)
		{
		}

		[Token(Token = "0x6001B22")]
		[Address(RVA = "0xC09150", Offset = "0xC09150", VA = "0xC09150")]
		private int findTextureInternal(string name)
		{
			return default(int);
		}

		[Token(Token = "0x6001B23")]
		[Address(RVA = "0xC09234", Offset = "0xC09234", VA = "0xC09234")]
		public AnimationTexture FindTexture(int index)
		{
			return null;
		}

		[Token(Token = "0x6001B24")]
		[Address(RVA = "0xC05A58", Offset = "0xC05A58", VA = "0xC05A58")]
		public VertexCache FindVertexCache(int renderName)
		{
			return null;
		}

		[Token(Token = "0x6001B25")]
		[Address(RVA = "0xC092E0", Offset = "0xC092E0", VA = "0xC092E0")]
		private bool importAnimationTexture(AnimationTexture aniTexture)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B26")]
		[Address(RVA = "0xC07F80", Offset = "0xC07F80", VA = "0xC07F80")]
		private void ReleaseBuffer()
		{
		}

		[Token(Token = "0x6001B27")]
		[Address(RVA = "0xC08C24", Offset = "0xC08C24", VA = "0xC08C24")]
		public InstancingPackage CreatePackage(InstanceData data, Mesh mesh, Material[] originalMaterial, int animationIndex)
		{
			return null;
		}

		[Token(Token = "0x6001B28")]
		[Address(RVA = "0xC09384", Offset = "0xC09384", VA = "0xC09384")]
		private int GetIdentify(Material[] mat)
		{
			return default(int);
		}

		[Token(Token = "0x6001B29")]
		[Address(RVA = "0xC09430", Offset = "0xC09430", VA = "0xC09430")]
		private InstanceData CreateInstanceData(int packageCount)
		{
			return null;
		}

		[Token(Token = "0x6001B2A")]
		[Address(RVA = "0xC02BF8", Offset = "0xC02BF8", VA = "0xC02BF8")]
		public void AddMeshVertex(string prefabName, LodInfo[] lodInfo, Transform[] bones, List<Matrix4x4> bindPose, int bonePerVertex, [Optional] string alias)
		{
		}

		[Token(Token = "0x6001B2B")]
		[Address(RVA = "0xC0ADB4", Offset = "0xC0ADB4", VA = "0xC0ADB4")]
		private int GetPackageCount(VertexCache vertexCache)
		{
			return default(int);
		}

		[Token(Token = "0x6001B2C")]
		[Address(RVA = "0xC09764", Offset = "0xC09764", VA = "0xC09764")]
		private MaterialBlock CreateBlock(VertexCache cache, Material[] materials)
		{
			return null;
		}

		[Token(Token = "0x6001B2D")]
		[Address(RVA = "0xC099C0", Offset = "0xC099C0", VA = "0xC099C0")]
		private VertexCache CreateVertexCache(string prefabName, int renderName, int alias, Mesh mesh)
		{
			return null;
		}

		[Token(Token = "0x6001B2E")]
		[Address(RVA = "0xC09C38", Offset = "0xC09C38", VA = "0xC09C38")]
		private void SetupVertexCache(VertexCache vertexCache, MaterialBlock block, SkinnedMeshRenderer render, Transform[] boneTransform, int bonePerVertex)
		{
		}

		[Token(Token = "0x6001B2F")]
		[Address(RVA = "0xC0AB18", Offset = "0xC0AB18", VA = "0xC0AB18")]
		private void SetupVertexCache(VertexCache vertexCache, MaterialBlock block, MeshRenderer render, Mesh mesh, Transform[] boneTransform, int bonePerVertex)
		{
		}

		[Token(Token = "0x6001B30")]
		[Address(RVA = "0xC05FB8", Offset = "0xC05FB8", VA = "0xC05FB8")]
		public void SetupAdditionalData(VertexCache vertexCache)
		{
		}

		[Token(Token = "0x6001B31")]
		[Address(RVA = "0xC0844C", Offset = "0xC0844C", VA = "0xC0844C")]
		public void PreparePackageMaterial(InstancingPackage package, VertexCache vertexCache, int aniTextureIndex)
		{
		}

		[Token(Token = "0x6001B32")]
		[Address(RVA = "0xC0227C", Offset = "0xC0227C", VA = "0xC0227C")]
		public void AddBoundingSphere(AnimationInstancing instance)
		{
		}

		[Token(Token = "0x6001B33")]
		[Address(RVA = "0xC0AE94", Offset = "0xC0AE94", VA = "0xC0AE94")]
		private void CullingStateChanged(CullingGroupEvent evt)
		{
		}

		[Token(Token = "0x6001B34")]
		[Address(RVA = "0xC05AD8", Offset = "0xC05AD8", VA = "0xC05AD8")]
		public void BindAttachment(VertexCache parentCache, VertexCache attachmentCache, Mesh sharedMesh, int boneIndex)
		{
		}

		[Token(Token = "0x6001B35")]
		[Address(RVA = "0xC037C4", Offset = "0xC037C4", VA = "0xC037C4")]
		public InstanceAnimationInfo FindAnimationInfo(AnimationInstancing instance)
		{
			return null;
		}

		[Token(Token = "0x6001B36")]
		[Address(RVA = "0xC0B08C", Offset = "0xC0B08C", VA = "0xC0B08C")]
		private InstanceAnimationInfo loadAnimationInfoFromScriptableObject(string instanceGuid, AnimationInstancing instance)
		{
			return null;
		}

		[Token(Token = "0x6001B37")]
		[Address(RVA = "0xC0BDE8", Offset = "0xC0BDE8", VA = "0xC0BDE8")]
		public AnimationInstancingMgr()
		{
		}
	}
	[Token(Token = "0x20004C1")]
	public class AnimationManager
	{
		[Token(Token = "0x6001B38")]
		[Address(RVA = "0xC0C018", Offset = "0xC0C018", VA = "0xC0C018")]
		public static void WriteAnimationInfo(BinaryWriter writer, ArrayList aniInfo)
		{
		}

		[Token(Token = "0x6001B39")]
		[Address(RVA = "0xC0C8A4", Offset = "0xC0C8A4", VA = "0xC0C8A4")]
		public static void WriteExtraBoneInfo(BinaryWriter writer, bool exposeAttachments, ExtraBoneInfo extraBoneInfo)
		{
		}

		[Token(Token = "0x6001B3A")]
		[Address(RVA = "0xC0CA30", Offset = "0xC0CA30", VA = "0xC0CA30")]
		public static void WriteTexture(BinaryWriter writer, Texture2D[] bakedBoneTexture, int textureBlockWidth, int textureBlockHeight)
		{
		}

		[Token(Token = "0x6001B3B")]
		[Address(RVA = "0xC0B22C", Offset = "0xC0B22C", VA = "0xC0B22C")]
		public static List<AnimationInfo> ReadAnimationInfo(BinaryReader reader)
		{
			return null;
		}

		[Token(Token = "0x6001B3C")]
		[Address(RVA = "0xC0B89C", Offset = "0xC0B89C", VA = "0xC0B89C")]
		public static ExtraBoneInfo ReadExtraBoneInfo(BinaryReader reader)
		{
			return null;
		}

		[Token(Token = "0x6001B3D")]
		[Address(RVA = "0xC0BAE8", Offset = "0xC0BAE8", VA = "0xC0BAE8")]
		public static AnimationTexture ReadTexture(BinaryReader reader, string prefabName)
		{
			return null;
		}

		[Token(Token = "0x6001B3E")]
		[Address(RVA = "0xC0CC6C", Offset = "0xC0CC6C", VA = "0xC0CC6C")]
		public AnimationManager()
		{
		}
	}
	[Token(Token = "0x20004C2")]
	public class AnimationPackageData : ScriptableObject
	{
		[Token(Token = "0x400161E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string guid;

		[Token(Token = "0x400161F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public byte[] data;

		[Token(Token = "0x6001B3F")]
		[Address(RVA = "0xC0CC74", Offset = "0xC0CC74", VA = "0xC0CC74")]
		public AnimationPackageData()
		{
		}
	}
	[Token(Token = "0x20004C3")]
	public class RuntimeHelper
	{
		[Token(Token = "0x2000F22")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97B820", Offset = "0x97B820")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x400227A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform[] bones;

			[Token(Token = "0x60032F6")]
			[Address(RVA = "0xC0CCC4", Offset = "0xC0CCC4", VA = "0xC0CCC4")]
			public <>c__DisplayClass0_0()
			{
			}
		}

		[Token(Token = "0x2000F23")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97B830", Offset = "0x97B830")]
		private sealed class <>c__DisplayClass0_1
		{
			[Token(Token = "0x400227B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int j;

			[Token(Token = "0x400227C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass0_0 CS$<>8__locals1;

			[Token(Token = "0x60032F7")]
			[Address(RVA = "0xC0CCCC", Offset = "0xC0CCCC", VA = "0xC0CCCC")]
			public <>c__DisplayClass0_1()
			{
			}

			[Token(Token = "0x60032F8")]
			[Address(RVA = "0xC0CCDC", Offset = "0xC0CCDC", VA = "0xC0CCDC")]
			internal bool <MergeBone>b__0(Transform q)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001B40")]
		[Address(RVA = "0xC03DCC", Offset = "0xC03DCC", VA = "0xC03DCC")]
		public static Transform[] MergeBone(SkinnedMeshRenderer[] meshRender, List<Matrix4x4> bindPose)
		{
			return null;
		}

		[Token(Token = "0x6001B41")]
		[Address(RVA = "0xC0AFE8", Offset = "0xC0AFE8", VA = "0xC0AFE8")]
		public static Quaternion QuaternionFromMatrix(Matrix4x4 mat)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001B42")]
		[Address(RVA = "0xC0CCD4", Offset = "0xC0CCD4", VA = "0xC0CCD4")]
		public RuntimeHelper()
		{
		}
	}
}
namespace TFHC_Shader_Samples
{
	[Token(Token = "0x20004C4")]
	public class highlightAnimated : MonoBehaviour
	{
		[Token(Token = "0x4001620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Material mat;

		[Token(Token = "0x6001B43")]
		[Address(RVA = "0xC7ED88", Offset = "0xC7ED88", VA = "0xC7ED88")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B44")]
		[Address(RVA = "0xC7EDF8", Offset = "0xC7EDF8", VA = "0xC7EDF8")]
		private void OnMouseEnter()
		{
		}

		[Token(Token = "0x6001B45")]
		[Address(RVA = "0xC7EE90", Offset = "0xC7EE90", VA = "0xC7EE90")]
		private void OnMouseExit()
		{
		}

		[Token(Token = "0x6001B46")]
		[Address(RVA = "0xC7EE00", Offset = "0xC7EE00", VA = "0xC7EE00")]
		private void switchhighlighted(bool highlighted)
		{
		}

		[Token(Token = "0x6001B47")]
		[Address(RVA = "0xC7EE98", Offset = "0xC7EE98", VA = "0xC7EE98")]
		public highlightAnimated()
		{
		}
	}
}
namespace TFHC_ForceShield_Shader_Sample
{
	[Token(Token = "0x20004C5")]
	public class ForceShieldDestroyBall : MonoBehaviour
	{
		[Token(Token = "0x4001621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float lifetime;

		[Token(Token = "0x6001B48")]
		[Address(RVA = "0xC7E700", Offset = "0xC7E700", VA = "0xC7E700")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B49")]
		[Address(RVA = "0xC7E78C", Offset = "0xC7E78C", VA = "0xC7E78C")]
		public ForceShieldDestroyBall()
		{
		}
	}
	[Token(Token = "0x20004C6")]
	public class ForceShieldImpactDetection : MonoBehaviour
	{
		[Token(Token = "0x4001622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float hitTime;

		[Token(Token = "0x4001623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material mat;

		[Token(Token = "0x6001B4A")]
		[Address(RVA = "0xC7E79C", Offset = "0xC7E79C", VA = "0xC7E79C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B4B")]
		[Address(RVA = "0xC7E80C", Offset = "0xC7E80C", VA = "0xC7E80C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B4C")]
		[Address(RVA = "0xC7E8BC", Offset = "0xC7E8BC", VA = "0xC7E8BC")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001B4D")]
		[Address(RVA = "0xC7EAD0", Offset = "0xC7EAD0", VA = "0xC7EAD0")]
		public ForceShieldImpactDetection()
		{
		}
	}
	[Token(Token = "0x20004C7")]
	public class ForceShieldShootBall : MonoBehaviour
	{
		[Token(Token = "0x4001624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Rigidbody bullet;

		[Token(Token = "0x4001625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform origshoot;

		[Token(Token = "0x4001626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float speed;

		[Token(Token = "0x4001627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float distance;

		[Token(Token = "0x6001B4E")]
		[Address(RVA = "0xC7EAD8", Offset = "0xC7EAD8", VA = "0xC7EAD8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B4F")]
		[Address(RVA = "0xC7ED74", Offset = "0xC7ED74", VA = "0xC7ED74")]
		public ForceShieldShootBall()
		{
		}
	}
}
namespace prototype
{
	[Token(Token = "0x20004C8")]
	public class ConditionalAttribute : PropertyAttribute
	{
		[Token(Token = "0x4001628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly string _propertyToCheck;

		[Token(Token = "0x4001629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly object _compareValue;

		[Token(Token = "0x6001B50")]
		[Address(RVA = "0xF51244", Offset = "0xF51244", VA = "0xF51244")]
		public ConditionalAttribute(string propertyToCheck, [Optional] object compareValue)
		{
		}
	}
}
namespace ftg
{
	[Token(Token = "0x20004C9")]
	public class RandomChooser : StateMachineBehaviour
	{
		[Token(Token = "0x400162A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string animationParameterName;

		[Token(Token = "0x400162B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int parameterId;

		[Token(Token = "0x400162C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int transitionCount;

		[Token(Token = "0x6001B51")]
		[Address(RVA = "0x1E3B47C", Offset = "0x1E3B47C", VA = "0x1E3B47C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B52")]
		[Address(RVA = "0x1E3B4CC", Offset = "0x1E3B4CC", VA = "0x1E3B4CC", Slot = "4")]
		public override void OnStateEnter(Animator animator, AnimatorStateInfo animatorStateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6001B53")]
		[Address(RVA = "0x1E3B52C", Offset = "0x1E3B52C", VA = "0x1E3B52C")]
		public RandomChooser()
		{
		}
	}
	[Token(Token = "0x20004CA")]
	public class RandomValue : MonoBehaviour
	{
		[Token(Token = "0x400162D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Animator[] animators;

		[Token(Token = "0x6001B54")]
		[Address(RVA = "0x1E3B58C", Offset = "0x1E3B58C", VA = "0x1E3B58C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B55")]
		[Address(RVA = "0x1E3B6B0", Offset = "0x1E3B6B0", VA = "0x1E3B6B0")]
		public RandomValue()
		{
		}
	}
	[Token(Token = "0x20004CB")]
	public class TriggerAnimationEvent : MonoBehaviour
	{
		[Token(Token = "0x2000F24")]
		public enum ParameterType
		{
			[Token(Token = "0x400227E")]
			IntType,
			[Token(Token = "0x400227F")]
			BoolType,
			[Token(Token = "0x4002280")]
			FloatType
		}

		[Token(Token = "0x400162E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x981600", Offset = "0x981600")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x981600", Offset = "0x981600")]
		public int tagId;

		[Token(Token = "0x400162F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x981660", Offset = "0x981660")]
		public Animator animator;

		[Token(Token = "0x4001630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x981698", Offset = "0x981698")]
		public string animationParameterName;

		[Token(Token = "0x4001631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9816D0", Offset = "0x9816D0")]
		public ParameterType parameterType;

		[Token(Token = "0x4001632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool boolValue;

		[Token(Token = "0x4001633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int intValue;

		[Token(Token = "0x4001634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float floatValue;

		[Token(Token = "0x4001635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x981708", Offset = "0x981708")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x981708", Offset = "0x981708")]
		public string soundIdName;

		[Token(Token = "0x4001636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform soundLocation;

		[Token(Token = "0x6001B56")]
		[Address(RVA = "0xF43E5C", Offset = "0xF43E5C", VA = "0xF43E5C")]
		public void TriggerAnimation(int id)
		{
		}

		[Token(Token = "0x6001B57")]
		[Address(RVA = "0xF43FA0", Offset = "0xF43FA0", VA = "0xF43FA0")]
		public TriggerAnimationEvent()
		{
		}
	}
	[Token(Token = "0x20004CC")]
	public class TriggerInteractionEvent : MonoBehaviour
	{
		[Token(Token = "0x2000F25")]
		internal delegate void OnTriggerInteractionDelegate();

		[Token(Token = "0x4001637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x981768", Offset = "0x981768")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x981768", Offset = "0x981768")]
		public int tagId;

		[Token(Token = "0x4001638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string description;

		[Token(Token = "0x4001639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9817C8", Offset = "0x9817C8")]
		public InteractionReceiverEvent[] interactionEvents;

		[Token(Token = "0x400163A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal OnTriggerInteractionDelegate interactionCb;

		[Token(Token = "0x6001B58")]
		[Address(RVA = "0xF4416C", Offset = "0xF4416C", VA = "0xF4416C")]
		public void TriggerInteraction(int id)
		{
		}

		[Token(Token = "0x6001B59")]
		[Address(RVA = "0xF445B4", Offset = "0xF445B4", VA = "0xF445B4")]
		public TriggerInteractionEvent()
		{
		}
	}
	[Token(Token = "0x20004CD")]
	public class AudioAnimationEventReciever : MonoBehaviour
	{
		[Token(Token = "0x400163B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x981800", Offset = "0x981800")]
		public GameObject m_otherSoundEmitter;

		[Token(Token = "0x6001B5A")]
		[Address(RVA = "0xBB8740", Offset = "0xBB8740", VA = "0xBB8740")]
		public void AnimationSoundEvent(UnityEngine.AnimationEvent animationEvent)
		{
		}

		[Token(Token = "0x6001B5B")]
		[Address(RVA = "0xBB8864", Offset = "0xBB8864", VA = "0xBB8864")]
		public void AnimationSoundEvent(AnimationInstancing.AnimationEvent animationEvent)
		{
		}

		[Token(Token = "0x6001B5C")]
		[Address(RVA = "0xBB897C", Offset = "0xBB897C", VA = "0xBB897C")]
		public AudioAnimationEventReciever()
		{
		}
	}
	[Token(Token = "0x20004CE")]
	public class AudioFabricPlayerSmb : StateMachineBehaviour
	{
		[Token(Token = "0x400163C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string m_soundEventName;

		[Token(Token = "0x400163D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool m_onlyEnterOnce;

		[Token(Token = "0x400163E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool m_hasEntered;

		[Token(Token = "0x6001B5D")]
		[Address(RVA = "0xBB8984", Offset = "0xBB8984", VA = "0xBB8984", Slot = "4")]
		public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6001B5E")]
		[Address(RVA = "0xBB8A84", Offset = "0xBB8A84", VA = "0xBB8A84")]
		public AudioFabricPlayerSmb()
		{
		}
	}
	[Token(Token = "0x20004CF")]
	public class AudioParticleSound : MonoBehaviour
	{
		[Token(Token = "0x400163F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string m_soundEventName;

		[Token(Token = "0x4001640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool m_hasPosted;

		[Token(Token = "0x4001641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x981848", Offset = "0x981848")]
		[SerializeField]
		private bool m_dontPlayOnStart;

		[Token(Token = "0x4001642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject m_soundObject;

		[Token(Token = "0x6001B5F")]
		[Address(RVA = "0xBB8A8C", Offset = "0xBB8A8C", VA = "0xBB8A8C")]
		public void Start()
		{
		}

		[Token(Token = "0x6001B60")]
		[Address(RVA = "0xBB8B98", Offset = "0xBB8B98", VA = "0xBB8B98")]
		public void OnParticleSystemStopped()
		{
		}

		[Token(Token = "0x6001B61")]
		[Address(RVA = "0xBB8CA8", Offset = "0xBB8CA8", VA = "0xBB8CA8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001B62")]
		[Address(RVA = "0xBB8CAC", Offset = "0xBB8CAC", VA = "0xBB8CAC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001B63")]
		[Address(RVA = "0xBB8AA4", Offset = "0xBB8AA4", VA = "0xBB8AA4")]
		public void PlaySound()
		{
		}

		[Token(Token = "0x6001B64")]
		[Address(RVA = "0xBB8B9C", Offset = "0xBB8B9C", VA = "0xBB8B9C")]
		public void StopSound()
		{
		}

		[Token(Token = "0x6001B65")]
		[Address(RVA = "0xBB8CB0", Offset = "0xBB8CB0", VA = "0xBB8CB0")]
		public AudioParticleSound()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004D0")]
	public class SoundDefinition
	{
		[Token(Token = "0x4001643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string soundIdentifier;

		[Token(Token = "0x4001644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool loopingSound;

		[Token(Token = "0x4001645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int maxNumberOfSimultaneousSounds;

		[Token(Token = "0x4001646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<AudioClip> audioClips;

		[Token(Token = "0x4001647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioSource audioSourceTemplate;

		[Token(Token = "0x4001648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public int soundIdentifierHash;

		[Token(Token = "0x4001649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public AudioSource[] audioSources;

		[Token(Token = "0x400164A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public GameObject[] audioSourceOwners;

		[Token(Token = "0x400164B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public int currAudioSource;

		[Token(Token = "0x400164C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[HideInInspector]
		public float initialPitch;

		[Token(Token = "0x400164D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public float initialVolume;

		[Token(Token = "0x400164E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[HideInInspector]
		public float initialPanStereo;

		[Token(Token = "0x400164F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public float initialSpatialBlend;

		[Token(Token = "0x4001650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[HideInInspector]
		public int initialPriority;

		[Token(Token = "0x6001B66")]
		[Address(RVA = "0x1E476DC", Offset = "0x1E476DC", VA = "0x1E476DC")]
		public SoundDefinition()
		{
		}
	}
	[Token(Token = "0x20004D1")]
	public class AudioPlayer : MonoBehaviour
	{
		[Token(Token = "0x2000F26")]
		public delegate void OnSoundPlayingCompleteDelegate(int soundCookie);

		[Token(Token = "0x2000F27")]
		public enum SoundParameters
		{
			[Token(Token = "0x4002282")]
			Pitch,
			[Token(Token = "0x4002283")]
			Volume,
			[Token(Token = "0x4002284")]
			StereoPan,
			[Token(Token = "0x4002285")]
			SpatialBlend,
			[Token(Token = "0x4002286")]
			Priority
		}

		[Token(Token = "0x2000F28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97B840", Offset = "0x97B840")]
		private sealed class <disableAudioSource>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002287")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002288")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002289")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x400228A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SoundDefinition soundDef;

			[Token(Token = "0x400228B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int audioSourceIdx;

			[Token(Token = "0x400228C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public GameObject soundParent;

			[Token(Token = "0x400228D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public AudioPlayer <>4__this;

			[Token(Token = "0x400228E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public OnSoundPlayingCompleteDelegate cb;

			[Token(Token = "0x170003C2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003304")]
				[Address(RVA = "0xBBBB74", Offset = "0xBBBB74", VA = "0xBBBB74", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003C3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003306")]
				[Address(RVA = "0xBBBBE4", Offset = "0xBBBBE4", VA = "0xBBBBE4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003301")]
			[Address(RVA = "0xBBB420", Offset = "0xBBB420", VA = "0xBBB420")]
			[DebuggerHidden]
			public <disableAudioSource>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x6003302")]
			[Address(RVA = "0xBBB4BC", Offset = "0xBBB4BC", VA = "0xBBB4BC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003303")]
			[Address(RVA = "0xBBB4C0", Offset = "0xBBB4C0", VA = "0xBBB4C0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003305")]
			[Address(RVA = "0xBBBB7C", Offset = "0xBBBB7C", VA = "0xBBBB7C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AudioPlayer _instance;

		[Token(Token = "0x4001652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundDefinition[] sounds;

		[Token(Token = "0x4001653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<AudioSource> m_playingSounds;

		[Token(Token = "0x170002E4")]
		public static AudioPlayer instance
		{
			[Token(Token = "0x6001B67")]
			[Address(RVA = "0xBB9078", Offset = "0xBB9078", VA = "0xBB9078")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B68")]
		[Address(RVA = "0xBB91B4", Offset = "0xBB91B4", VA = "0xBB91B4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B69")]
		[Address(RVA = "0xBBA158", Offset = "0xBBA158", VA = "0xBBA158")]
		public int GetIdForSound(string soundId)
		{
			return default(int);
		}

		[Token(Token = "0x6001B6A")]
		[Address(RVA = "0xBBA164", Offset = "0xBBA164", VA = "0xBBA164")]
		public int PlaySound(string soundId, GameObject soundParent, [Optional] OnSoundPlayingCompleteDelegate cb)
		{
			return default(int);
		}

		[Token(Token = "0x6001B6B")]
		[Address(RVA = "0xBBA1AC", Offset = "0xBBA1AC", VA = "0xBBA1AC")]
		public int PlaySound(int soundIdentifierHash, GameObject soundParent, [Optional] OnSoundPlayingCompleteDelegate cb)
		{
			return default(int);
		}

		[Token(Token = "0x6001B6C")]
		[Address(RVA = "0xBBA82C", Offset = "0xBBA82C", VA = "0xBBA82C")]
		private AudioSource getAudioSource(int soundIdentifierHash, int soundCookie)
		{
			return null;
		}

		[Token(Token = "0x6001B6D")]
		[Address(RVA = "0xBBA888", Offset = "0xBBA888", VA = "0xBBA888")]
		public void SetParameter(string soundId, int soundCookie, SoundParameters parameter, float val)
		{
		}

		[Token(Token = "0x6001B6E")]
		[Address(RVA = "0xBBA8E0", Offset = "0xBBA8E0", VA = "0xBBA8E0")]
		public void SetParameter(int soundIdentifierHash, int soundCookie, SoundParameters parameter, float val)
		{
		}

		[Token(Token = "0x6001B6F")]
		[Address(RVA = "0xBBAABC", Offset = "0xBBAABC", VA = "0xBBAABC")]
		public void SetParameter(string soundId, int soundCookie, SoundParameters parameter, int val)
		{
		}

		[Token(Token = "0x6001B70")]
		[Address(RVA = "0xBBAB0C", Offset = "0xBBAB0C", VA = "0xBBAB0C")]
		public void SetParameter(int soundIdentifierHash, int soundCookie, SoundParameters parameter, int val)
		{
		}

		[Token(Token = "0x6001B71")]
		[Address(RVA = "0xBBAC28", Offset = "0xBBAC28", VA = "0xBBAC28")]
		public void ResetParameter(int soundIdentifierHash, int soundCookie, SoundParameters parameter)
		{
		}

		[Token(Token = "0x6001B72")]
		[Address(RVA = "0xBBAE94", Offset = "0xBBAE94", VA = "0xBBAE94")]
		public float GetParameter(string soundId, int soundCookie, SoundParameters parameter)
		{
			return default(float);
		}

		[Token(Token = "0x6001B73")]
		[Address(RVA = "0xBBAEDC", Offset = "0xBBAEDC", VA = "0xBBAEDC")]
		public float GetParameter(int soundIdentifierHash, int soundCookie, SoundParameters parameter)
		{
			return default(float);
		}

		[Token(Token = "0x6001B74")]
		[Address(RVA = "0xBBB078", Offset = "0xBBB078", VA = "0xBBB078")]
		public int GetParameterInt(string soundId, int soundCookie, SoundParameters parameter)
		{
			return default(int);
		}

		[Token(Token = "0x6001B75")]
		[Address(RVA = "0xBBB0C0", Offset = "0xBBB0C0", VA = "0xBBB0C0")]
		public int GetParameterInt(int soundIdentifierHash, int soundCookie, SoundParameters parameter)
		{
			return default(int);
		}

		[Token(Token = "0x6001B76")]
		[Address(RVA = "0xBBB1CC", Offset = "0xBBB1CC", VA = "0xBBB1CC")]
		public void StopSound(string soundId, GameObject soundParent)
		{
		}

		[Token(Token = "0x6001B77")]
		[Address(RVA = "0xBBB204", Offset = "0xBBB204", VA = "0xBBB204")]
		public void StopSound(int soundIdentifierHash, GameObject gameObject)
		{
		}

		[Token(Token = "0x6001B78")]
		[Address(RVA = "0xBBA728", Offset = "0xBBA728", VA = "0xBBA728")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x987E80", Offset = "0x987E80")]
		private IEnumerator disableAudioSource(SoundDefinition soundDef, int audioSourceIdx, GameObject soundParent, float delay, OnSoundPlayingCompleteDelegate cb)
		{
			return null;
		}

		[Token(Token = "0x6001B79")]
		[Address(RVA = "0xBBA644", Offset = "0xBBA644", VA = "0xBBA644")]
		private SoundDefinition getSoundDefinition(int soundIdentifierHash)
		{
			return null;
		}

		[Token(Token = "0x6001B7A")]
		[Address(RVA = "0xBBB44C", Offset = "0xBBB44C", VA = "0xBBB44C")]
		public AudioPlayer()
		{
		}
	}
	[Token(Token = "0x20004D2")]
	public class AudioPlaySound : MonoBehaviour
	{
		[Token(Token = "0x2000F29")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97B850", Offset = "0x97B850")]
		private sealed class <WaitOnStart>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400228F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002290")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002291")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AudioPlaySound <>4__this;

			[Token(Token = "0x170003C4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600330A")]
				[Address(RVA = "0xBB9000", Offset = "0xBB9000", VA = "0xBB9000", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003C5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600330C")]
				[Address(RVA = "0xBB9070", Offset = "0xBB9070", VA = "0xBB9070", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003307")]
			[Address(RVA = "0xBB8D58", Offset = "0xBB8D58", VA = "0xBB8D58")]
			[DebuggerHidden]
			public <WaitOnStart>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6003308")]
			[Address(RVA = "0xBB8EDC", Offset = "0xBB8EDC", VA = "0xBB8EDC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003309")]
			[Address(RVA = "0xBB8EE0", Offset = "0xBB8EE0", VA = "0xBB8EE0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600330B")]
			[Address(RVA = "0xBB9008", Offset = "0xBB9008", VA = "0xBB9008", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string m_soundFabricEventName;

		[Token(Token = "0x4001655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FtgAudio.FtgEventAction m_eventAction;

		[Token(Token = "0x4001656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool m_onStart;

		[Token(Token = "0x4001657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool m_onEnable;

		[Token(Token = "0x6001B7B")]
		[Address(RVA = "0xBB8CB8", Offset = "0xBB8CB8", VA = "0xBB8CB8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B7C")]
		[Address(RVA = "0xBB8CE4", Offset = "0xBB8CE4", VA = "0xBB8CE4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x987EE4", Offset = "0x987EE4")]
		private IEnumerator WaitOnStart()
		{
			return null;
		}

		[Token(Token = "0x6001B7D")]
		[Address(RVA = "0xBB8D84", Offset = "0xBB8D84", VA = "0xBB8D84")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001B7E")]
		[Address(RVA = "0xBB8E30", Offset = "0xBB8E30", VA = "0xBB8E30")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001B7F")]
		[Address(RVA = "0xBB8ECC", Offset = "0xBB8ECC", VA = "0xBB8ECC")]
		public AudioPlaySound()
		{
		}
	}
	[Token(Token = "0x20004D3")]
	public class AudioSoundSystem : MonoBehaviour
	{
		[Token(Token = "0x4001658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static AudioSoundSystem instance;

		[Token(Token = "0x4001659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private AudioComponentHolder m_audioComponentHolder;

		[Token(Token = "0x400165A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject m_globalAmbienceObject;

		[Token(Token = "0x400165B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject m_globalVoiceObject;

		[Token(Token = "0x400165C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject m_globalMusicObject;

		[Token(Token = "0x400165D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_changedWaterLevel;

		[Token(Token = "0x400165E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private string m_currentPlayingMusic;

		[Token(Token = "0x400165F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private string m_currentPlayingVO;

		[Token(Token = "0x4001660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private int m_currentPlayingVOPriority;

		[Token(Token = "0x6001B80")]
		[Address(RVA = "0xBBBC94", Offset = "0xBBBC94", VA = "0xBBBC94")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B81")]
		[Address(RVA = "0xBBBD64", Offset = "0xBBBD64", VA = "0xBBBD64")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B82")]
		[Address(RVA = "0xBBBE04", Offset = "0xBBBE04", VA = "0xBBBE04")]
		public string CurrentPlayingMusic()
		{
			return null;
		}

		[Token(Token = "0x6001B83")]
		[Address(RVA = "0xBBBE0C", Offset = "0xBBBE0C", VA = "0xBBBE0C")]
		public void TransitionToFadeOutSound(float transitionTime)
		{
		}

		[Token(Token = "0x6001B84")]
		[Address(RVA = "0xBBBEB8", Offset = "0xBBBEB8", VA = "0xBBBEB8")]
		public void TransitionToFadeInSound(float transitionTime)
		{
		}

		[Token(Token = "0x6001B85")]
		[Address(RVA = "0xBBBF64", Offset = "0xBBBF64", VA = "0xBBBF64")]
		public void PostMusic(string newMusicEventName, EventAction eventAction)
		{
		}

		[Token(Token = "0x6001B86")]
		[Address(RVA = "0xBBC090", Offset = "0xBBC090", VA = "0xBBC090")]
		public bool PostVoiceOver(string newVOEventName, EventAction eventAction, int priority)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B87")]
		[Address(RVA = "0xBBC260", Offset = "0xBBC260", VA = "0xBBC260")]
		public void OnVoiceOverEventNotify(EventNotificationType type, string eventName, object info, GameObject gameObject)
		{
		}

		[Token(Token = "0x6001B88")]
		[Address(RVA = "0xBBC330", Offset = "0xBBC330", VA = "0xBBC330")]
		public void OnWaterLevelChange(bool InWater, GameObject ambienceEmitter)
		{
		}

		[Token(Token = "0x6001B89")]
		[Address(RVA = "0xBBC714", Offset = "0xBBC714", VA = "0xBBC714")]
		public AudioSoundSystem()
		{
		}
	}
	[Token(Token = "0x20004D4")]
	public class AudioTrigger : MonoBehaviour
	{
		[Token(Token = "0x4001661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string soundname;

		[Token(Token = "0x4001662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool autoPlay;

		[Token(Token = "0x4001663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int tagId;

		[Token(Token = "0x6001B8B")]
		[Address(RVA = "0xBBC720", Offset = "0xBBC720", VA = "0xBBC720")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B8C")]
		[Address(RVA = "0xBBC734", Offset = "0xBBC734", VA = "0xBBC734")]
		public void TriggerSound(int tag)
		{
		}

		[Token(Token = "0x6001B8D")]
		[Address(RVA = "0xBBC7B8", Offset = "0xBBC7B8", VA = "0xBBC7B8")]
		public AudioTrigger()
		{
		}
	}
	[Token(Token = "0x20004D5")]
	public class FtgAudio
	{
		[Token(Token = "0x2000F2A")]
		public enum FtgAudioCategory
		{
			[Token(Token = "0x4002293")]
			Ambient,
			[Token(Token = "0x4002294")]
			Player,
			[Token(Token = "0x4002295")]
			AI,
			[Token(Token = "0x4002296")]
			VO,
			[Token(Token = "0x4002297")]
			Interactions,
			[Token(Token = "0x4002298")]
			Music,
			[Token(Token = "0x4002299")]
			UI,
			[Token(Token = "0x400229A")]
			Default
		}

		[Token(Token = "0x2000F2B")]
		public enum FtgEventAction
		{
			[Token(Token = "0x400229C")]
			PlaySound,
			[Token(Token = "0x400229D")]
			StopSound,
			[Token(Token = "0x400229E")]
			PauseSound,
			[Token(Token = "0x400229F")]
			UnpauseSound,
			[Token(Token = "0x40022A0")]
			SetVolume,
			[Token(Token = "0x40022A1")]
			SetPitch,
			[Token(Token = "0x40022A2")]
			SetSwitch,
			[Token(Token = "0x40022A3")]
			SetParameter,
			[Token(Token = "0x40022A4")]
			SetFadeIn,
			[Token(Token = "0x40022A5")]
			SetFadeOut,
			[Token(Token = "0x40022A6")]
			SetPan,
			[Token(Token = "0x40022A7")]
			AddPreset,
			[Token(Token = "0x40022A8")]
			RemovePreset,
			[Token(Token = "0x40022A9")]
			SetDSPParameter,
			[Token(Token = "0x40022AA")]
			RegisterGameObject,
			[Token(Token = "0x40022AB")]
			ResetDynamicMixer,
			[Token(Token = "0x40022AC")]
			AdvanceSequence,
			[Token(Token = "0x40022AD")]
			ResetSequence,
			[Token(Token = "0x40022AE")]
			SwitchPreset,
			[Token(Token = "0x40022AF")]
			SetTime,
			[Token(Token = "0x40022B0")]
			SetModularSynthParameter,
			[Token(Token = "0x40022B1")]
			StopAll,
			[Token(Token = "0x40022B2")]
			LoadAudio,
			[Token(Token = "0x40022B3")]
			UnloadAudio,
			[Token(Token = "0x40022B4")]
			SetAudioClipReference,
			[Token(Token = "0x40022B5")]
			Ignore,
			[Token(Token = "0x40022B6")]
			SetMarker,
			[Token(Token = "0x40022B7")]
			KeyOffMarker,
			[Token(Token = "0x40022B8")]
			TransitionToSnapshot,
			[Token(Token = "0x40022B9")]
			MicStart,
			[Token(Token = "0x40022BA")]
			MicStop,
			[Token(Token = "0x40022BB")]
			SetVolumeProperty,
			[Token(Token = "0x40022BC")]
			SetPitchProperty,
			[Token(Token = "0x40022BD")]
			PlayScheduled,
			[Token(Token = "0x40022BE")]
			StopScheduled,
			[Token(Token = "0x40022BF")]
			UnregisterGameObject,
			[Token(Token = "0x40022C0")]
			SetGlobalParameter,
			[Token(Token = "0x40022C1")]
			SetGlobalSwitch,
			[Token(Token = "0x40022C2")]
			SetRegion,
			[Token(Token = "0x40022C3")]
			QueueRegion,
			[Token(Token = "0x40022C4")]
			FlashRegionQueue,
			[Token(Token = "0x40022C5")]
			LoadAudioMixer,
			[Token(Token = "0x40022C6")]
			UnloadAudioMixer,
			[Token(Token = "0x40022C7")]
			External,
			[Token(Token = "0x40022C8")]
			SetGameObject,
			[Token(Token = "0x40022C9")]
			UnsetGameObject
		}

		[Token(Token = "0x4001664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool s_soundEnabled;

		[Token(Token = "0x6001B8E")]
		[Address(RVA = "0xBD2EA4", Offset = "0xBD2EA4", VA = "0xBD2EA4")]
		private static bool isCategoryEnabled(FtgAudioCategory category)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B8F")]
		[Address(RVA = "0xBD2F0C", Offset = "0xBD2F0C", VA = "0xBD2F0C")]
		private static void registerUsage(FtgAudioCategory category)
		{
		}

		[Token(Token = "0x6001B90")]
		[Address(RVA = "0xBD2F10", Offset = "0xBD2F10", VA = "0xBD2F10")]
		private static void init()
		{
		}

		[Token(Token = "0x6001B91")]
		[Address(RVA = "0xBD2F14", Offset = "0xBD2F14", VA = "0xBD2F14")]
		private static void dumpHistogram()
		{
		}

		[Token(Token = "0x6001B92")]
		[Address(RVA = "0xBD2F18", Offset = "0xBD2F18", VA = "0xBD2F18")]
		public static int GetIDFromEventName(string eventName)
		{
			return default(int);
		}

		[Token(Token = "0x6001B93")]
		[Address(RVA = "0xBD2F80", Offset = "0xBD2F80", VA = "0xBD2F80")]
		public static bool PostEvent(int eventID, FtgAudioCategory category = FtgAudioCategory.Default)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B94")]
		[Address(RVA = "0xBBC6AC", Offset = "0xBBC6AC", VA = "0xBBC6AC")]
		public static bool PostEvent(string eventName, FtgAudioCategory category = FtgAudioCategory.Default)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B95")]
		[Address(RVA = "0xBD3048", Offset = "0xBD3048", VA = "0xBD3048")]
		public static bool PostEvent(int eventID, GameObject parentGameObject, FtgAudioCategory category = FtgAudioCategory.Default)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B96")]
		[Address(RVA = "0xBB7188", Offset = "0xBB7188", VA = "0xBB7188")]
		public static bool PostEvent(string eventName, GameObject parentGameObject, FtgAudioCategory category = FtgAudioCategory.Default)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B97")]
		[Address(RVA = "0xBB72BC", Offset = "0xBB72BC", VA = "0xBB72BC")]
		public static bool PostEvent(string eventName, FtgEventAction eventAction, GameObject parentGameObject, FtgAudioCategory category = FtgAudioCategory.Default)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B98")]
		[Address(RVA = "0xBD3208", Offset = "0xBD3208", VA = "0xBD3208")]
		public static bool PostEvent(string eventName, FtgEventAction eventAction, object parameter, GameObject parentGameObject, FtgAudioCategory category = FtgAudioCategory.Default)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B99")]
		[Address(RVA = "0xBD3124", Offset = "0xBD3124", VA = "0xBD3124")]
		public static bool PostEvent(int eventID, FtgEventAction eventAction, GameObject parentGameObject, FtgAudioCategory category = FtgAudioCategory.Default)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B9A")]
		[Address(RVA = "0xBD3298", Offset = "0xBD3298", VA = "0xBD3298")]
		public static bool PostEvent(int eventID, FtgEventAction eventAction, object parameter, GameObject parentGameObject, FtgAudioCategory category = FtgAudioCategory.Default)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B9B")]
		[Address(RVA = "0xBB7040", Offset = "0xBB7040", VA = "0xBB7040")]
		public static bool SetParameter(string eventName, string parameterName, float value, GameObject parentGameObject, FtgAudioCategory category = FtgAudioCategory.Default)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B9C")]
		[Address(RVA = "0xBD3390", Offset = "0xBD3390", VA = "0xBD3390")]
		public static bool SetParameter(int eventID, string parameterName, float value, GameObject parentGameObject, FtgAudioCategory category = FtgAudioCategory.Default)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B9D")]
		[Address(RVA = "0xBD3488", Offset = "0xBD3488", VA = "0xBD3488")]
		public static bool SetGlobalParameter(string parameterName, float value)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B9E")]
		[Address(RVA = "0xBD355C", Offset = "0xBD355C", VA = "0xBD355C")]
		public static bool IsEventActive(string eventName, GameObject parentGameObject)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B9F")]
		[Address(RVA = "0xBD3630", Offset = "0xBD3630", VA = "0xBD3630")]
		public static void StopAllSound()
		{
		}

		[Token(Token = "0x6001BA0")]
		[Address(RVA = "0xBD36E8", Offset = "0xBD36E8", VA = "0xBD36E8")]
		public static void Pause(bool pause)
		{
		}

		[Token(Token = "0x6001BA1")]
		[Address(RVA = "0xBD37A4", Offset = "0xBD37A4", VA = "0xBD37A4")]
		public FtgAudio()
		{
		}
	}
	[Token(Token = "0x20004D6")]
	public class AchievementsManager : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000F2C")]
		public class AchievementDefiniton
		{
			[Token(Token = "0x40022CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x983D4C", Offset = "0x983D4C")]
			public string achievementIdentifier;

			[Token(Token = "0x40022CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int psnId;

			[Token(Token = "0x40022CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string steamAPIName;

			[Token(Token = "0x40022CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[HideInInspector]
			public bool steamAchievementAchieved;

			[Token(Token = "0x40022CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[HideInInspector]
			public int m_achievementIdentifierId;

			[Token(Token = "0x600330D")]
			[Address(RVA = "0xD9764C", Offset = "0xD9764C", VA = "0xD9764C")]
			public void init()
			{
			}

			[Token(Token = "0x600330E")]
			[Address(RVA = "0xD97F88", Offset = "0xD97F88", VA = "0xD97F88")]
			public AchievementDefiniton()
			{
			}
		}

		[Token(Token = "0x2000F2D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97B860", Offset = "0x97B860")]
		private sealed class <markAchievementUnlocked>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40022D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AchievementsManager <>4__this;

			[Token(Token = "0x40022D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int achievementIdentifierId;

			[Token(Token = "0x40022D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ArbiterService.ArbiterResponseDelegate callback;

			[Token(Token = "0x170003C6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003312")]
				[Address(RVA = "0xD97C00", Offset = "0xD97C00", VA = "0xD97C00", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003C7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003314")]
				[Address(RVA = "0xD97C70", Offset = "0xD97C70", VA = "0xD97C70", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600330F")]
			[Address(RVA = "0xD97794", Offset = "0xD97794", VA = "0xD97794")]
			[DebuggerHidden]
			public <markAchievementUnlocked>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6003310")]
			[Address(RVA = "0xD979BC", Offset = "0xD979BC", VA = "0xD979BC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003311")]
			[Address(RVA = "0xD979C0", Offset = "0xD979C0", VA = "0xD979C0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003313")]
			[Address(RVA = "0xD97C08", Offset = "0xD97C08", VA = "0xD97C08", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000F2E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97B870", Offset = "0x97B870")]
		private sealed class <unlockPsnTrophy>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40022D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int psnId;

			[Token(Token = "0x40022D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ArbiterService.ArbiterResponseDelegate callback;

			[Token(Token = "0x170003C8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003318")]
				[Address(RVA = "0xD97CD8", Offset = "0xD97CD8", VA = "0xD97CD8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003C9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600331A")]
				[Address(RVA = "0xD97D48", Offset = "0xD97D48", VA = "0xD97D48", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003315")]
			[Address(RVA = "0xD97858", Offset = "0xD97858", VA = "0xD97858")]
			[DebuggerHidden]
			public <unlockPsnTrophy>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6003316")]
			[Address(RVA = "0xD97C78", Offset = "0xD97C78", VA = "0xD97C78", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003317")]
			[Address(RVA = "0xD97C7C", Offset = "0xD97C7C", VA = "0xD97C7C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003319")]
			[Address(RVA = "0xD97CE0", Offset = "0xD97CE0", VA = "0xD97CE0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000F2F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97B880", Offset = "0x97B880")]
		private sealed class <unlockSteamAchievement>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x170003CA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600331E")]
				[Address(RVA = "0xD97F10", Offset = "0xD97F10", VA = "0xD97F10", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003CB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003320")]
				[Address(RVA = "0xD97F80", Offset = "0xD97F80", VA = "0xD97F80", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600331B")]
			[Address(RVA = "0xD978E4", Offset = "0xD978E4", VA = "0xD978E4")]
			[DebuggerHidden]
			public <unlockSteamAchievement>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x600331C")]
			[Address(RVA = "0xD97ED0", Offset = "0xD97ED0", VA = "0xD97ED0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600331D")]
			[Address(RVA = "0xD97ED4", Offset = "0xD97ED4", VA = "0xD97ED4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600331F")]
			[Address(RVA = "0xD97F18", Offset = "0xD97F18", VA = "0xD97F18", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000F30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97B890", Offset = "0x97B890")]
		private sealed class <unlockSimulator>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40022DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ArbiterService.ArbiterResponseDelegate callback;

			[Token(Token = "0x40022DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private bool <achievementUnlockSimulatorResult>5__2;

			[Token(Token = "0x170003CC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003324")]
				[Address(RVA = "0xD97E58", Offset = "0xD97E58", VA = "0xD97E58", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003CD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003326")]
				[Address(RVA = "0xD97EC8", Offset = "0xD97EC8", VA = "0xD97EC8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003321")]
			[Address(RVA = "0xD97984", Offset = "0xD97984", VA = "0xD97984")]
			[DebuggerHidden]
			public <unlockSimulator>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6003322")]
			[Address(RVA = "0xD97D50", Offset = "0xD97D50", VA = "0xD97D50", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003323")]
			[Address(RVA = "0xD97D54", Offset = "0xD97D54", VA = "0xD97D54", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003325")]
			[Address(RVA = "0xD97E60", Offset = "0xD97E60", VA = "0xD97E60", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x981954", Offset = "0x981954")]
		public AchievementDefiniton[] achievements;

		[Token(Token = "0x4001666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AchievementsManager s_instance;

		[Token(Token = "0x4001667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static bool s_isBusy;

		[Token(Token = "0x6001BA3")]
		[Address(RVA = "0xD97220", Offset = "0xD97220", VA = "0xD97220")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BA4")]
		[Address(RVA = "0xD9728C", Offset = "0xD9728C", VA = "0xD9728C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BA5")]
		[Address(RVA = "0xD973D4", Offset = "0xD973D4", VA = "0xD973D4")]
		public static int GetIdForName(string name)
		{
			return default(int);
		}

		[Token(Token = "0x6001BA6")]
		[Address(RVA = "0xD973DC", Offset = "0xD973DC", VA = "0xD973DC")]
		public static bool IsStateOperationComplete(int cookie)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BA7")]
		[Address(RVA = "0xD9744C", Offset = "0xD9744C", VA = "0xD9744C")]
		public static int StartMarkAchievementUnlocked(int achievementIdentifierId, ArbiterService.ArbiterResponseDelegate callback)
		{
			return default(int);
		}

		[Token(Token = "0x6001BA8")]
		[Address(RVA = "0xD97290", Offset = "0xD97290", VA = "0xD97290")]
		private void resetAchievements()
		{
		}

		[Token(Token = "0x6001BA9")]
		[Address(RVA = "0xD976C0", Offset = "0xD976C0", VA = "0xD976C0")]
		private AchievementDefiniton getAchievementDefinition(int achievementIdentifierId)
		{
			return null;
		}

		[Token(Token = "0x6001BAA")]
		[Address(RVA = "0xD9759C", Offset = "0xD9759C", VA = "0xD9759C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x987F48", Offset = "0x987F48")]
		private IEnumerator markAchievementUnlocked(int achievementIdentifierId, ArbiterService.ArbiterResponseDelegate callback)
		{
			return null;
		}

		[Token(Token = "0x6001BAB")]
		[Address(RVA = "0xD977C0", Offset = "0xD977C0", VA = "0xD977C0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x987FAC", Offset = "0x987FAC")]
		private IEnumerator unlockPsnTrophy(int psnId, ArbiterService.ArbiterResponseDelegate callback)
		{
			return null;
		}

		[Token(Token = "0x6001BAC")]
		[Address(RVA = "0xD97884", Offset = "0xD97884", VA = "0xD97884")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x988010", Offset = "0x988010")]
		private IEnumerator unlockSteamAchievement(string steamAPIName)
		{
			return null;
		}

		[Token(Token = "0x6001BAD")]
		[Address(RVA = "0xD97910", Offset = "0xD97910", VA = "0xD97910")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x988074", Offset = "0x988074")]
		private IEnumerator unlockSimulator(ArbiterService.ArbiterResponseDelegate callback)
		{
			return null;
		}

		[Token(Token = "0x6001BAE")]
		[Address(RVA = "0xD979B0", Offset = "0xD979B0", VA = "0xD979B0")]
		public AchievementsManager()
		{
		}
	}
	[Token(Token = "0x20004D7")]
	public class AnalyticsManager : ArbiterService
	{
		[Serializable]
		[Token(Token = "0x2000F31")]
		public class PlayerSessionStats
		{
			[Token(Token = "0x40022DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string userid;

			[Token(Token = "0x40022DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string levelName;

			[Token(Token = "0x40022E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string sessionStart;

			[Token(Token = "0x40022E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string timestamp;

			[Token(Token = "0x40022E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string platform;

			[Token(Token = "0x40022E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string game;

			[Token(Token = "0x6003327")]
			[Address(RVA = "0xD98BD0", Offset = "0xD98BD0", VA = "0xD98BD0")]
			public PlayerSessionStats()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000F32")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97B8A0", Offset = "0x97B8A0")]
		private sealed class <>c
		{
			[Token(Token = "0x40022E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40022E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Viveport.StatusCallback <>9__8_0;

			[Token(Token = "0x6003329")]
			[Address(RVA = "0xD98DCC", Offset = "0xD98DCC", VA = "0xD98DCC")]
			public <>c()
			{
			}

			[Token(Token = "0x600332A")]
			[Address(RVA = "0xD98DD4", Offset = "0xD98DD4", VA = "0xD98DD4")]
			internal void <OnDestroy>b__8_0(int nResult)
			{
			}
		}

		[Token(Token = "0x2000F33")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97B8B0", Offset = "0x97B8B0")]
		private sealed class <onStart>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40022E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AnalyticsManager <>4__this;

			[Token(Token = "0x170003CE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600332E")]
				[Address(RVA = "0xD99180", Offset = "0xD99180", VA = "0xD99180", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003CF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003330")]
				[Address(RVA = "0xD991F0", Offset = "0xD991F0", VA = "0xD991F0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600332B")]
			[Address(RVA = "0xD98578", Offset = "0xD98578", VA = "0xD98578")]
			[DebuggerHidden]
			public <onStart>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x600332C")]
			[Address(RVA = "0xD98F98", Offset = "0xD98F98", VA = "0xD98F98", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600332D")]
			[Address(RVA = "0xD98F9C", Offset = "0xD98F9C", VA = "0xD98F9C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600332F")]
			[Address(RVA = "0xD99188", Offset = "0xD99188", VA = "0xD99188", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000F34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97B8C0", Offset = "0x97B8C0")]
		private sealed class <>c__DisplayClass17_0
		{
			[Token(Token = "0x40022E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool queryComplete;

			[Token(Token = "0x6003331")]
			[Address(RVA = "0xD98DD8", Offset = "0xD98DD8", VA = "0xD98DD8")]
			public <>c__DisplayClass17_0()
			{
			}

			[Token(Token = "0x6003332")]
			[Address(RVA = "0xD98DE0", Offset = "0xD98DE0", VA = "0xD98DE0")]
			internal void <resolvePlayerId>b__0(Message<Oculus.Platform.Models.User> msg)
			{
			}
		}

		[Token(Token = "0x2000F35")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97B8D0", Offset = "0x97B8D0")]
		private sealed class <resolvePlayerId>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40022EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private <>c__DisplayClass17_0 <>8__1;

			[Token(Token = "0x170003D0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003336")]
				[Address(RVA = "0xD99650", Offset = "0xD99650", VA = "0xD99650", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003D1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003338")]
				[Address(RVA = "0xD996C0", Offset = "0xD996C0", VA = "0xD996C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003333")]
			[Address(RVA = "0xD98C80", Offset = "0xD98C80", VA = "0xD98C80")]
			[DebuggerHidden]
			public <resolvePlayerId>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6003334")]
			[Address(RVA = "0xD994C0", Offset = "0xD994C0", VA = "0xD994C0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003335")]
			[Address(RVA = "0xD994C4", Offset = "0xD994C4", VA = "0xD994C4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003337")]
			[Address(RVA = "0xD99658", Offset = "0xD99658", VA = "0xD99658", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000F36")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97B8E0", Offset = "0x97B8E0")]
		private sealed class <postSessionStats>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40022EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string levelPath;

			[Token(Token = "0x40022F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AnalyticsManager <>4__this;

			[Token(Token = "0x170003D2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600333C")]
				[Address(RVA = "0xD99448", Offset = "0xD99448", VA = "0xD99448", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003D3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600333E")]
				[Address(RVA = "0xD994B8", Offset = "0xD994B8", VA = "0xD994B8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003339")]
			[Address(RVA = "0xD98CAC", Offset = "0xD98CAC", VA = "0xD98CAC")]
			[DebuggerHidden]
			public <postSessionStats>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x600333A")]
			[Address(RVA = "0xD991F8", Offset = "0xD991F8", VA = "0xD991F8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600333B")]
			[Address(RVA = "0xD991FC", Offset = "0xD991FC", VA = "0xD991FC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600333D")]
			[Address(RVA = "0xD99450", Offset = "0xD99450", VA = "0xD99450", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PlayerSessionStats s_playerSession;

		[Token(Token = "0x4001669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static bool s_isBusy;

		[Token(Token = "0x400166A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static AnalyticsManager s_instance;

		[Token(Token = "0x400166B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static string s_playerId;

		[Token(Token = "0x400166C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static string VIVEPORT_ID;

		[Token(Token = "0x400166D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static bool s_vivePortInitialzed;

		[Token(Token = "0x6001BB0")]
		[Address(RVA = "0xD9836C", Offset = "0xD9836C", VA = "0xD9836C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BB1")]
		[Address(RVA = "0xD983D8", Offset = "0xD983D8", VA = "0xD983D8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001BB2")]
		[Address(RVA = "0xD98504", Offset = "0xD98504", VA = "0xD98504", Slot = "4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9880D8", Offset = "0x9880D8")]
		protected override IEnumerator onStart()
		{
			return null;
		}

		[Token(Token = "0x6001BB3")]
		[Address(RVA = "0xD985A4", Offset = "0xD985A4", VA = "0xD985A4")]
		private static void InitViveportStatusHandler(int nResult)
		{
		}

		[Token(Token = "0x6001BB4")]
		[Address(RVA = "0xD9870C", Offset = "0xD9870C", VA = "0xD9870C")]
		public static bool IsActive()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BB5")]
		[Address(RVA = "0xD987A4", Offset = "0xD987A4", VA = "0xD987A4")]
		public static bool IsStateOperationComplete(int cookie)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BB6")]
		[Address(RVA = "0xD98814", Offset = "0xD98814", VA = "0xD98814")]
		public static int StartSaveSessionStatsForPlayer(string levelPath)
		{
			return default(int);
		}

		[Token(Token = "0x6001BB7")]
		[Address(RVA = "0xD989F0", Offset = "0xD989F0", VA = "0xD989F0")]
		public static string GetPlayerId()
		{
			return null;
		}

		[Token(Token = "0x6001BB8")]
		[Address(RVA = "0xD98A58", Offset = "0xD98A58", VA = "0xD98A58")]
		public static void ResetPlayerSessionStats()
		{
		}

		[Token(Token = "0x6001BB9")]
		[Address(RVA = "0xD98BD8", Offset = "0xD98BD8", VA = "0xD98BD8")]
		private static string getPlatform()
		{
			return null;
		}

		[Token(Token = "0x6001BBA")]
		[Address(RVA = "0xD98C20", Offset = "0xD98C20", VA = "0xD98C20")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98813C", Offset = "0x98813C")]
		private IEnumerator resolvePlayerId()
		{
			return null;
		}

		[Token(Token = "0x6001BBB")]
		[Address(RVA = "0xD98958", Offset = "0xD98958", VA = "0xD98958")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9881A0", Offset = "0x9881A0")]
		private IEnumerator postSessionStats(string levelPath)
		{
			return null;
		}

		[Token(Token = "0x6001BBC")]
		[Address(RVA = "0xD98CD8", Offset = "0xD98CD8", VA = "0xD98CD8")]
		public AnalyticsManager()
		{
		}
	}
	[Token(Token = "0x20004D8")]
	public class ArbiterService : MonoBehaviour
	{
		[Token(Token = "0x2000F37")]
		public delegate void ArbiterResponseDelegate(string data, string error);

		[Token(Token = "0x2000F38")]
		public delegate void ArbiterBinaryResponseDelegate(byte[] data, string error);

		[Serializable]
		[Token(Token = "0x2000F39")]
		public class QueryResponse
		{
			[Token(Token = "0x40022F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string status;

			[Token(Token = "0x40022F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string message;

			[Token(Token = "0x6003347")]
			[Address(RVA = "0xBB67B8", Offset = "0xBB67B8", VA = "0xBB67B8")]
			public QueryResponse()
			{
			}
		}

		[Token(Token = "0x2000F3A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97B8F0", Offset = "0x97B8F0")]
		private sealed class <onStart>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x170003D4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600334B")]
				[Address(RVA = "0xBB62F4", Offset = "0xBB62F4", VA = "0xBB62F4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003D5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600334D")]
				[Address(RVA = "0xBB6364", Offset = "0xBB6364", VA = "0xBB6364", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003348")]
			[Address(RVA = "0xBB467C", Offset = "0xBB467C", VA = "0xBB467C")]
			[DebuggerHidden]
			public <onStart>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6003349")]
			[Address(RVA = "0xBB62B4", Offset = "0xBB62B4", VA = "0xBB62B4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600334A")]
			[Address(RVA = "0xBB62B8", Offset = "0xBB62B8", VA = "0xBB62B8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600334C")]
			[Address(RVA = "0xBB62FC", Offset = "0xBB62FC", VA = "0xBB62FC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000F3B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97B900", Offset = "0x97B900")]
		private sealed class <Start>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40022F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ArbiterService <>4__this;

			[Token(Token = "0x170003D6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003351")]
				[Address(RVA = "0xBB4E30", Offset = "0xBB4E30", VA = "0xBB4E30", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003D7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003353")]
				[Address(RVA = "0xBB4EA0", Offset = "0xBB4EA0", VA = "0xBB4EA0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600334E")]
			[Address(RVA = "0xBB471C", Offset = "0xBB471C", VA = "0xBB471C")]
			[DebuggerHidden]
			public <Start>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x600334F")]
			[Address(RVA = "0xBB4D24", Offset = "0xBB4D24", VA = "0xBB4D24", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003350")]
			[Address(RVA = "0xBB4D28", Offset = "0xBB4D28", VA = "0xBB4D28", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003352")]
			[Address(RVA = "0xBB4E38", Offset = "0xBB4E38", VA = "0xBB4E38", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000F3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97B910", Offset = "0x97B910")]
		private sealed class <postRequest>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40022FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string jsonPayload;

			[Token(Token = "0x40022FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ArbiterService <>4__this;

			[Token(Token = "0x40022FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string uri;

			[Token(Token = "0x40022FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public ArbiterResponseDelegate callback;

			[Token(Token = "0x40022FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private WWW <www>5__2;

			[Token(Token = "0x170003D8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003357")]
				[Address(RVA = "0xBB64F0", Offset = "0xBB64F0", VA = "0xBB64F0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003D9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003359")]
				[Address(RVA = "0xBB6560", Offset = "0xBB6560", VA = "0xBB6560", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003354")]
			[Address(RVA = "0xBB4908", Offset = "0xBB4908", VA = "0xBB4908")]
			[DebuggerHidden]
			public <postRequest>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6003355")]
			[Address(RVA = "0xBB636C", Offset = "0xBB636C", VA = "0xBB636C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003356")]
			[Address(RVA = "0xBB6370", Offset = "0xBB6370", VA = "0xBB6370", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003358")]
			[Address(RVA = "0xBB64F8", Offset = "0xBB64F8", VA = "0xBB64F8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000F3D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97B920", Offset = "0x97B920")]
		private sealed class <getRequest>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002300")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002301")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ArbiterService <>4__this;

			[Token(Token = "0x4002302")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string uri;

			[Token(Token = "0x4002303")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ArbiterResponseDelegate callback;

			[Token(Token = "0x4002304")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private WWW <www>5__2;

			[Token(Token = "0x170003DA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600335D")]
				[Address(RVA = "0xBB5910", Offset = "0xBB5910", VA = "0xBB5910", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003DB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600335F")]
				[Address(RVA = "0xBB5980", Offset = "0xBB5980", VA = "0xBB5980", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600335A")]
			[Address(RVA = "0xBB49E0", Offset = "0xBB49E0", VA = "0xBB49E0")]
			[DebuggerHidden]
			public <getRequest>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x600335B")]
			[Address(RVA = "0xBB57DC", Offset = "0xBB57DC", VA = "0xBB57DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600335C")]
			[Address(RVA = "0xBB57E0", Offset = "0xBB57E0", VA = "0xBB57E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600335E")]
			[Address(RVA = "0xBB5918", Offset = "0xBB5918", VA = "0xBB5918", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000F3E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97B930", Offset = "0x97B930")]
		private sealed class <getRequest>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002305")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002306")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002307")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ArbiterService <>4__this;

			[Token(Token = "0x4002308")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string uri;

			[Token(Token = "0x4002309")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ArbiterBinaryResponseDelegate callback;

			[Token(Token = "0x400230A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private WWW <www>5__2;

			[Token(Token = "0x170003DC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003363")]
				[Address(RVA = "0xBB623C", Offset = "0xBB623C", VA = "0xBB623C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003DD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003365")]
				[Address(RVA = "0xBB62AC", Offset = "0xBB62AC", VA = "0xBB62AC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003360")]
			[Address(RVA = "0xBB4AB8", Offset = "0xBB4AB8", VA = "0xBB4AB8")]
			[DebuggerHidden]
			public <getRequest>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6003361")]
			[Address(RVA = "0xBB5988", Offset = "0xBB5988", VA = "0xBB5988", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003362")]
			[Address(RVA = "0xBB598C", Offset = "0xBB598C", VA = "0xBB598C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003364")]
			[Address(RVA = "0xBB6244", Offset = "0xBB6244", VA = "0xBB6244", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000F3F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97B940", Offset = "0x97B940")]
		private sealed class <uploadRequest>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400230B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400230C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400230D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ArbiterService <>4__this;

			[Token(Token = "0x400230E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string uri;

			[Token(Token = "0x400230F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public byte[] data;

			[Token(Token = "0x4002310")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public ArbiterResponseDelegate callback;

			[Token(Token = "0x4002311")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UnityWebRequest <www>5__2;

			[Token(Token = "0x170003DE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003369")]
				[Address(RVA = "0xBB66A8", Offset = "0xBB66A8", VA = "0xBB66A8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003DF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600336B")]
				[Address(RVA = "0xBB6718", Offset = "0xBB6718", VA = "0xBB6718", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003366")]
			[Address(RVA = "0xBB4BB0", Offset = "0xBB4BB0", VA = "0xBB4BB0")]
			[DebuggerHidden]
			public <uploadRequest>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6003367")]
			[Address(RVA = "0xBB6568", Offset = "0xBB6568", VA = "0xBB6568", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003368")]
			[Address(RVA = "0xBB656C", Offset = "0xBB656C", VA = "0xBB656C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600336A")]
			[Address(RVA = "0xBB66B0", Offset = "0xBB66B0", VA = "0xBB66B0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000F40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97B950", Offset = "0x97B950")]
		private sealed class <deleteRequest>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002312")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002313")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002314")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ArbiterService <>4__this;

			[Token(Token = "0x4002315")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string uri;

			[Token(Token = "0x4002316")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ArbiterResponseDelegate callback;

			[Token(Token = "0x4002317")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UnityWebRequest <www>5__2;

			[Token(Token = "0x170003E0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600336F")]
				[Address(RVA = "0xBB5764", Offset = "0xBB5764", VA = "0xBB5764", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003E1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003371")]
				[Address(RVA = "0xBB57D4", Offset = "0xBB57D4", VA = "0xBB57D4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600336C")]
			[Address(RVA = "0xBB4C88", Offset = "0xBB4C88", VA = "0xBB4C88")]
			[DebuggerHidden]
			public <deleteRequest>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x600336D")]
			[Address(RVA = "0xBB4EA8", Offset = "0xBB4EA8", VA = "0xBB4EA8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600336E")]
			[Address(RVA = "0xBB4EAC", Offset = "0xBB4EAC", VA = "0xBB4EAC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003370")]
			[Address(RVA = "0xBB576C", Offset = "0xBB576C", VA = "0xBB576C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400166E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected string m_arbiterURL;

		[Token(Token = "0x400166F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, string> m_headers;

		[Token(Token = "0x4001670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private uint m_arbiterEventCategoryId;

		[Token(Token = "0x6001BBE")]
		[Address(RVA = "0xBB461C", Offset = "0xBB461C", VA = "0xBB461C", Slot = "4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x988204", Offset = "0x988204")]
		protected virtual IEnumerator onStart()
		{
			return null;
		}

		[Token(Token = "0x6001BBF")]
		[Address(RVA = "0xBB46A8", Offset = "0xBB46A8", VA = "0xBB46A8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x988268", Offset = "0x988268")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001BC0")]
		[Address(RVA = "0xBB4748", Offset = "0xBB4748", VA = "0xBB4748")]
		protected void defaultResponseHandler(string data, string error)
		{
		}

		[Token(Token = "0x6001BC1")]
		[Address(RVA = "0xBB483C", Offset = "0xBB483C", VA = "0xBB483C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9882CC", Offset = "0x9882CC")]
		protected IEnumerator postRequest(string uri, string jsonPayload, ArbiterResponseDelegate callback)
		{
			return null;
		}

		[Token(Token = "0x6001BC2")]
		[Address(RVA = "0xBB4934", Offset = "0xBB4934", VA = "0xBB4934")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x988330", Offset = "0x988330")]
		protected IEnumerator getRequest(string uri, ArbiterResponseDelegate callback)
		{
			return null;
		}

		[Token(Token = "0x6001BC3")]
		[Address(RVA = "0xBB4A0C", Offset = "0xBB4A0C", VA = "0xBB4A0C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x988394", Offset = "0x988394")]
		protected IEnumerator getRequest(string uri, ArbiterBinaryResponseDelegate callback)
		{
			return null;
		}

		[Token(Token = "0x6001BC4")]
		[Address(RVA = "0xBB4AE4", Offset = "0xBB4AE4", VA = "0xBB4AE4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9883F8", Offset = "0x9883F8")]
		protected IEnumerator uploadRequest(string uri, byte[] data, ArbiterResponseDelegate callback)
		{
			return null;
		}

		[Token(Token = "0x6001BC5")]
		[Address(RVA = "0xBB4BDC", Offset = "0xBB4BDC", VA = "0xBB4BDC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98845C", Offset = "0x98845C")]
		protected IEnumerator deleteRequest(string uri, ArbiterResponseDelegate callback)
		{
			return null;
		}

		[Token(Token = "0x6001BC6")]
		[Address(RVA = "0xBB4CB4", Offset = "0xBB4CB4", VA = "0xBB4CB4")]
		public ArbiterService()
		{
		}
	}
	[Token(Token = "0x20004D9")]
	public class CloudStorageManager : ArbiterService
	{
		[Token(Token = "0x2000F41")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97B960", Offset = "0x97B960")]
		private sealed class <postData>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002318")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002319")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400231A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CloudStorageManager <>4__this;

			[Token(Token = "0x400231B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string filename;

			[Token(Token = "0x400231C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string data;

			[Token(Token = "0x170003E2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003375")]
				[Address(RVA = "0xBC1700", Offset = "0xBC1700", VA = "0xBC1700", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003E3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003377")]
				[Address(RVA = "0xBC1770", Offset = "0xBC1770", VA = "0xBC1770", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003372")]
			[Address(RVA = "0xBC10B8", Offset = "0xBC10B8", VA = "0xBC10B8")]
			[DebuggerHidden]
			public <postData>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6003373")]
			[Address(RVA = "0xBC152C", Offset = "0xBC152C", VA = "0xBC152C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003374")]
			[Address(RVA = "0xBC1530", Offset = "0xBC1530", VA = "0xBC1530", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003376")]
			[Address(RVA = "0xBC1708", Offset = "0xBC1708", VA = "0xBC1708", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000F42")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97B970", Offset = "0x97B970")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x400231D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ArbiterResponseDelegate callback;

			[Token(Token = "0x6003378")]
			[Address(RVA = "0xBC1118", Offset = "0xBC1118", VA = "0xBC1118")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x6003379")]
			[Address(RVA = "0xBC1120", Offset = "0xBC1120", VA = "0xBC1120")]
			internal void <getData>b__0(string data, string error)
			{
			}
		}

		[Token(Token = "0x2000F43")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97B980", Offset = "0x97B980")]
		private sealed class <getData>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400231E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400231F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002320")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ArbiterResponseDelegate callback;

			[Token(Token = "0x4002321")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CloudStorageManager <>4__this;

			[Token(Token = "0x4002322")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string filename;

			[Token(Token = "0x170003E4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600337D")]
				[Address(RVA = "0xBC14B4", Offset = "0xBC14B4", VA = "0xBC14B4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003E5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600337F")]
				[Address(RVA = "0xBC1524", Offset = "0xBC1524", VA = "0xBC1524", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600337A")]
			[Address(RVA = "0xBC10E4", Offset = "0xBC10E4", VA = "0xBC10E4")]
			[DebuggerHidden]
			public <getData>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x600337B")]
			[Address(RVA = "0xBC12B8", Offset = "0xBC12B8", VA = "0xBC12B8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600337C")]
			[Address(RVA = "0xBC12BC", Offset = "0xBC12BC", VA = "0xBC12BC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600337E")]
			[Address(RVA = "0xBC14BC", Offset = "0xBC14BC", VA = "0xBC14BC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool s_isBusy;

		[Token(Token = "0x4001672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static CloudStorageManager s_instance;

		[Token(Token = "0x6001BC7")]
		[Address(RVA = "0xBC0E14", Offset = "0xBC0E14", VA = "0xBC0E14")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BC8")]
		[Address(RVA = "0xBC0E80", Offset = "0xBC0E80", VA = "0xBC0E80")]
		public static bool IsActive()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BC9")]
		[Address(RVA = "0xBC0BDC", Offset = "0xBC0BDC", VA = "0xBC0BDC")]
		public static bool IsStateOperationComplete(int cookie)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BCA")]
		[Address(RVA = "0xBC0A8C", Offset = "0xBC0A8C", VA = "0xBC0A8C")]
		public static int StartStoreDataForPlayer(string filename, string jsonData)
		{
			return default(int);
		}

		[Token(Token = "0x6001BCB")]
		[Address(RVA = "0xBC0C4C", Offset = "0xBC0C4C", VA = "0xBC0C4C")]
		public static int StartFetchDataForPlayer(string filename, ArbiterResponseDelegate callback)
		{
			return default(int);
		}

		[Token(Token = "0x6001BCC")]
		[Address(RVA = "0xBC1070", Offset = "0xBC1070", VA = "0xBC1070")]
		private string getPlatform()
		{
			return null;
		}

		[Token(Token = "0x6001BCD")]
		[Address(RVA = "0xBC0F18", Offset = "0xBC0F18", VA = "0xBC0F18")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9884C0", Offset = "0x9884C0")]
		private IEnumerator postData(string filename, string data)
		{
			return null;
		}

		[Token(Token = "0x6001BCE")]
		[Address(RVA = "0xBC0FC4", Offset = "0xBC0FC4", VA = "0xBC0FC4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x988524", Offset = "0x988524")]
		private IEnumerator getData(string filename, ArbiterResponseDelegate callback)
		{
			return null;
		}

		[Token(Token = "0x6001BCF")]
		[Address(RVA = "0xBC1110", Offset = "0xBC1110", VA = "0xBC1110")]
		public CloudStorageManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004DA")]
	public abstract class DioramaData
	{
		[Token(Token = "0x2000F44")]
		public enum ValueType
		{
			[Token(Token = "0x4002324")]
			Int,
			[Token(Token = "0x4002325")]
			Float,
			[Token(Token = "0x4002326")]
			String,
			[Token(Token = "0x4002327")]
			Long
		}

		[Token(Token = "0x4001673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		protected string[] m_keyNames;

		[Token(Token = "0x4001674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected ValueType[] m_valueTypes;

		[Token(Token = "0x4001675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected string[] m_defaultValues;

		[Token(Token = "0x4001676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9819BC", Offset = "0x9819BC")]
		private string <m_filename>k__BackingField;

		[Token(Token = "0x4001677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Dictionary<string, string> settings;

		[Token(Token = "0x170002E5")]
		public string m_filename
		{
			[Token(Token = "0x6001BD1")]
			[Address(RVA = "0xBC777C", Offset = "0xBC777C", VA = "0xBC777C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x988588", Offset = "0x988588")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BD2")]
			[Address(RVA = "0xBBF49C", Offset = "0xBBF49C", VA = "0xBBF49C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x988598", Offset = "0x988598")]
			protected set
			{
			}
		}

		[Token(Token = "0x6001BD3")]
		protected abstract void fillValueFields();

		[Token(Token = "0x6001BD4")]
		[Address(RVA = "0xBC7784", Offset = "0xBC7784", VA = "0xBC7784", Slot = "5")]
		protected virtual void initDefaultValues(int[] keys)
		{
		}

		[Token(Token = "0x6001BD5")]
		[Address(RVA = "0xBC7810", Offset = "0xBC7810", VA = "0xBC7810")]
		public string DefaultValueForKey(int key)
		{
			return null;
		}

		[Token(Token = "0x6001BD6")]
		[Address(RVA = "0xBC78EC", Offset = "0xBC78EC", VA = "0xBC78EC")]
		public string NameForKey(int key)
		{
			return null;
		}

		[Token(Token = "0x6001BD7")]
		[Address(RVA = "0xBC7940", Offset = "0xBC7940", VA = "0xBC7940")]
		public ValueType TypeForKey(int key)
		{
			return default(ValueType);
		}

		[Token(Token = "0x6001BD8")]
		[Address(RVA = "0xBC7994", Offset = "0xBC7994", VA = "0xBC7994")]
		public void Clear(int key)
		{
		}

		[Token(Token = "0x6001BD9")]
		[Address(RVA = "0xBC7A14", Offset = "0xBC7A14", VA = "0xBC7A14")]
		public void SetInt(int key, int val)
		{
		}

		[Token(Token = "0x6001BDA")]
		[Address(RVA = "0xBC7A5C", Offset = "0xBC7A5C", VA = "0xBC7A5C")]
		public int GetInt(int key)
		{
			return default(int);
		}

		[Token(Token = "0x6001BDB")]
		[Address(RVA = "0xBC7B38", Offset = "0xBC7B38", VA = "0xBC7B38")]
		public void SetFloat(int key, float val)
		{
		}

		[Token(Token = "0x6001BDC")]
		[Address(RVA = "0xBC7BD0", Offset = "0xBC7BD0", VA = "0xBC7BD0")]
		public float GetFloat(int key)
		{
			return default(float);
		}

		[Token(Token = "0x6001BDD")]
		[Address(RVA = "0xBC7C7C", Offset = "0xBC7C7C", VA = "0xBC7C7C")]
		public void SetLong(int key, long val)
		{
		}

		[Token(Token = "0x6001BDE")]
		[Address(RVA = "0xBC7CC4", Offset = "0xBC7CC4", VA = "0xBC7CC4")]
		public long GetLong(int key)
		{
			return default(long);
		}

		[Token(Token = "0x6001BDF")]
		[Address(RVA = "0xBC7864", Offset = "0xBC7864", VA = "0xBC7864")]
		public void SetString(int key, string val)
		{
		}

		[Token(Token = "0x6001BE0")]
		[Address(RVA = "0xBC7CE8", Offset = "0xBC7CE8", VA = "0xBC7CE8")]
		public void SetString(string key, string val)
		{
		}

		[Token(Token = "0x6001BE1")]
		[Address(RVA = "0xBC7A80", Offset = "0xBC7A80", VA = "0xBC7A80")]
		public string GetString(int key)
		{
			return null;
		}

		[Token(Token = "0x6001BE2")]
		[Address(RVA = "0xBC7D60", Offset = "0xBC7D60", VA = "0xBC7D60")]
		public string ToJson()
		{
			return null;
		}

		[Token(Token = "0x6001BE3")]
		[Address(RVA = "0xBC8010", Offset = "0xBC8010", VA = "0xBC8010")]
		public void FromJson(string json)
		{
		}

		[Token(Token = "0x6001BE4")]
		[Address(RVA = "0xBC8414", Offset = "0xBC8414", VA = "0xBC8414")]
		protected DioramaData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004DB")]
	public class PersonaSettings : DioramaData
	{
		[Token(Token = "0x2000F45")]
		public enum PersonaKeys
		{
			[Token(Token = "0x4002329")]
			LastSaveSlot,
			[Token(Token = "0x400232A")]
			SfxVolume,
			[Token(Token = "0x400232B")]
			MusicVolume,
			[Token(Token = "0x400232C")]
			VOVolume,
			[Token(Token = "0x400232D")]
			SubtitlesEnabled,
			[Token(Token = "0x400232E")]
			SubtitlesLanguage,
			[Token(Token = "0x400232F")]
			HasChristmasTrophy,
			[Token(Token = "0x4002330")]
			HasSelectedLanguage
		}

		[Token(Token = "0x6001BE5")]
		[Address(RVA = "0x1E2F858", Offset = "0x1E2F858", VA = "0x1E2F858")]
		public PersonaSettings()
		{
		}

		[Token(Token = "0x6001BE6")]
		[Address(RVA = "0x1E2F9B0", Offset = "0x1E2F9B0", VA = "0x1E2F9B0", Slot = "4")]
		protected override void fillValueFields()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004DC")]
	public abstract class SaveSlotDependantData : DioramaData
	{
		[Token(Token = "0x6001BE7")]
		public abstract void ResetToDefaultValues();

		[Token(Token = "0x6001BE8")]
		[Address(RVA = "0x1E3F0F4", Offset = "0x1E3F0F4", VA = "0x1E3F0F4")]
		protected SaveSlotDependantData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004DD")]
	public class ChristmasData : SaveSlotDependantData
	{
		[Token(Token = "0x2000F46")]
		public enum ChristmasKeys
		{
			[Token(Token = "0x4002332")]
			LastChristmasLogin,
			[Token(Token = "0x4002333")]
			HasOpenedPresent,
			[Token(Token = "0x4002334")]
			FoundPresentD1,
			[Token(Token = "0x4002335")]
			FoundPresentD2,
			[Token(Token = "0x4002336")]
			FoundPresentD3,
			[Token(Token = "0x4002337")]
			FoundPresentD4,
			[Token(Token = "0x4002338")]
			FoundPresentD5
		}

		[Token(Token = "0x4001678")]
		public const int k_NUM_GENERIC_KEYS = 2;

		[Token(Token = "0x6001BE9")]
		[Address(RVA = "0xBBEE00", Offset = "0xBBEE00", VA = "0xBBEE00")]
		public ChristmasData()
		{
		}

		[Token(Token = "0x6001BEA")]
		[Address(RVA = "0xBBEF58", Offset = "0xBBEF58", VA = "0xBBEF58", Slot = "4")]
		protected override void fillValueFields()
		{
		}

		[Token(Token = "0x6001BEB")]
		[Address(RVA = "0xBBF4A4", Offset = "0xBBF4A4", VA = "0xBBF4A4", Slot = "6")]
		public override void ResetToDefaultValues()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004DE")]
	public class HubRoomData : SaveSlotDependantData
	{
		[Token(Token = "0x2000F47")]
		public enum HubRoomKeys
		{
			[Token(Token = "0x400233A")]
			LastPlayedLevel,
			[Token(Token = "0x400233B")]
			GameIntroHeard,
			[Token(Token = "0x400233C")]
			BedroomIntroHeard,
			[Token(Token = "0x400233D")]
			WorldOneIntroHeard,
			[Token(Token = "0x400233E")]
			WorldOneFailHeard,
			[Token(Token = "0x400233F")]
			WorldOneAnimalsFoundHeard,
			[Token(Token = "0x4002340")]
			WorldOneEverythingFoundHeard,
			[Token(Token = "0x4002341")]
			WorldTwoIntroHeard,
			[Token(Token = "0x4002342")]
			WorldTwoFailHeard,
			[Token(Token = "0x4002343")]
			WorldTwoAnimalsFoundHeard,
			[Token(Token = "0x4002344")]
			WorldTwoEverythingFoundHeard,
			[Token(Token = "0x4002345")]
			WorldThreeIntroHeard,
			[Token(Token = "0x4002346")]
			WorldThreeFailHeard,
			[Token(Token = "0x4002347")]
			WorldThreeAnimalsFoundHeard,
			[Token(Token = "0x4002348")]
			WorldThreeEverythingFoundHeard,
			[Token(Token = "0x4002349")]
			WorldFourIntroHeard,
			[Token(Token = "0x400234A")]
			WorldFourFailHeard,
			[Token(Token = "0x400234B")]
			WorldFourAnimalsFoundHeard,
			[Token(Token = "0x400234C")]
			WorldFourEverythingFoundHeard,
			[Token(Token = "0x400234D")]
			WorldFiveIntroHeard,
			[Token(Token = "0x400234E")]
			WorldFiveFailHeard,
			[Token(Token = "0x400234F")]
			WorldFiveAnimalsFoundHeard,
			[Token(Token = "0x4002350")]
			WorldFiveEverythingFoundHeard,
			[Token(Token = "0x4002351")]
			TrueEndingPlayed,
			[Token(Token = "0x4002352")]
			AllCoinsCelebrationPlayed,
			[Token(Token = "0x4002353")]
			DogPinAnimSeen,
			[Token(Token = "0x4002354")]
			RabbitPinAnimSeen,
			[Token(Token = "0x4002355")]
			CatPinAnimSeen,
			[Token(Token = "0x4002356")]
			IcebearPinAnimSeen,
			[Token(Token = "0x4002357")]
			WalrusPinAnimSeen,
			[Token(Token = "0x4002358")]
			PenguinPinAnimSeen,
			[Token(Token = "0x4002359")]
			MammothPinAnimSeen,
			[Token(Token = "0x400235A")]
			SquirrelPinAnimSeen,
			[Token(Token = "0x400235B")]
			HermitCrabPinAnimSeen,
			[Token(Token = "0x400235C")]
			TurtlePinAnimSeen,
			[Token(Token = "0x400235D")]
			PelicanPinAnimSeen,
			[Token(Token = "0x400235E")]
			OctopusPinAnimSeen,
			[Token(Token = "0x400235F")]
			SeahorsePinAnimSeen,
			[Token(Token = "0x4002360")]
			PterodactylPinAnimSeen,
			[Token(Token = "0x4002361")]
			DodoPinAnimSeen,
			[Token(Token = "0x4002362")]
			SaberToothTigerPinAnimSeen,
			[Token(Token = "0x4002363")]
			TRexPinAnimSeen,
			[Token(Token = "0x4002364")]
			TriceratopsPinAnimSeen,
			[Token(Token = "0x4002365")]
			DovePinAnimSeen,
			[Token(Token = "0x4002366")]
			MousePinAnimSeen,
			[Token(Token = "0x4002367")]
			UnicornPinAnimSeen,
			[Token(Token = "0x4002368")]
			BunnyPinAnimSeen,
			[Token(Token = "0x4002369")]
			WhiteTigerPinAnimSeen,
			[Token(Token = "0x400236A")]
			NumCoinsFound
		}

		[Token(Token = "0x6001BEC")]
		[Address(RVA = "0x1E55004", Offset = "0x1E55004", VA = "0x1E55004")]
		public HubRoomData()
		{
		}

		[Token(Token = "0x6001BED")]
		[Address(RVA = "0x1E5515C", Offset = "0x1E5515C", VA = "0x1E5515C", Slot = "4")]
		protected override void fillValueFields()
		{
		}

		[Token(Token = "0x6001BEE")]
		[Address(RVA = "0x1E570B4", Offset = "0x1E570B4", VA = "0x1E570B4", Slot = "6")]
		public override void ResetToDefaultValues()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004DF")]
	public abstract class DioramaWorld : SaveSlotDependantData
	{
		[Token(Token = "0x2000F48")]
		public enum CoinKey
		{
			[Token(Token = "0x400236C")]
			CoinFound0,
			[Token(Token = "0x400236D")]
			CoinFound1,
			[Token(Token = "0x400236E")]
			CoinFound2,
			[Token(Token = "0x400236F")]
			CoinFound3,
			[Token(Token = "0x4002370")]
			CoinFound4,
			[Token(Token = "0x4002371")]
			CoinFound5,
			[Token(Token = "0x4002372")]
			CoinFound6,
			[Token(Token = "0x4002373")]
			CoinFound7,
			[Token(Token = "0x4002374")]
			CoinFound8,
			[Token(Token = "0x4002375")]
			CoinFound9
		}

		[Token(Token = "0x4001679")]
		public const int k_NUM_GENERIC_KEYS = 8;

		[Token(Token = "0x400167A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private string[] m_coinKeyNames;

		[Token(Token = "0x400167B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int m_numCurrentFoundAnimals;

		[Token(Token = "0x400167C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		protected string[] m_coinDefaultvalues;

		[Token(Token = "0x6001BEF")]
		[Address(RVA = "0xBCF17C", Offset = "0xBCF17C", VA = "0xBCF17C")]
		public int GetNumCurrentFoundAnimals()
		{
			return default(int);
		}

		[Token(Token = "0x6001BF0")]
		[Address(RVA = "0xBCF184", Offset = "0xBCF184", VA = "0xBCF184")]
		public int InitFoundAnimals()
		{
			return default(int);
		}

		[Token(Token = "0x6001BF1")]
		[Address(RVA = "0xBCF310", Offset = "0xBCF310", VA = "0xBCF310", Slot = "5")]
		protected override void initDefaultValues(int[] keys)
		{
		}

		[Token(Token = "0x6001BF2")]
		[Address(RVA = "0xBC2980", Offset = "0xBC2980", VA = "0xBC2980")]
		public void SetCoinFound(int key, bool isFound)
		{
		}

		[Token(Token = "0x6001BF3")]
		[Address(RVA = "0xBCF518", Offset = "0xBCF518", VA = "0xBCF518")]
		private int getCoinFound(int key, out int defaultVal)
		{
			return default(int);
		}

		[Token(Token = "0x6001BF4")]
		[Address(RVA = "0xBCF630", Offset = "0xBCF630", VA = "0xBCF630")]
		public int GetCoinFound(int key)
		{
			return default(int);
		}

		[Token(Token = "0x6001BF5")]
		[Address(RVA = "0xBC84D0", Offset = "0xBC84D0", VA = "0xBC84D0")]
		protected DioramaWorld()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004E0")]
	public class DioramaOneData : DioramaWorld
	{
		[Token(Token = "0x2000F49")]
		public enum DioramaOneKeys
		{
			[Token(Token = "0x4002377")]
			WorldId,
			[Token(Token = "0x4002378")]
			HasFoundEnoughPets,
			[Token(Token = "0x4002379")]
			Completed,
			[Token(Token = "0x400237A")]
			Unlocked,
			[Token(Token = "0x400237B")]
			WantsToBeReplayed,
			[Token(Token = "0x400237C")]
			CurrentNumFoundAnimals,
			[Token(Token = "0x400237D")]
			AchBerriesPicked,
			[Token(Token = "0x400237E")]
			AchDoorsOpened,
			[Token(Token = "0x400237F")]
			DogFound,
			[Token(Token = "0x4002380")]
			RabbitFound,
			[Token(Token = "0x4002381")]
			CatFound,
			[Token(Token = "0x4002382")]
			IntroHeard
		}

		[Token(Token = "0x6001BF6")]
		[Address(RVA = "0xBCC468", Offset = "0xBCC468", VA = "0xBCC468")]
		public DioramaOneData()
		{
		}

		[Token(Token = "0x6001BF7")]
		[Address(RVA = "0xBCC4A4", Offset = "0xBCC4A4", VA = "0xBCC4A4", Slot = "4")]
		protected override void fillValueFields()
		{
		}

		[Token(Token = "0x6001BF8")]
		[Address(RVA = "0xBCCFFC", Offset = "0xBCCFFC", VA = "0xBCCFFC", Slot = "6")]
		public override void ResetToDefaultValues()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004E1")]
	public class DioramaTwoData : DioramaWorld
	{
		[Token(Token = "0x2000F4A")]
		public enum DioramaTwoKeys
		{
			[Token(Token = "0x4002384")]
			WorldId,
			[Token(Token = "0x4002385")]
			HasFoundEnoughPets,
			[Token(Token = "0x4002386")]
			Completed,
			[Token(Token = "0x4002387")]
			Unlocked,
			[Token(Token = "0x4002388")]
			WantsToBeReplayed,
			[Token(Token = "0x4002389")]
			CurrentNumFoundAnimals,
			[Token(Token = "0x400238A")]
			AchBerriesPicked,
			[Token(Token = "0x400238B")]
			AchDoorsOpened,
			[Token(Token = "0x400238C")]
			IcebearFound,
			[Token(Token = "0x400238D")]
			WalrusFound,
			[Token(Token = "0x400238E")]
			PenguinFound,
			[Token(Token = "0x400238F")]
			MammothFound,
			[Token(Token = "0x4002390")]
			SquirrelFound,
			[Token(Token = "0x4002391")]
			IntroHeard
		}

		[Token(Token = "0x6001BF9")]
		[Address(RVA = "0xBCE36C", Offset = "0xBCE36C", VA = "0xBCE36C")]
		public DioramaTwoData()
		{
		}

		[Token(Token = "0x6001BFA")]
		[Address(RVA = "0xBCE3A8", Offset = "0xBCE3A8", VA = "0xBCE3A8", Slot = "4")]
		protected override void fillValueFields()
		{
		}

		[Token(Token = "0x6001BFB")]
		[Address(RVA = "0xBCF040", Offset = "0xBCF040", VA = "0xBCF040", Slot = "6")]
		public override void ResetToDefaultValues()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004E2")]
	public class DioramaThreeData : DioramaWorld
	{
		[Token(Token = "0x2000F4B")]
		public enum DioramaThreeKeys
		{
			[Token(Token = "0x4002393")]
			WorldId,
			[Token(Token = "0x4002394")]
			HasFoundEnoughPets,
			[Token(Token = "0x4002395")]
			Completed,
			[Token(Token = "0x4002396")]
			Unlocked,
			[Token(Token = "0x4002397")]
			WantsToBeReplayed,
			[Token(Token = "0x4002398")]
			CurrentNumFoundAnimals,
			[Token(Token = "0x4002399")]
			AchBerriesPicked,
			[Token(Token = "0x400239A")]
			AchDoorsOpened,
			[Token(Token = "0x400239B")]
			HermitCrabFound,
			[Token(Token = "0x400239C")]
			TurtleFound,
			[Token(Token = "0x400239D")]
			PelicanFound,
			[Token(Token = "0x400239E")]
			OctopusFound,
			[Token(Token = "0x400239F")]
			SeahorseFound,
			[Token(Token = "0x40023A0")]
			IntroHeard
		}

		[Token(Token = "0x6001BFC")]
		[Address(RVA = "0xBCD554", Offset = "0xBCD554", VA = "0xBCD554")]
		public DioramaThreeData()
		{
		}

		[Token(Token = "0x6001BFD")]
		[Address(RVA = "0xBCD590", Offset = "0xBCD590", VA = "0xBCD590", Slot = "4")]
		protected override void fillValueFields()
		{
		}

		[Token(Token = "0x6001BFE")]
		[Address(RVA = "0xBCE230", Offset = "0xBCE230", VA = "0xBCE230", Slot = "6")]
		public override void ResetToDefaultValues()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004E3")]
	public class DioramaFourData : DioramaWorld
	{
		[Token(Token = "0x2000F4C")]
		public enum DioramaFourKeys
		{
			[Token(Token = "0x40023A2")]
			WorldId,
			[Token(Token = "0x40023A3")]
			HasFoundEnoughPets,
			[Token(Token = "0x40023A4")]
			Completed,
			[Token(Token = "0x40023A5")]
			Unlocked,
			[Token(Token = "0x40023A6")]
			WantsToBeReplayed,
			[Token(Token = "0x40023A7")]
			CurrentNumFoundAnimals,
			[Token(Token = "0x40023A8")]
			AchBerriesPicked,
			[Token(Token = "0x40023A9")]
			AchDoorsOpened,
			[Token(Token = "0x40023AA")]
			PterodactylFound,
			[Token(Token = "0x40023AB")]
			DodoFound,
			[Token(Token = "0x40023AC")]
			SaberToothTigerFound,
			[Token(Token = "0x40023AD")]
			TRexFound,
			[Token(Token = "0x40023AE")]
			TriceratopsFound,
			[Token(Token = "0x40023AF")]
			IntroHeard
		}

		[Token(Token = "0x6001BFF")]
		[Address(RVA = "0xBC965C", Offset = "0xBC965C", VA = "0xBC965C")]
		public DioramaFourData()
		{
		}

		[Token(Token = "0x6001C00")]
		[Address(RVA = "0xBC9698", Offset = "0xBC9698", VA = "0xBC9698", Slot = "4")]
		protected override void fillValueFields()
		{
		}

		[Token(Token = "0x6001C01")]
		[Address(RVA = "0xBCA338", Offset = "0xBCA338", VA = "0xBCA338", Slot = "6")]
		public override void ResetToDefaultValues()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004E4")]
	public class DioramaFiveData : DioramaWorld
	{
		[Token(Token = "0x2000F4D")]
		public enum DioramaFiveKeys
		{
			[Token(Token = "0x40023B1")]
			WorldId,
			[Token(Token = "0x40023B2")]
			HasFoundEnoughPets,
			[Token(Token = "0x40023B3")]
			Completed,
			[Token(Token = "0x40023B4")]
			Unlocked,
			[Token(Token = "0x40023B5")]
			WantsToBeReplayed,
			[Token(Token = "0x40023B6")]
			CurrentNumFoundAnimals,
			[Token(Token = "0x40023B7")]
			AchBerriesPicked,
			[Token(Token = "0x40023B8")]
			AchDoorsOpened,
			[Token(Token = "0x40023B9")]
			DoveFound,
			[Token(Token = "0x40023BA")]
			MouseFound,
			[Token(Token = "0x40023BB")]
			UnicornFound,
			[Token(Token = "0x40023BC")]
			BunnyFound,
			[Token(Token = "0x40023BD")]
			WhiteTigerFound,
			[Token(Token = "0x40023BE")]
			IntroHeard
		}

		[Token(Token = "0x6001C02")]
		[Address(RVA = "0xBC8494", Offset = "0xBC8494", VA = "0xBC8494")]
		public DioramaFiveData()
		{
		}

		[Token(Token = "0x6001C03")]
		[Address(RVA = "0xBC8888", Offset = "0xBC8888", VA = "0xBC8888", Slot = "4")]
		protected override void fillValueFields()
		{
		}

		[Token(Token = "0x6001C04")]
		[Address(RVA = "0xBC9520", Offset = "0xBC9520", VA = "0xBC9520", Slot = "6")]
		public override void ResetToDefaultValues()
		{
		}
	}
	[Token(Token = "0x20004E5")]
	public static class NpToolkitWrapper
	{
		[Token(Token = "0x400167D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ArbiterService.ArbiterResponseDelegate s_currentCallback;

		[Token(Token = "0x6001C05")]
		[Address(RVA = "0x1E65898", Offset = "0x1E65898", VA = "0x1E65898")]
		public static bool Initialize()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C06")]
		[Address(RVA = "0x1E658A0", Offset = "0x1E658A0", VA = "0x1E658A0")]
		public static void RegisterTrophyPack()
		{
		}

		[Token(Token = "0x6001C07")]
		[Address(RVA = "0x1E658A4", Offset = "0x1E658A4", VA = "0x1E658A4")]
		public static void UnlockTrophy(int trophyId, ArbiterService.ArbiterResponseDelegate callback)
		{
		}

		[Token(Token = "0x6001C08")]
		[Address(RVA = "0x1E658A8", Offset = "0x1E658A8", VA = "0x1E658A8")]
		public static int GetActiveUserId()
		{
			return default(int);
		}

		[Token(Token = "0x6001C09")]
		[Address(RVA = "0x1E658B0", Offset = "0x1E658B0", VA = "0x1E658B0")]
		public static bool CheckPSNAvailability()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C0A")]
		[Address(RVA = "0x1E658B8", Offset = "0x1E658B8", VA = "0x1E658B8")]
		private static void setCallback(ArbiterService.ArbiterResponseDelegate callback)
		{
		}

		[Token(Token = "0x6001C0B")]
		[Address(RVA = "0x1E6590C", Offset = "0x1E6590C", VA = "0x1E6590C")]
		private static void callCallback(string response, string error)
		{
		}
	}
	[Token(Token = "0x20004E6")]
	public class SaveManager : MonoBehaviour
	{
		[Token(Token = "0x2000F4E")]
		public enum DioramaWorlds
		{
			[Token(Token = "0x40023C0")]
			HubRoom,
			[Token(Token = "0x40023C1")]
			DioramaOne,
			[Token(Token = "0x40023C2")]
			DioramaTwo,
			[Token(Token = "0x40023C3")]
			DioramaThree,
			[Token(Token = "0x40023C4")]
			DioramaFour,
			[Token(Token = "0x40023C5")]
			DioramaFive,
			[Token(Token = "0x40023C6")]
			Christmas
		}

		[Token(Token = "0x2000F4F")]
		internal class SaveSlot
		{
			[Token(Token = "0x40023C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal int m_id;

			[Token(Token = "0x40023C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal DioramaData[] allDioramas;

			[Token(Token = "0x6003380")]
			[Address(RVA = "0x1E3D788", Offset = "0x1E3D788", VA = "0x1E3D788")]
			public SaveSlot()
			{
			}
		}

		[Token(Token = "0x2000F50")]
		internal delegate string ToJsonDelegate();

		[Serializable]
		[Token(Token = "0x2000F51")]
		internal class FileInQueue
		{
			[Token(Token = "0x40023C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal int slotId;

			[Token(Token = "0x40023CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal int worldId;

			[Token(Token = "0x40023CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal string filename;

			[NonSerialized]
			[Token(Token = "0x40023CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal ToJsonDelegate toJsonFunc;

			[Token(Token = "0x6003385")]
			[Address(RVA = "0x1E3E4A8", Offset = "0x1E3E4A8", VA = "0x1E3E4A8")]
			public FileInQueue()
			{
			}
		}

		[Token(Token = "0x2000F52")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97B990", Offset = "0x97B990")]
		private sealed class <deleteSaveSlotAndFlushInternal>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40023CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40023CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40023CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SaveManager <>4__this;

			[Token(Token = "0x40023D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int slot;

			[Token(Token = "0x170003E6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003389")]
				[Address(RVA = "0x1E3E864", Offset = "0x1E3E864", VA = "0x1E3E864", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003E7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600338B")]
				[Address(RVA = "0x1E3E8D4", Offset = "0x1E3E8D4", VA = "0x1E3E8D4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003386")]
			[Address(RVA = "0x1E3DF80", Offset = "0x1E3DF80", VA = "0x1E3DF80")]
			[DebuggerHidden]
			public <deleteSaveSlotAndFlushInternal>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6003387")]
			[Address(RVA = "0x1E3E698", Offset = "0x1E3E698", VA = "0x1E3E698", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003388")]
			[Address(RVA = "0x1E3E69C", Offset = "0x1E3E69C", VA = "0x1E3E69C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600338A")]
			[Address(RVA = "0x1E3E86C", Offset = "0x1E3E86C", VA = "0x1E3E86C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000F53")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97B9A0", Offset = "0x97B9A0")]
		private sealed class <waitBeforeWritingToFile>d__32 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40023D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40023D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40023D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SaveManager <>4__this;

			[Token(Token = "0x40023D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public FileInQueue fileInQueue;

			[Token(Token = "0x170003E8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600338F")]
				[Address(RVA = "0x1E3EE74", Offset = "0x1E3EE74", VA = "0x1E3EE74", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003E9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003391")]
				[Address(RVA = "0x1E3EEE4", Offset = "0x1E3EEE4", VA = "0x1E3EEE4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600338C")]
			[Address(RVA = "0x1E3E5B8", Offset = "0x1E3E5B8", VA = "0x1E3E5B8")]
			[DebuggerHidden]
			public <waitBeforeWritingToFile>d__32(int <>1__state)
			{
			}

			[Token(Token = "0x600338D")]
			[Address(RVA = "0x1E3E8DC", Offset = "0x1E3E8DC", VA = "0x1E3E8DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600338E")]
			[Address(RVA = "0x1E3E8E0", Offset = "0x1E3E8E0", VA = "0x1E3E8E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003390")]
			[Address(RVA = "0x1E3EE7C", Offset = "0x1E3EE7C", VA = "0x1E3EE7C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400167E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SaveSlot[] m_saveSlots;

		[Token(Token = "0x400167F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private PersonaSettings m_personaSettings;

		[Token(Token = "0x4001680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<FileInQueue> m_writeToFileQueue;

		[Token(Token = "0x4001681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int m_numSaveSlots;

		[Token(Token = "0x4001682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int m_currentSaveSlot;

		[Token(Token = "0x4001683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SaveManager s_instance;

		[Token(Token = "0x4001684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private WaitForSecondsRealtime waitTime;

		[Token(Token = "0x170002E6")]
		public int CurrentSaveSlot
		{
			[Token(Token = "0x6001C0C")]
			[Address(RVA = "0x1E3D544", Offset = "0x1E3D544", VA = "0x1E3D544")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002E7")]
		public static SaveManager instance
		{
			[Token(Token = "0x6001C0D")]
			[Address(RVA = "0x1E3B8F0", Offset = "0x1E3B8F0", VA = "0x1E3B8F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C0E")]
		[Address(RVA = "0x1E3D54C", Offset = "0x1E3D54C", VA = "0x1E3D54C")]
		public static void Flush()
		{
		}

		[Token(Token = "0x6001C0F")]
		[Address(RVA = "0x1E3D5AC", Offset = "0x1E3D5AC", VA = "0x1E3D5AC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C10")]
		[Address(RVA = "0x1E3DCCC", Offset = "0x1E3DCCC", VA = "0x1E3DCCC")]
		public bool IsFileQueueEmpty()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C11")]
		[Address(RVA = "0x1E3DD38", Offset = "0x1E3DD38", VA = "0x1E3DD38")]
		public PersonaSettings GetPersonaSettings()
		{
			return null;
		}

		[Token(Token = "0x6001C12")]
		[Address(RVA = "0x1E3D2E4", Offset = "0x1E3D2E4", VA = "0x1E3D2E4")]
		public void SaveAll()
		{
		}

		[Token(Token = "0x6001C13")]
		[Address(RVA = "0x1E3D514", Offset = "0x1E3D514", VA = "0x1E3D514")]
		public void SaveCurrentSlot(bool alsoSavePersona = true)
		{
		}

		[Token(Token = "0x6001C14")]
		[Address(RVA = "0x1E3DEBC", Offset = "0x1E3DEBC", VA = "0x1E3DEBC")]
		public void DeleteSaveSlotAndFlush(int slot)
		{
		}

		[Token(Token = "0x6001C15")]
		[Address(RVA = "0x1E3DEE8", Offset = "0x1E3DEE8", VA = "0x1E3DEE8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9885A8", Offset = "0x9885A8")]
		public IEnumerator deleteSaveSlotAndFlushInternal(int slot)
		{
			return null;
		}

		[Token(Token = "0x6001C16")]
		[Address(RVA = "0x1E3DFAC", Offset = "0x1E3DFAC", VA = "0x1E3DFAC")]
		public void SaveSpecificDioramaInSlot(int slotIndex, int dioramaIndex)
		{
		}

		[Token(Token = "0x6001C17")]
		[Address(RVA = "0x1E3DD40", Offset = "0x1E3DD40", VA = "0x1E3DD40")]
		public void SavePersona()
		{
		}

		[Token(Token = "0x6001C18")]
		[Address(RVA = "0x1E3BC6C", Offset = "0x1E3BC6C", VA = "0x1E3BC6C")]
		public DioramaData GetDioramaDataInCurrentSaveSlot(DioramaWorlds worldToSelect)
		{
			return null;
		}

		[Token(Token = "0x6001C19")]
		[Address(RVA = "0x1E3E344", Offset = "0x1E3E344", VA = "0x1E3E344")]
		public DioramaData GetDioramaDataInSaveSlot(int saveSlotId, DioramaWorlds worldToSelect)
		{
			return null;
		}

		[Token(Token = "0x6001C1A")]
		[Address(RVA = "0x1E3E3E8", Offset = "0x1E3E3E8", VA = "0x1E3E3E8")]
		public void SetCurrentSaveSlot(int slot)
		{
		}

		[Token(Token = "0x6001C1B")]
		[Address(RVA = "0x1E3E448", Offset = "0x1E3E448", VA = "0x1E3E448")]
		public void LoadSaveDataInCurrentSlot()
		{
		}

		[Token(Token = "0x6001C1C")]
		[Address(RVA = "0x1E3DC10", Offset = "0x1E3DC10", VA = "0x1E3DC10")]
		private void loadSpecifiedSlotInternal(int slot)
		{
		}

		[Token(Token = "0x6001C1D")]
		[Address(RVA = "0x1E3DDF0", Offset = "0x1E3DDF0", VA = "0x1E3DDF0")]
		private void saveSpecifiedSlotInternal(int slot)
		{
		}

		[Token(Token = "0x6001C1E")]
		[Address(RVA = "0x1E3E064", Offset = "0x1E3E064", VA = "0x1E3E064")]
		private void internalAddToFileQueue(DioramaData dd, int slotId)
		{
		}

		[Token(Token = "0x6001C1F")]
		[Address(RVA = "0x1E3E520", Offset = "0x1E3E520", VA = "0x1E3E520")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98860C", Offset = "0x98860C")]
		private IEnumerator waitBeforeWritingToFile(FileInQueue fileInQueue)
		{
			return null;
		}

		[Token(Token = "0x6001C20")]
		[Address(RVA = "0x1E3E5E4", Offset = "0x1E3E5E4", VA = "0x1E3E5E4")]
		private bool isSaveIndexValid(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C21")]
		[Address(RVA = "0x1E3DAC4", Offset = "0x1E3DAC4", VA = "0x1E3DAC4")]
		private void loadAndSetDioramaDataFromFile(DioramaData dataClass, int extraId = -1)
		{
		}

		[Token(Token = "0x6001C22")]
		[Address(RVA = "0x1E3E604", Offset = "0x1E3E604", VA = "0x1E3E604")]
		public SaveManager()
		{
		}
	}
	[Token(Token = "0x20004E7")]
	public class DebugGPUCPUThrottler : MonoBehaviour
	{
		[Token(Token = "0x4001685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshProUGUI m_statusText;

		[Token(Token = "0x4001686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_currentWantedLevel;

		[Token(Token = "0x6001C24")]
		[Address(RVA = "0xBC3FC4", Offset = "0xBC3FC4", VA = "0xBC3FC4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C25")]
		[Address(RVA = "0xBC40C0", Offset = "0xBC40C0", VA = "0xBC40C0")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001C26")]
		[Address(RVA = "0xBC42D4", Offset = "0xBC42D4", VA = "0xBC42D4")]
		public DebugGPUCPUThrottler()
		{
		}
	}
	[Token(Token = "0x20004E8")]
	public class AchievementTrackerNC : EventNode
	{
		[Token(Token = "0x4001687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SaveManager s_saveManager;

		[Token(Token = "0x4001688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static FlowOutput s_trueEndingOutput;

		[Token(Token = "0x4001689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static FlowOutput s_firstCoinOutput;

		[Token(Token = "0x400168A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static FlowOutput s_allCoinsOutput;

		[Token(Token = "0x400168B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static FlowOutput s_allBerriesOutput;

		[Token(Token = "0x400168C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static FlowOutput s_allDoorsOutput;

		[Token(Token = "0x6001C27")]
		[Address(RVA = "0xD96574", Offset = "0xD96574", VA = "0xD96574", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001C28")]
		[Address(RVA = "0xD966B4", Offset = "0xD966B4", VA = "0xD966B4")]
		public static void CheckForCoinsFound()
		{
		}

		[Token(Token = "0x6001C29")]
		[Address(RVA = "0xD96820", Offset = "0xD96820", VA = "0xD96820")]
		public static void CheckForTrueEnding()
		{
		}

		[Token(Token = "0x6001C2A")]
		[Address(RVA = "0xD96A48", Offset = "0xD96A48", VA = "0xD96A48")]
		private static bool checkForAllPetsFound()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C2B")]
		[Address(RVA = "0xD96D74", Offset = "0xD96D74", VA = "0xD96D74")]
		public static void CheckForAllBerriesPicked()
		{
		}

		[Token(Token = "0x6001C2C")]
		[Address(RVA = "0xD97048", Offset = "0xD97048", VA = "0xD97048")]
		public static void CheckForAllDoorsOpened()
		{
		}

		[Token(Token = "0x6001C2D")]
		[Address(RVA = "0xD96DE0", Offset = "0xD96DE0", VA = "0xD96DE0")]
		private static void doCheckForBerriesAndDoorsAch(FlowOutput output, int key)
		{
		}

		[Token(Token = "0x6001C2E")]
		[Address(RVA = "0xD96C80", Offset = "0xD96C80", VA = "0xD96C80")]
		private static void fixSaveManager()
		{
		}

		[Token(Token = "0x6001C2F")]
		[Address(RVA = "0xD970B4", Offset = "0xD970B4", VA = "0xD970B4")]
		public AchievementTrackerNC()
		{
		}
	}
	[Token(Token = "0x20004E9")]
	public class AchievementWorldDoor : MultiWorldAchievementInterface
	{
		[Token(Token = "0x400168D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private MultiWorldAchievementCounter m_achievementCounter;

		[Token(Token = "0x6001C31")]
		[Address(RVA = "0xD970C0", Offset = "0xD970C0", VA = "0xD970C0")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001C32")]
		[Address(RVA = "0xD97170", Offset = "0xD97170", VA = "0xD97170", Slot = "4")]
		public override void RemoveFromCounter()
		{
		}

		[Token(Token = "0x6001C33")]
		[Address(RVA = "0xD97210", Offset = "0xD97210", VA = "0xD97210", Slot = "5")]
		public override void SetUpReference(MultiWorldAchievementCounter counter)
		{
		}

		[Token(Token = "0x6001C34")]
		[Address(RVA = "0xD97218", Offset = "0xD97218", VA = "0xD97218")]
		public AchievementWorldDoor()
		{
		}
	}
	[Token(Token = "0x20004EA")]
	public class AffectedByWaterTag : MonoBehaviour
	{
		[Token(Token = "0x400168E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animator m_animatorReference;

		[Token(Token = "0x6001C35")]
		[Address(RVA = "0xD98234", Offset = "0xD98234", VA = "0xD98234")]
		public Animator GetAnimator()
		{
			return null;
		}

		[Token(Token = "0x6001C36")]
		[Address(RVA = "0xD9823C", Offset = "0xD9823C", VA = "0xD9823C")]
		public AffectedByWaterTag()
		{
		}
	}
	[Token(Token = "0x20004EB")]
	public class AlarmClock : DelayedDioramaInteraction
	{
		[Token(Token = "0x400168F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Animator m_alarmClockAnimator;

		[Token(Token = "0x4001690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int m_interactingId;

		[Token(Token = "0x4001691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int m_ringId;

		[Token(Token = "0x6001C37")]
		[Address(RVA = "0xD98244", Offset = "0xD98244", VA = "0xD98244")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C38")]
		[Address(RVA = "0xD982B4", Offset = "0xD982B4", VA = "0xD982B4", Slot = "4")]
		protected override void OnStartInteracting()
		{
		}

		[Token(Token = "0x6001C39")]
		[Address(RVA = "0xD982F0", Offset = "0xD982F0", VA = "0xD982F0", Slot = "5")]
		protected override void OnStopInteracting()
		{
		}

		[Token(Token = "0x6001C3A")]
		[Address(RVA = "0xD9832C", Offset = "0xD9832C", VA = "0xD9832C", Slot = "6")]
		protected override void OnFinishedInteracting()
		{
		}

		[Token(Token = "0x6001C3B")]
		[Address(RVA = "0xD98364", Offset = "0xD98364", VA = "0xD98364")]
		public AlarmClock()
		{
		}
	}
	[Token(Token = "0x20004EC")]
	public class AnimationInteractionReceiver : InteractionReceiver
	{
		[Token(Token = "0x4001692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AnimationData[] animationEvents;

		[Token(Token = "0x4001693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public VfxData[] vfxEvents;

		[Token(Token = "0x6001C3C")]
		[Address(RVA = "0xD99BE4", Offset = "0xD99BE4", VA = "0xD99BE4", Slot = "4")]
		protected override void onDealInteraction(int tag)
		{
		}

		[Token(Token = "0x6001C3D")]
		[Address(RVA = "0xD99EAC", Offset = "0xD99EAC", VA = "0xD99EAC")]
		private void playEffect(Transform effect, bool play)
		{
		}

		[Token(Token = "0x6001C3E")]
		[Address(RVA = "0xD99FC4", Offset = "0xD99FC4", VA = "0xD99FC4")]
		private void destroyEffect(Transform effect, float ttl = -1f)
		{
		}

		[Token(Token = "0x6001C3F")]
		[Address(RVA = "0xD9A0F8", Offset = "0xD9A0F8", VA = "0xD9A0F8")]
		public AnimationInteractionReceiver()
		{
		}
	}
	[Token(Token = "0x20004ED")]
	public class AudioVolumeManager : MonoBehaviour
	{
		[Token(Token = "0x4001694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AudioVolumeManager s_instance;

		[Token(Token = "0x4001695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GroupComponent m_sfxGroupComponent;

		[Token(Token = "0x4001696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GroupComponent m_musicGroupComponent;

		[Token(Token = "0x4001697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GroupComponent m_voGroupComponents;

		[Token(Token = "0x4001698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GroupComponent m_uiGroupComponent;

		[Token(Token = "0x170002E8")]
		public static AudioVolumeManager Instance
		{
			[Token(Token = "0x6001C40")]
			[Address(RVA = "0xBBC818", Offset = "0xBBC818", VA = "0xBBC818")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C41")]
		[Address(RVA = "0xBBC9EC", Offset = "0xBBC9EC", VA = "0xBBC9EC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C42")]
		[Address(RVA = "0xBBCA70", Offset = "0xBBCA70", VA = "0xBBCA70")]
		private void FindGroupComponentReferences()
		{
		}

		[Token(Token = "0x6001C43")]
		[Address(RVA = "0xBBCC84", Offset = "0xBBCC84", VA = "0xBBCC84")]
		public void SetVolumeSFX(float volume01)
		{
		}

		[Token(Token = "0x6001C44")]
		[Address(RVA = "0xBBCE84", Offset = "0xBBCE84", VA = "0xBBCE84")]
		public void SetVolumeMusic(float volume01)
		{
		}

		[Token(Token = "0x6001C45")]
		[Address(RVA = "0xBBCEE0", Offset = "0xBBCEE0", VA = "0xBBCEE0")]
		public void SetVolumeVO(float volume01)
		{
		}

		[Token(Token = "0x6001C46")]
		[Address(RVA = "0xBBCD00", Offset = "0xBBCD00", VA = "0xBBCD00")]
		private bool isSafeToContinue()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C47")]
		[Address(RVA = "0xBBCF3C", Offset = "0xBBCF3C", VA = "0xBBCF3C")]
		public AudioVolumeManager()
		{
		}
	}
	[Token(Token = "0x20004EE")]
	public class SetVolumeNC : FlowControlNode
	{
		[Serializable]
		[Token(Token = "0x2000F54")]
		internal enum AudioType
		{
			[Token(Token = "0x40023D6")]
			SFX,
			[Token(Token = "0x40023D7")]
			Music,
			[Token(Token = "0x40023D8")]
			VO
		}

		[Token(Token = "0x2000F55")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97B9B0", Offset = "0x97B9B0")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x40023D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ValueInput<AudioType> audioType;

			[Token(Token = "0x40023DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SetVolumeNC <>4__this;

			[Token(Token = "0x40023DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ValueInput<float> volume01;

			[Token(Token = "0x6003392")]
			[Address(RVA = "0x1E43420", Offset = "0x1E43420", VA = "0x1E43420")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6003393")]
			[Address(RVA = "0x1E43430", Offset = "0x1E43430", VA = "0x1E43430")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x4001699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private AudioVolumeManager m_volumeManager;

		[Token(Token = "0x6001C49")]
		[Address(RVA = "0x1E43264", Offset = "0x1E43264", VA = "0x1E43264", Slot = "26")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6001C4A")]
		[Address(RVA = "0x1E432D0", Offset = "0x1E432D0", VA = "0x1E432D0", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001C4B")]
		[Address(RVA = "0x1E43428", Offset = "0x1E43428", VA = "0x1E43428")]
		public SetVolumeNC()
		{
		}
	}
	[Token(Token = "0x20004EF")]
	public class AutoScalable : MonoBehaviour
	{
		[Token(Token = "0x400169A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float maxScale;

		[Token(Token = "0x400169B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Vector3 m_originalScale;

		[Token(Token = "0x400169C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 m_targetScale;

		[Token(Token = "0x400169D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool m_scaleNeedsUpdate;

		[Token(Token = "0x6001C4C")]
		[Address(RVA = "0xBBCFF4", Offset = "0xBBCFF4", VA = "0xBBCFF4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C4D")]
		[Address(RVA = "0xBBD064", Offset = "0xBBD064", VA = "0xBBD064")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C4E")]
		[Address(RVA = "0xBBD400", Offset = "0xBBD400", VA = "0xBBD400")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001C4F")]
		[Address(RVA = "0xBBD79C", Offset = "0xBBD79C", VA = "0xBBD79C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C50")]
		[Address(RVA = "0xBBD980", Offset = "0xBBD980", VA = "0xBBD980")]
		public void SetTargetScale(Vector3 targetScale)
		{
		}

		[Token(Token = "0x6001C51")]
		[Address(RVA = "0xBBD994", Offset = "0xBBD994", VA = "0xBBD994")]
		public Vector3 GetOriginalScale()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001C52")]
		[Address(RVA = "0xBBD9A0", Offset = "0xBBD9A0", VA = "0xBBD9A0")]
		private void onHoverBegin()
		{
		}

		[Token(Token = "0x6001C53")]
		[Address(RVA = "0xBBDA40", Offset = "0xBBDA40", VA = "0xBBDA40")]
		private void onHoverEnd()
		{
		}

		[Token(Token = "0x6001C54")]
		[Address(RVA = "0xBBDA5C", Offset = "0xBBDA5C", VA = "0xBBDA5C")]
		public AutoScalable()
		{
		}
	}
	[Token(Token = "0x20004F0")]
	public class CameraRotator : MonoBehaviour
	{
		[Token(Token = "0x400169E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CinemachineFreeLook freeLookCam;

		[Token(Token = "0x400169F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x981A1C", Offset = "0x981A1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x981A1C", Offset = "0x981A1C")]
		public float minScale;

		[Token(Token = "0x40016A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x981A74", Offset = "0x981A74")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x981A74", Offset = "0x981A74")]
		public float maxScale;

		[Token(Token = "0x40016A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x981AC8", Offset = "0x981AC8")]
		[AxisStateProperty]
		public AxisState zAxis;

		[Token(Token = "0x40016A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private CinemachineFreeLook.Orbit[] m_originalOrbits;

		[Token(Token = "0x6001C55")]
		[Address(RVA = "0xBBE1BC", Offset = "0xBBE1BC", VA = "0xBBE1BC")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001C56")]
		[Address(RVA = "0xBBE250", Offset = "0xBBE250", VA = "0xBBE250")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C57")]
		[Address(RVA = "0xBBE430", Offset = "0xBBE430", VA = "0xBBE430")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C58")]
		[Address(RVA = "0xBBE4C8", Offset = "0xBBE4C8", VA = "0xBBE4C8")]
		private float axisInput(string axisName)
		{
			return default(float);
		}

		[Token(Token = "0x6001C59")]
		[Address(RVA = "0xBBE4D4", Offset = "0xBBE4D4", VA = "0xBBE4D4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C5A")]
		[Address(RVA = "0xBBE6B8", Offset = "0xBBE6B8", VA = "0xBBE6B8")]
		public CameraRotator()
		{
		}
	}
	[Token(Token = "0x20004F1")]
	public class CardInteractible : InteractibleCustomRespawn
	{
		[Token(Token = "0x40016A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private MeshFilter m_meshFilter;

		[Token(Token = "0x40016A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private MeshRenderer m_meshRenderer;

		[Token(Token = "0x40016A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private BoxCollider m_boxCollider;

		[Token(Token = "0x40016A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private Mesh m_newMeshOnPickUp;

		[Token(Token = "0x40016A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private Material m_newMaterialOnPickUp;

		[Token(Token = "0x40016A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private Vector3 m_newColliderSizeOnPickUp;

		[Token(Token = "0x40016A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private Vector3 m_newColliderCenterOnPickUp;

		[Token(Token = "0x40016AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private Vector3 m_newMeshScaleOnPickUp;

		[Token(Token = "0x40016AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private bool m_hasFirstInteractionHappend;

		[Token(Token = "0x40016AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int s_birdRefCount;

		[Token(Token = "0x6001C5B")]
		[Address(RVA = "0xBBE9DC", Offset = "0xBBE9DC", VA = "0xBBE9DC", Slot = "6")]
		protected override void handleStart()
		{
		}

		[Token(Token = "0x6001C5C")]
		[Address(RVA = "0xBBE9E8", Offset = "0xBBE9E8", VA = "0xBBE9E8", Slot = "10")]
		protected override void handleHandGripBegin(HandTracker hand)
		{
		}

		[Token(Token = "0x6001C5D")]
		[Address(RVA = "0xBBEBA0", Offset = "0xBBEBA0", VA = "0xBBEBA0", Slot = "12")]
		public override bool OnRespawn(OutOfBoundsVolume.InteractibleTransform interactibleTransform)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C5E")]
		[Address(RVA = "0xBBEC2C", Offset = "0xBBEC2C", VA = "0xBBEC2C")]
		public CardInteractible()
		{
		}
	}
	[Token(Token = "0x20004F2")]
	public class ClamThePearlMaker : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000F56")]
		internal class InternalPearl
		{
			[Token(Token = "0x40023DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject m_prefab;

			[Token(Token = "0x40023DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform m_spawnTransform;

			[Token(Token = "0x6003394")]
			[Address(RVA = "0xBC04B0", Offset = "0xBC04B0", VA = "0xBC04B0")]
			public InternalPearl()
			{
			}
		}

		[Token(Token = "0x2000F57")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97B9C0", Offset = "0x97B9C0")]
		private sealed class <>c__DisplayClass23_0
		{
			[Token(Token = "0x40023DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int achievementIdentifierId;

			[Token(Token = "0x40023DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ClamThePearlMaker <>4__this;

			[Token(Token = "0x40023E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool result;

			[Token(Token = "0x6003395")]
			[Address(RVA = "0xBBFFF0", Offset = "0xBBFFF0", VA = "0xBBFFF0")]
			public <>c__DisplayClass23_0()
			{
			}

			[Token(Token = "0x6003396")]
			[Address(RVA = "0xBBFFF8", Offset = "0xBBFFF8", VA = "0xBBFFF8")]
			internal void <unlockAchievement>b__0(string data, string error)
			{
			}
		}

		[Token(Token = "0x2000F58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97B9D0", Offset = "0x97B9D0")]
		private sealed class <unlockAchievement>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40023E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40023E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40023E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ClamThePearlMaker <>4__this;

			[Token(Token = "0x40023E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass23_0 <>8__1;

			[Token(Token = "0x40023E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <cookie>5__2;

			[Token(Token = "0x170003EA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600339A")]
				[Address(RVA = "0xBC0438", Offset = "0xBC0438", VA = "0xBC0438", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003EB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600339C")]
				[Address(RVA = "0xBC04A8", Offset = "0xBC04A8", VA = "0xBC04A8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003397")]
			[Address(RVA = "0xBBFDDC", Offset = "0xBBFDDC", VA = "0xBBFDDC")]
			[DebuggerHidden]
			public <unlockAchievement>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x6003398")]
			[Address(RVA = "0xBC0234", Offset = "0xBC0234", VA = "0xBC0234", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003399")]
			[Address(RVA = "0xBC0238", Offset = "0xBC0238", VA = "0xBC0238", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600339B")]
			[Address(RVA = "0xBC0440", Offset = "0xBC0440", VA = "0xBC0440", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40016AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool m_isClamOpen;

		[Token(Token = "0x40016AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private StonePrePearlBehaviour m_lastStone;

		[Token(Token = "0x40016AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x981B94", Offset = "0x981B94")]
		[SerializeField]
		private Animator m_clamAnimator;

		[Token(Token = "0x40016B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Collider m_placeStoneTrigger;

		[Token(Token = "0x40016B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private InternalPearl m_pearl;

		[Token(Token = "0x40016B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform m_pearlsNewTransformOnRelease;

		[Token(Token = "0x40016B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform m_newPearlsParent;

		[Token(Token = "0x40016B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x981C20", Offset = "0x981C20")]
		public string m_clamOpenName;

		[Token(Token = "0x40016B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string m_placePearl;

		[Token(Token = "0x40016B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x981C58", Offset = "0x981C58")]
		public string m_achievementIdentifier;

		[Token(Token = "0x40016B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Transform m_stonesParent;

		[Token(Token = "0x40016B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int m_numStones;

		[Token(Token = "0x40016B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int m_clamOpenId;

		[Token(Token = "0x40016BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int m_placePearlId;

		[Token(Token = "0x40016BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private OutOfBoundsVolume m_outOfBoundsVolume;

		[Token(Token = "0x6001C60")]
		[Address(RVA = "0xBBF5E0", Offset = "0xBBF5E0", VA = "0xBBF5E0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C61")]
		[Address(RVA = "0xBBF620", Offset = "0xBBF620", VA = "0xBBF620")]
		private void initHashes()
		{
		}

		[Token(Token = "0x6001C62")]
		[Address(RVA = "0xBBF660", Offset = "0xBBF660", VA = "0xBBF660")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C63")]
		[Address(RVA = "0xBBF77C", Offset = "0xBBF77C", VA = "0xBBF77C")]
		public void OnPickUpPearl(PearlBehaviour pearl)
		{
		}

		[Token(Token = "0x6001C64")]
		[Address(RVA = "0xBBF7B0", Offset = "0xBBF7B0", VA = "0xBBF7B0")]
		private void internalOnClamChange(bool isClamOpen)
		{
		}

		[Token(Token = "0x6001C65")]
		[Address(RVA = "0xBBF828", Offset = "0xBBF828", VA = "0xBBF828")]
		public void OnStoneEnterCallback(StonePrePearlBehaviour stone)
		{
		}

		[Token(Token = "0x6001C66")]
		[Address(RVA = "0xBBF9A4", Offset = "0xBBF9A4", VA = "0xBBF9A4")]
		private void OnConvertStoneToPearl()
		{
		}

		[Token(Token = "0x6001C67")]
		[Address(RVA = "0xBBFD68", Offset = "0xBBFD68", VA = "0xBBFD68")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x988670", Offset = "0x988670")]
		private IEnumerator unlockAchievement()
		{
			return null;
		}

		[Token(Token = "0x6001C68")]
		[Address(RVA = "0xBBFE08", Offset = "0xBBFE08", VA = "0xBBFE08")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001C69")]
		[Address(RVA = "0xBBFEC0", Offset = "0xBBFEC0", VA = "0xBBFEC0")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001C6A")]
		[Address(RVA = "0xBBFF78", Offset = "0xBBFF78", VA = "0xBBFF78")]
		public ClamThePearlMaker()
		{
		}
	}
	[Token(Token = "0x20004F3")]
	public class CodeLock : MonoBehaviour
	{
		[Token(Token = "0x2000F59")]
		public delegate void OnLockOpened();

		[Token(Token = "0x40016BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x981CA0", Offset = "0x981CA0")]
		public Text codeVisualizer;

		[Token(Token = "0x40016BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int[] code;

		[Token(Token = "0x40016BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x981CD8", Offset = "0x981CD8")]
		public AnimationData[] animationEvents;

		[Token(Token = "0x40016BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public InteractionReceiverEvent[] interactionEvents;

		[Token(Token = "0x40016C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_isLocked;

		[Token(Token = "0x40016C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int[] m_currCode;

		[Token(Token = "0x40016C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OnLockOpened m_lockOpenCb;

		[Token(Token = "0x6001C6B")]
		[Address(RVA = "0xBC1778", Offset = "0xBC1778", VA = "0xBC1778")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C6C")]
		[Address(RVA = "0xBC184C", Offset = "0xBC184C", VA = "0xBC184C")]
		public void setDigit(int digit, int position)
		{
		}

		[Token(Token = "0x6001C6D")]
		[Address(RVA = "0xBC1F2C", Offset = "0xBC1F2C", VA = "0xBC1F2C")]
		public void SetOnLockOpenedCb(OnLockOpened cb)
		{
		}

		[Token(Token = "0x6001C6E")]
		[Address(RVA = "0xBC1A54", Offset = "0xBC1A54", VA = "0xBC1A54")]
		private bool validateCode()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C6F")]
		[Address(RVA = "0xBC1904", Offset = "0xBC1904", VA = "0xBC1904")]
		private void refreshUI()
		{
		}

		[Token(Token = "0x6001C70")]
		[Address(RVA = "0xBC1F34", Offset = "0xBC1F34", VA = "0xBC1F34")]
		public CodeLock()
		{
		}
	}
	[Token(Token = "0x20004F4")]
	public class CodeLockInteraction : InteractionReceiverEvent
	{
		[Token(Token = "0x40016C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int startDigit;

		[Token(Token = "0x40016C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int position;

		[Token(Token = "0x40016C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CodeLock codeLock;

		[Token(Token = "0x40016C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int m_currDigit;

		[Token(Token = "0x6001C71")]
		[Address(RVA = "0xBC2294", Offset = "0xBC2294", VA = "0xBC2294")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C72")]
		[Address(RVA = "0xBC22D8", Offset = "0xBC22D8", VA = "0xBC22D8", Slot = "4")]
		public override void onTrigger()
		{
		}

		[Token(Token = "0x6001C73")]
		[Address(RVA = "0xBC232C", Offset = "0xBC232C", VA = "0xBC232C")]
		public CodeLockInteraction()
		{
		}
	}
	[Token(Token = "0x20004F5")]
	public class CoinBackendInfo : MonoBehaviour
	{
		[Token(Token = "0x40016C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SaveManager.DioramaWorlds m_affectedWorld;

		[Token(Token = "0x40016C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private DioramaWorld.CoinKey m_coinKey;

		[Token(Token = "0x6001C74")]
		[Address(RVA = "0xBC23C8", Offset = "0xBC23C8", VA = "0xBC23C8")]
		public SaveManager.DioramaWorlds GetTargetWorld()
		{
			return default(SaveManager.DioramaWorlds);
		}

		[Token(Token = "0x6001C75")]
		[Address(RVA = "0xBC23D0", Offset = "0xBC23D0", VA = "0xBC23D0")]
		public DioramaWorld.CoinKey GetCoinKey()
		{
			return default(DioramaWorld.CoinKey);
		}

		[Token(Token = "0x6001C76")]
		[Address(RVA = "0xBC23D8", Offset = "0xBC23D8", VA = "0xBC23D8")]
		public CoinBackendInfo()
		{
		}
	}
	[Token(Token = "0x20004F6")]
	public class CoinJar : MonoBehaviour
	{
		[Token(Token = "0x40016C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int m_maxCoinsInThisWorld;

		[Token(Token = "0x40016CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshPro m_leftCounter;

		[Token(Token = "0x40016CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TextMeshPro m_rightMaxCoins;

		[Token(Token = "0x40016CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x981D50", Offset = "0x981D50")]
		[SerializeField]
		private GameObject[] m_coins;

		[Token(Token = "0x40016CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int m_currentCoinCount;

		[Token(Token = "0x6001C77")]
		[Address(RVA = "0xBC2D10", Offset = "0xBC2D10", VA = "0xBC2D10")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C78")]
		[Address(RVA = "0xBC28C0", Offset = "0xBC28C0", VA = "0xBC28C0")]
		public void OnPickUpCoin()
		{
		}

		[Token(Token = "0x6001C79")]
		[Address(RVA = "0xBC2E18", Offset = "0xBC2E18", VA = "0xBC2E18")]
		public CoinJar()
		{
		}
	}
	[Token(Token = "0x20004F7")]
	public class DeckOfCardHandler : MonoBehaviour
	{
		[Token(Token = "0x2000F5A")]
		internal delegate void OnTriggerInteractionDelegate(GameObject pickUp);

		[Token(Token = "0x2000F5B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97B9E0", Offset = "0x97B9E0")]
		private sealed class <spewCardsInternal>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40023E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40023E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40023E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DeckOfCardHandler <>4__this;

			[Token(Token = "0x40023E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <elapsedTime>5__2;

			[Token(Token = "0x40023EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <lastTime>5__3;

			[Token(Token = "0x170003EC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60033A8")]
				[Address(RVA = "0xBC5B04", Offset = "0xBC5B04", VA = "0xBC5B04", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003ED")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60033AA")]
				[Address(RVA = "0xBC5B74", Offset = "0xBC5B74", VA = "0xBC5B74", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60033A5")]
			[Address(RVA = "0xBC4518", Offset = "0xBC4518", VA = "0xBC4518")]
			[DebuggerHidden]
			public <spewCardsInternal>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x60033A6")]
			[Address(RVA = "0xBC56EC", Offset = "0xBC56EC", VA = "0xBC56EC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60033A7")]
			[Address(RVA = "0xBC56F0", Offset = "0xBC56F0", VA = "0xBC56F0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60033A9")]
			[Address(RVA = "0xBC5B0C", Offset = "0xBC5B0C", VA = "0xBC5B0C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40016CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static DeckOfCardHandler s_instance;

		[Token(Token = "0x40016CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_cardPrefab;

		[Token(Token = "0x40016D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform m_targetPosAndRot;

		[Token(Token = "0x40016D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_cardSpawnDelay;

		[Token(Token = "0x40016D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m_spawnCardsDuration;

		[Token(Token = "0x40016D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 m_forceDirectionToApplyOnPrefabSpawn;

		[Token(Token = "0x40016D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m_forceAmountToApply;

		[Token(Token = "0x40016D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_allowCardSpew;

		[Token(Token = "0x40016D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OutOfBoundsVolume m_outOfBoundsVolume;

		[Token(Token = "0x40016D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private WaitForSeconds m_waitForCardSpawn;

		[Token(Token = "0x40016D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform goalLocation;

		[Token(Token = "0x40016D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal OnTriggerInteractionDelegate interactionCb;

		[Token(Token = "0x40016DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool m_hasPickup;

		[Token(Token = "0x40016DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		private bool m_pickupInPlace;

		[Token(Token = "0x40016DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Rigidbody m_pickupRigidBody;

		[Token(Token = "0x40016DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Interactible m_pickup;

		[Token(Token = "0x6001C7A")]
		[Address(RVA = "0xBC42DC", Offset = "0xBC42DC", VA = "0xBC42DC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C7B")]
		[Address(RVA = "0xBC4460", Offset = "0xBC4460", VA = "0xBC4460")]
		public void StartSpewingCards()
		{
		}

		[Token(Token = "0x6001C7C")]
		[Address(RVA = "0xBC44A4", Offset = "0xBC44A4", VA = "0xBC44A4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9886D4", Offset = "0x9886D4")]
		private IEnumerator spewCardsInternal()
		{
			return null;
		}

		[Token(Token = "0x6001C7D")]
		[Address(RVA = "0xBC4544", Offset = "0xBC4544", VA = "0xBC4544")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001C7E")]
		[Address(RVA = "0xBC4750", Offset = "0xBC4750", VA = "0xBC4750")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001C7F")]
		[Address(RVA = "0xBC4938", Offset = "0xBC4938", VA = "0xBC4938")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C80")]
		[Address(RVA = "0xBC5528", Offset = "0xBC5528", VA = "0xBC5528")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001C81")]
		[Address(RVA = "0xBC5654", Offset = "0xBC5654", VA = "0xBC5654")]
		public DeckOfCardHandler()
		{
		}
	}
	[Token(Token = "0x20004F8")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x97795C", Offset = "0x97795C")]
	public class DeckOfCardTriggerNC : EventNode<DeckOfCardHandler>
	{
		[Token(Token = "0x40016DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private FlowOutput outPort;

		[Token(Token = "0x40016DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private GameObject pickUp;

		[Token(Token = "0x6001C83")]
		[Address(RVA = "0xBC5BBC", Offset = "0xBC5BBC", VA = "0xBC5BBC", Slot = "26")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6001C84")]
		[Address(RVA = "0xBC5CA0", Offset = "0xBC5CA0", VA = "0xBC5CA0", Slot = "27")]
		public override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6001C85")]
		[Address(RVA = "0xBC5D34", Offset = "0xBC5D34", VA = "0xBC5D34", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001C86")]
		[Address(RVA = "0xBC5DFC", Offset = "0xBC5DFC", VA = "0xBC5DFC")]
		private void OnDealInteractionDelegate(GameObject pickUp)
		{
		}

		[Token(Token = "0x6001C87")]
		[Address(RVA = "0xBC5E60", Offset = "0xBC5E60", VA = "0xBC5E60")]
		public DeckOfCardTriggerNC()
		{
		}

		[Token(Token = "0x6001C88")]
		[Address(RVA = "0xBC5EB0", Offset = "0xBC5EB0", VA = "0xBC5EB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x988738", Offset = "0x988738")]
		private GameObject <RegisterPorts>b__4_0()
		{
			return null;
		}
	}
	[Token(Token = "0x20004F9")]
	public class DelayedDioramaInteraction : MonoBehaviour
	{
		[Token(Token = "0x2000F5C")]
		public delegate void OnDelayedDioramaInteraction();

		[Token(Token = "0x2000F5D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97B9F0", Offset = "0x97B9F0")]
		private sealed class <decrementOutProgressBar>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40023EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40023EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40023ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DelayedDioramaInteraction <>4__this;

			[Token(Token = "0x170003EE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60033B2")]
				[Address(RVA = "0xBC6FD0", Offset = "0xBC6FD0", VA = "0xBC6FD0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003EF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60033B4")]
				[Address(RVA = "0xBC7040", Offset = "0xBC7040", VA = "0xBC7040", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60033AF")]
			[Address(RVA = "0xBC6DE4", Offset = "0xBC6DE4", VA = "0xBC6DE4")]
			[DebuggerHidden]
			public <decrementOutProgressBar>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x60033B0")]
			[Address(RVA = "0xBC6E68", Offset = "0xBC6E68", VA = "0xBC6E68", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60033B1")]
			[Address(RVA = "0xBC6E6C", Offset = "0xBC6E6C", VA = "0xBC6E6C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60033B3")]
			[Address(RVA = "0xBC6FD8", Offset = "0xBC6FD8", VA = "0xBC6FD8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000F5E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BA00", Offset = "0x97BA00")]
		private sealed class <fadeOutProgressBar>d__28 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40023EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40023EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40023F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DelayedDioramaInteraction <>4__this;

			[Token(Token = "0x40023F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Color <newColor>5__2;

			[Token(Token = "0x170003F0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60033B8")]
				[Address(RVA = "0xBC71EC", Offset = "0xBC71EC", VA = "0xBC71EC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003F1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60033BA")]
				[Address(RVA = "0xBC725C", Offset = "0xBC725C", VA = "0xBC725C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60033B5")]
			[Address(RVA = "0xBC6E10", Offset = "0xBC6E10", VA = "0xBC6E10")]
			[DebuggerHidden]
			public <fadeOutProgressBar>d__28(int <>1__state)
			{
			}

			[Token(Token = "0x60033B6")]
			[Address(RVA = "0xBC7048", Offset = "0xBC7048", VA = "0xBC7048", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60033B7")]
			[Address(RVA = "0xBC704C", Offset = "0xBC704C", VA = "0xBC704C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60033B9")]
			[Address(RVA = "0xBC71F4", Offset = "0xBC71F4", VA = "0xBC71F4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40016E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private OnDelayedDioramaInteraction m_onInteraction;

		[Token(Token = "0x40016E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool m_enableProgressBar;

		[Token(Token = "0x40016E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x981DBC", Offset = "0x981DBC")]
		[SerializeField]
		private Image m_progressBar;

		[Token(Token = "0x40016E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool m_hapticFeedbackOnFinish;

		[Token(Token = "0x40016E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m_waitTimeBeforeInteraction;

		[Token(Token = "0x40016E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float m_internalWaitTimeBeforeInteraction;

		[Token(Token = "0x40016E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float m_activationTime;

		[Token(Token = "0x40016E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float m_onTriggerEnterTime;

		[Token(Token = "0x40016E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool m_isInteracting;

		[Token(Token = "0x40016E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private HandTracker m_leftHand;

		[Token(Token = "0x40016EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private HandTracker m_rightHand;

		[Token(Token = "0x40016EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Collider m_collider;

		[Token(Token = "0x40016EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Coroutine m_fadeOutCoroutine;

		[Token(Token = "0x40016ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Coroutine m_decrementOutCoroutine;

		[Token(Token = "0x40016EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_decrementSpeed;

		[Token(Token = "0x40016EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float m_fadeSpeed;

		[Token(Token = "0x6001C89")]
		[Address(RVA = "0xBC5EB8", Offset = "0xBC5EB8", VA = "0xBC5EB8", Slot = "4")]
		protected virtual void OnStartInteracting()
		{
		}

		[Token(Token = "0x6001C8A")]
		[Address(RVA = "0xBC5EBC", Offset = "0xBC5EBC", VA = "0xBC5EBC", Slot = "5")]
		protected virtual void OnStopInteracting()
		{
		}

		[Token(Token = "0x6001C8B")]
		[Address(RVA = "0xBC5EC0", Offset = "0xBC5EC0", VA = "0xBC5EC0", Slot = "6")]
		protected virtual void OnFinishedInteracting()
		{
		}

		[Token(Token = "0x6001C8C")]
		[Address(RVA = "0xBC5EC4", Offset = "0xBC5EC4", VA = "0xBC5EC4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C8D")]
		[Address(RVA = "0xBC5F1C", Offset = "0xBC5F1C", VA = "0xBC5F1C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C8E")]
		[Address(RVA = "0xBC6A20", Offset = "0xBC6A20", VA = "0xBC6A20")]
		public void SetUpOnInteractionCallback(OnDelayedDioramaInteraction callback)
		{
		}

		[Token(Token = "0x6001C8F")]
		[Address(RVA = "0xBC62D4", Offset = "0xBC62D4", VA = "0xBC62D4")]
		private bool isHandIntersectingCollider(HandTracker hand, Collider collider)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C90")]
		[Address(RVA = "0xBC6A28", Offset = "0xBC6A28", VA = "0xBC6A28")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001C91")]
		[Address(RVA = "0xBC6CC4", Offset = "0xBC6CC4", VA = "0xBC6CC4")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001C92")]
		[Address(RVA = "0xBC6438", Offset = "0xBC6438", VA = "0xBC6438")]
		private void handleOnHandExit(HandTracker hand)
		{
		}

		[Token(Token = "0x6001C93")]
		[Address(RVA = "0xBC6D70", Offset = "0xBC6D70", VA = "0xBC6D70")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x988748", Offset = "0x988748")]
		private IEnumerator decrementOutProgressBar()
		{
			return null;
		}

		[Token(Token = "0x6001C94")]
		[Address(RVA = "0xBC69AC", Offset = "0xBC69AC", VA = "0xBC69AC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9887AC", Offset = "0x9887AC")]
		private IEnumerator fadeOutProgressBar()
		{
			return null;
		}

		[Token(Token = "0x6001C95")]
		[Address(RVA = "0xBC6E3C", Offset = "0xBC6E3C", VA = "0xBC6E3C")]
		public DelayedDioramaInteraction()
		{
		}
	}
	[Token(Token = "0x20004FA")]
	public class DioramaInteraction : MonoBehaviour
	{
		[Token(Token = "0x2000F5F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BA10", Offset = "0x97BA10")]
		private sealed class <playIdleAnimationDelayed>d__41 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40023F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40023F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40023F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DioramaInteraction <>4__this;

			[Token(Token = "0x170003F2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60033BE")]
				[Address(RVA = "0xBCBD3C", Offset = "0xBCBD3C", VA = "0xBCBD3C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003F3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60033C0")]
				[Address(RVA = "0xBCBDAC", Offset = "0xBCBDAC", VA = "0xBCBDAC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60033BB")]
			[Address(RVA = "0xBCB4B8", Offset = "0xBCB4B8", VA = "0xBCB4B8")]
			[DebuggerHidden]
			public <playIdleAnimationDelayed>d__41(int <>1__state)
			{
			}

			[Token(Token = "0x60033BC")]
			[Address(RVA = "0xBCBB58", Offset = "0xBCBB58", VA = "0xBCBB58", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60033BD")]
			[Address(RVA = "0xBCBB5C", Offset = "0xBCBB5C", VA = "0xBCBB5C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60033BF")]
			[Address(RVA = "0xBCBD44", Offset = "0xBCBD44", VA = "0xBCBD44", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40016F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x981E60", Offset = "0x981E60")]
		public bool autoDisable;

		[Token(Token = "0x40016F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x981E98", Offset = "0x981E98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x981E98", Offset = "0x981E98")]
		public global::AnimationInstancing.AnimationInstancing animationInstancing;

		[Token(Token = "0x40016F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int idleId;

		[Token(Token = "0x40016F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int interactId;

		[Token(Token = "0x40016F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x981EF8", Offset = "0x981EF8")]
		public int bridgingAnimId;

		[Token(Token = "0x40016F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool hasBridgingAnim;

		[Token(Token = "0x40016F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int playIdOnInit;

		[Token(Token = "0x40016F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x981F30", Offset = "0x981F30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x981F30", Offset = "0x981F30")]
		public Animator animator;

		[Token(Token = "0x40016F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool resumeInterruptedAnimation;

		[Token(Token = "0x40016F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float animationLength;

		[Token(Token = "0x40016FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool supportsInteractionDir;

		[Token(Token = "0x40016FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AnimationData[] additionalAnimationEvents;

		[Token(Token = "0x40016FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private WaitForSeconds idleAnimDelayWait;

		[Token(Token = "0x40016FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private WaitForSeconds bridgeAnimDelayWait;

		[Token(Token = "0x40016FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x981F80", Offset = "0x981F80")]
		public bool faceTarget;

		[Token(Token = "0x40016FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x981FB8", Offset = "0x981FB8")]
		public bool facePlayerOverride;

		[Token(Token = "0x4001700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x98204C", Offset = "0x98204C")]
		public Transform target;

		[Token(Token = "0x4001701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Transform playerTransform;

		[Token(Token = "0x4001702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9820E0", Offset = "0x9820E0")]
		public bool increaseCounter;

		[Token(Token = "0x4001703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public int resetCounterAtCount;

		[Token(Token = "0x4001704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x982118", Offset = "0x982118")]
		public VfxData[] vfxEvents;

		[Token(Token = "0x4001705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public InteractionEventData[] interactionEvents;

		[Token(Token = "0x4001706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public string fabricSoundEvent;

		[Token(Token = "0x4001707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x982150", Offset = "0x982150")]
		public bool m_blockCollisionWithGrabbedHand;

		[Token(Token = "0x4001708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public Vector3 m_directionForDotChecks;

		[Token(Token = "0x4001709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public bool m_checkHeadRange;

		[Token(Token = "0x400170A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x982188", Offset = "0x982188")]
		public float m_requiredHeadRangeForInteraction;

		[Token(Token = "0x400170B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public bool m_checkHeadDot;

		[Token(Token = "0x400170C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x98221C", Offset = "0x98221C")]
		public float m_headRequiredDot;

		[Token(Token = "0x400170D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public bool m_checkHandDot;

		[Token(Token = "0x400170E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9822B0", Offset = "0x9822B0")]
		public float m_handRequiredDot;

		[Token(Token = "0x400170F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private bool m_isPlaying;

		[Token(Token = "0x4001710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float m_startTime;

		[Token(Token = "0x4001711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private int m_prevNameHash;

		[Token(Token = "0x4001712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private float m_prevNormalizedTime;

		[Token(Token = "0x4001713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private int m_interactionCount;

		[Token(Token = "0x4001714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private AnimationData[] m_originalAnimationParameters;

		[Token(Token = "0x4001715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Transform m_cameraTransform;

		[Token(Token = "0x6001C96")]
		[Address(RVA = "0xBCA474", Offset = "0xBCA474", VA = "0xBCA474")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C97")]
		[Address(RVA = "0xBCA514", Offset = "0xBCA514", VA = "0xBCA514")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C98")]
		[Address(RVA = "0xBCA868", Offset = "0xBCA868", VA = "0xBCA868")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001C99")]
		[Address(RVA = "0xBCB22C", Offset = "0xBCB22C", VA = "0xBCB22C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x988810", Offset = "0x988810")]
		private IEnumerator playIdleAnimationDelayed()
		{
			return null;
		}

		[Token(Token = "0x6001C9A")]
		[Address(RVA = "0xBCB4E4", Offset = "0xBCB4E4", VA = "0xBCB4E4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C9B")]
		[Address(RVA = "0xBCB6DC", Offset = "0xBCB6DC", VA = "0xBCB6DC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001C9C")]
		[Address(RVA = "0xBCB2A0", Offset = "0xBCB2A0", VA = "0xBCB2A0")]
		private void playEffect(Transform effect, bool play)
		{
		}

		[Token(Token = "0x6001C9D")]
		[Address(RVA = "0xBCB3B0", Offset = "0xBCB3B0", VA = "0xBCB3B0")]
		private void destroyEffect(Transform effect, float ttl = -1f)
		{
		}

		[Token(Token = "0x6001C9E")]
		[Address(RVA = "0xBCB8E0", Offset = "0xBCB8E0", VA = "0xBCB8E0")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001C9F")]
		[Address(RVA = "0xBCBAC0", Offset = "0xBCBAC0", VA = "0xBCBAC0")]
		public DioramaInteraction()
		{
		}
	}
	[Token(Token = "0x20004FB")]
	public class DioramaLevelBeginTrigger : MonoBehaviour
	{
		[Token(Token = "0x4001716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractionReceiverEvent[] interactionEvents;

		[Token(Token = "0x6001CA0")]
		[Address(RVA = "0xBCC454", Offset = "0xBCC454", VA = "0xBCC454")]
		private void Start()
		{
		}

		[Token(Token = "0x6001CA1")]
		[Address(RVA = "0xBCC460", Offset = "0xBCC460", VA = "0xBCC460")]
		public DioramaLevelBeginTrigger()
		{
		}
	}
	[Token(Token = "0x20004FC")]
	public class DioramaQuantumLeap : MonoBehaviour
	{
		[Token(Token = "0x4001717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactible[] pickups;

		[Token(Token = "0x4001718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AutoScalable[] scalables;

		[Token(Token = "0x6001CA2")]
		[Address(RVA = "0xBCD138", Offset = "0xBCD138", VA = "0xBCD138")]
		private void Start()
		{
		}

		[Token(Token = "0x6001CA3")]
		[Address(RVA = "0xBCD1C0", Offset = "0xBCD1C0", VA = "0xBCD1C0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001CA4")]
		[Address(RVA = "0xBCD54C", Offset = "0xBCD54C", VA = "0xBCD54C")]
		public DioramaQuantumLeap()
		{
		}
	}
	[Token(Token = "0x20004FD")]
	public class DropableItem : MultiWorldAchievementInterface
	{
		[Token(Token = "0x4001719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string pokeSoundName;

		[Token(Token = "0x400171A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Rigidbody m_rigidBody;

		[Token(Token = "0x400171B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_waitForSleep;

		[Token(Token = "0x400171C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private LayerMask m_handsMask;

		[Token(Token = "0x400171D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MultiWorldAchievementCounter m_achievementCounter;

		[Token(Token = "0x6001CA5")]
		[Address(RVA = "0xBCF8F8", Offset = "0xBCF8F8", VA = "0xBCF8F8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001CA6")]
		[Address(RVA = "0xBCF9E0", Offset = "0xBCF9E0", VA = "0xBCF9E0")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001CA7")]
		[Address(RVA = "0xBCFA90", Offset = "0xBCFA90", VA = "0xBCFA90")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001CA8")]
		[Address(RVA = "0xBCFB28", Offset = "0xBCFB28", VA = "0xBCFB28")]
		private void Update()
		{
		}

		[Token(Token = "0x6001CA9")]
		[Address(RVA = "0xBCFB90", Offset = "0xBCFB90", VA = "0xBCFB90", Slot = "4")]
		public override void RemoveFromCounter()
		{
		}

		[Token(Token = "0x6001CAA")]
		[Address(RVA = "0xBCFC30", Offset = "0xBCFC30", VA = "0xBCFC30", Slot = "5")]
		public override void SetUpReference(MultiWorldAchievementCounter counter)
		{
		}

		[Token(Token = "0x6001CAB")]
		[Address(RVA = "0xBCFC38", Offset = "0xBCFC38", VA = "0xBCFC38")]
		public DropableItem()
		{
		}
	}
	[Token(Token = "0x20004FE")]
	public class FoliageInteractionAggregator : MonoBehaviour
	{
		[Token(Token = "0x400171E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] objects;

		[Token(Token = "0x400171F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector4[] m_positions;

		[Token(Token = "0x6001CAC")]
		[Address(RVA = "0xBD1D10", Offset = "0xBD1D10", VA = "0xBD1D10")]
		private void Update()
		{
		}

		[Token(Token = "0x6001CAD")]
		[Address(RVA = "0xBD1FA0", Offset = "0xBD1FA0", VA = "0xBD1FA0")]
		public FoliageInteractionAggregator()
		{
		}
	}
	[Token(Token = "0x20004FF")]
	public class FollowPlayerVision : MonoBehaviour
	{
		[Token(Token = "0x4001720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform m_playerHead;

		[Token(Token = "0x4001721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_transform;

		[Token(Token = "0x4001722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_distanceFromPlayer;

		[Token(Token = "0x6001CAE")]
		[Address(RVA = "0xBD2000", Offset = "0xBD2000", VA = "0xBD2000")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001CAF")]
		[Address(RVA = "0xBD2028", Offset = "0xBD2028", VA = "0xBD2028")]
		private void Start()
		{
		}

		[Token(Token = "0x6001CB0")]
		[Address(RVA = "0xBD20B0", Offset = "0xBD20B0", VA = "0xBD20B0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001CB1")]
		[Address(RVA = "0xBD2380", Offset = "0xBD2380", VA = "0xBD2380")]
		public FollowPlayerVision()
		{
		}
	}
	[Token(Token = "0x2000500")]
	public class GameSettings : MonoBehaviour
	{
		[Token(Token = "0x4001723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static GameSettings s_instance;

		[Token(Token = "0x4001724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool m_areSubtitlesEnabled;

		[Token(Token = "0x6001CB2")]
		[Address(RVA = "0x1E499A4", Offset = "0x1E499A4", VA = "0x1E499A4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001CB3")]
		[Address(RVA = "0x1E499F8", Offset = "0x1E499F8", VA = "0x1E499F8")]
		public static bool areSubtitlesEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CB4")]
		[Address(RVA = "0x1E49AA8", Offset = "0x1E49AA8", VA = "0x1E49AA8")]
		public GameSettings()
		{
		}
	}
	[Token(Token = "0x2000501")]
	public class HandEffectCustomRoot : MonoBehaviour
	{
		[Token(Token = "0x4001725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ParticleSystem handParticles;

		[Token(Token = "0x4001726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_effectRoot;

		[Token(Token = "0x4001727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_waitForSecondsBeforeReparent;

		[Token(Token = "0x4001728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_reparentTime;

		[Token(Token = "0x4001729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_doReparent;

		[Token(Token = "0x6001CB5")]
		[Address(RVA = "0x1E4E4EC", Offset = "0x1E4E4EC", VA = "0x1E4E4EC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001CB6")]
		[Address(RVA = "0x1E4E4F0", Offset = "0x1E4E4F0", VA = "0x1E4E4F0")]
		public void UpdateCustomRoot()
		{
		}

		[Token(Token = "0x6001CB7")]
		[Address(RVA = "0x1E4E5D4", Offset = "0x1E4E5D4", VA = "0x1E4E5D4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001CB8")]
		[Address(RVA = "0x1E4E65C", Offset = "0x1E4E65C", VA = "0x1E4E65C")]
		public HandEffectCustomRoot()
		{
		}
	}
	[Token(Token = "0x2000502")]
	public class IdTag : MonoBehaviour
	{
		[Token(Token = "0x400172A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int m_id;

		[Token(Token = "0x170002E9")]
		public int ID
		{
			[Token(Token = "0x6001CB9")]
			[Address(RVA = "0x1E571F0", Offset = "0x1E571F0", VA = "0x1E571F0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001CBA")]
		[Address(RVA = "0x1E571F8", Offset = "0x1E571F8", VA = "0x1E571F8")]
		public IdTag()
		{
		}
	}
	[Token(Token = "0x2000503")]
	public class InteractibleRotator : Interactible
	{
		[Token(Token = "0x400172B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float rotationForce;

		[Token(Token = "0x400172C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Transform mirrorRotationTo;

		[Token(Token = "0x400172D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Transform m_interactionAnchor;

		[Token(Token = "0x400172E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float m_originalAngularDrag;

		[Token(Token = "0x6001CBB")]
		[Address(RVA = "0x1E58708", Offset = "0x1E58708", VA = "0x1E58708", Slot = "6")]
		protected override void handleStart()
		{
		}

		[Token(Token = "0x6001CBC")]
		[Address(RVA = "0x1E5883C", Offset = "0x1E5883C", VA = "0x1E5883C", Slot = "10")]
		protected override void handleHandGripBegin(HandTracker hand)
		{
		}

		[Token(Token = "0x6001CBD")]
		[Address(RVA = "0x1E58928", Offset = "0x1E58928", VA = "0x1E58928", Slot = "11")]
		protected override void handleHandGripEnd(HandTracker hand)
		{
		}

		[Token(Token = "0x6001CBE")]
		[Address(RVA = "0x1E58968", Offset = "0x1E58968", VA = "0x1E58968", Slot = "7")]
		protected override void handleUpdate()
		{
		}

		[Token(Token = "0x6001CBF")]
		[Address(RVA = "0x1E58AD8", Offset = "0x1E58AD8", VA = "0x1E58AD8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001CC0")]
		[Address(RVA = "0x1E58BD0", Offset = "0x1E58BD0", VA = "0x1E58BD0")]
		public InteractibleRotator()
		{
		}
	}
	[Token(Token = "0x2000504")]
	public enum ParameterType
	{
		[Token(Token = "0x4001730")]
		IntType,
		[Token(Token = "0x4001731")]
		BoolType,
		[Token(Token = "0x4001732")]
		FloatType,
		[Token(Token = "0x4001733")]
		ColorType,
		[Token(Token = "0x4001734")]
		TriggerType
	}
	[Serializable]
	[Token(Token = "0x2000505")]
	public class AnimationData
	{
		[Token(Token = "0x4001735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Animator animator;

		[Token(Token = "0x4001736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string animationName;

		[Token(Token = "0x4001737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ParameterType parameterType;

		[Token(Token = "0x4001738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool boolValue;

		[Token(Token = "0x4001739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int intValue;

		[Token(Token = "0x400173A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float floatValue;

		[Token(Token = "0x400173B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool supportsInteractionDir;

		[Token(Token = "0x6001CC1")]
		[Address(RVA = "0xD996C8", Offset = "0xD996C8", VA = "0xD996C8")]
		public static void handleAnimationEvents(AnimationData[] animationEvents, float interactiondir = 0f)
		{
		}

		[Token(Token = "0x6001CC2")]
		[Address(RVA = "0xD99974", Offset = "0xD99974", VA = "0xD99974")]
		public static void handleAnimationEvent(AnimationData data)
		{
		}

		[Token(Token = "0x6001CC3")]
		[Address(RVA = "0xD99B80", Offset = "0xD99B80", VA = "0xD99B80")]
		public AnimationData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000506")]
	public class VfxData
	{
		[Token(Token = "0x400173C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform effectBlueprint;

		[Token(Token = "0x400173D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform effectParent;

		[Token(Token = "0x400173E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float destroyTime;

		[Token(Token = "0x6001CC4")]
		[Address(RVA = "0xF488D0", Offset = "0xF488D0", VA = "0xF488D0")]
		public VfxData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000507")]
	public class InteractionEventData
	{
		[Token(Token = "0x400173F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public InteractionReceiverEvent evt;

		[Token(Token = "0x4001740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int requiredCounter;

		[Token(Token = "0x6001CC5")]
		[Address(RVA = "0x1E5ADEC", Offset = "0x1E5ADEC", VA = "0x1E5ADEC")]
		public InteractionEventData()
		{
		}
	}
	[Token(Token = "0x2000508")]
	public class InteractionDealerTrigger : MonoBehaviour
	{
		[Token(Token = "0x4001741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int interactionTag;

		[Token(Token = "0x4001742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float interactionAmount;

		[Token(Token = "0x4001743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private InteractionReceiver m_receiver;

		[Token(Token = "0x4001744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_hasReceiver;

		[Token(Token = "0x6001CC6")]
		[Address(RVA = "0x1E5AAC8", Offset = "0x1E5AAC8", VA = "0x1E5AAC8")]
		private void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x6001CC7")]
		[Address(RVA = "0x1E5ACB0", Offset = "0x1E5ACB0", VA = "0x1E5ACB0")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001CC8")]
		[Address(RVA = "0x1E5ADDC", Offset = "0x1E5ADDC", VA = "0x1E5ADDC")]
		public InteractionDealerTrigger()
		{
		}
	}
	[Token(Token = "0x2000509")]
	public class ApplyFloatyBounceIRE : InteractionReceiverEvent
	{
		[Token(Token = "0x4001745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SimpleFloatingObject floaty;

		[Token(Token = "0x6001CC9")]
		[Address(RVA = "0xBB3D60", Offset = "0xBB3D60", VA = "0xBB3D60", Slot = "4")]
		public override void onTrigger()
		{
		}

		[Token(Token = "0x6001CCA")]
		[Address(RVA = "0xBB3D90", Offset = "0xBB3D90", VA = "0xBB3D90")]
		public ApplyFloatyBounceIRE()
		{
		}
	}
	[Token(Token = "0x200050A")]
	public class ApplyForceInRandomDirectionIRE : InteractionReceiverEvent
	{
		[Token(Token = "0x4001746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m_minForceToApply;

		[Token(Token = "0x4001747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m_maxForceToApply;

		[Token(Token = "0x4001748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool m_ignoreYAxis;

		[Token(Token = "0x4001749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x982354", Offset = "0x982354")]
		private Rigidbody m_rigidbody;

		[Token(Token = "0x400174A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 m_direction;

		[Token(Token = "0x6001CCB")]
		[Address(RVA = "0xBB3D98", Offset = "0xBB3D98", VA = "0xBB3D98")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001CCC")]
		[Address(RVA = "0xBB3E30", Offset = "0xBB3E30", VA = "0xBB3E30", Slot = "4")]
		public override void onTrigger()
		{
		}

		[Token(Token = "0x6001CCD")]
		[Address(RVA = "0xBB3F58", Offset = "0xBB3F58", VA = "0xBB3F58")]
		public ApplyForceInRandomDirectionIRE()
		{
		}
	}
	[Token(Token = "0x200050B")]
	public class CoinFoundIRE : InteractionReceiverEvent
	{
		[Token(Token = "0x2000F60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BA20", Offset = "0x97BA20")]
		private sealed class <waitAndDisable>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40023F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40023F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40023F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CoinFoundIRE <>4__this;

			[Token(Token = "0x170003F4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60033C4")]
				[Address(RVA = "0xBC2C98", Offset = "0xBC2C98", VA = "0xBC2C98", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003F5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60033C6")]
				[Address(RVA = "0xBC2D08", Offset = "0xBC2D08", VA = "0xBC2D08", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60033C1")]
			[Address(RVA = "0xBC2B60", Offset = "0xBC2B60", VA = "0xBC2B60")]
			[DebuggerHidden]
			public <waitAndDisable>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x60033C2")]
			[Address(RVA = "0xBC2BB4", Offset = "0xBC2BB4", VA = "0xBC2BB4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60033C3")]
			[Address(RVA = "0xBC2BB8", Offset = "0xBC2BB8", VA = "0xBC2BB8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60033C5")]
			[Address(RVA = "0xBC2CA0", Offset = "0xBC2CA0", VA = "0xBC2CA0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400174B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float disableCoinAfterSeconds;

		[Token(Token = "0x400174C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CoinJar m_coinJar;

		[Token(Token = "0x400174D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForSeconds m_waitForSeconds;

		[Token(Token = "0x400174E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Coroutine m_coroutine;

		[Token(Token = "0x400174F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_wasTriggered;

		[Token(Token = "0x4001750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Collider m_collider;

		[Token(Token = "0x4001751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_colliderWasEnabled;

		[Token(Token = "0x4001752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private SaveManager m_saveManager;

		[Token(Token = "0x4001753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private CoinBackendInfo m_coinBackendInfo;

		[Token(Token = "0x6001CCE")]
		[Address(RVA = "0xBC23E8", Offset = "0xBC23E8", VA = "0xBC23E8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001CCF")]
		[Address(RVA = "0xBC24BC", Offset = "0xBC24BC", VA = "0xBC24BC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001CD0")]
		[Address(RVA = "0xBC2528", Offset = "0xBC2528", VA = "0xBC2528", Slot = "4")]
		public override void onTrigger()
		{
		}

		[Token(Token = "0x6001CD1")]
		[Address(RVA = "0xBC2AEC", Offset = "0xBC2AEC", VA = "0xBC2AEC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x988874", Offset = "0x988874")]
		private IEnumerator waitAndDisable()
		{
			return null;
		}

		[Token(Token = "0x6001CD2")]
		[Address(RVA = "0xBC2B8C", Offset = "0xBC2B8C", VA = "0xBC2B8C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001CD3")]
		[Address(RVA = "0xBC2BA0", Offset = "0xBC2BA0", VA = "0xBC2BA0")]
		public CoinFoundIRE()
		{
		}
	}
	[Token(Token = "0x200050C")]
	public class DealInteractionIRE : InteractionReceiverEvent
	{
		[Token(Token = "0x2000F61")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BA30", Offset = "0x97BA30")]
		private sealed class <dealInteractionOverTime>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40023F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40023F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40023FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DealInteractionIRE <>4__this;

			[Token(Token = "0x40023FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public InteractionReceiver interaction;

			[Token(Token = "0x170003F6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60033CA")]
				[Address(RVA = "0xBC3A94", Offset = "0xBC3A94", VA = "0xBC3A94", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003F7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60033CC")]
				[Address(RVA = "0xBC3B04", Offset = "0xBC3B04", VA = "0xBC3B04", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60033C7")]
			[Address(RVA = "0xBC3948", Offset = "0xBC3948", VA = "0xBC3948")]
			[DebuggerHidden]
			public <dealInteractionOverTime>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x60033C8")]
			[Address(RVA = "0xBC398C", Offset = "0xBC398C", VA = "0xBC398C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60033C9")]
			[Address(RVA = "0xBC3990", Offset = "0xBC3990", VA = "0xBC3990", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60033CB")]
			[Address(RVA = "0xBC3A9C", Offset = "0xBC3A9C", VA = "0xBC3A9C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform aimPoint;

		[Token(Token = "0x4001755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int interactionTag;

		[Token(Token = "0x4001756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float interactionAmount;

		[Token(Token = "0x4001757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool dealOverTime;

		[Token(Token = "0x4001758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float dealTime;

		[Token(Token = "0x6001CD4")]
		[Address(RVA = "0xBC3720", Offset = "0xBC3720", VA = "0xBC3720", Slot = "4")]
		public override void onTrigger()
		{
		}

		[Token(Token = "0x6001CD5")]
		[Address(RVA = "0xBC38B0", Offset = "0xBC38B0", VA = "0xBC38B0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9888D8", Offset = "0x9888D8")]
		private IEnumerator dealInteractionOverTime(InteractionReceiver interaction)
		{
			return null;
		}

		[Token(Token = "0x6001CD6")]
		[Address(RVA = "0xBC3974", Offset = "0xBC3974", VA = "0xBC3974")]
		public DealInteractionIRE()
		{
		}
	}
	[Token(Token = "0x200050D")]
	public class EnableAnimatorIRE : InteractionReceiverEvent
	{
		[Token(Token = "0x4001759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Animator animator;

		[Token(Token = "0x400175A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool enableAnimator;

		[Token(Token = "0x6001CD7")]
		[Address(RVA = "0xBD0A74", Offset = "0xBD0A74", VA = "0xBD0A74", Slot = "4")]
		public override void onTrigger()
		{
		}

		[Token(Token = "0x6001CD8")]
		[Address(RVA = "0xBD0AB0", Offset = "0xBD0AB0", VA = "0xBD0AB0")]
		public EnableAnimatorIRE()
		{
		}
	}
	[Token(Token = "0x200050E")]
	public class EnableGameObjectIRE : InteractionReceiverEvent
	{
		[Token(Token = "0x400175B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] m_objectsToEnable;

		[Token(Token = "0x400175C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject[] m_objectsToDisable;

		[Token(Token = "0x400175D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_delay;

		[Token(Token = "0x6001CD9")]
		[Address(RVA = "0xBD0B50", Offset = "0xBD0B50", VA = "0xBD0B50", Slot = "4")]
		public override void onTrigger()
		{
		}

		[Token(Token = "0x6001CDA")]
		[Address(RVA = "0xBD0BA8", Offset = "0xBD0BA8", VA = "0xBD0BA8")]
		private void HandleOnTrigger()
		{
		}

		[Token(Token = "0x6001CDB")]
		[Address(RVA = "0xBD0CC4", Offset = "0xBD0CC4", VA = "0xBD0CC4")]
		public EnableGameObjectIRE()
		{
		}
	}
	[Token(Token = "0x200050F")]
	public class EnablePickupIRE : InteractionReceiverEvent
	{
		[Token(Token = "0x400175E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Interactible interactible;

		[Token(Token = "0x400175F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool enableInteractible;

		[Token(Token = "0x6001CDC")]
		[Address(RVA = "0xBD0E44", Offset = "0xBD0E44", VA = "0xBD0E44", Slot = "4")]
		public override void onTrigger()
		{
		}

		[Token(Token = "0x6001CDD")]
		[Address(RVA = "0xBD0E74", Offset = "0xBD0E74", VA = "0xBD0E74")]
		public EnablePickupIRE()
		{
		}
	}
	[Token(Token = "0x2000510")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x977994", Offset = "0x977994")]
	public class InvokeInteractionEventIRE : InteractionReceiverEvent
	{
		[Token(Token = "0x4001760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int m_eventId;

		[Token(Token = "0x4001761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TriggerInteractionEvent m_event;

		[Token(Token = "0x6001CDE")]
		[Address(RVA = "0x1E5B6E4", Offset = "0x1E5B6E4", VA = "0x1E5B6E4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001CDF")]
		[Address(RVA = "0x1E5B73C", Offset = "0x1E5B73C", VA = "0x1E5B73C", Slot = "4")]
		public override void onTrigger()
		{
		}

		[Token(Token = "0x6001CE0")]
		[Address(RVA = "0x1E5B774", Offset = "0x1E5B774", VA = "0x1E5B774")]
		public InvokeInteractionEventIRE()
		{
		}
	}
	[Token(Token = "0x2000511")]
	public class OnTriggerProxyIRE : InteractionReceiverEvent
	{
		[Token(Token = "0x2000F62")]
		public delegate void TriggerProxyIREDelegate();

		[Token(Token = "0x4001762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TriggerProxyIREDelegate m_callback;

		[Token(Token = "0x6001CE1")]
		[Address(RVA = "0x1E66CEC", Offset = "0x1E66CEC", VA = "0x1E66CEC")]
		public void SetUpCallback(TriggerProxyIREDelegate callback)
		{
		}

		[Token(Token = "0x6001CE2")]
		[Address(RVA = "0x1E66CF4", Offset = "0x1E66CF4", VA = "0x1E66CF4", Slot = "4")]
		public override void onTrigger()
		{
		}

		[Token(Token = "0x6001CE3")]
		[Address(RVA = "0x1E66D08", Offset = "0x1E66D08", VA = "0x1E66D08")]
		public OnTriggerProxyIRE()
		{
		}
	}
	[Token(Token = "0x2000512")]
	public class RotateCharacterDioramaThreeSpecialIRE : InteractionReceiverEvent
	{
		[Token(Token = "0x2000F63")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BA40", Offset = "0x97BA40")]
		private sealed class <resetRotation>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40023FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40023FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40023FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RotateCharacterDioramaThreeSpecialIRE <>4__this;

			[Token(Token = "0x170003F8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60033D4")]
				[Address(RVA = "0x1E3D0A4", Offset = "0x1E3D0A4", VA = "0x1E3D0A4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003F9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60033D6")]
				[Address(RVA = "0x1E3D114", Offset = "0x1E3D114", VA = "0x1E3D114", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60033D1")]
			[Address(RVA = "0x1E3CF54", Offset = "0x1E3CF54", VA = "0x1E3CF54")]
			[DebuggerHidden]
			public <resetRotation>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x60033D2")]
			[Address(RVA = "0x1E3CF88", Offset = "0x1E3CF88", VA = "0x1E3CF88", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60033D3")]
			[Address(RVA = "0x1E3CF8C", Offset = "0x1E3CF8C", VA = "0x1E3CF8C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60033D5")]
			[Address(RVA = "0x1E3D0AC", Offset = "0x1E3D0AC", VA = "0x1E3D0AC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private WaitForSeconds m_waitForSeconds;

		[Token(Token = "0x6001CE4")]
		[Address(RVA = "0x1E3CE1C", Offset = "0x1E3CE1C", VA = "0x1E3CE1C", Slot = "4")]
		public override void onTrigger()
		{
		}

		[Token(Token = "0x6001CE5")]
		[Address(RVA = "0x1E3CEBC", Offset = "0x1E3CEBC", VA = "0x1E3CEBC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001CE6")]
		[Address(RVA = "0x1E3CE48", Offset = "0x1E3CE48", VA = "0x1E3CE48")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98893C", Offset = "0x98893C")]
		private IEnumerator resetRotation()
		{
			return null;
		}

		[Token(Token = "0x6001CE7")]
		[Address(RVA = "0x1E3CF80", Offset = "0x1E3CF80", VA = "0x1E3CF80")]
		public RotateCharacterDioramaThreeSpecialIRE()
		{
		}
	}
	[Token(Token = "0x2000513")]
	public class TriggerAnimationIRE : InteractionReceiverEvent
	{
		[Token(Token = "0x4001764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationData[] animationEvents;

		[Token(Token = "0x6001CE8")]
		[Address(RVA = "0xF43FB4", Offset = "0xF43FB4", VA = "0xF43FB4", Slot = "4")]
		public override void onTrigger()
		{
		}

		[Token(Token = "0x6001CE9")]
		[Address(RVA = "0xF43FC4", Offset = "0xF43FC4", VA = "0xF43FC4")]
		public TriggerAnimationIRE()
		{
		}
	}
	[Token(Token = "0x2000514")]
	public class TriggerFabricSoundIRE : InteractionReceiverEvent
	{
		[Token(Token = "0x4001765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string m_soundEventName;

		[Token(Token = "0x4001766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool m_onlyEnterOnce;

		[Token(Token = "0x4001767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject m_otherSoundEmitter;

		[Token(Token = "0x4001768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_hasEntered;

		[Token(Token = "0x6001CEA")]
		[Address(RVA = "0xF44028", Offset = "0xF44028", VA = "0xF44028", Slot = "4")]
		public override void onTrigger()
		{
		}

		[Token(Token = "0x6001CEB")]
		[Address(RVA = "0xF44164", Offset = "0xF44164", VA = "0xF44164")]
		public TriggerFabricSoundIRE()
		{
		}
	}
	[Token(Token = "0x2000515")]
	public class TriggerSoundIRE : InteractionReceiverEvent
	{
		[Token(Token = "0x4001769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9823A0", Offset = "0x9823A0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9823A0", Offset = "0x9823A0")]
		public string soundIdName;

		[Token(Token = "0x400176A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform soundLocation;

		[Token(Token = "0x6001CEC")]
		[Address(RVA = "0xF4489C", Offset = "0xF4489C", VA = "0xF4489C", Slot = "4")]
		public override void onTrigger()
		{
		}

		[Token(Token = "0x6001CED")]
		[Address(RVA = "0xF4492C", Offset = "0xF4492C", VA = "0xF4492C")]
		public TriggerSoundIRE()
		{
		}
	}
	[Token(Token = "0x2000516")]
	public class WaitForSecondsIRE : InteractionReceiverEvent
	{
		[Token(Token = "0x400176B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float waitForSeconds;

		[Token(Token = "0x400176C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractionReceiverEvent[] interactionEvents;

		[Token(Token = "0x400176D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_isTriggered;

		[Token(Token = "0x400176E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_triggerTime;

		[Token(Token = "0x6001CEE")]
		[Address(RVA = "0xF49494", Offset = "0xF49494", VA = "0xF49494", Slot = "4")]
		public override void onTrigger()
		{
		}

		[Token(Token = "0x6001CEF")]
		[Address(RVA = "0xF494C4", Offset = "0xF494C4", VA = "0xF494C4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001CF0")]
		[Address(RVA = "0xF49514", Offset = "0xF49514", VA = "0xF49514")]
		public WaitForSecondsIRE()
		{
		}
	}
	[Token(Token = "0x2000517")]
	public class WaterDependantVfxIRE : InteractionReceiverEvent
	{
		[Token(Token = "0x400176F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VfxData[] vfxEvents;

		[Token(Token = "0x4001770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool m_isInWater;

		[Token(Token = "0x6001CF1")]
		[Address(RVA = "0xF49524", Offset = "0xF49524", VA = "0xF49524", Slot = "4")]
		public override void onTrigger()
		{
		}

		[Token(Token = "0x6001CF2")]
		[Address(RVA = "0xF497E8", Offset = "0xF497E8", VA = "0xF497E8")]
		private void playEffect(Transform effect, bool play)
		{
		}

		[Token(Token = "0x6001CF3")]
		[Address(RVA = "0xF49900", Offset = "0xF49900", VA = "0xF49900")]
		private void destroyEffect(Transform effect, float ttl = -1f)
		{
		}

		[Token(Token = "0x6001CF4")]
		[Address(RVA = "0xF49A08", Offset = "0xF49A08", VA = "0xF49A08")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001CF5")]
		[Address(RVA = "0xF49A84", Offset = "0xF49A84", VA = "0xF49A84")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001CF6")]
		[Address(RVA = "0xF49AFC", Offset = "0xF49AFC", VA = "0xF49AFC")]
		public WaterDependantVfxIRE()
		{
		}
	}
	[Token(Token = "0x2000518")]
	public class LevelProgressTracker : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000F64")]
		public class AnimalUIRepresentation
		{
			[Token(Token = "0x40023FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string identifier;

			[Token(Token = "0x4002400")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public RectTransform inactiveRep;

			[Token(Token = "0x4002401")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RectTransform activeRep;

			[NonSerialized]
			[Token(Token = "0x4002402")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int identifierHash;

			[NonSerialized]
			[Token(Token = "0x4002403")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public bool found;

			[Token(Token = "0x60033D7")]
			[Address(RVA = "0x1E5D2EC", Offset = "0x1E5D2EC", VA = "0x1E5D2EC")]
			public AnimalUIRepresentation()
			{
			}
		}

		[Token(Token = "0x4001771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform villain;

		[Token(Token = "0x4001772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject uiRoot;

		[Token(Token = "0x4001773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2 uiOffset;

		[Token(Token = "0x4001774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float visibleTime;

		[Token(Token = "0x4001775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AnimalUIRepresentation[] animalsToFind;

		[Token(Token = "0x4001776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform[] popupPlaces;

		[Token(Token = "0x4001777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_isVisible;

		[Token(Token = "0x4001778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float m_visibleStartTime;

		[Token(Token = "0x6001CF7")]
		[Address(RVA = "0x1E5C90C", Offset = "0x1E5C90C", VA = "0x1E5C90C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001CF8")]
		[Address(RVA = "0x1E5CA60", Offset = "0x1E5CA60", VA = "0x1E5CA60")]
		private void Start()
		{
		}

		[Token(Token = "0x6001CF9")]
		[Address(RVA = "0x1E5CA94", Offset = "0x1E5CA94", VA = "0x1E5CA94")]
		private void Update()
		{
		}

		[Token(Token = "0x6001CFA")]
		[Address(RVA = "0x1E5CB00", Offset = "0x1E5CB00", VA = "0x1E5CB00")]
		public void SetSecretFound(string identifier)
		{
		}

		[Token(Token = "0x6001CFB")]
		[Address(RVA = "0x1E5CB30", Offset = "0x1E5CB30", VA = "0x1E5CB30")]
		public void SetSecretFound(int identifierHash)
		{
		}

		[Token(Token = "0x6001CFC")]
		[Address(RVA = "0x1E5C9D0", Offset = "0x1E5C9D0", VA = "0x1E5C9D0")]
		public void SetSecretStateAll(bool active, bool enableUI = true)
		{
		}

		[Token(Token = "0x6001CFD")]
		[Address(RVA = "0x1E5CF68", Offset = "0x1E5CF68", VA = "0x1E5CF68")]
		public void PositionVillain()
		{
		}

		[Token(Token = "0x6001CFE")]
		[Address(RVA = "0x1E5CBE4", Offset = "0x1E5CBE4", VA = "0x1E5CBE4")]
		private void setSecretState(AnimalUIRepresentation uiRep, bool active, bool enableUI)
		{
		}

		[Token(Token = "0x6001CFF")]
		[Address(RVA = "0x1E5CFF0", Offset = "0x1E5CFF0", VA = "0x1E5CFF0")]
		private Transform findClosestPopup()
		{
			return null;
		}

		[Token(Token = "0x6001D00")]
		[Address(RVA = "0x1E5D198", Offset = "0x1E5D198", VA = "0x1E5D198")]
		private void facePlayer(Transform ui)
		{
		}

		[Token(Token = "0x6001D01")]
		[Address(RVA = "0x1E5D298", Offset = "0x1E5D298", VA = "0x1E5D298")]
		public LevelProgressTracker()
		{
		}
	}
	[Token(Token = "0x2000519")]
	public class LoadingScreen : MonoBehaviour
	{
		[Token(Token = "0x4001779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform playerLocation;

		[Token(Token = "0x400177A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static LoadingScreen s_instance;

		[Token(Token = "0x400177B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject m_loadingScreenObj;

		[Token(Token = "0x400177C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AudioSource m_loadingMusic;

		[Token(Token = "0x400177D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_shouldFade;

		[Token(Token = "0x400177E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float m_initialVolume;

		[Token(Token = "0x400177F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float m_targetVolume;

		[Token(Token = "0x4001780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float m_fadeTime;

		[Token(Token = "0x4001781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float m_deltaFade;

		[Token(Token = "0x4001782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool m_soundMuted;

		[Token(Token = "0x6001D02")]
		[Address(RVA = "0x1E5F140", Offset = "0x1E5F140", VA = "0x1E5F140")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D03")]
		[Address(RVA = "0x1E5F1E0", Offset = "0x1E5F1E0", VA = "0x1E5F1E0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D04")]
		[Address(RVA = "0x1E5E8B8", Offset = "0x1E5E8B8", VA = "0x1E5E8B8")]
		public static float GetFadeTime()
		{
			return default(float);
		}

		[Token(Token = "0x6001D05")]
		[Address(RVA = "0x1E5E7D8", Offset = "0x1E5E7D8", VA = "0x1E5E7D8")]
		public static void SetFadeTime(float fadeTime)
		{
		}

		[Token(Token = "0x6001D06")]
		[Address(RVA = "0x1E5E990", Offset = "0x1E5E990", VA = "0x1E5E990")]
		public static Transform GetPlayerLocation()
		{
			return null;
		}

		[Token(Token = "0x6001D07")]
		[Address(RVA = "0x1E5F350", Offset = "0x1E5F350", VA = "0x1E5F350")]
		public static void FadeMusic(float targetVolume)
		{
		}

		[Token(Token = "0x6001D08")]
		[Address(RVA = "0x1E5EA6C", Offset = "0x1E5EA6C", VA = "0x1E5EA6C")]
		public static void SetIsShowing(bool val)
		{
		}

		[Token(Token = "0x6001D09")]
		[Address(RVA = "0x1E5D580", Offset = "0x1E5D580", VA = "0x1E5D580")]
		public static void SetLoadingScreenObj(GameObject obj)
		{
		}

		[Token(Token = "0x6001D0A")]
		[Address(RVA = "0x1E5F608", Offset = "0x1E5F608", VA = "0x1E5F608")]
		public LoadingScreen()
		{
		}
	}
	[Token(Token = "0x200051A")]
	public class MagicHat : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000F65")]
		internal class HatItem
		{
			[Token(Token = "0x4002404")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x983DA4", Offset = "0x983DA4")]
			public GameObject m_object;

			[Token(Token = "0x4002405")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform m_spawnTransform;

			[Token(Token = "0x60033D8")]
			[Address(RVA = "0x1E6223C", Offset = "0x1E6223C", VA = "0x1E6223C")]
			public HatItem()
			{
			}
		}

		[Token(Token = "0x2000F66")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BA50", Offset = "0x97BA50")]
		private sealed class <delayedStart>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002406")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002407")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002408")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MagicHat <>4__this;

			[Token(Token = "0x170003FA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60033DC")]
				[Address(RVA = "0x1E62A3C", Offset = "0x1E62A3C", VA = "0x1E62A3C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003FB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60033DE")]
				[Address(RVA = "0x1E62AAC", Offset = "0x1E62AAC", VA = "0x1E62AAC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60033D9")]
			[Address(RVA = "0x1E617F0", Offset = "0x1E617F0", VA = "0x1E617F0")]
			[DebuggerHidden]
			public <delayedStart>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x60033DA")]
			[Address(RVA = "0x1E62988", Offset = "0x1E62988", VA = "0x1E62988", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60033DB")]
			[Address(RVA = "0x1E6298C", Offset = "0x1E6298C", VA = "0x1E6298C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60033DD")]
			[Address(RVA = "0x1E62A44", Offset = "0x1E62A44", VA = "0x1E62A44", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000F67")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BA60", Offset = "0x97BA60")]
		private sealed class <>c__DisplayClass24_0
		{
			[Token(Token = "0x4002409")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int achievementIdentifierId;

			[Token(Token = "0x400240A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MagicHat <>4__this;

			[Token(Token = "0x400240B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool result;

			[Token(Token = "0x60033DF")]
			[Address(RVA = "0x1E62744", Offset = "0x1E62744", VA = "0x1E62744")]
			public <>c__DisplayClass24_0()
			{
			}

			[Token(Token = "0x60033E0")]
			[Address(RVA = "0x1E6274C", Offset = "0x1E6274C", VA = "0x1E6274C")]
			internal void <unlockAchievement>b__0(string data, string error)
			{
			}
		}

		[Token(Token = "0x2000F68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BA70", Offset = "0x97BA70")]
		private sealed class <unlockAchievement>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400240C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400240D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400240E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MagicHat <>4__this;

			[Token(Token = "0x400240F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass24_0 <>8__1;

			[Token(Token = "0x4002410")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <cookie>5__2;

			[Token(Token = "0x170003FC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60033E4")]
				[Address(RVA = "0x1E62CB8", Offset = "0x1E62CB8", VA = "0x1E62CB8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003FD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60033E6")]
				[Address(RVA = "0x1E62D28", Offset = "0x1E62D28", VA = "0x1E62D28", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60033E1")]
			[Address(RVA = "0x1E62374", Offset = "0x1E62374", VA = "0x1E62374")]
			[DebuggerHidden]
			public <unlockAchievement>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x60033E2")]
			[Address(RVA = "0x1E62AB4", Offset = "0x1E62AB4", VA = "0x1E62AB4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60033E3")]
			[Address(RVA = "0x1E62AB8", Offset = "0x1E62AB8", VA = "0x1E62AB8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60033E5")]
			[Address(RVA = "0x1E62CC0", Offset = "0x1E62CC0", VA = "0x1E62CC0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static MagicHat s_instance;

		[Token(Token = "0x4001784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x982400", Offset = "0x982400")]
		[SerializeField]
		private HatItem[] m_puzzleRefs;

		[Token(Token = "0x4001785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int m_maxJunkObjects;

		[Token(Token = "0x4001786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HatItem[] m_junkPrefabs;

		[Token(Token = "0x4001787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<HatItem> m_junkPrefabsForAchievement;

		[Token(Token = "0x4001788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x98245C", Offset = "0x98245C")]
		[SerializeField]
		private Animator m_hatAnimator;

		[Token(Token = "0x4001789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9824A8", Offset = "0x9824A8")]
		public string m_achievementIdentifier;

		[Token(Token = "0x400178A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<HatItem> m_puzzleRefsInternal;

		[Token(Token = "0x400178B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_junkObjectsActive;

		[Token(Token = "0x400178C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animTriggerPickUpHash;

		[Token(Token = "0x400178D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private OutOfBoundsVolume m_outOfBounds;

		[Token(Token = "0x400178E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GameObject m_currentItem;

		[Token(Token = "0x400178F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int m_grabCounter;

		[Token(Token = "0x4001790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int m_minGrabForPickup;

		[Token(Token = "0x170002EA")]
		public GameObject CurrentItem
		{
			[Token(Token = "0x6001D0C")]
			[Address(RVA = "0x1E61398", Offset = "0x1E61398", VA = "0x1E61398")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D0D")]
		[Address(RVA = "0x1E613A0", Offset = "0x1E613A0", VA = "0x1E613A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D0E")]
		[Address(RVA = "0x1E61574", Offset = "0x1E61574", VA = "0x1E61574")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D0F")]
		[Address(RVA = "0x1E6177C", Offset = "0x1E6177C", VA = "0x1E6177C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9889A0", Offset = "0x9889A0")]
		private IEnumerator delayedStart()
		{
			return null;
		}

		[Token(Token = "0x6001D10")]
		[Address(RVA = "0x1E6181C", Offset = "0x1E6181C", VA = "0x1E6181C")]
		public void DecrementJunkObjectsActive()
		{
		}

		[Token(Token = "0x6001D11")]
		[Address(RVA = "0x1E62008", Offset = "0x1E62008", VA = "0x1E62008")]
		public void AddPickUpToHat(GameObject obj)
		{
		}

		[Token(Token = "0x6001D12")]
		[Address(RVA = "0x1E62184", Offset = "0x1E62184", VA = "0x1E62184")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001D13")]
		[Address(RVA = "0x1E618EC", Offset = "0x1E618EC", VA = "0x1E618EC")]
		private void spawnNewItem()
		{
		}

		[Token(Token = "0x6001D14")]
		[Address(RVA = "0x1E62300", Offset = "0x1E62300", VA = "0x1E62300")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x988A04", Offset = "0x988A04")]
		private IEnumerator unlockAchievement()
		{
			return null;
		}

		[Token(Token = "0x6001D15")]
		[Address(RVA = "0x1E623A0", Offset = "0x1E623A0", VA = "0x1E623A0")]
		public void PlayPickUpAnim()
		{
		}

		[Token(Token = "0x6001D16")]
		[Address(RVA = "0x1E62244", Offset = "0x1E62244", VA = "0x1E62244")]
		private int getRandomizedIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6001D17")]
		[Address(RVA = "0x1E623D8", Offset = "0x1E623D8", VA = "0x1E623D8")]
		public void RemoveFromOutOfBoundsVolume(int gameObjectInstanceId)
		{
		}

		[Token(Token = "0x6001D18")]
		[Address(RVA = "0x1E62410", Offset = "0x1E62410", VA = "0x1E62410")]
		public void RemovePickUpFromHat(GameObject obj)
		{
		}

		[Token(Token = "0x6001D19")]
		[Address(RVA = "0x1E626B0", Offset = "0x1E626B0", VA = "0x1E626B0")]
		public MagicHat()
		{
		}
	}
	[Token(Token = "0x200051B")]
	public class MagicHatInteractible : InteractibleCustomRespawn
	{
		[Token(Token = "0x4001791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool m_firstInteract;

		[Token(Token = "0x4001792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private MagicHat m_magicHat;

		[Token(Token = "0x6001D1B")]
		[Address(RVA = "0x1E62D30", Offset = "0x1E62D30", VA = "0x1E62D30")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D1C")]
		[Address(RVA = "0x1E62DA0", Offset = "0x1E62DA0", VA = "0x1E62DA0", Slot = "10")]
		protected override void handleHandGripBegin(HandTracker hand)
		{
		}

		[Token(Token = "0x6001D1D")]
		[Address(RVA = "0x1E62E74", Offset = "0x1E62E74", VA = "0x1E62E74", Slot = "12")]
		public override bool OnRespawn(OutOfBoundsVolume.InteractibleTransform interactibleTransform)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D1E")]
		[Address(RVA = "0x1E62F38", Offset = "0x1E62F38", VA = "0x1E62F38")]
		public MagicHatInteractible()
		{
		}
	}
	[Token(Token = "0x200051C")]
	public class MagicWandTopTag : MonoBehaviour
	{
		[Token(Token = "0x6001D1F")]
		[Address(RVA = "0x1E6341C", Offset = "0x1E6341C", VA = "0x1E6341C")]
		public MagicWandTopTag()
		{
		}
	}
	[Token(Token = "0x200051D")]
	public class MaterialPropertyToggler : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000F69")]
		public enum ShaderValueType
		{
			[Token(Token = "0x4002412")]
			Color,
			[Token(Token = "0x4002413")]
			HDRColor
		}

		[Serializable]
		[Token(Token = "0x2000F6A")]
		public struct MaterialProperty
		{
			[Token(Token = "0x4002414")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ShaderValueType valueType;

			[Token(Token = "0x4002415")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string propertyName;

			[Token(Token = "0x4002416")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Color colorValue;

			[Token(Token = "0x4002417")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x983DDC", Offset = "0x983DDC")]
			public Color hdrColorValue;
		}

		[Token(Token = "0x4001793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Renderer m_targetRenderer;

		[Token(Token = "0x4001794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int m_materialIndex;

		[Token(Token = "0x4001795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MaterialProperty[] m_materialProperties;

		[Token(Token = "0x4001796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int m_startIndex;

		[Token(Token = "0x6001D20")]
		[Address(RVA = "0x1E639D4", Offset = "0x1E639D4", VA = "0x1E639D4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D21")]
		[Address(RVA = "0x1E63AF8", Offset = "0x1E63AF8", VA = "0x1E63AF8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001D22")]
		[Address(RVA = "0x1E639DC", Offset = "0x1E639DC", VA = "0x1E639DC")]
		public void SetMaterialPropertyIndex(int id)
		{
		}

		[Token(Token = "0x6001D23")]
		[Address(RVA = "0x1E63BC8", Offset = "0x1E63BC8", VA = "0x1E63BC8")]
		public MaterialPropertyToggler()
		{
		}
	}
	[Token(Token = "0x200051E")]
	public class ToggleMaterialPropertyNC : FlowControlNode
	{
		[Token(Token = "0x2000F6B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BA80", Offset = "0x97BA80")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4002418")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ValueInput<MaterialPropertyToggler> materialToggler;

			[Token(Token = "0x4002419")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ValueInput<int> id;

			[Token(Token = "0x400241A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FlowOutput output;

			[Token(Token = "0x60033E7")]
			[Address(RVA = "0xF43648", Offset = "0xF43648", VA = "0xF43648")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x60033E8")]
			[Address(RVA = "0xF43658", Offset = "0xF43658", VA = "0xF43658")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x6001D24")]
		[Address(RVA = "0xF434F4", Offset = "0xF434F4", VA = "0xF434F4", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001D25")]
		[Address(RVA = "0xF43650", Offset = "0xF43650", VA = "0xF43650")]
		public ToggleMaterialPropertyNC()
		{
		}
	}
	[Token(Token = "0x200051F")]
	public class MelonManager : MonoBehaviour
	{
		[Token(Token = "0x2000F6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BA90", Offset = "0x97BA90")]
		private sealed class <setAnimParamDelayed>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400241B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400241C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400241D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MelonManager <>4__this;

			[Token(Token = "0x400241E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Animator animator;

			[Token(Token = "0x170003FE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60033EC")]
				[Address(RVA = "0x1E644C4", Offset = "0x1E644C4", VA = "0x1E644C4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003FF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60033EE")]
				[Address(RVA = "0x1E64534", Offset = "0x1E64534", VA = "0x1E64534", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60033E9")]
			[Address(RVA = "0x1E64054", Offset = "0x1E64054", VA = "0x1E64054")]
			[DebuggerHidden]
			public <setAnimParamDelayed>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x60033EA")]
			[Address(RVA = "0x1E64420", Offset = "0x1E64420", VA = "0x1E64420", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60033EB")]
			[Address(RVA = "0x1E64424", Offset = "0x1E64424", VA = "0x1E64424", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60033ED")]
			[Address(RVA = "0x1E644CC", Offset = "0x1E644CC", VA = "0x1E644CC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static MelonManager s_instance;

		[Token(Token = "0x4001798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int m_maxMelonPickUps;

		[Token(Token = "0x4001799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Animator> m_animatorsWithoutMelon;

		[Token(Token = "0x400179A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Animator> m_animatorsWithMelon;

		[Token(Token = "0x400179B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int m_pickupsRefCount;

		[Token(Token = "0x400179C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int m_pickedId;

		[Token(Token = "0x400179D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OutOfBoundsVolume m_outOfBoundsVolume;

		[Token(Token = "0x400179E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private WaitForSeconds waitForMelonToSpawn;

		[Token(Token = "0x6001D26")]
		[Address(RVA = "0x1E63BD0", Offset = "0x1E63BD0", VA = "0x1E63BD0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D27")]
		[Address(RVA = "0x1E63C88", Offset = "0x1E63C88", VA = "0x1E63C88")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D28")]
		[Address(RVA = "0x1E63DE8", Offset = "0x1E63DE8", VA = "0x1E63DE8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D29")]
		[Address(RVA = "0x1E63E74", Offset = "0x1E63E74", VA = "0x1E63E74")]
		private void triggerSpawnMelonAnim()
		{
		}

		[Token(Token = "0x6001D2A")]
		[Address(RVA = "0x1E63FBC", Offset = "0x1E63FBC", VA = "0x1E63FBC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x988A68", Offset = "0x988A68")]
		private IEnumerator setAnimParamDelayed(Animator animator)
		{
			return null;
		}

		[Token(Token = "0x6001D2B")]
		[Address(RVA = "0x1E63FA0", Offset = "0x1E63FA0", VA = "0x1E63FA0")]
		private void incrementRefCount()
		{
		}

		[Token(Token = "0x6001D2C")]
		[Address(RVA = "0x1E64080", Offset = "0x1E64080", VA = "0x1E64080")]
		public void DecrementRefCount()
		{
		}

		[Token(Token = "0x6001D2D")]
		[Address(RVA = "0x1E64094", Offset = "0x1E64094", VA = "0x1E64094")]
		public void OnMelonPlucked(GameObject obj)
		{
		}

		[Token(Token = "0x6001D2E")]
		[Address(RVA = "0x1E64108", Offset = "0x1E64108", VA = "0x1E64108")]
		public void OnMelonPlucked(Animator animator)
		{
		}

		[Token(Token = "0x6001D2F")]
		[Address(RVA = "0x1E641E4", Offset = "0x1E641E4", VA = "0x1E641E4")]
		public void AddMelonToOutOfBoundsVolume(SmallMelon melon)
		{
		}

		[Token(Token = "0x6001D30")]
		[Address(RVA = "0x1E64370", Offset = "0x1E64370", VA = "0x1E64370")]
		public void RemoveMelonFromOutOfBoundsVolume(int gameObjectInstanceId)
		{
		}

		[Token(Token = "0x6001D31")]
		[Address(RVA = "0x1E643A8", Offset = "0x1E643A8", VA = "0x1E643A8")]
		public MelonManager()
		{
		}
	}
	[Token(Token = "0x2000520")]
	public class MelonSpawnerTag : MonoBehaviour
	{
		[Token(Token = "0x400179F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_melonPickUpPrefab;

		[Token(Token = "0x40017A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator m_animator;

		[Token(Token = "0x40017A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int m_pickedId;

		[Token(Token = "0x6001D33")]
		[Address(RVA = "0x1E6453C", Offset = "0x1E6453C", VA = "0x1E6453C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D34")]
		[Address(RVA = "0x1E645AC", Offset = "0x1E645AC", VA = "0x1E645AC")]
		private void SpawnMelon()
		{
		}

		[Token(Token = "0x6001D35")]
		[Address(RVA = "0x1E64738", Offset = "0x1E64738", VA = "0x1E64738")]
		public MelonSpawnerTag()
		{
		}
	}
	[Token(Token = "0x2000521")]
	public class MultiWorldAchievementCounter : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000F6D")]
		internal enum DataToSet
		{
			[Token(Token = "0x4002420")]
			BerriesPicked = 6,
			[Token(Token = "0x4002421")]
			DoorsOpened
		}

		[Token(Token = "0x40017A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SaveManager.DioramaWorlds m_currentWorld;

		[Token(Token = "0x40017A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		internal DataToSet m_dataToSetOnComplete;

		[Token(Token = "0x40017A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MultiWorldAchievementInterface[] m_targetsToCount;

		[Token(Token = "0x40017A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<MultiWorldAchievementInterface> m_targetsToCountInternal;

		[Token(Token = "0x6001D36")]
		[Address(RVA = "0x1E6544C", Offset = "0x1E6544C", VA = "0x1E6544C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D37")]
		[Address(RVA = "0x1E655F8", Offset = "0x1E655F8", VA = "0x1E655F8")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001D38")]
		[Address(RVA = "0x1E6567C", Offset = "0x1E6567C", VA = "0x1E6567C")]
		public void RemoveFromCounter(MultiWorldAchievementInterface targetToRemove)
		{
		}

		[Token(Token = "0x6001D39")]
		[Address(RVA = "0x1E65814", Offset = "0x1E65814", VA = "0x1E65814")]
		public MultiWorldAchievementCounter()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000522")]
	public abstract class MultiWorldAchievementInterface : MonoBehaviour
	{
		[Token(Token = "0x6001D3A")]
		public abstract void RemoveFromCounter();

		[Token(Token = "0x6001D3B")]
		public abstract void SetUpReference(MultiWorldAchievementCounter counter);

		[Token(Token = "0x6001D3C")]
		[Address(RVA = "0x1E65890", Offset = "0x1E65890", VA = "0x1E65890")]
		protected MultiWorldAchievementInterface()
		{
		}
	}
	[Token(Token = "0x2000523")]
	public class ActivateHandsNC : FlowControlNode
	{
		[Token(Token = "0x2000F6E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BAA0", Offset = "0x97BAA0")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4002422")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FlowOutput flowOut;

			[Token(Token = "0x60033EF")]
			[Address(RVA = "0xD980C4", Offset = "0xD980C4", VA = "0xD980C4")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x60033F0")]
			[Address(RVA = "0xD980D4", Offset = "0xD980D4", VA = "0xD980D4")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x6001D3D")]
		[Address(RVA = "0xD97FE0", Offset = "0xD97FE0", VA = "0xD97FE0", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001D3E")]
		[Address(RVA = "0xD980CC", Offset = "0xD980CC", VA = "0xD980CC")]
		public ActivateHandsNC()
		{
		}
	}
	[Token(Token = "0x2000524")]
	public class ApplyGlobalSmoothnessNC : LatentActionNode<float>
	{
		[Token(Token = "0x2000F6F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BAB0", Offset = "0x97BAB0")]
		private sealed class <Invoke>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002423")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002424")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002425")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ApplyGlobalSmoothnessNC <>4__this;

			[Token(Token = "0x4002426")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float timeToStaySmooth;

			[Token(Token = "0x4002427")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <smoothness>5__2;

			[Token(Token = "0x17000400")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60033F4")]
				[Address(RVA = "0xBB42F8", Offset = "0xBB42F8", VA = "0xBB42F8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000401")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60033F6")]
				[Address(RVA = "0xBB4368", Offset = "0xBB4368", VA = "0xBB4368", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60033F1")]
			[Address(RVA = "0xBB407C", Offset = "0xBB407C", VA = "0xBB407C")]
			[DebuggerHidden]
			public <Invoke>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x60033F2")]
			[Address(RVA = "0xBB4104", Offset = "0xBB4104", VA = "0xBB4104", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60033F3")]
			[Address(RVA = "0xBB4108", Offset = "0xBB4108", VA = "0xBB4108", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60033F5")]
			[Address(RVA = "0xBB4300", Offset = "0xBB4300", VA = "0xBB4300", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40017A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float maxSmoothness;

		[Token(Token = "0x40017A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float speed;

		[Token(Token = "0x6001D3F")]
		[Address(RVA = "0xBB3FE4", Offset = "0xBB3FE4", VA = "0xBB3FE4", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x988ACC", Offset = "0x988ACC")]
		public override IEnumerator Invoke(float timeToStaySmooth)
		{
			return null;
		}

		[Token(Token = "0x6001D40")]
		[Address(RVA = "0xBB40A8", Offset = "0xBB40A8", VA = "0xBB40A8")]
		public ApplyGlobalSmoothnessNC()
		{
		}
	}
	[Token(Token = "0x2000525")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x9779F8", Offset = "0x9779F8")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x9779F8", Offset = "0x9779F8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9779F8", Offset = "0x9779F8")]
	public class CancelInteractionGripNC : FlowControlNode
	{
		[Token(Token = "0x2000F70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BAC0", Offset = "0x97BAC0")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4002428")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CancelInteractionGripNC <>4__this;

			[Token(Token = "0x4002429")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FlowOutput output;

			[Token(Token = "0x60033F7")]
			[Address(RVA = "0xBBE894", Offset = "0xBBE894", VA = "0xBBE894")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x60033F8")]
			[Address(RVA = "0xBBE8A4", Offset = "0xBBE8A4", VA = "0xBBE8A4")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x40017A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public ValueInput<Interactible> interactible;

		[Token(Token = "0x6001D41")]
		[Address(RVA = "0xBBE778", Offset = "0xBBE778", VA = "0xBBE778", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001D42")]
		[Address(RVA = "0xBBE89C", Offset = "0xBBE89C", VA = "0xBBE89C")]
		public CancelInteractionGripNC()
		{
		}
	}
	[Token(Token = "0x2000526")]
	public class ChangeMaterialNC : CallableActionNode<Renderer>
	{
		[Token(Token = "0x40017A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int materialIndex;

		[Token(Token = "0x40017AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Material newMaterial;

		[Token(Token = "0x40017AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int m_parameterId;

		[Token(Token = "0x40017AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material[] m_targetMaterials;

		[Token(Token = "0x6001D43")]
		[Address(RVA = "0xBBECD8", Offset = "0xBBECD8", VA = "0xBBECD8", Slot = "12")]
		[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x988B30", Offset = "0x988B30")]
		public override void Invoke(Renderer renderer)
		{
		}

		[Token(Token = "0x6001D44")]
		[Address(RVA = "0xBBEDB0", Offset = "0xBBEDB0", VA = "0xBBEDB0")]
		public ChangeMaterialNC()
		{
		}
	}
	[Token(Token = "0x2000527")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x977A80", Offset = "0x977A80")]
	public class CodeLockEventReceiverNC : EventNode<CodeLock>
	{
		[Token(Token = "0x40017AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private FlowOutput correctCodePort;

		[Token(Token = "0x6001D45")]
		[Address(RVA = "0xBC2004", Offset = "0xBC2004", VA = "0xBC2004", Slot = "26")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6001D46")]
		[Address(RVA = "0xBC20E8", Offset = "0xBC20E8", VA = "0xBC20E8", Slot = "27")]
		public override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6001D47")]
		[Address(RVA = "0xBC217C", Offset = "0xBC217C", VA = "0xBC217C", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001D48")]
		[Address(RVA = "0xBC21E4", Offset = "0xBC21E4", VA = "0xBC21E4")]
		private void OnLockOpenedDelegate()
		{
		}

		[Token(Token = "0x6001D49")]
		[Address(RVA = "0xBC2244", Offset = "0xBC2244", VA = "0xBC2244")]
		public CodeLockEventReceiverNC()
		{
		}
	}
	[Token(Token = "0x2000528")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x977AB8", Offset = "0x977AB8")]
	public class CodelockProviderNC : CallableActionNode<int>
	{
		[Token(Token = "0x40017AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public CodeLock codeLock;

		[Token(Token = "0x40017AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int position;

		[Token(Token = "0x6001D4A")]
		[Address(RVA = "0xBC2334", Offset = "0xBC2334", VA = "0xBC2334", Slot = "12")]
		public override void Invoke(int digit)
		{
		}

		[Token(Token = "0x6001D4B")]
		[Address(RVA = "0xBC2378", Offset = "0xBC2378", VA = "0xBC2378")]
		public CodelockProviderNC()
		{
		}
	}
	[Token(Token = "0x2000529")]
	public class CreateHubRoomDataNC : FlowControlNode
	{
		[Token(Token = "0x2000F71")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BAD0", Offset = "0x97BAD0")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x400242A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FlowOutput flowOut;

			[Token(Token = "0x60033F9")]
			[Address(RVA = "0xBC36A8", Offset = "0xBC36A8", VA = "0xBC36A8")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x60033FA")]
			[Address(RVA = "0xBC36B8", Offset = "0xBC36B8", VA = "0xBC36B8")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x40017B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private SetHubRoomDataNC.DataToSetHubRoom[] m_hubRoomData;

		[Token(Token = "0x40017B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private ValueInput<HubRoomData.HubRoomKeys> m_key;

		[Token(Token = "0x40017B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private ValueInput<DioramaData.ValueType> m_valueType;

		[Token(Token = "0x40017B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private ValueInput<int> m_intVal;

		[Token(Token = "0x40017B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private ValueInput<float> m_floatVal;

		[Token(Token = "0x40017B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private ValueInput<string> m_stringVal;

		[Token(Token = "0x40017B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private ValueInput<long> m_longVal;

		[Token(Token = "0x6001D4C")]
		[Address(RVA = "0xBC30F0", Offset = "0xBC30F0", VA = "0xBC30F0", Slot = "26")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6001D4D")]
		[Address(RVA = "0xBC31C4", Offset = "0xBC31C4", VA = "0xBC31C4")]
		private SetHubRoomDataNC.DataToSetHubRoom[] GetData()
		{
			return null;
		}

		[Token(Token = "0x6001D4E")]
		[Address(RVA = "0xBC30F4", Offset = "0xBC30F4", VA = "0xBC30F4")]
		private void createHubRoomData()
		{
		}

		[Token(Token = "0x6001D4F")]
		[Address(RVA = "0xBC3478", Offset = "0xBC3478", VA = "0xBC3478", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001D50")]
		[Address(RVA = "0xBC36B0", Offset = "0xBC36B0", VA = "0xBC36B0")]
		public CreateHubRoomDataNC()
		{
		}
	}
	[Token(Token = "0x200052A")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x977AF0", Offset = "0x977AF0")]
	public class DealInteractionNC : FlowControlNode
	{
		[Token(Token = "0x2000F72")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BAE0", Offset = "0x97BAE0")]
		private sealed class <dealInteractionOverTime>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400242B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400242C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400242D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DealInteractionNC <>4__this;

			[Token(Token = "0x400242E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public InteractionReceiver interaction;

			[Token(Token = "0x17000402")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60033FE")]
				[Address(RVA = "0xBC3F4C", Offset = "0xBC3F4C", VA = "0xBC3F4C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000403")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003400")]
				[Address(RVA = "0xBC3FBC", Offset = "0xBC3FBC", VA = "0xBC3FBC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60033FB")]
			[Address(RVA = "0xBC3DFC", Offset = "0xBC3DFC", VA = "0xBC3DFC")]
			[DebuggerHidden]
			public <dealInteractionOverTime>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x60033FC")]
			[Address(RVA = "0xBC3E44", Offset = "0xBC3E44", VA = "0xBC3E44", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60033FD")]
			[Address(RVA = "0xBC3E48", Offset = "0xBC3E48", VA = "0xBC3E48", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60033FF")]
			[Address(RVA = "0xBC3F54", Offset = "0xBC3F54", VA = "0xBC3F54", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40017B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Transform aimPoint;

		[Token(Token = "0x40017B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int interactionTag;

		[Token(Token = "0x40017B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float interactionAmount;

		[Token(Token = "0x40017BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public bool dealOverTime;

		[Token(Token = "0x40017BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public float dealTime;

		[Token(Token = "0x6001D51")]
		[Address(RVA = "0xBC3B0C", Offset = "0xBC3B0C", VA = "0xBC3B0C", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001D52")]
		[Address(RVA = "0xBC3B9C", Offset = "0xBC3B9C", VA = "0xBC3B9C")]
		private void dealInteraction()
		{
		}

		[Token(Token = "0x6001D53")]
		[Address(RVA = "0xBC3D64", Offset = "0xBC3D64", VA = "0xBC3D64")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x988B68", Offset = "0x988B68")]
		private IEnumerator dealInteractionOverTime(InteractionReceiver interaction)
		{
			return null;
		}

		[Token(Token = "0x6001D54")]
		[Address(RVA = "0xBC3E28", Offset = "0xBC3E28", VA = "0xBC3E28")]
		public DealInteractionNC()
		{
		}

		[Token(Token = "0x6001D55")]
		[Address(RVA = "0xBC3E40", Offset = "0xBC3E40", VA = "0xBC3E40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x988BCC", Offset = "0x988BCC")]
		private void <RegisterPorts>b__5_0(Flow f)
		{
		}
	}
	[Token(Token = "0x200052B")]
	public class DelayedDioramaInteractionNC : EventNode<DelayedDioramaInteraction>
	{
		[Token(Token = "0x40017BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private FlowOutput m_flowOutput;

		[Token(Token = "0x6001D56")]
		[Address(RVA = "0xBC72B4", Offset = "0xBC72B4", VA = "0xBC72B4", Slot = "26")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6001D57")]
		[Address(RVA = "0xBC7398", Offset = "0xBC7398", VA = "0xBC7398", Slot = "27")]
		public override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6001D58")]
		[Address(RVA = "0xBC742C", Offset = "0xBC742C", VA = "0xBC742C", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001D59")]
		[Address(RVA = "0xBC7494", Offset = "0xBC7494", VA = "0xBC7494")]
		private void OnDelayedInteraction()
		{
		}

		[Token(Token = "0x6001D5A")]
		[Address(RVA = "0xBC74F4", Offset = "0xBC74F4", VA = "0xBC74F4")]
		public DelayedDioramaInteractionNC()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200052C")]
	public class FabricNodeComponentData
	{
		[Token(Token = "0x6001D5B")]
		[Address(RVA = "0xBD14F8", Offset = "0xBD14F8", VA = "0xBD14F8")]
		public FabricNodeComponentData()
		{
		}
	}
	[Token(Token = "0x200052D")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x977B28", Offset = "0x977B28")]
	public class FabricMuteGroupComponentNC : CallableActionNode<FabricNodeComponentData>
	{
		[Token(Token = "0x6001D5C")]
		[Address(RVA = "0xBD14A4", Offset = "0xBD14A4", VA = "0xBD14A4", Slot = "12")]
		public override void Invoke(FabricNodeComponentData data)
		{
		}

		[Token(Token = "0x6001D5D")]
		[Address(RVA = "0xBD14A8", Offset = "0xBD14A8", VA = "0xBD14A8")]
		public FabricMuteGroupComponentNC()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200052E")]
	public class FabricNodeWaterData
	{
		[Token(Token = "0x40017BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool m_inWater;

		[Token(Token = "0x40017BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x982520", Offset = "0x982520")]
		public GameObject m_bgAmbienceEmitter;

		[Token(Token = "0x6001D5E")]
		[Address(RVA = "0xBD1528", Offset = "0xBD1528", VA = "0xBD1528")]
		public FabricNodeWaterData()
		{
		}
	}
	[Token(Token = "0x200052F")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x977B60", Offset = "0x977B60")]
	public class FabricWaterLevelChangeNC : CallableActionNode<FabricNodeWaterData>
	{
		[Token(Token = "0x6001D5F")]
		[Address(RVA = "0xBD1530", Offset = "0xBD1530", VA = "0xBD1530", Slot = "12")]
		public override void Invoke(FabricNodeWaterData data)
		{
		}

		[Token(Token = "0x6001D60")]
		[Address(RVA = "0xBD1658", Offset = "0xBD1658", VA = "0xBD1658")]
		public FabricWaterLevelChangeNC()
		{
		}
	}
	[Token(Token = "0x2000530")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x977B98", Offset = "0x977B98")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x977B98", Offset = "0x977B98")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x977B98", Offset = "0x977B98")]
	public class HasPickedUpKeyNC : FlowControlNode
	{
		[Token(Token = "0x2000F73")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BAF0", Offset = "0x97BAF0")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x400242F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FlowOutput output;

			[Token(Token = "0x6003401")]
			[Address(RVA = "0x1E54954", Offset = "0x1E54954", VA = "0x1E54954")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6003402")]
			[Address(RVA = "0x1E54964", Offset = "0x1E54964", VA = "0x1E54964")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x40017BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private MorayKey m_key;

		[Token(Token = "0x6001D61")]
		[Address(RVA = "0x1E547AC", Offset = "0x1E547AC", VA = "0x1E547AC")]
		private bool HasPickedUpKey()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D62")]
		[Address(RVA = "0x1E547E0", Offset = "0x1E547E0", VA = "0x1E547E0", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001D63")]
		[Address(RVA = "0x1E5495C", Offset = "0x1E5495C", VA = "0x1E5495C")]
		public HasPickedUpKeyNC()
		{
		}
	}
	[Token(Token = "0x2000531")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x977C20", Offset = "0x977C20")]
	public class PearlTriggerEventNC : EventNode<PearlTrigger>
	{
		[Token(Token = "0x40017C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private FlowOutput outPort;

		[Token(Token = "0x40017C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private PearlBehaviour pickUp;

		[Token(Token = "0x6001D64")]
		[Address(RVA = "0x1E2F55C", Offset = "0x1E2F55C", VA = "0x1E2F55C", Slot = "26")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6001D65")]
		[Address(RVA = "0x1E2F640", Offset = "0x1E2F640", VA = "0x1E2F640", Slot = "27")]
		public override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6001D66")]
		[Address(RVA = "0x1E2F6D4", Offset = "0x1E2F6D4", VA = "0x1E2F6D4", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001D67")]
		[Address(RVA = "0x1E2F79C", Offset = "0x1E2F79C", VA = "0x1E2F79C")]
		private void OnDealInteractionDelegate(PearlBehaviour pickUp)
		{
		}

		[Token(Token = "0x6001D68")]
		[Address(RVA = "0x1E2F800", Offset = "0x1E2F800", VA = "0x1E2F800")]
		public PearlTriggerEventNC()
		{
		}

		[Token(Token = "0x6001D69")]
		[Address(RVA = "0x1E2F850", Offset = "0x1E2F850", VA = "0x1E2F850")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x988BDC", Offset = "0x988BDC")]
		private PearlBehaviour <RegisterPorts>b__4_0()
		{
			return null;
		}
	}
	[Token(Token = "0x2000532")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x977C58", Offset = "0x977C58")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x977C58", Offset = "0x977C58")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x977C58", Offset = "0x977C58")]
	public class ShouldBeAffectedByWaterNC : FlowControlNode
	{
		[Token(Token = "0x2000F74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BB00", Offset = "0x97BB00")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x4002430")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ShouldBeAffectedByWaterNC <>4__this;

			[Token(Token = "0x4002431")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FlowOutput output;

			[Token(Token = "0x6003403")]
			[Address(RVA = "0x1E43B80", Offset = "0x1E43B80", VA = "0x1E43B80")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x6003404")]
			[Address(RVA = "0x1E43B90", Offset = "0x1E43B90", VA = "0x1E43B90")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x40017C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public ValueInput<GameObject> m_gameObject;

		[Token(Token = "0x40017C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool m_shouldBeAffectedByWater;

		[Token(Token = "0x40017C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Animator m_affectedObjectsAnimatorReference;

		[Token(Token = "0x6001D6A")]
		[Address(RVA = "0x1E4399C", Offset = "0x1E4399C", VA = "0x1E4399C")]
		private bool ShouldBeAffactedByWater()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D6B")]
		[Address(RVA = "0x1E439A4", Offset = "0x1E439A4", VA = "0x1E439A4")]
		private Animator GetAnimator()
		{
			return null;
		}

		[Token(Token = "0x6001D6C")]
		[Address(RVA = "0x1E439AC", Offset = "0x1E439AC", VA = "0x1E439AC", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001D6D")]
		[Address(RVA = "0x1E43B88", Offset = "0x1E43B88", VA = "0x1E43B88")]
		public ShouldBeAffectedByWaterNC()
		{
		}
	}
	[Token(Token = "0x2000533")]
	public class IsSmallMelonNC : FlowControlNode
	{
		[Token(Token = "0x2000F75")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BB10", Offset = "0x97BB10")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4002432")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ValueInput<Interactible> objectToCompare;

			[Token(Token = "0x4002433")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FlowOutput nullOut;

			[Token(Token = "0x4002434")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FlowOutput trueOut;

			[Token(Token = "0x4002435")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public FlowOutput falseOut;

			[Token(Token = "0x6003405")]
			[Address(RVA = "0x1E5BFA0", Offset = "0x1E5BFA0", VA = "0x1E5BFA0")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6003406")]
			[Address(RVA = "0x1E5BFB0", Offset = "0x1E5BFB0", VA = "0x1E5BFB0")]
			internal SmallMelon <RegisterPorts>b__0()
			{
				return null;
			}

			[Token(Token = "0x6003407")]
			[Address(RVA = "0x1E5C0E8", Offset = "0x1E5C0E8", VA = "0x1E5C0E8")]
			internal void <RegisterPorts>b__1(Flow f)
			{
			}
		}

		[Token(Token = "0x6001D6E")]
		[Address(RVA = "0x1E5BDC8", Offset = "0x1E5BDC8", VA = "0x1E5BDC8", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001D6F")]
		[Address(RVA = "0x1E5BFA8", Offset = "0x1E5BFA8", VA = "0x1E5BFA8")]
		public IsSmallMelonNC()
		{
		}
	}
	[Token(Token = "0x2000534")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x977CE0", Offset = "0x977CE0")]
	public class DioramaInteractionNC : LatentActionNode<GameObject>
	{
		[Token(Token = "0x2000F76")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BB20", Offset = "0x97BB20")]
		private sealed class <Invoke>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002436")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002437")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002438")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DioramaInteractionNC <>4__this;

			[Token(Token = "0x4002439")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameObject other;

			[Token(Token = "0x17000404")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600340B")]
				[Address(RVA = "0xBCC3DC", Offset = "0xBCC3DC", VA = "0xBCC3DC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000405")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600340D")]
				[Address(RVA = "0xBCC44C", Offset = "0xBCC44C", VA = "0xBCC44C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003408")]
			[Address(RVA = "0xBCBF24", Offset = "0xBCBF24", VA = "0xBCBF24")]
			[DebuggerHidden]
			public <Invoke>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6003409")]
			[Address(RVA = "0xBCBFB4", Offset = "0xBCBFB4", VA = "0xBCBFB4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600340A")]
			[Address(RVA = "0xBCBFB8", Offset = "0xBCBFB8", VA = "0xBCBFB8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600340C")]
			[Address(RVA = "0xBCC3E4", Offset = "0xBCC3E4", VA = "0xBCC3E4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40017C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x982558", Offset = "0x982558")]
		public Animator animator;

		[Token(Token = "0x40017C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool resumeInterruptedAnimation;

		[Token(Token = "0x40017C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float animationLength;

		[Token(Token = "0x40017C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x982590", Offset = "0x982590")]
		public bool faceTarget;

		[Token(Token = "0x40017C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Transform target;

		[Token(Token = "0x40017CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9825C8", Offset = "0x9825C8")]
		public bool increaseCounter;

		[Token(Token = "0x40017CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public int resetCounterAtCount;

		[Token(Token = "0x40017CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool m_isPlaying;

		[Token(Token = "0x40017CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float m_startTime;

		[Token(Token = "0x40017CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int m_prevNameHash;

		[Token(Token = "0x40017CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float m_prevNormalizedTime;

		[Token(Token = "0x40017D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private int m_interactionCount;

		[Token(Token = "0x40017D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private ValueOutput<int> m_interactionCountValue;

		[Token(Token = "0x170002EB")]
		public override bool allowRoutineQueueing
		{
			[Token(Token = "0x6001D70")]
			[Address(RVA = "0xBCBDB4", Offset = "0xBCBDB4", VA = "0xBCBDB4", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001D71")]
		[Address(RVA = "0xBCBDBC", Offset = "0xBCBDBC", VA = "0xBCBDBC", Slot = "6")]
		protected override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6001D72")]
		[Address(RVA = "0xBCBE8C", Offset = "0xBCBE8C", VA = "0xBCBE8C", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x988BEC", Offset = "0x988BEC")]
		public override IEnumerator Invoke(GameObject other)
		{
			return null;
		}

		[Token(Token = "0x6001D73")]
		[Address(RVA = "0xBCBF50", Offset = "0xBCBF50", VA = "0xBCBF50")]
		public DioramaInteractionNC()
		{
		}

		[Token(Token = "0x6001D74")]
		[Address(RVA = "0xBCBFAC", Offset = "0xBCBFAC", VA = "0xBCBFAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x988C50", Offset = "0x988C50")]
		private int <OnRegisterPorts>b__15_0()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000535")]
	public class EnableAnimatorNC : CallableActionNode<bool>
	{
		[Token(Token = "0x40017D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Animator animator;

		[Token(Token = "0x6001D75")]
		[Address(RVA = "0xBD0AC0", Offset = "0xBD0AC0", VA = "0xBD0AC0", Slot = "12")]
		[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x988C60", Offset = "0x988C60")]
		public override void Invoke(bool enableAnimator)
		{
		}

		[Token(Token = "0x6001D76")]
		[Address(RVA = "0xBD0AF8", Offset = "0xBD0AF8", VA = "0xBD0AF8")]
		public EnableAnimatorNC()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000536")]
	public class EnableGameObjectData
	{
		[Token(Token = "0x40017D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject[] m_objectsToEnable;

		[Token(Token = "0x40017D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] m_objectsToDisable;

		[Token(Token = "0x6001D77")]
		[Address(RVA = "0xBD0B48", Offset = "0xBD0B48", VA = "0xBD0B48")]
		public EnableGameObjectData()
		{
		}
	}
	[Token(Token = "0x2000537")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x977D18", Offset = "0x977D18")]
	public class EnableGameObjectNC : CallableActionNode<EnableGameObjectData>
	{
		[Token(Token = "0x6001D78")]
		[Address(RVA = "0xBD0CCC", Offset = "0xBD0CCC", VA = "0xBD0CCC", Slot = "12")]
		public override void Invoke(EnableGameObjectData data)
		{
		}

		[Token(Token = "0x6001D79")]
		[Address(RVA = "0xBD0DF4", Offset = "0xBD0DF4", VA = "0xBD0DF4")]
		public EnableGameObjectNC()
		{
		}
	}
	[Token(Token = "0x2000538")]
	public class EnablePickupNC : CallableActionNode<bool>
	{
		[Token(Token = "0x40017D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Interactible interactible;

		[Token(Token = "0x6001D7A")]
		[Address(RVA = "0xBD0E84", Offset = "0xBD0E84", VA = "0xBD0E84", Slot = "12")]
		[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x988C98", Offset = "0x988C98")]
		public override void Invoke(bool enableInteractible)
		{
		}

		[Token(Token = "0x6001D7B")]
		[Address(RVA = "0xBD0EB8", Offset = "0xBD0EB8", VA = "0xBD0EB8")]
		public EnablePickupNC()
		{
		}
	}
	[Token(Token = "0x2000539")]
	public class FadeInNC : FlowControlNode
	{
		[Token(Token = "0x2000F77")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BB30", Offset = "0x97BB30")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x400243A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ValueInput<float> fadeInTime;

			[Token(Token = "0x400243B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FlowOutput flowOut;

			[Token(Token = "0x600340E")]
			[Address(RVA = "0xBD1820", Offset = "0xBD1820", VA = "0xBD1820")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x600340F")]
			[Address(RVA = "0xBD1830", Offset = "0xBD1830", VA = "0xBD1830")]
			internal float <RegisterPorts>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x6003410")]
			[Address(RVA = "0xBD1890", Offset = "0xBD1890", VA = "0xBD1890")]
			internal void <RegisterPorts>b__1(Flow f)
			{
			}
		}

		[Token(Token = "0x6001D7C")]
		[Address(RVA = "0xBD16A8", Offset = "0xBD16A8", VA = "0xBD16A8", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001D7D")]
		[Address(RVA = "0xBD1828", Offset = "0xBD1828", VA = "0xBD1828")]
		public FadeInNC()
		{
		}
	}
	[Token(Token = "0x200053A")]
	public class FadeOutNC : FlowControlNode
	{
		[Token(Token = "0x2000F78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BB40", Offset = "0x97BB40")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x400243C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ValueInput<float> fadeOutTime;

			[Token(Token = "0x400243D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FlowOutput flowOut;

			[Token(Token = "0x6003411")]
			[Address(RVA = "0xBD1B54", Offset = "0xBD1B54", VA = "0xBD1B54")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6003412")]
			[Address(RVA = "0xBD1B64", Offset = "0xBD1B64", VA = "0xBD1B64")]
			internal float <RegisterPorts>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x6003413")]
			[Address(RVA = "0xBD1BC4", Offset = "0xBD1BC4", VA = "0xBD1BC4")]
			internal void <RegisterPorts>b__1(Flow f)
			{
			}
		}

		[Token(Token = "0x6001D7E")]
		[Address(RVA = "0xBD19DC", Offset = "0xBD19DC", VA = "0xBD19DC", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001D7F")]
		[Address(RVA = "0xBD1B5C", Offset = "0xBD1B5C", VA = "0xBD1B5C")]
		public FadeOutNC()
		{
		}
	}
	[Token(Token = "0x200053B")]
	public class GetCompletionPercentNC : FlowControlNode
	{
		[Token(Token = "0x2000F79")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BB50", Offset = "0x97BB50")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x400243E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GetCompletionPercentNC <>4__this;

			[Token(Token = "0x400243F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ValueInput<bool> cachePercent;

			[Token(Token = "0x4002440")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ValueInput<int> saveSlot;

			[Token(Token = "0x4002441")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public FlowOutput flowOut;

			[Token(Token = "0x6003414")]
			[Address(RVA = "0x1E4A1B8", Offset = "0x1E4A1B8", VA = "0x1E4A1B8")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6003415")]
			[Address(RVA = "0x1E4A308", Offset = "0x1E4A308", VA = "0x1E4A308")]
			internal int <RegisterPorts>b__0()
			{
				return default(int);
			}

			[Token(Token = "0x6003416")]
			[Address(RVA = "0x1E4A7C4", Offset = "0x1E4A7C4", VA = "0x1E4A7C4")]
			internal void <RegisterPorts>b__1(Flow f)
			{
			}
		}

		[Token(Token = "0x40017D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float m_percent01;

		[Token(Token = "0x6001D80")]
		[Address(RVA = "0x1E49FF8", Offset = "0x1E49FF8", VA = "0x1E49FF8", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001D81")]
		[Address(RVA = "0x1E4A1C0", Offset = "0x1E4A1C0", VA = "0x1E4A1C0")]
		private void addDataForWorld(int dioramaKeysLength, ref int numMaxCollectibles, ref int numCollectiblesFound, DioramaWorld dioramaWorld, int coinKeysLength)
		{
		}

		[Token(Token = "0x6001D82")]
		[Address(RVA = "0x1E4A264", Offset = "0x1E4A264", VA = "0x1E4A264")]
		private void addCoinDataForWorld(DioramaWorld world, ref int maxCollectibles, ref int currentCollectibles, int coinKeysLength)
		{
		}

		[Token(Token = "0x6001D83")]
		[Address(RVA = "0x1E4A2F8", Offset = "0x1E4A2F8", VA = "0x1E4A2F8")]
		public GetCompletionPercentNC()
		{
		}
	}
	[Token(Token = "0x200053C")]
	public class GetCurrentMusicNC : FlowControlNode
	{
		[Token(Token = "0x2000F7A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BB60", Offset = "0x97BB60")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4002442")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ValueInput<string> musicToTest;

			[Token(Token = "0x4002443")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FlowOutput flowOut;

			[Token(Token = "0x6003417")]
			[Address(RVA = "0x1E4A9A4", Offset = "0x1E4A9A4", VA = "0x1E4A9A4")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6003418")]
			[Address(RVA = "0x1E4A9B4", Offset = "0x1E4A9B4", VA = "0x1E4A9B4")]
			internal bool <RegisterPorts>b__0()
			{
				return default(bool);
			}

			[Token(Token = "0x6003419")]
			[Address(RVA = "0x1E4AAB8", Offset = "0x1E4AAB8", VA = "0x1E4AAB8")]
			internal void <RegisterPorts>b__1(Flow f)
			{
			}
		}

		[Token(Token = "0x6001D84")]
		[Address(RVA = "0x1E4A82C", Offset = "0x1E4A82C", VA = "0x1E4A82C", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001D85")]
		[Address(RVA = "0x1E4A9AC", Offset = "0x1E4A9AC", VA = "0x1E4A9AC")]
		public GetCurrentMusicNC()
		{
		}
	}
	[Token(Token = "0x200053D")]
	public class GetCoinDataNC : FlowControlNode
	{
		[Token(Token = "0x2000F7B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BB70", Offset = "0x97BB70")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4002444")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ValueInput<SaveManager.DioramaWorlds> world;

			[Token(Token = "0x4002445")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ValueInput<DioramaWorld.CoinKey> coinKey;

			[Token(Token = "0x4002446")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FlowOutput output;

			[Token(Token = "0x600341A")]
			[Address(RVA = "0x1E49D64", Offset = "0x1E49D64", VA = "0x1E49D64")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x600341B")]
			[Address(RVA = "0x1E49D74", Offset = "0x1E49D74", VA = "0x1E49D74")]
			internal int <RegisterPorts>b__0()
			{
				return default(int);
			}

			[Token(Token = "0x600341C")]
			[Address(RVA = "0x1E49F90", Offset = "0x1E49F90", VA = "0x1E49F90")]
			internal void <RegisterPorts>b__1(Flow f)
			{
			}
		}

		[Token(Token = "0x6001D86")]
		[Address(RVA = "0x1E49BB4", Offset = "0x1E49BB4", VA = "0x1E49BB4", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001D87")]
		[Address(RVA = "0x1E49D6C", Offset = "0x1E49D6C", VA = "0x1E49D6C")]
		public GetCoinDataNC()
		{
		}
	}
	[Token(Token = "0x200053E")]
	public static class GetTotalNumCoinsFound
	{
		[Token(Token = "0x40017D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SaveManager m_saveManager;

		[Token(Token = "0x6001D88")]
		[Address(RVA = "0x1E4C574", Offset = "0x1E4C574", VA = "0x1E4C574")]
		public static void GetDioramaOneCoins(out int totalCoins, out int coinsFound)
		{
		}

		[Token(Token = "0x6001D89")]
		[Address(RVA = "0x1E4C8E8", Offset = "0x1E4C8E8", VA = "0x1E4C8E8")]
		public static void GetDioramaTwoCoins(out int totalCoins, out int coinsFound)
		{
		}

		[Token(Token = "0x6001D8A")]
		[Address(RVA = "0x1E4C968", Offset = "0x1E4C968", VA = "0x1E4C968")]
		public static void GetDioramaThreeCoins(out int totalCoins, out int coinsFound)
		{
		}

		[Token(Token = "0x6001D8B")]
		[Address(RVA = "0x1E4C9E8", Offset = "0x1E4C9E8", VA = "0x1E4C9E8")]
		public static void GetDioramaFourCoins(out int totalCoins, out int coinsFound)
		{
		}

		[Token(Token = "0x6001D8C")]
		[Address(RVA = "0x1E4CA68", Offset = "0x1E4CA68", VA = "0x1E4CA68")]
		public static void GetDioramaFiveCoins(out int totalCoins, out int coinsFound)
		{
		}

		[Token(Token = "0x6001D8D")]
		[Address(RVA = "0x1E4B3F4", Offset = "0x1E4B3F4", VA = "0x1E4B3F4")]
		public static void GetCoinsFromAllDioramas(out int totalCoins, out int coinsFound)
		{
		}

		[Token(Token = "0x6001D8E")]
		[Address(RVA = "0x1E4C5F4", Offset = "0x1E4C5F4", VA = "0x1E4C5F4")]
		private static void addCoinDataFromWorld(ref int totalCoins, ref int coinsFound, SaveManager.DioramaWorlds targetWorld)
		{
		}
	}
	[Token(Token = "0x200053F")]
	public class GetTotalNumCoinsFoundNC : FlowControlNode
	{
		[Token(Token = "0x2000F7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BB80", Offset = "0x97BB80")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4002447")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GetTotalNumCoinsFoundNC <>4__this;

			[Token(Token = "0x4002448")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ValueInput<bool> includeWorld1;

			[Token(Token = "0x4002449")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ValueInput<bool> includeWorld2;

			[Token(Token = "0x400244A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ValueInput<bool> includeWorld3;

			[Token(Token = "0x400244B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ValueInput<bool> includeWorld4;

			[Token(Token = "0x400244C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public ValueInput<bool> includeWorld5;

			[Token(Token = "0x400244D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public FlowOutput output;

			[Token(Token = "0x600341D")]
			[Address(RVA = "0x1E4CD88", Offset = "0x1E4CD88", VA = "0x1E4CD88")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x600341E")]
			[Address(RVA = "0x1E4CD98", Offset = "0x1E4CD98", VA = "0x1E4CD98")]
			internal int <RegisterPorts>b__0()
			{
				return default(int);
			}

			[Token(Token = "0x600341F")]
			[Address(RVA = "0x1E4CDC4", Offset = "0x1E4CDC4", VA = "0x1E4CDC4")]
			internal int <RegisterPorts>b__1()
			{
				return default(int);
			}

			[Token(Token = "0x6003420")]
			[Address(RVA = "0x1E4CDF0", Offset = "0x1E4CDF0", VA = "0x1E4CDF0")]
			internal void <RegisterPorts>b__2(Flow f)
			{
			}
		}

		[Token(Token = "0x40017D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int m_coinsFound;

		[Token(Token = "0x40017D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private int m_totalCoins;

		[Token(Token = "0x6001D90")]
		[Address(RVA = "0x1E4CAEC", Offset = "0x1E4CAEC", VA = "0x1E4CAEC", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001D91")]
		[Address(RVA = "0x1E4CD90", Offset = "0x1E4CD90", VA = "0x1E4CD90")]
		public GetTotalNumCoinsFoundNC()
		{
		}
	}
	[Token(Token = "0x2000540")]
	public abstract class GetDioramaData<T> : FlowControlNode
	{
		[Token(Token = "0x2000F7D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BB90", Offset = "0x97BB90")]
		private sealed class <>c__DisplayClass12_0
		{
			[Token(Token = "0x400244E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GetDioramaData<T> <>4__this;

			[Token(Token = "0x400244F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SaveManager.DioramaWorlds dioramaWorld;

			[Token(Token = "0x4002450")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput output;

			[Token(Token = "0x6003421")]
			public <>c__DisplayClass12_0()
			{
			}

			[Token(Token = "0x6003422")]
			internal void <AddCommonInOutputs>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x40017DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private DioramaData m_data;

		[Token(Token = "0x40017DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected int m_intOut;

		[Token(Token = "0x40017DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected float m_floatOut;

		[Token(Token = "0x40017DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected string m_stringOut;

		[Token(Token = "0x40017DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected long m_longOut;

		[Token(Token = "0x40017DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected ValueInput<T> m_dataToGet;

		[Token(Token = "0x40017E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int m_internalDataToGet;

		[Token(Token = "0x6001D92")]
		private int GetInt()
		{
			return default(int);
		}

		[Token(Token = "0x6001D93")]
		private float GetFloat()
		{
			return default(float);
		}

		[Token(Token = "0x6001D94")]
		private string GetString()
		{
			return null;
		}

		[Token(Token = "0x6001D95")]
		private long GetLong()
		{
			return default(long);
		}

		[Token(Token = "0x6001D96")]
		protected abstract int GetInheritedKeyValue();

		[Token(Token = "0x6001D97")]
		protected void AddCommonInOutputs(SaveManager.DioramaWorlds dioramaWorld)
		{
		}

		[Token(Token = "0x6001D98")]
		private int GetCurrentNumAnimalsFound()
		{
			return default(int);
		}

		[Token(Token = "0x6001D99")]
		private void ResolveValuesFromKeys()
		{
		}

		[Token(Token = "0x6001D9A")]
		protected GetDioramaData()
		{
		}
	}
	[Token(Token = "0x2000541")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x977D50", Offset = "0x977D50")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x977D50", Offset = "0x977D50")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x977D50", Offset = "0x977D50")]
	public class GetChristmasDataNC : GetDioramaData<ChristmasData.ChristmasKeys>
	{
		[Token(Token = "0x6001D9B")]
		[Address(RVA = "0x1E49AB0", Offset = "0x1E49AB0", VA = "0x1E49AB0", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001D9C")]
		[Address(RVA = "0x1E49B04", Offset = "0x1E49B04", VA = "0x1E49B04", Slot = "39")]
		protected override int GetInheritedKeyValue()
		{
			return default(int);
		}

		[Token(Token = "0x6001D9D")]
		[Address(RVA = "0x1E49B64", Offset = "0x1E49B64", VA = "0x1E49B64")]
		public GetChristmasDataNC()
		{
		}
	}
	[Token(Token = "0x2000542")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x977DD8", Offset = "0x977DD8")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x977DD8", Offset = "0x977DD8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x977DD8", Offset = "0x977DD8")]
	public class GetHubRoomDataNC : GetDioramaData<HubRoomData.HubRoomKeys>
	{
		[Token(Token = "0x6001D9E")]
		[Address(RVA = "0x1E4B034", Offset = "0x1E4B034", VA = "0x1E4B034", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001D9F")]
		[Address(RVA = "0x1E4B088", Offset = "0x1E4B088", VA = "0x1E4B088", Slot = "39")]
		protected override int GetInheritedKeyValue()
		{
			return default(int);
		}

		[Token(Token = "0x6001DA0")]
		[Address(RVA = "0x1E4B0E8", Offset = "0x1E4B0E8", VA = "0x1E4B0E8")]
		public GetHubRoomDataNC()
		{
		}
	}
	[Token(Token = "0x2000543")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x977E60", Offset = "0x977E60")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x977E60", Offset = "0x977E60")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x977E60", Offset = "0x977E60")]
	public class GetDioramaOneDataNC : GetDioramaData<DioramaOneData.DioramaOneKeys>
	{
		[Token(Token = "0x6001DA1")]
		[Address(RVA = "0x1E4AD28", Offset = "0x1E4AD28", VA = "0x1E4AD28", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001DA2")]
		[Address(RVA = "0x1E4AD7C", Offset = "0x1E4AD7C", VA = "0x1E4AD7C", Slot = "39")]
		protected override int GetInheritedKeyValue()
		{
			return default(int);
		}

		[Token(Token = "0x6001DA3")]
		[Address(RVA = "0x1E4ADDC", Offset = "0x1E4ADDC", VA = "0x1E4ADDC")]
		public GetDioramaOneDataNC()
		{
		}
	}
	[Token(Token = "0x2000544")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x977EE8", Offset = "0x977EE8")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x977EE8", Offset = "0x977EE8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x977EE8", Offset = "0x977EE8")]
	public class GetDioramaTwoDataNC : GetDioramaData<DioramaTwoData.DioramaTwoKeys>
	{
		[Token(Token = "0x6001DA4")]
		[Address(RVA = "0x1E4AF30", Offset = "0x1E4AF30", VA = "0x1E4AF30", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001DA5")]
		[Address(RVA = "0x1E4AF84", Offset = "0x1E4AF84", VA = "0x1E4AF84", Slot = "39")]
		protected override int GetInheritedKeyValue()
		{
			return default(int);
		}

		[Token(Token = "0x6001DA6")]
		[Address(RVA = "0x1E4AFE4", Offset = "0x1E4AFE4", VA = "0x1E4AFE4")]
		public GetDioramaTwoDataNC()
		{
		}
	}
	[Token(Token = "0x2000545")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x977F70", Offset = "0x977F70")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x977F70", Offset = "0x977F70")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x977F70", Offset = "0x977F70")]
	public class GetDioramaThreeDataNC : GetDioramaData<DioramaThreeData.DioramaThreeKeys>
	{
		[Token(Token = "0x6001DA7")]
		[Address(RVA = "0x1E4AE2C", Offset = "0x1E4AE2C", VA = "0x1E4AE2C", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001DA8")]
		[Address(RVA = "0x1E4AE80", Offset = "0x1E4AE80", VA = "0x1E4AE80", Slot = "39")]
		protected override int GetInheritedKeyValue()
		{
			return default(int);
		}

		[Token(Token = "0x6001DA9")]
		[Address(RVA = "0x1E4AEE0", Offset = "0x1E4AEE0", VA = "0x1E4AEE0")]
		public GetDioramaThreeDataNC()
		{
		}
	}
	[Token(Token = "0x2000546")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x977FF8", Offset = "0x977FF8")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x977FF8", Offset = "0x977FF8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x977FF8", Offset = "0x977FF8")]
	public class GetDioramaFourDataNC : GetDioramaData<DioramaFourData.DioramaFourKeys>
	{
		[Token(Token = "0x6001DAA")]
		[Address(RVA = "0x1E4AC24", Offset = "0x1E4AC24", VA = "0x1E4AC24", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001DAB")]
		[Address(RVA = "0x1E4AC78", Offset = "0x1E4AC78", VA = "0x1E4AC78", Slot = "39")]
		protected override int GetInheritedKeyValue()
		{
			return default(int);
		}

		[Token(Token = "0x6001DAC")]
		[Address(RVA = "0x1E4ACD8", Offset = "0x1E4ACD8", VA = "0x1E4ACD8")]
		public GetDioramaFourDataNC()
		{
		}
	}
	[Token(Token = "0x2000547")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x978080", Offset = "0x978080")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x978080", Offset = "0x978080")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x978080", Offset = "0x978080")]
	public class GetDioramaFiveDataNC : GetDioramaData<DioramaFiveData.DioramaFiveKeys>
	{
		[Token(Token = "0x6001DAD")]
		[Address(RVA = "0x1E4AB20", Offset = "0x1E4AB20", VA = "0x1E4AB20", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001DAE")]
		[Address(RVA = "0x1E4AB74", Offset = "0x1E4AB74", VA = "0x1E4AB74", Slot = "39")]
		protected override int GetInheritedKeyValue()
		{
			return default(int);
		}

		[Token(Token = "0x6001DAF")]
		[Address(RVA = "0x1E4ABD4", Offset = "0x1E4ABD4", VA = "0x1E4ABD4")]
		public GetDioramaFiveDataNC()
		{
		}
	}
	[Token(Token = "0x2000548")]
	public class GetNumCoinsNC : FlowControlNode
	{
		[Token(Token = "0x2000F7E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BBA0", Offset = "0x97BBA0")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4002451")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GetNumCoinsNC <>4__this;

			[Token(Token = "0x4002452")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FlowOutput flowOut;

			[Token(Token = "0x6003423")]
			[Address(RVA = "0x1E4B300", Offset = "0x1E4B300", VA = "0x1E4B300")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6003424")]
			[Address(RVA = "0x1E4B318", Offset = "0x1E4B318", VA = "0x1E4B318")]
			internal int <RegisterPorts>b__0()
			{
				return default(int);
			}

			[Token(Token = "0x6003425")]
			[Address(RVA = "0x1E4B588", Offset = "0x1E4B588", VA = "0x1E4B588")]
			internal int <RegisterPorts>b__1()
			{
				return default(int);
			}

			[Token(Token = "0x6003426")]
			[Address(RVA = "0x1E4B664", Offset = "0x1E4B664", VA = "0x1E4B664")]
			internal void <RegisterPorts>b__2(Flow f)
			{
			}
		}

		[Token(Token = "0x40017E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int m_numMaxCoins;

		[Token(Token = "0x40017E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private int m_numFoundCoins;

		[Token(Token = "0x6001DB0")]
		[Address(RVA = "0x1E4B138", Offset = "0x1E4B138", VA = "0x1E4B138", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001DB1")]
		[Address(RVA = "0x1E4B308", Offset = "0x1E4B308", VA = "0x1E4B308")]
		public GetNumCoinsNC()
		{
		}
	}
	[Token(Token = "0x2000549")]
	public class GetNumPresentsNC : FlowControlNode
	{
		[Token(Token = "0x2000F7F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BBB0", Offset = "0x97BBB0")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4002453")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GetNumPresentsNC <>4__this;

			[Token(Token = "0x4002454")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ValueInput<int> saveSlot;

			[Token(Token = "0x4002455")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FlowOutput flowOut;

			[Token(Token = "0x6003427")]
			[Address(RVA = "0x1E4B8A8", Offset = "0x1E4B8A8", VA = "0x1E4B8A8")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6003428")]
			[Address(RVA = "0x1E4BB94", Offset = "0x1E4BB94", VA = "0x1E4BB94")]
			internal int <RegisterPorts>b__0()
			{
				return default(int);
			}

			[Token(Token = "0x6003429")]
			[Address(RVA = "0x1E4BBF8", Offset = "0x1E4BBF8", VA = "0x1E4BBF8")]
			internal int <RegisterPorts>b__1()
			{
				return default(int);
			}

			[Token(Token = "0x600342A")]
			[Address(RVA = "0x1E4BCB0", Offset = "0x1E4BCB0", VA = "0x1E4BCB0")]
			internal void <RegisterPorts>b__2(Flow f)
			{
			}
		}

		[Token(Token = "0x40017E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int m_numMaxPresents;

		[Token(Token = "0x40017E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private int m_numFoundPresents;

		[Token(Token = "0x6001DB2")]
		[Address(RVA = "0x1E4B6CC", Offset = "0x1E4B6CC", VA = "0x1E4B6CC", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001DB3")]
		[Address(RVA = "0x1E4B8B0", Offset = "0x1E4B8B0", VA = "0x1E4B8B0")]
		private void calculateNumMaxPresents()
		{
		}

		[Token(Token = "0x6001DB4")]
		[Address(RVA = "0x1E4B97C", Offset = "0x1E4B97C", VA = "0x1E4B97C")]
		private void calculateNumFoundPresents(int saveSlot)
		{
		}

		[Token(Token = "0x6001DB5")]
		[Address(RVA = "0x1E4BB84", Offset = "0x1E4BB84", VA = "0x1E4BB84")]
		public GetNumPresentsNC()
		{
		}
	}
	[Token(Token = "0x200054A")]
	public class GetPersonaDataNC : FlowControlNode
	{
		[Token(Token = "0x2000F80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BBC0", Offset = "0x97BBC0")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x4002456")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GetPersonaDataNC <>4__this;

			[Token(Token = "0x4002457")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FlowOutput output;

			[Token(Token = "0x600342B")]
			[Address(RVA = "0x1E4BFC4", Offset = "0x1E4BFC4", VA = "0x1E4BFC4")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x600342C")]
			[Address(RVA = "0x1E4C02C", Offset = "0x1E4C02C", VA = "0x1E4C02C")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x40017E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int m_intOut;

		[Token(Token = "0x40017E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float m_floatOut;

		[Token(Token = "0x40017E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private string m_stringOut;

		[Token(Token = "0x40017E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private long m_longOut;

		[Token(Token = "0x40017E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private ValueInput<PersonaSettings.PersonaKeys> m_dataToGet;

		[Token(Token = "0x6001DB6")]
		[Address(RVA = "0x1E4BD18", Offset = "0x1E4BD18", VA = "0x1E4BD18")]
		private int GetInt()
		{
			return default(int);
		}

		[Token(Token = "0x6001DB7")]
		[Address(RVA = "0x1E4BD20", Offset = "0x1E4BD20", VA = "0x1E4BD20")]
		private float GetFloat()
		{
			return default(float);
		}

		[Token(Token = "0x6001DB8")]
		[Address(RVA = "0x1E4BD28", Offset = "0x1E4BD28", VA = "0x1E4BD28")]
		private string GetString()
		{
			return null;
		}

		[Token(Token = "0x6001DB9")]
		[Address(RVA = "0x1E4BD30", Offset = "0x1E4BD30", VA = "0x1E4BD30")]
		private long GetLong()
		{
			return default(long);
		}

		[Token(Token = "0x6001DBA")]
		[Address(RVA = "0x1E4BD38", Offset = "0x1E4BD38", VA = "0x1E4BD38", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001DBB")]
		[Address(RVA = "0x1E4BFCC", Offset = "0x1E4BFCC", VA = "0x1E4BFCC")]
		public GetPersonaDataNC()
		{
		}
	}
	[Token(Token = "0x200054B")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x978108", Offset = "0x978108")]
	public class GetPlayerVRHeadGameObjectNC : FlowControlNode
	{
		[Token(Token = "0x2000F81")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BBD0", Offset = "0x97BBD0")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4002458")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GetPlayerVRHeadGameObjectNC <>4__this;

			[Token(Token = "0x4002459")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FlowOutput output;

			[Token(Token = "0x600342D")]
			[Address(RVA = "0x1E4C454", Offset = "0x1E4C454", VA = "0x1E4C454")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x600342E")]
			[Address(RVA = "0x1E4C464", Offset = "0x1E4C464", VA = "0x1E4C464")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x40017EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public ValueInput<GameObject> m_gameObject;

		[Token(Token = "0x40017EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private GameObject m_vrHeadObj;

		[Token(Token = "0x6001DBC")]
		[Address(RVA = "0x1E4C2D4", Offset = "0x1E4C2D4", VA = "0x1E4C2D4")]
		private GameObject HasHead()
		{
			return null;
		}

		[Token(Token = "0x6001DBD")]
		[Address(RVA = "0x1E4C2DC", Offset = "0x1E4C2DC", VA = "0x1E4C2DC", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001DBE")]
		[Address(RVA = "0x1E4C45C", Offset = "0x1E4C45C", VA = "0x1E4C45C")]
		public GetPlayerVRHeadGameObjectNC()
		{
		}
	}
	[Token(Token = "0x200054C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x978140", Offset = "0x978140")]
	public class HmdConnectedNc : FlowControlNode
	{
		[Token(Token = "0x2000F82")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BBE0", Offset = "0x97BBE0")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x400245A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FlowOutput outHmdMissingFlow;

			[Token(Token = "0x400245B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FlowOutput outHmdPresentFlow;

			[Token(Token = "0x600342F")]
			[Address(RVA = "0x1E54AE0", Offset = "0x1E54AE0", VA = "0x1E54AE0")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6003430")]
			[Address(RVA = "0x1E54AF0", Offset = "0x1E54AF0", VA = "0x1E54AF0")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x6001DBF")]
		[Address(RVA = "0x1E549CC", Offset = "0x1E549CC", VA = "0x1E549CC", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001DC0")]
		[Address(RVA = "0x1E54AE8", Offset = "0x1E54AE8", VA = "0x1E54AE8")]
		public HmdConnectedNc()
		{
		}
	}
	[Token(Token = "0x200054D")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x978178", Offset = "0x978178")]
	public class HmdSelectNC : FlowControlNode
	{
		[Token(Token = "0x2000F83")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BBF0", Offset = "0x97BBF0")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x400245C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FlowOutput outOculusFlow;

			[Token(Token = "0x400245D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FlowOutput outOpenVRFlow;

			[Token(Token = "0x400245E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FlowOutput outPSVRFlow;

			[Token(Token = "0x400245F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public FlowOutput outViveFPFlow;

			[Token(Token = "0x4002460")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public FlowOutput outPicoFlow;

			[Token(Token = "0x6003431")]
			[Address(RVA = "0x1E54D74", Offset = "0x1E54D74", VA = "0x1E54D74")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6003432")]
			[Address(RVA = "0x1E54D84", Offset = "0x1E54D84", VA = "0x1E54D84")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x6001DC1")]
		[Address(RVA = "0x1E54BB4", Offset = "0x1E54BB4", VA = "0x1E54BB4", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001DC2")]
		[Address(RVA = "0x1E54D7C", Offset = "0x1E54D7C", VA = "0x1E54D7C")]
		public HmdSelectNC()
		{
		}
	}
	[Token(Token = "0x200054E")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x9781B0", Offset = "0x9781B0")]
	public class InteractionReceiverNC : EventNode<InteractionReceiver>
	{
		[Token(Token = "0x40017EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private FlowOutput outPort;

		[Token(Token = "0x40017ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private int m_tag;

		[Token(Token = "0x6001DC3")]
		[Address(RVA = "0x1E5B3E0", Offset = "0x1E5B3E0", VA = "0x1E5B3E0", Slot = "26")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6001DC4")]
		[Address(RVA = "0x1E5B4C4", Offset = "0x1E5B4C4", VA = "0x1E5B4C4", Slot = "27")]
		public override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6001DC5")]
		[Address(RVA = "0x1E5B558", Offset = "0x1E5B558", VA = "0x1E5B558", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001DC6")]
		[Address(RVA = "0x1E5B620", Offset = "0x1E5B620", VA = "0x1E5B620")]
		private void OnDealInteractionDelegate(int tag)
		{
		}

		[Token(Token = "0x6001DC7")]
		[Address(RVA = "0x1E5B684", Offset = "0x1E5B684", VA = "0x1E5B684")]
		public InteractionReceiverNC()
		{
		}

		[Token(Token = "0x6001DC8")]
		[Address(RVA = "0x1E5B6DC", Offset = "0x1E5B6DC", VA = "0x1E5B6DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x988CD0", Offset = "0x988CD0")]
		private int <RegisterPorts>b__4_0()
		{
			return default(int);
		}
	}
	[Token(Token = "0x200054F")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x9781E8", Offset = "0x9781E8")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x9781E8", Offset = "0x9781E8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9781E8", Offset = "0x9781E8")]
	public class IsDioramaUnlockedNC : FlowControlNode
	{
		[Token(Token = "0x2000F84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BC00", Offset = "0x97BC00")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4002461")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FlowOutput output;

			[Token(Token = "0x6003433")]
			[Address(RVA = "0x1E5B9E8", Offset = "0x1E5B9E8", VA = "0x1E5B9E8")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6003434")]
			[Address(RVA = "0x1E5B9F8", Offset = "0x1E5B9F8", VA = "0x1E5B9F8")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x40017EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private ValueInput<SaveManager.DioramaWorlds> m_selectedWorld;

		[Token(Token = "0x40017EF")]
		private const int c_isUnlockedIdSelector = 3;

		[Token(Token = "0x6001DC9")]
		[Address(RVA = "0x1E5B77C", Offset = "0x1E5B77C", VA = "0x1E5B77C")]
		private bool IsUnlockedCallback()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DCA")]
		[Address(RVA = "0x1E5B880", Offset = "0x1E5B880", VA = "0x1E5B880", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001DCB")]
		[Address(RVA = "0x1E5B9F0", Offset = "0x1E5B9F0", VA = "0x1E5B9F0")]
		public IsDioramaUnlockedNC()
		{
		}
	}
	[Token(Token = "0x2000550")]
	public class IsHandInteractingNC : FlowControlNode
	{
		[Token(Token = "0x2000F85")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BC10", Offset = "0x97BC10")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4002462")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ValueInput<GameObject> other;

			[Token(Token = "0x4002463")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FlowOutput flowOut;

			[Token(Token = "0x6003435")]
			[Address(RVA = "0x1E5BC34", Offset = "0x1E5BC34", VA = "0x1E5BC34")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6003436")]
			[Address(RVA = "0x1E5BC44", Offset = "0x1E5BC44", VA = "0x1E5BC44")]
			internal Interactible <RegisterPorts>b__0()
			{
				return null;
			}

			[Token(Token = "0x6003437")]
			[Address(RVA = "0x1E5BCBC", Offset = "0x1E5BCBC", VA = "0x1E5BCBC")]
			internal bool <RegisterPorts>b__1()
			{
				return default(bool);
			}

			[Token(Token = "0x6003438")]
			[Address(RVA = "0x1E5BD60", Offset = "0x1E5BD60", VA = "0x1E5BD60")]
			internal void <RegisterPorts>b__2(Flow f)
			{
			}
		}

		[Token(Token = "0x6001DCC")]
		[Address(RVA = "0x1E5BA60", Offset = "0x1E5BA60", VA = "0x1E5BA60", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001DCD")]
		[Address(RVA = "0x1E5BC3C", Offset = "0x1E5BC3C", VA = "0x1E5BC3C")]
		public IsHandInteractingNC()
		{
		}
	}
	[Token(Token = "0x2000551")]
	public class LoadLevelNC : CallableActionNode<string, GameObject, float, float, float, bool>
	{
		[Token(Token = "0x2000F86")]
		public class LevelLoadHelper : MonoBehaviour
		{
			[Token(Token = "0x2001009")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97C090", Offset = "0x97C090")]
			private sealed class <Invoke>d__4 : IEnumerator<object>, IEnumerator, IDisposable
			{
				[Token(Token = "0x40025B9")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private int <>1__state;

				[Token(Token = "0x40025BA")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private object <>2__current;

				[Token(Token = "0x40025BB")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public float fadeToSeethroughTime;

				[Token(Token = "0x40025BC")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
				public float fadeToBlackTime;

				[Token(Token = "0x40025BD")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public LevelLoadHelper <>4__this;

				[Token(Token = "0x40025BE")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				public bool persistCurrentLevel;

				[Token(Token = "0x40025BF")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
				public string levelToLoad;

				[Token(Token = "0x40025C0")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
				public float waitBeforeFadeSeethrough;

				[Token(Token = "0x40025C1")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
				public bool dontFadeIn;

				[Token(Token = "0x40025C2")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
				private string <currentLevelName>5__2;

				[Token(Token = "0x40025C3")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
				private PlayerController <playerController>5__3;

				[Token(Token = "0x40025C4")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
				private AsyncOperation <asyncOp>5__4;

				[Token(Token = "0x1700043F")]
				private object System.Collections.Generic.IEnumerator<System.Object>.Current
				{
					[Token(Token = "0x60035BE")]
					[Address(RVA = "0x1E5EBD4", Offset = "0x1E5EBD4", VA = "0x1E5EBD4", Slot = "4")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x17000440")]
				private object System.Collections.IEnumerator.Current
				{
					[Token(Token = "0x60035C0")]
					[Address(RVA = "0x1E5EC44", Offset = "0x1E5EC44", VA = "0x1E5EC44", Slot = "7")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x60035BB")]
				[Address(RVA = "0x1E5DC98", Offset = "0x1E5DC98", VA = "0x1E5DC98")]
				[DebuggerHidden]
				public <Invoke>d__4(int <>1__state)
				{
				}

				[Token(Token = "0x60035BC")]
				[Address(RVA = "0x1E5DF08", Offset = "0x1E5DF08", VA = "0x1E5DF08", Slot = "5")]
				[DebuggerHidden]
				private void System.IDisposable.Dispose()
				{
				}

				[Token(Token = "0x60035BD")]
				[Address(RVA = "0x1E5DF0C", Offset = "0x1E5DF0C", VA = "0x1E5DF0C", Slot = "6")]
				private bool MoveNext()
				{
					return default(bool);
				}

				[Token(Token = "0x60035BF")]
				[Address(RVA = "0x1E5EBDC", Offset = "0x1E5EBDC", VA = "0x1E5EBDC", Slot = "8")]
				[DebuggerHidden]
				private void System.Collections.IEnumerator.Reset()
				{
				}
			}

			[Token(Token = "0x200100A")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97C0A0", Offset = "0x97C0A0")]
			private sealed class <saveCurrentLevel>d__6 : IEnumerator<object>, IEnumerator, IDisposable
			{
				[Token(Token = "0x40025C5")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private int <>1__state;

				[Token(Token = "0x40025C6")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private object <>2__current;

				[Token(Token = "0x40025C7")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public bool persistCurrentLevel;

				[Token(Token = "0x40025C8")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public string currentLevelName;

				[Token(Token = "0x40025C9")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				private int <statsCookie>5__2;

				[Token(Token = "0x17000441")]
				private object System.Collections.Generic.IEnumerator<System.Object>.Current
				{
					[Token(Token = "0x60035C4")]
					[Address(RVA = "0x1E5ED64", Offset = "0x1E5ED64", VA = "0x1E5ED64", Slot = "4")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x17000442")]
				private object System.Collections.IEnumerator.Current
				{
					[Token(Token = "0x60035C6")]
					[Address(RVA = "0x1E5EDD4", Offset = "0x1E5EDD4", VA = "0x1E5EDD4", Slot = "7")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x60035C1")]
				[Address(RVA = "0x1E5DE48", Offset = "0x1E5DE48", VA = "0x1E5DE48")]
				[DebuggerHidden]
				public <saveCurrentLevel>d__6(int <>1__state)
				{
				}

				[Token(Token = "0x60035C2")]
				[Address(RVA = "0x1E5EC4C", Offset = "0x1E5EC4C", VA = "0x1E5EC4C", Slot = "5")]
				[DebuggerHidden]
				private void System.IDisposable.Dispose()
				{
				}

				[Token(Token = "0x60035C3")]
				[Address(RVA = "0x1E5EC50", Offset = "0x1E5EC50", VA = "0x1E5EC50", Slot = "6")]
				private bool MoveNext()
				{
					return default(bool);
				}

				[Token(Token = "0x60035C5")]
				[Address(RVA = "0x1E5ED6C", Offset = "0x1E5ED6C", VA = "0x1E5ED6C", Slot = "8")]
				[DebuggerHidden]
				private void System.Collections.IEnumerator.Reset()
				{
				}
			}

			[Token(Token = "0x200100B")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97C0B0", Offset = "0x97C0B0")]
			private sealed class <unloadResources>d__7 : IEnumerator<object>, IEnumerator, IDisposable
			{
				[Token(Token = "0x40025CA")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private int <>1__state;

				[Token(Token = "0x40025CB")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private object <>2__current;

				[Token(Token = "0x40025CC")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				private AsyncOperation <asyncOp>5__2;

				[Token(Token = "0x40025CD")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				private AsyncOperation <emptyLoadOp>5__3;

				[Token(Token = "0x17000443")]
				private object System.Collections.Generic.IEnumerator<System.Object>.Current
				{
					[Token(Token = "0x60035CA")]
					[Address(RVA = "0x1E5EEF8", Offset = "0x1E5EEF8", VA = "0x1E5EEF8", Slot = "4")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x17000444")]
				private object System.Collections.IEnumerator.Current
				{
					[Token(Token = "0x60035CC")]
					[Address(RVA = "0x1E5EF68", Offset = "0x1E5EF68", VA = "0x1E5EF68", Slot = "7")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x60035C7")]
				[Address(RVA = "0x1E5DED4", Offset = "0x1E5DED4", VA = "0x1E5DED4")]
				[DebuggerHidden]
				public <unloadResources>d__7(int <>1__state)
				{
				}

				[Token(Token = "0x60035C8")]
				[Address(RVA = "0x1E5EDDC", Offset = "0x1E5EDDC", VA = "0x1E5EDDC", Slot = "5")]
				[DebuggerHidden]
				private void System.IDisposable.Dispose()
				{
				}

				[Token(Token = "0x60035C9")]
				[Address(RVA = "0x1E5EDE0", Offset = "0x1E5EDE0", VA = "0x1E5EDE0", Slot = "6")]
				private bool MoveNext()
				{
					return default(bool);
				}

				[Token(Token = "0x60035CB")]
				[Address(RVA = "0x1E5EF00", Offset = "0x1E5EF00", VA = "0x1E5EF00", Slot = "8")]
				[DebuggerHidden]
				private void System.Collections.IEnumerator.Reset()
				{
				}
			}

			[Token(Token = "0x4002464")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private bool m_inputWasLockedBeforeLoad;

			[Token(Token = "0x4002465")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private PlayerInputHandler m_inputHandler;

			[Token(Token = "0x6003439")]
			[Address(RVA = "0x1E5DAF4", Offset = "0x1E5DAF4", VA = "0x1E5DAF4")]
			private void Start()
			{
			}

			[Token(Token = "0x600343A")]
			[Address(RVA = "0x1E5D660", Offset = "0x1E5D660", VA = "0x1E5D660")]
			public void LoadLevel(string levelToLoad, float fadeToSeethroughTime, float fadeToBlackTime, float waitBeforeFadeSeethrough, bool dontFadeIn, bool persistCurrentLevel, bool lockInput)
			{
			}

			[Token(Token = "0x600343B")]
			[Address(RVA = "0x1E5DB70", Offset = "0x1E5DB70", VA = "0x1E5DB70")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98BEC0", Offset = "0x98BEC0")]
			private IEnumerator Invoke(string levelToLoad, float fadeToSeethroughTime, float fadeToBlackTime, float waitBeforeFadeSeethrough, bool dontFadeIn, bool persistCurrentLevel, bool lockInput)
			{
				return null;
			}

			[Token(Token = "0x600343C")]
			[Address(RVA = "0x1E5DCC4", Offset = "0x1E5DCC4", VA = "0x1E5DCC4")]
			private static PlayerController preparePlayerForLoading(float fadeToBlackTime)
			{
				return null;
			}

			[Token(Token = "0x600343D")]
			[Address(RVA = "0x1E5DDA8", Offset = "0x1E5DDA8", VA = "0x1E5DDA8")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98BF24", Offset = "0x98BF24")]
			private IEnumerator saveCurrentLevel(bool persistCurrentLevel, string currentLevelName)
			{
				return null;
			}

			[Token(Token = "0x600343E")]
			[Address(RVA = "0x1E5DE74", Offset = "0x1E5DE74", VA = "0x1E5DE74")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98BF88", Offset = "0x98BF88")]
			private IEnumerator unloadResources()
			{
				return null;
			}

			[Token(Token = "0x600343F")]
			[Address(RVA = "0x1E5DF00", Offset = "0x1E5DF00", VA = "0x1E5DF00")]
			public LevelLoadHelper()
			{
			}
		}

		[Token(Token = "0x40017F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x982600", Offset = "0x982600")]
		public bool persistCurrentLevel;

		[Token(Token = "0x40017F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string s_loadedScene;

		[Token(Token = "0x40017F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static bool s_isLoading;

		[Token(Token = "0x6001DCE")]
		[Address(RVA = "0x1E5D344", Offset = "0x1E5D344", VA = "0x1E5D344")]
		public static bool IsLevelLoading()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DCF")]
		[Address(RVA = "0x1E5D3AC", Offset = "0x1E5D3AC", VA = "0x1E5D3AC", Slot = "12")]
		public override void Invoke(string levelToLoad, GameObject loadingScreen, float fadeToSeethroughTime, float fadeToBlackTime, float waitBeforeFadeSeethrough, bool dontFadeIn)
		{
		}

		[Token(Token = "0x6001DD0")]
		[Address(RVA = "0x1E5D80C", Offset = "0x1E5D80C", VA = "0x1E5D80C")]
		private static string pathToFileName(string path)
		{
			return null;
		}

		[Token(Token = "0x6001DD1")]
		[Address(RVA = "0x1E5DA98", Offset = "0x1E5DA98", VA = "0x1E5DA98")]
		public LoadLevelNC()
		{
		}
	}
	[Token(Token = "0x2000552")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x978270", Offset = "0x978270")]
	public class MultiAndNC : FlowControlNode
	{
		[Token(Token = "0x2000F87")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BC20", Offset = "0x97BC20")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4002466")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<ValueInput<bool>> ins;

			[Token(Token = "0x4002467")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MultiAndNC <>4__this;

			[Token(Token = "0x4002468")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FlowOutput outport;

			[Token(Token = "0x6003440")]
			[Address(RVA = "0x1E65180", Offset = "0x1E65180", VA = "0x1E65180")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6003441")]
			[Address(RVA = "0x1E65198", Offset = "0x1E65198", VA = "0x1E65198")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x40017F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		[ExposeField]
		[GatherPortsCallback]
		[AttributeAttribute(Name = "MinValueAttribute", RVA = "0x982638", Offset = "0x982638")]
		[DelayedField]
		private int _portCount;

		[Token(Token = "0x6001DD3")]
		[Address(RVA = "0x1E64FC8", Offset = "0x1E64FC8", VA = "0x1E64FC8", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001DD4")]
		[Address(RVA = "0x1E65188", Offset = "0x1E65188", VA = "0x1E65188")]
		public MultiAndNC()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000553")]
	public class MultiEnableDisableGameObjectData
	{
		[Token(Token = "0x40017F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<GameObject> m_objectsToEnable;

		[Token(Token = "0x40017F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<GameObject> m_objectsToDisable;

		[Token(Token = "0x6001DD5")]
		[Address(RVA = "0x1E652B0", Offset = "0x1E652B0", VA = "0x1E652B0")]
		public MultiEnableDisableGameObjectData()
		{
		}
	}
	[Token(Token = "0x2000554")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x9782A8", Offset = "0x9782A8")]
	public class MultiEnableDisableGameObjectNC : CallableActionNode<MultiEnableDisableGameObjectData>
	{
		[Token(Token = "0x6001DD6")]
		[Address(RVA = "0x1E652B8", Offset = "0x1E652B8", VA = "0x1E652B8", Slot = "12")]
		public override void Invoke(MultiEnableDisableGameObjectData data)
		{
		}

		[Token(Token = "0x6001DD7")]
		[Address(RVA = "0x1E653FC", Offset = "0x1E653FC", VA = "0x1E653FC")]
		public MultiEnableDisableGameObjectNC()
		{
		}
	}
	[Token(Token = "0x2000555")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x9782E0", Offset = "0x9782E0")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x9782E0", Offset = "0x9782E0")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9782E0", Offset = "0x9782E0")]
	public class OnTriggerWithSpecificOther : MessageEventNode<Collider>
	{
		[Token(Token = "0x40017F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private ValueInput<GameObject> m_requiredOther;

		[Token(Token = "0x40017F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private FlowOutput onEnter;

		[Token(Token = "0x40017F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private FlowOutput onStay;

		[Token(Token = "0x40017F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private FlowOutput onExit;

		[Token(Token = "0x40017FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Collider receiver;

		[Token(Token = "0x40017FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private GameObject other;

		[Token(Token = "0x6001DD8")]
		[Address(RVA = "0x1E2B208", Offset = "0x1E2B208", VA = "0x1E2B208", Slot = "39")]
		protected override string[] GetTargetMessageEvents()
		{
			return null;
		}

		[Token(Token = "0x6001DD9")]
		[Address(RVA = "0x1E2B360", Offset = "0x1E2B360", VA = "0x1E2B360", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001DDA")]
		[Address(RVA = "0x1E2B4EC", Offset = "0x1E2B4EC", VA = "0x1E2B4EC")]
		private void OnTriggerEnter(MessageRouter.MessageData<Collider> msg)
		{
		}

		[Token(Token = "0x6001DDB")]
		[Address(RVA = "0x1E2B6D8", Offset = "0x1E2B6D8", VA = "0x1E2B6D8")]
		private void OnTriggerStay(MessageRouter.MessageData<Collider> msg)
		{
		}

		[Token(Token = "0x6001DDC")]
		[Address(RVA = "0x1E2B8C4", Offset = "0x1E2B8C4", VA = "0x1E2B8C4")]
		private void OnTriggerExit(MessageRouter.MessageData<Collider> msg)
		{
		}

		[Token(Token = "0x6001DDD")]
		[Address(RVA = "0x1E2BAB0", Offset = "0x1E2BAB0", VA = "0x1E2BAB0")]
		public OnTriggerWithSpecificOther()
		{
		}

		[Token(Token = "0x6001DDE")]
		[Address(RVA = "0x1E2BB00", Offset = "0x1E2BB00", VA = "0x1E2BB00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x988CE0", Offset = "0x988CE0")]
		private Collider <RegisterPorts>b__7_0()
		{
			return null;
		}

		[Token(Token = "0x6001DDF")]
		[Address(RVA = "0x1E2BB08", Offset = "0x1E2BB08", VA = "0x1E2BB08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x988CF0", Offset = "0x988CF0")]
		private GameObject <RegisterPorts>b__7_1()
		{
			return null;
		}
	}
	[Token(Token = "0x2000556")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x978368", Offset = "0x978368")]
	public class PickupTriggerEventNC : EventNode<PickupTrigger>
	{
		[Token(Token = "0x40017FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private FlowOutput outPort;

		[Token(Token = "0x40017FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private GameObject pickUp;

		[Token(Token = "0x6001DE0")]
		[Address(RVA = "0x1E310AC", Offset = "0x1E310AC", VA = "0x1E310AC", Slot = "26")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6001DE1")]
		[Address(RVA = "0x1E31190", Offset = "0x1E31190", VA = "0x1E31190", Slot = "27")]
		public override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6001DE2")]
		[Address(RVA = "0x1E31224", Offset = "0x1E31224", VA = "0x1E31224", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001DE3")]
		[Address(RVA = "0x1E312EC", Offset = "0x1E312EC", VA = "0x1E312EC")]
		private void OnDealInteractionDelegate(GameObject pickUp)
		{
		}

		[Token(Token = "0x6001DE4")]
		[Address(RVA = "0x1E31350", Offset = "0x1E31350", VA = "0x1E31350")]
		public PickupTriggerEventNC()
		{
		}

		[Token(Token = "0x6001DE5")]
		[Address(RVA = "0x1E313A0", Offset = "0x1E313A0", VA = "0x1E313A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x988D00", Offset = "0x988D00")]
		private GameObject <RegisterPorts>b__4_0()
		{
			return null;
		}
	}
	[Token(Token = "0x2000557")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x9783A0", Offset = "0x9783A0")]
	public class PickupTriggerInstantEventNC : EventNode<PickupTriggerInstant>
	{
		[Token(Token = "0x40017FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private FlowOutput outPort;

		[Token(Token = "0x40017FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private GameObject pickUp;

		[Token(Token = "0x6001DE6")]
		[Address(RVA = "0x1E31E30", Offset = "0x1E31E30", VA = "0x1E31E30", Slot = "26")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6001DE7")]
		[Address(RVA = "0x1E31F14", Offset = "0x1E31F14", VA = "0x1E31F14", Slot = "27")]
		public override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6001DE8")]
		[Address(RVA = "0x1E31FA8", Offset = "0x1E31FA8", VA = "0x1E31FA8", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001DE9")]
		[Address(RVA = "0x1E32070", Offset = "0x1E32070", VA = "0x1E32070")]
		private void OnDealInteractionDelegate(GameObject pickUp)
		{
		}

		[Token(Token = "0x6001DEA")]
		[Address(RVA = "0x1E320D4", Offset = "0x1E320D4", VA = "0x1E320D4")]
		public PickupTriggerInstantEventNC()
		{
		}

		[Token(Token = "0x6001DEB")]
		[Address(RVA = "0x1E32124", Offset = "0x1E32124", VA = "0x1E32124")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x988D10", Offset = "0x988D10")]
		private GameObject <RegisterPorts>b__4_0()
		{
			return null;
		}
	}
	[Token(Token = "0x2000558")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x9783D8", Offset = "0x9783D8")]
	public class PlatformSelectNC : FlowControlNode
	{
		[Serializable]
		[Token(Token = "0x2000F88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BC30", Offset = "0x97BC30")]
		private sealed class <>c
		{
			[Token(Token = "0x4002469")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400246A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static FlowHandler <>9__0_0;

			[Token(Token = "0x6003443")]
			[Address(RVA = "0x1E32450", Offset = "0x1E32450", VA = "0x1E32450")]
			public <>c()
			{
			}

			[Token(Token = "0x6003444")]
			[Address(RVA = "0x1E32458", Offset = "0x1E32458", VA = "0x1E32458")]
			internal void <RegisterPorts>b__0_0(Flow f)
			{
			}
		}

		[Token(Token = "0x6001DEC")]
		[Address(RVA = "0x1E32244", Offset = "0x1E32244", VA = "0x1E32244", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001DED")]
		[Address(RVA = "0x1E323E4", Offset = "0x1E323E4", VA = "0x1E323E4")]
		public PlatformSelectNC()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000559")]
	public class FabricNodeMusicData
	{
		[Token(Token = "0x4001800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string musicEventName;

		[Token(Token = "0x4001801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EventAction eventAction;

		[Token(Token = "0x4001802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool playOnlyOnce;

		[Token(Token = "0x6001DEE")]
		[Address(RVA = "0xBD1500", Offset = "0xBD1500", VA = "0xBD1500")]
		public FabricNodeMusicData()
		{
		}
	}
	[Token(Token = "0x200055A")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x978410", Offset = "0x978410")]
	public class PlayFabricMusicNC : CallableActionNode<FabricNodeMusicData>
	{
		[Token(Token = "0x4001803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_hasPlayed;

		[Token(Token = "0x6001DEF")]
		[Address(RVA = "0x1E327C8", Offset = "0x1E327C8", VA = "0x1E327C8", Slot = "12")]
		public override void Invoke(FabricNodeMusicData data)
		{
		}

		[Token(Token = "0x6001DF0")]
		[Address(RVA = "0x1E328A4", Offset = "0x1E328A4", VA = "0x1E328A4")]
		public PlayFabricMusicNC()
		{
		}
	}
	[Token(Token = "0x200055B")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x978448", Offset = "0x978448")]
	public class PlayFabricMusicConnectedNC : FlowControlNode
	{
		[Token(Token = "0x2000F89")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BC40", Offset = "0x97BC40")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x400246B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ValueInput<string> musicEventName;

			[Token(Token = "0x400246C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public PlayFabricMusicConnectedNC <>4__this;

			[Token(Token = "0x400246D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ValueInput<EventAction> eventAction;

			[Token(Token = "0x400246E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ValueInput<bool> playOnlyOnce;

			[Token(Token = "0x400246F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public FlowOutput flowOut;

			[Token(Token = "0x6003445")]
			[Address(RVA = "0x1E325F8", Offset = "0x1E325F8", VA = "0x1E325F8")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6003446")]
			[Address(RVA = "0x1E32608", Offset = "0x1E32608", VA = "0x1E32608")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x4001804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool m_hasPlayed;

		[Token(Token = "0x6001DF1")]
		[Address(RVA = "0x1E3245C", Offset = "0x1E3245C", VA = "0x1E3245C", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001DF2")]
		[Address(RVA = "0x1E32600", Offset = "0x1E32600", VA = "0x1E32600")]
		public PlayFabricMusicConnectedNC()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200055C")]
	public class FabricNodeSoundData
	{
		[Token(Token = "0x4001805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string soundEventName;

		[Token(Token = "0x4001806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EventAction eventAction;

		[Token(Token = "0x4001807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject soundEmitter;

		[Token(Token = "0x4001808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool playOnlyOnce;

		[Token(Token = "0x4001809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string soundParameterName;

		[Token(Token = "0x6001DF3")]
		[Address(RVA = "0xBD1508", Offset = "0xBD1508", VA = "0xBD1508")]
		public FabricNodeSoundData()
		{
		}
	}
	[Token(Token = "0x200055D")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x978480", Offset = "0x978480")]
	public class PlayFabricSoundNC : CallableActionNode<FabricNodeSoundData>
	{
		[Token(Token = "0x400180A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_hasPlayed;

		[Token(Token = "0x6001DF4")]
		[Address(RVA = "0x1E32E0C", Offset = "0x1E32E0C", VA = "0x1E32E0C", Slot = "12")]
		public override void Invoke(FabricNodeSoundData data)
		{
		}

		[Token(Token = "0x6001DF5")]
		[Address(RVA = "0x1E32F60", Offset = "0x1E32F60", VA = "0x1E32F60")]
		public PlayFabricSoundNC()
		{
		}
	}
	[Token(Token = "0x200055E")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x9784B8", Offset = "0x9784B8")]
	public class PlayFabricSoundConnectedNC : FlowControlNode
	{
		[Token(Token = "0x2000F8A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BC50", Offset = "0x97BC50")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4002470")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ValueInput<string> soundEventName;

			[Token(Token = "0x4002471")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public PlayFabricSoundConnectedNC <>4__this;

			[Token(Token = "0x4002472")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ValueInput<string> soundParameterName;

			[Token(Token = "0x4002473")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ValueInput<EventAction> eventAction;

			[Token(Token = "0x4002474")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ValueInput<GameObject> soundEmitter;

			[Token(Token = "0x4002475")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public ValueInput<bool> playOnlyOnce;

			[Token(Token = "0x4002476")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public FlowOutput flowOut;

			[Token(Token = "0x6003447")]
			[Address(RVA = "0x1E32B00", Offset = "0x1E32B00", VA = "0x1E32B00")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6003448")]
			[Address(RVA = "0x1E32B10", Offset = "0x1E32B10", VA = "0x1E32B10")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x400180B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool m_hasPlayed;

		[Token(Token = "0x6001DF6")]
		[Address(RVA = "0x1E328F4", Offset = "0x1E328F4", VA = "0x1E328F4", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001DF7")]
		[Address(RVA = "0x1E32B08", Offset = "0x1E32B08", VA = "0x1E32B08")]
		public PlayFabricSoundConnectedNC()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200055F")]
	public class FabricNodeVoiceData
	{
		[Token(Token = "0x400180C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string soundEventName;

		[Token(Token = "0x400180D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EventAction eventAction;

		[Token(Token = "0x400180E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool playOnlyOnce;

		[Token(Token = "0x400180F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9826A4", Offset = "0x9826A4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9826A4", Offset = "0x9826A4")]
		public int priority;

		[Token(Token = "0x6001DF8")]
		[Address(RVA = "0xBD1510", Offset = "0xBD1510", VA = "0xBD1510")]
		public FabricNodeVoiceData()
		{
		}
	}
	[Token(Token = "0x2000560")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x9784F0", Offset = "0x9784F0")]
	public class PlayFabricVoiceNC : CallableActionNode<FabricNodeVoiceData>
	{
		[Token(Token = "0x4001810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_hasPlayed;

		[Token(Token = "0x6001DF9")]
		[Address(RVA = "0x1E333F8", Offset = "0x1E333F8", VA = "0x1E333F8", Slot = "12")]
		public override void Invoke(FabricNodeVoiceData data)
		{
		}

		[Token(Token = "0x6001DFA")]
		[Address(RVA = "0x1E334DC", Offset = "0x1E334DC", VA = "0x1E334DC")]
		public PlayFabricVoiceNC()
		{
		}
	}
	[Token(Token = "0x2000561")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x978528", Offset = "0x978528")]
	public class PlayFabricVoiceConnectedNC : FlowControlNode
	{
		[Token(Token = "0x2000F8B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BC60", Offset = "0x97BC60")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4002477")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ValueInput<string> soundEventName;

			[Token(Token = "0x4002478")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public PlayFabricVoiceConnectedNC <>4__this;

			[Token(Token = "0x4002479")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ValueInput<EventAction> eventAction;

			[Token(Token = "0x400247A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ValueInput<int> priority;

			[Token(Token = "0x400247B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ValueInput<bool> playOnlyOnce;

			[Token(Token = "0x400247C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public FlowOutput flowOut;

			[Token(Token = "0x400247D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public FlowOutput flowSkipped;

			[Token(Token = "0x6003449")]
			[Address(RVA = "0x1E331B4", Offset = "0x1E331B4", VA = "0x1E331B4")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x600344A")]
			[Address(RVA = "0x1E331C4", Offset = "0x1E331C4", VA = "0x1E331C4")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x4001811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool m_hasPlayed;

		[Token(Token = "0x6001DFB")]
		[Address(RVA = "0x1E32FB0", Offset = "0x1E32FB0", VA = "0x1E32FB0", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001DFC")]
		[Address(RVA = "0x1E331BC", Offset = "0x1E331BC", VA = "0x1E331BC")]
		public PlayFabricVoiceConnectedNC()
		{
		}
	}
	[Token(Token = "0x2000562")]
	public class PlayParticleSystemsOverFrames : FlowControlNode
	{
		[Token(Token = "0x2000F8C")]
		internal class ParticleSystemsOverFramesHelper : MonoBehaviour
		{
			[Token(Token = "0x200100C")]
			internal delegate void OnFinishPlayingParticleSystems();

			[Token(Token = "0x200100D")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97C0C0", Offset = "0x97C0C0")]
			private sealed class <playParticlesOverFramesInternal>d__5 : IEnumerator<object>, IEnumerator, IDisposable
			{
				[Token(Token = "0x40025CE")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private int <>1__state;

				[Token(Token = "0x40025CF")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private object <>2__current;

				[Token(Token = "0x40025D0")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public int framesInBetween;

				[Token(Token = "0x40025D1")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public ParticleSystem[] particleSystems;

				[Token(Token = "0x40025D2")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				public bool withChildren;

				[Token(Token = "0x40025D3")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
				public OnFinishPlayingParticleSystems onFinishedPlayingParticleSystems;

				[Token(Token = "0x40025D4")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
				private int <i>5__2;

				[Token(Token = "0x40025D5")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
				private int <j>5__3;

				[Token(Token = "0x17000445")]
				private object System.Collections.Generic.IEnumerator<System.Object>.Current
				{
					[Token(Token = "0x60035D4")]
					[Address(RVA = "0x1E341E8", Offset = "0x1E341E8", VA = "0x1E341E8", Slot = "4")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x17000446")]
				private object System.Collections.IEnumerator.Current
				{
					[Token(Token = "0x60035D6")]
					[Address(RVA = "0x1E34258", Offset = "0x1E34258", VA = "0x1E34258", Slot = "7")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x60035D1")]
				[Address(RVA = "0x1E33C68", Offset = "0x1E33C68", VA = "0x1E33C68")]
				[DebuggerHidden]
				public <playParticlesOverFramesInternal>d__5(int <>1__state)
				{
				}

				[Token(Token = "0x60035D2")]
				[Address(RVA = "0x1E33CA0", Offset = "0x1E33CA0", VA = "0x1E33CA0", Slot = "5")]
				[DebuggerHidden]
				private void System.IDisposable.Dispose()
				{
				}

				[Token(Token = "0x60035D3")]
				[Address(RVA = "0x1E33CA4", Offset = "0x1E33CA4", VA = "0x1E33CA4", Slot = "6")]
				private bool MoveNext()
				{
					return default(bool);
				}

				[Token(Token = "0x60035D5")]
				[Address(RVA = "0x1E341F0", Offset = "0x1E341F0", VA = "0x1E341F0", Slot = "8")]
				[DebuggerHidden]
				private void System.Collections.IEnumerator.Reset()
				{
				}
			}

			[Token(Token = "0x400247E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static ParticleSystemsOverFramesHelper s_instance;

			[Token(Token = "0x17000406")]
			public static ParticleSystemsOverFramesHelper instance
			{
				[Token(Token = "0x600344B")]
				[Address(RVA = "0x1E335CC", Offset = "0x1E335CC", VA = "0x1E335CC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600344C")]
			[Address(RVA = "0x1E33B60", Offset = "0x1E33B60", VA = "0x1E33B60")]
			internal void PlayParticlesOverFrames(ParticleSystem[] particleSystems, int framesInBetween, bool withChildren, OnFinishPlayingParticleSystems onFinishedPlayingParticleSystems)
			{
			}

			[Token(Token = "0x600344D")]
			[Address(RVA = "0x1E33B90", Offset = "0x1E33B90", VA = "0x1E33B90")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98BFEC", Offset = "0x98BFEC")]
			private IEnumerator playParticlesOverFramesInternal(ParticleSystem[] particleSystems, int framesInBetween, bool withChildren, OnFinishPlayingParticleSystems onFinishedPlayingParticleSystems)
			{
				return null;
			}

			[Token(Token = "0x600344E")]
			[Address(RVA = "0x1E33C94", Offset = "0x1E33C94", VA = "0x1E33C94")]
			public ParticleSystemsOverFramesHelper()
			{
			}
		}

		[Token(Token = "0x2000F8D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BC70", Offset = "0x97BC70")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x400247F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlayParticleSystemsOverFrames <>4__this;

			[Token(Token = "0x4002480")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ValueInput<ParticleSystem[]> particleSystems;

			[Token(Token = "0x4002481")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ValueInput<int> numFramesPerParticleSystems;

			[Token(Token = "0x4002482")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ValueInput<bool> withChildren;

			[Token(Token = "0x4002483")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public FlowOutput outputContinue;

			[Token(Token = "0x6003450")]
			[Address(RVA = "0x1E338C0", Offset = "0x1E338C0", VA = "0x1E338C0")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6003451")]
			[Address(RVA = "0x1E33930", Offset = "0x1E33930", VA = "0x1E33930")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x4001812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private FlowOutput m_outputDone;

		[Token(Token = "0x4001813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private ParticleSystemsOverFramesHelper m_helper;

		[Token(Token = "0x6001DFD")]
		[Address(RVA = "0x1E3352C", Offset = "0x1E3352C", VA = "0x1E3352C", Slot = "26")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6001DFE")]
		[Address(RVA = "0x1E33704", Offset = "0x1E33704", VA = "0x1E33704", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001DFF")]
		[Address(RVA = "0x1E338C8", Offset = "0x1E338C8", VA = "0x1E338C8")]
		private void onFinishPlayingParticleSystems()
		{
		}

		[Token(Token = "0x6001E00")]
		[Address(RVA = "0x1E33928", Offset = "0x1E33928", VA = "0x1E33928")]
		public PlayParticleSystemsOverFrames()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000563")]
	public class SoundData
	{
		[Token(Token = "0x4001814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string soundIdName;

		[Token(Token = "0x4001815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject soundLocation;

		[Token(Token = "0x6001E01")]
		[Address(RVA = "0x1E476D4", Offset = "0x1E476D4", VA = "0x1E476D4")]
		public SoundData()
		{
		}
	}
	[Token(Token = "0x2000564")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x978560", Offset = "0x978560")]
	public class PlaySoundNC : CallableActionNode<SoundData>
	{
		[Token(Token = "0x6001E02")]
		[Address(RVA = "0x1E342A0", Offset = "0x1E342A0", VA = "0x1E342A0", Slot = "12")]
		public override void Invoke(SoundData data)
		{
		}

		[Token(Token = "0x6001E03")]
		[Address(RVA = "0x1E34320", Offset = "0x1E34320", VA = "0x1E34320")]
		public PlaySoundNC()
		{
		}
	}
	[Token(Token = "0x2000565")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x978598", Offset = "0x978598")]
	public class PlayVfxNC : CallableActionNode<VfxData>
	{
		[Token(Token = "0x6001E04")]
		[Address(RVA = "0x1E34370", Offset = "0x1E34370", VA = "0x1E34370", Slot = "12")]
		public override void Invoke(VfxData data)
		{
		}

		[Token(Token = "0x6001E05")]
		[Address(RVA = "0x1E34530", Offset = "0x1E34530", VA = "0x1E34530")]
		private void playEffect(Transform effect, bool play)
		{
		}

		[Token(Token = "0x6001E06")]
		[Address(RVA = "0x1E34648", Offset = "0x1E34648", VA = "0x1E34648")]
		private void destroyEffect(Transform effect, float ttl = -1f)
		{
		}

		[Token(Token = "0x6001E07")]
		[Address(RVA = "0x1E3477C", Offset = "0x1E3477C", VA = "0x1E3477C")]
		public PlayVfxNC()
		{
		}
	}
	[Token(Token = "0x2000566")]
	public class PositionVillainNC : CallableActionNode<LevelProgressTracker>
	{
		[Token(Token = "0x6001E08")]
		[Address(RVA = "0x1E3AFD8", Offset = "0x1E3AFD8", VA = "0x1E3AFD8", Slot = "12")]
		[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x988D20", Offset = "0x988D20")]
		public override void Invoke(LevelProgressTracker progressTracker)
		{
		}

		[Token(Token = "0x6001E09")]
		[Address(RVA = "0x1E3B008", Offset = "0x1E3B008", VA = "0x1E3B008")]
		public PositionVillainNC()
		{
		}
	}
	[Token(Token = "0x2000567")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x9785D0", Offset = "0x9785D0")]
	public class RecenterPlayerNC : FlowControlNode
	{
		[Token(Token = "0x2000F8E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BC80", Offset = "0x97BC80")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4002484")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FlowOutput output;

			[Token(Token = "0x6003452")]
			[Address(RVA = "0x1E3B79C", Offset = "0x1E3B79C", VA = "0x1E3B79C")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6003453")]
			[Address(RVA = "0x1E3B7AC", Offset = "0x1E3B7AC", VA = "0x1E3B7AC")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x6001E0A")]
		[Address(RVA = "0x1E3B6B8", Offset = "0x1E3B6B8", VA = "0x1E3B6B8", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001E0B")]
		[Address(RVA = "0x1E3B7A4", Offset = "0x1E3B7A4", VA = "0x1E3B7A4")]
		public RecenterPlayerNC()
		{
		}
	}
	[Token(Token = "0x2000568")]
	public class ResetCompletionStringToZero : FlowControlNode
	{
		[Token(Token = "0x2000F8F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BC90", Offset = "0x97BC90")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4002485")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ValueInput<string> textInput;

			[Token(Token = "0x4002486")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FlowOutput flowOut;

			[Token(Token = "0x6003454")]
			[Address(RVA = "0x1E3C070", Offset = "0x1E3C070", VA = "0x1E3C070")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6003455")]
			[Address(RVA = "0x1E3C080", Offset = "0x1E3C080", VA = "0x1E3C080")]
			internal string <RegisterPorts>b__0()
			{
				return null;
			}

			[Token(Token = "0x6003456")]
			[Address(RVA = "0x1E3C1E0", Offset = "0x1E3C1E0", VA = "0x1E3C1E0")]
			internal void <RegisterPorts>b__1(Flow f)
			{
			}
		}

		[Token(Token = "0x6001E0C")]
		[Address(RVA = "0x1E3BEF8", Offset = "0x1E3BEF8", VA = "0x1E3BEF8", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001E0D")]
		[Address(RVA = "0x1E3C078", Offset = "0x1E3C078", VA = "0x1E3C078")]
		public ResetCompletionStringToZero()
		{
		}
	}
	[Token(Token = "0x2000569")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x978608", Offset = "0x978608")]
	public class ResetInteractionNC : FlowControlNode
	{
		[Token(Token = "0x2000F90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BCA0", Offset = "0x97BCA0")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4002487")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ResetInteractionNC <>4__this;

			[Token(Token = "0x4002488")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FlowOutput flowOut;

			[Token(Token = "0x6003457")]
			[Address(RVA = "0x1E3C364", Offset = "0x1E3C364", VA = "0x1E3C364")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6003458")]
			[Address(RVA = "0x1E3C374", Offset = "0x1E3C374", VA = "0x1E3C374")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x4001816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public ValueInput<InteractionReceiver> interaction;

		[Token(Token = "0x6001E0E")]
		[Address(RVA = "0x1E3C248", Offset = "0x1E3C248", VA = "0x1E3C248", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001E0F")]
		[Address(RVA = "0x1E3C36C", Offset = "0x1E3C36C", VA = "0x1E3C36C")]
		public ResetInteractionNC()
		{
		}
	}
	[Token(Token = "0x200056A")]
	public class SetCurrentSaveSlotNC : FlowControlNode
	{
		[Token(Token = "0x2000F91")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BCB0", Offset = "0x97BCB0")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4002489")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ValueInput<int> intInput;

			[Token(Token = "0x400248A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FlowOutput output;

			[Token(Token = "0x6003459")]
			[Address(RVA = "0x1E4004C", Offset = "0x1E4004C", VA = "0x1E4004C")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x600345A")]
			[Address(RVA = "0x1E4005C", Offset = "0x1E4005C", VA = "0x1E4005C")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x6001E10")]
		[Address(RVA = "0x1E3FF30", Offset = "0x1E3FF30", VA = "0x1E3FF30", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001E11")]
		[Address(RVA = "0x1E40054", Offset = "0x1E40054", VA = "0x1E40054")]
		public SetCurrentSaveSlotNC()
		{
		}
	}
	[Token(Token = "0x200056B")]
	public class SaveAllNC : FlowControlNode
	{
		[Token(Token = "0x2000F92")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BCC0", Offset = "0x97BCC0")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x400248B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FlowOutput output;

			[Token(Token = "0x600345B")]
			[Address(RVA = "0x1E3D200", Offset = "0x1E3D200", VA = "0x1E3D200")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x600345C")]
			[Address(RVA = "0x1E3D210", Offset = "0x1E3D210", VA = "0x1E3D210")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x6001E12")]
		[Address(RVA = "0x1E3D11C", Offset = "0x1E3D11C", VA = "0x1E3D11C", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001E13")]
		[Address(RVA = "0x1E3D208", Offset = "0x1E3D208", VA = "0x1E3D208")]
		public SaveAllNC()
		{
		}
	}
	[Token(Token = "0x200056C")]
	public class SaveCurrentSlotNC : FlowControlNode
	{
		[Token(Token = "0x2000F93")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BCD0", Offset = "0x97BCD0")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x400248C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FlowOutput output;

			[Token(Token = "0x600345D")]
			[Address(RVA = "0x1E3D424", Offset = "0x1E3D424", VA = "0x1E3D424")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x600345E")]
			[Address(RVA = "0x1E3D434", Offset = "0x1E3D434", VA = "0x1E3D434")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x6001E14")]
		[Address(RVA = "0x1E3D340", Offset = "0x1E3D340", VA = "0x1E3D340", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001E15")]
		[Address(RVA = "0x1E3D42C", Offset = "0x1E3D42C", VA = "0x1E3D42C")]
		public SaveCurrentSlotNC()
		{
		}
	}
	[Token(Token = "0x200056D")]
	public class SavePersonaNC : FlowControlNode
	{
		[Token(Token = "0x2000F94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BCE0", Offset = "0x97BCE0")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x400248D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FlowOutput output;

			[Token(Token = "0x600345F")]
			[Address(RVA = "0x1E3F010", Offset = "0x1E3F010", VA = "0x1E3F010")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6003460")]
			[Address(RVA = "0x1E3F020", Offset = "0x1E3F020", VA = "0x1E3F020")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x6001E16")]
		[Address(RVA = "0x1E3EF2C", Offset = "0x1E3EF2C", VA = "0x1E3EF2C", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001E17")]
		[Address(RVA = "0x1E3F018", Offset = "0x1E3F018", VA = "0x1E3F018")]
		public SavePersonaNC()
		{
		}
	}
	[Token(Token = "0x200056E")]
	public class LoadSaveDataNC : FlowControlNode
	{
		[Token(Token = "0x2000F95")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BCF0", Offset = "0x97BCF0")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x400248E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FlowOutput output;

			[Token(Token = "0x6003461")]
			[Address(RVA = "0x1E5F054", Offset = "0x1E5F054", VA = "0x1E5F054")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6003462")]
			[Address(RVA = "0x1E5F064", Offset = "0x1E5F064", VA = "0x1E5F064")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x6001E18")]
		[Address(RVA = "0x1E5EF70", Offset = "0x1E5EF70", VA = "0x1E5EF70", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001E19")]
		[Address(RVA = "0x1E5F05C", Offset = "0x1E5F05C", VA = "0x1E5F05C")]
		public LoadSaveDataNC()
		{
		}
	}
	[Token(Token = "0x200056F")]
	public class DeleteSaveSlotNC : FlowControlNode
	{
		[Token(Token = "0x2000F96")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BD00", Offset = "0x97BD00")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x400248F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ValueInput<int> intInput;

			[Token(Token = "0x4002490")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FlowOutput output;

			[Token(Token = "0x6003463")]
			[Address(RVA = "0xBC7660", Offset = "0xBC7660", VA = "0xBC7660")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6003464")]
			[Address(RVA = "0xBC7670", Offset = "0xBC7670", VA = "0xBC7670")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x6001E1A")]
		[Address(RVA = "0xBC7544", Offset = "0xBC7544", VA = "0xBC7544", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001E1B")]
		[Address(RVA = "0xBC7668", Offset = "0xBC7668", VA = "0xBC7668")]
		public DeleteSaveSlotNC()
		{
		}
	}
	[Token(Token = "0x2000570")]
	public class RefreshNumAnimalsFoundNC : FlowControlNode
	{
		[Token(Token = "0x2000F97")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BD10", Offset = "0x97BD10")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4002491")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ValueInput<bool> includeAllWorlds;

			[Token(Token = "0x4002492")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public RefreshNumAnimalsFoundNC <>4__this;

			[Token(Token = "0x4002493")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ValueInput<SaveManager.DioramaWorlds> worldToSelect;

			[Token(Token = "0x4002494")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public FlowOutput flowOut;

			[Token(Token = "0x6003465")]
			[Address(RVA = "0x1E3BBB8", Offset = "0x1E3BBB8", VA = "0x1E3BBB8")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6003466")]
			[Address(RVA = "0x1E3BC88", Offset = "0x1E3BC88", VA = "0x1E3BC88")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x4001817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private SaveManager m_saveManager;

		[Token(Token = "0x6001E1C")]
		[Address(RVA = "0x1E3B888", Offset = "0x1E3B888", VA = "0x1E3B888", Slot = "26")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6001E1D")]
		[Address(RVA = "0x1E3BA54", Offset = "0x1E3BA54", VA = "0x1E3BA54", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001E1E")]
		[Address(RVA = "0x1E3BBC0", Offset = "0x1E3BBC0", VA = "0x1E3BBC0")]
		private void refreshGivenWorld(SaveManager.DioramaWorlds worldType)
		{
		}

		[Token(Token = "0x6001E1F")]
		[Address(RVA = "0x1E3BC80", Offset = "0x1E3BC80", VA = "0x1E3BC80")]
		public RefreshNumAnimalsFoundNC()
		{
		}
	}
	[Token(Token = "0x2000571")]
	public class SeasonalEventSwitchNC : FlowControlNode
	{
		[Token(Token = "0x2000F98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BD20", Offset = "0x97BD20")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4002495")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FlowOutput noEvent;

			[Token(Token = "0x6003467")]
			[Address(RVA = "0x1E3F9D4", Offset = "0x1E3F9D4", VA = "0x1E3F9D4")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6003468")]
			[Address(RVA = "0x1E3F9E4", Offset = "0x1E3F9E4", VA = "0x1E3F9E4")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x6001E20")]
		[Address(RVA = "0x1E3F8D4", Offset = "0x1E3F8D4", VA = "0x1E3F8D4", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001E21")]
		[Address(RVA = "0x1E3F9DC", Offset = "0x1E3F9DC", VA = "0x1E3F9DC")]
		public SeasonalEventSwitchNC()
		{
		}
	}
	[Token(Token = "0x2000572")]
	public class SetCoinDataNC : FlowControlNode
	{
		[Token(Token = "0x2000F99")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BD30", Offset = "0x97BD30")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4002496")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ValueInput<SaveManager.DioramaWorlds> world;

			[Token(Token = "0x4002497")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ValueInput<DioramaWorld.CoinKey> coinKey;

			[Token(Token = "0x4002498")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ValueInput<bool> isCoinFound;

			[Token(Token = "0x4002499")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public FlowOutput output;

			[Token(Token = "0x6003469")]
			[Address(RVA = "0x1E3FCD4", Offset = "0x1E3FCD4", VA = "0x1E3FCD4")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x600346A")]
			[Address(RVA = "0x1E3FCE4", Offset = "0x1E3FCE4", VA = "0x1E3FCE4")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x6001E22")]
		[Address(RVA = "0x1E3FB48", Offset = "0x1E3FB48", VA = "0x1E3FB48", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001E23")]
		[Address(RVA = "0x1E3FCDC", Offset = "0x1E3FCDC", VA = "0x1E3FCDC")]
		public SetCoinDataNC()
		{
		}
	}
	[Token(Token = "0x2000573")]
	public abstract class SetDioramaData<T> : FlowControlNode where T : SetDioramaData<T>.DataToSet
	{
		[Token(Token = "0x2000F9A")]
		public abstract class DataToSet
		{
			[Token(Token = "0x400249A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public DioramaData.ValueType m_valueType;

			[Token(Token = "0x400249B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[HideInInspector]
			public int m_keyToSet;

			[Token(Token = "0x400249C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int m_intValue;

			[Token(Token = "0x400249D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float m_floatValue;

			[Token(Token = "0x400249E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string m_stringValue;

			[Token(Token = "0x400249F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public long m_longValue;

			[Token(Token = "0x600346B")]
			protected DataToSet()
			{
			}
		}

		[Token(Token = "0x2000F9B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BD40", Offset = "0x97BD40")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x40024A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SaveManager.DioramaWorlds dioramaWorld;

			[Token(Token = "0x40024A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SetDioramaData<T> <>4__this;

			[Token(Token = "0x40024A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FlowOutput output;

			[Token(Token = "0x600346C")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x600346D")]
			internal void <AddCommonInOutputs>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x4001818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected ValueInput<T[]> m_dataToSet;

		[Token(Token = "0x6001E24")]
		protected void ResolveValuesFromKeys(DioramaData diorama)
		{
		}

		[Token(Token = "0x6001E25")]
		protected void AddCommonInOutputs(SaveManager.DioramaWorlds dioramaWorld)
		{
		}

		[Token(Token = "0x6001E26")]
		protected abstract void SetInheritedKeyValue<T>(T data, int index) where T : SetDioramaData<T>.DataToSet;

		[Token(Token = "0x6001E27")]
		protected SetDioramaData()
		{
		}
	}
	[Token(Token = "0x2000574")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x978640", Offset = "0x978640")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x978640", Offset = "0x978640")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x978640", Offset = "0x978640")]
	public class SetChristmasDataNC : SetDioramaData<SetChristmasDataNC.DataToSetChristmas>
	{
		[Token(Token = "0x2000F9C")]
		public class DataToSetChristmas : DataToSet
		{
			[Token(Token = "0x40024A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ChristmasData.ChristmasKeys m_key;

			[Token(Token = "0x600346E")]
			[Address(RVA = "0x1E3FAF0", Offset = "0x1E3FAF0", VA = "0x1E3FAF0")]
			public DataToSetChristmas()
			{
			}
		}

		[Token(Token = "0x6001E28")]
		[Address(RVA = "0x1E3FA4C", Offset = "0x1E3FA4C", VA = "0x1E3FA4C", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001E29")]
		protected override void SetInheritedKeyValue<T>(T data, int index)
		{
		}

		[Token(Token = "0x6001E2A")]
		[Address(RVA = "0x1E3FAA0", Offset = "0x1E3FAA0", VA = "0x1E3FAA0")]
		public SetChristmasDataNC()
		{
		}
	}
	[Token(Token = "0x2000575")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x9786C8", Offset = "0x9786C8")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x9786C8", Offset = "0x9786C8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9786C8", Offset = "0x9786C8")]
	public class SetHubRoomDataNC : SetDioramaData<SetHubRoomDataNC.DataToSetHubRoom>
	{
		[Token(Token = "0x2000F9D")]
		public class DataToSetHubRoom : DataToSet
		{
			[Token(Token = "0x40024A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public HubRoomData.HubRoomKeys m_key;

			[Token(Token = "0x600346F")]
			[Address(RVA = "0x1E40A98", Offset = "0x1E40A98", VA = "0x1E40A98")]
			public DataToSetHubRoom()
			{
			}
		}

		[Token(Token = "0x6001E2B")]
		[Address(RVA = "0x1E409F4", Offset = "0x1E409F4", VA = "0x1E409F4", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001E2C")]
		protected override void SetInheritedKeyValue<T>(T data, int index)
		{
		}

		[Token(Token = "0x6001E2D")]
		[Address(RVA = "0x1E40A48", Offset = "0x1E40A48", VA = "0x1E40A48")]
		public SetHubRoomDataNC()
		{
		}
	}
	[Token(Token = "0x2000576")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x978750", Offset = "0x978750")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x978750", Offset = "0x978750")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x978750", Offset = "0x978750")]
	public class SetDioramaOneDataNC : SetDioramaData<SetDioramaOneDataNC.DataToSetDioramaOne>
	{
		[Token(Token = "0x2000F9E")]
		public class DataToSetDioramaOne : DataToSet
		{
			[Token(Token = "0x40024A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public DioramaOneData.DioramaOneKeys m_key;

			[Token(Token = "0x6003470")]
			[Address(RVA = "0x1E403EC", Offset = "0x1E403EC", VA = "0x1E403EC")]
			public DataToSetDioramaOne()
			{
			}
		}

		[Token(Token = "0x6001E2E")]
		[Address(RVA = "0x1E40348", Offset = "0x1E40348", VA = "0x1E40348", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001E2F")]
		protected override void SetInheritedKeyValue<T>(T data, int index)
		{
		}

		[Token(Token = "0x6001E30")]
		[Address(RVA = "0x1E4039C", Offset = "0x1E4039C", VA = "0x1E4039C")]
		public SetDioramaOneDataNC()
		{
		}
	}
	[Token(Token = "0x2000577")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x9787D8", Offset = "0x9787D8")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x9787D8", Offset = "0x9787D8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9787D8", Offset = "0x9787D8")]
	public class SetDioramaTwoDataNC : SetDioramaData<SetDioramaTwoDataNC.DataToSetDioramaTwo>
	{
		[Token(Token = "0x2000F9F")]
		public class DataToSetDioramaTwo : DataToSet
		{
			[Token(Token = "0x40024A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public DioramaTwoData.DioramaTwoKeys m_key;

			[Token(Token = "0x6003471")]
			[Address(RVA = "0x1E405D4", Offset = "0x1E405D4", VA = "0x1E405D4")]
			public DataToSetDioramaTwo()
			{
			}
		}

		[Token(Token = "0x6001E31")]
		[Address(RVA = "0x1E40530", Offset = "0x1E40530", VA = "0x1E40530", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001E32")]
		protected override void SetInheritedKeyValue<T>(T data, int index)
		{
		}

		[Token(Token = "0x6001E33")]
		[Address(RVA = "0x1E40584", Offset = "0x1E40584", VA = "0x1E40584")]
		public SetDioramaTwoDataNC()
		{
		}
	}
	[Token(Token = "0x2000578")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x978860", Offset = "0x978860")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x978860", Offset = "0x978860")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x978860", Offset = "0x978860")]
	public class SetDioramaThreeDataNC : SetDioramaData<SetDioramaThreeDataNC.DataToSetDioramaThree>
	{
		[Token(Token = "0x2000FA0")]
		public class DataToSetDioramaThree : DataToSet
		{
			[Token(Token = "0x40024A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public DioramaThreeData.DioramaThreeKeys m_key;

			[Token(Token = "0x6003472")]
			[Address(RVA = "0x1E404E0", Offset = "0x1E404E0", VA = "0x1E404E0")]
			public DataToSetDioramaThree()
			{
			}
		}

		[Token(Token = "0x6001E34")]
		[Address(RVA = "0x1E4043C", Offset = "0x1E4043C", VA = "0x1E4043C", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001E35")]
		protected override void SetInheritedKeyValue<T>(T data, int index)
		{
		}

		[Token(Token = "0x6001E36")]
		[Address(RVA = "0x1E40490", Offset = "0x1E40490", VA = "0x1E40490")]
		public SetDioramaThreeDataNC()
		{
		}
	}
	[Token(Token = "0x2000579")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x9788E8", Offset = "0x9788E8")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x9788E8", Offset = "0x9788E8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9788E8", Offset = "0x9788E8")]
	public class SetDioramaFourDataNC : SetDioramaData<SetDioramaFourDataNC.DataToSetDioramaFour>
	{
		[Token(Token = "0x2000FA1")]
		public class DataToSetDioramaFour : DataToSet
		{
			[Token(Token = "0x40024A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public DioramaFourData.DioramaFourKeys m_key;

			[Token(Token = "0x6003473")]
			[Address(RVA = "0x1E402F8", Offset = "0x1E402F8", VA = "0x1E402F8")]
			public DataToSetDioramaFour()
			{
			}
		}

		[Token(Token = "0x6001E37")]
		[Address(RVA = "0x1E40254", Offset = "0x1E40254", VA = "0x1E40254", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001E38")]
		protected override void SetInheritedKeyValue<T>(T data, int index)
		{
		}

		[Token(Token = "0x6001E39")]
		[Address(RVA = "0x1E402A8", Offset = "0x1E402A8", VA = "0x1E402A8")]
		public SetDioramaFourDataNC()
		{
		}
	}
	[Token(Token = "0x200057A")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x978970", Offset = "0x978970")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x978970", Offset = "0x978970")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x978970", Offset = "0x978970")]
	public class SetDioramaFiveDataNC : SetDioramaData<SetDioramaFiveDataNC.DataToSetDioramaFive>
	{
		[Token(Token = "0x2000FA2")]
		public class DataToSetDioramaFive : DataToSet
		{
			[Token(Token = "0x40024A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public DioramaFiveData.DioramaFiveKeys m_key;

			[Token(Token = "0x6003474")]
			[Address(RVA = "0x1E40204", Offset = "0x1E40204", VA = "0x1E40204")]
			public DataToSetDioramaFive()
			{
			}
		}

		[Token(Token = "0x6001E3A")]
		[Address(RVA = "0x1E40160", Offset = "0x1E40160", VA = "0x1E40160", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001E3B")]
		protected override void SetInheritedKeyValue<T>(T data, int index)
		{
		}

		[Token(Token = "0x6001E3C")]
		[Address(RVA = "0x1E401B4", Offset = "0x1E401B4", VA = "0x1E401B4")]
		public SetDioramaFiveDataNC()
		{
		}
	}
	[Token(Token = "0x200057B")]
	public class SetInputLockedNC : FlowControlNode
	{
		[Token(Token = "0x2000FA3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BD50", Offset = "0x97BD50")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x40024AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SetInputLockedNC <>4__this;

			[Token(Token = "0x40024AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ValueInput<bool> setLocked;

			[Token(Token = "0x40024AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ValueInput<bool> dontLockColliders;

			[Token(Token = "0x40024AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public FlowOutput flowOut;

			[Token(Token = "0x6003475")]
			[Address(RVA = "0x1E40E6C", Offset = "0x1E40E6C", VA = "0x1E40E6C")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x6003476")]
			[Address(RVA = "0x1E40E80", Offset = "0x1E40E80", VA = "0x1E40E80")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x4001819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PlayerInputHandler s_inputHandler;

		[Token(Token = "0x400181A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static HandTracker s_handLeft;

		[Token(Token = "0x400181B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static HandTracker s_handRight;

		[Token(Token = "0x6001E3D")]
		[Address(RVA = "0x1E40AF0", Offset = "0x1E40AF0", VA = "0x1E40AF0", Slot = "26")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6001E3E")]
		[Address(RVA = "0x1E40AF4", Offset = "0x1E40AF4", VA = "0x1E40AF4")]
		private void securityCheckAndFindMissingReferences()
		{
		}

		[Token(Token = "0x6001E3F")]
		[Address(RVA = "0x1E40D08", Offset = "0x1E40D08", VA = "0x1E40D08", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001E40")]
		[Address(RVA = "0x1E40E74", Offset = "0x1E40E74", VA = "0x1E40E74")]
		public SetInputLockedNC()
		{
		}
	}
	[Token(Token = "0x200057C")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x9789F8", Offset = "0x9789F8")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x9789F8", Offset = "0x9789F8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9789F8", Offset = "0x9789F8")]
	public class SetInteractionSettingsNC : FlowControlNode
	{
		[Token(Token = "0x2000FA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BD60", Offset = "0x97BD60")]
		private sealed class <>c__DisplayClass12_0
		{
			[Token(Token = "0x40024AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SetInteractionSettingsNC <>4__this;

			[Token(Token = "0x40024AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FlowOutput output;

			[Token(Token = "0x6003477")]
			[Address(RVA = "0x1E41648", Offset = "0x1E41648", VA = "0x1E41648")]
			public <>c__DisplayClass12_0()
			{
			}

			[Token(Token = "0x6003478")]
			[Address(RVA = "0x1E41658", Offset = "0x1E41658", VA = "0x1E41658")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x400181C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9826F8", Offset = "0x9826F8")]
		public ValueInput<Interactible> interactible;

		[Token(Token = "0x400181D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public ValueInput<bool> canBeInteractedWith;

		[Token(Token = "0x400181E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public ValueInput<bool> unparentOnPickup;

		[Token(Token = "0x400181F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public ValueInput<bool> makeNonKinematicOnRelease;

		[Token(Token = "0x4001820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public ValueInput<bool> supportsAutoScaling;

		[Token(Token = "0x4001821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public ValueInput<bool> overridePositionAndRotation;

		[Token(Token = "0x4001822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public ValueInput<bool> triggersHapticPulse;

		[Token(Token = "0x4001823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x982730", Offset = "0x982730")]
		public ValueInput<Transform> secondaryAnchor;

		[Token(Token = "0x4001824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public ValueInput<Transform> primaryAnchor;

		[Token(Token = "0x4001825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public ValueInput<bool> alignWithWorldUp;

		[Token(Token = "0x4001826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public ValueInput<float> maxPrimaryAngleDeviation;

		[Token(Token = "0x4001827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public ValueInput<Transform> newParentOnRelease;

		[Token(Token = "0x6001E42")]
		[Address(RVA = "0x1E413AC", Offset = "0x1E413AC", VA = "0x1E413AC", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001E43")]
		[Address(RVA = "0x1E41650", Offset = "0x1E41650", VA = "0x1E41650")]
		public SetInteractionSettingsNC()
		{
		}
	}
	[Token(Token = "0x200057D")]
	public class SetKettleFlameEntered : FlowControlNode
	{
		[Token(Token = "0x2000FA5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BD70", Offset = "0x97BD70")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x40024B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ValueInput<Kettle> kettle;

			[Token(Token = "0x40024B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FlowOutput flowOut;

			[Token(Token = "0x6003479")]
			[Address(RVA = "0x1E41D34", Offset = "0x1E41D34", VA = "0x1E41D34")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x600347A")]
			[Address(RVA = "0x1E41D44", Offset = "0x1E41D44", VA = "0x1E41D44")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x6001E44")]
		[Address(RVA = "0x1E41C18", Offset = "0x1E41C18", VA = "0x1E41C18", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001E45")]
		[Address(RVA = "0x1E41D3C", Offset = "0x1E41D3C", VA = "0x1E41D3C")]
		public SetKettleFlameEntered()
		{
		}
	}
	[Token(Token = "0x200057E")]
	public class SetKettleIsHeatedNC : FlowControlNode
	{
		[Token(Token = "0x2000FA6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BD80", Offset = "0x97BD80")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x40024B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ValueInput<Kettle> kettle;

			[Token(Token = "0x40024B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FlowOutput flowOut;

			[Token(Token = "0x600347B")]
			[Address(RVA = "0x1E41F38", Offset = "0x1E41F38", VA = "0x1E41F38")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x600347C")]
			[Address(RVA = "0x1E41F48", Offset = "0x1E41F48", VA = "0x1E41F48")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x6001E46")]
		[Address(RVA = "0x1E41E1C", Offset = "0x1E41E1C", VA = "0x1E41E1C", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001E47")]
		[Address(RVA = "0x1E41F40", Offset = "0x1E41F40", VA = "0x1E41F40")]
		public SetKettleIsHeatedNC()
		{
		}
	}
	[Token(Token = "0x200057F")]
	public class SetKettleLeftFlame : FlowControlNode
	{
		[Token(Token = "0x2000FA7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BD90", Offset = "0x97BD90")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x40024B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ValueInput<Kettle> kettle;

			[Token(Token = "0x40024B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FlowOutput flowOut;

			[Token(Token = "0x600347D")]
			[Address(RVA = "0x1E4213C", Offset = "0x1E4213C", VA = "0x1E4213C")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x600347E")]
			[Address(RVA = "0x1E4214C", Offset = "0x1E4214C", VA = "0x1E4214C")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x6001E48")]
		[Address(RVA = "0x1E42020", Offset = "0x1E42020", VA = "0x1E42020", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001E49")]
		[Address(RVA = "0x1E42144", Offset = "0x1E42144", VA = "0x1E42144")]
		public SetKettleLeftFlame()
		{
		}
	}
	[Token(Token = "0x2000580")]
	public class SetPersonaDataNC : FlowControlNode
	{
		[Token(Token = "0x2000FA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BDA0", Offset = "0x97BDA0")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x40024B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ValueInput<PersonaSettings.PersonaKeys> dataToSet;

			[Token(Token = "0x40024B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ValueInput<int> intInput;

			[Token(Token = "0x40024B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ValueInput<float> floatInput;

			[Token(Token = "0x40024B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ValueInput<string> stringInput;

			[Token(Token = "0x40024BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ValueInput<long> longInput;

			[Token(Token = "0x40024BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public FlowOutput output;

			[Token(Token = "0x600347F")]
			[Address(RVA = "0x1E42758", Offset = "0x1E42758", VA = "0x1E42758")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6003480")]
			[Address(RVA = "0x1E42768", Offset = "0x1E42768", VA = "0x1E42768")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x6001E4A")]
		[Address(RVA = "0x1E4255C", Offset = "0x1E4255C", VA = "0x1E4255C", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001E4B")]
		[Address(RVA = "0x1E42760", Offset = "0x1E42760", VA = "0x1E42760")]
		public SetPersonaDataNC()
		{
		}
	}
	[Token(Token = "0x2000581")]
	public class SetPlayerLocationNC : FlowControlNode
	{
		[Token(Token = "0x2000FA9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BDB0", Offset = "0x97BDB0")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x40024BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SetPlayerLocationNC <>4__this;

			[Token(Token = "0x40024BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FlowOutput output;

			[Token(Token = "0x6003481")]
			[Address(RVA = "0x1E42C38", Offset = "0x1E42C38", VA = "0x1E42C38")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6003482")]
			[Address(RVA = "0x1E42C48", Offset = "0x1E42C48", VA = "0x1E42C48")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x4001828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private ValueInput<Transform> m_playerLocation;

		[Token(Token = "0x6001E4C")]
		[Address(RVA = "0x1E42A60", Offset = "0x1E42A60", VA = "0x1E42A60")]
		private Transform GetPlayerLocation()
		{
			return null;
		}

		[Token(Token = "0x6001E4D")]
		[Address(RVA = "0x1E42AC0", Offset = "0x1E42AC0", VA = "0x1E42AC0", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001E4E")]
		[Address(RVA = "0x1E42C40", Offset = "0x1E42C40", VA = "0x1E42C40")]
		public SetPlayerLocationNC()
		{
		}
	}
	[Token(Token = "0x2000582")]
	public class SetProgressNC : CallableActionNode<LevelProgressTracker>
	{
		[Token(Token = "0x4001829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool active;

		[Token(Token = "0x6001E4F")]
		[Address(RVA = "0x1E42D8C", Offset = "0x1E42D8C", VA = "0x1E42D8C", Slot = "12")]
		[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x988D58", Offset = "0x988D58")]
		public override void Invoke(LevelProgressTracker progressTracker)
		{
		}

		[Token(Token = "0x6001E50")]
		[Address(RVA = "0x1E42DCC", Offset = "0x1E42DCC", VA = "0x1E42DCC")]
		public SetProgressNC()
		{
		}
	}
	[Token(Token = "0x2000583")]
	public class SetWorldRotatorModeNC : FlowControlNode
	{
		[Serializable]
		[Token(Token = "0x2000FAA")]
		internal enum ModeToSet
		{
			[Token(Token = "0x40024BF")]
			ManualMode,
			[Token(Token = "0x40024C0")]
			AutomaticMode,
			[Token(Token = "0x40024C1")]
			Locked
		}

		[Token(Token = "0x2000FAB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BDC0", Offset = "0x97BDC0")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x40024C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ValueInput<ModeToSet> mode;

			[Token(Token = "0x40024C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ValueInput<WorldRotator> rotator;

			[Token(Token = "0x40024C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ValueInput<float> speed;

			[Token(Token = "0x40024C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public FlowOutput flowOut;

			[Token(Token = "0x6003483")]
			[Address(RVA = "0x1E4377C", Offset = "0x1E4377C", VA = "0x1E4377C")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6003484")]
			[Address(RVA = "0x1E4378C", Offset = "0x1E4378C", VA = "0x1E4378C")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x6001E51")]
		[Address(RVA = "0x1E435F0", Offset = "0x1E435F0", VA = "0x1E435F0", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001E52")]
		[Address(RVA = "0x1E43784", Offset = "0x1E43784", VA = "0x1E43784")]
		public SetWorldRotatorModeNC()
		{
		}
	}
	[Token(Token = "0x2000584")]
	public class ShouldPlayIntroNC : FlowControlNode
	{
		[Token(Token = "0x2000FAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BDD0", Offset = "0x97BDD0")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x40024C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FlowOutput playIntro;

			[Token(Token = "0x6003485")]
			[Address(RVA = "0x1E43E24", Offset = "0x1E43E24", VA = "0x1E43E24")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6003486")]
			[Address(RVA = "0x1E43E34", Offset = "0x1E43E34", VA = "0x1E43E34")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x6001E53")]
		[Address(RVA = "0x1E43D24", Offset = "0x1E43D24", VA = "0x1E43D24", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001E54")]
		[Address(RVA = "0x1E43E2C", Offset = "0x1E43E2C", VA = "0x1E43E2C")]
		public ShouldPlayIntroNC()
		{
		}
	}
	[Token(Token = "0x2000585")]
	public class ShowSubtitleNC : CallableActionNode<string>
	{
		[Token(Token = "0x400182A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private PersonaSettings m_persona;

		[Token(Token = "0x6001E55")]
		[Address(RVA = "0x1E43E9C", Offset = "0x1E43E9C", VA = "0x1E43E9C", Slot = "8")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6001E56")]
		[Address(RVA = "0x1E43F14", Offset = "0x1E43F14", VA = "0x1E43F14", Slot = "12")]
		public override void Invoke(string subtitleIdentifier)
		{
		}

		[Token(Token = "0x6001E57")]
		[Address(RVA = "0x1E43FF8", Offset = "0x1E43FF8", VA = "0x1E43FF8")]
		public ShowSubtitleNC()
		{
		}
	}
	[Token(Token = "0x2000586")]
	public class TeleportPlayerNC : CallableActionNode<Transform, bool>
	{
		[Token(Token = "0x6001E58")]
		[Address(RVA = "0xF42B44", Offset = "0xF42B44", VA = "0xF42B44", Slot = "12")]
		[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x988D90", Offset = "0x988D90")]
		public override void Invoke(Transform teleportLocation, bool shouldNotFade = false)
		{
		}

		[Token(Token = "0x6001E59")]
		[Address(RVA = "0xF42C64", Offset = "0xF42C64", VA = "0xF42C64")]
		public TeleportPlayerNC()
		{
		}
	}
	[Token(Token = "0x2000587")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0x978A80", Offset = "0x978A80")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x978A80", Offset = "0x978A80")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x978A80", Offset = "0x978A80")]
	public class TriggerAnimationConnectableDataNC : FlowControlNode
	{
		[Token(Token = "0x2000FAD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BDE0", Offset = "0x97BDE0")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x40024C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TriggerAnimationConnectableDataNC <>4__this;

			[Token(Token = "0x40024C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FlowOutput output;

			[Token(Token = "0x6003487")]
			[Address(RVA = "0xF43AB4", Offset = "0xF43AB4", VA = "0xF43AB4")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x6003488")]
			[Address(RVA = "0xF43B24", Offset = "0xF43B24", VA = "0xF43B24")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x400182B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public ValueInput<Animator> animator;

		[Token(Token = "0x400182C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public ValueInput<string> animationName;

		[Token(Token = "0x400182D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public ValueInput<ParameterType> parameterType;

		[Token(Token = "0x400182E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public ValueInput<bool> boolValue;

		[Token(Token = "0x400182F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public ValueInput<int> intValue;

		[Token(Token = "0x4001830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public ValueInput<float> floatValue;

		[Token(Token = "0x4001831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public ValueInput<bool> supportsInteractionDir;

		[Token(Token = "0x4001832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private AnimationData m_animData;

		[Token(Token = "0x6001E5A")]
		[Address(RVA = "0xF438B0", Offset = "0xF438B0", VA = "0xF438B0", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001E5B")]
		[Address(RVA = "0xF43ABC", Offset = "0xF43ABC", VA = "0xF43ABC")]
		public TriggerAnimationConnectableDataNC()
		{
		}
	}
	[Token(Token = "0x2000588")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x978B08", Offset = "0x978B08")]
	public class TriggerAnimationNC : CallableActionNode<AnimationData>
	{
		[Token(Token = "0x6001E5C")]
		[Address(RVA = "0xF43FCC", Offset = "0xF43FCC", VA = "0xF43FCC", Slot = "12")]
		public override void Invoke(AnimationData animationData)
		{
		}

		[Token(Token = "0x6001E5D")]
		[Address(RVA = "0xF43FD8", Offset = "0xF43FD8", VA = "0xF43FD8")]
		public TriggerAnimationNC()
		{
		}
	}
	[Token(Token = "0x2000589")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x978B40", Offset = "0x978B40")]
	public class TriggerInteractionEventNC : EventNode<TriggerInteractionEvent>
	{
		[Token(Token = "0x4001833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private FlowOutput outPort;

		[Token(Token = "0x6001E5E")]
		[Address(RVA = "0xF4460C", Offset = "0xF4460C", VA = "0xF4460C", Slot = "26")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6001E5F")]
		[Address(RVA = "0xF446F0", Offset = "0xF446F0", VA = "0xF446F0", Slot = "27")]
		public override void OnGraphStoped()
		{
		}

		[Token(Token = "0x6001E60")]
		[Address(RVA = "0xF44784", Offset = "0xF44784", VA = "0xF44784", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001E61")]
		[Address(RVA = "0xF447EC", Offset = "0xF447EC", VA = "0xF447EC")]
		private void OnDealInteractionDelegate()
		{
		}

		[Token(Token = "0x6001E62")]
		[Address(RVA = "0xF4484C", Offset = "0xF4484C", VA = "0xF4484C")]
		public TriggerInteractionEventNC()
		{
		}
	}
	[Token(Token = "0x200058A")]
	public class TryResetChristmasSaveNC : FlowControlNode
	{
		[Token(Token = "0x2000FAE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BDF0", Offset = "0x97BDF0")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x40024C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ValueInput<int> gameSave;

			[Token(Token = "0x40024CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public TryResetChristmasSaveNC <>4__this;

			[Token(Token = "0x40024CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FlowOutput flowOut;

			[Token(Token = "0x6003489")]
			[Address(RVA = "0xF44A60", Offset = "0xF44A60", VA = "0xF44A60")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x600348A")]
			[Address(RVA = "0xF44AB4", Offset = "0xF44AB4", VA = "0xF44AB4")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x4001834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private DateTime epochTime;

		[Token(Token = "0x6001E63")]
		[Address(RVA = "0xF44934", Offset = "0xF44934", VA = "0xF44934", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001E64")]
		[Address(RVA = "0xF44A68", Offset = "0xF44A68", VA = "0xF44A68")]
		public TryResetChristmasSaveNC()
		{
		}
	}
	[Token(Token = "0x200058B")]
	public class UnlockAchievementNC : LatentActionNode<string>
	{
		[Token(Token = "0x2000FAF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BE00", Offset = "0x97BE00")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x40024CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int achievementIdentifierId;

			[Token(Token = "0x40024CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string achievementIdentifier;

			[Token(Token = "0x40024CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool result;

			[Token(Token = "0x600348B")]
			[Address(RVA = "0xF460F8", Offset = "0xF460F8", VA = "0xF460F8")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x600348C")]
			[Address(RVA = "0xF46100", Offset = "0xF46100", VA = "0xF46100")]
			internal void <Invoke>b__0(string data, string error)
			{
			}
		}

		[Token(Token = "0x2000FB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BE10", Offset = "0x97BE10")]
		private sealed class <Invoke>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40024CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40024D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40024D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string achievementIdentifier;

			[Token(Token = "0x40024D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass3_0 <>8__1;

			[Token(Token = "0x40024D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public UnlockAchievementNC <>4__this;

			[Token(Token = "0x40024D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <cookie>5__2;

			[Token(Token = "0x17000407")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003490")]
				[Address(RVA = "0xF4658C", Offset = "0xF4658C", VA = "0xF4658C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000408")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003492")]
				[Address(RVA = "0xF465FC", Offset = "0xF465FC", VA = "0xF465FC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600348D")]
			[Address(RVA = "0xF4607C", Offset = "0xF4607C", VA = "0xF4607C")]
			[DebuggerHidden]
			public <Invoke>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x600348E")]
			[Address(RVA = "0xF4632C", Offset = "0xF4632C", VA = "0xF4632C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600348F")]
			[Address(RVA = "0xF46330", Offset = "0xF46330", VA = "0xF46330", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003491")]
			[Address(RVA = "0xF46594", Offset = "0xF46594", VA = "0xF46594", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private FlowOutput m_unlockSuccess;

		[Token(Token = "0x4001836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private FlowOutput m_unlockFail;

		[Token(Token = "0x6001E65")]
		[Address(RVA = "0xF45EF8", Offset = "0xF45EF8", VA = "0xF45EF8", Slot = "6")]
		protected override void OnRegisterPorts(FlowNode node)
		{
		}

		[Token(Token = "0x6001E66")]
		[Address(RVA = "0xF45FE4", Offset = "0xF45FE4", VA = "0xF45FE4", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x988DC8", Offset = "0x988DC8")]
		public override IEnumerator Invoke(string achievementIdentifier)
		{
			return null;
		}

		[Token(Token = "0x6001E67")]
		[Address(RVA = "0xF460A8", Offset = "0xF460A8", VA = "0xF460A8")]
		public UnlockAchievementNC()
		{
		}
	}
	[Token(Token = "0x200058C")]
	public class UpdateCoinJarCoinMeshNC : FlowControlNode
	{
		[Token(Token = "0x2000FB1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BE20", Offset = "0x97BE20")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x40024D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ValueInput<int> numCoinsFound;

			[Token(Token = "0x40024D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ValueInput<MeshRenderer[]> meshes;

			[Token(Token = "0x40024D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FlowOutput flowOut;

			[Token(Token = "0x6003493")]
			[Address(RVA = "0xF46758", Offset = "0xF46758", VA = "0xF46758")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6003494")]
			[Address(RVA = "0xF46768", Offset = "0xF46768", VA = "0xF46768")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x6001E68")]
		[Address(RVA = "0xF46604", Offset = "0xF46604", VA = "0xF46604", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001E69")]
		[Address(RVA = "0xF46760", Offset = "0xF46760", VA = "0xF46760")]
		public UpdateCoinJarCoinMeshNC()
		{
		}
	}
	[Token(Token = "0x200058D")]
	public class UpdateLocalizedUITextNC : FlowControlNode
	{
		[Token(Token = "0x2000FB2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BE30", Offset = "0x97BE30")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x40024D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FlowOutput flowOut;

			[Token(Token = "0x6003495")]
			[Address(RVA = "0xF46B2C", Offset = "0xF46B2C", VA = "0xF46B2C")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6003496")]
			[Address(RVA = "0xF46B3C", Offset = "0xF46B3C", VA = "0xF46B3C")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x6001E6A")]
		[Address(RVA = "0xF46A48", Offset = "0xF46A48", VA = "0xF46A48", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001E6B")]
		[Address(RVA = "0xF46B34", Offset = "0xF46B34", VA = "0xF46B34")]
		public UpdateLocalizedUITextNC()
		{
		}
	}
	[Token(Token = "0x200058E")]
	public class UpdateProgressNC : CallableActionNode<LevelProgressTracker>
	{
		[Token(Token = "0x4001837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string identifier;

		[Token(Token = "0x6001E6C")]
		[Address(RVA = "0xF46C78", Offset = "0xF46C78", VA = "0xF46C78", Slot = "12")]
		[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x988E2C", Offset = "0x988E2C")]
		public override void Invoke(LevelProgressTracker progressTracker)
		{
		}

		[Token(Token = "0x6001E6D")]
		[Address(RVA = "0xF46CB0", Offset = "0xF46CB0", VA = "0xF46CB0")]
		public UpdateProgressNC()
		{
		}
	}
	[Token(Token = "0x200058F")]
	public class UpdateShaderPropertyNC : CallableActionNode<Renderer, bool>
	{
		[Token(Token = "0x2000FB3")]
		public enum ShaderPropertyType
		{
			[Token(Token = "0x40024DA")]
			IntType,
			[Token(Token = "0x40024DB")]
			BoolType,
			[Token(Token = "0x40024DC")]
			FloatType,
			[Token(Token = "0x40024DD")]
			ColorType,
			[Token(Token = "0x40024DE")]
			TextureOffsetType,
			[Token(Token = "0x40024DF")]
			VectorType
		}

		[Token(Token = "0x4001838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int materialIndex;

		[Token(Token = "0x4001839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string propertyName;

		[Token(Token = "0x400183A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ShaderPropertyType propertyType;

		[Token(Token = "0x400183B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int intValue;

		[Token(Token = "0x400183C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x982768", Offset = "0x982768")]
		public bool boolValue;

		[Token(Token = "0x400183D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float floatValue;

		[Token(Token = "0x400183E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Color colorValue;

		[Token(Token = "0x400183F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector2 textureOffsetValue;

		[Token(Token = "0x4001840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Vector4 vectorValue;

		[Token(Token = "0x4001841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int m_parameterId;

		[Token(Token = "0x4001842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Material m_targetMaterial;

		[Token(Token = "0x6001E6E")]
		[Address(RVA = "0xF46D00", Offset = "0xF46D00", VA = "0xF46D00", Slot = "12")]
		[AttributeAttribute(Name = "CategoryAttribute", RVA = "0x988E64", Offset = "0x988E64")]
		public override void Invoke(Renderer renderer, bool overrideCachedMaterial)
		{
		}

		[Token(Token = "0x6001E6F")]
		[Address(RVA = "0xF46F58", Offset = "0xF46F58", VA = "0xF46F58")]
		public UpdateShaderPropertyNC()
		{
		}
	}
	[Token(Token = "0x2000590")]
	public class UpdateTextResizerNC : FlowControlNode
	{
		[Token(Token = "0x2000FB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BE40", Offset = "0x97BE40")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x40024E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UpdateTextResizerNC <>4__this;

			[Token(Token = "0x40024E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ValueInput<UITextResizer> textResizer;

			[Token(Token = "0x40024E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ValueInput<string> stringInput;

			[Token(Token = "0x40024E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public FlowOutput flowOut;

			[Token(Token = "0x6003497")]
			[Address(RVA = "0xF47180", Offset = "0xF47180", VA = "0xF47180")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6003498")]
			[Address(RVA = "0xF47190", Offset = "0xF47190", VA = "0xF47190")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x6001E70")]
		[Address(RVA = "0xF4701C", Offset = "0xF4701C", VA = "0xF4701C", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001E71")]
		[Address(RVA = "0xF47188", Offset = "0xF47188", VA = "0xF47188")]
		public UpdateTextResizerNC()
		{
		}
	}
	[Token(Token = "0x2000591")]
	public class OnTriggerProxy : MonoBehaviour
	{
		[Token(Token = "0x2000FB5")]
		public delegate void TriggerProxyDelegate(Collider other);

		[Token(Token = "0x2000FB6")]
		public enum TriggerProxyAction
		{
			[Token(Token = "0x40024E5")]
			Enter,
			[Token(Token = "0x40024E6")]
			Stay,
			[Token(Token = "0x40024E7")]
			Exit
		}

		[Token(Token = "0x4001843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TriggerProxyDelegate m_onEnterCallback;

		[Token(Token = "0x4001844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TriggerProxyDelegate m_onStayCallback;

		[Token(Token = "0x4001845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TriggerProxyDelegate m_onExitCallback;

		[Token(Token = "0x6001E72")]
		[Address(RVA = "0x1E66510", Offset = "0x1E66510", VA = "0x1E66510")]
		public void SetUpTriggerCallback(TriggerProxyAction action, TriggerProxyDelegate callback)
		{
		}

		[Token(Token = "0x6001E73")]
		[Address(RVA = "0x1E66540", Offset = "0x1E66540", VA = "0x1E66540")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001E74")]
		[Address(RVA = "0x1E66C84", Offset = "0x1E66C84", VA = "0x1E66C84")]
		private void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x6001E75")]
		[Address(RVA = "0x1E66C94", Offset = "0x1E66C94", VA = "0x1E66C94")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001E76")]
		[Address(RVA = "0x1E66CA4", Offset = "0x1E66CA4", VA = "0x1E66CA4")]
		public OnTriggerProxy()
		{
		}
	}
	[Token(Token = "0x2000592")]
	public class OutOfBoundsVolume : MonoBehaviour
	{
		[Token(Token = "0x2000FB7")]
		public class InteractibleTransform
		{
			[Token(Token = "0x40024E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Interactible interactible;

			[Token(Token = "0x40024E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Rigidbody rigidBody;

			[Token(Token = "0x40024EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RigidbodyConstraints rigidbodyConstraints;

			[Token(Token = "0x40024EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public bool isKinematic;

			[Token(Token = "0x40024EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 position;

			[Token(Token = "0x40024ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Quaternion rotation;

			[Token(Token = "0x40024EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public Vector3 scale;

			[Token(Token = "0x600349D")]
			[Address(RVA = "0x1E2C4A8", Offset = "0x1E2C4A8", VA = "0x1E2C4A8")]
			public InteractibleTransform()
			{
			}
		}

		[Token(Token = "0x4001846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<int, InteractibleTransform> interactibles;

		[Token(Token = "0x6001E77")]
		[Address(RVA = "0x1E2BFE0", Offset = "0x1E2BFE0", VA = "0x1E2BFE0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E78")]
		[Address(RVA = "0x1E2C2E4", Offset = "0x1E2C2E4", VA = "0x1E2C2E4")]
		public void AddInteractibleTransform(Interactible interactible, Rigidbody rigidBody, RigidbodyConstraints rigidbodyConstraints, bool isKinematic, Vector3 position, Quaternion rotation, Vector3 scale)
		{
		}

		[Token(Token = "0x6001E79")]
		[Address(RVA = "0x1E2C4B0", Offset = "0x1E2C4B0", VA = "0x1E2C4B0")]
		public void RemovePickUpFromDictionary(int gameObjectInstanceID)
		{
		}

		[Token(Token = "0x6001E7A")]
		[Address(RVA = "0x1E2C520", Offset = "0x1E2C520", VA = "0x1E2C520")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001E7B")]
		[Address(RVA = "0x1E2C9D0", Offset = "0x1E2C9D0", VA = "0x1E2C9D0")]
		public OutOfBoundsVolume()
		{
		}
	}
	[Token(Token = "0x2000593")]
	public class ParticleCollisionHandler : MonoBehaviour
	{
		[Token(Token = "0x2000FB8")]
		public delegate void OnParticleCollisionDelegate(GameObject other, int collisionCount);

		[Token(Token = "0x4001847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ParticleSystem m_particleSystem;

		[Token(Token = "0x4001848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<ParticleCollisionEvent> m_collisionEvents;

		[Token(Token = "0x4001849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OnParticleCollisionDelegate m_cb;

		[Token(Token = "0x400184A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_hasCb;

		[Token(Token = "0x6001E7C")]
		[Address(RVA = "0x1E2D98C", Offset = "0x1E2D98C", VA = "0x1E2D98C")]
		public void SetParticleSystem(ParticleSystem system)
		{
		}

		[Token(Token = "0x6001E7D")]
		[Address(RVA = "0x1E2D994", Offset = "0x1E2D994", VA = "0x1E2D994")]
		public void SetCollisionCallback(OnParticleCollisionDelegate cb)
		{
		}

		[Token(Token = "0x6001E7E")]
		[Address(RVA = "0x1E2D9A8", Offset = "0x1E2D9A8", VA = "0x1E2D9A8")]
		public List<ParticleCollisionEvent> GetCollisionEvents()
		{
			return null;
		}

		[Token(Token = "0x6001E7F")]
		[Address(RVA = "0x1E2D9B0", Offset = "0x1E2D9B0", VA = "0x1E2D9B0")]
		private void OnParticleCollision(GameObject other)
		{
		}

		[Token(Token = "0x6001E80")]
		[Address(RVA = "0x1E2E19C", Offset = "0x1E2E19C", VA = "0x1E2E19C")]
		public ParticleCollisionHandler()
		{
		}
	}
	[Token(Token = "0x2000594")]
	public class PearlBehaviour : Interactible
	{
		[Token(Token = "0x2000FB9")]
		public delegate void OnFirstPickUp(PearlBehaviour pearl);

		[Token(Token = "0x400184B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private OnFirstPickUp m_firstPickUpCallback;

		[Token(Token = "0x400184C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool m_hasBeenPickedUp;

		[Token(Token = "0x6001E81")]
		[Address(RVA = "0x1E2E2C4", Offset = "0x1E2E2C4", VA = "0x1E2E2C4", Slot = "10")]
		protected override void handleHandGripBegin(HandTracker hand)
		{
		}

		[Token(Token = "0x6001E82")]
		[Address(RVA = "0x1E2EA40", Offset = "0x1E2EA40", VA = "0x1E2EA40")]
		public void SetUpCallback(OnFirstPickUp callback)
		{
		}

		[Token(Token = "0x6001E83")]
		[Address(RVA = "0x1E2EA48", Offset = "0x1E2EA48", VA = "0x1E2EA48")]
		public PearlBehaviour()
		{
		}
	}
	[Token(Token = "0x2000595")]
	public class PearlTrigger : MonoBehaviour
	{
		[Token(Token = "0x2000FBA")]
		internal delegate void OnTriggerInteractionDelegate(PearlBehaviour pickUp);

		[Token(Token = "0x400184D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform goalLocation;

		[Token(Token = "0x400184E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal OnTriggerInteractionDelegate interactionCb;

		[Token(Token = "0x6001E84")]
		[Address(RVA = "0x1E2EA90", Offset = "0x1E2EA90", VA = "0x1E2EA90")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001E85")]
		[Address(RVA = "0x1E2F514", Offset = "0x1E2F514", VA = "0x1E2F514")]
		public PearlTrigger()
		{
		}
	}
	[Token(Token = "0x2000596")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x978B78", Offset = "0x978B78")]
	public class PhysicsOutOfBounds : MonoBehaviour
	{
		[Token(Token = "0x400184F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool m_ignoreYAxis;

		[Token(Token = "0x4001850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m_forcePerUnitFromOrigo;

		[Token(Token = "0x4001851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_applyForceCooldown;

		[Token(Token = "0x4001852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool m_modifyForceDependingOnMass;

		[Token(Token = "0x4001853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_cooldownEndTime;

		[Token(Token = "0x6001E86")]
		[Address(RVA = "0x1E2FF98", Offset = "0x1E2FF98", VA = "0x1E2FF98")]
		private void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x6001E87")]
		[Address(RVA = "0x1E301E4", Offset = "0x1E301E4", VA = "0x1E301E4")]
		public PhysicsOutOfBounds()
		{
		}
	}
	[Token(Token = "0x2000597")]
	public class PickupTrigger : MonoBehaviour
	{
		[Token(Token = "0x2000FBB")]
		internal delegate void OnTriggerInteractionDelegate(GameObject pickUp);

		[Token(Token = "0x4001854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform goalLocation;

		[Token(Token = "0x4001855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Interactible requiredPickup;

		[Token(Token = "0x4001856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal OnTriggerInteractionDelegate interactionCb;

		[Token(Token = "0x4001857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_hasPickup;

		[Token(Token = "0x4001858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool m_pickupInPlace;

		[Token(Token = "0x4001859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Rigidbody m_pickupRigidBody;

		[Token(Token = "0x400185A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Interactible m_pickup;

		[Token(Token = "0x400185B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_putInteractibleInPlaceTime;

		[Token(Token = "0x400185C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float m_startTime;

		[Token(Token = "0x400185D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_startTimeSet;

		[Token(Token = "0x400185E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform m_pickupTransform;

		[Token(Token = "0x400185F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 m_startPos;

		[Token(Token = "0x4001860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Quaternion m_startRot;

		[Token(Token = "0x4001861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float m_elapsed;

		[Token(Token = "0x4001862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float m_maxTimeUntilHack;

		[Token(Token = "0x6001E88")]
		[Address(RVA = "0x1E30200", Offset = "0x1E30200", VA = "0x1E30200")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001E89")]
		[Address(RVA = "0x1E303F0", Offset = "0x1E303F0", VA = "0x1E303F0")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001E8A")]
		[Address(RVA = "0x1E3051C", Offset = "0x1E3051C", VA = "0x1E3051C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E8B")]
		[Address(RVA = "0x1E30FB0", Offset = "0x1E30FB0", VA = "0x1E30FB0")]
		public PickupTrigger()
		{
		}
	}
	[Token(Token = "0x2000598")]
	public class PickupTriggerInstant : MonoBehaviour
	{
		[Token(Token = "0x2000FBC")]
		internal delegate void OnTriggerInteractionDelegate(GameObject pickUp);

		[Token(Token = "0x4001863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Interactible m_requriedPickup;

		[Token(Token = "0x4001864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform m_goalTransform;

		[Token(Token = "0x4001865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal OnTriggerInteractionDelegate interactionCb;

		[Token(Token = "0x6001E8C")]
		[Address(RVA = "0x1E313A8", Offset = "0x1E313A8", VA = "0x1E313A8")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001E8D")]
		[Address(RVA = "0x1E31DE8", Offset = "0x1E31DE8", VA = "0x1E31DE8")]
		public PickupTriggerInstant()
		{
		}
	}
	[Token(Token = "0x2000599")]
	public class PlayerHeadOutOfBounds : MonoBehaviour
	{
		[Token(Token = "0x4001866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool shouldFade;

		[Token(Token = "0x4001867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float fadeTime;

		[Token(Token = "0x4001868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform resetToPosition;

		[Token(Token = "0x4001869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float resetAfterTime;

		[Token(Token = "0x400186A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Color m_clearColor;

		[Token(Token = "0x400186B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Color m_blackColor;

		[Token(Token = "0x400186C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Collider[] m_outOfBounds;

		[Token(Token = "0x400186D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_numColliders;

		[Token(Token = "0x400186E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool m_initialized;

		[Token(Token = "0x400186F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform m_playerHead;

		[Token(Token = "0x4001870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Collider m_playerHeadCollider;

		[Token(Token = "0x4001871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private PlayerController m_playerController;

		[Token(Token = "0x4001872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool m_playerIsFaded;

		[Token(Token = "0x4001873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float m_resetToPositionTime;

		[Token(Token = "0x4001874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int m_checkForInsideBoundsFrameRate;

		[Token(Token = "0x4001875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int m_frameCount;

		[Token(Token = "0x6001E8E")]
		[Address(RVA = "0x1E38FB8", Offset = "0x1E38FB8", VA = "0x1E38FB8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E8F")]
		[Address(RVA = "0x1E39024", Offset = "0x1E39024", VA = "0x1E39024")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E90")]
		[Address(RVA = "0x1E39420", Offset = "0x1E39420", VA = "0x1E39420")]
		private void triggerExit()
		{
		}

		[Token(Token = "0x6001E91")]
		[Address(RVA = "0x1E39498", Offset = "0x1E39498", VA = "0x1E39498")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001E92")]
		[Address(RVA = "0x1E392E4", Offset = "0x1E392E4", VA = "0x1E392E4")]
		private bool isHeadIntersectingCollider(Transform head, Collider collider)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E93")]
		[Address(RVA = "0x1E395B8", Offset = "0x1E395B8", VA = "0x1E395B8")]
		public void SetCollidersEnabled(bool enabled)
		{
		}

		[Token(Token = "0x6001E94")]
		[Address(RVA = "0x1E396C4", Offset = "0x1E396C4", VA = "0x1E396C4")]
		public PlayerHeadOutOfBounds()
		{
		}
	}
	[Token(Token = "0x200059A")]
	public class PlayerMirror : MonoBehaviour
	{
		[Token(Token = "0x4001876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform head;

		[Token(Token = "0x4001877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform leftHand;

		[Token(Token = "0x4001878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform rightHand;

		[Token(Token = "0x4001879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform root;

		[Token(Token = "0x400187A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform mirrorTransform;

		[Token(Token = "0x400187B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float allowedHeadMinDistToMirror;

		[Token(Token = "0x400187C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float allowedHandMinDistToMirror;

		[Token(Token = "0x400187D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Renderer[] mirrorRenderers;

		[Token(Token = "0x400187E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_numRenderers;

		[Token(Token = "0x400187F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Quaternion m_leftRotationOffset;

		[Token(Token = "0x4001880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Quaternion m_rightRotationOffset;

		[Token(Token = "0x4001881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Quaternion m_headRotationOffset;

		[Token(Token = "0x4001882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Transform m_playerHead;

		[Token(Token = "0x4001883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Transform m_playerLeftHand;

		[Token(Token = "0x4001884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Transform m_playerRightHand;

		[Token(Token = "0x4001885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private GameObject m_playerLeftHandGO;

		[Token(Token = "0x4001886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private GameObject m_playerRightHandGO;

		[Token(Token = "0x4001887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool m_initialized;

		[Token(Token = "0x4001888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private Vector3 m_headOffset;

		[Token(Token = "0x4001889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Vector3 m_handOffset;

		[Token(Token = "0x400188A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private bool m_rendererEnabled;

		[Token(Token = "0x400188B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float mirrorZ;

		[Token(Token = "0x6001E95")]
		[Address(RVA = "0x1E39E14", Offset = "0x1E39E14", VA = "0x1E39E14")]
		private void setup()
		{
		}

		[Token(Token = "0x6001E96")]
		[Address(RVA = "0x1E3A114", Offset = "0x1E3A114", VA = "0x1E3A114")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E97")]
		[Address(RVA = "0x1E3A8E0", Offset = "0x1E3A8E0", VA = "0x1E3A8E0")]
		private static Quaternion mirrorHandRotation(Quaternion rot)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001E98")]
		[Address(RVA = "0x1E3A8EC", Offset = "0x1E3A8EC", VA = "0x1E3A8EC")]
		private static Quaternion mirrorHeadRotation(Quaternion rot)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001E99")]
		[Address(RVA = "0x1E3A1E0", Offset = "0x1E3A1E0", VA = "0x1E3A1E0")]
		private void mirrorPlayer()
		{
		}

		[Token(Token = "0x6001E9A")]
		[Address(RVA = "0x1E3A8F8", Offset = "0x1E3A8F8", VA = "0x1E3A8F8")]
		private void setHandPos(Transform playerHand, Transform hand)
		{
		}

		[Token(Token = "0x6001E9B")]
		[Address(RVA = "0x1E3AAC8", Offset = "0x1E3AAC8", VA = "0x1E3AAC8")]
		public PlayerMirror()
		{
		}
	}
	[Token(Token = "0x200059B")]
	public class RigidbodyAlarmClock : MonoBehaviour
	{
		[Token(Token = "0x2000FBD")]
		internal class TrackedRigidbody
		{
			[Token(Token = "0x40024EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Interactible m_interactible;

			[Token(Token = "0x40024F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal Rigidbody m_rigidbody;

			[Token(Token = "0x60034B2")]
			[Address(RVA = "0x1E3C730", Offset = "0x1E3C730", VA = "0x1E3C730")]
			public TrackedRigidbody()
			{
			}
		}

		[Token(Token = "0x2000FBE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BE50", Offset = "0x97BE50")]
		private sealed class <checkForSleepingRigidbodies>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40024F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40024F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40024F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RigidbodyAlarmClock <>4__this;

			[Token(Token = "0x40024F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <index>5__2;

			[Token(Token = "0x17000409")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60034B6")]
				[Address(RVA = "0x1E3CC80", Offset = "0x1E3CC80", VA = "0x1E3CC80", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700040A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60034B8")]
				[Address(RVA = "0x1E3CCF0", Offset = "0x1E3CCF0", VA = "0x1E3CCF0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60034B3")]
			[Address(RVA = "0x1E3C820", Offset = "0x1E3C820", VA = "0x1E3C820")]
			[DebuggerHidden]
			public <checkForSleepingRigidbodies>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x60034B4")]
			[Address(RVA = "0x1E3C9E4", Offset = "0x1E3C9E4", VA = "0x1E3C9E4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60034B5")]
			[Address(RVA = "0x1E3C9E8", Offset = "0x1E3C9E8", VA = "0x1E3C9E8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60034B7")]
			[Address(RVA = "0x1E3CC88", Offset = "0x1E3CC88", VA = "0x1E3CC88", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400188C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9827A0", Offset = "0x9827A0")]
		public float m_intervalBetweenChecks;

		[Token(Token = "0x400188D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9827BC", Offset = "0x9827BC")]
		public float m_acceptableDistanceToGround;

		[Token(Token = "0x400188E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LayerMask m_raycastAgainst;

		[Token(Token = "0x400188F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TrackedRigidbody[] m_trackedRigidbodies;

		[Token(Token = "0x4001890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WaitForSeconds m_waitForSecondsCheck;

		[Token(Token = "0x4001891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Coroutine m_coroutine;

		[Token(Token = "0x4001892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_hasRunStart;

		[Token(Token = "0x4001893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 m_origin;

		[Token(Token = "0x6001E9C")]
		[Address(RVA = "0x1E3C45C", Offset = "0x1E3C45C", VA = "0x1E3C45C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E9D")]
		[Address(RVA = "0x1E3C4CC", Offset = "0x1E3C4CC", VA = "0x1E3C4CC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E9E")]
		[Address(RVA = "0x1E3C7AC", Offset = "0x1E3C7AC", VA = "0x1E3C7AC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001E9F")]
		[Address(RVA = "0x1E3C7F4", Offset = "0x1E3C7F4", VA = "0x1E3C7F4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001EA0")]
		[Address(RVA = "0x1E3C738", Offset = "0x1E3C738", VA = "0x1E3C738")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x988E9C", Offset = "0x988E9C")]
		private IEnumerator checkForSleepingRigidbodies()
		{
			return null;
		}

		[Token(Token = "0x6001EA1")]
		[Address(RVA = "0x1E3C84C", Offset = "0x1E3C84C", VA = "0x1E3C84C")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001EA2")]
		[Address(RVA = "0x1E3C904", Offset = "0x1E3C904", VA = "0x1E3C904")]
		private void wakeUpRigidbody(TrackedRigidbody trackedRigidbody)
		{
		}

		[Token(Token = "0x6001EA3")]
		[Address(RVA = "0x1E3C948", Offset = "0x1E3C948", VA = "0x1E3C948")]
		public RigidbodyAlarmClock()
		{
		}
	}
	[Token(Token = "0x200059C")]
	public class SetHandActiveNC : FlowNode
	{
		[Token(Token = "0x2000FBF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BE60", Offset = "0x97BE60")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x40024F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ValueInput<GameObject> other;

			[Token(Token = "0x40024F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SetHandActiveNC <>4__this;

			[Token(Token = "0x40024F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ValueInput<float> disabledTime;

			[Token(Token = "0x40024F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public FlowOutput flowout;

			[Token(Token = "0x60034B9")]
			[Address(RVA = "0x1E40788", Offset = "0x1E40788", VA = "0x1E40788")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x60034BA")]
			[Address(RVA = "0x1E40804", Offset = "0x1E40804", VA = "0x1E40804")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x4001894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private HandDisablerHelper m_handDisabler;

		[Token(Token = "0x6001EA4")]
		[Address(RVA = "0x1E40624", Offset = "0x1E40624", VA = "0x1E40624", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001EA5")]
		[Address(RVA = "0x1E40790", Offset = "0x1E40790", VA = "0x1E40790", Slot = "26")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6001EA6")]
		[Address(RVA = "0x1E407FC", Offset = "0x1E407FC", VA = "0x1E407FC")]
		public SetHandActiveNC()
		{
		}
	}
	[Token(Token = "0x200059D")]
	public class HandDisablerHelper : MonoBehaviour
	{
		[Token(Token = "0x2000FC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BE70", Offset = "0x97BE70")]
		private sealed class <disableHandInternal>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40024F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40024FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40024FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandTracker hand;

			[Token(Token = "0x40024FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float disabledTime;

			[Token(Token = "0x1700040B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60034BE")]
				[Address(RVA = "0x1E4E474", Offset = "0x1E4E474", VA = "0x1E4E474", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700040C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60034C0")]
				[Address(RVA = "0x1E4E4E4", Offset = "0x1E4E4E4", VA = "0x1E4E4E4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60034BB")]
			[Address(RVA = "0x1E4E298", Offset = "0x1E4E298", VA = "0x1E4E298")]
			[DebuggerHidden]
			public <disableHandInternal>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x60034BC")]
			[Address(RVA = "0x1E4E2D0", Offset = "0x1E4E2D0", VA = "0x1E4E2D0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60034BD")]
			[Address(RVA = "0x1E4E2D4", Offset = "0x1E4E2D4", VA = "0x1E4E2D4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60034BF")]
			[Address(RVA = "0x1E4E47C", Offset = "0x1E4E47C", VA = "0x1E4E47C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static HandDisablerHelper s_instance;

		[Token(Token = "0x170002EC")]
		public static HandDisablerHelper Instance
		{
			[Token(Token = "0x6001EA7")]
			[Address(RVA = "0x1E4E024", Offset = "0x1E4E024", VA = "0x1E4E024")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001EA8")]
		[Address(RVA = "0x1E4E1D4", Offset = "0x1E4E1D4", VA = "0x1E4E1D4")]
		public void SetHandDisabled(HandTracker hand, float disabledTime)
		{
		}

		[Token(Token = "0x6001EA9")]
		[Address(RVA = "0x1E4E200", Offset = "0x1E4E200", VA = "0x1E4E200")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x988F00", Offset = "0x988F00")]
		private IEnumerator disableHandInternal(HandTracker hand, float disabledTime)
		{
			return null;
		}

		[Token(Token = "0x6001EAA")]
		[Address(RVA = "0x1E4E2C4", Offset = "0x1E4E2C4", VA = "0x1E4E2C4")]
		public HandDisablerHelper()
		{
		}
	}
	[Token(Token = "0x200059E")]
	public class SetRemainingAnimalsText : MonoBehaviour
	{
		[Token(Token = "0x4001896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int m_remainingPets;

		[Token(Token = "0x4001897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private UITextLocalizer m_textLocalizer;

		[Token(Token = "0x6001EAC")]
		[Address(RVA = "0x1E42E24", Offset = "0x1E42E24", VA = "0x1E42E24")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001EAD")]
		[Address(RVA = "0x1E42ECC", Offset = "0x1E42ECC", VA = "0x1E42ECC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001EAE")]
		[Address(RVA = "0x1E42EFC", Offset = "0x1E42EFC", VA = "0x1E42EFC")]
		public void SetRemainingPets(int remainingPets)
		{
		}

		[Token(Token = "0x6001EAF")]
		[Address(RVA = "0x1E42F04", Offset = "0x1E42F04", VA = "0x1E42F04")]
		public void OnTextUpdatedCallback()
		{
		}

		[Token(Token = "0x6001EB0")]
		[Address(RVA = "0x1E4312C", Offset = "0x1E4312C", VA = "0x1E4312C")]
		private string replacePrecentageSignWithNumber(string text)
		{
			return null;
		}

		[Token(Token = "0x6001EB1")]
		[Address(RVA = "0x1E43254", Offset = "0x1E43254", VA = "0x1E43254")]
		public SetRemainingAnimalsText()
		{
		}
	}
	[Token(Token = "0x200059F")]
	public class ShowerHandler : MonoBehaviour
	{
		[Token(Token = "0x4001898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9827D4", Offset = "0x9827D4")]
		public bool m_showerTurnedOnAtStart;

		[Token(Token = "0x4001899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 m_waterRaisedPosition;

		[Token(Token = "0x400189A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 m_waterEmptyPosition;

		[Token(Token = "0x400189B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m_waterTransitionDuration;

		[Token(Token = "0x400189C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m_handleCooldown;

		[Token(Token = "0x400189D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool s_isWaterRaised;

		[Token(Token = "0x400189E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 m_waterLastPos;

		[Token(Token = "0x400189F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 m_lerpStartValue;

		[Token(Token = "0x40018A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 m_lerpTargetValue;

		[Token(Token = "0x40018A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float m_lerpValue;

		[Token(Token = "0x40018A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool m_isInterpolating;

		[Token(Token = "0x40018A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_currentTransitionDuration;

		[Token(Token = "0x40018A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float m_showerHandleLockEndTime;

		[Token(Token = "0x40018A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x98280C", Offset = "0x98280C")]
		[SerializeField]
		private Animator m_shipWreckAnimator;

		[Token(Token = "0x40018A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Transform m_shipWreckWaterCollisionDetecter;

		[Token(Token = "0x40018A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Collider m_placeCorkOnShipCollider;

		[Token(Token = "0x40018A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Vector3 m_shipWreckDetecterInWaterOffset;

		[Token(Token = "0x40018A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Vector3 m_shipWreckDetectorOriginalPosition;

		[Token(Token = "0x40018AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x982878", Offset = "0x982878")]
		[SerializeField]
		private Animator m_showerAnimator;

		[Token(Token = "0x40018AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Rigidbody m_waterRigidbody;

		[Token(Token = "0x40018AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private ParticleSystem m_showerParticles;

		[Token(Token = "0x40018AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private Transform m_floatingObjectsParent;

		[Token(Token = "0x40018AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private GameObject m_vortex;

		[Token(Token = "0x40018AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private PlayerInputHandler m_playerInput;

		[Token(Token = "0x40018B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x982904", Offset = "0x982904")]
		public string m_isShowerOnName;

		[Token(Token = "0x40018B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private int m_isShowerOnId;

		[Token(Token = "0x170002ED")]
		public static bool IsWaterRaised
		{
			[Token(Token = "0x6001EB2")]
			[Address(RVA = "0x1E44048", Offset = "0x1E44048", VA = "0x1E44048")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001EB3")]
		[Address(RVA = "0x1E440B0", Offset = "0x1E440B0", VA = "0x1E440B0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001EB4")]
		[Address(RVA = "0x1E4415C", Offset = "0x1E4415C", VA = "0x1E4415C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001EB5")]
		[Address(RVA = "0x1E44130", Offset = "0x1E44130", VA = "0x1E44130")]
		private void initHashes()
		{
		}

		[Token(Token = "0x6001EB6")]
		[Address(RVA = "0x1E4446C", Offset = "0x1E4446C", VA = "0x1E4446C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001EB7")]
		[Address(RVA = "0x1E44690", Offset = "0x1E44690", VA = "0x1E44690")]
		private void internalStartInterpolation(Vector3 startVal, Vector3 targetVal, float lerpVal = 0f)
		{
		}

		[Token(Token = "0x6001EB8")]
		[Address(RVA = "0x1E446C4", Offset = "0x1E446C4", VA = "0x1E446C4")]
		private void internalStartShower()
		{
		}

		[Token(Token = "0x6001EB9")]
		[Address(RVA = "0x1E447F8", Offset = "0x1E447F8", VA = "0x1E447F8")]
		private void internalStopShower()
		{
		}

		[Token(Token = "0x6001EBA")]
		[Address(RVA = "0x1E44934", Offset = "0x1E44934", VA = "0x1E44934")]
		public void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001EBB")]
		[Address(RVA = "0x1E44A38", Offset = "0x1E44A38", VA = "0x1E44A38")]
		public void ChangeShowerState()
		{
		}

		[Token(Token = "0x6001EBC")]
		[Address(RVA = "0x1E44D20", Offset = "0x1E44D20", VA = "0x1E44D20")]
		public ShowerHandler()
		{
		}
	}
	[Token(Token = "0x20005A0")]
	public class SimpleFloatingObject : MonoBehaviour
	{
		[Token(Token = "0x40018B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x98293C", Offset = "0x98293C")]
		private Transform <Transform>k__BackingField;

		[Token(Token = "0x40018B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x98294C", Offset = "0x98294C")]
		public Transform waterTransform;

		[Token(Token = "0x40018B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x982984", Offset = "0x982984")]
		public AnimationCurveAsset interactionCurve;

		[Token(Token = "0x40018B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float amount;

		[Token(Token = "0x40018B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float duration;

		[Token(Token = "0x40018B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float m_initialYPos;

		[Token(Token = "0x40018B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector4[] m_waves;

		[Token(Token = "0x40018B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_waveSpeed;

		[Token(Token = "0x40018BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 m_binormal;

		[Token(Token = "0x40018BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float m_time;

		[Token(Token = "0x40018BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float m_interactionTimeRemaining;

		[Token(Token = "0x40018BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float m_interactionTimeElapsed;

		[Token(Token = "0x170002EE")]
		public Transform Transform
		{
			[Token(Token = "0x6001EBE")]
			[Address(RVA = "0x1E44E28", Offset = "0x1E44E28", VA = "0x1E44E28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x988F64", Offset = "0x988F64")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EBF")]
			[Address(RVA = "0x1E44E30", Offset = "0x1E44E30", VA = "0x1E44E30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x988F74", Offset = "0x988F74")]
			private set
			{
			}
		}

		[Token(Token = "0x6001EC0")]
		[Address(RVA = "0x1E44E38", Offset = "0x1E44E38", VA = "0x1E44E38")]
		private void Start()
		{
		}

		[Token(Token = "0x6001EC1")]
		[Address(RVA = "0x1E45090", Offset = "0x1E45090", VA = "0x1E45090")]
		public void OnInteraction()
		{
		}

		[Token(Token = "0x6001EC2")]
		[Address(RVA = "0x1E4511C", Offset = "0x1E4511C", VA = "0x1E4511C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001EC3")]
		[Address(RVA = "0x1E455B8", Offset = "0x1E455B8", VA = "0x1E455B8")]
		private float GerstnerWaveY(Vector4 wave, Vector3 p, float waveSpeed, ref Vector3 binormal)
		{
			return default(float);
		}

		[Token(Token = "0x6001EC4")]
		[Address(RVA = "0x1E457E8", Offset = "0x1E457E8", VA = "0x1E457E8")]
		public SimpleFloatingObject()
		{
		}
	}
	[Token(Token = "0x20005A1")]
	public class SnowmanBuilder : MonoBehaviour
	{
		[Token(Token = "0x40018BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Animator snowmanAnimator;

		[Token(Token = "0x40018BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Animator petAnimator;

		[Token(Token = "0x40018C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject snowManInteraction;

		[Token(Token = "0x40018C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject snowManHeatReceiver;

		[Token(Token = "0x40018C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Collider builderCollider;

		[Token(Token = "0x40018C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TriggerInteractionEvent onSnowmanComplete;

		[Token(Token = "0x40018C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int m_snowballCount;

		[Token(Token = "0x6001EC5")]
		[Address(RVA = "0x1E474C0", Offset = "0x1E474C0", VA = "0x1E474C0")]
		public void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001EC6")]
		[Address(RVA = "0x1E476CC", Offset = "0x1E476CC", VA = "0x1E476CC")]
		public SnowmanBuilder()
		{
		}
	}
	[Token(Token = "0x20005A2")]
	public class StonePrePearlBehaviour : Interactible
	{
		[Token(Token = "0x40018C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3 m_originalPosition;

		[Token(Token = "0x40018C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Quaternion m_originalRotation;

		[Token(Token = "0x170002EF")]
		public Vector3 OriginalPosition
		{
			[Token(Token = "0x6001EC7")]
			[Address(RVA = "0xF40110", Offset = "0xF40110", VA = "0xF40110")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002F0")]
		public Quaternion OriginalRotation
		{
			[Token(Token = "0x6001EC8")]
			[Address(RVA = "0xF4011C", Offset = "0xF4011C", VA = "0xF4011C")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x6001EC9")]
		[Address(RVA = "0xF40128", Offset = "0xF40128", VA = "0xF40128")]
		private void Start()
		{
		}

		[Token(Token = "0x6001ECA")]
		[Address(RVA = "0xF40198", Offset = "0xF40198", VA = "0xF40198")]
		public StonePrePearlBehaviour()
		{
		}
	}
	[Token(Token = "0x20005A3")]
	public class StoneToPearlTriggerBehaviour : MonoBehaviour
	{
		[Token(Token = "0x40018C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ClamThePearlMaker m_pearlMaker;

		[Token(Token = "0x40018C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool m_hasPickup;

		[Token(Token = "0x40018C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private StonePrePearlBehaviour m_stone;

		[Token(Token = "0x6001ECB")]
		[Address(RVA = "0xF40240", Offset = "0xF40240", VA = "0xF40240")]
		private void Start()
		{
		}

		[Token(Token = "0x6001ECC")]
		[Address(RVA = "0xF402B4", Offset = "0xF402B4", VA = "0xF402B4")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001ECD")]
		[Address(RVA = "0xF40370", Offset = "0xF40370", VA = "0xF40370")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001ECE")]
		[Address(RVA = "0xF4043C", Offset = "0xF4043C", VA = "0xF4043C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001ECF")]
		[Address(RVA = "0xF404B0", Offset = "0xF404B0", VA = "0xF404B0")]
		public StoneToPearlTriggerBehaviour()
		{
		}
	}
	[Token(Token = "0x20005A4")]
	public class ThePageTurner : MonoBehaviour
	{
		[Token(Token = "0x2000FC1")]
		internal enum PageStates
		{
			[Token(Token = "0x40024FE")]
			MiddleFromLeft = 1,
			[Token(Token = "0x40024FF")]
			FarRight,
			[Token(Token = "0x4002500")]
			MiddleFromRight,
			[Token(Token = "0x4002501")]
			FarLeft
		}

		[Token(Token = "0x2000FC2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BE80", Offset = "0x97BE80")]
		private sealed class <toggleColliderOnOffDelayed>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002502")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002503")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002504")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Collider col;

			[Token(Token = "0x4002505")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ThePageTurner <>4__this;

			[Token(Token = "0x1700040D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60034C4")]
				[Address(RVA = "0xF4347C", Offset = "0xF4347C", VA = "0xF4347C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700040E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60034C6")]
				[Address(RVA = "0xF434EC", Offset = "0xF434EC", VA = "0xF434EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60034C1")]
			[Address(RVA = "0xF4338C", Offset = "0xF4338C", VA = "0xF4338C")]
			[DebuggerHidden]
			public <toggleColliderOnOffDelayed>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x60034C2")]
			[Address(RVA = "0xF433D0", Offset = "0xF433D0", VA = "0xF433D0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60034C3")]
			[Address(RVA = "0xF433D4", Offset = "0xF433D4", VA = "0xF433D4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60034C5")]
			[Address(RVA = "0xF43484", Offset = "0xF43484", VA = "0xF43484", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40018CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9829BC", Offset = "0x9829BC")]
		public Animator m_spellbookAnimator;

		[Token(Token = "0x40018CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OnTriggerProxyIRE m_proxyPageLeft;

		[Token(Token = "0x40018CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public OnTriggerProxyIRE m_proxyPageRight;

		[Token(Token = "0x40018CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9829F4", Offset = "0x9829F4")]
		public float m_colliderToggleWaitTime;

		[Token(Token = "0x40018CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private WaitForSeconds m_waitForPageTurn;

		[Token(Token = "0x40018CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Collider m_colliderPageLeft;

		[Token(Token = "0x40018D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Collider m_colliderPageRight;

		[Token(Token = "0x40018D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_pageTurnParamHash;

		[Token(Token = "0x40018D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_currentPageIndex;

		[Token(Token = "0x6001ED0")]
		[Address(RVA = "0xF42CB4", Offset = "0xF42CB4", VA = "0xF42CB4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001ED1")]
		[Address(RVA = "0xF42EB0", Offset = "0xF42EB0", VA = "0xF42EB0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001ED2")]
		[Address(RVA = "0xF42D4C", Offset = "0xF42D4C", VA = "0xF42D4C")]
		private void initCallbacks()
		{
		}

		[Token(Token = "0x6001ED3")]
		[Address(RVA = "0xF42E20", Offset = "0xF42E20", VA = "0xF42E20")]
		private void getPageComponents()
		{
		}

		[Token(Token = "0x6001ED4")]
		[Address(RVA = "0xF42F5C", Offset = "0xF42F5C", VA = "0xF42F5C")]
		private void onTurnPageLeft()
		{
		}

		[Token(Token = "0x6001ED5")]
		[Address(RVA = "0xF43148", Offset = "0xF43148", VA = "0xF43148")]
		private void onTurnPageRight()
		{
		}

		[Token(Token = "0x6001ED6")]
		[Address(RVA = "0xF43064", Offset = "0xF43064", VA = "0xF43064")]
		private int getCorrectIndexOnPageTurnLeft()
		{
			return default(int);
		}

		[Token(Token = "0x6001ED7")]
		[Address(RVA = "0xF43250", Offset = "0xF43250", VA = "0xF43250")]
		private int getCorrectIndexOnPageTurnRight()
		{
			return default(int);
		}

		[Token(Token = "0x6001ED8")]
		[Address(RVA = "0xF430FC", Offset = "0xF430FC", VA = "0xF430FC")]
		private void temporarilyDisablePageColliders()
		{
		}

		[Token(Token = "0x6001ED9")]
		[Address(RVA = "0xF432F4", Offset = "0xF432F4", VA = "0xF432F4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x988F84", Offset = "0x988F84")]
		private IEnumerator toggleColliderOnOffDelayed(Collider col)
		{
			return null;
		}

		[Token(Token = "0x6001EDA")]
		[Address(RVA = "0xF433B8", Offset = "0xF433B8", VA = "0xF433B8")]
		public ThePageTurner()
		{
		}
	}
	[Token(Token = "0x20005A5")]
	public class TrainTag : MonoBehaviour
	{
		[Token(Token = "0x6001EDB")]
		[Address(RVA = "0xF437B4", Offset = "0xF437B4", VA = "0xF437B4")]
		public TrainTag()
		{
		}
	}
	[Token(Token = "0x20005A6")]
	public class UITextResizer : MonoBehaviour
	{
		[Token(Token = "0x2000FC3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BE90", Offset = "0x97BE90")]
		private sealed class <TryUpdateText>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002506")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002507")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002508")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UITextResizer <>4__this;

			[Token(Token = "0x4002509")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string text;

			[Token(Token = "0x400250A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <numChars>5__2;

			[Token(Token = "0x1700040F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60034CA")]
				[Address(RVA = "0xF45E80", Offset = "0xF45E80", VA = "0xF45E80", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000410")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60034CC")]
				[Address(RVA = "0xF45EF0", Offset = "0xF45EF0", VA = "0xF45EF0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60034C7")]
			[Address(RVA = "0xF45AE8", Offset = "0xF45AE8", VA = "0xF45AE8")]
			[DebuggerHidden]
			public <TryUpdateText>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x60034C8")]
			[Address(RVA = "0xF45BBC", Offset = "0xF45BBC", VA = "0xF45BBC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60034C9")]
			[Address(RVA = "0xF45BC0", Offset = "0xF45BC0", VA = "0xF45BC0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60034CB")]
			[Address(RVA = "0xF45E88", Offset = "0xF45E88", VA = "0xF45E88", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40018D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x982A2C", Offset = "0x982A2C")]
		public float m_maxSizeHorizontal;

		[Token(Token = "0x40018D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m_minSizeHorizontal;

		[Token(Token = "0x40018D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_sizePerCharacter;

		[Token(Token = "0x40018D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RectTransform m_rect;

		[Token(Token = "0x40018D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector2 m_newSize;

		[Token(Token = "0x40018D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int m_previousNumChars;

		[Token(Token = "0x40018D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TMP_Text m_tmpComponent;

		[Token(Token = "0x40018DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine m_tryUpdateText;

		[Token(Token = "0x40018DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private UnityEngine.WaitForEndOfFrame waitForFrame;

		[Token(Token = "0x6001EDC")]
		[Address(RVA = "0xF45944", Offset = "0xF45944", VA = "0xF45944")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001EDD")]
		[Address(RVA = "0xF459B4", Offset = "0xF459B4", VA = "0xF459B4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001EDE")]
		[Address(RVA = "0xF45AE0", Offset = "0xF45AE0", VA = "0xF45AE0")]
		public void SetCoroutine(Coroutine co)
		{
		}

		[Token(Token = "0x6001EDF")]
		[Address(RVA = "0xF45A48", Offset = "0xF45A48", VA = "0xF45A48")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x988FE8", Offset = "0x988FE8")]
		public IEnumerator TryUpdateText(string text = "")
		{
			return null;
		}

		[Token(Token = "0x6001EE0")]
		[Address(RVA = "0xF45B14", Offset = "0xF45B14", VA = "0xF45B14")]
		public UITextResizer()
		{
		}
	}
	[Token(Token = "0x20005A7")]
	public class UpdateTextureOffsetFromAnimEvent : MonoBehaviour
	{
		[Token(Token = "0x40018DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Renderer m_renderer;

		[Token(Token = "0x40018DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int m_materialIndex;

		[Token(Token = "0x40018DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string m_propertyName;

		[Token(Token = "0x40018DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector2 m_textureOffsetValue;

		[Token(Token = "0x6001EE1")]
		[Address(RVA = "0xF472EC", Offset = "0xF472EC", VA = "0xF472EC")]
		private void UpdateTextureOffset()
		{
		}

		[Token(Token = "0x6001EE2")]
		[Address(RVA = "0xF4739C", Offset = "0xF4739C", VA = "0xF4739C")]
		public UpdateTextureOffsetFromAnimEvent()
		{
		}
	}
	[Token(Token = "0x20005A8")]
	public class VolcanoHandler : MonoBehaviour
	{
		[Token(Token = "0x40018E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform m_volcanoSpitLocationsParent;

		[Token(Token = "0x40018E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_outOfBoundsVolumeTransform;

		[Token(Token = "0x40018E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform m_playerHeadTransform;

		[Token(Token = "0x6001EE3")]
		[Address(RVA = "0xF488D8", Offset = "0xF488D8", VA = "0xF488D8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001EE4")]
		[Address(RVA = "0xF48964", Offset = "0xF48964", VA = "0xF48964")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001EE5")]
		[Address(RVA = "0xF48F68", Offset = "0xF48F68", VA = "0xF48F68")]
		public void EruptVolcanoFromSaveData(int id)
		{
		}

		[Token(Token = "0x6001EE6")]
		[Address(RVA = "0xF48AB4", Offset = "0xF48AB4", VA = "0xF48AB4")]
		private int calculateTargetLocationId()
		{
			return default(int);
		}

		[Token(Token = "0x6001EE7")]
		[Address(RVA = "0xF48D10", Offset = "0xF48D10", VA = "0xF48D10")]
		private void moveOtherOutOfBounds(Collider other)
		{
		}

		[Token(Token = "0x6001EE8")]
		[Address(RVA = "0xF49020", Offset = "0xF49020", VA = "0xF49020")]
		public VolcanoHandler()
		{
		}
	}
	[Token(Token = "0x20005A9")]
	public class OnVolcanoSpitNC : EventNode
	{
		[Token(Token = "0x40018E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static FlowOutput s_flowOutput;

		[Token(Token = "0x40018E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int s_locationId;

		[Token(Token = "0x6001EE9")]
		[Address(RVA = "0x1E2BB10", Offset = "0x1E2BB10", VA = "0x1E2BB10")]
		private static int GetLocationId()
		{
			return default(int);
		}

		[Token(Token = "0x6001EEA")]
		[Address(RVA = "0x1E2BB78", Offset = "0x1E2BB78", VA = "0x1E2BB78", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001EEB")]
		[Address(RVA = "0x1E2BC70", Offset = "0x1E2BC70", VA = "0x1E2BC70")]
		public static void OnVolcanoSpit(VolcanoHandler invoker, int locationId)
		{
		}

		[Token(Token = "0x6001EEC")]
		[Address(RVA = "0x1E2BD6C", Offset = "0x1E2BD6C", VA = "0x1E2BD6C")]
		public OnVolcanoSpitNC()
		{
		}
	}
	[Token(Token = "0x20005AA")]
	public class VolcanoTargetLocation : MonoBehaviour
	{
		[Token(Token = "0x40018E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int m_volcanoTargetId;

		[Token(Token = "0x6001EEE")]
		[Address(RVA = "0xF49018", Offset = "0xF49018", VA = "0xF49018")]
		public int GetTargetId()
		{
			return default(int);
		}

		[Token(Token = "0x6001EEF")]
		[Address(RVA = "0xF49028", Offset = "0xF49028", VA = "0xF49028")]
		public VolcanoTargetLocation()
		{
		}
	}
	[Token(Token = "0x20005AB")]
	public class WaitForEmptyFileQueueNC : FlowControlNode
	{
		[Token(Token = "0x2000FC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BEA0", Offset = "0x97BEA0")]
		private sealed class <waitForEmptyFileQueue>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400250B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400250C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400250D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WaitForEmptyFileQueueNC <>4__this;

			[Token(Token = "0x400250E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Flow f;

			[Token(Token = "0x400250F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private SaveManager <saveManager>5__2;

			[Token(Token = "0x17000411")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60034D0")]
				[Address(RVA = "0xF4941C", Offset = "0xF4941C", VA = "0xF4941C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000412")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60034D2")]
				[Address(RVA = "0xF4948C", Offset = "0xF4948C", VA = "0xF4948C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60034CD")]
			[Address(RVA = "0xF49204", Offset = "0xF49204", VA = "0xF49204")]
			[DebuggerHidden]
			public <waitForEmptyFileQueue>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x60034CE")]
			[Address(RVA = "0xF492E4", Offset = "0xF492E4", VA = "0xF492E4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60034CF")]
			[Address(RVA = "0xF492E8", Offset = "0xF492E8", VA = "0xF492E8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60034D1")]
			[Address(RVA = "0xF49424", Offset = "0xF49424", VA = "0xF49424", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40018E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private FlowOutput startOutput;

		[Token(Token = "0x40018E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private FlowOutput emptyOutput;

		[Token(Token = "0x6001EF0")]
		[Address(RVA = "0xF49040", Offset = "0xF49040", VA = "0xF49040", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001EF1")]
		[Address(RVA = "0xF49118", Offset = "0xF49118", VA = "0xF49118")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98904C", Offset = "0x98904C")]
		private IEnumerator waitForEmptyFileQueue(Flow f)
		{
			return null;
		}

		[Token(Token = "0x6001EF2")]
		[Address(RVA = "0xF49230", Offset = "0xF49230", VA = "0xF49230")]
		public WaitForEmptyFileQueueNC()
		{
		}

		[Token(Token = "0x6001EF3")]
		[Address(RVA = "0xF49238", Offset = "0xF49238", VA = "0xF49238")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9890B0", Offset = "0x9890B0")]
		private void <RegisterPorts>b__2_0(Flow f)
		{
		}
	}
	[Token(Token = "0x20005AC")]
	public class WaterFlowHandler : MonoBehaviour
	{
		[Token(Token = "0x2000FC5")]
		public enum WaterStates
		{
			[Token(Token = "0x4002511")]
			GoingTowardsLava,
			[Token(Token = "0x4002512")]
			WaterWheelPartOne,
			[Token(Token = "0x4002513")]
			WaterWheelPartTwo,
			[Token(Token = "0x4002514")]
			FlowerPartOne,
			[Token(Token = "0x4002515")]
			FlowerPartTwo
		}

		[Token(Token = "0x2000FC6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BEB0", Offset = "0x97BEB0")]
		private sealed class <enableControlPillar>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002516")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002517")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002518")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WaterFlowHandler <>4__this;

			[Token(Token = "0x17000413")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60034D6")]
				[Address(RVA = "0xF4A854", Offset = "0xF4A854", VA = "0xF4A854", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000414")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60034D8")]
				[Address(RVA = "0xF4A8C4", Offset = "0xF4A8C4", VA = "0xF4A8C4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60034D3")]
			[Address(RVA = "0xF4A0F4", Offset = "0xF4A0F4", VA = "0xF4A0F4")]
			[DebuggerHidden]
			public <enableControlPillar>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x60034D4")]
			[Address(RVA = "0xF4A720", Offset = "0xF4A720", VA = "0xF4A720", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60034D5")]
			[Address(RVA = "0xF4A724", Offset = "0xF4A724", VA = "0xF4A724", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60034D7")]
			[Address(RVA = "0xF4A85C", Offset = "0xF4A85C", VA = "0xF4A85C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000FC7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BEC0", Offset = "0x97BEC0")]
		private sealed class <enablePillarColliderDelayed>d__44 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002519")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400251A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400251B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WaterFlowHandler <>4__this;

			[Token(Token = "0x400251C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Collider col;

			[Token(Token = "0x17000415")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60034DC")]
				[Address(RVA = "0xF4A954", Offset = "0xF4A954", VA = "0xF4A954", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000416")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60034DE")]
				[Address(RVA = "0xF4A9C4", Offset = "0xF4A9C4", VA = "0xF4A9C4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60034D9")]
			[Address(RVA = "0xF4A508", Offset = "0xF4A508", VA = "0xF4A508")]
			[DebuggerHidden]
			public <enablePillarColliderDelayed>d__44(int <>1__state)
			{
			}

			[Token(Token = "0x60034DA")]
			[Address(RVA = "0xF4A8CC", Offset = "0xF4A8CC", VA = "0xF4A8CC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60034DB")]
			[Address(RVA = "0xF4A8D0", Offset = "0xF4A8D0", VA = "0xF4A8D0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60034DD")]
			[Address(RVA = "0xF4A95C", Offset = "0xF4A95C", VA = "0xF4A95C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000FC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BED0", Offset = "0x97BED0")]
		private sealed class <updateWaterFlow>d__47 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400251D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400251E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400251F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WaterFlowHandler <>4__this;

			[Token(Token = "0x17000417")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60034E2")]
				[Address(RVA = "0xF4B124", Offset = "0xF4B124", VA = "0xF4B124", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000418")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60034E4")]
				[Address(RVA = "0xF4B194", Offset = "0xF4B194", VA = "0xF4B194", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60034DF")]
			[Address(RVA = "0xF4A534", Offset = "0xF4A534", VA = "0xF4A534")]
			[DebuggerHidden]
			public <updateWaterFlow>d__47(int <>1__state)
			{
			}

			[Token(Token = "0x60034E0")]
			[Address(RVA = "0xF4A9CC", Offset = "0xF4A9CC", VA = "0xF4A9CC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60034E1")]
			[Address(RVA = "0xF4A9D0", Offset = "0xF4A9D0", VA = "0xF4A9D0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60034E3")]
			[Address(RVA = "0xF4B12C", Offset = "0xF4B12C", VA = "0xF4B12C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40018E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject[] m_objectsToWheel1;

		[Token(Token = "0x40018E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject[] m_objectsToWheel2;

		[Token(Token = "0x40018EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject[] m_objectsToFlower1;

		[Token(Token = "0x40018EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject[] m_objectsToFlower2;

		[Token(Token = "0x40018EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Animator m_waterAnimator;

		[Token(Token = "0x40018ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private ParticleSystem m_controlPillarSmokeParticles;

		[Token(Token = "0x40018EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Animator m_mountainAnimator;

		[Token(Token = "0x40018EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private OnTriggerProxyIRE m_controlPillar;

		[Token(Token = "0x40018F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private OnTriggerProxyIRE m_waterWheelPillar1;

		[Token(Token = "0x40018F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private OnTriggerProxyIRE m_waterWheelPillar2;

		[Token(Token = "0x40018F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private OnTriggerProxyIRE m_flowerPillar1;

		[Token(Token = "0x40018F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private OnTriggerProxyIRE m_flowerPillar2;

		[Token(Token = "0x40018F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Collider m_controlPillarCollider;

		[Token(Token = "0x40018F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Collider m_waterWheel1PillarCollider;

		[Token(Token = "0x40018F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider m_waterWheel2PillarCollider;

		[Token(Token = "0x40018F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Collider m_flower1PillarCollider;

		[Token(Token = "0x40018F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Collider m_flower2PillarCollider;

		[Token(Token = "0x40018F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private int m_controlPillarId;

		[Token(Token = "0x40018FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private int m_waterWheelPillar1Id;

		[Token(Token = "0x40018FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int m_waterWheelPillar2Id;

		[Token(Token = "0x40018FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private int m_flowerPillar1Id;

		[Token(Token = "0x40018FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int m_flowerPillar2Id;

		[Token(Token = "0x40018FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private int m_waterFallFlowerPart1;

		[Token(Token = "0x40018FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private int m_waterFallFlowerPart2;

		[Token(Token = "0x4001900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int m_waterFallWheelPart1;

		[Token(Token = "0x4001901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int m_waterFallWheelPart2;

		[Token(Token = "0x4001902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private bool m_hasControlPillarBeenActivated;

		[Token(Token = "0x4001903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private WaterStates m_currentWaterState;

		[Token(Token = "0x4001904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private WaitForSeconds waitForSmoke;

		[Token(Token = "0x4001905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private WaitForSeconds pillarColliderEnableDelay;

		[Token(Token = "0x4001906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private WaitForSeconds waitForFewFrames;

		[Token(Token = "0x6001EF4")]
		[Address(RVA = "0xF49B04", Offset = "0xF49B04", VA = "0xF49B04")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001EF5")]
		[Address(RVA = "0xF49BF4", Offset = "0xF49BF4", VA = "0xF49BF4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001EF6")]
		[Address(RVA = "0xF4A03C", Offset = "0xF4A03C", VA = "0xF4A03C")]
		public void TryEnableControlPillar()
		{
		}

		[Token(Token = "0x6001EF7")]
		[Address(RVA = "0xF4A080", Offset = "0xF4A080", VA = "0xF4A080")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9890C0", Offset = "0x9890C0")]
		private IEnumerator enableControlPillar()
		{
			return null;
		}

		[Token(Token = "0x6001EF8")]
		[Address(RVA = "0xF49C38", Offset = "0xF49C38", VA = "0xF49C38")]
		private void initPillarCallbacks()
		{
		}

		[Token(Token = "0x6001EF9")]
		[Address(RVA = "0xF49DD8", Offset = "0xF49DD8", VA = "0xF49DD8")]
		private void initPillarStartStates()
		{
		}

		[Token(Token = "0x6001EFA")]
		[Address(RVA = "0xF49F28", Offset = "0xF49F28", VA = "0xF49F28")]
		private void initWaterStartStates()
		{
		}

		[Token(Token = "0x6001EFB")]
		[Address(RVA = "0xF4A1C8", Offset = "0xF4A1C8", VA = "0xF4A1C8")]
		private void controlPillarTriggerd()
		{
		}

		[Token(Token = "0x6001EFC")]
		[Address(RVA = "0xF4A258", Offset = "0xF4A258", VA = "0xF4A258")]
		private void waterWheelPillar1Triggerd()
		{
		}

		[Token(Token = "0x6001EFD")]
		[Address(RVA = "0xF4A32C", Offset = "0xF4A32C", VA = "0xF4A32C")]
		private void waterWheelPillar2Triggerd()
		{
		}

		[Token(Token = "0x6001EFE")]
		[Address(RVA = "0xF4A380", Offset = "0xF4A380", VA = "0xF4A380")]
		private void flowerPillar1Triggerd()
		{
		}

		[Token(Token = "0x6001EFF")]
		[Address(RVA = "0xF4A41C", Offset = "0xF4A41C", VA = "0xF4A41C")]
		private void flowerPillar2Triggerd()
		{
		}

		[Token(Token = "0x6001F00")]
		[Address(RVA = "0xF4A120", Offset = "0xF4A120", VA = "0xF4A120")]
		private void setPillarActive(int paramId, Collider col, bool isActive)
		{
		}

		[Token(Token = "0x6001F01")]
		[Address(RVA = "0xF4A470", Offset = "0xF4A470", VA = "0xF4A470")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x989124", Offset = "0x989124")]
		private IEnumerator enablePillarColliderDelayed(Collider col)
		{
			return null;
		}

		[Token(Token = "0x6001F02")]
		[Address(RVA = "0xF4A2F4", Offset = "0xF4A2F4", VA = "0xF4A2F4")]
		private bool isPillarActive(int paramId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F03")]
		[Address(RVA = "0xF49FC8", Offset = "0xF49FC8", VA = "0xF49FC8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x989188", Offset = "0x989188")]
		private IEnumerator updateWaterFlow()
		{
			return null;
		}

		[Token(Token = "0x6001F04")]
		[Address(RVA = "0xF4A560", Offset = "0xF4A560", VA = "0xF4A560")]
		private void setObjectsEnabled(GameObject[] objects, bool enabled)
		{
		}

		[Token(Token = "0x6001F05")]
		[Address(RVA = "0xF4A5EC", Offset = "0xF4A5EC", VA = "0xF4A5EC")]
		private void enableWaterFallPart(int waterAnimHash, bool shouldEnable)
		{
		}

		[Token(Token = "0x6001F06")]
		[Address(RVA = "0xF4A670", Offset = "0xF4A670", VA = "0xF4A670")]
		public WaterFlowHandler()
		{
		}
	}
	[Token(Token = "0x20005AD")]
	public class OnWaterFlowUpdateNC : EventNode
	{
		[Token(Token = "0x4001907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static FlowOutput s_flowOutput;

		[Token(Token = "0x4001908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int s_currentState;

		[Token(Token = "0x6001F07")]
		[Address(RVA = "0x1E2BD78", Offset = "0x1E2BD78", VA = "0x1E2BD78")]
		private static int GetCurrentWaterState()
		{
			return default(int);
		}

		[Token(Token = "0x6001F08")]
		[Address(RVA = "0x1E2BDE0", Offset = "0x1E2BDE0", VA = "0x1E2BDE0", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001F09")]
		[Address(RVA = "0x1E2BED8", Offset = "0x1E2BED8", VA = "0x1E2BED8")]
		public static void OnWaterFlowUpdate(WaterFlowHandler invoker, int currentState)
		{
		}

		[Token(Token = "0x6001F0A")]
		[Address(RVA = "0x1E2BFD4", Offset = "0x1E2BFD4", VA = "0x1E2BFD4")]
		public OnWaterFlowUpdateNC()
		{
		}
	}
	[Token(Token = "0x20005AE")]
	public class WhiteTigerBehaviour : MonoBehaviour
	{
		[Token(Token = "0x2000FC9")]
		[Flags]
		public enum TigerHidingPlaces
		{
			[Token(Token = "0x4002521")]
			LeftCup = 1,
			[Token(Token = "0x4002522")]
			MiddleCup = 2,
			[Token(Token = "0x4002523")]
			RightCup = 4
		}

		[Token(Token = "0x4001909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static WhiteTigerBehaviour s_instance;

		[Token(Token = "0x400190A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TigerHidingPlaces m_availableHidingPlaces;

		[Token(Token = "0x400190B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private MagicCup[] m_allMagicCups;

		[Token(Token = "0x400190C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int[] m_hidingPlacesKeys;

		[Token(Token = "0x400190D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_hasBeenFound;

		[Token(Token = "0x400190E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MagicCup[] m_availableMagicCups;

		[Token(Token = "0x400190F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Animator m_tigerAnimator;

		[Token(Token = "0x4001910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_tigerFoundAnimString;

		[Token(Token = "0x4001911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_tigerFoundAnimHash;

		[Token(Token = "0x170002F1")]
		public bool HasBeenFound
		{
			[Token(Token = "0x6001F0C")]
			[Address(RVA = "0xF4C814", Offset = "0xF4C814", VA = "0xF4C814")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001F0D")]
		[Address(RVA = "0xF4C81C", Offset = "0xF4C81C", VA = "0xF4C81C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F0E")]
		[Address(RVA = "0xF4C848", Offset = "0xF4C848", VA = "0xF4C848")]
		private void initSingleton()
		{
		}

		[Token(Token = "0x6001F0F")]
		[Address(RVA = "0xF4C95C", Offset = "0xF4C95C", VA = "0xF4C95C")]
		private void initCups()
		{
		}

		[Token(Token = "0x6001F10")]
		[Address(RVA = "0xF4CAE8", Offset = "0xF4CAE8", VA = "0xF4CAE8")]
		private void initAnims()
		{
		}

		[Token(Token = "0x6001F11")]
		[Address(RVA = "0xF4CB54", Offset = "0xF4CB54", VA = "0xF4CB54")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F12")]
		[Address(RVA = "0xF4CE84", Offset = "0xF4CE84", VA = "0xF4CE84")]
		public void AddAvailableHidingPlace(TigerHidingPlaces flag)
		{
		}

		[Token(Token = "0x6001F13")]
		[Address(RVA = "0xF4CF40", Offset = "0xF4CF40", VA = "0xF4CF40")]
		public void RemoveAvailableHidingPlace(TigerHidingPlaces flag)
		{
		}

		[Token(Token = "0x6001F14")]
		[Address(RVA = "0xF4CB58", Offset = "0xF4CB58", VA = "0xF4CB58")]
		public void FindNewCupToHideUnder()
		{
		}

		[Token(Token = "0x6001F15")]
		[Address(RVA = "0xF4CFFC", Offset = "0xF4CFFC", VA = "0xF4CFFC")]
		public bool AreAllCupsTouched(MagicCup excludeCup)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F16")]
		[Address(RVA = "0xF4D0F8", Offset = "0xF4D0F8", VA = "0xF4D0F8")]
		public void ForceRespawnDroppedCups()
		{
		}

		[Token(Token = "0x6001F17")]
		[Address(RVA = "0xF4D198", Offset = "0xF4D198", VA = "0xF4D198")]
		public WhiteTigerBehaviour()
		{
		}
	}
	[Token(Token = "0x20005AF")]
	public class OnTigerFoundNC : EventNode
	{
		[Token(Token = "0x4001912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static FlowOutput s_flowOutput;

		[Token(Token = "0x6001F19")]
		[Address(RVA = "0x1E660E0", Offset = "0x1E660E0", VA = "0x1E660E0", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001F1A")]
		[Address(RVA = "0x1E66178", Offset = "0x1E66178", VA = "0x1E66178")]
		public static void OnTigerFound(WhiteTigerBehaviour invoker)
		{
		}

		[Token(Token = "0x6001F1B")]
		[Address(RVA = "0x1E66260", Offset = "0x1E66260", VA = "0x1E66260")]
		public OnTigerFoundNC()
		{
		}
	}
	[Token(Token = "0x20005B0")]
	public class WorldRotator : MonoBehaviour
	{
		[Token(Token = "0x2000FCA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BEF0", Offset = "0x97BEF0")]
		private sealed class <delayedInit>d__48 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002524")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002525")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002526")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WorldRotator <>4__this;

			[Token(Token = "0x17000419")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60034E8")]
				[Address(RVA = "0xF4F730", Offset = "0xF4F730", VA = "0xF4F730", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700041A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60034EA")]
				[Address(RVA = "0xF4F7A0", Offset = "0xF4F7A0", VA = "0xF4F7A0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60034E5")]
			[Address(RVA = "0xF4D380", Offset = "0xF4D380", VA = "0xF4D380")]
			[DebuggerHidden]
			public <delayedInit>d__48(int <>1__state)
			{
			}

			[Token(Token = "0x60034E6")]
			[Address(RVA = "0xF4F39C", Offset = "0xF4F39C", VA = "0xF4F39C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60034E7")]
			[Address(RVA = "0xF4F3A0", Offset = "0xF4F3A0", VA = "0xF4F3A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60034E9")]
			[Address(RVA = "0xF4F738", Offset = "0xF4F738", VA = "0xF4F738", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x982B34", Offset = "0x982B34")]
		public bool m_rotateSkybox;

		[Token(Token = "0x4001914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform[] m_mirrorRotationTo;

		[Token(Token = "0x4001915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform[] m_counterRotate;

		[Token(Token = "0x4001916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x982B6C", Offset = "0x982B6C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x982B6C", Offset = "0x982B6C")]
		public float m_maxReleaseSpeed;

		[Token(Token = "0x4001917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x982BC4", Offset = "0x982BC4")]
		public float m_grabReleaseSpeedMultiplier;

		[Token(Token = "0x4001918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x982BE0", Offset = "0x982BE0")]
		public float m_grabSpeedMultiplier;

		[Token(Token = "0x4001919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x982BFC", Offset = "0x982BFC")]
		public float m_rotationForce;

		[Token(Token = "0x400191A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x982C18", Offset = "0x982C18")]
		public float m_grabAngularDampening;

		[Token(Token = "0x400191B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x982C30", Offset = "0x982C30")]
		public float m_grabMinDistance;

		[Token(Token = "0x400191C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x982C48", Offset = "0x982C48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x982C48", Offset = "0x982C48")]
		public float m_grabMaxDeltaAngle;

		[Token(Token = "0x400191D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x982CA0", Offset = "0x982CA0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x982CA0", Offset = "0x982CA0")]
		public float m_stickRotationMaxDelta;

		[Token(Token = "0x400191E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x982CFC", Offset = "0x982CFC")]
		public float m_stickAngularDampening;

		[Token(Token = "0x400191F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x982D18", Offset = "0x982D18")]
		public float m_stickRotationSpeed;

		[Token(Token = "0x4001920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x982D38", Offset = "0x982D38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x982D38", Offset = "0x982D38")]
		public float m_stickMovementMaxDelta;

		[Token(Token = "0x4001921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x982D94", Offset = "0x982D94")]
		public float m_maxHeightDifference;

		[Token(Token = "0x4001922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x982DB0", Offset = "0x982DB0")]
		public float m_moveSpeed;

		[Token(Token = "0x4001923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int m_frameCounterForGrab;

		[Token(Token = "0x4001924")]
		private const int k_numFramesToSkipGrabUpdate = 3;

		[Token(Token = "0x4001925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_rotationStickSpeed;

		[Token(Token = "0x4001926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float m_directionLastFrame;

		[Token(Token = "0x4001927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_directionMultiplier;

		[Token(Token = "0x4001928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float m_grabAngle;

		[Token(Token = "0x4001929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float m_grabAngleLastFrame;

		[Token(Token = "0x400192A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float m_totalGrabRotationSpeed;

		[Token(Token = "0x400192B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 m_dirToHand;

		[Token(Token = "0x400192C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3 m_originalGrabPos;

		[Token(Token = "0x400192D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Transform m_interactionAnchor;

		[Token(Token = "0x400192E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private VelocityEstimator m_velocityEstimator;

		[Token(Token = "0x400192F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Transform m_currentHand;

		[Token(Token = "0x4001930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Transform m_leftHand;

		[Token(Token = "0x4001931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Transform m_rightHand;

		[Token(Token = "0x4001932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private InteractionBroker m_interactionBroker;

		[Token(Token = "0x4001933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private FtgButton m_currentLeftButton;

		[Token(Token = "0x4001934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private FtgButton m_currentRightButton;

		[Token(Token = "0x4001935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private bool m_isRightDown;

		[Token(Token = "0x4001936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
		private bool m_isLeftDown;

		[Token(Token = "0x4001937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float m_currMoveSpeed;

		[Token(Token = "0x4001938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Vector3 m_originalPosition;

		[Token(Token = "0x4001939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float m_skyBoxInitialRotation;

		[Token(Token = "0x400193A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private PlayerInputHandler m_playerInput;

		[Token(Token = "0x400193B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private PlayerController m_playerController;

		[Token(Token = "0x400193C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private float m_automaticSpeed;

		[Token(Token = "0x400193D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private SetWorldRotatorModeNC.ModeToSet m_currMode;

		[Token(Token = "0x400193E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Vector2 m_automaticRotVal;

		[Token(Token = "0x400193F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Quaternion m_lastRotation;

		[Token(Token = "0x4001940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private float m_handInteractionModifier;

		[Token(Token = "0x4001941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private float m_lastReleaseTime;

		[Token(Token = "0x4001942")]
		private const float c_minTimeBetweenGrabs = 0.5f;

		[Token(Token = "0x6001F1D")]
		[Address(RVA = "0xF4D1F4", Offset = "0xF4D1F4", VA = "0xF4D1F4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F1E")]
		[Address(RVA = "0xF4D2E0", Offset = "0xF4D2E0", VA = "0xF4D2E0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F1F")]
		[Address(RVA = "0xF4D30C", Offset = "0xF4D30C", VA = "0xF4D30C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9891EC", Offset = "0x9891EC")]
		private IEnumerator delayedInit()
		{
			return null;
		}

		[Token(Token = "0x6001F20")]
		[Address(RVA = "0xF4D3AC", Offset = "0xF4D3AC", VA = "0xF4D3AC")]
		private void handleHandGripBegin(bool isHandLeft, Transform hand)
		{
		}

		[Token(Token = "0x6001F21")]
		[Address(RVA = "0xF4D5A4", Offset = "0xF4D5A4", VA = "0xF4D5A4")]
		private void onLeftFlexEnd()
		{
		}

		[Token(Token = "0x6001F22")]
		[Address(RVA = "0xF4D7A0", Offset = "0xF4D7A0", VA = "0xF4D7A0")]
		private void onRightFlexEnd()
		{
		}

		[Token(Token = "0x6001F23")]
		[Address(RVA = "0xF4D630", Offset = "0xF4D630", VA = "0xF4D630")]
		private void onCurrentHandLost()
		{
		}

		[Token(Token = "0x6001F24")]
		[Address(RVA = "0xF4D82C", Offset = "0xF4D82C", VA = "0xF4D82C")]
		private void FindMissingReferences()
		{
		}

		[Token(Token = "0x6001F25")]
		[Address(RVA = "0xF4D984", Offset = "0xF4D984", VA = "0xF4D984")]
		private bool shouldPerformUpdate()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F26")]
		[Address(RVA = "0xF4DA24", Offset = "0xF4DA24", VA = "0xF4DA24")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F27")]
		[Address(RVA = "0xF4E5B8", Offset = "0xF4E5B8", VA = "0xF4E5B8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001F28")]
		[Address(RVA = "0xF4DC04", Offset = "0xF4DC04", VA = "0xF4DC04")]
		private void UpdateStickRotation()
		{
		}

		[Token(Token = "0x6001F29")]
		[Address(RVA = "0xF4E8CC", Offset = "0xF4E8CC", VA = "0xF4E8CC")]
		private void setGrabRotationInput()
		{
		}

		[Token(Token = "0x6001F2A")]
		[Address(RVA = "0xF4DD80", Offset = "0xF4DD80", VA = "0xF4DD80")]
		private float UpdateGrabRotation()
		{
			return default(float);
		}

		[Token(Token = "0x6001F2B")]
		[Address(RVA = "0xF4DA14", Offset = "0xF4DA14", VA = "0xF4DA14")]
		private void resetGrab()
		{
		}

		[Token(Token = "0x6001F2C")]
		[Address(RVA = "0xF4E2C8", Offset = "0xF4E2C8", VA = "0xF4E2C8")]
		private bool checkIsHandTracking()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F2D")]
		[Address(RVA = "0xF4EB68", Offset = "0xF4EB68", VA = "0xF4EB68")]
		private void setGrabInput(out bool rightGrabDown, out bool leftGrabDown)
		{
		}

		[Token(Token = "0x6001F2E")]
		[Address(RVA = "0xF4F01C", Offset = "0xF4F01C", VA = "0xF4F01C")]
		private bool wasRecentlyReleased()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F2F")]
		[Address(RVA = "0xF4EDF0", Offset = "0xF4EDF0", VA = "0xF4EDF0")]
		private void setCurrentHandFromInput(bool rightGrabDown, bool leftGrabDown)
		{
		}

		[Token(Token = "0x6001F30")]
		[Address(RVA = "0xF4E35C", Offset = "0xF4E35C", VA = "0xF4E35C")]
		private void UpdateStickMovement()
		{
		}

		[Token(Token = "0x6001F31")]
		[Address(RVA = "0xF4E90C", Offset = "0xF4E90C", VA = "0xF4E90C")]
		private void UpdateCounterRotationObjects()
		{
		}

		[Token(Token = "0x6001F32")]
		[Address(RVA = "0xF4F054", Offset = "0xF4F054", VA = "0xF4F054")]
		public void ActivateAutomaticMode(float rotateSpeed)
		{
		}

		[Token(Token = "0x6001F33")]
		[Address(RVA = "0xF4F064", Offset = "0xF4F064", VA = "0xF4F064")]
		public void ActivateManualMode()
		{
		}

		[Token(Token = "0x6001F34")]
		[Address(RVA = "0xF4F06C", Offset = "0xF4F06C", VA = "0xF4F06C")]
		public void ActivateLockedMode()
		{
		}

		[Token(Token = "0x6001F35")]
		[Address(RVA = "0xF4F078", Offset = "0xF4F078", VA = "0xF4F078")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001F36")]
		[Address(RVA = "0xF4F26C", Offset = "0xF4F26C", VA = "0xF4F26C")]
		public WorldRotator()
		{
		}
	}
	[Token(Token = "0x20005B1")]
	public class AutoLanguageSelection : MonoBehaviour
	{
		[Token(Token = "0x4001943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Localization.CultureType m_currentCulure;

		[Token(Token = "0x6001F37")]
		[Address(RVA = "0xBBCF48", Offset = "0xBBCF48", VA = "0xBBCF48")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F38")]
		[Address(RVA = "0xBBCF4C", Offset = "0xBBCF4C", VA = "0xBBCF4C")]
		private Localization.CultureType resolveSystemCulture()
		{
			return default(Localization.CultureType);
		}

		[Token(Token = "0x6001F39")]
		[Address(RVA = "0xBBCFEC", Offset = "0xBBCFEC", VA = "0xBBCFEC")]
		public AutoLanguageSelection()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005B2")]
	public class StringDefinition
	{
		[Token(Token = "0x4001944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string stringId;

		[Token(Token = "0x4001945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x982DCC", Offset = "0x982DCC")]
		public string stringTranslation;

		[Token(Token = "0x4001946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x982DE4", Offset = "0x982DE4")]
		public string french;

		[Token(Token = "0x4001947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x982DFC", Offset = "0x982DFC")]
		public string german;

		[Token(Token = "0x4001948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x982E14", Offset = "0x982E14")]
		public string latinAmericanSpanish;

		[Token(Token = "0x4001949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x982E2C", Offset = "0x982E2C")]
		public string spanish;

		[Token(Token = "0x400194A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x982E44", Offset = "0x982E44")]
		public string korean;

		[Token(Token = "0x400194B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x982E5C", Offset = "0x982E5C")]
		public string japanese;

		[Token(Token = "0x400194C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x982E74", Offset = "0x982E74")]
		public string simplifiedchinese;

		[Token(Token = "0x400194D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x982E8C", Offset = "0x982E8C")]
		public string italian;

		[Token(Token = "0x400194E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x982EA4", Offset = "0x982EA4")]
		public string russian;

		[Token(Token = "0x400194F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x982EBC", Offset = "0x982EBC")]
		public string brazilianportuguese;

		[Token(Token = "0x4001950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x982ED4", Offset = "0x982ED4")]
		public string swedish;

		[Token(Token = "0x4001951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public int stringIdHash;

		[Token(Token = "0x6001F3A")]
		[Address(RVA = "0xF404B8", Offset = "0xF404B8", VA = "0xF404B8")]
		public StringDefinition()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005B3")]
	public class StringDefinitionHolder
	{
		[Token(Token = "0x4001952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<StringDefinition> stringDefinitions;

		[Token(Token = "0x6001F3B")]
		[Address(RVA = "0xF40528", Offset = "0xF40528", VA = "0xF40528")]
		public StringDefinitionHolder()
		{
		}
	}
	[Token(Token = "0x20005B4")]
	public class Localization : MonoBehaviour
	{
		[Token(Token = "0x2000FCB")]
		public enum CultureType
		{
			[Token(Token = "0x4002528")]
			enUS,
			[Token(Token = "0x4002529")]
			frFR,
			[Token(Token = "0x400252A")]
			deDE,
			[Token(Token = "0x400252B")]
			esMX,
			[Token(Token = "0x400252C")]
			esES,
			[Token(Token = "0x400252D")]
			koKO,
			[Token(Token = "0x400252E")]
			jaJA,
			[Token(Token = "0x400252F")]
			zhHans,
			[Token(Token = "0x4002530")]
			itIT,
			[Token(Token = "0x4002531")]
			ruRU,
			[Token(Token = "0x4002532")]
			ptBR,
			[Token(Token = "0x4002533")]
			svSE
		}

		[Token(Token = "0x4001953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Localization s_instance;

		[Token(Token = "0x4001954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StringDefinition[] strings;

		[Token(Token = "0x4001955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CultureType culture;

		[Token(Token = "0x4001956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string[] m_cultureNames;

		[Token(Token = "0x4001957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_isInitialized;

		[Token(Token = "0x170002F2")]
		public static Localization instance
		{
			[Token(Token = "0x6001F3C")]
			[Address(RVA = "0x1E5F624", Offset = "0x1E5F624", VA = "0x1E5F624")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F3D")]
		[Address(RVA = "0x1E5F760", Offset = "0x1E5F760", VA = "0x1E5F760")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F3E")]
		[Address(RVA = "0x1E5F764", Offset = "0x1E5F764", VA = "0x1E5F764")]
		private void loadStrings()
		{
		}

		[Token(Token = "0x6001F3F")]
		[Address(RVA = "0x1E5F86C", Offset = "0x1E5F86C", VA = "0x1E5F86C")]
		public int getIdForString(string str)
		{
			return default(int);
		}

		[Token(Token = "0x6001F40")]
		[Address(RVA = "0x1E5F878", Offset = "0x1E5F878", VA = "0x1E5F878")]
		public string getString(string stringId)
		{
			return null;
		}

		[Token(Token = "0x6001F41")]
		[Address(RVA = "0x1E5F8A8", Offset = "0x1E5F8A8", VA = "0x1E5F8A8")]
		public string getString(int stringIdHash)
		{
			return null;
		}

		[Token(Token = "0x6001F42")]
		[Address(RVA = "0x1E5FB38", Offset = "0x1E5FB38", VA = "0x1E5FB38")]
		public CultureType GetCulture()
		{
			return default(CultureType);
		}

		[Token(Token = "0x6001F43")]
		[Address(RVA = "0x1E5FB40", Offset = "0x1E5FB40", VA = "0x1E5FB40")]
		public string[] GetCulutureNames()
		{
			return null;
		}

		[Token(Token = "0x6001F44")]
		[Address(RVA = "0x1E5F9D0", Offset = "0x1E5F9D0", VA = "0x1E5F9D0")]
		private string getStringForCultureType(StringDefinition definition, CultureType cultureType)
		{
			return null;
		}

		[Token(Token = "0x6001F45")]
		[Address(RVA = "0x1E5FB48", Offset = "0x1E5FB48", VA = "0x1E5FB48")]
		public Localization()
		{
		}
	}
	[Token(Token = "0x20005B5")]
	public class SetLocalizationLanguageNC : FlowControlNode
	{
		[Token(Token = "0x2000FCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BF00", Offset = "0x97BF00")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4002534")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SetLocalizationLanguageNC <>4__this;

			[Token(Token = "0x4002535")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FlowOutput flowOut;

			[Token(Token = "0x60034EB")]
			[Address(RVA = "0x1E4245C", Offset = "0x1E4245C", VA = "0x1E4245C")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x60034EC")]
			[Address(RVA = "0x1E4246C", Offset = "0x1E4246C", VA = "0x1E4246C")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x4001958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private ValueInput<int> m_culture;

		[Token(Token = "0x6001F46")]
		[Address(RVA = "0x1E42224", Offset = "0x1E42224", VA = "0x1E42224")]
		private string GetCoherentCultureString()
		{
			return null;
		}

		[Token(Token = "0x6001F47")]
		[Address(RVA = "0x1E422E4", Offset = "0x1E422E4", VA = "0x1E422E4", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6001F48")]
		[Address(RVA = "0x1E42464", Offset = "0x1E42464", VA = "0x1E42464")]
		public SetLocalizationLanguageNC()
		{
		}
	}
	[Token(Token = "0x20005B6")]
	public class LocalizationSubtitleDisplayer : SubtitleDisplayer
	{
		[Token(Token = "0x4001959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject m_textRoot;

		[Token(Token = "0x400195A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI m_text;

		[Token(Token = "0x6001F49")]
		[Address(RVA = "0x1E5FFA8", Offset = "0x1E5FFA8", VA = "0x1E5FFA8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F4A")]
		[Address(RVA = "0x1E601A8", Offset = "0x1E601A8", VA = "0x1E601A8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001F4B")]
		[Address(RVA = "0x1E602CC", Offset = "0x1E602CC", VA = "0x1E602CC", Slot = "6")]
		public override void hideText()
		{
		}

		[Token(Token = "0x6001F4C")]
		[Address(RVA = "0x1E60300", Offset = "0x1E60300", VA = "0x1E60300")]
		public void OnFontChangedCb(TMP_FontAsset newFont)
		{
		}

		[Token(Token = "0x6001F4D")]
		[Address(RVA = "0x1E603B0", Offset = "0x1E603B0", VA = "0x1E603B0", Slot = "7")]
		public override void displayText(string textId)
		{
		}

		[Token(Token = "0x6001F4E")]
		[Address(RVA = "0x1E60440", Offset = "0x1E60440", VA = "0x1E60440")]
		public LocalizationSubtitleDisplayer()
		{
		}
	}
	[Token(Token = "0x20005B7")]
	public class UITextLocalizer : MonoBehaviour
	{
		[Token(Token = "0x2000FCD")]
		public delegate void OnUpdateTextDelegate();

		[Token(Token = "0x400195B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x982EFC", Offset = "0x982EFC")]
		public string localizationId;

		[Token(Token = "0x400195C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x982F34", Offset = "0x982F34")]
		public bool m_shouldSelfUpdate;

		[Token(Token = "0x400195D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m_updatePollingRate;

		[Token(Token = "0x400195E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x982F6C", Offset = "0x982F6C")]
		public Text textComponent;

		[Token(Token = "0x400195F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextMeshPro tmpComponent;

		[Token(Token = "0x4001960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TextMeshProUGUI tmpguiComponent;

		[Token(Token = "0x4001961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TMP_FontAsset m_currentFont;

		[Token(Token = "0x4001962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int m_localizationIdHash;

		[Token(Token = "0x4001963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OnUpdateTextDelegate m_onUpdateTextCallback;

		[Token(Token = "0x4001964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float m_elapsed;

		[Token(Token = "0x6001F4F")]
		[Address(RVA = "0xF44CC0", Offset = "0xF44CC0", VA = "0xF44CC0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F50")]
		[Address(RVA = "0xF44D10", Offset = "0xF44D10", VA = "0xF44D10")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F51")]
		[Address(RVA = "0xF44F50", Offset = "0xF44F50", VA = "0xF44F50")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001F52")]
		[Address(RVA = "0xF45074", Offset = "0xF45074", VA = "0xF45074")]
		public void RegisterOnUpdateTextCallback(OnUpdateTextDelegate newCb)
		{
		}

		[Token(Token = "0x6001F53")]
		[Address(RVA = "0xF4507C", Offset = "0xF4507C", VA = "0xF4507C")]
		public void RemoveOnUpdateTextCallback()
		{
		}

		[Token(Token = "0x6001F54")]
		[Address(RVA = "0xF45084", Offset = "0xF45084", VA = "0xF45084")]
		private bool setText(bool forceUpdate)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F55")]
		[Address(RVA = "0xF452D4", Offset = "0xF452D4", VA = "0xF452D4")]
		private string getCurrentText()
		{
			return null;
		}

		[Token(Token = "0x6001F56")]
		[Address(RVA = "0xF45820", Offset = "0xF45820", VA = "0xF45820")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F57")]
		[Address(RVA = "0xF44E58", Offset = "0xF44E58", VA = "0xF44E58")]
		public void UpdateText(bool forceUpdate = false)
		{
		}

		[Token(Token = "0x6001F58")]
		[Address(RVA = "0xF45888", Offset = "0xF45888", VA = "0xF45888")]
		public void OnFontChangedCb(TMP_FontAsset newFont)
		{
		}

		[Token(Token = "0x6001F59")]
		[Address(RVA = "0xF45894", Offset = "0xF45894", VA = "0xF45894")]
		public UITextLocalizer()
		{
		}
	}
	[Token(Token = "0x20005B8")]
	public class AttachedInteractible : Interactible
	{
		[Token(Token = "0x4001965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x982FA4", Offset = "0x982FA4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x982FA4", Offset = "0x982FA4")]
		public Transform m_newParentOnRespawn;

		[Token(Token = "0x4001966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool m_makeKinematicOnRespawn;

		[Token(Token = "0x6001F5A")]
		[Address(RVA = "0xBB8628", Offset = "0xBB8628", VA = "0xBB8628", Slot = "12")]
		public override bool OnRespawn(OutOfBoundsVolume.InteractibleTransform interactibleTransform)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F5B")]
		[Address(RVA = "0xBB8730", Offset = "0xBB8730", VA = "0xBB8730")]
		public AttachedInteractible()
		{
		}
	}
	[Token(Token = "0x20005B9")]
	public class FtgCustomSkeleton : OVRCustomSkeleton
	{
		[Token(Token = "0x4001967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public OVRHand ovrHand;

		[Token(Token = "0x6001F5C")]
		[Address(RVA = "0x1E496D4", Offset = "0x1E496D4", VA = "0x1E496D4")]
		public bool IsTracked(bool isInteracting)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F5D")]
		[Address(RVA = "0x1E49724", Offset = "0x1E49724", VA = "0x1E49724")]
		public FtgCustomSkeleton()
		{
		}
	}
	[Token(Token = "0x20005BA")]
	public class FtgJoint : MonoBehaviour
	{
		[Token(Token = "0x4001968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isThumb;

		[Token(Token = "0x4001969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool isIndex;

		[Token(Token = "0x400196A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool isMiddle;

		[Token(Token = "0x400196B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool isRing;

		[Token(Token = "0x400196C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool isPinky;

		[Token(Token = "0x400196D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_transform;

		[Token(Token = "0x400196E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private FtgJoint m_parentJoint;

		[Token(Token = "0x400196F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Quaternion m_lockRotation;

		[Token(Token = "0x4001970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_shouldLockRotation;

		[Token(Token = "0x4001971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Quaternion m_restRotation;

		[Token(Token = "0x170002F3")]
		public FtgJoint ParentJoint
		{
			[Token(Token = "0x6001F5E")]
			[Address(RVA = "0x1E4972C", Offset = "0x1E4972C", VA = "0x1E4972C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F4")]
		public Quaternion RestRotation
		{
			[Token(Token = "0x6001F5F")]
			[Address(RVA = "0x1E49734", Offset = "0x1E49734", VA = "0x1E49734")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x6001F60")]
		[Address(RVA = "0x1E49740", Offset = "0x1E49740", VA = "0x1E49740")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F61")]
		[Address(RVA = "0x1E497E4", Offset = "0x1E497E4", VA = "0x1E497E4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001F62")]
		[Address(RVA = "0x1E49848", Offset = "0x1E49848", VA = "0x1E49848")]
		public void LockJointToCurrentRotation()
		{
		}

		[Token(Token = "0x6001F63")]
		[Address(RVA = "0x1E498A8", Offset = "0x1E498A8", VA = "0x1E498A8")]
		public void LockJointToRotation(Vector3 localEulerRotation)
		{
		}

		[Token(Token = "0x6001F64")]
		[Address(RVA = "0x1E4990C", Offset = "0x1E4990C", VA = "0x1E4990C")]
		public void UnlockJoint()
		{
		}

		[Token(Token = "0x6001F65")]
		[Address(RVA = "0x1E49914", Offset = "0x1E49914", VA = "0x1E49914")]
		public bool IsJointRotationLocked()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F66")]
		[Address(RVA = "0x1E4991C", Offset = "0x1E4991C", VA = "0x1E4991C")]
		public FtgJoint()
		{
		}
	}
	[Token(Token = "0x20005BB")]
	public class HandTracker : MonoBehaviour
	{
		[Token(Token = "0x2000FCE")]
		public enum HandednessId
		{
			[Token(Token = "0x4002537")]
			Right,
			[Token(Token = "0x4002538")]
			Left
		}

		[Token(Token = "0x4001972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HandednessId handedness;

		[Token(Token = "0x4001973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal UnityAction hoverBegin;

		[Token(Token = "0x4001974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal UnityAction hoverEnd;

		[Token(Token = "0x4001975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal UnityAction flexBegin;

		[Token(Token = "0x4001976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal UnityAction flexEnd;

		[Token(Token = "0x4001977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform m_transform;

		[Token(Token = "0x4001978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform m_trackedTransform;

		[Token(Token = "0x4001979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private PlayerInputHandler m_inputHandler;

		[Token(Token = "0x400197A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_isGripping;

		[Token(Token = "0x400197B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool m_hasAnchor;

		[Token(Token = "0x400197C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Quaternion m_interactibleGripRotationLocalSpace;

		[Token(Token = "0x400197D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 m_interactibleGripOffsetLocalSpace;

		[Token(Token = "0x400197E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private VelocityEstimator m_velocityEstimator;

		[Token(Token = "0x400197F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private HandTrackerInteractions m_controller;

		[Token(Token = "0x4001980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int m_checkForInteractibleInactiveFrameRate;

		[Token(Token = "0x4001981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private int m_frameCount;

		[Token(Token = "0x4001982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Interactible m_currentInteractible;

		[Token(Token = "0x4001983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool m_isGripped;

		[Token(Token = "0x4001984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private InteractionBroker m_player;

		[Token(Token = "0x4001985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool m_handTrackingEnabled;

		[Token(Token = "0x170002F5")]
		public Transform InteractionAnchor
		{
			[Token(Token = "0x6001F67")]
			[Address(RVA = "0x1E4E66C", Offset = "0x1E4E66C", VA = "0x1E4E66C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F6")]
		public Interactible CurrentInteractible
		{
			[Token(Token = "0x6001F68")]
			[Address(RVA = "0x1E4E724", Offset = "0x1E4E724", VA = "0x1E4E724")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F7")]
		public bool IsGripping
		{
			[Token(Token = "0x6001F69")]
			[Address(RVA = "0x1E4E72C", Offset = "0x1E4E72C", VA = "0x1E4E72C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002F8")]
		public InteractionBroker Player
		{
			[Token(Token = "0x6001F6B")]
			[Address(RVA = "0x1E4E73C", Offset = "0x1E4E73C", VA = "0x1E4E73C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F6A")]
			[Address(RVA = "0x1E4E734", Offset = "0x1E4E734", VA = "0x1E4E734")]
			set
			{
			}
		}

		[Token(Token = "0x170002F9")]
		public bool HandTrackingEnabled
		{
			[Token(Token = "0x6001F6D")]
			[Address(RVA = "0x1E4E750", Offset = "0x1E4E750", VA = "0x1E4E750")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F6C")]
			[Address(RVA = "0x1E4E744", Offset = "0x1E4E744", VA = "0x1E4E744")]
			set
			{
			}
		}

		[Token(Token = "0x170002FA")]
		public Transform TrackedTransform
		{
			[Token(Token = "0x6001F6E")]
			[Address(RVA = "0x1E4E758", Offset = "0x1E4E758", VA = "0x1E4E758")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F6F")]
			[Address(RVA = "0x1E4E760", Offset = "0x1E4E760", VA = "0x1E4E760")]
			set
			{
			}
		}

		[Token(Token = "0x6001F70")]
		[Address(RVA = "0x1E4E768", Offset = "0x1E4E768", VA = "0x1E4E768")]
		public Quaternion interactibleGripRotationLS()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001F71")]
		[Address(RVA = "0x1E4E774", Offset = "0x1E4E774", VA = "0x1E4E774")]
		public Vector3 interactibleGripOffsetLS()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001F72")]
		[Address(RVA = "0x1E4E780", Offset = "0x1E4E780", VA = "0x1E4E780")]
		public Collider interactionCollider()
		{
			return null;
		}

		[Token(Token = "0x6001F73")]
		[Address(RVA = "0x1E4E838", Offset = "0x1E4E838", VA = "0x1E4E838")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F74")]
		[Address(RVA = "0x1E4E860", Offset = "0x1E4E860", VA = "0x1E4E860")]
		public void Init()
		{
		}

		[Token(Token = "0x6001F75")]
		[Address(RVA = "0x1E4EBDC", Offset = "0x1E4EBDC", VA = "0x1E4EBDC")]
		public void TriggerHapticPulse(float durationInSec)
		{
		}

		[Token(Token = "0x6001F76")]
		[Address(RVA = "0x1E4E908", Offset = "0x1E4E908", VA = "0x1E4E908")]
		private void resolveHandAndVisuals()
		{
		}

		[Token(Token = "0x6001F77")]
		[Address(RVA = "0x1E4ED2C", Offset = "0x1E4ED2C", VA = "0x1E4ED2C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001F78")]
		[Address(RVA = "0x1E4EDF8", Offset = "0x1E4EDF8", VA = "0x1E4EDF8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F79")]
		[Address(RVA = "0x1E4F784", Offset = "0x1E4F784", VA = "0x1E4F784")]
		public void ManualUpdatePositionAndRotation()
		{
		}

		[Token(Token = "0x6001F7A")]
		[Address(RVA = "0x1E4E3AC", Offset = "0x1E4E3AC", VA = "0x1E4E3AC")]
		public void SetHandActive(bool active)
		{
		}

		[Token(Token = "0x6001F7B")]
		[Address(RVA = "0x1E4F930", Offset = "0x1E4F930", VA = "0x1E4F930")]
		public void LockHandInput(bool locked)
		{
		}

		[Token(Token = "0x6001F7C")]
		[Address(RVA = "0x1E4F9F8", Offset = "0x1E4F9F8", VA = "0x1E4F9F8")]
		public bool GrabWentDown()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F7D")]
		[Address(RVA = "0x1E4FAB0", Offset = "0x1E4FAB0", VA = "0x1E4FAB0")]
		public bool GrabWentUp()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F7E")]
		[Address(RVA = "0x1E4FB68", Offset = "0x1E4FB68", VA = "0x1E4FB68")]
		public bool ControllerIsHandTracker()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F7F")]
		[Address(RVA = "0x1E4FC20", Offset = "0x1E4FC20", VA = "0x1E4FC20")]
		public void ForceCancelGrip()
		{
		}

		[Token(Token = "0x6001F80")]
		[Address(RVA = "0x1E4FC64", Offset = "0x1E4FC64", VA = "0x1E4FC64")]
		internal static bool ValidInteractible(Collider col, out Interactible validInteractible)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F81")]
		[Address(RVA = "0x1E4FEF4", Offset = "0x1E4FEF4", VA = "0x1E4FEF4")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001F82")]
		[Address(RVA = "0x1E4F184", Offset = "0x1E4F184", VA = "0x1E4F184")]
		private void tryBeginInteraction()
		{
		}

		[Token(Token = "0x6001F83")]
		[Address(RVA = "0x1E4FF88", Offset = "0x1E4FF88", VA = "0x1E4FF88")]
		private void beginInteraction(Interactible interactible)
		{
		}

		[Token(Token = "0x6001F84")]
		[Address(RVA = "0x1E50118", Offset = "0x1E50118", VA = "0x1E50118")]
		private void calculateInteractionOffsets()
		{
		}

		[Token(Token = "0x6001F85")]
		[Address(RVA = "0x1E505F4", Offset = "0x1E505F4", VA = "0x1E505F4")]
		public void ReleaseInteractible()
		{
		}

		[Token(Token = "0x6001F86")]
		[Address(RVA = "0x1E505FC", Offset = "0x1E505FC", VA = "0x1E505FC")]
		private void ReleaseInteractible(Interactible interactible)
		{
		}

		[Token(Token = "0x6001F87")]
		[Address(RVA = "0x1E4F290", Offset = "0x1E4F290", VA = "0x1E4F290")]
		private void endInteraction()
		{
		}

		[Token(Token = "0x6001F88")]
		[Address(RVA = "0x1E507DC", Offset = "0x1E507DC", VA = "0x1E507DC")]
		public void OnInteractibleDisabled()
		{
		}

		[Token(Token = "0x6001F89")]
		[Address(RVA = "0x1E50880", Offset = "0x1E50880", VA = "0x1E50880")]
		public static HandTracker GetHandTracker(GameObject other)
		{
			return null;
		}

		[Token(Token = "0x6001F8A")]
		[Address(RVA = "0x1E509EC", Offset = "0x1E509EC", VA = "0x1E509EC")]
		public static HandTracker GetHandTracker(Collider other)
		{
			return null;
		}

		[Token(Token = "0x6001F8B")]
		[Address(RVA = "0x1E50A1C", Offset = "0x1E50A1C", VA = "0x1E50A1C")]
		public HandTracker()
		{
		}
	}
	[Token(Token = "0x20005BC")]
	public delegate void OnInteractibleInRange(Collider other);
	[Token(Token = "0x20005BD")]
	public interface HandTrackerInteractions
	{
		[Token(Token = "0x6001F90")]
		void Init(HandTracker.HandednessId handedness);

		[Token(Token = "0x6001F91")]
		void UpdateController();

		[Token(Token = "0x6001F92")]
		Collider GetInteractionCollider();

		[Token(Token = "0x6001F93")]
		Transform GetInteractionAnchor();

		[Token(Token = "0x6001F94")]
		void ActivateController(bool active);

		[Token(Token = "0x6001F95")]
		void LockHandInput(bool locked);

		[Token(Token = "0x6001F96")]
		Interactible FindClosestInteractible();

		[Token(Token = "0x6001F97")]
		void SetInRangeCb(OnInteractibleInRange cb);

		[Token(Token = "0x6001F98")]
		bool GrabWentDown();

		[Token(Token = "0x6001F99")]
		bool GrabWentUp();

		[Token(Token = "0x6001F9A")]
		bool IsTracking();

		[Token(Token = "0x6001F9B")]
		void InteractionBegin();

		[Token(Token = "0x6001F9C")]
		void InteractionEnd();

		[Token(Token = "0x6001F9D")]
		bool IsHandTracker();
	}
	[Token(Token = "0x20005BE")]
	public class HandTrackerController : MonoBehaviour, HandTrackerInteractions
	{
		[Token(Token = "0x4001986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform m_interactionAnchor;

		[Token(Token = "0x4001987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Collider m_interactionCollider;

		[Token(Token = "0x4001988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject m_visuals;

		[Token(Token = "0x4001989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject m_lockedVisuals;

		[Token(Token = "0x400198A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float m_overlapSphereRadius;

		[Token(Token = "0x400198B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OnInteractibleInRange m_interactibleInRangeCb;

		[Token(Token = "0x400198C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private PlayerInputHandler m_inputHandler;

		[Token(Token = "0x400198D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private FtgButton m_gripButton;

		[Token(Token = "0x400198E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private FtgButton m_triggerButton;

		[Token(Token = "0x400198F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private FtgButton m_currentInteractButton;

		[Token(Token = "0x4001990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Collider[] m_overlapSphereResults;

		[Token(Token = "0x6001F9E")]
		[Address(RVA = "0x1E4EC2C", Offset = "0x1E4EC2C", VA = "0x1E4EC2C")]
		internal void SetUpController(Collider collider, GameObject visuals, GameObject lockedVisuals, Transform interactionAnchor)
		{
		}

		[Token(Token = "0x6001F9F")]
		[Address(RVA = "0x1E50AD4", Offset = "0x1E50AD4", VA = "0x1E50AD4")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001FA0")]
		[Address(RVA = "0x1E51218", Offset = "0x1E51218", VA = "0x1E51218")]
		private void setInputDown(ref bool inputWentDown, FtgButton currentButton)
		{
		}

		[Token(Token = "0x6001FA1")]
		[Address(RVA = "0x1E51228", Offset = "0x1E51228", VA = "0x1E51228")]
		private void setInputUp(ref bool inputWentUp)
		{
		}

		[Token(Token = "0x6001FA2")]
		[Address(RVA = "0x1E51234", Offset = "0x1E51234", VA = "0x1E51234", Slot = "4")]
		public void Init(HandTracker.HandednessId handedness)
		{
		}

		[Token(Token = "0x6001FA3")]
		[Address(RVA = "0x1E51384", Offset = "0x1E51384", VA = "0x1E51384", Slot = "5")]
		public void UpdateController()
		{
		}

		[Token(Token = "0x6001FA4")]
		[Address(RVA = "0x1E51388", Offset = "0x1E51388", VA = "0x1E51388", Slot = "6")]
		public Collider GetInteractionCollider()
		{
			return null;
		}

		[Token(Token = "0x6001FA5")]
		[Address(RVA = "0x1E51390", Offset = "0x1E51390", VA = "0x1E51390", Slot = "7")]
		public Transform GetInteractionAnchor()
		{
			return null;
		}

		[Token(Token = "0x6001FA6")]
		[Address(RVA = "0x1E51398", Offset = "0x1E51398", VA = "0x1E51398", Slot = "8")]
		public void ActivateController(bool active)
		{
		}

		[Token(Token = "0x6001FA7")]
		[Address(RVA = "0x1E51400", Offset = "0x1E51400", VA = "0x1E51400", Slot = "9")]
		public void LockHandInput(bool locked)
		{
		}

		[Token(Token = "0x6001FA8")]
		[Address(RVA = "0x1E51468", Offset = "0x1E51468", VA = "0x1E51468", Slot = "10")]
		public Interactible FindClosestInteractible()
		{
			return null;
		}

		[Token(Token = "0x6001FA9")]
		[Address(RVA = "0x1E51634", Offset = "0x1E51634", VA = "0x1E51634", Slot = "11")]
		public void SetInRangeCb(OnInteractibleInRange cb)
		{
		}

		[Token(Token = "0x6001FAA")]
		[Address(RVA = "0x1E5163C", Offset = "0x1E5163C", VA = "0x1E5163C", Slot = "12")]
		public bool GrabWentDown()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FAB")]
		[Address(RVA = "0x1E516CC", Offset = "0x1E516CC", VA = "0x1E516CC", Slot = "13")]
		public bool GrabWentUp()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FAC")]
		[Address(RVA = "0x1E5176C", Offset = "0x1E5176C", VA = "0x1E5176C", Slot = "14")]
		public bool IsTracking()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FAD")]
		[Address(RVA = "0x1E51774", Offset = "0x1E51774", VA = "0x1E51774", Slot = "15")]
		public void InteractionBegin()
		{
		}

		[Token(Token = "0x6001FAE")]
		[Address(RVA = "0x1E51778", Offset = "0x1E51778", VA = "0x1E51778", Slot = "16")]
		public void InteractionEnd()
		{
		}

		[Token(Token = "0x6001FAF")]
		[Address(RVA = "0x1E5177C", Offset = "0x1E5177C", VA = "0x1E5177C", Slot = "17")]
		public bool IsHandTracker()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FB0")]
		[Address(RVA = "0x1E51784", Offset = "0x1E51784", VA = "0x1E51784")]
		public HandTrackerController()
		{
		}
	}
	[Token(Token = "0x20005BF")]
	public class HandTrackerProxy : MonoBehaviour
	{
		[Token(Token = "0x4001991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private HandTracker m_hand;

		[Token(Token = "0x6001FB1")]
		[Address(RVA = "0x1E50954", Offset = "0x1E50954", VA = "0x1E50954")]
		public HandTracker GetHand()
		{
			return null;
		}

		[Token(Token = "0x6001FB2")]
		[Address(RVA = "0x1E517EC", Offset = "0x1E517EC", VA = "0x1E517EC")]
		public HandTrackerProxy()
		{
		}
	}
	[Token(Token = "0x20005C0")]
	public class HandTrackerSelector : MonoBehaviour, HandTrackerInteractions
	{
		[Token(Token = "0x4001992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HandTrackerSkeleton m_skeletonController;

		[Token(Token = "0x4001993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandTrackerController m_controllerController;

		[Token(Token = "0x4001994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HandTrackerInteractions m_activeController;

		[Token(Token = "0x4001995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_skeletonActive;

		[Token(Token = "0x6001FB3")]
		[Address(RVA = "0x1E517F4", Offset = "0x1E517F4", VA = "0x1E517F4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001FB4")]
		[Address(RVA = "0x1E5191C", Offset = "0x1E5191C", VA = "0x1E5191C")]
		private void UpdateActiveController()
		{
		}

		[Token(Token = "0x6001FB5")]
		[Address(RVA = "0x1E51868", Offset = "0x1E51868", VA = "0x1E51868")]
		private void enableController(bool skeletonActive)
		{
		}

		[Token(Token = "0x6001FB6")]
		[Address(RVA = "0x1E519B4", Offset = "0x1E519B4", VA = "0x1E519B4", Slot = "4")]
		public void Init(HandTracker.HandednessId handedness)
		{
		}

		[Token(Token = "0x6001FB7")]
		[Address(RVA = "0x1E51CAC", Offset = "0x1E51CAC", VA = "0x1E51CAC", Slot = "5")]
		public void UpdateController()
		{
		}

		[Token(Token = "0x6001FB8")]
		[Address(RVA = "0x1E51D70", Offset = "0x1E51D70", VA = "0x1E51D70", Slot = "6")]
		public Collider GetInteractionCollider()
		{
			return null;
		}

		[Token(Token = "0x6001FB9")]
		[Address(RVA = "0x1E51E28", Offset = "0x1E51E28", VA = "0x1E51E28", Slot = "7")]
		public Transform GetInteractionAnchor()
		{
			return null;
		}

		[Token(Token = "0x6001FBA")]
		[Address(RVA = "0x1E51EE0", Offset = "0x1E51EE0", VA = "0x1E51EE0", Slot = "8")]
		public void ActivateController(bool active)
		{
		}

		[Token(Token = "0x6001FBB")]
		[Address(RVA = "0x1E51FAC", Offset = "0x1E51FAC", VA = "0x1E51FAC", Slot = "9")]
		public void LockHandInput(bool locked)
		{
		}

		[Token(Token = "0x6001FBC")]
		[Address(RVA = "0x1E52060", Offset = "0x1E52060", VA = "0x1E52060", Slot = "10")]
		public Interactible FindClosestInteractible()
		{
			return null;
		}

		[Token(Token = "0x6001FBD")]
		[Address(RVA = "0x1E52118", Offset = "0x1E52118", VA = "0x1E52118", Slot = "11")]
		public void SetInRangeCb(OnInteractibleInRange cb)
		{
		}

		[Token(Token = "0x6001FBE")]
		[Address(RVA = "0x1E52170", Offset = "0x1E52170", VA = "0x1E52170", Slot = "12")]
		public bool GrabWentDown()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FBF")]
		[Address(RVA = "0x1E52228", Offset = "0x1E52228", VA = "0x1E52228", Slot = "13")]
		public bool GrabWentUp()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FC0")]
		[Address(RVA = "0x1E522E0", Offset = "0x1E522E0", VA = "0x1E522E0", Slot = "14")]
		public bool IsTracking()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FC1")]
		[Address(RVA = "0x1E52398", Offset = "0x1E52398", VA = "0x1E52398", Slot = "15")]
		public void InteractionBegin()
		{
		}

		[Token(Token = "0x6001FC2")]
		[Address(RVA = "0x1E52450", Offset = "0x1E52450", VA = "0x1E52450", Slot = "16")]
		public void InteractionEnd()
		{
		}

		[Token(Token = "0x6001FC3")]
		[Address(RVA = "0x1E52508", Offset = "0x1E52508", VA = "0x1E52508", Slot = "17")]
		public bool IsHandTracker()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FC4")]
		[Address(RVA = "0x1E525C0", Offset = "0x1E525C0", VA = "0x1E525C0")]
		public HandTrackerSelector()
		{
		}
	}
	[Token(Token = "0x20005C1")]
	public class HandTrackerSkeleton : MonoBehaviour, HandTrackerInteractions
	{
		[Token(Token = "0x2000FCF")]
		private class JointSortHelper
		{
			[Token(Token = "0x4002539")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FtgJoint joint;

			[Token(Token = "0x400253A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int parentCount;

			[Token(Token = "0x60034F1")]
			[Address(RVA = "0x1E53F7C", Offset = "0x1E53F7C", VA = "0x1E53F7C")]
			public JointSortHelper()
			{
			}
		}

		[Token(Token = "0x2000FD0")]
		private class Finger
		{
			[Token(Token = "0x400253B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FtgJoint[] joints;

			[Token(Token = "0x400253C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int jointCount;

			[Token(Token = "0x60034F2")]
			[Address(RVA = "0x1E53F40", Offset = "0x1E53F40", VA = "0x1E53F40")]
			public Finger(FtgJoint[] joints, int jointCount)
			{
			}

			[Token(Token = "0x60034F3")]
			[Address(RVA = "0x1E54230", Offset = "0x1E54230", VA = "0x1E54230")]
			public bool InAnyJointLocked()
			{
				return default(bool);
			}

			[Token(Token = "0x60034F4")]
			[Address(RVA = "0x1E542D0", Offset = "0x1E542D0", VA = "0x1E542D0")]
			public int LockedJointCount()
			{
				return default(int);
			}

			[Token(Token = "0x60034F5")]
			[Address(RVA = "0x1E53A70", Offset = "0x1E53A70", VA = "0x1E53A70")]
			public void LockJointsToCurrentRotation()
			{
			}

			[Token(Token = "0x60034F6")]
			[Address(RVA = "0x1E53BA8", Offset = "0x1E53BA8", VA = "0x1E53BA8")]
			public void UnlockJoints()
			{
			}

			[Token(Token = "0x60034F7")]
			[Address(RVA = "0x1E54378", Offset = "0x1E54378", VA = "0x1E54378")]
			public Vector3 GetTipPosition()
			{
				return default(Vector3);
			}

			[Token(Token = "0x60034F8")]
			[Address(RVA = "0x1E529D4", Offset = "0x1E529D4", VA = "0x1E529D4")]
			public bool IsFingerFlexing(float minRotation)
			{
				return default(bool);
			}

			[Token(Token = "0x60034F9")]
			[Address(RVA = "0x1E543FC", Offset = "0x1E543FC", VA = "0x1E543FC")]
			private float fixRotation(float angle)
			{
				return default(float);
			}

			[Token(Token = "0x60034FA")]
			[Address(RVA = "0x1E5441C", Offset = "0x1E5441C", VA = "0x1E5441C")]
			public string DebugString()
			{
				return null;
			}
		}

		[Token(Token = "0x2000FD1")]
		private class Confidencer
		{
			[Token(Token = "0x400253D")]
			private const int c_capacity = 100;

			[Token(Token = "0x400253E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private List<float> m_samples;

			[Token(Token = "0x400253F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private float m_average;

			[Token(Token = "0x4002540")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private float m_minValue;

			[Token(Token = "0x4002541")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private float m_maxValue;

			[Token(Token = "0x60034FB")]
			[Address(RVA = "0x1E535D0", Offset = "0x1E535D0", VA = "0x1E535D0")]
			public void Init(float minVal, float maxVal)
			{
			}

			[Token(Token = "0x60034FC")]
			[Address(RVA = "0x1E52BE4", Offset = "0x1E52BE4", VA = "0x1E52BE4")]
			public void AddSample(float val)
			{
			}

			[Token(Token = "0x60034FD")]
			[Address(RVA = "0x1E529BC", Offset = "0x1E529BC", VA = "0x1E529BC")]
			public float GetConfidenceNormalized()
			{
				return default(float);
			}

			[Token(Token = "0x60034FE")]
			[Address(RVA = "0x1E54158", Offset = "0x1E54158", VA = "0x1E54158")]
			private void calculateAverage()
			{
			}

			[Token(Token = "0x60034FF")]
			[Address(RVA = "0x1E54028", Offset = "0x1E54028", VA = "0x1E54028")]
			public Confidencer()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000FD2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BF10", Offset = "0x97BF10")]
		private sealed class <>c
		{
			[Token(Token = "0x4002542")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002543")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<JointSortHelper> <>9__50_0;

			[Token(Token = "0x6003501")]
			[Address(RVA = "0x1E54108", Offset = "0x1E54108", VA = "0x1E54108")]
			public <>c()
			{
			}

			[Token(Token = "0x6003502")]
			[Address(RVA = "0x1E54110", Offset = "0x1E54110", VA = "0x1E54110")]
			internal int <sortJoints>b__50_0(JointSortHelper x, JointSortHelper y)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4001996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform m_interactionAnchor;

		[Token(Token = "0x4001997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Collider m_interactionCollider;

		[Token(Token = "0x4001998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject m_visuals;

		[Token(Token = "0x4001999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public FtgCustomSkeleton m_skeleton;

		[Token(Token = "0x400199A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OnInteractibleInRange m_interactibleInRangeCb;

		[Token(Token = "0x400199B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float m_overlapSphereRadius;

		[Token(Token = "0x400199C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Collider[] m_overlapSphereResults;

		[Token(Token = "0x400199D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform m_lockedInteractionAnchor;

		[Token(Token = "0x400199E")]
		private const int c_thumbIdx = 0;

		[Token(Token = "0x400199F")]
		private const int c_indexIdx = 1;

		[Token(Token = "0x40019A0")]
		private const int c_middleIdx = 2;

		[Token(Token = "0x40019A1")]
		private const int c_ringIdx = 3;

		[Token(Token = "0x40019A2")]
		private const int c_pinkyIdx = 4;

		[Token(Token = "0x40019A3")]
		private const int c_fingerCount = 5;

		[Token(Token = "0x40019A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Finger[] m_fingers;

		[Token(Token = "0x40019A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isDown;

		[Token(Token = "0x40019A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_wasDown;

		[Token(Token = "0x40019A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		private bool m_isInteracting;

		[Token(Token = "0x40019A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		private bool m_isActive;

		[Token(Token = "0x40019A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool m_isInputLocked;

		[Token(Token = "0x40019AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Confidencer m_pinchConfidencer;

		[Token(Token = "0x40019AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private SkinnedMeshRenderer m_handRenderer;

		[Token(Token = "0x40019AC")]
		private const float c_minAlpha = 0f;

		[Token(Token = "0x40019AD")]
		private const float c_maxAlpha = 1f;

		[Token(Token = "0x40019AE")]
		private const float c_lockedAlpha = 0.5f;

		[Token(Token = "0x40019AF")]
		private const float c_lerpSpeed = 10f;

		[Token(Token = "0x40019B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float m_targetAlpha;

		[Token(Token = "0x40019B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float m_currentAlpha;

		[Token(Token = "0x40019B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int HandAlphaId;

		[Token(Token = "0x40019B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private HandTracker.HandednessId m_handedness;

		[Token(Token = "0x6001FC5")]
		[Address(RVA = "0x1E525C8", Offset = "0x1E525C8", VA = "0x1E525C8", Slot = "14")]
		public bool IsTracking()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FC6")]
		[Address(RVA = "0x1E52608", Offset = "0x1E52608", VA = "0x1E52608")]
		private void updateVisibility()
		{
		}

		[Token(Token = "0x6001FC7")]
		[Address(RVA = "0x1E52884", Offset = "0x1E52884", VA = "0x1E52884")]
		private bool isGripping()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FC8")]
		[Address(RVA = "0x1E52B18", Offset = "0x1E52B18", VA = "0x1E52B18")]
		private void updateConfidence()
		{
		}

		[Token(Token = "0x6001FC9")]
		[Address(RVA = "0x1E51A10", Offset = "0x1E51A10", VA = "0x1E51A10", Slot = "4")]
		public void Init(HandTracker.HandednessId handedness)
		{
		}

		[Token(Token = "0x6001FCA")]
		[Address(RVA = "0x1E535D8", Offset = "0x1E535D8", VA = "0x1E535D8", Slot = "5")]
		public void UpdateController()
		{
		}

		[Token(Token = "0x6001FCB")]
		[Address(RVA = "0x1E537B0", Offset = "0x1E537B0", VA = "0x1E537B0", Slot = "6")]
		public Collider GetInteractionCollider()
		{
			return null;
		}

		[Token(Token = "0x6001FCC")]
		[Address(RVA = "0x1E537B8", Offset = "0x1E537B8", VA = "0x1E537B8", Slot = "7")]
		public Transform GetInteractionAnchor()
		{
			return null;
		}

		[Token(Token = "0x6001FCD")]
		[Address(RVA = "0x1E51F40", Offset = "0x1E51F40", VA = "0x1E51F40", Slot = "8")]
		public void ActivateController(bool active)
		{
		}

		[Token(Token = "0x6001FCE")]
		[Address(RVA = "0x1E5200C", Offset = "0x1E5200C", VA = "0x1E5200C", Slot = "9")]
		public void LockHandInput(bool locked)
		{
		}

		[Token(Token = "0x6001FCF")]
		[Address(RVA = "0x1E537C0", Offset = "0x1E537C0", VA = "0x1E537C0", Slot = "10")]
		public Interactible FindClosestInteractible()
		{
			return null;
		}

		[Token(Token = "0x6001FD0")]
		[Address(RVA = "0x1E52168", Offset = "0x1E52168", VA = "0x1E52168", Slot = "11")]
		public void SetInRangeCb(OnInteractibleInRange cb)
		{
		}

		[Token(Token = "0x6001FD1")]
		[Address(RVA = "0x1E5398C", Offset = "0x1E5398C", VA = "0x1E5398C", Slot = "12")]
		public bool GrabWentDown()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FD2")]
		[Address(RVA = "0x1E539AC", Offset = "0x1E539AC", VA = "0x1E539AC", Slot = "13")]
		public bool GrabWentUp()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FD3")]
		[Address(RVA = "0x1E539CC", Offset = "0x1E539CC", VA = "0x1E539CC", Slot = "15")]
		public void InteractionBegin()
		{
		}

		[Token(Token = "0x6001FD4")]
		[Address(RVA = "0x1E53B08", Offset = "0x1E53B08", VA = "0x1E53B08", Slot = "16")]
		public void InteractionEnd()
		{
		}

		[Token(Token = "0x6001FD5")]
		[Address(RVA = "0x1E53C3C", Offset = "0x1E53C3C", VA = "0x1E53C3C", Slot = "17")]
		public bool IsHandTracker()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FD6")]
		[Address(RVA = "0x1E527EC", Offset = "0x1E527EC", VA = "0x1E527EC")]
		private bool IsInputLocked()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FD7")]
		[Address(RVA = "0x1E52CB0", Offset = "0x1E52CB0", VA = "0x1E52CB0")]
		private void initFingers()
		{
		}

		[Token(Token = "0x6001FD8")]
		[Address(RVA = "0x1E53C44", Offset = "0x1E53C44", VA = "0x1E53C44")]
		private void sortJoints(FtgJoint[] joints)
		{
		}

		[Token(Token = "0x6001FD9")]
		[Address(RVA = "0x1E53F84", Offset = "0x1E53F84", VA = "0x1E53F84")]
		public HandTrackerSkeleton()
		{
		}
	}
	[Token(Token = "0x20005C2")]
	public class InputHandler : MonoBehaviour
	{
		[Token(Token = "0x2000FD3")]
		public enum MCButtonId
		{
			[Token(Token = "0x4002545")]
			Grip = 1,
			[Token(Token = "0x4002546")]
			Trigger = 2,
			[Token(Token = "0x4002547")]
			Reload = 4,
			[Token(Token = "0x4002548")]
			Count = 3
		}

		[Token(Token = "0x2000FD4")]
		public struct DigitalInputState
		{
			[Token(Token = "0x4002549")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int currState;

			[Token(Token = "0x400254A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int prevState;
		}

		[Token(Token = "0x40019B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private HandTracker m_hand;

		[Token(Token = "0x40019B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private DigitalInputState m_inputState;

		[Token(Token = "0x40019B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRInput.Controller m_ovrController;

		[Token(Token = "0x40019B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRInput.Button[] m_ovrInputMap;

		[Token(Token = "0x170002FB")]
		public HandTracker Hand
		{
			[Token(Token = "0x6001FDA")]
			[Address(RVA = "0x1E57200", Offset = "0x1E57200", VA = "0x1E57200")]
			set
			{
			}
		}

		[Token(Token = "0x6001FDB")]
		[Address(RVA = "0x1E57244", Offset = "0x1E57244", VA = "0x1E57244")]
		private void Start()
		{
		}

		[Token(Token = "0x6001FDC")]
		[Address(RVA = "0x1E5724C", Offset = "0x1E5724C", VA = "0x1E5724C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FDD")]
		[Address(RVA = "0x1E5733C", Offset = "0x1E5733C", VA = "0x1E5733C")]
		public bool wentDown(MCButtonId action)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FDE")]
		[Address(RVA = "0x1E57360", Offset = "0x1E57360", VA = "0x1E57360")]
		public bool wentUp(MCButtonId action)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FDF")]
		[Address(RVA = "0x1E57384", Offset = "0x1E57384", VA = "0x1E57384")]
		public bool isDown(MCButtonId action)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FE0")]
		[Address(RVA = "0x1E57394", Offset = "0x1E57394", VA = "0x1E57394")]
		public InputHandler()
		{
		}
	}
	[Token(Token = "0x20005C3")]
	public class Interactible : FtgBehaviour
	{
		[Token(Token = "0x40019B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x983004", Offset = "0x983004")]
		public bool canBeInteractedWith;

		[Token(Token = "0x40019B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool unparentOnPickup;

		[Token(Token = "0x40019BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool makeNonKinematicOnRelease;

		[Token(Token = "0x40019BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool supportsAutoScaling;

		[Token(Token = "0x40019BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public bool overridePositionAndRotation;

		[Token(Token = "0x40019BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
		public bool triggersHapticPulse;

		[Token(Token = "0x40019BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x98303C", Offset = "0x98303C")]
		public Transform secondaryAnchor;

		[Token(Token = "0x40019BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform primaryAnchor;

		[Token(Token = "0x40019C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool alignWithWorldUp;

		[Token(Token = "0x40019C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float maxPrimaryAngleDeviation;

		[Token(Token = "0x40019C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform newParentOnRelease;

		[Token(Token = "0x40019C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RigidbodyConstraints m_originalConstraints;

		[Token(Token = "0x40019C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool m_wasKinematic;

		[Token(Token = "0x40019C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected int m_refCount;

		[Token(Token = "0x40019C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Rigidbody m_rigidBody;

		[Token(Token = "0x40019C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public InteractibleGiver m_interactibleGiver;

		[Token(Token = "0x40019C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected HandTracker m_currentHand;

		[Token(Token = "0x40019C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected HandTracker m_previousHand;

		[Token(Token = "0x40019CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 m_originalScale;

		[Token(Token = "0x40019CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Vector3 m_targetScale;

		[Token(Token = "0x40019CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool m_scaleNeedsUpdate;

		[Token(Token = "0x170002FC")]
		public HandTracker Hand
		{
			[Token(Token = "0x6001FE9")]
			[Address(RVA = "0x1E57510", Offset = "0x1E57510", VA = "0x1E57510")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FE1")]
		[Address(RVA = "0x1E574EC", Offset = "0x1E574EC", VA = "0x1E574EC", Slot = "5")]
		protected virtual void handleAwake()
		{
		}

		[Token(Token = "0x6001FE2")]
		[Address(RVA = "0x1E574F0", Offset = "0x1E574F0", VA = "0x1E574F0", Slot = "6")]
		protected virtual void handleStart()
		{
		}

		[Token(Token = "0x6001FE3")]
		[Address(RVA = "0x1E574F4", Offset = "0x1E574F4", VA = "0x1E574F4", Slot = "7")]
		protected virtual void handleUpdate()
		{
		}

		[Token(Token = "0x6001FE4")]
		[Address(RVA = "0x1E574F8", Offset = "0x1E574F8", VA = "0x1E574F8", Slot = "8")]
		protected virtual void handlePrimaryHandTrigger(HandTracker hand)
		{
		}

		[Token(Token = "0x6001FE5")]
		[Address(RVA = "0x1E574FC", Offset = "0x1E574FC", VA = "0x1E574FC", Slot = "9")]
		protected virtual void handleSecondaryHandTrigger(HandTracker hand)
		{
		}

		[Token(Token = "0x6001FE6")]
		[Address(RVA = "0x1E57500", Offset = "0x1E57500", VA = "0x1E57500", Slot = "10")]
		protected virtual void handleHandGripBegin(HandTracker hand)
		{
		}

		[Token(Token = "0x6001FE7")]
		[Address(RVA = "0x1E57504", Offset = "0x1E57504", VA = "0x1E57504", Slot = "11")]
		protected virtual void handleHandGripEnd(HandTracker hand)
		{
		}

		[Token(Token = "0x6001FE8")]
		[Address(RVA = "0x1E57508", Offset = "0x1E57508", VA = "0x1E57508", Slot = "12")]
		public virtual bool OnRespawn(OutOfBoundsVolume.InteractibleTransform interactibleTransform)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FEA")]
		[Address(RVA = "0x1E5759C", Offset = "0x1E5759C", VA = "0x1E5759C", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001FEB")]
		[Address(RVA = "0x1E57664", Offset = "0x1E57664", VA = "0x1E57664")]
		private void Start()
		{
		}

		[Token(Token = "0x6001FEC")]
		[Address(RVA = "0x1E57670", Offset = "0x1E57670", VA = "0x1E57670")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FED")]
		[Address(RVA = "0x1E57864", Offset = "0x1E57864", VA = "0x1E57864")]
		public void SetTargetScale(Vector3 targetScale)
		{
		}

		[Token(Token = "0x6001FEE")]
		[Address(RVA = "0x1E57878", Offset = "0x1E57878", VA = "0x1E57878")]
		public Vector3 GetOriginalScale()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001FEF")]
		[Address(RVA = "0x1E57884", Offset = "0x1E57884", VA = "0x1E57884")]
		public void OnHandGripBegin(HandTracker hand)
		{
		}

		[Token(Token = "0x6001FF0")]
		[Address(RVA = "0x1E57A18", Offset = "0x1E57A18", VA = "0x1E57A18")]
		public void OnHandGripEnd(HandTracker hand)
		{
		}

		[Token(Token = "0x6001FF1")]
		[Address(RVA = "0x1E57B98", Offset = "0x1E57B98", VA = "0x1E57B98")]
		public void OnPrimaryHandTrigger(HandTracker hand)
		{
		}

		[Token(Token = "0x6001FF2")]
		[Address(RVA = "0x1E507D4", Offset = "0x1E507D4", VA = "0x1E507D4")]
		public Rigidbody GetRigidbody()
		{
			return null;
		}

		[Token(Token = "0x6001FF3")]
		[Address(RVA = "0x1E4FEE4", Offset = "0x1E4FEE4", VA = "0x1E4FEE4")]
		public bool IsBeingInteractedWith()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FF4")]
		[Address(RVA = "0x1E4DEB8", Offset = "0x1E4DEB8", VA = "0x1E4DEB8")]
		public Interactible()
		{
		}
	}
	[Token(Token = "0x20005C4")]
	public class InteractibleCustomRespawn : Interactible
	{
		[Token(Token = "0x40019CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x983084", Offset = "0x983084")]
		public Transform m_newRespawnTransform;

		[Token(Token = "0x40019CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool m_makeKinematicOnRespawn;

		[Token(Token = "0x40019CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		public bool m_destroyInsteadOfRespawn;

		[Token(Token = "0x40019D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
		protected bool m_wantsDestroyed;

		[Token(Token = "0x40019D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int m_framesToWait;

		[Token(Token = "0x40019D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private int m_frameCounter;

		[Token(Token = "0x6001FF5")]
		[Address(RVA = "0x1E57BA4", Offset = "0x1E57BA4", VA = "0x1E57BA4", Slot = "5")]
		protected override void handleAwake()
		{
		}

		[Token(Token = "0x6001FF6")]
		[Address(RVA = "0x1E57BA8", Offset = "0x1E57BA8", VA = "0x1E57BA8", Slot = "6")]
		protected override void handleStart()
		{
		}

		[Token(Token = "0x6001FF7")]
		[Address(RVA = "0x1E57BAC", Offset = "0x1E57BAC", VA = "0x1E57BAC", Slot = "7")]
		protected override void handleUpdate()
		{
		}

		[Token(Token = "0x6001FF8")]
		[Address(RVA = "0x1E57C50", Offset = "0x1E57C50", VA = "0x1E57C50", Slot = "12")]
		public override bool OnRespawn(OutOfBoundsVolume.InteractibleTransform interactibleTransform)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FF9")]
		[Address(RVA = "0x1E57F88", Offset = "0x1E57F88", VA = "0x1E57F88")]
		public InteractibleCustomRespawn()
		{
		}
	}
	[Token(Token = "0x20005C5")]
	public class InteractibleGiver : MonoBehaviour
	{
		[Token(Token = "0x2000FD5")]
		public delegate void OnGiveInteractibleCallback();

		[Token(Token = "0x40019D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public OnGiveInteractibleCallback m_onGiveInteractibleCallback;

		[Token(Token = "0x40019D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Interactible m_interactibleToGive;

		[Token(Token = "0x170002FD")]
		public Interactible InteractibleToGive
		{
			[Token(Token = "0x6001FFB")]
			[Address(RVA = "0x1E4FEDC", Offset = "0x1E4FEDC", VA = "0x1E4FEDC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FFA")]
		[Address(RVA = "0x1E57F9C", Offset = "0x1E57F9C", VA = "0x1E57F9C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001FFC")]
		[Address(RVA = "0x1E57FCC", Offset = "0x1E57FCC", VA = "0x1E57FCC")]
		public void OnPickUpGivenInteractible()
		{
		}

		[Token(Token = "0x6001FFD")]
		[Address(RVA = "0x1E583DC", Offset = "0x1E583DC", VA = "0x1E583DC")]
		public InteractibleGiver()
		{
		}
	}
	[Token(Token = "0x20005C6")]
	public class InteractibleGiverEventNC : EventNode
	{
		[Token(Token = "0x40019D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private FlowOutput m_flowOutput;

		[Token(Token = "0x40019D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private ValueInput<InteractibleGiver> m_interactibleGiver;

		[Token(Token = "0x6001FFE")]
		[Address(RVA = "0x1E58434", Offset = "0x1E58434", VA = "0x1E58434", Slot = "26")]
		public override void OnGraphStarted()
		{
		}

		[Token(Token = "0x6001FFF")]
		[Address(RVA = "0x1E58538", Offset = "0x1E58538", VA = "0x1E58538", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6002000")]
		[Address(RVA = "0x1E5862C", Offset = "0x1E5862C", VA = "0x1E5862C")]
		private Interactible GetInteractible()
		{
			return null;
		}

		[Token(Token = "0x6002001")]
		[Address(RVA = "0x1E586A0", Offset = "0x1E586A0", VA = "0x1E586A0")]
		private void onInteractibleGiven()
		{
		}

		[Token(Token = "0x6002002")]
		[Address(RVA = "0x1E58700", Offset = "0x1E58700", VA = "0x1E58700")]
		public InteractibleGiverEventNC()
		{
		}
	}
	[Token(Token = "0x20005C7")]
	public class InteractibleTimedRespawn : Interactible
	{
		[Token(Token = "0x2000FD6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BF20", Offset = "0x97BF20")]
		private sealed class <delayedRespawn>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400254B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400254C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400254D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public InteractibleTimedRespawn <>4__this;

			[Token(Token = "0x1700041B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600350A")]
				[Address(RVA = "0x1E59124", Offset = "0x1E59124", VA = "0x1E59124", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700041C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600350C")]
				[Address(RVA = "0x1E59194", Offset = "0x1E59194", VA = "0x1E59194", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003507")]
			[Address(RVA = "0x1E58D84", Offset = "0x1E58D84", VA = "0x1E58D84")]
			[DebuggerHidden]
			public <delayedRespawn>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6003508")]
			[Address(RVA = "0x1E59088", Offset = "0x1E59088", VA = "0x1E59088", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003509")]
			[Address(RVA = "0x1E5908C", Offset = "0x1E5908C", VA = "0x1E5908C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600350B")]
			[Address(RVA = "0x1E5912C", Offset = "0x1E5912C", VA = "0x1E5912C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40019D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9830CC", Offset = "0x9830CC")]
		public float m_waitTimeBeforeRespawn;

		[Token(Token = "0x40019D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 m_startPos;

		[Token(Token = "0x40019D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Quaternion m_startRot;

		[Token(Token = "0x40019DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Coroutine m_respawnCoroutine;

		[Token(Token = "0x40019DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private WaitForSeconds m_respawnDelay;

		[Token(Token = "0x6002003")]
		[Address(RVA = "0x1E58BE8", Offset = "0x1E58BE8", VA = "0x1E58BE8", Slot = "5")]
		protected override void handleAwake()
		{
		}

		[Token(Token = "0x6002004")]
		[Address(RVA = "0x1E58C58", Offset = "0x1E58C58", VA = "0x1E58C58", Slot = "6")]
		protected override void handleStart()
		{
		}

		[Token(Token = "0x6002005")]
		[Address(RVA = "0x1E58CC8", Offset = "0x1E58CC8", VA = "0x1E58CC8", Slot = "10")]
		protected override void handleHandGripBegin(HandTracker hand)
		{
		}

		[Token(Token = "0x6002006")]
		[Address(RVA = "0x1E58CDC", Offset = "0x1E58CDC", VA = "0x1E58CDC", Slot = "11")]
		protected override void handleHandGripEnd(HandTracker hand)
		{
		}

		[Token(Token = "0x6002007")]
		[Address(RVA = "0x1E58D10", Offset = "0x1E58D10", VA = "0x1E58D10")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x989250", Offset = "0x989250")]
		private IEnumerator delayedRespawn()
		{
			return null;
		}

		[Token(Token = "0x6002008")]
		[Address(RVA = "0x1E58DB0", Offset = "0x1E58DB0", VA = "0x1E58DB0")]
		private void respawn()
		{
		}

		[Token(Token = "0x6002009")]
		[Address(RVA = "0x1E58FDC", Offset = "0x1E58FDC", VA = "0x1E58FDC")]
		public InteractibleTimedRespawn()
		{
		}
	}
	[Token(Token = "0x20005C8")]
	public class InteractibleUpscaling : InteractibleCustomRespawn
	{
		[Token(Token = "0x2000FD7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BF30", Offset = "0x97BF30")]
		private sealed class <performScaleUp>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400254E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400254F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002550")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public InteractibleUpscaling <>4__this;

			[Token(Token = "0x4002551")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <lerp>5__2;

			[Token(Token = "0x4002552")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private Vector3 <startScale>5__3;

			[Token(Token = "0x1700041D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003510")]
				[Address(RVA = "0x1E596A8", Offset = "0x1E596A8", VA = "0x1E596A8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700041E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003512")]
				[Address(RVA = "0x1E59718", Offset = "0x1E59718", VA = "0x1E59718", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600350D")]
			[Address(RVA = "0x1E59314", Offset = "0x1E59314", VA = "0x1E59314")]
			[DebuggerHidden]
			public <performScaleUp>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x600350E")]
			[Address(RVA = "0x1E594C4", Offset = "0x1E594C4", VA = "0x1E594C4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600350F")]
			[Address(RVA = "0x1E594C8", Offset = "0x1E594C8", VA = "0x1E594C8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003511")]
			[Address(RVA = "0x1E596B0", Offset = "0x1E596B0", VA = "0x1E596B0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000FD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BF40", Offset = "0x97BF40")]
		private sealed class <setRespawnScale>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002553")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002554")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002555")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public InteractibleUpscaling <>4__this;

			[Token(Token = "0x1700041F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003516")]
				[Address(RVA = "0x1E597C4", Offset = "0x1E597C4", VA = "0x1E597C4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000420")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003518")]
				[Address(RVA = "0x1E59834", Offset = "0x1E59834", VA = "0x1E59834", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003513")]
			[Address(RVA = "0x1E593B4", Offset = "0x1E593B4", VA = "0x1E593B4")]
			[DebuggerHidden]
			public <setRespawnScale>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6003514")]
			[Address(RVA = "0x1E59720", Offset = "0x1E59720", VA = "0x1E59720", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003515")]
			[Address(RVA = "0x1E59724", Offset = "0x1E59724", VA = "0x1E59724", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003517")]
			[Address(RVA = "0x1E597CC", Offset = "0x1E597CC", VA = "0x1E597CC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40019DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x983104", Offset = "0x983104")]
		public Vector3 m_targetLocalScale;

		[Token(Token = "0x40019DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public bool m_shouldRespawnAsOriginalScale;

		[Token(Token = "0x40019DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float m_scaleUpDuration;

		[Token(Token = "0x40019DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Transform m_transform;

		[Token(Token = "0x40019E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Vector3 m_startScale;

		[Token(Token = "0x40019E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private bool m_firstGrab;

		[Token(Token = "0x40019E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public string m_audioEventOnFirstGrip;

		[Token(Token = "0x600200A")]
		[Address(RVA = "0x1E5919C", Offset = "0x1E5919C", VA = "0x1E5919C", Slot = "6")]
		protected override void handleStart()
		{
		}

		[Token(Token = "0x600200B")]
		[Address(RVA = "0x1E591A0", Offset = "0x1E591A0", VA = "0x1E591A0", Slot = "7")]
		protected override void handleUpdate()
		{
		}

		[Token(Token = "0x600200C")]
		[Address(RVA = "0x1E591A4", Offset = "0x1E591A4", VA = "0x1E591A4", Slot = "5")]
		protected override void handleAwake()
		{
		}

		[Token(Token = "0x600200D")]
		[Address(RVA = "0x1E591EC", Offset = "0x1E591EC", VA = "0x1E591EC", Slot = "10")]
		protected override void handleHandGripBegin(HandTracker hand)
		{
		}

		[Token(Token = "0x600200E")]
		[Address(RVA = "0x1E592A0", Offset = "0x1E592A0", VA = "0x1E592A0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9892B4", Offset = "0x9892B4")]
		private IEnumerator performScaleUp()
		{
			return null;
		}

		[Token(Token = "0x600200F")]
		[Address(RVA = "0x1E59340", Offset = "0x1E59340", VA = "0x1E59340")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x989318", Offset = "0x989318")]
		private IEnumerator setRespawnScale()
		{
			return null;
		}

		[Token(Token = "0x6002010")]
		[Address(RVA = "0x1E593E0", Offset = "0x1E593E0", VA = "0x1E593E0", Slot = "12")]
		public override bool OnRespawn(OutOfBoundsVolume.InteractibleTransform interactibleTransform)
		{
			return default(bool);
		}

		[Token(Token = "0x6002011")]
		[Address(RVA = "0x1E59414", Offset = "0x1E59414", VA = "0x1E59414")]
		public InteractibleUpscaling()
		{
		}
	}
	[Token(Token = "0x20005C9")]
	public class InteractionBroker : MonoBehaviour
	{
		[Token(Token = "0x2000FD9")]
		internal class HandState
		{
			[Token(Token = "0x4002556")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal HandTracker hand;

			[Token(Token = "0x4002557")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal int id;

			[Token(Token = "0x6003519")]
			[Address(RVA = "0x1E5A11C", Offset = "0x1E5A11C", VA = "0x1E5A11C")]
			public HandState()
			{
			}
		}

		[Token(Token = "0x2000FDA")]
		internal class Interaction
		{
			[Token(Token = "0x4002558")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Interactible m_interactible;

			[Token(Token = "0x4002559")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int m_originalLayer;

			[Token(Token = "0x400255A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private List<HandState> m_handStates;

			[Token(Token = "0x400255B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private InteractionBroker m_broker;

			[Token(Token = "0x400255C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int m_numHandStates;

			[Token(Token = "0x400255D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private int m_prevNumHandStates;

			[Token(Token = "0x400255E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Vector3 m_interactionOffset;

			[Token(Token = "0x400255F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private bool m_didInitTwoHandInteraction;

			[Token(Token = "0x4002560")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float m_lerpRotationTime;

			[Token(Token = "0x4002561")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float m_lerpStartTime;

			[Token(Token = "0x4002562")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private float m_resetLerpStartTime;

			[Token(Token = "0x4002563")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private Quaternion m_lerpStartRotation;

			[Token(Token = "0x4002564")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			private bool m_resetLerpBackToZeroRotation;

			[Token(Token = "0x600351A")]
			[Address(RVA = "0x1E59B34", Offset = "0x1E59B34", VA = "0x1E59B34")]
			internal Interaction(Interactible interactable, InteractionBroker broker)
			{
			}

			[Token(Token = "0x600351B")]
			[Address(RVA = "0x1E59C00", Offset = "0x1E59C00", VA = "0x1E59C00")]
			internal bool isInactive()
			{
				return default(bool);
			}

			[Token(Token = "0x600351C")]
			[Address(RVA = "0x1E59C10", Offset = "0x1E59C10", VA = "0x1E59C10")]
			internal void addHand(HandTracker hand)
			{
			}

			[Token(Token = "0x600351D")]
			[Address(RVA = "0x1E59E84", Offset = "0x1E59E84", VA = "0x1E59E84")]
			internal void removeHand(HandTracker hand)
			{
			}

			[Token(Token = "0x600351E")]
			[Address(RVA = "0x1E59A50", Offset = "0x1E59A50", VA = "0x1E59A50")]
			internal void update()
			{
			}

			[Token(Token = "0x600351F")]
			[Address(RVA = "0x1E5A124", Offset = "0x1E5A124", VA = "0x1E5A124")]
			private void handleSingleGripUpdate()
			{
			}

			[Token(Token = "0x6003520")]
			[Address(RVA = "0x1E5A5F0", Offset = "0x1E5A5F0", VA = "0x1E5A5F0")]
			private void handleDualGripUpdate()
			{
			}

			[Token(Token = "0x6003521")]
			[Address(RVA = "0x1E5A5E8", Offset = "0x1E5A5E8", VA = "0x1E5A5E8")]
			private bool validatePrimaryToSecondaryAngleConstraint()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40019E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HandTracker leftHand;

		[Token(Token = "0x40019E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandTracker rightHand;

		[Token(Token = "0x40019E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<int, Interaction> m_interactions;

		[Token(Token = "0x6002012")]
		[Address(RVA = "0x1E5983C", Offset = "0x1E5983C", VA = "0x1E5983C")]
		private void Start()
		{
		}

		[Token(Token = "0x6002013")]
		[Address(RVA = "0x1E5990C", Offset = "0x1E5990C", VA = "0x1E5990C")]
		public void ManualUpdate()
		{
		}

		[Token(Token = "0x6002014")]
		[Address(RVA = "0x1E50444", Offset = "0x1E50444", VA = "0x1E50444")]
		public bool OnHandGripBegin(HandTracker hand, Interactible interactible)
		{
			return default(bool);
		}

		[Token(Token = "0x6002015")]
		[Address(RVA = "0x1E506A8", Offset = "0x1E506A8", VA = "0x1E506A8")]
		public void OnHandGripEnd(HandTracker hand, Interactible interactible)
		{
		}

		[Token(Token = "0x6002016")]
		[Address(RVA = "0x1E5A0A8", Offset = "0x1E5A0A8", VA = "0x1E5A0A8")]
		public InteractionBroker()
		{
		}
	}
	[Token(Token = "0x20005CA")]
	public class InteractionReceiver : MonoBehaviour
	{
		[Token(Token = "0x2000FDB")]
		internal delegate void OnDealInteractionDelegate(int tag);

		[Token(Token = "0x40019E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int interactionTag;

		[Token(Token = "0x40019E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float requiredInteraction;

		[Token(Token = "0x40019E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractionReceiverEvent[] interactionEvents;

		[Token(Token = "0x40019E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal OnDealInteractionDelegate interactionCb;

		[Token(Token = "0x40019EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float m_interactionAmount;

		[Token(Token = "0x40019EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool m_triggered;

		[Token(Token = "0x6002017")]
		[Address(RVA = "0x1E5ADFC", Offset = "0x1E5ADFC", VA = "0x1E5ADFC", Slot = "4")]
		protected virtual void onDealInteraction(int tag)
		{
		}

		[Token(Token = "0x6002018")]
		[Address(RVA = "0x1E5AE00", Offset = "0x1E5AE00", VA = "0x1E5AE00", Slot = "5")]
		protected virtual void onDealInteractionStart(int tag)
		{
		}

		[Token(Token = "0x6002019")]
		[Address(RVA = "0x1E5AE04", Offset = "0x1E5AE04", VA = "0x1E5AE04", Slot = "6")]
		protected virtual void onDealInteractionEnd(int tag)
		{
		}

		[Token(Token = "0x600201A")]
		[Address(RVA = "0x1E5AE08", Offset = "0x1E5AE08", VA = "0x1E5AE08")]
		public void reset()
		{
		}

		[Token(Token = "0x600201B")]
		[Address(RVA = "0x1E4DDB4", Offset = "0x1E4DDB4", VA = "0x1E4DDB4")]
		public void dealInteraction(int tag, float amount)
		{
		}

		[Token(Token = "0x600201C")]
		[Address(RVA = "0x1E5ACA4", Offset = "0x1E5ACA4", VA = "0x1E5ACA4")]
		public void DealInteractionStart(int tag)
		{
		}

		[Token(Token = "0x600201D")]
		[Address(RVA = "0x1E5ADD0", Offset = "0x1E5ADD0", VA = "0x1E5ADD0")]
		public void DealInteractionEnd(int tag)
		{
		}

		[Token(Token = "0x600201E")]
		[Address(RVA = "0x1E5B31C", Offset = "0x1E5B31C", VA = "0x1E5B31C")]
		public InteractionReceiver()
		{
		}
	}
	[Token(Token = "0x20005CB")]
	public class InteractionReceiverEvent : MonoBehaviour
	{
		[Token(Token = "0x600201F")]
		[Address(RVA = "0x1E5B3D4", Offset = "0x1E5B3D4", VA = "0x1E5B3D4", Slot = "4")]
		public virtual void onTrigger()
		{
		}

		[Token(Token = "0x6002020")]
		[Address(RVA = "0x1E5B254", Offset = "0x1E5B254", VA = "0x1E5B254")]
		public static void handleInteractionEvents(InteractionReceiverEvent[] interactionEvents)
		{
		}

		[Token(Token = "0x6002021")]
		[Address(RVA = "0x1E5B3D8", Offset = "0x1E5B3D8", VA = "0x1E5B3D8")]
		public InteractionReceiverEvent()
		{
		}
	}
	[Token(Token = "0x20005CC")]
	public class PSVRDeviceManager : MonoBehaviour
	{
		[Token(Token = "0x6002022")]
		[Address(RVA = "0x1E2D97C", Offset = "0x1E2D97C", VA = "0x1E2D97C")]
		public PSVRDeviceManager()
		{
		}
	}
	[Token(Token = "0x20005CD")]
	public class PSVRTrackedDevice : MonoBehaviour
	{
		[Token(Token = "0x6002023")]
		[Address(RVA = "0x1E2D984", Offset = "0x1E2D984", VA = "0x1E2D984")]
		public PSVRTrackedDevice()
		{
		}
	}
	[Token(Token = "0x20005CE")]
	public class ScreenTracker : MonoBehaviour
	{
		[Token(Token = "0x40019EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ARSessionOrigin sessionOrigin;

		[Token(Token = "0x40019ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform rightHand;

		[Token(Token = "0x40019EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 m_initialHandPosition;

		[Token(Token = "0x40019EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool m_handIsMoving;

		[Token(Token = "0x40019F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 m_dirToCamera;

		[Token(Token = "0x40019F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float m_distanceFromCamera;

		[Token(Token = "0x40019F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform m_touchAnchor;

		[Token(Token = "0x6002024")]
		[Address(RVA = "0x1E3F0FC", Offset = "0x1E3F0FC", VA = "0x1E3F0FC")]
		private void Start()
		{
		}

		[Token(Token = "0x6002025")]
		[Address(RVA = "0x1E3F26C", Offset = "0x1E3F26C", VA = "0x1E3F26C")]
		private void Update()
		{
		}

		[Token(Token = "0x6002026")]
		[Address(RVA = "0x1E3F84C", Offset = "0x1E3F84C", VA = "0x1E3F84C")]
		public ScreenTracker()
		{
		}
	}
	[Token(Token = "0x20005CF")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x978BDC", Offset = "0x978BDC")]
	public class VRSliderInteraction : MonoBehaviour
	{
		[Token(Token = "0x40019F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Slider m_slider;

		[Token(Token = "0x40019F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private PlayerInputHandler m_playerInput;

		[Token(Token = "0x40019F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HandTracker m_handTracker;

		[Token(Token = "0x40019F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 m_sliderMinPos;

		[Token(Token = "0x40019F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 m_sliderMaxPos;

		[Token(Token = "0x40019F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_lastSliderValue;

		[Token(Token = "0x6002027")]
		[Address(RVA = "0xF47420", Offset = "0xF47420", VA = "0xF47420")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002028")]
		[Address(RVA = "0xF47478", Offset = "0xF47478", VA = "0xF47478")]
		private void Start()
		{
		}

		[Token(Token = "0x6002029")]
		[Address(RVA = "0xF4767C", Offset = "0xF4767C", VA = "0xF4767C")]
		private void Update()
		{
		}

		[Token(Token = "0x600202A")]
		[Address(RVA = "0xF474EC", Offset = "0xF474EC", VA = "0xF474EC")]
		private void updateSliderMinMaxPos()
		{
		}

		[Token(Token = "0x600202B")]
		[Address(RVA = "0xF47974", Offset = "0xF47974", VA = "0xF47974")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600202C")]
		[Address(RVA = "0xF47A08", Offset = "0xF47A08", VA = "0xF47A08")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x600202D")]
		[Address(RVA = "0xF47ACC", Offset = "0xF47ACC", VA = "0xF47ACC")]
		public VRSliderInteraction()
		{
		}
	}
	[Token(Token = "0x20005D0")]
	public class FtgBehaviour : MonoBehaviour
	{
		[Token(Token = "0x40019F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x98313C", Offset = "0x98313C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x98313C", Offset = "0x98313C")]
		public bool autoDisable;

		[Token(Token = "0x600202E")]
		[Address(RVA = "0xBD3800", Offset = "0xBD3800", VA = "0xBD3800", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600202F")]
		[Address(RVA = "0xBD3844", Offset = "0xBD3844", VA = "0xBD3844")]
		internal void ftgEarlyUpdate()
		{
		}

		[Token(Token = "0x6002030")]
		[Address(RVA = "0xBD3848", Offset = "0xBD3848", VA = "0xBD3848")]
		internal void ftgUpdate()
		{
		}

		[Token(Token = "0x6002031")]
		[Address(RVA = "0xBD384C", Offset = "0xBD384C", VA = "0xBD384C")]
		internal void ftgLateUpdate()
		{
		}

		[Token(Token = "0x6002032")]
		[Address(RVA = "0xBD3850", Offset = "0xBD3850", VA = "0xBD3850")]
		public FtgBehaviour()
		{
		}
	}
	[Token(Token = "0x20005D1")]
	public class FtgBehaviourManager : MonoBehaviour
	{
		[Token(Token = "0x40019FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<FtgBehaviour> m_behaviours;

		[Token(Token = "0x40019FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static FtgBehaviourManager s_instance;

		[Token(Token = "0x170002FE")]
		public static FtgBehaviourManager instance
		{
			[Token(Token = "0x6002033")]
			[Address(RVA = "0xBD3858", Offset = "0xBD3858", VA = "0xBD3858")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002034")]
		[Address(RVA = "0xBD3990", Offset = "0xBD3990", VA = "0xBD3990")]
		public void registerBehaviour(FtgBehaviour behaviour)
		{
		}

		[Token(Token = "0x6002035")]
		[Address(RVA = "0xBD3994", Offset = "0xBD3994", VA = "0xBD3994")]
		private void Update()
		{
		}

		[Token(Token = "0x6002036")]
		[Address(RVA = "0xBD3998", Offset = "0xBD3998", VA = "0xBD3998")]
		public FtgBehaviourManager()
		{
		}
	}
	[Token(Token = "0x20005D2")]
	public class Logger
	{
		[Token(Token = "0x6002038")]
		[Address(RVA = "0x1E60688", Offset = "0x1E60688", VA = "0x1E60688")]
		public static void Log(string msg)
		{
		}

		[Token(Token = "0x6002039")]
		[Address(RVA = "0x1E606F0", Offset = "0x1E606F0", VA = "0x1E606F0")]
		public static void LogFormat(string format, params object[] args)
		{
		}

		[Token(Token = "0x600203A")]
		[Address(RVA = "0x1E60768", Offset = "0x1E60768", VA = "0x1E60768")]
		public Logger()
		{
		}
	}
	[Token(Token = "0x20005D3")]
	public class ArcheologyBrush : Interactible
	{
		[Token(Token = "0x40019FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x98319C", Offset = "0x98319C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x98319C", Offset = "0x98319C")]
		public float m_requiredSpeedToBrush;

		[Token(Token = "0x40019FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9831F4", Offset = "0x9831F4")]
		public float m_minDotToBrush;

		[Token(Token = "0x40019FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x98320C", Offset = "0x98320C")]
		public float m_maxDotToBrush;

		[Token(Token = "0x40019FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x983224", Offset = "0x983224")]
		public float m_splatScale;

		[Token(Token = "0x4001A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Vector4 m_channelMask;

		[Token(Token = "0x4001A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Rigidbody m_rigidbody;

		[Token(Token = "0x4001A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private GameObject m_newSplatObject;

		[Token(Token = "0x4001A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private GameObject m_brushPoint;

		[Token(Token = "0x4001A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private ParticleSystem m_particles;

		[Token(Token = "0x600203B")]
		[Address(RVA = "0xBB67C0", Offset = "0xBB67C0", VA = "0xBB67C0", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600203C")]
		[Address(RVA = "0xBB6928", Offset = "0xBB6928", VA = "0xBB6928")]
		private void splatmapUpdate(SplatManager splatManager, Vector3 surfaceNormal, Transform brushPointTransform, Vector3 posLastFrame)
		{
		}

		[Token(Token = "0x600203D")]
		[Address(RVA = "0xBB70D0", Offset = "0xBB70D0", VA = "0xBB70D0", Slot = "10")]
		protected override void handleHandGripBegin(HandTracker hand)
		{
		}

		[Token(Token = "0x600203E")]
		[Address(RVA = "0xBB7200", Offset = "0xBB7200", VA = "0xBB7200", Slot = "11")]
		protected override void handleHandGripEnd(HandTracker hand)
		{
		}

		[Token(Token = "0x600203F")]
		[Address(RVA = "0xBB733C", Offset = "0xBB733C", VA = "0xBB733C", Slot = "12")]
		public override bool OnRespawn(OutOfBoundsVolume.InteractibleTransform interactibleTransform)
		{
			return default(bool);
		}

		[Token(Token = "0x6002040")]
		[Address(RVA = "0xBB7378", Offset = "0xBB7378", VA = "0xBB7378")]
		public ArcheologyBrush()
		{
		}
	}
	[Token(Token = "0x20005D4")]
	public class ArcheologyBrushCollision : MonoBehaviour
	{
		[Token(Token = "0x2000FDC")]
		public delegate void SplatmapUpdateCallback(SplatManager splatManager, Vector3 surfaceNormal, Transform brushPointTransform, Vector3 posLastFrame);

		[Token(Token = "0x4001A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SplatmapUpdateCallback splatmapUpdateCallback;

		[Token(Token = "0x4001A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_plantBone;

		[Token(Token = "0x4001A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SplatManager m_targetSplatmap;

		[Token(Token = "0x4001A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 m_surfaceNormal;

		[Token(Token = "0x4001A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 m_worldPosLastFrame;

		[Token(Token = "0x4001A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform m_transform;

		[Token(Token = "0x4001A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private RaycastHit[] m_raycastHitResult;

		[Token(Token = "0x4001A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private LayerMask m_raycastAgainst;

		[Token(Token = "0x4001A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float m_colliderRadius;

		[Token(Token = "0x4001A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float m_measureEveryXSecond;

		[Token(Token = "0x4001A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_measureNextPosEndTime;

		[Token(Token = "0x6002041")]
		[Address(RVA = "0xBB73EC", Offset = "0xBB73EC", VA = "0xBB73EC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002042")]
		[Address(RVA = "0xBB74FC", Offset = "0xBB74FC", VA = "0xBB74FC")]
		private void Start()
		{
		}

		[Token(Token = "0x6002043")]
		[Address(RVA = "0xBB6920", Offset = "0xBB6920", VA = "0xBB6920")]
		public void SetCallback(SplatmapUpdateCallback callback)
		{
		}

		[Token(Token = "0x6002044")]
		[Address(RVA = "0xBB7534", Offset = "0xBB7534", VA = "0xBB7534")]
		private void Update()
		{
		}

		[Token(Token = "0x6002045")]
		[Address(RVA = "0xBB7EEC", Offset = "0xBB7EEC", VA = "0xBB7EEC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6002046")]
		[Address(RVA = "0xBB7F4C", Offset = "0xBB7F4C", VA = "0xBB7F4C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6002047")]
		[Address(RVA = "0xBB824C", Offset = "0xBB824C", VA = "0xBB824C")]
		private void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x6002048")]
		[Address(RVA = "0xBB8350", Offset = "0xBB8350", VA = "0xBB8350")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6002049")]
		[Address(RVA = "0xBB80B0", Offset = "0xBB80B0", VA = "0xBB80B0")]
		private void raycastAndSaveSurfaceInfo()
		{
		}

		[Token(Token = "0x600204A")]
		[Address(RVA = "0xBB849C", Offset = "0xBB849C", VA = "0xBB849C")]
		public ArcheologyBrushCollision()
		{
		}
	}
	[Token(Token = "0x20005D5")]
	public class Battery : Interactible
	{
		[Token(Token = "0x600204B")]
		[Address(RVA = "0xBBDAEC", Offset = "0xBBDAEC", VA = "0xBBDAEC")]
		public Battery()
		{
		}
	}
	[Token(Token = "0x20005D6")]
	public class HairDryer : Interactible
	{
		[Token(Token = "0x4001A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Transform heatPoint;

		[Token(Token = "0x4001A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Transform heatVfx;

		[Token(Token = "0x4001A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float maxHeatDistance;

		[Token(Token = "0x4001A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public bool needBattery;

		[Token(Token = "0x4001A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float splatScale;

		[Token(Token = "0x4001A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public int interactionTag;

		[Token(Token = "0x4001A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private GameObject m_newSplatObject;

		[Token(Token = "0x4001A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Vector4 m_channelMask;

		[Token(Token = "0x4001A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private EffectPlayer m_blowEffect;

		[Token(Token = "0x4001A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private bool m_hasBlowEffect;

		[Token(Token = "0x4001A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
		private bool m_wantsToBlow;

		[Token(Token = "0x4001A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD2")]
		private bool m_hasBattery;

		[Token(Token = "0x600204C")]
		[Address(RVA = "0x1E4D258", Offset = "0x1E4D258", VA = "0x1E4D258")]
		public void SetBattery(bool hasBattery)
		{
		}

		[Token(Token = "0x600204D")]
		[Address(RVA = "0x1E4D264", Offset = "0x1E4D264", VA = "0x1E4D264", Slot = "10")]
		protected override void handleHandGripBegin(HandTracker hand)
		{
		}

		[Token(Token = "0x600204E")]
		[Address(RVA = "0x1E4D370", Offset = "0x1E4D370", VA = "0x1E4D370", Slot = "11")]
		protected override void handleHandGripEnd(HandTracker hand)
		{
		}

		[Token(Token = "0x600204F")]
		[Address(RVA = "0x1E4D43C", Offset = "0x1E4D43C", VA = "0x1E4D43C", Slot = "6")]
		protected override void handleStart()
		{
		}

		[Token(Token = "0x6002050")]
		[Address(RVA = "0x1E4D65C", Offset = "0x1E4D65C", VA = "0x1E4D65C", Slot = "7")]
		protected override void handleUpdate()
		{
		}

		[Token(Token = "0x6002051")]
		[Address(RVA = "0x1E4D304", Offset = "0x1E4D304", VA = "0x1E4D304")]
		private void showBlowEffect(bool val)
		{
		}

		[Token(Token = "0x6002052")]
		[Address(RVA = "0x1E4DD74", Offset = "0x1E4DD74", VA = "0x1E4DD74")]
		private bool isBlowEffectActive()
		{
			return default(bool);
		}

		[Token(Token = "0x6002053")]
		[Address(RVA = "0x1E4DE3C", Offset = "0x1E4DE3C", VA = "0x1E4DE3C")]
		public HairDryer()
		{
		}
	}
	[Token(Token = "0x20005D7")]
	public class HairDryerBatteryReceiver : MonoBehaviour
	{
		[Token(Token = "0x4001A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HairDryer hairDryer;

		[Token(Token = "0x6002054")]
		[Address(RVA = "0x1E4DF5C", Offset = "0x1E4DF5C", VA = "0x1E4DF5C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6002055")]
		[Address(RVA = "0x1E4E01C", Offset = "0x1E4E01C", VA = "0x1E4E01C")]
		public HairDryerBatteryReceiver()
		{
		}
	}
	[Token(Token = "0x20005D8")]
	public class Kettle : WateringCan
	{
		[Token(Token = "0x4001A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x98326C", Offset = "0x98326C")]
		public int heatedInteractionTag;

		[Token(Token = "0x4001A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public Transform steamEffectInstance;

		[Token(Token = "0x4001A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public Material kettleHotMaterial;

		[Token(Token = "0x4001A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public Renderer kettleRenderer;

		[Token(Token = "0x4001A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9832A4", Offset = "0x9832A4")]
		public AnimationData[] animationEvents;

		[Token(Token = "0x4001A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public InteractionReceiverEvent[] interactionEvents;

		[Token(Token = "0x4001A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private bool m_isHeated;

		[Token(Token = "0x4001A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private EffectPlayer m_steamEffectPlayer;

		[Token(Token = "0x4001A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private bool m_hasSteamEffect;

		[Token(Token = "0x4001A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x151")]
		private bool m_isInFlame;

		[Token(Token = "0x4001A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		private float m_lastHapticTime;

		[Token(Token = "0x4001A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private float m_timeBetweenPulses;

		[Token(Token = "0x6002056")]
		[Address(RVA = "0x1E5C2B8", Offset = "0x1E5C2B8", VA = "0x1E5C2B8", Slot = "6")]
		protected override void handleStart()
		{
		}

		[Token(Token = "0x6002057")]
		[Address(RVA = "0x1E5C3AC", Offset = "0x1E5C3AC", VA = "0x1E5C3AC", Slot = "7")]
		protected override void handleUpdate()
		{
		}

		[Token(Token = "0x6002058")]
		[Address(RVA = "0x1E5C434", Offset = "0x1E5C434", VA = "0x1E5C434")]
		public void setIsHeated()
		{
		}

		[Token(Token = "0x6002059")]
		[Address(RVA = "0x1E5C570", Offset = "0x1E5C570", VA = "0x1E5C570")]
		public void enteredFlame()
		{
		}

		[Token(Token = "0x600205A")]
		[Address(RVA = "0x1E5C63C", Offset = "0x1E5C63C", VA = "0x1E5C63C")]
		public void leftFlame()
		{
		}

		[Token(Token = "0x600205B")]
		[Address(RVA = "0x1E5C718", Offset = "0x1E5C718", VA = "0x1E5C718", Slot = "13")]
		protected override void dealInteraction(InteractionReceiver receiver, int tag)
		{
		}

		[Token(Token = "0x600205C")]
		[Address(RVA = "0x1E5C770", Offset = "0x1E5C770", VA = "0x1E5C770")]
		public Kettle()
		{
		}
	}
	[Token(Token = "0x20005D9")]
	public class KettleHeatReceiver : InteractionReceiver
	{
		[Token(Token = "0x4001A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Kettle kettle;

		[Token(Token = "0x600205D")]
		[Address(RVA = "0x1E5C784", Offset = "0x1E5C784", VA = "0x1E5C784", Slot = "4")]
		protected override void onDealInteraction(int tag)
		{
		}

		[Token(Token = "0x600205E")]
		[Address(RVA = "0x1E5C7B0", Offset = "0x1E5C7B0", VA = "0x1E5C7B0", Slot = "5")]
		protected override void onDealInteractionStart(int tag)
		{
		}

		[Token(Token = "0x600205F")]
		[Address(RVA = "0x1E5C7DC", Offset = "0x1E5C7DC", VA = "0x1E5C7DC", Slot = "6")]
		protected override void onDealInteractionEnd(int tag)
		{
		}

		[Token(Token = "0x6002060")]
		[Address(RVA = "0x1E5C808", Offset = "0x1E5C808", VA = "0x1E5C808")]
		public KettleHeatReceiver()
		{
		}
	}
	[Token(Token = "0x20005DA")]
	public class MagicCup : InteractibleCustomRespawn
	{
		[Token(Token = "0x2000FDD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BF50", Offset = "0x97BF50")]
		private sealed class <delayedRespawn>d__36 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002565")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002566")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002567")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MagicCup <>4__this;

			[Token(Token = "0x17000421")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600352D")]
				[Address(RVA = "0x1E61320", Offset = "0x1E61320", VA = "0x1E61320", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000422")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600352F")]
				[Address(RVA = "0x1E61390", Offset = "0x1E61390", VA = "0x1E61390", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600352A")]
			[Address(RVA = "0x1E61130", Offset = "0x1E61130", VA = "0x1E61130")]
			[DebuggerHidden]
			public <delayedRespawn>d__36(int <>1__state)
			{
			}

			[Token(Token = "0x600352B")]
			[Address(RVA = "0x1E6126C", Offset = "0x1E6126C", VA = "0x1E6126C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600352C")]
			[Address(RVA = "0x1E61270", Offset = "0x1E61270", VA = "0x1E61270", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600352E")]
			[Address(RVA = "0x1E61328", Offset = "0x1E61328", VA = "0x1E61328", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9832DC", Offset = "0x9832DC")]
		public WhiteTigerBehaviour.TigerHidingPlaces m_hidingPlace;

		[Token(Token = "0x4001A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float m_respawnDelay;

		[Token(Token = "0x4001A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x983314", Offset = "0x983314")]
		public string m_tigerCupTriggerName;

		[Token(Token = "0x4001A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public string m_cupHintTriggerName;

		[Token(Token = "0x4001A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public string m_cupLevitateBoolName;

		[Token(Token = "0x4001A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public string m_cupRespawnTriggerName;

		[Token(Token = "0x4001A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Animator m_cupAnimator;

		[Token(Token = "0x4001A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private int m_tigerCupTriggerIdHash;

		[Token(Token = "0x4001A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private int m_cupHintTriggerIdHash;

		[Token(Token = "0x4001A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private int m_cupLevitateBoolIdHash;

		[Token(Token = "0x4001A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private int m_cupRespawnTriggerIdHash;

		[Token(Token = "0x4001A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private WaitForSeconds m_respawnWait;

		[Token(Token = "0x4001A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private bool m_isMagicallyFloating;

		[Token(Token = "0x4001A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
		private bool m_isUntouched;

		[Token(Token = "0x4001A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private Vector3 m_originalPos;

		[Token(Token = "0x4001A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Quaternion m_originalRot;

		[Token(Token = "0x4001A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private bool m_isRespawning;

		[Token(Token = "0x4001A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private WhiteTigerBehaviour m_tigerBehaviour;

		[Token(Token = "0x4001A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Coroutine m_activeDelayedRespawnCoroutine;

		[Token(Token = "0x4001A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[HideInInspector]
		public bool m_isTigerHidingUnderCup;

		[Token(Token = "0x170002FF")]
		public int CupAnimHash
		{
			[Token(Token = "0x6002061")]
			[Address(RVA = "0x1E60770", Offset = "0x1E60770", VA = "0x1E60770")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000300")]
		public bool IsRespawning
		{
			[Token(Token = "0x6002062")]
			[Address(RVA = "0x1E60778", Offset = "0x1E60778", VA = "0x1E60778")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000301")]
		public bool IsUntouched
		{
			[Token(Token = "0x6002063")]
			[Address(RVA = "0x1E60780", Offset = "0x1E60780", VA = "0x1E60780")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002064")]
		[Address(RVA = "0x1E60788", Offset = "0x1E60788", VA = "0x1E60788", Slot = "5")]
		protected override void handleAwake()
		{
		}

		[Token(Token = "0x6002065")]
		[Address(RVA = "0x1E608C0", Offset = "0x1E608C0", VA = "0x1E608C0", Slot = "6")]
		protected override void handleStart()
		{
		}

		[Token(Token = "0x6002066")]
		[Address(RVA = "0x1E60930", Offset = "0x1E60930", VA = "0x1E60930")]
		public void RemoveMagicalFloating()
		{
		}

		[Token(Token = "0x6002067")]
		[Address(RVA = "0x1E609B8", Offset = "0x1E609B8", VA = "0x1E609B8")]
		public void StartMagicalFloating(bool fromSaveData)
		{
		}

		[Token(Token = "0x6002068")]
		[Address(RVA = "0x1E60BA0", Offset = "0x1E60BA0", VA = "0x1E60BA0", Slot = "10")]
		protected override void handleHandGripBegin(HandTracker hand)
		{
		}

		[Token(Token = "0x6002069")]
		[Address(RVA = "0x1E60CF4", Offset = "0x1E60CF4", VA = "0x1E60CF4", Slot = "11")]
		protected override void handleHandGripEnd(HandTracker hand)
		{
		}

		[Token(Token = "0x600206A")]
		[Address(RVA = "0x1E60C70", Offset = "0x1E60C70", VA = "0x1E60C70")]
		public void RemoveCupAsHidingPlace()
		{
		}

		[Token(Token = "0x600206B")]
		[Address(RVA = "0x1E60DC0", Offset = "0x1E60DC0", VA = "0x1E60DC0")]
		public void PlayHintAnim()
		{
		}

		[Token(Token = "0x600206C")]
		[Address(RVA = "0x1E60DF8", Offset = "0x1E60DF8", VA = "0x1E60DF8", Slot = "12")]
		public override bool OnRespawn(OutOfBoundsVolume.InteractibleTransform interactibleTransform)
		{
			return default(bool);
		}

		[Token(Token = "0x600206D")]
		[Address(RVA = "0x1E60E10", Offset = "0x1E60E10", VA = "0x1E60E10")]
		public void ForceInstantRespawn()
		{
		}

		[Token(Token = "0x600206E")]
		[Address(RVA = "0x1E60D4C", Offset = "0x1E60D4C", VA = "0x1E60D4C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98937C", Offset = "0x98937C")]
		private IEnumerator delayedRespawn()
		{
			return null;
		}

		[Token(Token = "0x600206F")]
		[Address(RVA = "0x1E60F08", Offset = "0x1E60F08", VA = "0x1E60F08")]
		private void customRespawn()
		{
		}

		[Token(Token = "0x6002070")]
		[Address(RVA = "0x1E60940", Offset = "0x1E60940", VA = "0x1E60940")]
		private void resetCupState()
		{
		}

		[Token(Token = "0x6002071")]
		[Address(RVA = "0x1E6115C", Offset = "0x1E6115C", VA = "0x1E6115C")]
		public MagicCup()
		{
		}
	}
	[Token(Token = "0x20005DB")]
	public class DoMagicWandHapticFeedbackNC : FlowControlNode
	{
		[Token(Token = "0x2000FDE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BF60", Offset = "0x97BF60")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4002568")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FlowOutput flowOut;

			[Token(Token = "0x6003530")]
			[Address(RVA = "0xBCF824", Offset = "0xBCF824", VA = "0xBCF824")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6003531")]
			[Address(RVA = "0xBCF834", Offset = "0xBCF834", VA = "0xBCF834")]
			internal void <RegisterPorts>b__0(Flow f)
			{
			}
		}

		[Token(Token = "0x6002072")]
		[Address(RVA = "0xBCF740", Offset = "0xBCF740", VA = "0xBCF740", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6002073")]
		[Address(RVA = "0xBCF82C", Offset = "0xBCF82C", VA = "0xBCF82C")]
		public DoMagicWandHapticFeedbackNC()
		{
		}
	}
	[Token(Token = "0x20005DC")]
	public class MagicWand : InteractibleCustomRespawn
	{
		[Token(Token = "0x4001A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public static MagicWand s_wandInstance;

		[Token(Token = "0x4001A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x98336C", Offset = "0x98336C")]
		public Animator m_wandAnimator;

		[Token(Token = "0x4001A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Collider m_doMagicCollider;

		[Token(Token = "0x4001A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private ParticleSystem m_doMagicParticles;

		[Token(Token = "0x4001A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private MagicCup[] m_allMagicCups;

		[Token(Token = "0x6002074")]
		[Address(RVA = "0x1E60ABC", Offset = "0x1E60ABC", VA = "0x1E60ABC")]
		public static void DoMagicWandHapticFeedback()
		{
		}

		[Token(Token = "0x6002075")]
		[Address(RVA = "0x1E62F50", Offset = "0x1E62F50", VA = "0x1E62F50", Slot = "5")]
		protected override void handleAwake()
		{
		}

		[Token(Token = "0x6002076")]
		[Address(RVA = "0x1E62FBC", Offset = "0x1E62FBC", VA = "0x1E62FBC", Slot = "6")]
		protected override void handleStart()
		{
		}

		[Token(Token = "0x6002077")]
		[Address(RVA = "0x1E630C4", Offset = "0x1E630C4", VA = "0x1E630C4", Slot = "10")]
		protected override void handleHandGripBegin(HandTracker hand)
		{
		}

		[Token(Token = "0x6002078")]
		[Address(RVA = "0x1E63208", Offset = "0x1E63208", VA = "0x1E63208", Slot = "11")]
		protected override void handleHandGripEnd(HandTracker hand)
		{
		}

		[Token(Token = "0x6002079")]
		[Address(RVA = "0x1E63360", Offset = "0x1E63360", VA = "0x1E63360", Slot = "12")]
		public override bool OnRespawn(OutOfBoundsVolume.InteractibleTransform interactibleTransform)
		{
			return default(bool);
		}

		[Token(Token = "0x600207A")]
		[Address(RVA = "0x1E63404", Offset = "0x1E63404", VA = "0x1E63404")]
		public MagicWand()
		{
		}
	}
	[Token(Token = "0x20005DD")]
	public class MorayKey : AttachedInteractible
	{
		[Token(Token = "0x4001A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9833A4", Offset = "0x9833A4")]
		[SerializeField]
		private Animator m_morayAnimator;

		[Token(Token = "0x4001A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool m_hasBeenPickedUp;

		[Token(Token = "0x4001A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Collider m_keyCol;

		[Token(Token = "0x17000302")]
		public bool HasBeenPickedUp
		{
			[Token(Token = "0x600207C")]
			[Address(RVA = "0x1E547D8", Offset = "0x1E547D8", VA = "0x1E547D8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600207D")]
		[Address(RVA = "0x1E64EAC", Offset = "0x1E64EAC", VA = "0x1E64EAC", Slot = "5")]
		protected override void handleAwake()
		{
		}

		[Token(Token = "0x600207E")]
		[Address(RVA = "0x1E64F04", Offset = "0x1E64F04", VA = "0x1E64F04", Slot = "12")]
		public override bool OnRespawn(OutOfBoundsVolume.InteractibleTransform interactibleTransform)
		{
			return default(bool);
		}

		[Token(Token = "0x600207F")]
		[Address(RVA = "0x1E64FB4", Offset = "0x1E64FB4", VA = "0x1E64FB4", Slot = "10")]
		protected override void handleHandGripBegin(HandTracker hand)
		{
		}

		[Token(Token = "0x6002080")]
		[Address(RVA = "0x1E64FC0", Offset = "0x1E64FC0", VA = "0x1E64FC0")]
		public MorayKey()
		{
		}
	}
	[Token(Token = "0x20005DE")]
	public class SmallMelon : InteractibleCustomRespawn
	{
		[Token(Token = "0x2000FDF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BF70", Offset = "0x97BF70")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x4002569")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int achievementIdentifierId;

			[Token(Token = "0x400256A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SmallMelon <>4__this;

			[Token(Token = "0x400256B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool result;

			[Token(Token = "0x6003532")]
			[Address(RVA = "0x1E45DAC", Offset = "0x1E45DAC", VA = "0x1E45DAC")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x6003533")]
			[Address(RVA = "0x1E45DB4", Offset = "0x1E45DB4", VA = "0x1E45DB4")]
			internal void <unlockAchievement>b__0(string data, string error)
			{
			}
		}

		[Token(Token = "0x2000FE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BF80", Offset = "0x97BF80")]
		private sealed class <unlockAchievement>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400256C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400256D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400256E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SmallMelon <>4__this;

			[Token(Token = "0x400256F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass10_0 <>8__1;

			[Token(Token = "0x4002570")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <cookie>5__2;

			[Token(Token = "0x17000423")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003537")]
				[Address(RVA = "0x1E46360", Offset = "0x1E46360", VA = "0x1E46360", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000424")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003539")]
				[Address(RVA = "0x1E463D0", Offset = "0x1E463D0", VA = "0x1E463D0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003534")]
			[Address(RVA = "0x1E45C5C", Offset = "0x1E45C5C", VA = "0x1E45C5C")]
			[DebuggerHidden]
			public <unlockAchievement>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6003535")]
			[Address(RVA = "0x1E4615C", Offset = "0x1E4615C", VA = "0x1E4615C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003536")]
			[Address(RVA = "0x1E46160", Offset = "0x1E46160", VA = "0x1E46160", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003538")]
			[Address(RVA = "0x1E46368", Offset = "0x1E46368", VA = "0x1E46368", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000FE1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BF90", Offset = "0x97BF90")]
		private sealed class <delayedDestroy>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002571")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002572")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002573")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SmallMelon <>4__this;

			[Token(Token = "0x17000425")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600353D")]
				[Address(RVA = "0x1E460E4", Offset = "0x1E460E4", VA = "0x1E460E4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000426")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600353F")]
				[Address(RVA = "0x1E46154", Offset = "0x1E46154", VA = "0x1E46154", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600353A")]
			[Address(RVA = "0x1E45CFC", Offset = "0x1E45CFC", VA = "0x1E45CFC")]
			[DebuggerHidden]
			public <delayedDestroy>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x600353B")]
			[Address(RVA = "0x1E45FF0", Offset = "0x1E45FF0", VA = "0x1E45FF0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600353C")]
			[Address(RVA = "0x1E45FF4", Offset = "0x1E45FF4", VA = "0x1E45FF4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600353E")]
			[Address(RVA = "0x1E460EC", Offset = "0x1E460EC", VA = "0x1E460EC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private MelonManager m_melonManager;

		[Token(Token = "0x4001A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private ParticleSystem m_particleSplash;

		[Token(Token = "0x4001A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private Renderer m_renderer;

		[Token(Token = "0x4001A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private Collider m_collider;

		[Token(Token = "0x4001A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public string m_achievementIdentifier;

		[Token(Token = "0x4001A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private WaitForSeconds waitForSeconds;

		[Token(Token = "0x6002081")]
		[Address(RVA = "0x1E45874", Offset = "0x1E45874", VA = "0x1E45874", Slot = "6")]
		protected override void handleStart()
		{
		}

		[Token(Token = "0x6002082")]
		[Address(RVA = "0x1E45910", Offset = "0x1E45910", VA = "0x1E45910", Slot = "10")]
		protected override void handleHandGripBegin(HandTracker hand)
		{
		}

		[Token(Token = "0x6002083")]
		[Address(RVA = "0x1E45A4C", Offset = "0x1E45A4C", VA = "0x1E45A4C", Slot = "7")]
		protected override void handleUpdate()
		{
		}

		[Token(Token = "0x6002084")]
		[Address(RVA = "0x1E45A54", Offset = "0x1E45A54", VA = "0x1E45A54", Slot = "12")]
		public override bool OnRespawn(OutOfBoundsVolume.InteractibleTransform interactibleTransform)
		{
			return default(bool);
		}

		[Token(Token = "0x6002085")]
		[Address(RVA = "0x1E45B98", Offset = "0x1E45B98", VA = "0x1E45B98")]
		public void Splash()
		{
		}

		[Token(Token = "0x6002086")]
		[Address(RVA = "0x1E45BE8", Offset = "0x1E45BE8", VA = "0x1E45BE8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9893E0", Offset = "0x9893E0")]
		private IEnumerator unlockAchievement()
		{
			return null;
		}

		[Token(Token = "0x6002087")]
		[Address(RVA = "0x1E45A6C", Offset = "0x1E45A6C", VA = "0x1E45A6C")]
		private void disableMelon()
		{
		}

		[Token(Token = "0x6002088")]
		[Address(RVA = "0x1E45C88", Offset = "0x1E45C88", VA = "0x1E45C88")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x989444", Offset = "0x989444")]
		private IEnumerator delayedDestroy()
		{
			return null;
		}

		[Token(Token = "0x6002089")]
		[Address(RVA = "0x1E45D28", Offset = "0x1E45D28", VA = "0x1E45D28")]
		public SmallMelon()
		{
		}

		[Token(Token = "0x600208A")]
		[Address(RVA = "0x1E45DA4", Offset = "0x1E45DA4", VA = "0x1E45DA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9894A8", Offset = "0x9894A8")]
		[DebuggerHidden]
		private bool <>n__0(OutOfBoundsVolume.InteractibleTransform interactibleTransform)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20005DF")]
	public class Snowball : Interactible
	{
		[Token(Token = "0x2000FE2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BFA0", Offset = "0x97BFA0")]
		private sealed class <>c__DisplayClass19_0
		{
			[Token(Token = "0x4002574")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int achievementIdentifierId;

			[Token(Token = "0x4002575")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Snowball <>4__this;

			[Token(Token = "0x4002576")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool result;

			[Token(Token = "0x6003540")]
			[Address(RVA = "0x1E46ED8", Offset = "0x1E46ED8", VA = "0x1E46ED8")]
			public <>c__DisplayClass19_0()
			{
			}

			[Token(Token = "0x6003541")]
			[Address(RVA = "0x1E46EE0", Offset = "0x1E46EE0", VA = "0x1E46EE0")]
			internal void <unlockAchievement>b__0(string data, string error)
			{
			}
		}

		[Token(Token = "0x2000FE3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BFB0", Offset = "0x97BFB0")]
		private sealed class <unlockAchievement>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002577")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002578")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002579")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Snowball <>4__this;

			[Token(Token = "0x400257A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass19_0 <>8__1;

			[Token(Token = "0x400257B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <cookie>5__2;

			[Token(Token = "0x17000427")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003545")]
				[Address(RVA = "0x1E47448", Offset = "0x1E47448", VA = "0x1E47448", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000428")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003547")]
				[Address(RVA = "0x1E474B8", Offset = "0x1E474B8", VA = "0x1E474B8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003542")]
			[Address(RVA = "0x1E46D64", Offset = "0x1E46D64", VA = "0x1E46D64")]
			[DebuggerHidden]
			public <unlockAchievement>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x6003543")]
			[Address(RVA = "0x1E47244", Offset = "0x1E47244", VA = "0x1E47244", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003544")]
			[Address(RVA = "0x1E47248", Offset = "0x1E47248", VA = "0x1E47248", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003546")]
			[Address(RVA = "0x1E47450", Offset = "0x1E47450", VA = "0x1E47450", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000FE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BFC0", Offset = "0x97BFC0")]
		private sealed class <liveLifeAsABall>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400257C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400257D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400257E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Snowball <>4__this;

			[Token(Token = "0x17000429")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600354B")]
				[Address(RVA = "0x1E471CC", Offset = "0x1E471CC", VA = "0x1E471CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700042A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600354D")]
				[Address(RVA = "0x1E4723C", Offset = "0x1E4723C", VA = "0x1E4723C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003548")]
			[Address(RVA = "0x1E46E4C", Offset = "0x1E46E4C", VA = "0x1E46E4C")]
			[DebuggerHidden]
			public <liveLifeAsABall>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6003549")]
			[Address(RVA = "0x1E4711C", Offset = "0x1E4711C", VA = "0x1E4711C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600354A")]
			[Address(RVA = "0x1E47120", Offset = "0x1E47120", VA = "0x1E47120", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600354C")]
			[Address(RVA = "0x1E471D4", Offset = "0x1E471D4", VA = "0x1E471D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x983420", Offset = "0x983420")]
		public Transform hitEffectTemplate;

		[Token(Token = "0x4001A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Animator animator;

		[Token(Token = "0x4001A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Rigidbody rigidBody;

		[Token(Token = "0x4001A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x983458", Offset = "0x983458")]
		public string m_achievementIdentifier;

		[Token(Token = "0x4001A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int m_prevNameHash;

		[Token(Token = "0x4001A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private bool m_isInDropZone;

		[Token(Token = "0x4001A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB5")]
		private bool m_shouldRoll;

		[Token(Token = "0x4001A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB6")]
		[HideInInspector]
		public bool m_snowManBuilt;

		[Token(Token = "0x4001A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private EffectPlayer m_hitEffect;

		[Token(Token = "0x4001A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool m_hasHitEffect;

		[Token(Token = "0x4001A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Transform m_effectAnchor;

		[Token(Token = "0x600208B")]
		[Address(RVA = "0x1E463D8", Offset = "0x1E463D8", VA = "0x1E463D8")]
		public void SetIsInDropZone()
		{
		}

		[Token(Token = "0x600208C")]
		[Address(RVA = "0x1E463E4", Offset = "0x1E463E4", VA = "0x1E463E4")]
		public bool IsInDropZone()
		{
			return default(bool);
		}

		[Token(Token = "0x600208D")]
		[Address(RVA = "0x1E463EC", Offset = "0x1E463EC", VA = "0x1E463EC")]
		public void StartRolling()
		{
		}

		[Token(Token = "0x600208E")]
		[Address(RVA = "0x1E46484", Offset = "0x1E46484", VA = "0x1E46484")]
		public void StopRolling()
		{
		}

		[Token(Token = "0x600208F")]
		[Address(RVA = "0x1E46510", Offset = "0x1E46510", VA = "0x1E46510", Slot = "5")]
		protected override void handleAwake()
		{
		}

		[Token(Token = "0x6002090")]
		[Address(RVA = "0x1E46760", Offset = "0x1E46760", VA = "0x1E46760", Slot = "10")]
		protected override void handleHandGripBegin(HandTracker hand)
		{
		}

		[Token(Token = "0x6002091")]
		[Address(RVA = "0x1E468BC", Offset = "0x1E468BC", VA = "0x1E468BC", Slot = "11")]
		protected override void handleHandGripEnd(HandTracker hand)
		{
		}

		[Token(Token = "0x6002092")]
		[Address(RVA = "0x1E469CC", Offset = "0x1E469CC", VA = "0x1E469CC")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6002093")]
		[Address(RVA = "0x1E46CF0", Offset = "0x1E46CF0", VA = "0x1E46CF0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9894E0", Offset = "0x9894E0")]
		private IEnumerator unlockAchievement()
		{
			return null;
		}

		[Token(Token = "0x6002094")]
		[Address(RVA = "0x1E46D90", Offset = "0x1E46D90", VA = "0x1E46D90")]
		private void resumeAnimation()
		{
		}

		[Token(Token = "0x6002095")]
		[Address(RVA = "0x1E46958", Offset = "0x1E46958", VA = "0x1E46958")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x989544", Offset = "0x989544")]
		private IEnumerator liveLifeAsABall()
		{
			return null;
		}

		[Token(Token = "0x6002096")]
		[Address(RVA = "0x1E46E78", Offset = "0x1E46E78", VA = "0x1E46E78")]
		public Snowball()
		{
		}
	}
	[Token(Token = "0x20005E0")]
	public class OnSnowballDroppedNC : EventNode
	{
		[Token(Token = "0x4001A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static FlowOutput s_flowOutput;

		[Token(Token = "0x6002097")]
		[Address(RVA = "0x1E65F54", Offset = "0x1E65F54", VA = "0x1E65F54", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x6002098")]
		[Address(RVA = "0x1E65FEC", Offset = "0x1E65FEC", VA = "0x1E65FEC")]
		public static void OnSnowballDropped(Snowball invoker)
		{
		}

		[Token(Token = "0x6002099")]
		[Address(RVA = "0x1E660D4", Offset = "0x1E660D4", VA = "0x1E660D4")]
		public OnSnowballDroppedNC()
		{
		}
	}
	[Token(Token = "0x20005E1")]
	public class SugarDispenser : Interactible
	{
		[Token(Token = "0x4001A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Transform sugarPoint;

		[Token(Token = "0x4001A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Transform sugarVfx;

		[Token(Token = "0x4001A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float splatScale;

		[Token(Token = "0x4001A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public int interactionTag;

		[Token(Token = "0x4001A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private GameObject m_newSplatObject;

		[Token(Token = "0x4001A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector4 m_channelMask;

		[Token(Token = "0x4001A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private EffectPlayer m_sugarEffect;

		[Token(Token = "0x4001A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private bool m_hasSugarEffect;

		[Token(Token = "0x4001A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private ParticleCollisionHandler m_particleCollisionHandler;

		[Token(Token = "0x4001A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool m_isPouring;

		[Token(Token = "0x4001A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
		private bool m_wasPouring;

		[Token(Token = "0x600209B")]
		[Address(RVA = "0xF41C90", Offset = "0xF41C90", VA = "0xF41C90", Slot = "10")]
		protected override void handleHandGripBegin(HandTracker hand)
		{
		}

		[Token(Token = "0x600209C")]
		[Address(RVA = "0xF41C98", Offset = "0xF41C98", VA = "0xF41C98", Slot = "11")]
		protected override void handleHandGripEnd(HandTracker hand)
		{
		}

		[Token(Token = "0x600209D")]
		[Address(RVA = "0xF41DA0", Offset = "0xF41DA0", VA = "0xF41DA0", Slot = "6")]
		protected override void handleStart()
		{
		}

		[Token(Token = "0x600209E")]
		[Address(RVA = "0xF42074", Offset = "0xF42074", VA = "0xF42074", Slot = "7")]
		protected override void handleUpdate()
		{
		}

		[Token(Token = "0x600209F")]
		[Address(RVA = "0xF42268", Offset = "0xF42268", VA = "0xF42268")]
		private void OnParticleCollisionCallback(GameObject other, int collisionCount)
		{
		}

		[Token(Token = "0x60020A0")]
		[Address(RVA = "0xF41D34", Offset = "0xF41D34", VA = "0xF41D34")]
		private void showSugarEffect(bool val)
		{
		}

		[Token(Token = "0x60020A1")]
		[Address(RVA = "0xF42AD4", Offset = "0xF42AD4", VA = "0xF42AD4")]
		public SugarDispenser()
		{
		}
	}
	[Token(Token = "0x20005E2")]
	public class WateringCan : Interactible
	{
		[Token(Token = "0x4001A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Transform waterPoint;

		[Token(Token = "0x4001A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int interactionTag;

		[Token(Token = "0x4001A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Material arcMaterial;

		[Token(Token = "0x4001A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float maxDistance;

		[Token(Token = "0x4001A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Transform waterVfx;

		[Token(Token = "0x4001A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public string pourSoundName;

		[Token(Token = "0x4001A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public string shakeSoundEventName;

		[Token(Token = "0x4001A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public string pourSoundEventName;

		[Token(Token = "0x4001A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected bool m_isEnabled;

		[Token(Token = "0x4001A6C")]
		private const float arcLineWidth = 0.005f;

		[Token(Token = "0x4001A6D")]
		private const int m_posCount = 256;

		[Token(Token = "0x4001A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private LineRenderer m_lineRenderer;

		[Token(Token = "0x4001A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Vector3[] m_positions1;

		[Token(Token = "0x4001A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Ray m_newRay;

		[Token(Token = "0x4001A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private RaycastHit[] m_hits;

		[Token(Token = "0x4001A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private EffectPlayer m_waterEffect;

		[Token(Token = "0x4001A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private bool m_hasWaterEffect;

		[Token(Token = "0x4001A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x111")]
		private bool m_isPouring;

		[Token(Token = "0x4001A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x112")]
		private bool m_wasPouring;

		[Token(Token = "0x60020A2")]
		[Address(RVA = "0xF4B308", Offset = "0xF4B308", VA = "0xF4B308", Slot = "10")]
		protected override void handleHandGripBegin(HandTracker hand)
		{
		}

		[Token(Token = "0x60020A3")]
		[Address(RVA = "0xF4B398", Offset = "0xF4B398", VA = "0xF4B398", Slot = "11")]
		protected override void handleHandGripEnd(HandTracker hand)
		{
		}

		[Token(Token = "0x60020A4")]
		[Address(RVA = "0xF4B5F4", Offset = "0xF4B5F4", VA = "0xF4B5F4", Slot = "6")]
		protected override void handleStart()
		{
		}

		[Token(Token = "0x60020A5")]
		[Address(RVA = "0xF4BA48", Offset = "0xF4BA48", VA = "0xF4BA48", Slot = "7")]
		protected override void handleUpdate()
		{
		}

		[Token(Token = "0x60020A6")]
		[Address(RVA = "0xF4C5A8", Offset = "0xF4C5A8", VA = "0xF4C5A8")]
		private void OnParticleCollisionCallback(GameObject other, int collisionCount)
		{
		}

		[Token(Token = "0x60020A7")]
		[Address(RVA = "0xF4BB48", Offset = "0xF4BB48", VA = "0xF4BB48")]
		private void calculateArc()
		{
		}

		[Token(Token = "0x60020A8")]
		[Address(RVA = "0xF4C690", Offset = "0xF4C690", VA = "0xF4C690", Slot = "13")]
		protected virtual void dealInteraction(InteractionReceiver receiver, int tag)
		{
		}

		[Token(Token = "0x60020A9")]
		[Address(RVA = "0xF4B460", Offset = "0xF4B460", VA = "0xF4B460")]
		private void showWaterEffect(bool val)
		{
		}

		[Token(Token = "0x60020AA")]
		[Address(RVA = "0xF4C75C", Offset = "0xF4C75C", VA = "0xF4C75C")]
		public WateringCan()
		{
		}
	}
	[Token(Token = "0x20005E3")]
	public class CameraFader : MonoBehaviour
	{
		[Token(Token = "0x4001A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Material fadeMaterial;

		[Token(Token = "0x4001A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Color currentColor;

		[Token(Token = "0x4001A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Color targetColor;

		[Token(Token = "0x4001A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Color deltaColor;

		[Token(Token = "0x60020AB")]
		[Address(RVA = "0xBBDC5C", Offset = "0xBBDC5C", VA = "0xBBDC5C", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60020AC")]
		[Address(RVA = "0xBBDD64", Offset = "0xBBDD64", VA = "0xBBDD64", Slot = "5")]
		public virtual void StartFade(Color newColor, float duration)
		{
		}

		[Token(Token = "0x60020AD")]
		[Address(RVA = "0xBBDDCC", Offset = "0xBBDDCC", VA = "0xBBDDCC")]
		protected void UpdateColorValues()
		{
		}

		[Token(Token = "0x60020AE")]
		[Address(RVA = "0xBBDF3C", Offset = "0xBBDF3C", VA = "0xBBDF3C", Slot = "6")]
		public virtual void OnPostRender()
		{
		}

		[Token(Token = "0x60020AF")]
		[Address(RVA = "0xBBE0E0", Offset = "0xBBE0E0", VA = "0xBBE0E0")]
		public CameraFader()
		{
		}
	}
	[Token(Token = "0x20005E4")]
	public class PicoCameraFader : CameraFader
	{
		[Token(Token = "0x4001A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Pvr_UnitySDKEye eyeComponent;

		[Token(Token = "0x60020B1")]
		[Address(RVA = "0x1E3212C", Offset = "0x1E3212C", VA = "0x1E3212C", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60020B2")]
		[Address(RVA = "0x1E32184", Offset = "0x1E32184", VA = "0x1E32184")]
		private void Update()
		{
		}

		[Token(Token = "0x60020B3")]
		[Address(RVA = "0x1E321D8", Offset = "0x1E321D8", VA = "0x1E321D8", Slot = "6")]
		public override void OnPostRender()
		{
		}

		[Token(Token = "0x60020B4")]
		[Address(RVA = "0x1E321DC", Offset = "0x1E321DC", VA = "0x1E321DC")]
		public PicoCameraFader()
		{
		}
	}
	[Token(Token = "0x20005E5")]
	public class PlayerController : MonoBehaviour
	{
		[Token(Token = "0x2000FE5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BFD0", Offset = "0x97BFD0")]
		private sealed class <delayedOnEnable>d__40 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400257F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002580")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002581")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayerController <>4__this;

			[Token(Token = "0x1700042B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003551")]
				[Address(RVA = "0x1E378F0", Offset = "0x1E378F0", VA = "0x1E378F0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700042C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003553")]
				[Address(RVA = "0x1E37960", Offset = "0x1E37960", VA = "0x1E37960", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600354E")]
			[Address(RVA = "0x1E34FB0", Offset = "0x1E34FB0", VA = "0x1E34FB0")]
			[DebuggerHidden]
			public <delayedOnEnable>d__40(int <>1__state)
			{
			}

			[Token(Token = "0x600354F")]
			[Address(RVA = "0x1E377FC", Offset = "0x1E377FC", VA = "0x1E377FC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003550")]
			[Address(RVA = "0x1E37800", Offset = "0x1E37800", VA = "0x1E37800", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003552")]
			[Address(RVA = "0x1E378F8", Offset = "0x1E378F8", VA = "0x1E378F8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000FE6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BFE0", Offset = "0x97BFE0")]
		private sealed class <allowHandMovementCo>d__91 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002582")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002583")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002584")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayerController <>4__this;

			[Token(Token = "0x1700042D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003557")]
				[Address(RVA = "0x1E37784", Offset = "0x1E37784", VA = "0x1E37784", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700042E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003559")]
				[Address(RVA = "0x1E377F4", Offset = "0x1E377F4", VA = "0x1E377F4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003554")]
			[Address(RVA = "0x1E36B8C", Offset = "0x1E36B8C", VA = "0x1E36B8C")]
			[DebuggerHidden]
			public <allowHandMovementCo>d__91(int <>1__state)
			{
			}

			[Token(Token = "0x6003555")]
			[Address(RVA = "0x1E375E0", Offset = "0x1E375E0", VA = "0x1E375E0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003556")]
			[Address(RVA = "0x1E375E4", Offset = "0x1E375E4", VA = "0x1E375E4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003558")]
			[Address(RVA = "0x1E3778C", Offset = "0x1E3778C", VA = "0x1E3778C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000FE7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97BFF0", Offset = "0x97BFF0")]
		private sealed class <performTeleport>d__102 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002585")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002586")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002587")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 pos;

			[Token(Token = "0x4002588")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public PlayerController <>4__this;

			[Token(Token = "0x4002589")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool shouldNotFade;

			[Token(Token = "0x400258A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public Quaternion rotation;

			[Token(Token = "0x400258B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public bool localPos;

			[Token(Token = "0x400258C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
			public bool localRot;

			[Token(Token = "0x400258D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Vector3 <teleportPosition>5__2;

			[Token(Token = "0x1700042F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600355D")]
				[Address(RVA = "0x1E380AC", Offset = "0x1E380AC", VA = "0x1E380AC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000430")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600355F")]
				[Address(RVA = "0x1E3811C", Offset = "0x1E3811C", VA = "0x1E3811C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600355A")]
			[Address(RVA = "0x1E37408", Offset = "0x1E37408", VA = "0x1E37408")]
			[DebuggerHidden]
			public <performTeleport>d__102(int <>1__state)
			{
			}

			[Token(Token = "0x600355B")]
			[Address(RVA = "0x1E37968", Offset = "0x1E37968", VA = "0x1E37968", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600355C")]
			[Address(RVA = "0x1E3796C", Offset = "0x1E3796C", VA = "0x1E3796C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600355E")]
			[Address(RVA = "0x1E380B4", Offset = "0x1E380B4", VA = "0x1E380B4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static PlayerController instance;

		[Token(Token = "0x4001A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9834A0", Offset = "0x9834A0")]
		public bool isBootstrapPlayer;

		[Token(Token = "0x4001A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float fadeSpeed;

		[Token(Token = "0x4001A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool showErrorMessageOnControllerDisconnect;

		[Token(Token = "0x4001A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform errorMessageParent;

		[Token(Token = "0x4001A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public Transform m_playerLocation;

		[Token(Token = "0x4001A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform m_settingsPlayerLocation;

		[Token(Token = "0x4001A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CameraFader[] m_faders;

		[Token(Token = "0x4001A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private HandEffectCustomRoot[] m_handParticles;

		[Token(Token = "0x4001A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private WaitForSecondsRealtime m_waitObj;

		[Token(Token = "0x4001A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine m_teleportCo;

		[Token(Token = "0x4001A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private PlayerInputHandler m_inputHandler;

		[Token(Token = "0x4001A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private InteractionBroker m_interactionBroker;

		[Token(Token = "0x4001A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Transform m_head;

		[Token(Token = "0x4001A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Transform m_leftHand;

		[Token(Token = "0x4001A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Transform m_rightHand;

		[Token(Token = "0x4001A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Transform m_posOffset;

		[Token(Token = "0x4001A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Transform m_rotOffset;

		[Token(Token = "0x4001A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Renderer m_leftHandRenderer;

		[Token(Token = "0x4001A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Renderer m_rightHandRenderer;

		[Token(Token = "0x4001A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private ParticleSystem m_leftHandParticleSystem;

		[Token(Token = "0x4001A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private ParticleSystem m_rightHandParticleSystem;

		[Token(Token = "0x4001A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private HandTracker m_leftHandTracker;

		[Token(Token = "0x4001A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private HandTracker m_rightHandTracker;

		[Token(Token = "0x4001A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private SubtitlePositionGroup m_subtitlePositionsGroup;

		[Token(Token = "0x4001A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private SubtitlePositionHandler m_subtitlePositionHandler;

		[Token(Token = "0x4001A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool m_isLevelLoading;

		[Token(Token = "0x4001A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
		private bool m_isInMenu;

		[Token(Token = "0x4001A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDA")]
		private bool m_isSettingsMenuOpen;

		[Token(Token = "0x4001A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private float m_menuCooldown;

		[Token(Token = "0x4001A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float m_menuButtonOffCooldownTime;

		[Token(Token = "0x4001A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private bool m_isShowingHmdSetupDialog;

		[Token(Token = "0x4001A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE5")]
		private bool m_allowedToShowHands;

		[Token(Token = "0x4001A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE6")]
		private bool m_trueEndingTriggered;

		[Token(Token = "0x4001A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE7")]
		private bool m_levelLoadDisabledInput;

		[Token(Token = "0x4001A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private bool m_inputLockedBeforeLevelLoad;

		[Token(Token = "0x4001A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE9")]
		private bool m_inputWasLockedBeforeVRFocusLost;

		[Token(Token = "0x4001AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEA")]
		private bool m_inputFocusLost;

		[Token(Token = "0x4001AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private int m_focusLostRef;

		[Token(Token = "0x4001AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private bool m_lIsConnected;

		[Token(Token = "0x4001AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
		private bool m_lWasConnected;

		[Token(Token = "0x4001AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF2")]
		private bool m_rIsConnected;

		[Token(Token = "0x4001AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF3")]
		private bool m_rWasConnected;

		[Token(Token = "0x4001AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private int m_disconnectedHands;

		[Token(Token = "0x4001AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Transform m_currentPositionTransform;

		[Token(Token = "0x4001AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private float m_delayAfterLevelLoad;

		[Token(Token = "0x4001AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private float m_startCheckingControllerDisconnectTime;

		[Token(Token = "0x4001AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Coroutine m_manualHandMovementWhilePaused;

		[Token(Token = "0x4001AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private bool m_isPlayingIntro;

		[Token(Token = "0x4001AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Transform m_originalErrorMessageParent;

		[Token(Token = "0x4001AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private bool m_levelHasWorldRotator;

		[Token(Token = "0x4001AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private WaitForSeconds m_teleportEndDelay;

		[Token(Token = "0x17000303")]
		public bool IsSettingsMenuOpen
		{
			[Token(Token = "0x60020B7")]
			[Address(RVA = "0x1E347E0", Offset = "0x1E347E0", VA = "0x1E347E0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000304")]
		public Transform LeftHand
		{
			[Token(Token = "0x60020BF")]
			[Address(RVA = "0x1E35780", Offset = "0x1E35780", VA = "0x1E35780")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000305")]
		public Transform RightHand
		{
			[Token(Token = "0x60020C0")]
			[Address(RVA = "0x1E35788", Offset = "0x1E35788", VA = "0x1E35788")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000306")]
		public Transform Head
		{
			[Token(Token = "0x60020C1")]
			[Address(RVA = "0x1E35790", Offset = "0x1E35790", VA = "0x1E35790")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000307")]
		public HandTracker LeftHandTracker
		{
			[Token(Token = "0x60020C2")]
			[Address(RVA = "0x1E35798", Offset = "0x1E35798", VA = "0x1E35798")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000308")]
		public HandTracker RightHandTracker
		{
			[Token(Token = "0x60020C3")]
			[Address(RVA = "0x1E357A0", Offset = "0x1E357A0", VA = "0x1E357A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020B5")]
		[Address(RVA = "0x1E347CC", Offset = "0x1E347CC", VA = "0x1E347CC")]
		public void SetTrueEndingShouldTrigger(bool val)
		{
		}

		[Token(Token = "0x60020B6")]
		[Address(RVA = "0x1E347D8", Offset = "0x1E347D8", VA = "0x1E347D8")]
		public bool GetTrueEndingShouldTrigger()
		{
			return default(bool);
		}

		[Token(Token = "0x60020B8")]
		[Address(RVA = "0x1E347E8", Offset = "0x1E347E8", VA = "0x1E347E8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60020B9")]
		[Address(RVA = "0x1E34EB0", Offset = "0x1E34EB0", VA = "0x1E34EB0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60020BA")]
		[Address(RVA = "0x1E34F3C", Offset = "0x1E34F3C", VA = "0x1E34F3C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9895A8", Offset = "0x9895A8")]
		private IEnumerator delayedOnEnable()
		{
			return null;
		}

		[Token(Token = "0x60020BB")]
		[Address(RVA = "0x1E34FDC", Offset = "0x1E34FDC", VA = "0x1E34FDC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60020BC")]
		[Address(RVA = "0x1E350D4", Offset = "0x1E350D4", VA = "0x1E350D4")]
		public void Init()
		{
		}

		[Token(Token = "0x60020BD")]
		[Address(RVA = "0x1E35464", Offset = "0x1E35464", VA = "0x1E35464")]
		public void OnLevelLoadBegin()
		{
		}

		[Token(Token = "0x60020BE")]
		[Address(RVA = "0x1E3557C", Offset = "0x1E3557C", VA = "0x1E3557C")]
		public void OnPostLevelLoaded()
		{
		}

		[Token(Token = "0x60020C4")]
		[Address(RVA = "0x1E357A8", Offset = "0x1E357A8", VA = "0x1E357A8")]
		public void setBodypartAnchors(Transform head, Transform body, Transform leftHand, Transform rightHand)
		{
		}

		[Token(Token = "0x60020C5")]
		[Address(RVA = "0x1E35958", Offset = "0x1E35958", VA = "0x1E35958")]
		private void onOVRRecenter()
		{
		}

		[Token(Token = "0x60020C6")]
		[Address(RVA = "0x1E35D60", Offset = "0x1E35D60", VA = "0x1E35D60")]
		public bool IsInputLockedOutsideOfInterrupts()
		{
			return default(bool);
		}

		[Token(Token = "0x60020C7")]
		[Address(RVA = "0x1E35DAC", Offset = "0x1E35DAC", VA = "0x1E35DAC")]
		public void SetLevelLoadDisabledInput(bool val, bool inputLockedBeforeLevelLoad)
		{
		}

		[Token(Token = "0x60020C8")]
		[Address(RVA = "0x1E35DC4", Offset = "0x1E35DC4", VA = "0x1E35DC4")]
		private void pauseAndDisableInput(bool val)
		{
		}

		[Token(Token = "0x60020C9")]
		[Address(RVA = "0x1E35F38", Offset = "0x1E35F38", VA = "0x1E35F38")]
		private void onOculusVRFocusLost()
		{
		}

		[Token(Token = "0x60020CA")]
		[Address(RVA = "0x1E35F40", Offset = "0x1E35F40", VA = "0x1E35F40")]
		private void onOculusVRFocusAcquired()
		{
		}

		[Token(Token = "0x60020CB")]
		[Address(RVA = "0x1E35F48", Offset = "0x1E35F48", VA = "0x1E35F48")]
		private void onOculusInputFocusLost()
		{
		}

		[Token(Token = "0x60020CC")]
		[Address(RVA = "0x1E35F80", Offset = "0x1E35F80", VA = "0x1E35F80")]
		private void onOculusInputFocusAcquired()
		{
		}

		[Token(Token = "0x60020CD")]
		[Address(RVA = "0x1E35FB4", Offset = "0x1E35FB4", VA = "0x1E35FB4")]
		public bool IsDashUp()
		{
			return default(bool);
		}

		[Token(Token = "0x60020CE")]
		[Address(RVA = "0x1E35284", Offset = "0x1E35284", VA = "0x1E35284")]
		public void ShowHands(bool show, bool force = false)
		{
		}

		[Token(Token = "0x60020CF")]
		[Address(RVA = "0x1E35FBC", Offset = "0x1E35FBC", VA = "0x1E35FBC")]
		public void SetIsInMenu(bool isInMenu)
		{
		}

		[Token(Token = "0x60020D0")]
		[Address(RVA = "0x1E35FE8", Offset = "0x1E35FE8", VA = "0x1E35FE8")]
		public void Teleport(Vector3 pos, Quaternion rotation, bool localPos = false, bool localRot = false, bool shouldNotFade = false)
		{
		}

		[Token(Token = "0x60020D1")]
		[Address(RVA = "0x1E3595C", Offset = "0x1E3595C", VA = "0x1E3595C")]
		public void RecenterPlayer()
		{
		}

		[Token(Token = "0x60020D2")]
		[Address(RVA = "0x1E36178", Offset = "0x1E36178", VA = "0x1E36178")]
		private void checkForControllerDisconnect()
		{
		}

		[Token(Token = "0x60020D3")]
		[Address(RVA = "0x1E36650", Offset = "0x1E36650", VA = "0x1E36650")]
		private bool becameConnected(bool left)
		{
			return default(bool);
		}

		[Token(Token = "0x60020D4")]
		[Address(RVA = "0x1E36684", Offset = "0x1E36684", VA = "0x1E36684")]
		private bool becameDisconnected(bool left)
		{
			return default(bool);
		}

		[Token(Token = "0x60020D5")]
		[Address(RVA = "0x1E366B8", Offset = "0x1E366B8", VA = "0x1E366B8")]
		private void onPlayerMotionControllerBecameDisconnected(bool left)
		{
		}

		[Token(Token = "0x60020D6")]
		[Address(RVA = "0x1E36A68", Offset = "0x1E36A68", VA = "0x1E36A68")]
		private void onPlayerMotionControllerConnected(bool left)
		{
		}

		[Token(Token = "0x60020D7")]
		[Address(RVA = "0x1E36B10", Offset = "0x1E36B10", VA = "0x1E36B10")]
		private void OnErrorMessageDismissed()
		{
		}

		[Token(Token = "0x60020D8")]
		[Address(RVA = "0x1E369F4", Offset = "0x1E369F4", VA = "0x1E369F4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98960C", Offset = "0x98960C")]
		private IEnumerator allowHandMovementCo()
		{
			return null;
		}

		[Token(Token = "0x60020D9")]
		[Address(RVA = "0x1E36BB8", Offset = "0x1E36BB8", VA = "0x1E36BB8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60020DA")]
		[Address(RVA = "0x1E36BCC", Offset = "0x1E36BCC", VA = "0x1E36BCC")]
		public void OnWorldRotatorUpdateCompleted()
		{
		}

		[Token(Token = "0x60020DB")]
		[Address(RVA = "0x1E36BFC", Offset = "0x1E36BFC", VA = "0x1E36BFC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60020DC")]
		[Address(RVA = "0x1E36C38", Offset = "0x1E36C38", VA = "0x1E36C38")]
		private void Update()
		{
		}

		[Token(Token = "0x60020DD")]
		[Address(RVA = "0x1E36E44", Offset = "0x1E36E44", VA = "0x1E36E44")]
		public void ForceCancelGrips()
		{
		}

		[Token(Token = "0x60020DE")]
		[Address(RVA = "0x1E372B0", Offset = "0x1E372B0", VA = "0x1E372B0")]
		public void ForceReleaseInteractibles()
		{
		}

		[Token(Token = "0x60020DF")]
		[Address(RVA = "0x1E36F9C", Offset = "0x1E36F9C", VA = "0x1E36F9C")]
		public void OpenSettings()
		{
		}

		[Token(Token = "0x60020E0")]
		[Address(RVA = "0x1E37128", Offset = "0x1E37128", VA = "0x1E37128")]
		public void CloseSettings()
		{
		}

		[Token(Token = "0x60020E1")]
		[Address(RVA = "0x1E36034", Offset = "0x1E36034", VA = "0x1E36034")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x989670", Offset = "0x989670")]
		private IEnumerator performTeleport(Vector3 pos, Quaternion rotation, bool localPos = false, bool localRot = false, bool shouldNotFade = false)
		{
			return null;
		}

		[Token(Token = "0x60020E2")]
		[Address(RVA = "0x1E37434", Offset = "0x1E37434", VA = "0x1E37434")]
		public void Fade(Color color, float duration)
		{
		}

		[Token(Token = "0x60020E3")]
		[Address(RVA = "0x1E37540", Offset = "0x1E37540", VA = "0x1E37540")]
		public PlayerController()
		{
		}
	}
	[Token(Token = "0x20005E6")]
	public class OnToggleSettingsNC : EventNode
	{
		[Token(Token = "0x4001AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static FlowOutput s_openOutput;

		[Token(Token = "0x4001AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static FlowOutput s_closeOutput;

		[Token(Token = "0x60020E5")]
		[Address(RVA = "0x1E6626C", Offset = "0x1E6626C", VA = "0x1E6626C", Slot = "37")]
		protected override void RegisterPorts()
		{
		}

		[Token(Token = "0x60020E6")]
		[Address(RVA = "0x1E66334", Offset = "0x1E66334", VA = "0x1E66334")]
		public static void OnOpenSettings(PlayerController invoker)
		{
		}

		[Token(Token = "0x60020E7")]
		[Address(RVA = "0x1E6641C", Offset = "0x1E6641C", VA = "0x1E6641C")]
		public static void OnCloseSettings(PlayerController invoker)
		{
		}

		[Token(Token = "0x60020E8")]
		[Address(RVA = "0x1E66504", Offset = "0x1E66504", VA = "0x1E66504")]
		public OnToggleSettingsNC()
		{
		}
	}
	[Token(Token = "0x20005E7")]
	public class PlayerCreator : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000FE8")]
		public struct PlatformConfig
		{
			[Token(Token = "0x400258E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public RuntimePlatform platform;

			[Token(Token = "0x400258F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string deviceName;

			[Token(Token = "0x4002590")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform cameraTemplate;

			[Token(Token = "0x4002591")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x983E04", Offset = "0x983E04")]
			public Transform leftTrackedHandTemplate;

			[Token(Token = "0x4002592")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform rightTrackedHandTemplate;

			[Token(Token = "0x4002593")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x983E3C", Offset = "0x983E3C")]
			public Transform bodyTemplate;
		}

		[Token(Token = "0x4001AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlatformConfig[] configurations;

		[Token(Token = "0x4001AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform BodyRoot;

		[Token(Token = "0x4001AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9834E8", Offset = "0x9834E8")]
		public bool m_initPostProcessing;

		[Token(Token = "0x4001AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x983520", Offset = "0x983520")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x983520", Offset = "0x983520")]
		private PostProcessResources m_postProcessResources;

		[Token(Token = "0x60020EA")]
		[Address(RVA = "0x1E38124", Offset = "0x1E38124", VA = "0x1E38124")]
		private void Start()
		{
		}

		[Token(Token = "0x60020EB")]
		[Address(RVA = "0x1E38F9C", Offset = "0x1E38F9C", VA = "0x1E38F9C")]
		private Transform resolveHeadTransform(Transform cameraTransform)
		{
			return null;
		}

		[Token(Token = "0x60020EC")]
		[Address(RVA = "0x1E38C5C", Offset = "0x1E38C5C", VA = "0x1E38C5C")]
		private static void addHandTracker(GameObject handObject, GameObject cameraRigObject, InteractionBroker interactionBroker, bool isLeft)
		{
		}

		[Token(Token = "0x60020ED")]
		[Address(RVA = "0x1E38FA4", Offset = "0x1E38FA4", VA = "0x1E38FA4")]
		private static void addBodyTrackers(Transform body, Transform leftTrackedHand, Transform rightTrackedHand, Transform playerHead)
		{
		}

		[Token(Token = "0x60020EE")]
		[Address(RVA = "0x1E38AD0", Offset = "0x1E38AD0", VA = "0x1E38AD0")]
		private bool findConfigForPlatformAndDevice(RuntimePlatform platform, string deviceName, ref PlatformConfig config, bool matchPlatform)
		{
			return default(bool);
		}

		[Token(Token = "0x60020EF")]
		[Address(RVA = "0x1E38FA8", Offset = "0x1E38FA8", VA = "0x1E38FA8")]
		public PlayerCreator()
		{
		}
	}
	[Token(Token = "0x20005E8")]
	public enum FtgAxis2D
	{
		[Token(Token = "0x4001AB6")]
		RotateWorld,
		[Token(Token = "0x4001AB7")]
		CameraHorizontal,
		[Token(Token = "0x4001AB8")]
		CameraVertical,
		[Token(Token = "0x4001AB9")]
		CameraZoom
	}
	[Token(Token = "0x20005E9")]
	public enum FtgButton
	{
		[Token(Token = "0x4001ABB")]
		GrabLeft,
		[Token(Token = "0x4001ABC")]
		GrabRight,
		[Token(Token = "0x4001ABD")]
		TriggerLeft,
		[Token(Token = "0x4001ABE")]
		TriggerRight,
		[Token(Token = "0x4001ABF")]
		ThumbstickLeft,
		[Token(Token = "0x4001AC0")]
		ThumbstickRight,
		[Token(Token = "0x4001AC1")]
		MenuLeft,
		[Token(Token = "0x4001AC2")]
		MenuRight
	}
	[Token(Token = "0x20005EA")]
	public class PlayerInputHandler
	{
		[Token(Token = "0x4001AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static PlayerInputHandler instance;

		[Token(Token = "0x4001AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool m_isInputLocked;

		[Token(Token = "0x4001AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool m_firstFrameAfterLock;

		[Token(Token = "0x4001AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		private bool m_firstFrameAfterUnlock;

		[Token(Token = "0x4001AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private int m_framesSinceUnlock;

		[Token(Token = "0x4001AC8")]
		private const int c_axisCount = 4;

		[Token(Token = "0x4001AC9")]
		private const int c_buttonCount = 8;

		[Token(Token = "0x4001ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector2[] m_axis;

		[Token(Token = "0x4001ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool[] m_prevButton;

		[Token(Token = "0x4001ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool[] m_currButton;

		[Token(Token = "0x4001ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRInput.Button[] m_ovrInputMap;

		[Token(Token = "0x4001ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRInput.Controller[] m_ovrControllerMap;

		[Token(Token = "0x4001ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Pvr_KeyCode[] m_picoInputMap;

		[Token(Token = "0x4001AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int[] m_picoControllerMap;

		[Token(Token = "0x4001AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string[] m_crossPlatformInputMap;

		[Token(Token = "0x4001AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool[] m_crossPlatformInputIsButtonMap;

		[Token(Token = "0x17000309")]
		public bool InputLocked
		{
			[Token(Token = "0x60020F0")]
			[Address(RVA = "0x1E35DA4", Offset = "0x1E35DA4", VA = "0x1E35DA4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60020F1")]
			[Address(RVA = "0x1E35F20", Offset = "0x1E35F20", VA = "0x1E35F20")]
			set
			{
			}
		}

		[Token(Token = "0x1700030A")]
		public bool InputWasRecentlyUnlocked
		{
			[Token(Token = "0x60020F2")]
			[Address(RVA = "0x1E3972C", Offset = "0x1E3972C", VA = "0x1E3972C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60020F3")]
		[Address(RVA = "0x1E34DEC", Offset = "0x1E34DEC", VA = "0x1E34DEC")]
		public void Init()
		{
		}

		[Token(Token = "0x60020F4")]
		[Address(RVA = "0x1E3974C", Offset = "0x1E3974C", VA = "0x1E3974C")]
		public void SampleInput(bool ignoreInputLock = false)
		{
		}

		[Token(Token = "0x60020F5")]
		[Address(RVA = "0x1E39B14", Offset = "0x1E39B14", VA = "0x1E39B14")]
		private Vector2 GetPicoTouchpadPosition(int controllerIndex)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60020F6")]
		[Address(RVA = "0x1E37704", Offset = "0x1E37704", VA = "0x1E37704")]
		public bool ManualCheckForInput()
		{
			return default(bool);
		}

		[Token(Token = "0x60020F7")]
		[Address(RVA = "0x1E39BDC", Offset = "0x1E39BDC", VA = "0x1E39BDC")]
		public Vector2 GetAxis(FtgAxis2D axisName)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60020F8")]
		[Address(RVA = "0x1E36D9C", Offset = "0x1E36D9C", VA = "0x1E36D9C")]
		public bool WentDown(FtgButton buttonName)
		{
			return default(bool);
		}

		[Token(Token = "0x60020F9")]
		[Address(RVA = "0x1E39C30", Offset = "0x1E39C30", VA = "0x1E39C30")]
		public bool WentUp(FtgButton buttonName)
		{
			return default(bool);
		}

		[Token(Token = "0x60020FA")]
		[Address(RVA = "0x1E39CD8", Offset = "0x1E39CD8", VA = "0x1E39CD8")]
		public bool IsDown(FtgButton buttonName)
		{
			return default(bool);
		}

		[Token(Token = "0x60020FB")]
		[Address(RVA = "0x1E39D2C", Offset = "0x1E39D2C", VA = "0x1E39D2C")]
		public void TriggerHapticPulse(float durationInSec, bool isLeftHand, float rumbleScaleMultiplier = 1f)
		{
		}

		[Token(Token = "0x60020FC")]
		[Address(RVA = "0x1E349AC", Offset = "0x1E349AC", VA = "0x1E349AC")]
		public PlayerInputHandler()
		{
		}
	}
	[Token(Token = "0x20005EB")]
	internal class InputHandlerUpdater : MonoBehaviour
	{
		[Token(Token = "0x4001AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal PlayerInputHandler inputHandler;

		[Token(Token = "0x4001AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool m_shouldUpdateInput;

		[Token(Token = "0x60020FE")]
		[Address(RVA = "0x1E5740C", Offset = "0x1E5740C", VA = "0x1E5740C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60020FF")]
		[Address(RVA = "0x1E57488", Offset = "0x1E57488", VA = "0x1E57488")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6002100")]
		[Address(RVA = "0x1E574D0", Offset = "0x1E574D0", VA = "0x1E574D0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6002101")]
		[Address(RVA = "0x1E574DC", Offset = "0x1E574DC", VA = "0x1E574DC")]
		public InputHandlerUpdater()
		{
		}
	}
	[Token(Token = "0x20005EC")]
	public class VelocityEstimator : MonoBehaviour
	{
		[Token(Token = "0x2000FE9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97C000", Offset = "0x97C000")]
		private sealed class <EstimateVelocityCoroutine>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002594")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002595")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002596")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VelocityEstimator <>4__this;

			[Token(Token = "0x4002597")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <previousPosition>5__2;

			[Token(Token = "0x4002598")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Quaternion <previousRotation>5__3;

			[Token(Token = "0x17000431")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003563")]
				[Address(RVA = "0xF487CC", Offset = "0xF487CC", VA = "0xF487CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000432")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003565")]
				[Address(RVA = "0xF4883C", Offset = "0xF4883C", VA = "0xF4883C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003560")]
			[Address(RVA = "0xF482E4", Offset = "0xF482E4", VA = "0xF482E4")]
			[DebuggerHidden]
			public <EstimateVelocityCoroutine>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6003561")]
			[Address(RVA = "0xF48324", Offset = "0xF48324", VA = "0xF48324", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003562")]
			[Address(RVA = "0xF48328", Offset = "0xF48328", VA = "0xF48328", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003564")]
			[Address(RVA = "0xF487D4", Offset = "0xF487D4", VA = "0xF487D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9835E8", Offset = "0x9835E8")]
		public int velocityAverageFrames;

		[Token(Token = "0x4001AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x983620", Offset = "0x983620")]
		public int angularVelocityAverageFrames;

		[Token(Token = "0x4001AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool estimateOnAwake;

		[Token(Token = "0x4001AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Coroutine routine;

		[Token(Token = "0x4001AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int sampleCount;

		[Token(Token = "0x4001ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] velocitySamples;

		[Token(Token = "0x4001ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3[] angularVelocitySamples;

		[Token(Token = "0x4001ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform m_transform;

		[Token(Token = "0x1700030B")]
		public Transform Transform
		{
			[Token(Token = "0x6002104")]
			[Address(RVA = "0xF47C58", Offset = "0xF47C58", VA = "0xF47C58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002102")]
		[Address(RVA = "0xF47B54", Offset = "0xF47B54", VA = "0xF47B54")]
		public void BeginEstimatingVelocity()
		{
		}

		[Token(Token = "0x6002103")]
		[Address(RVA = "0xF47BB0", Offset = "0xF47BB0", VA = "0xF47BB0")]
		public void FinishEstimatingVelocity()
		{
		}

		[Token(Token = "0x6002105")]
		[Address(RVA = "0xF47C60", Offset = "0xF47C60", VA = "0xF47C60")]
		public Vector3 GetVelocityEstimate()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002106")]
		[Address(RVA = "0xF47E40", Offset = "0xF47E40", VA = "0xF47E40")]
		public Vector3 GetAngularVelocityEstimate()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002107")]
		[Address(RVA = "0xF48020", Offset = "0xF48020", VA = "0xF48020")]
		public Vector3 GetAccelerationEstimate()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002108")]
		[Address(RVA = "0xF48264", Offset = "0xF48264", VA = "0xF48264")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002109")]
		[Address(RVA = "0xF47BE4", Offset = "0xF47BE4", VA = "0xF47BE4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9896D4", Offset = "0x9896D4")]
		private IEnumerator EstimateVelocityCoroutine()
		{
			return null;
		}

		[Token(Token = "0x600210A")]
		[Address(RVA = "0xF48310", Offset = "0xF48310", VA = "0xF48310")]
		public VelocityEstimator()
		{
		}
	}
	[Token(Token = "0x20005ED")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x978C40", Offset = "0x978C40")]
	public class RigidbodyCenterOfMass : MonoBehaviour
	{
		[Token(Token = "0x4001ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Vector3 m_centerOfMass;

		[Token(Token = "0x4001ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Rigidbody m_rigidbody;

		[Token(Token = "0x600210B")]
		[Address(RVA = "0x1E3CCF8", Offset = "0x1E3CCF8", VA = "0x1E3CCF8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600210C")]
		[Address(RVA = "0x1E3CD50", Offset = "0x1E3CD50", VA = "0x1E3CD50")]
		private void Start()
		{
		}

		[Token(Token = "0x600210D")]
		[Address(RVA = "0x1E3CDA4", Offset = "0x1E3CDA4", VA = "0x1E3CDA4")]
		public RigidbodyCenterOfMass()
		{
		}
	}
	[Token(Token = "0x20005EE")]
	public struct Splat
	{
		[Token(Token = "0x4001ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Matrix4x4 splatMatrix;

		[Token(Token = "0x4001AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector4 channelMask;

		[Token(Token = "0x4001AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Vector4 scaleBias;
	}
	[Token(Token = "0x20005EF")]
	public class SplatManager : MonoBehaviour
	{
		[Token(Token = "0x4001AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Renderer targetRenderer;

		[Token(Token = "0x4001AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material targetMaterial;

		[Token(Token = "0x4001AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int sizeX;

		[Token(Token = "0x4001AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int sizeY;

		[Token(Token = "0x4001AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Texture2D splatTexture;

		[Token(Token = "0x4001AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int splatsX;

		[Token(Token = "0x4001AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int splatsY;

		[Token(Token = "0x4001AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x983668", Offset = "0x983668")]
		public RenderTexture splatTex;

		[Token(Token = "0x4001AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public RenderTexture splatTexAlt;

		[Token(Token = "0x4001AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public RenderTexture worldPosTex;

		[Token(Token = "0x4001AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Material splatBlitMaterial;

		[Token(Token = "0x4001AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool evenFrame;

		[Token(Token = "0x4001AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal List<Splat> m_Splats;

		[Token(Token = "0x600210E")]
		[Address(RVA = "0x1E476EC", Offset = "0x1E476EC", VA = "0x1E476EC")]
		private void Start()
		{
		}

		[Token(Token = "0x600210F")]
		[Address(RVA = "0x1E4794C", Offset = "0x1E4794C", VA = "0x1E4794C")]
		private void UnwrapRendererToTexture(Renderer envRenderer, RenderTexture texture)
		{
		}

		[Token(Token = "0x6002110")]
		[Address(RVA = "0x1E47F38", Offset = "0x1E47F38", VA = "0x1E47F38")]
		private void BleedTextures()
		{
		}

		[Token(Token = "0x6002111")]
		[Address(RVA = "0x1E48120", Offset = "0x1E48120", VA = "0x1E48120")]
		private void PaintSplats()
		{
		}

		[Token(Token = "0x6002112")]
		[Address(RVA = "0x1E485B8", Offset = "0x1E485B8", VA = "0x1E485B8")]
		private void Update()
		{
		}

		[Token(Token = "0x6002113")]
		[Address(RVA = "0x1E485BC", Offset = "0x1E485BC", VA = "0x1E485BC")]
		public void AddSplat(Splat splat)
		{
		}

		[Token(Token = "0x6002114")]
		[Address(RVA = "0x1E4865C", Offset = "0x1E4865C", VA = "0x1E4865C")]
		public SplatManager()
		{
		}
	}
	[Token(Token = "0x20005F0")]
	public class ArLightEstimator : MonoBehaviour
	{
		[Token(Token = "0x4001AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Light lightToAdjust;

		[Token(Token = "0x6002115")]
		[Address(RVA = "0xBB4370", Offset = "0xBB4370", VA = "0xBB4370")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002116")]
		[Address(RVA = "0xBB440C", Offset = "0xBB440C", VA = "0xBB440C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002117")]
		[Address(RVA = "0xBB44A8", Offset = "0xBB44A8", VA = "0xBB44A8")]
		private void OnCameraFrameReceived(ARCameraFrameEventArgs eventArgs)
		{
		}

		[Token(Token = "0x6002118")]
		[Address(RVA = "0xBB4614", Offset = "0xBB4614", VA = "0xBB4614")]
		public ArLightEstimator()
		{
		}
	}
	[Token(Token = "0x20005F1")]
	public class BlendWeightsOverride : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000FEA")]
		public class QualitySkinQuality : QualitySettingsBase<SkinQuality>
		{
			[Token(Token = "0x6003566")]
			[Address(RVA = "0xBBDC0C", Offset = "0xBBDC0C", VA = "0xBBDC0C")]
			public QualitySkinQuality()
			{
			}
		}

		[Token(Token = "0x4001AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public QualitySkinQuality skinQuality;

		[Token(Token = "0x6002119")]
		[Address(RVA = "0xBBDAF4", Offset = "0xBBDAF4", VA = "0xBBDAF4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600211A")]
		[Address(RVA = "0xBBDC04", Offset = "0xBBDC04", VA = "0xBBDC04")]
		public BlendWeightsOverride()
		{
		}
	}
	[Token(Token = "0x20005F2")]
	public class ChangeMaterialInBuild : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000FEB")]
		public class MaterialSlot
		{
			[Token(Token = "0x4002599")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int m_materialId;

			[Token(Token = "0x400259A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Material m_material;

			[Token(Token = "0x6003567")]
			[Address(RVA = "0xBBECD0", Offset = "0xBBECD0", VA = "0xBBECD0")]
			public MaterialSlot()
			{
			}
		}

		[Token(Token = "0x4001AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Renderer m_renderer;

		[Token(Token = "0x4001AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool m_changeMaterialForLow;

		[Token(Token = "0x4001AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9836A0", Offset = "0x9836A0")]
		public MaterialSlot[] m_materialsLow;

		[Token(Token = "0x4001AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool m_changeMaterialForMed;

		[Token(Token = "0x4001AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x983734", Offset = "0x983734")]
		public MaterialSlot[] m_materialsMed;

		[Token(Token = "0x4001AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool m_changeMaterialForHigh;

		[Token(Token = "0x4001AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9837C8", Offset = "0x9837C8")]
		public MaterialSlot[] m_materialsHigh;

		[Token(Token = "0x600211B")]
		[Address(RVA = "0xBBECC8", Offset = "0xBBECC8", VA = "0xBBECC8")]
		public ChangeMaterialInBuild()
		{
		}
	}
	[Token(Token = "0x20005F3")]
	public class ColorgradingLUTSwitcher : MonoBehaviour
	{
		[Token(Token = "0x4001AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture lut;

		[Token(Token = "0x4001AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string lowerShaderName;

		[Token(Token = "0x600211C")]
		[Address(RVA = "0xBC2E20", Offset = "0xBC2E20", VA = "0xBC2E20")]
		private void Start()
		{
		}

		[Token(Token = "0x600211D")]
		[Address(RVA = "0xBC2E98", Offset = "0xBC2E98", VA = "0xBC2E98")]
		private void updateMaterialLUTs(Renderer[] renderers)
		{
		}

		[Token(Token = "0x600211E")]
		[Address(RVA = "0xBC3098", Offset = "0xBC3098", VA = "0xBC3098")]
		public ColorgradingLUTSwitcher()
		{
		}
	}
	[Token(Token = "0x20005F4")]
	public class EntitlementCheck : MonoBehaviour
	{
		[Token(Token = "0x2000FEC")]
		private abstract class DrmPlatformImplementation
		{
			[Token(Token = "0x6003568")]
			public abstract void Init();

			[Token(Token = "0x6003569")]
			[Address(RVA = "0xBD0F44", Offset = "0xBD0F44", VA = "0xBD0F44")]
			protected void OnError(string errorMessage)
			{
			}

			[Token(Token = "0x600356A")]
			[Address(RVA = "0xBD0FB4", Offset = "0xBD0FB4", VA = "0xBD0FB4")]
			protected DrmPlatformImplementation()
			{
			}
		}

		[Token(Token = "0x4001AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private DrmPlatformImplementation implementation;

		[Token(Token = "0x600211F")]
		[Address(RVA = "0xBD0F08", Offset = "0xBD0F08", VA = "0xBD0F08")]
		private void Start()
		{
		}

		[Token(Token = "0x6002120")]
		[Address(RVA = "0xBD0F3C", Offset = "0xBD0F3C", VA = "0xBD0F3C")]
		public EntitlementCheck()
		{
		}
	}
	[Token(Token = "0x20005F5")]
	public class FFRLevelSetter : MonoBehaviour
	{
		[Token(Token = "0x4001AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public OVRManager.TiledMultiResLevel tiledMultiResLevel;

		[Token(Token = "0x6002121")]
		[Address(RVA = "0xBD13C4", Offset = "0xBD13C4", VA = "0xBD13C4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002122")]
		[Address(RVA = "0xBD1430", Offset = "0xBD1430", VA = "0xBD1430")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002123")]
		[Address(RVA = "0xBD1494", Offset = "0xBD1494", VA = "0xBD1494")]
		public FFRLevelSetter()
		{
		}
	}
	[Token(Token = "0x20005F6")]
	public class LevelLoadManager : MonoBehaviour
	{
		[Token(Token = "0x4001AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static LevelLoadManager instance;

		[Token(Token = "0x6002124")]
		[Address(RVA = "0x1E5C818", Offset = "0x1E5C818", VA = "0x1E5C818")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002125")]
		[Address(RVA = "0x1E5C884", Offset = "0x1E5C884", VA = "0x1E5C884")]
		private void Start()
		{
		}

		[Token(Token = "0x6002126")]
		[Address(RVA = "0x1E5C900", Offset = "0x1E5C900", VA = "0x1E5C900")]
		public LevelLoadManager()
		{
		}
	}
	[Token(Token = "0x20005F7")]
	public static class MainCameraGetter
	{
		[Token(Token = "0x6002128")]
		[Address(RVA = "0x1E63424", Offset = "0x1E63424", VA = "0x1E63424")]
		public static Camera GetMainCamera()
		{
			return null;
		}

		[Token(Token = "0x6002129")]
		[Address(RVA = "0x1E634E0", Offset = "0x1E634E0", VA = "0x1E634E0")]
		public static Transform GetTransform()
		{
			return null;
		}
	}
	[Token(Token = "0x20005F8")]
	public class ObbBundleLoader : MonoBehaviour
	{
		[Token(Token = "0x2000FED")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97C010", Offset = "0x97C010")]
		private sealed class <loadBundleAndBootstrap>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400259B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400259C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400259D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ObbBundleLoader <>4__this;

			[Token(Token = "0x400259E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private AsyncOperation <asyncOperation>5__2;

			[Token(Token = "0x17000433")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600356E")]
				[Address(RVA = "0x1E65EAC", Offset = "0x1E65EAC", VA = "0x1E65EAC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000434")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003570")]
				[Address(RVA = "0x1E65F1C", Offset = "0x1E65F1C", VA = "0x1E65F1C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600356B")]
			[Address(RVA = "0x1E65C54", Offset = "0x1E65C54", VA = "0x1E65C54")]
			[DebuggerHidden]
			public <loadBundleAndBootstrap>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x600356C")]
			[Address(RVA = "0x1E65D08", Offset = "0x1E65D08", VA = "0x1E65D08", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600356D")]
			[Address(RVA = "0x1E65D0C", Offset = "0x1E65D0C", VA = "0x1E65D0C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600356F")]
			[Address(RVA = "0x1E65EB4", Offset = "0x1E65EB4", VA = "0x1E65EB4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform errorMessage;

		[Token(Token = "0x4001AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform bundleLoadError;

		[Token(Token = "0x4001AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform loadingScreen;

		[Token(Token = "0x4001B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject cameraObject;

		[Token(Token = "0x4001B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string sceneToLoad;

		[Token(Token = "0x4001B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string bundleIdentifier;

		[Token(Token = "0x4001B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string oculusAppId;

		[Token(Token = "0x4001B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string obbBundleName;

		[Token(Token = "0x600212A")]
		[Address(RVA = "0x1E6598C", Offset = "0x1E6598C", VA = "0x1E6598C")]
		private void Start()
		{
		}

		[Token(Token = "0x600212B")]
		[Address(RVA = "0x1E65A58", Offset = "0x1E65A58", VA = "0x1E65A58")]
		private void callbackMethod(Message msg)
		{
		}

		[Token(Token = "0x600212C")]
		[Address(RVA = "0x1E65C4C", Offset = "0x1E65C4C", VA = "0x1E65C4C")]
		private void exitApplication()
		{
		}

		[Token(Token = "0x600212D")]
		[Address(RVA = "0x1E65BD8", Offset = "0x1E65BD8", VA = "0x1E65BD8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x989738", Offset = "0x989738")]
		private IEnumerator loadBundleAndBootstrap()
		{
			return null;
		}

		[Token(Token = "0x600212E")]
		[Address(RVA = "0x1E65C80", Offset = "0x1E65C80", VA = "0x1E65C80")]
		public ObbBundleLoader()
		{
		}
	}
	[Token(Token = "0x20005F9")]
	public class PS4DeviceSetupHandler : MonoBehaviour
	{
		[Token(Token = "0x4001B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float resolutionScale;

		[Token(Token = "0x4001B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static float proResolutionScale;

		[Token(Token = "0x4001B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform waitForDevicesUiRoot;

		[Token(Token = "0x4001B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_framesSinceLastCheck;

		[Token(Token = "0x4001B09")]
		private const int checkFrameRate = 300;

		[Token(Token = "0x4001B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool m_tryInit;

		[Token(Token = "0x4001B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		private bool m_hmdInitOK;

		[Token(Token = "0x4001B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		private bool m_triggerHmdSetup;

		[Token(Token = "0x4001B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
		private bool m_vrReady;

		[Token(Token = "0x4001B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_loadingPending;

		[Token(Token = "0x600212F")]
		[Address(RVA = "0x1E2C9D8", Offset = "0x1E2C9D8", VA = "0x1E2C9D8")]
		public PS4DeviceSetupHandler()
		{
		}
	}
	[Token(Token = "0x20005FA")]
	public class PS4PostReprojectionDisabler : MonoBehaviour
	{
		[Token(Token = "0x4001B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool disableReprojectionOnOnDisable;

		[Token(Token = "0x6002131")]
		[Address(RVA = "0x1E2CA48", Offset = "0x1E2CA48", VA = "0x1E2CA48")]
		private void Start()
		{
		}

		[Token(Token = "0x6002132")]
		[Address(RVA = "0x1E2CABC", Offset = "0x1E2CABC", VA = "0x1E2CABC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002133")]
		[Address(RVA = "0x1E2CB2C", Offset = "0x1E2CB2C", VA = "0x1E2CB2C")]
		public PS4PostReprojectionDisabler()
		{
		}
	}
	[Token(Token = "0x20005FB")]
	public class PS4PostReprojectionHandler : MonoBehaviour
	{
		[Token(Token = "0x4001B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material loadingIcon;

		[Token(Token = "0x4001B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material loadingBG;

		[Token(Token = "0x4001B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color clearColor;

		[Token(Token = "0x4001B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float rotationMultiplier;

		[Token(Token = "0x4001B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float animationTimePerFrame;

		[Token(Token = "0x4001B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector2 iconDimensions;

		[Token(Token = "0x4001B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 iconPosition;

		[Token(Token = "0x4001B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector2 bgDimensions;

		[Token(Token = "0x4001B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Vector3 bgPosition;

		[Token(Token = "0x4001B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PS4PostReprojectionHandler s_instance;

		[Token(Token = "0x4001B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3[] uv;

		[Token(Token = "0x4001B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3[] uvAnimated;

		[Token(Token = "0x4001B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool m_renderLoadingQuad;

		[Token(Token = "0x4001B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int m_currentEye;

		[Token(Token = "0x4001B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private RenderTexture m_postReprojectionTexture;

		[Token(Token = "0x4001B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Camera m_cam;

		[Token(Token = "0x4001B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float m_quadRotation;

		[Token(Token = "0x4001B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Vector2 m_uvOffset;

		[Token(Token = "0x4001B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int m_spriteSheetCols;

		[Token(Token = "0x4001B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private int m_spriteSheetRows;

		[Token(Token = "0x4001B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private int m_currCol;

		[Token(Token = "0x4001B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int m_currRow;

		[Token(Token = "0x4001B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private float m_lastAnimTime;

		[Token(Token = "0x4001B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int m_framesSinceDisable;

		[Token(Token = "0x4001B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private bool m_disableRequested;

		[Token(Token = "0x6002134")]
		[Address(RVA = "0x1E2CB34", Offset = "0x1E2CB34", VA = "0x1E2CB34")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002135")]
		[Address(RVA = "0x1E2CBA0", Offset = "0x1E2CBA0", VA = "0x1E2CBA0")]
		private void Start()
		{
		}

		[Token(Token = "0x6002136")]
		[Address(RVA = "0x1E2CC54", Offset = "0x1E2CC54", VA = "0x1E2CC54")]
		private void Update()
		{
		}

		[Token(Token = "0x6002137")]
		[Address(RVA = "0x1E2CAB8", Offset = "0x1E2CAB8", VA = "0x1E2CAB8")]
		public static void EnablePostReprojection(bool enable)
		{
		}

		[Token(Token = "0x6002138")]
		[Address(RVA = "0x1E2CCFC", Offset = "0x1E2CCFC", VA = "0x1E2CCFC")]
		private void updateUvAnim()
		{
		}

		[Token(Token = "0x6002139")]
		[Address(RVA = "0x1E2CD70", Offset = "0x1E2CD70", VA = "0x1E2CD70")]
		private void RenderQuadBackground()
		{
		}

		[Token(Token = "0x600213A")]
		[Address(RVA = "0x1E2D130", Offset = "0x1E2D130", VA = "0x1E2D130")]
		private void RenderQuadUVAnimated()
		{
		}

		[Token(Token = "0x600213B")]
		[Address(RVA = "0x1E2D560", Offset = "0x1E2D560", VA = "0x1E2D560")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x600213C")]
		[Address(RVA = "0x1E2D564", Offset = "0x1E2D564", VA = "0x1E2D564")]
		public PS4PostReprojectionHandler()
		{
		}
	}
	[Token(Token = "0x20005FC")]
	public class QualitySetSelector : MonoBehaviour
	{
		[Token(Token = "0x4001B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x98385C", Offset = "0x98385C")]
		public Transform[] transforms;

		[Token(Token = "0x4001B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x983894", Offset = "0x983894")]
		public QualityTransformSet sets;

		[Token(Token = "0x600213E")]
		[Address(RVA = "0x1E3B148", Offset = "0x1E3B148", VA = "0x1E3B148")]
		private void Awake()
		{
		}

		[Token(Token = "0x600213F")]
		[Address(RVA = "0x1E3B320", Offset = "0x1E3B320", VA = "0x1E3B320")]
		private bool shouldBeActive(TransformSet set, Transform t)
		{
			return default(bool);
		}

		[Token(Token = "0x6002140")]
		[Address(RVA = "0x1E3B424", Offset = "0x1E3B424", VA = "0x1E3B424")]
		public QualitySetSelector()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005FD")]
	public class QualitySettingsBase<T>
	{
		[Token(Token = "0x4001B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9838CC", Offset = "0x9838CC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9838CC", Offset = "0x9838CC")]
		public bool neoIsMedium;

		[Token(Token = "0x4001B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x98392C", Offset = "0x98392C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x98392C", Offset = "0x98392C")]
		public T low;

		[Token(Token = "0x4001B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x98398C", Offset = "0x98398C")]
		public T medium;

		[Token(Token = "0x4001B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9839C4", Offset = "0x9839C4")]
		public T high;

		[Token(Token = "0x6002141")]
		public T selected()
		{
			return (T)null;
		}

		[Token(Token = "0x6002142")]
		private T getSelectedOrForced(T selected)
		{
			return (T)null;
		}

		[Token(Token = "0x6002143")]
		public QualitySettingsBase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005FE")]
	public class QualityBool : QualitySettingsBase<bool>
	{
		[Token(Token = "0x6002144")]
		[Address(RVA = "0x1E3B058", Offset = "0x1E3B058", VA = "0x1E3B058")]
		public QualityBool()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005FF")]
	public class QualityFloat : QualitySettingsBase<float>
	{
		[Token(Token = "0x6002145")]
		[Address(RVA = "0x1E3B0A8", Offset = "0x1E3B0A8", VA = "0x1E3B0A8")]
		public QualityFloat()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000600")]
	public class QualityInt : QualitySettingsBase<int>
	{
		[Token(Token = "0x6002146")]
		[Address(RVA = "0x1E3B0F8", Offset = "0x1E3B0F8", VA = "0x1E3B0F8")]
		public QualityInt()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000601")]
	public class TransformSet
	{
		[Token(Token = "0x4001B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform[] items;

		[Token(Token = "0x6002147")]
		[Address(RVA = "0xF437BC", Offset = "0xF437BC", VA = "0xF437BC")]
		public TransformSet()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000602")]
	public class QualityTransformSet : QualitySettingsBase<TransformSet>
	{
		[Token(Token = "0x6002148")]
		[Address(RVA = "0x1E3B42C", Offset = "0x1E3B42C", VA = "0x1E3B42C")]
		public QualityTransformSet()
		{
		}
	}
	[Token(Token = "0x2000603")]
	public class RemoveFromBuild : MonoBehaviour
	{
		[Token(Token = "0x4001B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool disableInsteadOfDestroy;

		[Token(Token = "0x4001B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool removeFromLow;

		[Token(Token = "0x4001B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool removeFromMedium;

		[Token(Token = "0x4001B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool removeFromHigh;

		[Token(Token = "0x6002149")]
		[Address(RVA = "0x1E3BEE0", Offset = "0x1E3BEE0", VA = "0x1E3BEE0")]
		public RemoveFromBuild()
		{
		}
	}
	[Token(Token = "0x2000604")]
	public static class TransformUtils
	{
		[Token(Token = "0x600214A")]
		[Address(RVA = "0xF437C4", Offset = "0xF437C4", VA = "0xF437C4")]
		public static Transform FindChildByName(this Transform parent, string name)
		{
			return null;
		}
	}
	[Token(Token = "0x2000605")]
	public class VersionText : MonoBehaviour
	{
		[Token(Token = "0x4001B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshPro m_text;

		[Token(Token = "0x600214B")]
		[Address(RVA = "0xF48844", Offset = "0xF48844", VA = "0xF48844")]
		private void Start()
		{
		}

		[Token(Token = "0x600214C")]
		[Address(RVA = "0xF488C8", Offset = "0xF488C8", VA = "0xF488C8")]
		public VersionText()
		{
		}
	}
	[Token(Token = "0x2000606")]
	public class VrHmdUtil
	{
		[Token(Token = "0x600214D")]
		[Address(RVA = "0xF49030", Offset = "0xF49030", VA = "0xF49030")]
		public static string GetDeviceName()
		{
			return null;
		}

		[Token(Token = "0x600214E")]
		[Address(RVA = "0xF49038", Offset = "0xF49038", VA = "0xF49038")]
		public VrHmdUtil()
		{
		}
	}
	[Token(Token = "0x2000607")]
	[ExecuteAlways]
	public class WaterPositionToShader : MonoBehaviour
	{
		[Token(Token = "0x4001B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform m_transform;

		[Token(Token = "0x4001B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_globalWaterYPropId;

		[Token(Token = "0x4001B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float lastWaterY;

		[Token(Token = "0x600214F")]
		[Address(RVA = "0xF4B19C", Offset = "0xF4B19C", VA = "0xF4B19C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002150")]
		[Address(RVA = "0xF4B230", Offset = "0xF4B230", VA = "0xF4B230")]
		private void Update()
		{
		}

		[Token(Token = "0x6002151")]
		[Address(RVA = "0xF4B2F4", Offset = "0xF4B2F4", VA = "0xF4B2F4")]
		public WaterPositionToShader()
		{
		}
	}
	[Token(Token = "0x2000608")]
	public class Effect : MonoBehaviour
	{
		[Token(Token = "0x4001B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private EffectPlayer m_effectPlayer;

		[Token(Token = "0x6002152")]
		[Address(RVA = "0xBCFCA0", Offset = "0xBCFCA0", VA = "0xBCFCA0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002153")]
		[Address(RVA = "0xBCFEB4", Offset = "0xBCFEB4", VA = "0xBCFEB4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002154")]
		[Address(RVA = "0xBD0044", Offset = "0xBD0044", VA = "0xBD0044")]
		public void PlayOnceAndDestroy()
		{
		}

		[Token(Token = "0x6002155")]
		[Address(RVA = "0xBCB870", Offset = "0xBCB870", VA = "0xBCB870")]
		public void Play()
		{
		}

		[Token(Token = "0x6002156")]
		[Address(RVA = "0xBD02B8", Offset = "0xBD02B8", VA = "0xBD02B8")]
		public void StopAndDestroy()
		{
		}

		[Token(Token = "0x6002157")]
		[Address(RVA = "0xBCB89C", Offset = "0xBCB89C", VA = "0xBCB89C")]
		public void Stop()
		{
		}

		[Token(Token = "0x6002158")]
		[Address(RVA = "0xBD02DC", Offset = "0xBD02DC", VA = "0xBD02DC")]
		public void onEffectPlayerDone()
		{
		}

		[Token(Token = "0x6002159")]
		[Address(RVA = "0xBD03E8", Offset = "0xBD03E8", VA = "0xBD03E8")]
		public Effect()
		{
		}
	}
	[Token(Token = "0x2000609")]
	public class EffectPlayer : MonoBehaviour
	{
		[Token(Token = "0x2000FEE")]
		public delegate void EffectPlayerDoneEvent();

		[Token(Token = "0x4001B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ParticleSystem m_particleSystemBase;

		[Token(Token = "0x4001B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ParticleSystemStopBehavior m_particleSystemStopBehavior;

		[Token(Token = "0x4001B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_stopTime;

		[Token(Token = "0x4001B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float m_disableTime;

		[Token(Token = "0x4001B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool m_looping;

		[Token(Token = "0x4001B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float m_maxDuration;

		[Token(Token = "0x1400004A")]
		public event EffectPlayerDoneEvent OnEffectPlayerDone
		{
			[Token(Token = "0x600215A")]
			[Address(RVA = "0xBD00D8", Offset = "0xBD00D8", VA = "0xBD00D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9897AC", Offset = "0x9897AC")]
			add
			{
			}
			[Token(Token = "0x600215B")]
			[Address(RVA = "0xBCFF58", Offset = "0xBCFF58", VA = "0xBCFF58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9897BC", Offset = "0x9897BC")]
			remove
			{
			}
		}

		[Token(Token = "0x600215C")]
		[Address(RVA = "0xBCFD3C", Offset = "0xBCFD3C", VA = "0xBCFD3C")]
		public void init(Transform effectInstance, bool looping = false)
		{
		}

		[Token(Token = "0x600215D")]
		[Address(RVA = "0xBD04CC", Offset = "0xBD04CC", VA = "0xBD04CC")]
		public ParticleSystem GetParticleSystem()
		{
			return null;
		}

		[Token(Token = "0x600215E")]
		[Address(RVA = "0xBD04D4", Offset = "0xBD04D4", VA = "0xBD04D4")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x600215F")]
		[Address(RVA = "0xBD03F0", Offset = "0xBD03F0", VA = "0xBD03F0")]
		private float getParticleLifetime(ParticleSystem.MainModule main)
		{
			return default(float);
		}

		[Token(Token = "0x6002160")]
		[Address(RVA = "0xBD01C4", Offset = "0xBD01C4", VA = "0xBD01C4")]
		public void startEffect()
		{
		}

		[Token(Token = "0x6002161")]
		[Address(RVA = "0xBD03A8", Offset = "0xBD03A8", VA = "0xBD03A8")]
		public void stopEffect(float stopTime = 0f, ParticleSystemStopBehavior particleSystemStopBehavior = ParticleSystemStopBehavior.StopEmitting)
		{
		}

		[Token(Token = "0x6002162")]
		[Address(RVA = "0xBD0504", Offset = "0xBD0504", VA = "0xBD0504")]
		private void reset()
		{
		}

		[Token(Token = "0x6002163")]
		[Address(RVA = "0xBD0518", Offset = "0xBD0518", VA = "0xBD0518")]
		private void Update()
		{
		}

		[Token(Token = "0x6002164")]
		[Address(RVA = "0xBD0A14", Offset = "0xBD0A14", VA = "0xBD0A14")]
		public EffectPlayer()
		{
		}
	}
	[Token(Token = "0x200060A")]
	public class MeltPointTest : MonoBehaviour
	{
		[Token(Token = "0x2000FEF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97C020", Offset = "0x97C020")]
		private sealed class <Start>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400259F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40025A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40025A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MeltPointTest <>4__this;

			[Token(Token = "0x17000435")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003578")]
				[Address(RVA = "0x1E64E34", Offset = "0x1E64E34", VA = "0x1E64E34", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000436")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600357A")]
				[Address(RVA = "0x1E64EA4", Offset = "0x1E64EA4", VA = "0x1E64EA4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003575")]
			[Address(RVA = "0x1E647B4", Offset = "0x1E647B4", VA = "0x1E647B4")]
			[DebuggerHidden]
			public <Start>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6003576")]
			[Address(RVA = "0x1E6484C", Offset = "0x1E6484C", VA = "0x1E6484C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003577")]
			[Address(RVA = "0x1E64850", Offset = "0x1E64850", VA = "0x1E64850", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003579")]
			[Address(RVA = "0x1E64E3C", Offset = "0x1E64E3C", VA = "0x1E64E3C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GameObject newSplatObject;

		[Token(Token = "0x4001B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector4 channelMask;

		[Token(Token = "0x4001B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float splatScale;

		[Token(Token = "0x6002165")]
		[Address(RVA = "0x1E64740", Offset = "0x1E64740", VA = "0x1E64740")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9897CC", Offset = "0x9897CC")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6002166")]
		[Address(RVA = "0x1E647E0", Offset = "0x1E647E0", VA = "0x1E647E0")]
		public MeltPointTest()
		{
		}
	}
	[Token(Token = "0x200060B")]
	public class AnimationSwitcher : MonoBehaviour
	{
		[Token(Token = "0x2000FF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97C030", Offset = "0x97C030")]
		private sealed class <setAnimOneDelayed>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40025A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40025A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40025A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float animationLength;

			[Token(Token = "0x40025A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AnimationSwitcher <>4__this;

			[Token(Token = "0x17000437")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600357E")]
				[Address(RVA = "0xBB3CE8", Offset = "0xBB3CE8", VA = "0xBB3CE8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000438")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003580")]
				[Address(RVA = "0xBB3D58", Offset = "0xBB3D58", VA = "0xBB3D58", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600357B")]
			[Address(RVA = "0xBB3BE8", Offset = "0xBB3BE8", VA = "0xBB3BE8")]
			[DebuggerHidden]
			public <setAnimOneDelayed>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x600357C")]
			[Address(RVA = "0xBB3C14", Offset = "0xBB3C14", VA = "0xBB3C14", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600357D")]
			[Address(RVA = "0xBB3C18", Offset = "0xBB3C18", VA = "0xBB3C18", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600357F")]
			[Address(RVA = "0xBB3CF0", Offset = "0xBB3CF0", VA = "0xBB3CF0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public global::AnimationInstancing.AnimationInstancing animationInstancing;

		[Token(Token = "0x4001B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SphereCollider interactCollider;

		[Token(Token = "0x4001B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_lastAnimChangeTime;

		[Token(Token = "0x4001B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int animationIndex;

		[Token(Token = "0x4001B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private PlayerController m_player;

		[Token(Token = "0x4001B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 m_colliderWorldPos;

		[Token(Token = "0x6002167")]
		[Address(RVA = "0xD9A100", Offset = "0xD9A100", VA = "0xD9A100")]
		private void Start()
		{
		}

		[Token(Token = "0x6002168")]
		[Address(RVA = "0xD9A1EC", Offset = "0xD9A1EC", VA = "0xD9A1EC")]
		private void Update()
		{
		}

		[Token(Token = "0x6002169")]
		[Address(RVA = "0xD9A4D4", Offset = "0xD9A4D4", VA = "0xD9A4D4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x989830", Offset = "0x989830")]
		private IEnumerator setAnimOneDelayed(float animationLength)
		{
			return null;
		}

		[Token(Token = "0x600216A")]
		[Address(RVA = "0xD9A56C", Offset = "0xD9A56C", VA = "0xD9A56C")]
		public AnimationSwitcher()
		{
		}
	}
	[Token(Token = "0x200060C")]
	public class MaterialAlphaLerper : MonoBehaviour
	{
		[Token(Token = "0x2000FF1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97C040", Offset = "0x97C040")]
		private sealed class <toggleAlphaTarget>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40025A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40025A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40025A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MaterialAlphaLerper <>4__this;

			[Token(Token = "0x17000439")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003584")]
				[Address(RVA = "0x1E6395C", Offset = "0x1E6395C", VA = "0x1E6395C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700043A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003586")]
				[Address(RVA = "0x1E639CC", Offset = "0x1E639CC", VA = "0x1E639CC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003581")]
			[Address(RVA = "0x1E63694", Offset = "0x1E63694", VA = "0x1E63694")]
			[DebuggerHidden]
			public <toggleAlphaTarget>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6003582")]
			[Address(RVA = "0x1E6384C", Offset = "0x1E6384C", VA = "0x1E6384C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003583")]
			[Address(RVA = "0x1E63850", Offset = "0x1E63850", VA = "0x1E63850", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003585")]
			[Address(RVA = "0x1E63964", Offset = "0x1E63964", VA = "0x1E63964", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float minAlpha;

		[Token(Token = "0x4001B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float maxAlpha;

		[Token(Token = "0x4001B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SkinnedMeshRenderer handRenderer;

		[Token(Token = "0x4001B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_targetAlpha;

		[Token(Token = "0x4001B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_currentAlpha;

		[Token(Token = "0x4001B4E")]
		private const float lerpSpeed = 10f;

		[Token(Token = "0x4001B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int HandAlphaId;

		[Token(Token = "0x600216B")]
		[Address(RVA = "0x1E635A8", Offset = "0x1E635A8", VA = "0x1E635A8")]
		private void Start()
		{
		}

		[Token(Token = "0x600216C")]
		[Address(RVA = "0x1E63620", Offset = "0x1E63620", VA = "0x1E63620")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x989894", Offset = "0x989894")]
		private IEnumerator toggleAlphaTarget()
		{
			return null;
		}

		[Token(Token = "0x600216D")]
		[Address(RVA = "0x1E636C0", Offset = "0x1E636C0", VA = "0x1E636C0")]
		private void Update()
		{
		}

		[Token(Token = "0x600216E")]
		[Address(RVA = "0x1E637E0", Offset = "0x1E637E0", VA = "0x1E637E0")]
		public MaterialAlphaLerper()
		{
		}
	}
	[Token(Token = "0x200060D")]
	public class CloudSaveTest : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000FF2")]
		private class SomeData
		{
			[Token(Token = "0x40025A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string hej;

			[Token(Token = "0x40025AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string mambo;

			[Token(Token = "0x40025AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int italiano;

			[Token(Token = "0x6003587")]
			[Address(RVA = "0xBC0A84", Offset = "0xBC0A84", VA = "0xBC0A84")]
			public SomeData()
			{
			}
		}

		[Token(Token = "0x2000FF3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97C050", Offset = "0x97C050")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x40025AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SomeData cloudData;

			[Token(Token = "0x6003588")]
			[Address(RVA = "0xBC054C", Offset = "0xBC054C", VA = "0xBC054C")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6003589")]
			[Address(RVA = "0xBC0554", Offset = "0xBC0554", VA = "0xBC0554")]
			internal void <Start>b__0(string fileDataRep, string error)
			{
			}
		}

		[Token(Token = "0x2000FF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97C060", Offset = "0x97C060")]
		private sealed class <Start>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40025AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40025AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40025AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private <>c__DisplayClass1_0 <>8__1;

			[Token(Token = "0x40025B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private SomeData <data>5__2;

			[Token(Token = "0x40025B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <cookie>5__3;

			[Token(Token = "0x1700043B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600358D")]
				[Address(RVA = "0xBC0D9C", Offset = "0xBC0D9C", VA = "0xBC0D9C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700043C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600358F")]
				[Address(RVA = "0xBC0E0C", Offset = "0xBC0E0C", VA = "0xBC0E0C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600358A")]
			[Address(RVA = "0xBC0518", Offset = "0xBC0518", VA = "0xBC0518")]
			[DebuggerHidden]
			public <Start>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x600358B")]
			[Address(RVA = "0xBC0668", Offset = "0xBC0668", VA = "0xBC0668", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600358C")]
			[Address(RVA = "0xBC066C", Offset = "0xBC066C", VA = "0xBC066C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600358E")]
			[Address(RVA = "0xBC0DA4", Offset = "0xBC0DA4", VA = "0xBC0DA4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x600216F")]
		[Address(RVA = "0xBC04B8", Offset = "0xBC04B8", VA = "0xBC04B8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9898F8", Offset = "0x9898F8")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6002170")]
		[Address(RVA = "0xBC0544", Offset = "0xBC0544", VA = "0xBC0544")]
		public CloudSaveTest()
		{
		}
	}
	[Token(Token = "0x200060E")]
	public class PlayerPrefsTest : MonoBehaviour
	{
		[Token(Token = "0x4001B50")]
		private const string filename = "secretsavefile.txt";

		[Token(Token = "0x4001B51")]
		private const string secretKey = "mysecretgarden";

		[Token(Token = "0x4001B52")]
		private const string secretValue = "Not so secret anymore";

		[Token(Token = "0x6002171")]
		[Address(RVA = "0x1E3AC24", Offset = "0x1E3AC24", VA = "0x1E3AC24")]
		private void Start()
		{
		}

		[Token(Token = "0x6002172")]
		[Address(RVA = "0x1E3AFD0", Offset = "0x1E3AFD0", VA = "0x1E3AFD0")]
		public PlayerPrefsTest()
		{
		}
	}
	[Token(Token = "0x200060F")]
	public class FontManager : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000FF5")]
		public class CultureFont
		{
			[Token(Token = "0x40025B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Localization.CultureType cultureType;

			[Token(Token = "0x40025B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public TMP_FontAsset fontAsset;

			[Token(Token = "0x6003590")]
			[Address(RVA = "0xBD2E5C", Offset = "0xBD2E5C", VA = "0xBD2E5C")]
			public CultureFont()
			{
			}
		}

		[Token(Token = "0x2000FF6")]
		public delegate void OnFontChangedDelegate(TMP_FontAsset newFont);

		[Token(Token = "0x4001B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static FontManager instance;

		[Token(Token = "0x4001B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TMP_FontAsset defaultFont;

		[Token(Token = "0x4001B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CultureFont[] cultureFonts;

		[Token(Token = "0x4001B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int m_numFonts;

		[Token(Token = "0x4001B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TMP_FontAsset m_currentFont;

		[Token(Token = "0x4001B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<OnFontChangedDelegate> m_callbacks;

		[Token(Token = "0x6002173")]
		[Address(RVA = "0xBD2388", Offset = "0xBD2388", VA = "0xBD2388")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002174")]
		[Address(RVA = "0xBD243C", Offset = "0xBD243C", VA = "0xBD243C")]
		public TMP_FontAsset GetCurrentFont()
		{
			return null;
		}

		[Token(Token = "0x6002175")]
		[Address(RVA = "0xBD2444", Offset = "0xBD2444", VA = "0xBD2444")]
		private TMP_FontAsset getFont(Localization.CultureType cultureType)
		{
			return null;
		}

		[Token(Token = "0x6002176")]
		[Address(RVA = "0xBD24F4", Offset = "0xBD24F4", VA = "0xBD24F4")]
		public void RegisterOnFontChangeCb(OnFontChangedDelegate cb)
		{
		}

		[Token(Token = "0x6002177")]
		[Address(RVA = "0xBD2568", Offset = "0xBD2568", VA = "0xBD2568")]
		public void UnregisterOnFontChangeCb(OnFontChangedDelegate cb)
		{
		}

		[Token(Token = "0x6002178")]
		[Address(RVA = "0xBD25DC", Offset = "0xBD25DC", VA = "0xBD25DC")]
		public void OnFontChanged()
		{
		}

		[Token(Token = "0x6002179")]
		[Address(RVA = "0xBD2E50", Offset = "0xBD2E50", VA = "0xBD2E50")]
		public FontManager()
		{
		}
	}
	[Token(Token = "0x2000610")]
	public class LocalizedUIReferenceHelper : MonoBehaviour
	{
		[Token(Token = "0x4001B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static LocalizedUIReferenceHelper instance;

		[Token(Token = "0x4001B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private UITextLocalizer[] m_allLocalizedUIText;

		[Token(Token = "0x600217B")]
		[Address(RVA = "0x1E60448", Offset = "0x1E60448", VA = "0x1E60448")]
		private void Awake()
		{
		}

		[Token(Token = "0x600217C")]
		[Address(RVA = "0x1E604B4", Offset = "0x1E604B4", VA = "0x1E604B4")]
		private void Start()
		{
		}

		[Token(Token = "0x600217D")]
		[Address(RVA = "0x1E6052C", Offset = "0x1E6052C", VA = "0x1E6052C")]
		public void UpdateTextLocalizers()
		{
		}

		[Token(Token = "0x600217E")]
		[Address(RVA = "0x1E6067C", Offset = "0x1E6067C", VA = "0x1E6067C")]
		public LocalizedUIReferenceHelper()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000611")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x978CC4", Offset = "0x978CC4")]
	public class SubtitleDbObject : ScriptableObject
	{
		[Token(Token = "0x4001B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SubtitleSequence[] sequences;

		[Token(Token = "0x6002180")]
		[Address(RVA = "0xF4059C", Offset = "0xF4059C", VA = "0xF4059C")]
		public SubtitleDbObject()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000612")]
	public class SubtitleSequence
	{
		[Token(Token = "0x4001B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string sequenceId;

		[Token(Token = "0x4001B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SubtitlePart[] parts;

		[Token(Token = "0x6002181")]
		[Address(RVA = "0xF41C88", Offset = "0xF41C88", VA = "0xF41C88")]
		public SubtitleSequence()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000613")]
	public class SubtitlePart
	{
		[Token(Token = "0x4001B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string text;

		[Token(Token = "0x4001B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float startTime;

		[Token(Token = "0x4001B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float endTime;

		[Token(Token = "0x6002182")]
		[Address(RVA = "0xF40DD4", Offset = "0xF40DD4", VA = "0xF40DD4")]
		public SubtitlePart()
		{
		}
	}
	[Token(Token = "0x2000614")]
	public interface ISubtitleDisplayer
	{
		[Token(Token = "0x6002183")]
		void hideText();

		[Token(Token = "0x6002184")]
		void displayText(string text);
	}
	[Token(Token = "0x2000615")]
	public abstract class SubtitleDisplayer : MonoBehaviour, ISubtitleDisplayer
	{
		[Token(Token = "0x6002185")]
		[Address(RVA = "0xF405A4", Offset = "0xF405A4", VA = "0xF405A4", Slot = "6")]
		public virtual void hideText()
		{
		}

		[Token(Token = "0x6002186")]
		[Address(RVA = "0xF405A8", Offset = "0xF405A8", VA = "0xF405A8", Slot = "7")]
		public virtual void displayText(string text)
		{
		}

		[Token(Token = "0x6002187")]
		[Address(RVA = "0xF405AC", Offset = "0xF405AC", VA = "0xF405AC")]
		protected SubtitleDisplayer()
		{
		}
	}
	[Token(Token = "0x2000616")]
	public class SubtitleManager : MonoBehaviour
	{
		[Token(Token = "0x4001B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SubtitleManager s_instance;

		[Token(Token = "0x4001B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SubtitleDbObject m_sequences;

		[Token(Token = "0x4001B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SubtitleDisplayer m_displayer;

		[Token(Token = "0x4001B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SubtitleSequence m_activeSequence;

		[Token(Token = "0x4001B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float m_sequenceStartTime;

		[Token(Token = "0x4001B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float m_partStartTime;

		[Token(Token = "0x4001B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int m_currentPart;

		[Token(Token = "0x4001B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool m_updateSequence;

		[Token(Token = "0x4001B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ISubtitleDisplayer m_displayerInterface;

		[Token(Token = "0x6002188")]
		[Address(RVA = "0xF405B4", Offset = "0xF405B4", VA = "0xF405B4")]
		public static void startSequence(string sequenceId)
		{
		}

		[Token(Token = "0x6002189")]
		[Address(RVA = "0xF408F0", Offset = "0xF408F0", VA = "0xF408F0")]
		private SubtitleSequence getSequenceById(string sequenceId)
		{
			return null;
		}

		[Token(Token = "0x600218A")]
		[Address(RVA = "0xF4078C", Offset = "0xF4078C", VA = "0xF4078C")]
		private void startSequenceWithName(string sequenceId)
		{
		}

		[Token(Token = "0x600218B")]
		[Address(RVA = "0xF406C8", Offset = "0xF406C8", VA = "0xF406C8")]
		private void stopCurrentSequence()
		{
		}

		[Token(Token = "0x600218C")]
		[Address(RVA = "0xF409F0", Offset = "0xF409F0", VA = "0xF409F0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600218D")]
		[Address(RVA = "0xF40A9C", Offset = "0xF40A9C", VA = "0xF40A9C")]
		private void Start()
		{
		}

		[Token(Token = "0x600218E")]
		[Address(RVA = "0xF40AA0", Offset = "0xF40AA0", VA = "0xF40AA0")]
		private void Update()
		{
		}

		[Token(Token = "0x600218F")]
		[Address(RVA = "0xF40DB0", Offset = "0xF40DB0", VA = "0xF40DB0")]
		private string toJSON()
		{
			return null;
		}

		[Token(Token = "0x6002190")]
		[Address(RVA = "0xF409E8", Offset = "0xF409E8", VA = "0xF409E8")]
		private float getTime()
		{
			return default(float);
		}

		[Token(Token = "0x6002191")]
		[Address(RVA = "0xF40DC0", Offset = "0xF40DC0", VA = "0xF40DC0")]
		public SubtitleManager()
		{
		}
	}
	[Token(Token = "0x2000617")]
	public class SubtitlePositionHandler : MonoBehaviour
	{
		[Token(Token = "0x4001B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationCurve animationCurve;

		[Token(Token = "0x4001B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SubtitlePositionGroup subtitlePositionGroup;

		[Token(Token = "0x4001B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float smoothTime;

		[Token(Token = "0x4001B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform introPlayerLocation;

		[Token(Token = "0x4001B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform worldRoot;

		[Token(Token = "0x4001B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool choosePositionAccordingToHeadDirection;

		[Token(Token = "0x4001B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool drawGizmos;

		[Token(Token = "0x4001B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Color gizmoColor;

		[Token(Token = "0x4001B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform m_playerHead;

		[Token(Token = "0x4001B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform m_transform;

		[Token(Token = "0x4001B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool m_initialized;

		[Token(Token = "0x4001B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 m_posVel;

		[Token(Token = "0x4001B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 m_scaleVel;

		[Token(Token = "0x4001B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int m_updateFrameRate;

		[Token(Token = "0x4001B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int m_frameCount;

		[Token(Token = "0x4001B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Transform m_currentPositionTransform;

		[Token(Token = "0x4001B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 m_targetPosition;

		[Token(Token = "0x4001B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Vector3 m_originalScale;

		[Token(Token = "0x4001B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float m_scaleSmoothStartTime;

		[Token(Token = "0x4001B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private bool m_isAtTargetPos;

		[Token(Token = "0x4001B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB5")]
		private bool m_isAtTargetScale;

		[Token(Token = "0x4001B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB6")]
		private bool m_isPlayingIntro;

		[Token(Token = "0x4001B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB7")]
		private bool m_introPosSet;

		[Token(Token = "0x4001B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Transform m_originalParent;

		[Token(Token = "0x6002193")]
		[Address(RVA = "0xF40DDC", Offset = "0xF40DDC", VA = "0xF40DDC")]
		public bool IsPlayingIntroPos()
		{
			return default(bool);
		}

		[Token(Token = "0x6002194")]
		[Address(RVA = "0xF40DE4", Offset = "0xF40DE4", VA = "0xF40DE4")]
		public void SetIntroPosForTransform(Transform t, bool flipOrientation = false)
		{
		}

		[Token(Token = "0x6002195")]
		[Address(RVA = "0xF41194", Offset = "0xF41194", VA = "0xF41194")]
		public void SetIsPlayingIntro(bool val)
		{
		}

		[Token(Token = "0x6002196")]
		[Address(RVA = "0xF412D8", Offset = "0xF412D8", VA = "0xF412D8")]
		private void setIntroPos()
		{
		}

		[Token(Token = "0x6002197")]
		[Address(RVA = "0xF41608", Offset = "0xF41608", VA = "0xF41608")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6002198")]
		[Address(RVA = "0xF41BA4", Offset = "0xF41BA4", VA = "0xF41BA4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002199")]
		[Address(RVA = "0xF419D8", Offset = "0xF419D8", VA = "0xF419D8")]
		private void tryFindNewPosition()
		{
		}

		[Token(Token = "0x600219A")]
		[Address(RVA = "0xF41BBC", Offset = "0xF41BBC", VA = "0xF41BBC")]
		public SubtitlePositionHandler()
		{
		}
	}
	[Token(Token = "0x2000618")]
	public class ExampleSubtitleDisplayer : SubtitleDisplayer
	{
		[Token(Token = "0x4001B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject m_textRoot;

		[Token(Token = "0x4001B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI m_text;

		[Token(Token = "0x600219B")]
		[Address(RVA = "0xBD0FBC", Offset = "0xBD0FBC", VA = "0xBD0FBC")]
		private void Start()
		{
		}

		[Token(Token = "0x600219C")]
		[Address(RVA = "0xBD104C", Offset = "0xBD104C", VA = "0xBD104C", Slot = "6")]
		public override void hideText()
		{
		}

		[Token(Token = "0x600219D")]
		[Address(RVA = "0xBD1080", Offset = "0xBD1080", VA = "0xBD1080", Slot = "7")]
		public override void displayText(string text)
		{
		}

		[Token(Token = "0x600219E")]
		[Address(RVA = "0xBD10E4", Offset = "0xBD10E4", VA = "0xBD10E4")]
		public ExampleSubtitleDisplayer()
		{
		}
	}
	[Token(Token = "0x2000619")]
	public class ExampleSubtitleDriver : MonoBehaviour
	{
		[Token(Token = "0x2000FF7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x97C070", Offset = "0x97C070")]
		private sealed class <showSubtitles>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40025B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40025B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x1700043D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003598")]
				[Address(RVA = "0xBD134C", Offset = "0xBD134C", VA = "0xBD134C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700043E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600359A")]
				[Address(RVA = "0xBD13BC", Offset = "0xBD13BC", VA = "0xBD13BC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003595")]
			[Address(RVA = "0xBD1178", Offset = "0xBD1178", VA = "0xBD1178")]
			[DebuggerHidden]
			public <showSubtitles>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x6003596")]
			[Address(RVA = "0xBD11AC", Offset = "0xBD11AC", VA = "0xBD11AC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003597")]
			[Address(RVA = "0xBD11B0", Offset = "0xBD11B0", VA = "0xBD11B0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003599")]
			[Address(RVA = "0xBD1354", Offset = "0xBD1354", VA = "0xBD1354", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x600219F")]
		[Address(RVA = "0xBD10EC", Offset = "0xBD10EC", VA = "0xBD10EC")]
		private void Start()
		{
		}

		[Token(Token = "0x60021A0")]
		[Address(RVA = "0xBD1118", Offset = "0xBD1118", VA = "0xBD1118")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x98995C", Offset = "0x98995C")]
		private IEnumerator showSubtitles()
		{
			return null;
		}

		[Token(Token = "0x60021A1")]
		[Address(RVA = "0xBD11A4", Offset = "0xBD11A4", VA = "0xBD11A4")]
		public ExampleSubtitleDriver()
		{
		}
	}
}
