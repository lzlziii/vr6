using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Threading;
using DarkTonic.CoreGameKit;
using Il2CppDummyDll;
using RootMotion.FinalIK;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Playables;
using UnityEngine.Rendering;
using UnityEngine.SceneManagement;
using UnityEngine.UI;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2057C", Offset = "0xE2057C")]
internal sealed class <>f__AnonymousType0<<customEventName>j__TPar, <x>j__TPar, <y>j__TPar, <z>j__TPar>
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xE21D44", Offset = "0xE21D44")]
	private readonly <customEventName>j__TPar <customEventName>i__Field;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xE21D58", Offset = "0xE21D58")]
	private readonly <x>j__TPar <x>i__Field;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xE21D6C", Offset = "0xE21D6C")]
	private readonly <y>j__TPar <y>i__Field;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xE21D80", Offset = "0xE21D80")]
	private readonly <z>j__TPar <z>i__Field;

	[Token(Token = "0x6000001")]
	[DebuggerHidden]
	public <>f__AnonymousType0(<customEventName>j__TPar customEventName, <x>j__TPar x, <y>j__TPar y, <z>j__TPar z)
	{
	}

	[Token(Token = "0x6000002")]
	[DebuggerHidden]
	public override bool Equals(object value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000003")]
	[DebuggerHidden]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x6000004")]
	[DebuggerHidden]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x2000003")]
public class KW_Enemy : MonoBehaviour
{
	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speedMultiplier;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool randomHoriz;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform trans;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float speed;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float horizSpeed;

	[Token(Token = "0x6000005")]
	[Address(RVA = "0xF0ACA4", Offset = "0xF0ACA4", VA = "0xF0ACA4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0xF0AD70", Offset = "0xF0AD70", VA = "0xF0AD70")]
	private void OnSpawned()
	{
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0xF0ACEC", Offset = "0xF0ACEC", VA = "0xF0ACEC")]
	private void AwakeOrSpawned()
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0xF0AD74", Offset = "0xF0AD74", VA = "0xF0AD74")]
	private void Update()
	{
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0xF0AE68", Offset = "0xF0AE68", VA = "0xF0AE68")]
	public KW_Enemy()
	{
	}
}
[Token(Token = "0x2000004")]
public class KW_Fighter1 : MonoBehaviour
{
	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isStrafeLeft;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform trans;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool strafeFinished;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float distToStrafe;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float startX;

	[Token(Token = "0x600000A")]
	[Address(RVA = "0xF0AE78", Offset = "0xF0AE78", VA = "0xF0AE78")]
	private void Awake()
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0xF0AEF4", Offset = "0xF0AEF4", VA = "0xF0AEF4")]
	private void OnSpawned()
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0xF0AE7C", Offset = "0xF0AE7C", VA = "0xF0AE7C")]
	private void AwakeOrSpawned()
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0xF0AEF8", Offset = "0xF0AEF8", VA = "0xF0AEF8")]
	private void Update()
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0xF0B020", Offset = "0xF0B020", VA = "0xF0B020")]
	public KW_Fighter1()
	{
	}
}
[Token(Token = "0x2000005")]
public class KW_Fighter2 : MonoBehaviour
{
	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform trans;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float zMovement;

	[Token(Token = "0x600000F")]
	[Address(RVA = "0xF0B028", Offset = "0xF0B028", VA = "0xF0B028")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0xF0B074", Offset = "0xF0B074", VA = "0xF0B074")]
	private void Update()
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0xF0B138", Offset = "0xF0B138", VA = "0xF0B138")]
	public KW_Fighter2()
	{
	}
}
[Token(Token = "0x2000006")]
public class KW_Instructions : MonoBehaviour
{
	[Token(Token = "0x6000012")]
	[Address(RVA = "0xF0B140", Offset = "0xF0B140", VA = "0xF0B140")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0xF0B4E4", Offset = "0xF0B4E4", VA = "0xF0B4E4")]
	public KW_Instructions()
	{
	}
}
[Token(Token = "0x2000007")]
public class KW_Instructions2 : MonoBehaviour
{
	[Token(Token = "0x6000014")]
	[Address(RVA = "0xF0B4EC", Offset = "0xF0B4EC", VA = "0xF0B4EC")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0xF0B594", Offset = "0xF0B594", VA = "0xF0B594")]
	public KW_Instructions2()
	{
	}
}
[Token(Token = "0x2000008")]
public class KW_Instructions3 : MonoBehaviour
{
	[Token(Token = "0x6000016")]
	[Address(RVA = "0xF0B59C", Offset = "0xF0B59C", VA = "0xF0B59C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0xF0B93C", Offset = "0xF0B93C", VA = "0xF0B93C")]
	public KW_Instructions3()
	{
	}
}
[Token(Token = "0x2000009")]
public class KW_Instructions4 : MonoBehaviour
{
	[Token(Token = "0x6000018")]
	[Address(RVA = "0xF0B944", Offset = "0xF0B944", VA = "0xF0B944")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0xF0B9EC", Offset = "0xF0B9EC", VA = "0xF0B9EC")]
	public KW_Instructions4()
	{
	}
}
[Token(Token = "0x200000A")]
public class KW_Instructions5 : MonoBehaviour
{
	[Token(Token = "0x600001A")]
	[Address(RVA = "0xF0B9F4", Offset = "0xF0B9F4", VA = "0xF0B9F4")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0xF0BC18", Offset = "0xF0BC18", VA = "0xF0BC18")]
	public KW_Instructions5()
	{
	}
}
[Token(Token = "0x200000B")]
public class KW_Instructions6 : MonoBehaviour
{
	[Token(Token = "0x600001C")]
	[Address(RVA = "0xF0BC20", Offset = "0xF0BC20", VA = "0xF0BC20")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0xF0BCC8", Offset = "0xF0BCC8", VA = "0xF0BCC8")]
	public KW_Instructions6()
	{
	}
}
[Token(Token = "0x200000C")]
public class KW_MenuInstructions : MonoBehaviour
{
	[Token(Token = "0x600001E")]
	[Address(RVA = "0xF0BCD0", Offset = "0xF0BCD0", VA = "0xF0BCD0")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0xF0BDF8", Offset = "0xF0BDF8", VA = "0xF0BDF8")]
	public KW_MenuInstructions()
	{
	}
}
[Token(Token = "0x200000D")]
public class KW_MotherShip : MonoBehaviour
{
	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform trans;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isStrafeLeft;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool strafeFinished;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float distToStrafe;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float startX;

	[Token(Token = "0x6000020")]
	[Address(RVA = "0xF0BE00", Offset = "0xF0BE00", VA = "0xF0BE00")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0xF0BE40", Offset = "0xF0BE40", VA = "0xF0BE40")]
	private void Update()
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0xF0BEB4", Offset = "0xF0BEB4", VA = "0xF0BEB4")]
	public KW_MotherShip()
	{
	}
}
[Token(Token = "0x200000E")]
public class KW_Player : MonoBehaviour
{
	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string customEventName;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture stableShip;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture leftShip;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture rightShip;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject ProjectilePrefab;

	[Token(Token = "0x400001C")]
	private const float MOVE_SPEED = 100f;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform trans;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Renderer rend;

	[Token(Token = "0x6000023")]
	[Address(RVA = "0xF0BEC4", Offset = "0xF0BEC4", VA = "0xF0BEC4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0xF0BF50", Offset = "0xF0BF50", VA = "0xF0BF50")]
	private void Update()
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0xF0C1F8", Offset = "0xF0C1F8", VA = "0xF0C1F8")]
	public KW_Player()
	{
	}
}
[Token(Token = "0x200000F")]
public class KW_Projectile : MonoBehaviour
{
	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform trans;

	[Token(Token = "0x6000026")]
	[Address(RVA = "0xF0C258", Offset = "0xF0C258", VA = "0xF0C258")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0xF0C298", Offset = "0xF0C298", VA = "0xF0C298")]
	private void Update()
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0xF0C2F8", Offset = "0xF0C2F8", VA = "0xF0C2F8")]
	public KW_Projectile()
	{
	}
}
[Token(Token = "0x2000010")]
public class KW_Shot3 : MonoBehaviour
{
	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform trans;

	[Token(Token = "0x6000029")]
	[Address(RVA = "0xF0C300", Offset = "0xF0C300", VA = "0xF0C300")]
	private void Awake()
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0xF0C340", Offset = "0xF0C340", VA = "0xF0C340")]
	private void Update()
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0xF0C408", Offset = "0xF0C408", VA = "0xF0C408")]
	public KW_Shot3()
	{
	}
}
[Token(Token = "0x2000011")]
public class KW_UFO : MonoBehaviour
{
	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speedMultiplier;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform trans;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float speed;

	[Token(Token = "0x600002C")]
	[Address(RVA = "0xF0C410", Offset = "0xF0C410", VA = "0xF0C410")]
	private void Awake()
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0xF0C470", Offset = "0xF0C470", VA = "0xF0C470")]
	private void Update()
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0xF0C4F8", Offset = "0xF0C4F8", VA = "0xF0C4F8")]
	public KW_UFO()
	{
	}
}
[Token(Token = "0x2000012")]
public class KW_UFOProjectile : MonoBehaviour
{
	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform trans;

	[Token(Token = "0x600002F")]
	[Address(RVA = "0xF0C508", Offset = "0xF0C508", VA = "0xF0C508")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0xF0C548", Offset = "0xF0C548", VA = "0xF0C548")]
	private void Update()
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0xF0C65C", Offset = "0xF0C65C", VA = "0xF0C65C")]
	public KW_UFOProjectile()
	{
	}
}
[Token(Token = "0x2000013")]
public class KillableListenerSubclass : KillableListener
{
	[Token(Token = "0x6000032")]
	[Address(RVA = "0xF0C664", Offset = "0xF0C664", VA = "0xF0C664", Slot = "5")]
	public override void Despawning(TriggeredSpawner.EventType eType)
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0xF0C6F0", Offset = "0xF0C6F0", VA = "0xF0C6F0", Slot = "7")]
	public override void TakingDamage(int pointsDamage, Killable enemyHitBy)
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0xF0C6F8", Offset = "0xF0C6F8", VA = "0xF0C6F8", Slot = "9")]
	public override void DamagePrefabSpawned(Transform damagePrefab)
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0xF0C700", Offset = "0xF0C700", VA = "0xF0C700", Slot = "10")]
	public override void DamagePrefabFailedToSpawn(Transform damagePrefab)
	{
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0xF0C708", Offset = "0xF0C708", VA = "0xF0C708", Slot = "12")]
	public override void DeathPrefabSpawned(Transform deathPrefab)
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0xF0C7AC", Offset = "0xF0C7AC", VA = "0xF0C7AC", Slot = "13")]
	public override void DeathPrefabFailedToSpawn(Transform deathPrefab)
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0xF0C7B4", Offset = "0xF0C7B4", VA = "0xF0C7B4", Slot = "15")]
	public override void ModifyingDeathWorldVariables(List<WorldVariableModifier> variableModifiers)
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0xF0C864", Offset = "0xF0C864", VA = "0xF0C864")]
	public KillableListenerSubclass()
	{
	}
}
[Token(Token = "0x2000014")]
public class KillableSubclass : Killable
{
	[Token(Token = "0x600003A")]
	[Address(RVA = "0xF0C86C", Offset = "0xF0C86C", VA = "0xF0C86C", Slot = "29")]
	public override void DestroyKillable(string scenarioName, bool skipDeathDelay = false)
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0xF0C8D0", Offset = "0xF0C8D0", VA = "0xF0C8D0")]
	public KillableSubclass()
	{
	}
}
[Token(Token = "0x2000015")]
public static class MECExtensionMethods2
{
	[Token(Token = "0x2000016")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2059C", Offset = "0xE2059C")]
	private sealed class <CancelWith>d__4 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4000027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IEnumerator<float> coroutine;

		[Token(Token = "0x4000028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject gameObject;

		[Token(Token = "0x17000001")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000040")]
			[Address(RVA = "0x16FCB2C", Offset = "0x16FCB2C", VA = "0x16FCB2C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000002")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000042")]
			[Address(RVA = "0x16FCB94", Offset = "0x16FCB94", VA = "0x16FCB94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600003D")]
		[Address(RVA = "0x16FC8DC", Offset = "0x16FC8DC", VA = "0x16FC8DC")]
		[DebuggerHidden]
		public <CancelWith>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x600003E")]
		[Address(RVA = "0x16FC908", Offset = "0x16FC908", VA = "0x16FC908", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600003F")]
		[Address(RVA = "0x16FC90C", Offset = "0x16FC90C", VA = "0x16FC90C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000041")]
		[Address(RVA = "0x16FCB34", Offset = "0x16FCB34", VA = "0x16FCB34", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0x16FC844", Offset = "0x16FC844", VA = "0x16FC844")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE2B148", Offset = "0xE2B148")]
	public static IEnumerator<float> CancelWith(this IEnumerator<float> coroutine, GameObject gameObject)
	{
		return null;
	}
}
[Serializable]
[Token(Token = "0x2000017")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE205AC", Offset = "0xE205AC")]
public class MouseOrbit : MonoBehaviour
{
	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float distance;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float xSpeed;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float ySpeed;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int yMinLimit;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int yMaxLimit;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float x;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float y;

	[Token(Token = "0x6000043")]
	[Address(RVA = "0x16FCBF8", Offset = "0x16FCBF8", VA = "0x16FCBF8", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0x16FCCD4", Offset = "0x16FCCD4", VA = "0x16FCCD4", Slot = "5")]
	public virtual void LateUpdate()
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0x16FCF38", Offset = "0x16FCF38", VA = "0x16FCF38")]
	public static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0x16FCFE8", Offset = "0x16FCFE8", VA = "0x16FCFE8")]
	public MouseOrbit()
	{
	}
}
namespace VLB
{
	[Token(Token = "0x2000018")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE205E4", Offset = "0xE205E4")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xE205E4", Offset = "0xE205E4")]
	public class BeamGeometry : MonoBehaviour
	{
		[Token(Token = "0x2000019")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE20654", Offset = "0xE20654")]
		private sealed class <CoUpdateFadeOut>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000039")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400003A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400003B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BeamGeometry <>4__this;

			[Token(Token = "0x1700000E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000077")]
				[Address(RVA = "0x1FE96B0", Offset = "0x1FE96B0", VA = "0x1FE96B0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700000F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000079")]
				[Address(RVA = "0x1FE9718", Offset = "0x1FE9718", VA = "0x1FE9718", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000074")]
			[Address(RVA = "0x1FE5530", Offset = "0x1FE5530", VA = "0x1FE5530")]
			[DebuggerHidden]
			public <CoUpdateFadeOut>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6000075")]
			[Address(RVA = "0x1FE9630", Offset = "0x1FE9630", VA = "0x1FE9630", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000076")]
			[Address(RVA = "0x1FE9634", Offset = "0x1FE9634", VA = "0x1FE9634", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000078")]
			[Address(RVA = "0x1FE96B8", Offset = "0x1FE96B8", VA = "0x1FE96B8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private VolumetricLightBeam m_Master;

		[Token(Token = "0x4000032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Matrix4x4 m_ColorGradientMatrix;

		[Token(Token = "0x4000033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private MeshType m_CurrentMeshType;

		[Token(Token = "0x4000034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Material m_CustomMaterial;

		[Token(Token = "0x4000035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE21D94", Offset = "0xE21D94")]
		private MeshRenderer <meshRenderer>k__BackingField;

		[Token(Token = "0x4000036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE21DA4", Offset = "0xE21DA4")]
		private MeshFilter <meshFilter>k__BackingField;

		[Token(Token = "0x4000037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE21DB4", Offset = "0xE21DB4")]
		private Mesh <coneMesh>k__BackingField;

		[Token(Token = "0x4000038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private DynamicOcclusion _dynamicOcclusion;

		[Token(Token = "0x17000003")]
		public MeshRenderer meshRenderer
		{
			[Token(Token = "0x6000047")]
			[Address(RVA = "0x1FE5250", Offset = "0x1FE5250", VA = "0x1FE5250")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2B20C", Offset = "0xE2B20C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000048")]
			[Address(RVA = "0x1FE5258", Offset = "0x1FE5258", VA = "0x1FE5258")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2B21C", Offset = "0xE2B21C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000004")]
		public MeshFilter meshFilter
		{
			[Token(Token = "0x6000049")]
			[Address(RVA = "0x1FE5260", Offset = "0x1FE5260", VA = "0x1FE5260")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2B22C", Offset = "0xE2B22C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600004A")]
			[Address(RVA = "0x1FE5268", Offset = "0x1FE5268", VA = "0x1FE5268")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2B23C", Offset = "0xE2B23C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000005")]
		public Mesh coneMesh
		{
			[Token(Token = "0x600004B")]
			[Address(RVA = "0x1FE5270", Offset = "0x1FE5270", VA = "0x1FE5270")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2B24C", Offset = "0xE2B24C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600004C")]
			[Address(RVA = "0x1FE5278", Offset = "0x1FE5278", VA = "0x1FE5278")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2B25C", Offset = "0xE2B25C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000006")]
		public bool visible
		{
			[Token(Token = "0x600004D")]
			[Address(RVA = "0x1FE5280", Offset = "0x1FE5280", VA = "0x1FE5280")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600004E")]
			[Address(RVA = "0x1FE529C", Offset = "0x1FE529C", VA = "0x1FE529C")]
			set
			{
			}
		}

		[Token(Token = "0x17000007")]
		public int sortingLayerID
		{
			[Token(Token = "0x600004F")]
			[Address(RVA = "0x1FE52BC", Offset = "0x1FE52BC", VA = "0x1FE52BC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000050")]
			[Address(RVA = "0x1FE52D8", Offset = "0x1FE52D8", VA = "0x1FE52D8")]
			set
			{
			}
		}

		[Token(Token = "0x17000008")]
		public int sortingOrder
		{
			[Token(Token = "0x6000051")]
			[Address(RVA = "0x1FE52F4", Offset = "0x1FE52F4", VA = "0x1FE52F4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000052")]
			[Address(RVA = "0x1FE5310", Offset = "0x1FE5310", VA = "0x1FE5310")]
			set
			{
			}
		}

		[Token(Token = "0x17000009")]
		public static bool isCustomRenderPipelineSupported
		{
			[Token(Token = "0x600005C")]
			[Address(RVA = "0x1FE5E30", Offset = "0x1FE5E30", VA = "0x1FE5E30")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700000A")]
		private bool isNoiseEnabled
		{
			[Token(Token = "0x6000061")]
			[Address(RVA = "0x1FE7DDC", Offset = "0x1FE7DDC", VA = "0x1FE7DDC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700000B")]
		private bool isClippingPlaneEnabled
		{
			[Token(Token = "0x6000062")]
			[Address(RVA = "0x1FE7FCC", Offset = "0x1FE7FCC", VA = "0x1FE7FCC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700000C")]
		private bool isDepthBlendEnabled
		{
			[Token(Token = "0x6000063")]
			[Address(RVA = "0x1FE809C", Offset = "0x1FE809C", VA = "0x1FE809C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700000D")]
		public DynamicOcclusion dynamicOcclusion
		{
			[Token(Token = "0x600006D")]
			[Address(RVA = "0x1FE8F44", Offset = "0x1FE8F44", VA = "0x1FE8F44")]
			get
			{
				return null;
			}
			[Token(Token = "0x600006E")]
			[Address(RVA = "0x1FE8F4C", Offset = "0x1FE8F4C", VA = "0x1FE8F4C")]
			set
			{
			}
		}

		[Token(Token = "0x6000053")]
		[Address(RVA = "0x1FE532C", Offset = "0x1FE532C", VA = "0x1FE532C")]
		private float ComputeFadeOutFactor(Transform camTransform)
		{
			return default(float);
		}

		[Token(Token = "0x6000054")]
		[Address(RVA = "0x1FE54B4", Offset = "0x1FE54B4", VA = "0x1FE54B4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE2B26C", Offset = "0xE2B26C")]
		private IEnumerator CoUpdateFadeOut()
		{
			return null;
		}

		[Token(Token = "0x6000055")]
		[Address(RVA = "0x1FE555C", Offset = "0x1FE555C", VA = "0x1FE555C")]
		private void ComputeFadeOutFactor()
		{
		}

		[Token(Token = "0x6000056")]
		[Address(RVA = "0x1FE5748", Offset = "0x1FE5748", VA = "0x1FE5748")]
		private void SetFadeOutFactorProp(float value)
		{
		}

		[Token(Token = "0x6000057")]
		[Address(RVA = "0x1FE5A54", Offset = "0x1FE5A54", VA = "0x1FE5A54")]
		private void RestartFadeOutCoroutine()
		{
		}

		[Token(Token = "0x6000058")]
		[Address(RVA = "0x1FE5B0C", Offset = "0x1FE5B0C", VA = "0x1FE5B0C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000059")]
		[Address(RVA = "0x1FE5BCC", Offset = "0x1FE5BCC", VA = "0x1FE5BCC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600005A")]
		[Address(RVA = "0x1FE5C8C", Offset = "0x1FE5C8C", VA = "0x1FE5C8C")]
		private static bool IsUsingCustomRenderPipeline()
		{
			return default(bool);
		}

		[Token(Token = "0x600005B")]
		[Address(RVA = "0x1FE5D80", Offset = "0x1FE5D80", VA = "0x1FE5D80")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600005D")]
		[Address(RVA = "0x1FE5E38", Offset = "0x1FE5E38", VA = "0x1FE5E38")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600005E")]
		[Address(RVA = "0x1FE5EF0", Offset = "0x1FE5EF0", VA = "0x1FE5EF0")]
		public void Initialize(VolumetricLightBeam master)
		{
		}

		[Token(Token = "0x600005F")]
		[Address(RVA = "0x1FE66C8", Offset = "0x1FE66C8", VA = "0x1FE66C8")]
		public void RegenerateMesh()
		{
		}

		[Token(Token = "0x6000060")]
		[Address(RVA = "0x1FE7C64", Offset = "0x1FE7C64", VA = "0x1FE7C64")]
		private void ComputeLocalMatrix()
		{
		}

		[Token(Token = "0x6000064")]
		[Address(RVA = "0x1FE6404", Offset = "0x1FE6404", VA = "0x1FE6404")]
		private bool ApplyMaterial()
		{
			return default(bool);
		}

		[Token(Token = "0x6000065")]
		[Address(RVA = "0x1FE589C", Offset = "0x1FE589C", VA = "0x1FE589C")]
		private void SetMaterialProp(int nameID, float value)
		{
		}

		[Token(Token = "0x6000066")]
		[Address(RVA = "0x1FE8654", Offset = "0x1FE8654", VA = "0x1FE8654")]
		private void SetMaterialProp(int nameID, Vector4 value)
		{
		}

		[Token(Token = "0x6000067")]
		[Address(RVA = "0x1FE8778", Offset = "0x1FE8778", VA = "0x1FE8778")]
		private void SetMaterialProp(int nameID, Color value)
		{
		}

		[Token(Token = "0x6000068")]
		[Address(RVA = "0x1FE889C", Offset = "0x1FE889C", VA = "0x1FE889C")]
		private void SetMaterialProp(int nameID, Matrix4x4 value)
		{
		}

		[Token(Token = "0x6000069")]
		[Address(RVA = "0x1FE57D8", Offset = "0x1FE57D8", VA = "0x1FE57D8")]
		private void MaterialChangeStart()
		{
		}

		[Token(Token = "0x600006A")]
		[Address(RVA = "0x1FE5990", Offset = "0x1FE5990", VA = "0x1FE5990")]
		private void MaterialChangeStop()
		{
		}

		[Token(Token = "0x600006B")]
		[Address(RVA = "0x1FE89C8", Offset = "0x1FE89C8", VA = "0x1FE89C8")]
		private void SendMaterialClippingPlaneProp()
		{
		}

		[Token(Token = "0x600006C")]
		[Address(RVA = "0x1FE7544", Offset = "0x1FE7544", VA = "0x1FE7544")]
		public void UpdateMaterialAndBounds()
		{
		}

		[Token(Token = "0x600006F")]
		[Address(RVA = "0x1FE907C", Offset = "0x1FE907C", VA = "0x1FE907C")]
		private void OnBeginCameraRendering(ScriptableRenderContext context, Camera cam)
		{
		}

		[Token(Token = "0x6000070")]
		[Address(RVA = "0x1FE9404", Offset = "0x1FE9404", VA = "0x1FE9404")]
		private void OnWillRenderObject()
		{
		}

		[Token(Token = "0x6000071")]
		[Address(RVA = "0x1FE94A4", Offset = "0x1FE94A4", VA = "0x1FE94A4")]
		private static bool IsEditorCamera(Camera cam)
		{
			return default(bool);
		}

		[Token(Token = "0x6000072")]
		[Address(RVA = "0x1FE9084", Offset = "0x1FE9084", VA = "0x1FE9084")]
		private void UpdateCameraRelatedProperties(Camera cam)
		{
		}

		[Token(Token = "0x6000073")]
		[Address(RVA = "0x1FE9628", Offset = "0x1FE9628", VA = "0x1FE9628")]
		public BeamGeometry()
		{
		}
	}
	[Token(Token = "0x200001A")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xE20664", Offset = "0xE20664")]
	public class Config : ScriptableObject
	{
		[Token(Token = "0x400003C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool geometryOverrideLayer;

		[Token(Token = "0x400003D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int geometryLayerID;

		[Token(Token = "0x400003E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string geometryTag;

		[Token(Token = "0x400003F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int geometryRenderQueue;

		[Token(Token = "0x4000040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public RenderPipeline renderPipeline;

		[Token(Token = "0x4000041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE21DC4", Offset = "0xE21DC4")]
		public bool forceSinglePass;

		[Token(Token = "0x4000042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public RenderingMode renderingMode;

		[Token(Token = "0x4000043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HighlightNull]
		[SerializeField]
		private Shader beamShader1Pass;

		[Token(Token = "0x4000044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[HighlightNull]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE21E34", Offset = "0xE21E34")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE21E34", Offset = "0xE21E34")]
		private Shader beamShader2Pass;

		[Token(Token = "0x4000045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int sharedMeshSides;

		[Token(Token = "0x4000046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int sharedMeshSegments;

		[Token(Token = "0x4000047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE21EB4", Offset = "0xE21EB4")]
		public float globalNoiseScale;

		[Token(Token = "0x4000048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector3 globalNoiseVelocity;

		[Token(Token = "0x4000049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string fadeOutCameraTag;

		[Token(Token = "0x400004A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HighlightNull]
		public TextAsset noise3DData;

		[Token(Token = "0x400004B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public int noise3DSize;

		[Token(Token = "0x400004C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HighlightNull]
		public ParticleSystem dustParticlesPrefab;

		[Token(Token = "0x400004D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private int pluginVersion;

		[Token(Token = "0x400004E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Transform m_CachedFadeOutCamera;

		[Token(Token = "0x400004F")]
		private const string kAssetName = "Config";

		[Token(Token = "0x4000050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Config m_Instance;

		[Token(Token = "0x17000010")]
		public RenderingMode actualRenderingMode
		{
			[Token(Token = "0x600007A")]
			[Address(RVA = "0x1FE6268", Offset = "0x1FE6268", VA = "0x1FE6268")]
			get
			{
				return default(RenderingMode);
			}
		}

		[Token(Token = "0x17000011")]
		public bool useSinglePassShader
		{
			[Token(Token = "0x600007B")]
			[Address(RVA = "0x1FE69A8", Offset = "0x1FE69A8", VA = "0x1FE69A8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000012")]
		public Shader beamShader
		{
			[Token(Token = "0x600007C")]
			[Address(RVA = "0x1FE9720", Offset = "0x1FE9720", VA = "0x1FE9720")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000013")]
		public Vector4 globalNoiseParam
		{
			[Token(Token = "0x600007D")]
			[Address(RVA = "0x1FE973C", Offset = "0x1FE973C", VA = "0x1FE973C")]
			get
			{
				return default(Vector4);
			}
		}

		[Token(Token = "0x17000014")]
		public Transform fadeOutCameraTransform
		{
			[Token(Token = "0x600007E")]
			[Address(RVA = "0x1FE56C4", Offset = "0x1FE56C4", VA = "0x1FE56C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000015")]
		public static Config Instance
		{
			[Token(Token = "0x6000086")]
			[Address(RVA = "0x1FE5664", Offset = "0x1FE5664", VA = "0x1FE5664")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600007F")]
		[Address(RVA = "0x1FE9774", Offset = "0x1FE9774", VA = "0x1FE9774")]
		public void ForceUpdateFadeOutCamera()
		{
		}

		[Token(Token = "0x6000080")]
		[Address(RVA = "0x1FE9824", Offset = "0x1FE9824", VA = "0x1FE9824")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xE2B320", Offset = "0xE2B320")]
		private static void OnStartup()
		{
		}

		[Token(Token = "0x6000081")]
		[Address(RVA = "0x1FE98A4", Offset = "0x1FE98A4", VA = "0x1FE98A4")]
		public static void OnRenderPipelineChanged(RenderPipeline pipeline)
		{
		}

		[Token(Token = "0x6000082")]
		[Address(RVA = "0x1FE9920", Offset = "0x1FE9920", VA = "0x1FE9920")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000083")]
		[Address(RVA = "0x1FE9B18", Offset = "0x1FE9B18", VA = "0x1FE9B18")]
		public ParticleSystem NewVolumetricDustParticles()
		{
			return null;
		}

		[Token(Token = "0x6000084")]
		[Address(RVA = "0x1FE9CAC", Offset = "0x1FE9CAC", VA = "0x1FE9CAC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000085")]
		[Address(RVA = "0x1FE9CCC", Offset = "0x1FE9CCC", VA = "0x1FE9CCC")]
		private void HandleBackwardCompatibility(int serializedVersion, int newVersion)
		{
		}

		[Token(Token = "0x6000087")]
		[Address(RVA = "0x1FE9CFC", Offset = "0x1FE9CFC", VA = "0x1FE9CFC")]
		private static Config GetInstance(bool assertIfNotFound)
		{
			return null;
		}

		[Token(Token = "0x6000088")]
		[Address(RVA = "0x1FE9E88", Offset = "0x1FE9E88", VA = "0x1FE9E88")]
		public Config()
		{
		}
	}
	[Token(Token = "0x200001B")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xE2069C", Offset = "0xE2069C")]
	public class ConfigOverride : Config
	{
		[Token(Token = "0x4000051")]
		public const string kAssetName = "VLBConfigOverride";

		[Token(Token = "0x600008A")]
		[Address(RVA = "0x1FE9F74", Offset = "0x1FE9F74", VA = "0x1FE9F74")]
		public ConfigOverride()
		{
		}
	}
	[Token(Token = "0x200001C")]
	public static class Consts
	{
		[Token(Token = "0x4000052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly bool ProceduralObjectsVisibleInEditor;

		[Token(Token = "0x4000053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static readonly Color FlatColor;

		[Token(Token = "0x4000054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static readonly Vector3 NoiseVelocityDefault;

		[Token(Token = "0x4000055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly LayerMask DynOcclusionLayerMaskDefault;

		[Token(Token = "0x17000016")]
		public static HideFlags ProceduralObjectsHideFlags
		{
			[Token(Token = "0x600008B")]
			[Address(RVA = "0x1FE61F4", Offset = "0x1FE61F4", VA = "0x1FE61F4")]
			get
			{
				return default(HideFlags);
			}
		}
	}
	[Token(Token = "0x200001D")]
	[DisallowMultipleComponent]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xE206D4", Offset = "0xE206D4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE206D4", Offset = "0xE206D4")]
	public class DynamicOcclusion : MonoBehaviour
	{
		[Token(Token = "0x200001E")]
		public class HitResult
		{
			[Token(Token = "0x4000066")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 point;

			[Token(Token = "0x4000067")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 normal;

			[Token(Token = "0x4000068")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float distance;

			[Token(Token = "0x4000069")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Collider2D collider2D;

			[Token(Token = "0x400006A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Collider collider3D;

			[Token(Token = "0x1700001B")]
			public bool hasCollider
			{
				[Token(Token = "0x60000A8")]
				[Address(RVA = "0x1FEB394", Offset = "0x1FEB394", VA = "0x1FEB394")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x60000A5")]
			[Address(RVA = "0x1FEAE54", Offset = "0x1FEAE54", VA = "0x1FEAE54")]
			public HitResult(RaycastHit hit3D)
			{
			}

			[Token(Token = "0x60000A6")]
			[Address(RVA = "0x1FEAF88", Offset = "0x1FEAF88", VA = "0x1FEAF88")]
			public HitResult(RaycastHit2D hit2D)
			{
			}

			[Token(Token = "0x60000A7")]
			[Address(RVA = "0x1FEAEDC", Offset = "0x1FEAEDC", VA = "0x1FEAEDC")]
			public HitResult()
			{
			}
		}

		[Token(Token = "0x200001F")]
		private enum Direction
		{
			[Token(Token = "0x400006C")]
			Up,
			[Token(Token = "0x400006D")]
			Right,
			[Token(Token = "0x400006E")]
			Down,
			[Token(Token = "0x400006F")]
			Left
		}

		[Token(Token = "0x4000056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public OccluderDimensions dimensions;

		[Token(Token = "0x4000057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public LayerMask layerMask;

		[Token(Token = "0x4000058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool considerTriggers;

		[Token(Token = "0x4000059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float minOccluderArea;

		[Token(Token = "0x400005A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int waitFrameCount;

		[Token(Token = "0x400005B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float minSurfaceRatio;

		[Token(Token = "0x400005C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float maxSurfaceDot;

		[Token(Token = "0x400005D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public PlaneAlignment planeAlignment;

		[Token(Token = "0x400005E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float planeOffset;

		[Token(Token = "0x400005F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float fadeDistanceToPlane;

		[Token(Token = "0x4000060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE21F00", Offset = "0xE21F00")]
		private HitResult <currentHit>k__BackingField;

		[Token(Token = "0x4000061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private VolumetricLightBeam m_Master;

		[Token(Token = "0x4000062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_FrameCountToWait;

		[Token(Token = "0x4000063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float m_RangeMultiplier;

		[Token(Token = "0x4000064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE21F10", Offset = "0xE21F10")]
		private Plane <planeEquationWS>k__BackingField;

		[Token(Token = "0x4000065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private uint m_PrevNonSubHitDirectionId;

		[Token(Token = "0x17000017")]
		public HitResult currentHit
		{
			[Token(Token = "0x600008D")]
			[Address(RVA = "0x1FEA0A8", Offset = "0x1FEA0A8", VA = "0x1FEA0A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2B330", Offset = "0xE2B330")]
			get
			{
				return null;
			}
			[Token(Token = "0x600008E")]
			[Address(RVA = "0x1FEA0B0", Offset = "0x1FEA0B0", VA = "0x1FEA0B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2B340", Offset = "0xE2B340")]
			private set
			{
			}
		}

		[Token(Token = "0x17000018")]
		public Plane planeEquationWS
		{
			[Token(Token = "0x600008F")]
			[Address(RVA = "0x1FEA0B8", Offset = "0x1FEA0B8", VA = "0x1FEA0B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2B350", Offset = "0xE2B350")]
			get
			{
				return default(Plane);
			}
			[Token(Token = "0x6000090")]
			[Address(RVA = "0x1FEA0C4", Offset = "0x1FEA0C4", VA = "0x1FEA0C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2B360", Offset = "0xE2B360")]
			private set
			{
			}
		}

		[Token(Token = "0x17000019")]
		private QueryTriggerInteraction queryTriggerInteraction
		{
			[Token(Token = "0x6000097")]
			[Address(RVA = "0x1FEA844", Offset = "0x1FEA844", VA = "0x1FEA844")]
			get
			{
				return default(QueryTriggerInteraction);
			}
		}

		[Token(Token = "0x1700001A")]
		private float raycastMaxDistance
		{
			[Token(Token = "0x6000098")]
			[Address(RVA = "0x1FEA858", Offset = "0x1FEA858", VA = "0x1FEA858")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000091")]
		[Address(RVA = "0x1FEA0D0", Offset = "0x1FEA0D0", VA = "0x1FEA0D0")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000092")]
		[Address(RVA = "0x1FEA17C", Offset = "0x1FEA17C", VA = "0x1FEA17C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000093")]
		[Address(RVA = "0x1FEA1EC", Offset = "0x1FEA1EC", VA = "0x1FEA1EC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000094")]
		[Address(RVA = "0x1FEA244", Offset = "0x1FEA244", VA = "0x1FEA244")]
		private void Start()
		{
		}

		[Token(Token = "0x6000095")]
		[Address(RVA = "0x1FEA324", Offset = "0x1FEA324", VA = "0x1FEA324")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000096")]
		[Address(RVA = "0x1FEA748", Offset = "0x1FEA748", VA = "0x1FEA748")]
		private Vector3 GetRandomVectorAround(Vector3 direction, float angleDiff)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000099")]
		[Address(RVA = "0x1FEA8A0", Offset = "0x1FEA8A0", VA = "0x1FEA8A0")]
		private HitResult GetBestHit(Vector3 rayPos, Vector3 rayDir)
		{
			return null;
		}

		[Token(Token = "0x600009A")]
		[Address(RVA = "0x1FEA8B4", Offset = "0x1FEA8B4", VA = "0x1FEA8B4")]
		private HitResult GetBestHit3D(Vector3 rayPos, Vector3 rayDir)
		{
			return null;
		}

		[Token(Token = "0x600009B")]
		[Address(RVA = "0x1FEAAE4", Offset = "0x1FEAAE4", VA = "0x1FEAAE4")]
		private HitResult GetBestHit2D(Vector3 rayPos, Vector3 rayDir)
		{
			return null;
		}

		[Token(Token = "0x600009C")]
		[Address(RVA = "0x1FEB088", Offset = "0x1FEB088", VA = "0x1FEB088")]
		private Vector3 GetDirection(uint dirInt)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600009D")]
		[Address(RVA = "0x1FEB288", Offset = "0x1FEB288", VA = "0x1FEB288")]
		private bool IsHitValid(HitResult hit)
		{
			return default(bool);
		}

		[Token(Token = "0x600009E")]
		[Address(RVA = "0x1FEA364", Offset = "0x1FEA364", VA = "0x1FEA364")]
		private void ProcessRaycasts()
		{
		}

		[Token(Token = "0x600009F")]
		[Address(RVA = "0x1FEB448", Offset = "0x1FEB448", VA = "0x1FEB448")]
		private void SetHit(HitResult hit)
		{
		}

		[Token(Token = "0x60000A0")]
		[Address(RVA = "0x1FEA218", Offset = "0x1FEA218", VA = "0x1FEA218")]
		private void SetHitNull()
		{
		}

		[Token(Token = "0x60000A1")]
		[Address(RVA = "0x1FEB564", Offset = "0x1FEB564", VA = "0x1FEB564")]
		private void SetClippingPlane(Plane planeWS)
		{
		}

		[Token(Token = "0x60000A2")]
		[Address(RVA = "0x1FEB67C", Offset = "0x1FEB67C", VA = "0x1FEB67C")]
		private void SetClippingPlaneOff()
		{
		}

		[Token(Token = "0x60000A3")]
		[Address(RVA = "0x1FEB7C0", Offset = "0x1FEB7C0", VA = "0x1FEB7C0")]
		private void SetPlaneWS(Plane planeWS)
		{
		}

		[Token(Token = "0x60000A4")]
		[Address(RVA = "0x1FEB86C", Offset = "0x1FEB86C", VA = "0x1FEB86C")]
		public DynamicOcclusion()
		{
		}
	}
	[Token(Token = "0x2000020")]
	public enum ColorMode
	{
		[Token(Token = "0x4000071")]
		Flat,
		[Token(Token = "0x4000072")]
		Gradient
	}
	[Token(Token = "0x2000021")]
	public enum AttenuationEquation
	{
		[Token(Token = "0x4000074")]
		Linear,
		[Token(Token = "0x4000075")]
		Quadratic,
		[Token(Token = "0x4000076")]
		Blend
	}
	[Token(Token = "0x2000022")]
	public enum BlendingMode
	{
		[Token(Token = "0x4000078")]
		Additive,
		[Token(Token = "0x4000079")]
		SoftAdditive,
		[Token(Token = "0x400007A")]
		TraditionalTransparency
	}
	[Token(Token = "0x2000023")]
	public enum NoiseMode
	{
		[Token(Token = "0x400007C")]
		Disabled,
		[Token(Token = "0x400007D")]
		WorldSpace,
		[Token(Token = "0x400007E")]
		LocalSpace
	}
	[Token(Token = "0x2000024")]
	public enum MeshType
	{
		[Token(Token = "0x4000080")]
		Shared,
		[Token(Token = "0x4000081")]
		Custom
	}
	[Token(Token = "0x2000025")]
	public enum RenderPipeline
	{
		[Token(Token = "0x4000083")]
		BuiltIn,
		[Token(Token = "0x4000084")]
		SRP_4_0_0_or_higher
	}
	[Token(Token = "0x2000026")]
	public enum RenderingMode
	{
		[Token(Token = "0x4000086")]
		MultiPass,
		[Token(Token = "0x4000087")]
		SinglePass,
		[Token(Token = "0x4000088")]
		GPUInstancing
	}
	[Token(Token = "0x2000027")]
	public enum OccluderDimensions
	{
		[Token(Token = "0x400008A")]
		Occluders3D,
		[Token(Token = "0x400008B")]
		Occluders2D
	}
	[Token(Token = "0x2000028")]
	public enum PlaneAlignment
	{
		[Token(Token = "0x400008D")]
		Surface,
		[Token(Token = "0x400008E")]
		Beam
	}
	[Token(Token = "0x2000029")]
	public static class GlobalMesh
	{
		[Token(Token = "0x400008F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Mesh ms_Mesh;

		[Token(Token = "0x4000090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static bool ms_DoubleSided;

		[Token(Token = "0x60000A9")]
		[Address(RVA = "0x1FE7394", Offset = "0x1FE7394", VA = "0x1FE7394")]
		public static Mesh Get()
		{
			return null;
		}

		[Token(Token = "0x60000AA")]
		[Address(RVA = "0x1FEB90C", Offset = "0x1FEB90C", VA = "0x1FEB90C")]
		public static void Destroy()
		{
		}
	}
	[Token(Token = "0x200002A")]
	public static class GpuInstancing
	{
		[Token(Token = "0x1700001C")]
		public static bool forceEnableDepthBlend
		{
			[Token(Token = "0x60000AB")]
			[Address(RVA = "0x1FE80E0", Offset = "0x1FE80E0", VA = "0x1FE80E0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60000AC")]
		[Address(RVA = "0x1FEB9E8", Offset = "0x1FEB9E8", VA = "0x1FEB9E8")]
		public static void SetMaterialProperties(Material material, bool enableInstancing)
		{
		}
	}
	[Token(Token = "0x200002B")]
	public sealed class HighlightNullAttribute : PropertyAttribute
	{
		[Token(Token = "0x60000AD")]
		[Address(RVA = "0x1FEBA64", Offset = "0x1FEBA64", VA = "0x1FEBA64")]
		public HighlightNullAttribute()
		{
		}
	}
	[Token(Token = "0x200002C")]
	public static class MaterialManager
	{
		[Token(Token = "0x200002D")]
		public enum BlendingMode
		{
			[Token(Token = "0x4000098")]
			Additive,
			[Token(Token = "0x4000099")]
			SoftAdditive,
			[Token(Token = "0x400009A")]
			TraditionalTransparency,
			[Token(Token = "0x400009B")]
			Count
		}

		[Token(Token = "0x200002E")]
		public enum Noise3D
		{
			[Token(Token = "0x400009D")]
			Off,
			[Token(Token = "0x400009E")]
			On,
			[Token(Token = "0x400009F")]
			Count
		}

		[Token(Token = "0x200002F")]
		public enum DepthBlend
		{
			[Token(Token = "0x40000A1")]
			Off,
			[Token(Token = "0x40000A2")]
			On,
			[Token(Token = "0x40000A3")]
			Count
		}

		[Token(Token = "0x2000030")]
		public enum ColorGradient
		{
			[Token(Token = "0x40000A5")]
			Off,
			[Token(Token = "0x40000A6")]
			MatrixLow,
			[Token(Token = "0x40000A7")]
			MatrixHigh,
			[Token(Token = "0x40000A8")]
			Count
		}

		[Token(Token = "0x2000031")]
		public enum ClippingPlane
		{
			[Token(Token = "0x40000AA")]
			Off,
			[Token(Token = "0x40000AB")]
			On,
			[Token(Token = "0x40000AC")]
			Count
		}

		[Token(Token = "0x2000032")]
		public class StaticProperties
		{
			[Token(Token = "0x40000AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public BlendingMode blendingMode;

			[Token(Token = "0x40000AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Noise3D noise3D;

			[Token(Token = "0x40000AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public DepthBlend depthBlend;

			[Token(Token = "0x40000B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public ColorGradient colorGradient;

			[Token(Token = "0x40000B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ClippingPlane clippingPlane;

			[Token(Token = "0x1700001D")]
			public int materialID
			{
				[Token(Token = "0x60000B1")]
				[Address(RVA = "0x1FEBB00", Offset = "0x1FEBB00", VA = "0x1FEBB00")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x60000B2")]
			[Address(RVA = "0x1FE81E0", Offset = "0x1FE81E0", VA = "0x1FE81E0")]
			public void ApplyToMaterial(Material mat)
			{
			}

			[Token(Token = "0x60000B3")]
			[Address(RVA = "0x1FE81D8", Offset = "0x1FE81D8", VA = "0x1FE81D8")]
			public StaticProperties()
			{
			}
		}

		[Token(Token = "0x2000033")]
		private class MaterialsGroup
		{
			[Token(Token = "0x40000B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Material[] materials;

			[Token(Token = "0x60000B4")]
			[Address(RVA = "0x1FEBA6C", Offset = "0x1FEBA6C", VA = "0x1FEBA6C")]
			public MaterialsGroup()
			{
			}
		}

		[Token(Token = "0x4000091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static MaterialPropertyBlock materialPropertyBlock;

		[Token(Token = "0x4000092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly BlendMode[] BlendingMode_SrcFactor;

		[Token(Token = "0x4000093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly BlendMode[] BlendingMode_DstFactor;

		[Token(Token = "0x4000094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly bool[] BlendingMode_AlphaAsBlack;

		[Token(Token = "0x4000095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static int kStaticPropertiesCount;

		[Token(Token = "0x4000096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Hashtable ms_MaterialsGroup;

		[Token(Token = "0x60000AE")]
		[Address(RVA = "0x1FE6270", Offset = "0x1FE6270", VA = "0x1FE6270")]
		public static Material NewMaterial(bool gpuInstanced)
		{
			return null;
		}

		[Token(Token = "0x60000AF")]
		[Address(RVA = "0x1FE83B8", Offset = "0x1FE83B8", VA = "0x1FE83B8")]
		public static Material GetInstancedMaterial(uint groupID, StaticProperties staticProps)
		{
			return null;
		}
	}
	[Token(Token = "0x2000034")]
	public static class MeshGenerator
	{
		[Token(Token = "0x60000B5")]
		[Address(RVA = "0x1FEBCB0", Offset = "0x1FEBCB0", VA = "0x1FEBCB0")]
		private static float GetAngleOffset(int numSides)
		{
			return default(float);
		}

		[Token(Token = "0x60000B6")]
		[Address(RVA = "0x1FE69B8", Offset = "0x1FE69B8", VA = "0x1FE69B8")]
		public static Mesh GenerateConeZ_Radius(float lengthZ, float radiusStart, float radiusEnd, int numSides, int numSegments, bool cap, bool doubleSided)
		{
			return null;
		}
	}
	[Token(Token = "0x2000035")]
	public static class Noise3D
	{
		[Token(Token = "0x40000B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool ms_IsSupportedChecked;

		[Token(Token = "0x40000B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		private static bool ms_IsSupported;

		[Token(Token = "0x40000B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Texture3D ms_NoiseTexture;

		[Token(Token = "0x40000B6")]
		private const HideFlags kHideFlags = HideFlags.HideAndDontSave;

		[Token(Token = "0x40000B7")]
		private const int kMinShaderLevel = 35;

		[Token(Token = "0x1700001E")]
		public static bool isSupported
		{
			[Token(Token = "0x60000B7")]
			[Address(RVA = "0x1FE7E7C", Offset = "0x1FE7E7C", VA = "0x1FE7E7C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700001F")]
		public static bool isProperlyLoaded
		{
			[Token(Token = "0x60000B8")]
			[Address(RVA = "0x1FEBD68", Offset = "0x1FEBD68", VA = "0x1FEBD68")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000020")]
		public static string isNotSupportedString
		{
			[Token(Token = "0x60000B9")]
			[Address(RVA = "0x1FEBCC8", Offset = "0x1FEBCC8", VA = "0x1FEBCC8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000BA")]
		[Address(RVA = "0x1FEBE00", Offset = "0x1FEBE00", VA = "0x1FEBE00")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xE2B370", Offset = "0xE2B370")]
		private static void OnStartUp()
		{
		}

		[Token(Token = "0x60000BB")]
		[Address(RVA = "0x1FE8D14", Offset = "0x1FE8D14", VA = "0x1FE8D14")]
		public static void LoadIfNeeded()
		{
		}

		[Token(Token = "0x60000BC")]
		[Address(RVA = "0x1FEBE5C", Offset = "0x1FEBE5C", VA = "0x1FEBE5C")]
		private static Texture3D LoadTexture3D(TextAsset textData, int size)
		{
			return null;
		}
	}
	[Token(Token = "0x2000036")]
	public static class ShaderProperties
	{
		[Token(Token = "0x40000B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int FadeOutFactor;

		[Token(Token = "0x40000B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static readonly int ClippingPlaneWS;

		[Token(Token = "0x40000BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly int ClippingPlaneProps;

		[Token(Token = "0x40000BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static readonly int ConeSlopeCosSin;

		[Token(Token = "0x40000BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly int ConeRadius;

		[Token(Token = "0x40000BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static readonly int ConeApexOffsetZ;

		[Token(Token = "0x40000BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly int ColorFlat;

		[Token(Token = "0x40000BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public static readonly int AlphaInside;

		[Token(Token = "0x40000C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly int AlphaOutside;

		[Token(Token = "0x40000C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public static readonly int AttenuationLerpLinearQuad;

		[Token(Token = "0x40000C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static readonly int DistanceFadeStart;

		[Token(Token = "0x40000C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public static readonly int DistanceFadeEnd;

		[Token(Token = "0x40000C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static readonly int DistanceCamClipping;

		[Token(Token = "0x40000C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public static readonly int FresnelPow;

		[Token(Token = "0x40000C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static readonly int GlareBehind;

		[Token(Token = "0x40000C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public static readonly int GlareFrontal;

		[Token(Token = "0x40000C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static readonly int DrawCap;

		[Token(Token = "0x40000C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public static readonly int DepthBlendDistance;

		[Token(Token = "0x40000CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static readonly int NoiseLocal;

		[Token(Token = "0x40000CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public static readonly int NoiseParam;

		[Token(Token = "0x40000CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static readonly int CameraParams;

		[Token(Token = "0x40000CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public static readonly int CameraBufferSizeSRP;

		[Token(Token = "0x40000CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static readonly int ColorGradientMatrix;

		[Token(Token = "0x40000CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public static readonly int LocalToWorldMatrix;

		[Token(Token = "0x40000D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static readonly int WorldToLocalMatrix;
	}
	[Token(Token = "0x2000037")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xE2077C", Offset = "0xE2077C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE2077C", Offset = "0xE2077C")]
	[DisallowMultipleComponent]
	public class TriggerZone : MonoBehaviour
	{
		[Token(Token = "0x40000D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool setIsTrigger;

		[Token(Token = "0x40000D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float rangeMultiplier;

		[Token(Token = "0x40000D3")]
		private const int kMeshColliderNumSides = 8;

		[Token(Token = "0x40000D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Mesh m_Mesh;

		[Token(Token = "0x60000BF")]
		[Address(RVA = "0x1FEC514", Offset = "0x1FEC514", VA = "0x1FEC514")]
		private void Update()
		{
		}

		[Token(Token = "0x60000C0")]
		[Address(RVA = "0x1FEC718", Offset = "0x1FEC718", VA = "0x1FEC718")]
		public TriggerZone()
		{
		}
	}
	[Token(Token = "0x2000038")]
	public static class Utils
	{
		[Token(Token = "0x2000039")]
		public enum FloatPackingPrecision
		{
			[Token(Token = "0x40000D7")]
			High = 64,
			[Token(Token = "0x40000D8")]
			Low = 8,
			[Token(Token = "0x40000D9")]
			Undef = 0
		}

		[Token(Token = "0x40000D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static FloatPackingPrecision ms_FloatPackingPrecision;

		[Token(Token = "0x60000C1")]
		[Address(RVA = "0x1FE65D0", Offset = "0x1FE65D0", VA = "0x1FE65D0")]
		public static string GetPath(Transform current)
		{
			return null;
		}

		[Token(Token = "0x60000C2")]
		public static T NewWithComponent<T>(string name) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60000C3")]
		public static T GetOrAddComponent<T>(this GameObject self) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60000C4")]
		[Address(RVA = "0x1FEC730", Offset = "0x1FEC730", VA = "0x1FEC730")]
		public static Vector2 xy(this Vector3 aVector)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60000C5")]
		[Address(RVA = "0x1FEAD68", Offset = "0x1FEAD68", VA = "0x1FEAD68")]
		public static float GetMaxArea2D(this Bounds self)
		{
			return default(float);
		}

		[Token(Token = "0x60000C6")]
		[Address(RVA = "0x1FEB6A0", Offset = "0x1FEB6A0", VA = "0x1FEB6A0")]
		public static Plane TranslateCustom(this Plane plane, Vector3 translation)
		{
			return default(Plane);
		}

		[Token(Token = "0x60000C7")]
		[Address(RVA = "0x1FEC75C", Offset = "0x1FEC75C", VA = "0x1FEC75C")]
		public static bool IsValid(this Plane plane)
		{
			return default(bool);
		}

		[Token(Token = "0x60000C8")]
		[Address(RVA = "0x1FE9058", Offset = "0x1FE9058", VA = "0x1FE9058")]
		public static void SetKeywordEnabled(this Material mat, string name, bool enabled)
		{
		}

		[Token(Token = "0x60000C9")]
		[Address(RVA = "0x1FE990C", Offset = "0x1FE990C", VA = "0x1FE990C")]
		public static void SetShaderKeywordEnabled(string name, bool enabled)
		{
		}

		[Token(Token = "0x60000CA")]
		[Address(RVA = "0x1FE8BF4", Offset = "0x1FE8BF4", VA = "0x1FE8BF4")]
		public static Matrix4x4 SampleInMatrix(this Gradient self, int floatPackingPrecision)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x60000CB")]
		[Address(RVA = "0x1FEC810", Offset = "0x1FEC810", VA = "0x1FEC810")]
		private static Vector4 Vector4_Floor(Vector4 vec)
		{
			return default(Vector4);
		}

		[Token(Token = "0x60000CC")]
		[Address(RVA = "0x1FEC7A8", Offset = "0x1FEC7A8", VA = "0x1FEC7A8")]
		public static float PackToFloat(this Color color, int floatPackingPrecision)
		{
			return default(float);
		}

		[Token(Token = "0x60000CD")]
		[Address(RVA = "0x1FE8154", Offset = "0x1FE8154", VA = "0x1FE8154")]
		public static FloatPackingPrecision GetFloatPackingPrecision()
		{
			return default(FloatPackingPrecision);
		}

		[Token(Token = "0x60000CE")]
		[Address(RVA = "0x1FEC8BC", Offset = "0x1FEC8BC", VA = "0x1FEC8BC")]
		public static void MarkCurrentSceneDirty()
		{
		}

		[Token(Token = "0x60000CF")]
		[Address(RVA = "0x1FE9CF8", Offset = "0x1FE9CF8", VA = "0x1FE9CF8")]
		public static void MarkObjectDirty(UnityEngine.Object obj)
		{
		}
	}
	[Token(Token = "0x200003A")]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE20824", Offset = "0xE20824")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xE20824", Offset = "0xE20824")]
	[ExecuteInEditMode]
	public class VolumetricDustParticles : MonoBehaviour
	{
		[Token(Token = "0x200003B")]
		public enum Direction
		{
			[Token(Token = "0x40000EA")]
			Beam,
			[Token(Token = "0x40000EB")]
			Random
		}

		[Token(Token = "0x40000DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE21F20", Offset = "0xE21F20")]
		public float alpha;

		[Token(Token = "0x40000DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE21F38", Offset = "0xE21F38")]
		public float size;

		[Token(Token = "0x40000DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Direction direction;

		[Token(Token = "0x40000DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float speed;

		[Token(Token = "0x40000DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float density;

		[Token(Token = "0x40000DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE21F58", Offset = "0xE21F58")]
		public float spawnMaxDistance;

		[Token(Token = "0x40000E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool cullingEnabled;

		[Token(Token = "0x40000E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float cullingMaxDistance;

		[Token(Token = "0x40000E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE21F70", Offset = "0xE21F70")]
		private bool <isCulled>k__BackingField;

		[Token(Token = "0x40000E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool isFeatureSupported;

		[Token(Token = "0x40000E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ParticleSystem m_Particles;

		[Token(Token = "0x40000E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ParticleSystemRenderer m_Renderer;

		[Token(Token = "0x40000E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		private static bool ms_NoMainCameraLogged;

		[Token(Token = "0x40000E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Camera ms_MainCamera;

		[Token(Token = "0x40000E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private VolumetricLightBeam m_Master;

		[Token(Token = "0x17000021")]
		public bool isCulled
		{
			[Token(Token = "0x60000D0")]
			[Address(RVA = "0x1FEC8C0", Offset = "0x1FEC8C0", VA = "0x1FEC8C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2B400", Offset = "0xE2B400")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60000D1")]
			[Address(RVA = "0x1FEC8C8", Offset = "0x1FEC8C8", VA = "0x1FEC8C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2B410", Offset = "0xE2B410")]
			private set
			{
			}
		}

		[Token(Token = "0x17000022")]
		public bool particlesAreInstantiated
		{
			[Token(Token = "0x60000D2")]
			[Address(RVA = "0x1FEC8D4", Offset = "0x1FEC8D4", VA = "0x1FEC8D4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000023")]
		public int particlesCurrentCount
		{
			[Token(Token = "0x60000D3")]
			[Address(RVA = "0x1FEC940", Offset = "0x1FEC940", VA = "0x1FEC940")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000024")]
		public int particlesMaxCount
		{
			[Token(Token = "0x60000D4")]
			[Address(RVA = "0x1FEC9D4", Offset = "0x1FEC9D4", VA = "0x1FEC9D4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000025")]
		public Camera mainCamera
		{
			[Token(Token = "0x60000D5")]
			[Address(RVA = "0x1FECA80", Offset = "0x1FECA80", VA = "0x1FECA80")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000D6")]
		[Address(RVA = "0x1FECCE4", Offset = "0x1FECCE4", VA = "0x1FECCE4")]
		private void Start()
		{
		}

		[Token(Token = "0x60000D7")]
		[Address(RVA = "0x1FECD58", Offset = "0x1FECD58", VA = "0x1FECD58")]
		private void InstantiateParticleSystem()
		{
		}

		[Token(Token = "0x60000D8")]
		[Address(RVA = "0x1FECFF0", Offset = "0x1FECFF0", VA = "0x1FECFF0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60000D9")]
		[Address(RVA = "0x1FECF34", Offset = "0x1FECF34", VA = "0x1FECF34")]
		private void SetActiveAndPlay()
		{
		}

		[Token(Token = "0x60000DA")]
		[Address(RVA = "0x1FED5D4", Offset = "0x1FED5D4", VA = "0x1FED5D4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60000DB")]
		[Address(RVA = "0x1FED674", Offset = "0x1FED674", VA = "0x1FED674")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60000DC")]
		[Address(RVA = "0x1FED73C", Offset = "0x1FED73C", VA = "0x1FED73C")]
		private void Update()
		{
		}

		[Token(Token = "0x60000DD")]
		[Address(RVA = "0x1FECFF4", Offset = "0x1FECFF4", VA = "0x1FECFF4")]
		private void SetParticleProperties()
		{
		}

		[Token(Token = "0x60000DE")]
		[Address(RVA = "0x1FED770", Offset = "0x1FED770", VA = "0x1FED770")]
		private void UpdateCulling()
		{
		}

		[Token(Token = "0x60000DF")]
		[Address(RVA = "0x1FEDAD0", Offset = "0x1FEDAD0", VA = "0x1FEDAD0")]
		public VolumetricDustParticles()
		{
		}
	}
	[Token(Token = "0x200003C")]
	[SelectionBase]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xE208CC", Offset = "0xE208CC")]
	[DisallowMultipleComponent]
	[ExecuteInEditMode]
	public class VolumetricLightBeam : MonoBehaviour
	{
		[Token(Token = "0x200003D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE20938", Offset = "0xE20938")]
		private sealed class <CoPlaytimeUpdate>d__126 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000117")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000118")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000119")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VolumetricLightBeam <>4__this;

			[Token(Token = "0x17000043")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000122")]
				[Address(RVA = "0x1FEF1F4", Offset = "0x1FEF1F4", VA = "0x1FEF1F4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000044")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000124")]
				[Address(RVA = "0x1FEF25C", Offset = "0x1FEF25C", VA = "0x1FEF25C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600011F")]
			[Address(RVA = "0x1FEEC60", Offset = "0x1FEEC60", VA = "0x1FEEC60")]
			[DebuggerHidden]
			public <CoPlaytimeUpdate>d__126(int <>1__state)
			{
			}

			[Token(Token = "0x6000120")]
			[Address(RVA = "0x1FEF15C", Offset = "0x1FEF15C", VA = "0x1FEF15C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000121")]
			[Address(RVA = "0x1FEF160", Offset = "0x1FEF160", VA = "0x1FEF160", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000123")]
			[Address(RVA = "0x1FEF1FC", Offset = "0x1FEF1FC", VA = "0x1FEF1FC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40000EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool colorFromLight;

		[Token(Token = "0x40000ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ColorMode colorMode;

		[Token(Token = "0x40000EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE21F80", Offset = "0xE21F80")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0xE21F80", Offset = "0xE21F80")]
		public Color color;

		[Token(Token = "0x40000EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Gradient colorGradient;

		[Token(Token = "0x40000F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool intensityFromLight;

		[Token(Token = "0x40000F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool intensityModeAdvanced;

		[Token(Token = "0x40000F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE21FD4", Offset = "0xE21FD4")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE21FD4", Offset = "0xE21FD4")]
		public float intensityInside;

		[Token(Token = "0x40000F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE22028", Offset = "0xE22028")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE22028", Offset = "0xE22028")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE22028", Offset = "0xE22028")]
		public float intensityOutside;

		[Token(Token = "0x40000F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public BlendingMode blendingMode;

		[Token(Token = "0x40000F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE220A0", Offset = "0xE220A0")]
		public bool spotAngleFromLight;

		[Token(Token = "0x40000F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE220D8", Offset = "0xE220D8")]
		public float spotAngle;

		[Token(Token = "0x40000F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE220F8", Offset = "0xE220F8")]
		public float coneRadiusStart;

		[Token(Token = "0x40000F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public MeshType geomMeshType;

		[Token(Token = "0x40000F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE22130", Offset = "0xE22130")]
		public int geomCustomSides;

		[Token(Token = "0x40000FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int geomCustomSegments;

		[Token(Token = "0x40000FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool geomCap;

		[Token(Token = "0x40000FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE22168", Offset = "0xE22168")]
		public bool fallOffEndFromLight;

		[Token(Token = "0x40000FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public AttenuationEquation attenuationEquation;

		[Token(Token = "0x40000FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE221A0", Offset = "0xE221A0")]
		public float attenuationCustomBlending;

		[Token(Token = "0x40000FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE221B8", Offset = "0xE221B8")]
		public float fallOffStart;

		[Token(Token = "0x4000100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE221F0", Offset = "0xE221F0")]
		public float fallOffEnd;

		[Token(Token = "0x4000101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float depthBlendDistance;

		[Token(Token = "0x4000102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float cameraClippingDistance;

		[Token(Token = "0x4000103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE22228", Offset = "0xE22228")]
		public float glareFrontal;

		[Token(Token = "0x4000104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE22240", Offset = "0xE22240")]
		public float glareBehind;

		[Token(Token = "0x4000105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE22258", Offset = "0xE22258")]
		public float fresnelPow;

		[Token(Token = "0x4000106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public NoiseMode noiseMode;

		[Token(Token = "0x4000107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE22290", Offset = "0xE22290")]
		private bool _DEPRECATED_NoiseEnabled;

		[Token(Token = "0x4000108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE222DC", Offset = "0xE222DC")]
		public float noiseIntensity;

		[Token(Token = "0x4000109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public bool noiseScaleUseGlobal;

		[Token(Token = "0x400010A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE222F4", Offset = "0xE222F4")]
		public float noiseScaleLocal;

		[Token(Token = "0x400010B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public bool noiseVelocityUseGlobal;

		[Token(Token = "0x400010C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Vector3 noiseVelocityLocal;

		[Token(Token = "0x400010D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public float fadeOutBegin;

		[Token(Token = "0x400010E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float fadeOutEnd;

		[Token(Token = "0x400010F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[SerializeField]
		private int pluginVersion;

		[Token(Token = "0x4000110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE22320", Offset = "0xE22320")]
		private bool _TrackChangesDuringPlaytime;

		[Token(Token = "0x4000111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[SerializeField]
		private int _SortingLayerID;

		[Token(Token = "0x4000112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private int _SortingOrder;

		[Token(Token = "0x4000113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2238C", Offset = "0xE2238C")]
		private uint <_INTERNAL_InstancedMaterialGroupID>k__BackingField;

		[Token(Token = "0x4000114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private BeamGeometry m_BeamGeom;

		[Token(Token = "0x4000115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Coroutine m_CoPlaytimeUpdate;

		[Token(Token = "0x4000116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Light _CachedLight;

		[Token(Token = "0x17000026")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE2EF34", Offset = "0xE2EF34")]
		public float alphaInside
		{
			[Token(Token = "0x60000E1")]
			[Address(RVA = "0x1FEDB80", Offset = "0x1FEDB80", VA = "0x1FEDB80")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60000E2")]
			[Address(RVA = "0x1FEDB88", Offset = "0x1FEDB88", VA = "0x1FEDB88")]
			set
			{
			}
		}

		[Token(Token = "0x17000027")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE2EF6C", Offset = "0xE2EF6C")]
		public float alphaOutside
		{
			[Token(Token = "0x60000E3")]
			[Address(RVA = "0x1FEDB90", Offset = "0x1FEDB90", VA = "0x1FEDB90")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60000E4")]
			[Address(RVA = "0x1FEDB98", Offset = "0x1FEDB98", VA = "0x1FEDB98")]
			set
			{
			}
		}

		[Token(Token = "0x17000028")]
		public float intensityGlobal
		{
			[Token(Token = "0x60000E5")]
			[Address(RVA = "0x1FEDBA0", Offset = "0x1FEDBA0", VA = "0x1FEDBA0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60000E6")]
			[Address(RVA = "0x1FEDBA8", Offset = "0x1FEDBA8", VA = "0x1FEDBA8")]
			set
			{
			}
		}

		[Token(Token = "0x17000029")]
		public float coneAngle
		{
			[Token(Token = "0x60000E7")]
			[Address(RVA = "0x1FE8AFC", Offset = "0x1FE8AFC", VA = "0x1FE8AFC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700002A")]
		public float coneRadiusEnd
		{
			[Token(Token = "0x60000E8")]
			[Address(RVA = "0x1FE7D50", Offset = "0x1FE7D50", VA = "0x1FE7D50")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700002B")]
		public float coneVolume
		{
			[Token(Token = "0x60000E9")]
			[Address(RVA = "0x1FEDBB0", Offset = "0x1FEDBB0", VA = "0x1FEDBB0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700002C")]
		public float coneApexOffsetZ
		{
			[Token(Token = "0x60000EA")]
			[Address(RVA = "0x1FE8B9C", Offset = "0x1FE8B9C", VA = "0x1FE8B9C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700002D")]
		public int geomSides
		{
			[Token(Token = "0x60000EB")]
			[Address(RVA = "0x1FEDC04", Offset = "0x1FEDC04", VA = "0x1FEDC04")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60000EC")]
			[Address(RVA = "0x1FEDC8C", Offset = "0x1FEDC8C", VA = "0x1FEDC8C")]
			set
			{
			}
		}

		[Token(Token = "0x1700002E")]
		public int geomSegments
		{
			[Token(Token = "0x60000ED")]
			[Address(RVA = "0x1FEDD0C", Offset = "0x1FEDD0C", VA = "0x1FEDD0C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60000EE")]
			[Address(RVA = "0x1FEDD94", Offset = "0x1FEDD94", VA = "0x1FEDD94")]
			set
			{
			}
		}

		[Token(Token = "0x1700002F")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE2EFA4", Offset = "0xE2EFA4")]
		public bool fadeEndFromLight
		{
			[Token(Token = "0x60000EF")]
			[Address(RVA = "0x1FEDE14", Offset = "0x1FEDE14", VA = "0x1FEDE14")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60000F0")]
			[Address(RVA = "0x1FEDE1C", Offset = "0x1FEDE1C", VA = "0x1FEDE1C")]
			set
			{
			}
		}

		[Token(Token = "0x17000030")]
		public float attenuationLerpLinearQuad
		{
			[Token(Token = "0x60000F1")]
			[Address(RVA = "0x1FE8CEC", Offset = "0x1FE8CEC", VA = "0x1FE8CEC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000031")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE2EFDC", Offset = "0xE2EFDC")]
		public float fadeStart
		{
			[Token(Token = "0x60000F2")]
			[Address(RVA = "0x1FEDE28", Offset = "0x1FEDE28", VA = "0x1FEDE28")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60000F3")]
			[Address(RVA = "0x1FEDE30", Offset = "0x1FEDE30", VA = "0x1FEDE30")]
			set
			{
			}
		}

		[Token(Token = "0x17000032")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE2F014", Offset = "0xE2F014")]
		public float fadeEnd
		{
			[Token(Token = "0x60000F4")]
			[Address(RVA = "0x1FEDE38", Offset = "0x1FEDE38", VA = "0x1FEDE38")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60000F5")]
			[Address(RVA = "0x1FEDE40", Offset = "0x1FEDE40", VA = "0x1FEDE40")]
			set
			{
			}
		}

		[Token(Token = "0x17000033")]
		public bool isNoiseEnabled
		{
			[Token(Token = "0x60000F6")]
			[Address(RVA = "0x1FE7E6C", Offset = "0x1FE7E6C", VA = "0x1FE7E6C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000034")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE2F04C", Offset = "0xE2F04C")]
		public bool noiseEnabled
		{
			[Token(Token = "0x60000F7")]
			[Address(RVA = "0x1FEDE48", Offset = "0x1FEDE48", VA = "0x1FEDE48")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60000F8")]
			[Address(RVA = "0x1FEDE58", Offset = "0x1FEDE58", VA = "0x1FEDE58")]
			set
			{
			}
		}

		[Token(Token = "0x17000035")]
		public bool isFadeOutEnabled
		{
			[Token(Token = "0x60000F9")]
			[Address(RVA = "0x1FE54A4", Offset = "0x1FE54A4", VA = "0x1FE54A4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000036")]
		public int sortingLayerID
		{
			[Token(Token = "0x60000FA")]
			[Address(RVA = "0x1FEDE74", Offset = "0x1FEDE74", VA = "0x1FEDE74")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60000FB")]
			[Address(RVA = "0x1FEDE7C", Offset = "0x1FEDE7C", VA = "0x1FEDE7C")]
			set
			{
			}
		}

		[Token(Token = "0x17000037")]
		public string sortingLayerName
		{
			[Token(Token = "0x60000FC")]
			[Address(RVA = "0x1FEDF2C", Offset = "0x1FEDF2C", VA = "0x1FEDF2C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60000FD")]
			[Address(RVA = "0x1FEDF38", Offset = "0x1FEDF38", VA = "0x1FEDF38")]
			set
			{
			}
		}

		[Token(Token = "0x17000038")]
		public int sortingOrder
		{
			[Token(Token = "0x60000FE")]
			[Address(RVA = "0x1FEDF68", Offset = "0x1FEDF68", VA = "0x1FEDF68")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60000FF")]
			[Address(RVA = "0x1FEDF70", Offset = "0x1FEDF70", VA = "0x1FEDF70")]
			set
			{
			}
		}

		[Token(Token = "0x17000039")]
		public bool trackChangesDuringPlaytime
		{
			[Token(Token = "0x6000100")]
			[Address(RVA = "0x1FEE020", Offset = "0x1FEE020", VA = "0x1FEE020")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000101")]
			[Address(RVA = "0x1FEE028", Offset = "0x1FEE028", VA = "0x1FEE028")]
			set
			{
			}
		}

		[Token(Token = "0x1700003A")]
		public bool isCurrentlyTrackingChanges
		{
			[Token(Token = "0x6000102")]
			[Address(RVA = "0x1FEE0A0", Offset = "0x1FEE0A0", VA = "0x1FEE0A0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700003B")]
		public bool hasGeometry
		{
			[Token(Token = "0x6000103")]
			[Address(RVA = "0x1FED934", Offset = "0x1FED934", VA = "0x1FED934")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700003C")]
		public Bounds bounds
		{
			[Token(Token = "0x6000104")]
			[Address(RVA = "0x1FED9A4", Offset = "0x1FED9A4", VA = "0x1FED9A4")]
			get
			{
				return default(Bounds);
			}
		}

		[Token(Token = "0x1700003D")]
		public int blendingModeAsInt
		{
			[Token(Token = "0x6000107")]
			[Address(RVA = "0x1FEE208", Offset = "0x1FEE208", VA = "0x1FEE208")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700003E")]
		public uint _INTERNAL_InstancedMaterialGroupID
		{
			[Token(Token = "0x6000108")]
			[Address(RVA = "0x1FEE300", Offset = "0x1FEE300", VA = "0x1FEE300")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2B420", Offset = "0xE2B420")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6000109")]
			[Address(RVA = "0x1FEE308", Offset = "0x1FEE308", VA = "0x1FEE308")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2B430", Offset = "0xE2B430")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700003F")]
		public string meshStats
		{
			[Token(Token = "0x600010A")]
			[Address(RVA = "0x1FEE310", Offset = "0x1FEE310", VA = "0x1FEE310")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000040")]
		public int meshVerticesCount
		{
			[Token(Token = "0x600010B")]
			[Address(RVA = "0x1FEE498", Offset = "0x1FEE498", VA = "0x1FEE498")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000041")]
		public int meshTrianglesCount
		{
			[Token(Token = "0x600010C")]
			[Address(RVA = "0x1FEE574", Offset = "0x1FEE574", VA = "0x1FEE574")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000042")]
		private Light lightSpotAttached
		{
			[Token(Token = "0x600010D")]
			[Address(RVA = "0x1FEE668", Offset = "0x1FEE668", VA = "0x1FEE668")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000105")]
		[Address(RVA = "0x1FEB7CC", Offset = "0x1FEB7CC", VA = "0x1FEB7CC")]
		public void SetDynamicOcclusion(DynamicOcclusion dynamicOcclusion)
		{
		}

		[Token(Token = "0x6000106")]
		[Address(RVA = "0x1FEE0B0", Offset = "0x1FEE0B0", VA = "0x1FEE0B0")]
		public bool IsColliderHiddenByDynamicOccluder(Collider collider)
		{
			return default(bool);
		}

		[Token(Token = "0x600010E")]
		[Address(RVA = "0x1FEE768", Offset = "0x1FEE768", VA = "0x1FEE768")]
		public float GetInsideBeamFactor(Vector3 posWS)
		{
			return default(float);
		}

		[Token(Token = "0x600010F")]
		[Address(RVA = "0x1FE94AC", Offset = "0x1FE94AC", VA = "0x1FE94AC")]
		public float GetInsideBeamFactorFromObjectSpacePos(Vector3 posOS)
		{
			return default(float);
		}

		[Token(Token = "0x6000110")]
		[Address(RVA = "0x1FEE7C8", Offset = "0x1FEE7C8", VA = "0x1FEE7C8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE2B440", Offset = "0xE2B440")]
		public void Generate()
		{
		}

		[Token(Token = "0x6000111")]
		[Address(RVA = "0x1FEE7D4", Offset = "0x1FEE7D4", VA = "0x1FEE7D4", Slot = "4")]
		public virtual void GenerateGeometry()
		{
		}

		[Token(Token = "0x6000112")]
		[Address(RVA = "0x1FEEA0C", Offset = "0x1FEEA0C", VA = "0x1FEEA0C", Slot = "5")]
		public virtual void UpdateAfterManualPropertyChange()
		{
		}

		[Token(Token = "0x6000113")]
		[Address(RVA = "0x1FEEAA0", Offset = "0x1FEEAA0", VA = "0x1FEEAA0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000114")]
		[Address(RVA = "0x1FEEAAC", Offset = "0x1FEEAAC", VA = "0x1FEEAAC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000115")]
		[Address(RVA = "0x1FEEB44", Offset = "0x1FEEB44", VA = "0x1FEEB44")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000116")]
		[Address(RVA = "0x1FEE034", Offset = "0x1FEE034", VA = "0x1FEE034")]
		private void StartPlaytimeUpdateIfNeeded()
		{
		}

		[Token(Token = "0x6000117")]
		[Address(RVA = "0x1FEEBE4", Offset = "0x1FEEBE4", VA = "0x1FEEBE4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE2B478", Offset = "0xE2B478")]
		private IEnumerator CoPlaytimeUpdate()
		{
			return null;
		}

		[Token(Token = "0x6000118")]
		[Address(RVA = "0x1FEEC8C", Offset = "0x1FEEC8C", VA = "0x1FEEC8C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000119")]
		[Address(RVA = "0x1FEEC90", Offset = "0x1FEEC90", VA = "0x1FEEC90")]
		private void DestroyBeam()
		{
		}

		[Token(Token = "0x600011A")]
		[Address(RVA = "0x1FEED58", Offset = "0x1FEED58", VA = "0x1FEED58")]
		private void AssignPropertiesFromSpotLight(Light lightSpot)
		{
		}

		[Token(Token = "0x600011B")]
		[Address(RVA = "0x1FEEE58", Offset = "0x1FEEE58", VA = "0x1FEEE58")]
		private void ClampProperties()
		{
		}

		[Token(Token = "0x600011C")]
		[Address(RVA = "0x1FEE9DC", Offset = "0x1FEE9DC", VA = "0x1FEE9DC")]
		private void ValidateProperties()
		{
		}

		[Token(Token = "0x600011D")]
		[Address(RVA = "0x1FEE8EC", Offset = "0x1FEE8EC", VA = "0x1FEE8EC")]
		private void HandleBackwardCompatibility(int serializedVersion, int newVersion)
		{
		}

		[Token(Token = "0x600011E")]
		[Address(RVA = "0x1FEF044", Offset = "0x1FEF044", VA = "0x1FEF044")]
		public VolumetricLightBeam()
		{
		}
	}
}
namespace VLB_Samples
{
	[Token(Token = "0x200003E")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE20948", Offset = "0xE20948")]
	public class CameraToggleBeamVisibility : MonoBehaviour
	{
		[Token(Token = "0x400011A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private KeyCode m_KeyCode;

		[Token(Token = "0x6000125")]
		[Address(RVA = "0x1FEF264", Offset = "0x1FEF264", VA = "0x1FEF264")]
		private void Update()
		{
		}

		[Token(Token = "0x6000126")]
		[Address(RVA = "0x1FEF358", Offset = "0x1FEF358", VA = "0x1FEF358")]
		public CameraToggleBeamVisibility()
		{
		}
	}
	[Token(Token = "0x200003F")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE209AC", Offset = "0xE209AC")]
	public class CheckIfInsideBeam : MonoBehaviour
	{
		[Token(Token = "0x400011B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool isInsideBeam;

		[Token(Token = "0x400011C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material m_Material;

		[Token(Token = "0x400011D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Collider m_Collider;

		[Token(Token = "0x6000127")]
		[Address(RVA = "0x1FEF368", Offset = "0x1FEF368", VA = "0x1FEF368")]
		private void Start()
		{
		}

		[Token(Token = "0x6000128")]
		[Address(RVA = "0x1FEF444", Offset = "0x1FEF444", VA = "0x1FEF444")]
		private void Update()
		{
		}

		[Token(Token = "0x6000129")]
		[Address(RVA = "0x1FEF500", Offset = "0x1FEF500", VA = "0x1FEF500")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600012A")]
		[Address(RVA = "0x1FEF508", Offset = "0x1FEF508", VA = "0x1FEF508")]
		private void OnTriggerStay(Collider trigger)
		{
		}

		[Token(Token = "0x600012B")]
		[Address(RVA = "0x1FEF5C4", Offset = "0x1FEF5C4", VA = "0x1FEF5C4")]
		public CheckIfInsideBeam()
		{
		}
	}
	[Token(Token = "0x2000040")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE20A50", Offset = "0xE20A50")]
	public class FeaturesNotSupportedMessage : MonoBehaviour
	{
		[Token(Token = "0x600012C")]
		[Address(RVA = "0x1FEF5CC", Offset = "0x1FEF5CC", VA = "0x1FEF5CC")]
		private void Start()
		{
		}

		[Token(Token = "0x600012D")]
		[Address(RVA = "0x1FEF69C", Offset = "0x1FEF69C", VA = "0x1FEF69C")]
		public FeaturesNotSupportedMessage()
		{
		}
	}
	[Token(Token = "0x2000041")]
	public class FreeCameraController : MonoBehaviour
	{
		[Token(Token = "0x400011E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float cameraSensitivity;

		[Token(Token = "0x400011F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float speedNormal;

		[Token(Token = "0x4000120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float speedFactorSlow;

		[Token(Token = "0x4000121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float speedFactorFast;

		[Token(Token = "0x4000122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float speedClimb;

		[Token(Token = "0x4000123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float rotationH;

		[Token(Token = "0x4000124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float rotationV;

		[Token(Token = "0x4000125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool m_UseMouseView;

		[Token(Token = "0x17000045")]
		private bool useMouseView
		{
			[Token(Token = "0x600012E")]
			[Address(RVA = "0x1FEF6A4", Offset = "0x1FEF6A4", VA = "0x1FEF6A4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600012F")]
			[Address(RVA = "0x1FEF6AC", Offset = "0x1FEF6AC", VA = "0x1FEF6AC")]
			set
			{
			}
		}

		[Token(Token = "0x6000130")]
		[Address(RVA = "0x1FEF6E8", Offset = "0x1FEF6E8", VA = "0x1FEF6E8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000131")]
		[Address(RVA = "0x1FEF780", Offset = "0x1FEF780", VA = "0x1FEF780")]
		private void Update()
		{
		}

		[Token(Token = "0x6000132")]
		[Address(RVA = "0x1FEFE20", Offset = "0x1FEFE20", VA = "0x1FEFE20")]
		public FreeCameraController()
		{
		}
	}
	[Token(Token = "0x2000042")]
	public class LightGenerator : MonoBehaviour
	{
		[Token(Token = "0x4000126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE223AC", Offset = "0xE223AC")]
		[SerializeField]
		private int CountX;

		[Token(Token = "0x4000127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE223F0", Offset = "0xE223F0")]
		[SerializeField]
		private int CountY;

		[Token(Token = "0x4000128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float OffsetUnits;

		[Token(Token = "0x4000129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float PositionY;

		[Token(Token = "0x400012A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool NoiseEnabled;

		[Token(Token = "0x400012B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		private bool AddLight;

		[Token(Token = "0x6000133")]
		[Address(RVA = "0x1FEFE44", Offset = "0x1FEFE44", VA = "0x1FEFE44")]
		public void Generate()
		{
		}

		[Token(Token = "0x6000134")]
		[Address(RVA = "0x1FF0700", Offset = "0x1FF0700", VA = "0x1FF0700")]
		public LightGenerator()
		{
		}
	}
	[Token(Token = "0x2000043")]
	public class Rotater : MonoBehaviour
	{
		[Token(Token = "0x400012C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE22474", Offset = "0xE22474")]
		public Vector3 EulerSpeed;

		[Token(Token = "0x6000135")]
		[Address(RVA = "0x1FF071C", Offset = "0x1FF071C", VA = "0x1FF071C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000136")]
		[Address(RVA = "0x1FF0894", Offset = "0x1FF0894", VA = "0x1FF0894")]
		public Rotater()
		{
		}
	}
}
namespace MEC
{
	[Token(Token = "0x2000044")]
	public class FileTest : MonoBehaviour
	{
		[Token(Token = "0x2000045")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE20AB4", Offset = "0xE20AB4")]
		private sealed class <_Save>d__2 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400012E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400012F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x4000130")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int num;

			[Token(Token = "0x4000131")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private string <filePath>5__2;

			[Token(Token = "0x4000132")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <number>5__3;

			[Token(Token = "0x17000046")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x600013D")]
				[Address(RVA = "0xF0E0C0", Offset = "0xF0E0C0", VA = "0xF0E0C0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000047")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600013F")]
				[Address(RVA = "0xF0E128", Offset = "0xF0E128", VA = "0xF0E128", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600013A")]
			[Address(RVA = "0xF0DB20", Offset = "0xF0DB20", VA = "0xF0DB20")]
			[DebuggerHidden]
			public <_Save>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x600013B")]
			[Address(RVA = "0xF0DB54", Offset = "0xF0DB54", VA = "0xF0DB54", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600013C")]
			[Address(RVA = "0xF0DB58", Offset = "0xF0DB58", VA = "0xF0DB58", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600013E")]
			[Address(RVA = "0xF0E0C8", Offset = "0xF0E0C8", VA = "0xF0E0C8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400012D")]
		private const string SaveString = "THIS IS A STRING OF TEXT TO SAVE TO DISK. WHEN DRINKS ARE MADE OF PURPLE MIST. WHEN SOMETHING COLD TOUCHES YOUR WRIST. WHEN DATA IS SAVED INTO A LIST. I THINK NOW YOU GET THE JIST. I'M BASICALLY DONE WRITING THIS.";

		[Token(Token = "0x6000137")]
		[Address(RVA = "0xF0D928", Offset = "0xF0D928", VA = "0xF0D928")]
		private void Start()
		{
		}

		[Token(Token = "0x6000138")]
		[Address(RVA = "0xF0D9EC", Offset = "0xF0D9EC", VA = "0xF0D9EC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE2B52C", Offset = "0xE2B52C")]
		private IEnumerator<float> _Save(int num)
		{
			return null;
		}

		[Token(Token = "0x6000139")]
		[Address(RVA = "0xF0DB4C", Offset = "0xF0DB4C", VA = "0xF0DB4C")]
		public FileTest()
		{
		}
	}
	[Token(Token = "0x2000046")]
	public class SanityTest : MonoBehaviour
	{
		[Token(Token = "0x2000047")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE20AC4", Offset = "0xE20AC4")]
		private sealed class <_MoveBackAndForth>d__6 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000137")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000138")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x4000139")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SanityTest <>4__this;

			[Token(Token = "0x400013A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Vector3 <start>5__2;

			[Token(Token = "0x400013B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <startTime>5__3;

			[Token(Token = "0x17000048")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x6000147")]
				[Address(RVA = "0xF0E784", Offset = "0xF0E784", VA = "0xF0E784", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000049")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000149")]
				[Address(RVA = "0xF0E7EC", Offset = "0xF0E7EC", VA = "0xF0E7EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000144")]
			[Address(RVA = "0xF0E2EC", Offset = "0xF0E2EC", VA = "0xF0E2EC")]
			[DebuggerHidden]
			public <_MoveBackAndForth>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6000145")]
			[Address(RVA = "0xF0E334", Offset = "0xF0E334", VA = "0xF0E334", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000146")]
			[Address(RVA = "0xF0E338", Offset = "0xF0E338", VA = "0xF0E338", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000148")]
			[Address(RVA = "0xF0E78C", Offset = "0xF0E78C", VA = "0xF0E78C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CoroutineHandle handle;

		[Token(Token = "0x4000134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float min;

		[Token(Token = "0x4000135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float max;

		[Token(Token = "0x4000136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float timeToReach;

		[Token(Token = "0x6000140")]
		[Address(RVA = "0xF0E18C", Offset = "0xF0E18C", VA = "0xF0E18C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000141")]
		[Address(RVA = "0xF0E284", Offset = "0xF0E284", VA = "0xF0E284")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000142")]
		[Address(RVA = "0xF0E208", Offset = "0xF0E208", VA = "0xF0E208")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE2B5E0", Offset = "0xE2B5E0")]
		private IEnumerator<float> _MoveBackAndForth()
		{
			return null;
		}

		[Token(Token = "0x6000143")]
		[Address(RVA = "0xF0E318", Offset = "0xF0E318", VA = "0xF0E318")]
		public SanityTest()
		{
		}
	}
	[Token(Token = "0x2000048")]
	public class SwarmTest : MonoBehaviour
	{
		[Token(Token = "0x2000049")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE20AD4", Offset = "0xE20AD4")]
		private sealed class <_RunSwarm>d__7 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000141")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000142")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x4000143")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SwarmTest <>4__this;

			[Token(Token = "0x4000144")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Vector3 <directionVector>5__2;

			[Token(Token = "0x4000145")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3[] <siblingPositions>5__3;

			[Token(Token = "0x4000146")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Vector3 <targetPos>5__4;

			[Token(Token = "0x4000147")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private Vector3 <myPos>5__5;

			[Token(Token = "0x4000148")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private float <deltaTime>5__6;

			[Token(Token = "0x4000149")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private Vector3 <randomDirection>5__7;

			[Token(Token = "0x400014A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Quaternion <directionQuaternion>5__8;

			[Token(Token = "0x1700004A")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x6000152")]
				[Address(RVA = "0xF0F308", Offset = "0xF0F308", VA = "0xF0F308", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x1700004B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000154")]
				[Address(RVA = "0xF0F370", Offset = "0xF0F370", VA = "0xF0F370", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600014F")]
			[Address(RVA = "0xF0E9F4", Offset = "0xF0E9F4", VA = "0xF0E9F4")]
			[DebuggerHidden]
			public <_RunSwarm>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6000150")]
			[Address(RVA = "0xF0EAB4", Offset = "0xF0EAB4", VA = "0xF0EAB4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000151")]
			[Address(RVA = "0xF0EAB8", Offset = "0xF0EAB8", VA = "0xF0EAB8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000153")]
			[Address(RVA = "0xF0F310", Offset = "0xF0F310", VA = "0xF0F310", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400013C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<Transform> SiblingList;

		[Token(Token = "0x400013D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform Target;

		[Token(Token = "0x400013E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float MoveSpeed;

		[Token(Token = "0x400013F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float BufferDistance;

		[Token(Token = "0x4000140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float TurnRate;

		[Token(Token = "0x600014A")]
		[Address(RVA = "0xF0E850", Offset = "0xF0E850", VA = "0xF0E850")]
		private void Awake()
		{
		}

		[Token(Token = "0x600014B")]
		[Address(RVA = "0xF0E8E4", Offset = "0xF0E8E4", VA = "0xF0E8E4")]
		private void Start()
		{
		}

		[Token(Token = "0x600014C")]
		[Address(RVA = "0xF0E978", Offset = "0xF0E978", VA = "0xF0E978")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE2B694", Offset = "0xE2B694")]
		private IEnumerator<float> _RunSwarm()
		{
			return null;
		}

		[Token(Token = "0x600014D")]
		[Address(RVA = "0xF0EA20", Offset = "0xF0EA20", VA = "0xF0EA20")]
		public SwarmTest()
		{
		}
	}
	[Token(Token = "0x200004A")]
	public class Threading : MonoBehaviour
	{
		[Token(Token = "0x200004B")]
		private struct Process
		{
			[Token(Token = "0x4000158")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CoroutineHandle Handle;

			[Token(Token = "0x4000159")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public IEnumerator<float> Enumerator;

			[Token(Token = "0x400015A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Exception Exception;
		}

		[Token(Token = "0x200004C")]
		private class ThreadData
		{
			[Token(Token = "0x400015B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool Running;

			[Token(Token = "0x400015C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Thread Thread;

			[Token(Token = "0x400015D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public readonly object RunLock;

			[Token(Token = "0x400015E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public readonly object ProcessLock;

			[Token(Token = "0x400015F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Process[] Processes;

			[Token(Token = "0x4000160")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int Head;

			[Token(Token = "0x4000161")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public int Tail;

			[Token(Token = "0x6000167")]
			[Address(RVA = "0xF11110", Offset = "0xF11110", VA = "0xF11110")]
			public ThreadData()
			{
			}
		}

		[Token(Token = "0x400014B")]
		public const float SwitchBackToGUIThread = 0f;

		[Token(Token = "0x400014C")]
		public const float YieldToOtherTasksOnThisThread = -42f;

		[Token(Token = "0x400014D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly CoroutineHandle _coroutineKey;

		[Token(Token = "0x400014E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Queue<Exception> _exceptions;

		[Token(Token = "0x400014F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Queue<Process> _returningProcesses;

		[Token(Token = "0x4000150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly List<ThreadData>[] _threadSpindles;

		[Token(Token = "0x4000151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly List<ThreadData> _looseThreads;

		[Token(Token = "0x4000152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly Queue<ThreadData> _abandonedThreads;

		[Token(Token = "0x4000153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly object _returnLock;

		[Token(Token = "0x4000154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ThreadData _chosenThread;

		[Token(Token = "0x4000155")]
		private const int ProcessesBlockSize = 32;

		[Token(Token = "0x4000156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool initialized;

		[Token(Token = "0x4000157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Threading _instance;

		[Token(Token = "0x1700004C")]
		private static Threading Instance
		{
			[Token(Token = "0x6000155")]
			[Address(RVA = "0xF0F3D4", Offset = "0xF0F3D4", VA = "0xF0F3D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000156")]
		[Address(RVA = "0xF0F6D0", Offset = "0xF0F6D0", VA = "0xF0F6D0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000157")]
		[Address(RVA = "0xF0F568", Offset = "0xF0F568", VA = "0xF0F568")]
		private void Initialize()
		{
		}

		[Token(Token = "0x6000158")]
		[Address(RVA = "0xF0F868", Offset = "0xF0F868", VA = "0xF0F868")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000159")]
		[Address(RVA = "0xF0FD80", Offset = "0xF0FD80", VA = "0xF0FD80")]
		private void Update()
		{
		}

		[Token(Token = "0x600015A")]
		[Address(RVA = "0xF0FF80", Offset = "0xF0FF80", VA = "0xF0FF80")]
		public static float SwitchToExternalThread(UnityEngine.ThreadPriority priority)
		{
			return default(float);
		}

		[Token(Token = "0x600015B")]
		[Address(RVA = "0xF0DE8C", Offset = "0xF0DE8C", VA = "0xF0DE8C")]
		public static float SwitchToExternalThread(System.Threading.ThreadPriority priority = System.Threading.ThreadPriority.Normal)
		{
			return default(float);
		}

		[Token(Token = "0x600015C")]
		[Address(RVA = "0xF104C4", Offset = "0xF104C4", VA = "0xF104C4")]
		public static float SwitchToDedicatedExternalThread(UnityEngine.ThreadPriority priority)
		{
			return default(float);
		}

		[Token(Token = "0x600015D")]
		[Address(RVA = "0xF108F8", Offset = "0xF108F8", VA = "0xF108F8")]
		public static float SwitchToDedicatedExternalThread(System.Threading.ThreadPriority priority = System.Threading.ThreadPriority.Normal)
		{
			return default(float);
		}

		[Token(Token = "0x600015E")]
		[Address(RVA = "0xF109F4", Offset = "0xF109F4", VA = "0xF109F4")]
		private static IEnumerator<float> RetrieveCoroutine(IEnumerator<float> coptr, CoroutineHandle handle)
		{
			return null;
		}

		[Token(Token = "0x600015F")]
		[Address(RVA = "0xF10C20", Offset = "0xF10C20", VA = "0xF10C20")]
		private static void AddItemToProcessQueue(ThreadData chosenThread, Process process)
		{
		}

		[Token(Token = "0x6000160")]
		[Address(RVA = "0xF1007C", Offset = "0xF1007C", VA = "0xF1007C")]
		private static void SelectThreadFromSpindle(System.Threading.ThreadPriority priority)
		{
		}

		[Token(Token = "0x6000161")]
		[Address(RVA = "0xF105C0", Offset = "0xF105C0", VA = "0xF105C0")]
		private static void SelectLooseThread(System.Threading.ThreadPriority priority)
		{
		}

		[Token(Token = "0x6000162")]
		[Address(RVA = "0xF111D4", Offset = "0xF111D4", VA = "0xF111D4")]
		private static void ThreadProcess(object input)
		{
		}

		[Token(Token = "0x6000163")]
		[Address(RVA = "0xF11BC0", Offset = "0xF11BC0", VA = "0xF11BC0")]
		private void ReturnAllProcesses()
		{
		}

		[Token(Token = "0x6000164")]
		[Address(RVA = "0xF11C78", Offset = "0xF11C78", VA = "0xF11C78")]
		private void ReturnProcess(Process process)
		{
		}

		[Token(Token = "0x6000165")]
		[Address(RVA = "0xF0DF88", Offset = "0xF0DF88", VA = "0xF0DF88")]
		public static void Sleep(float seconds)
		{
		}

		[Token(Token = "0x6000166")]
		[Address(RVA = "0xF11F0C", Offset = "0xF11F0C", VA = "0xF11F0C")]
		public Threading()
		{
		}
	}
	[Token(Token = "0x200004D")]
	public class Timing : MonoBehaviour
	{
		[Token(Token = "0x200004E")]
		private struct ProcessIndex : IEquatable<ProcessIndex>
		{
			[Token(Token = "0x40001CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Segment seg;

			[Token(Token = "0x40001CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int i;

			[Token(Token = "0x6000264")]
			[Address(RVA = "0x16FC764", Offset = "0x16FC764", VA = "0x16FC764", Slot = "4")]
			public bool Equals(ProcessIndex other)
			{
				return default(bool);
			}

			[Token(Token = "0x6000265")]
			[Address(RVA = "0x16FC78C", Offset = "0x16FC78C", VA = "0x16FC78C", Slot = "0")]
			public override bool Equals(object other)
			{
				return default(bool);
			}

			[Token(Token = "0x6000266")]
			[Address(RVA = "0x16FC824", Offset = "0x16FC824", VA = "0x16FC824", Slot = "2")]
			public override int GetHashCode()
			{
				return default(int);
			}
		}

		[Token(Token = "0x200004F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE20AE4", Offset = "0xE20AE4")]
		private sealed class <_EOFPumpWatcher>d__132 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40001CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40001CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x40001D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Timing <>4__this;

			[Token(Token = "0x17000053")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x600026A")]
				[Address(RVA = "0x16FB760", Offset = "0x16FB760", VA = "0x16FB760", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000054")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600026C")]
				[Address(RVA = "0x16FB7C8", Offset = "0x16FB7C8", VA = "0x16FB7C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000267")]
			[Address(RVA = "0x16FB6A0", Offset = "0x16FB6A0", VA = "0x16FB6A0")]
			[DebuggerHidden]
			public <_EOFPumpWatcher>d__132(int <>1__state)
			{
			}

			[Token(Token = "0x6000268")]
			[Address(RVA = "0x16FB6CC", Offset = "0x16FB6CC", VA = "0x16FB6CC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000269")]
			[Address(RVA = "0x16FB6D0", Offset = "0x16FB6D0", VA = "0x16FB6D0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600026B")]
			[Address(RVA = "0x16FB768", Offset = "0x16FB768", VA = "0x16FB768", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000050")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE20AF4", Offset = "0xE20AF4")]
		private sealed class <_EOFPump>d__133 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40001D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40001D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40001D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Timing <>4__this;

			[Token(Token = "0x17000055")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000270")]
				[Address(RVA = "0x16FB630", Offset = "0x16FB630", VA = "0x16FB630", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000056")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000272")]
				[Address(RVA = "0x16FB698", Offset = "0x16FB698", VA = "0x16FB698", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600026D")]
			[Address(RVA = "0x16FAE38", Offset = "0x16FAE38", VA = "0x16FAE38")]
			[DebuggerHidden]
			public <_EOFPump>d__133(int <>1__state)
			{
			}

			[Token(Token = "0x600026E")]
			[Address(RVA = "0x16FAE64", Offset = "0x16FAE64", VA = "0x16FAE64", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600026F")]
			[Address(RVA = "0x16FAE68", Offset = "0x16FAE68", VA = "0x16FAE68", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000271")]
			[Address(RVA = "0x16FB638", Offset = "0x16FB638", VA = "0x16FB638", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000051")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE20B04", Offset = "0xE20B04")]
		private sealed class <_StartWhenDone>d__275 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40001D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40001D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x40001D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Timing <>4__this;

			[Token(Token = "0x40001D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CoroutineHandle handle;

			[Token(Token = "0x40001D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IEnumerator<float> proc;

			[Token(Token = "0x17000057")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x6000277")]
				[Address(RVA = "0x16FBE0C", Offset = "0x16FBE0C", VA = "0x16FBE0C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000058")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000279")]
				[Address(RVA = "0x16FBE74", Offset = "0x16FBE74", VA = "0x16FBE74", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000273")]
			[Address(RVA = "0x16FBA5C", Offset = "0x16FBA5C", VA = "0x16FBA5C")]
			[DebuggerHidden]
			public <_StartWhenDone>d__275(int <>1__state)
			{
			}

			[Token(Token = "0x6000274")]
			[Address(RVA = "0x16FBA88", Offset = "0x16FBA88", VA = "0x16FBA88", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000275")]
			[Address(RVA = "0x16FBAE0", Offset = "0x16FBAE0", VA = "0x16FBAE0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000276")]
			[Address(RVA = "0x16FBAB4", Offset = "0x16FBAB4", VA = "0x16FBAB4")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6000278")]
			[Address(RVA = "0x16FBE14", Offset = "0x16FBE14", VA = "0x16FBE14", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000052")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE20B14", Offset = "0xE20B14")]
		private sealed class <_StartWhenDone>d__280 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40001D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40001DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x40001DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AsyncOperation operation;

			[Token(Token = "0x40001DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IEnumerator<float> pausedProc;

			[Token(Token = "0x17000059")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x600027D")]
				[Address(RVA = "0x16FC038", Offset = "0x16FC038", VA = "0x16FC038", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x1700005A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600027F")]
				[Address(RVA = "0x16FC0A0", Offset = "0x16FC0A0", VA = "0x16FC0A0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600027A")]
			[Address(RVA = "0x16FBED8", Offset = "0x16FBED8", VA = "0x16FBED8")]
			[DebuggerHidden]
			public <_StartWhenDone>d__280(int <>1__state)
			{
			}

			[Token(Token = "0x600027B")]
			[Address(RVA = "0x16FBF04", Offset = "0x16FBF04", VA = "0x16FBF04", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600027C")]
			[Address(RVA = "0x16FBF08", Offset = "0x16FBF08", VA = "0x16FBF08", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600027E")]
			[Address(RVA = "0x16FC040", Offset = "0x16FC040", VA = "0x16FC040", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000053")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE20B24", Offset = "0xE20B24")]
		private sealed class <_StartWhenDone>d__282 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40001DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40001DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x40001DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CustomYieldInstruction operation;

			[Token(Token = "0x40001E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IEnumerator<float> pausedProc;

			[Token(Token = "0x1700005B")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x6000283")]
				[Address(RVA = "0x16FC268", Offset = "0x16FC268", VA = "0x16FC268", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x1700005C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000285")]
				[Address(RVA = "0x16FC2D0", Offset = "0x16FC2D0", VA = "0x16FC2D0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000280")]
			[Address(RVA = "0x16FC104", Offset = "0x16FC104", VA = "0x16FC104")]
			[DebuggerHidden]
			public <_StartWhenDone>d__282(int <>1__state)
			{
			}

			[Token(Token = "0x6000281")]
			[Address(RVA = "0x16FC130", Offset = "0x16FC130", VA = "0x16FC130", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000282")]
			[Address(RVA = "0x16FC134", Offset = "0x16FC134", VA = "0x16FC134", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000284")]
			[Address(RVA = "0x16FC270", Offset = "0x16FC270", VA = "0x16FC270", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000054")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE20B34", Offset = "0xE20B34")]
		private sealed class <_StartWhenDone>d__287 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40001E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40001E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x40001E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Func<bool> evaluatorFunc;

			[Token(Token = "0x40001E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool continueOn;

			[Token(Token = "0x40001E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IEnumerator<float> pausedProc;

			[Token(Token = "0x1700005D")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x6000289")]
				[Address(RVA = "0x16FC4AC", Offset = "0x16FC4AC", VA = "0x16FC4AC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x1700005E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600028B")]
				[Address(RVA = "0x16FC514", Offset = "0x16FC514", VA = "0x16FC514", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000286")]
			[Address(RVA = "0x16FC334", Offset = "0x16FC334", VA = "0x16FC334")]
			[DebuggerHidden]
			public <_StartWhenDone>d__287(int <>1__state)
			{
			}

			[Token(Token = "0x6000287")]
			[Address(RVA = "0x16FC360", Offset = "0x16FC360", VA = "0x16FC360", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000288")]
			[Address(RVA = "0x16FC364", Offset = "0x16FC364", VA = "0x16FC364", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600028A")]
			[Address(RVA = "0x16FC4B4", Offset = "0x16FC4B4", VA = "0x16FC4B4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000055")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE20B44", Offset = "0xE20B44")]
		private sealed class <_InjectDelay>d__288 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40001E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40001E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x40001E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Timing <>4__this;

			[Token(Token = "0x40001E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float waitTime;

			[Token(Token = "0x40001EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IEnumerator<float> proc;

			[Token(Token = "0x1700005F")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x600028F")]
				[Address(RVA = "0x16FB990", Offset = "0x16FB990", VA = "0x16FB990", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000060")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000291")]
				[Address(RVA = "0x16FB9F8", Offset = "0x16FB9F8", VA = "0x16FB9F8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600028C")]
			[Address(RVA = "0x16FB82C", Offset = "0x16FB82C", VA = "0x16FB82C")]
			[DebuggerHidden]
			public <_InjectDelay>d__288(int <>1__state)
			{
			}

			[Token(Token = "0x600028D")]
			[Address(RVA = "0x16FB858", Offset = "0x16FB858", VA = "0x16FB858", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600028E")]
			[Address(RVA = "0x16FB85C", Offset = "0x16FB85C", VA = "0x16FB85C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000290")]
			[Address(RVA = "0x16FB998", Offset = "0x16FB998", VA = "0x16FB998", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000056")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE20B54", Offset = "0xE20B54")]
		private sealed class <_DelayedCall>d__313 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40001EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40001EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x40001ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Timing <>4__this;

			[Token(Token = "0x40001EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x40001EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameObject cancelWith;

			[Token(Token = "0x40001F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action action;

			[Token(Token = "0x17000061")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x6000295")]
				[Address(RVA = "0x16FAD6C", Offset = "0x16FAD6C", VA = "0x16FAD6C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000062")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000297")]
				[Address(RVA = "0x16FADD4", Offset = "0x16FADD4", VA = "0x16FADD4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000292")]
			[Address(RVA = "0x16FAC64", Offset = "0x16FAC64", VA = "0x16FAC64")]
			[DebuggerHidden]
			public <_DelayedCall>d__313(int <>1__state)
			{
			}

			[Token(Token = "0x6000293")]
			[Address(RVA = "0x16FAC90", Offset = "0x16FAC90", VA = "0x16FAC90", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000294")]
			[Address(RVA = "0x16FAC94", Offset = "0x16FAC94", VA = "0x16FAC94", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000296")]
			[Address(RVA = "0x16FAD74", Offset = "0x16FAD74", VA = "0x16FAD74", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000057")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE20B64", Offset = "0xE20B64")]
		private sealed class <_WatchCall>d__334 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40001F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40001F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x40001F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Timing <>4__this;

			[Token(Token = "0x40001F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float timeframe;

			[Token(Token = "0x40001F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public CoroutineHandle handle;

			[Token(Token = "0x40001F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action onDone;

			[Token(Token = "0x40001F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GameObject gObject;

			[Token(Token = "0x17000063")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x600029B")]
				[Address(RVA = "0x16FC698", Offset = "0x16FC698", VA = "0x16FC698", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000064")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600029D")]
				[Address(RVA = "0x16FC700", Offset = "0x16FC700", VA = "0x16FC700", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000298")]
			[Address(RVA = "0x16FC578", Offset = "0x16FC578", VA = "0x16FC578")]
			[DebuggerHidden]
			public <_WatchCall>d__334(int <>1__state)
			{
			}

			[Token(Token = "0x6000299")]
			[Address(RVA = "0x16FC5A4", Offset = "0x16FC5A4", VA = "0x16FC5A4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600029A")]
			[Address(RVA = "0x16FC5A8", Offset = "0x16FC5A8", VA = "0x16FC5A8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600029C")]
			[Address(RVA = "0x16FC6A0", Offset = "0x16FC6A0", VA = "0x16FC6A0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000058")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE20B74", Offset = "0xE20B74")]
		private sealed class <_CallContinuously>d__335 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40001F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40001F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x40001FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Timing <>4__this;

			[Token(Token = "0x40001FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float period;

			[Token(Token = "0x40001FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameObject gObject;

			[Token(Token = "0x40001FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action action;

			[Token(Token = "0x17000065")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x60002A1")]
				[Address(RVA = "0x16FAB98", Offset = "0x16FAB98", VA = "0x16FAB98", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000066")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60002A3")]
				[Address(RVA = "0x16FAC00", Offset = "0x16FAC00", VA = "0x16FAC00", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600029E")]
			[Address(RVA = "0x16FAA28", Offset = "0x16FAA28", VA = "0x16FAA28")]
			[DebuggerHidden]
			public <_CallContinuously>d__335(int <>1__state)
			{
			}

			[Token(Token = "0x600029F")]
			[Address(RVA = "0x16FAA54", Offset = "0x16FAA54", VA = "0x16FAA54", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60002A0")]
			[Address(RVA = "0x16FAA58", Offset = "0x16FAA58", VA = "0x16FAA58", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60002A2")]
			[Address(RVA = "0x16FABA0", Offset = "0x16FABA0", VA = "0x16FABA0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000059")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE20B84", Offset = "0xE20B84")]
		private sealed class <_WatchCall>d__352<T> : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40001FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x40001FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private float <>2__current;

			[Token(Token = "0x4000200")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Timing <>4__this;

			[Token(Token = "0x4000201")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float timeframe;

			[Token(Token = "0x4000202")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CoroutineHandle handle;

			[Token(Token = "0x4000203")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T> onDone;

			[Token(Token = "0x4000204")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject gObject;

			[Token(Token = "0x4000205")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T reference;

			[Token(Token = "0x17000067")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x60002A7")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000068")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60002A9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60002A4")]
			[DebuggerHidden]
			public <_WatchCall>d__352(int <>1__state)
			{
			}

			[Token(Token = "0x60002A5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60002A6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60002A8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200005A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE20B94", Offset = "0xE20B94")]
		private sealed class <_CallContinuously>d__353<T> : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000206")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4000207")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private float <>2__current;

			[Token(Token = "0x4000208")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Timing <>4__this;

			[Token(Token = "0x4000209")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float period;

			[Token(Token = "0x400020A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject gObject;

			[Token(Token = "0x400020B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T> action;

			[Token(Token = "0x400020C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T reference;

			[Token(Token = "0x17000069")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x60002AD")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x1700006A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60002AF")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60002AA")]
			[DebuggerHidden]
			public <_CallContinuously>d__353(int <>1__state)
			{
			}

			[Token(Token = "0x60002AB")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60002AC")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60002AE")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE224AC", Offset = "0xE224AC")]
		public float TimeBetweenSlowUpdateCalls;

		[Token(Token = "0x4000163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE224E4", Offset = "0xE224E4")]
		public DebugInfoType ProfilerDebugAmount;

		[Token(Token = "0x4000164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2251C", Offset = "0xE2251C")]
		public bool AutoTriggerManualTimeframe;

		[Token(Token = "0x4000165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE22554", Offset = "0xE22554")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE22554", Offset = "0xE22554")]
		public int UpdateCoroutines;

		[Token(Token = "0x4000166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE225A4", Offset = "0xE225A4")]
		public int FixedUpdateCoroutines;

		[Token(Token = "0x4000167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE225DC", Offset = "0xE225DC")]
		public int LateUpdateCoroutines;

		[Token(Token = "0x4000168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE22614", Offset = "0xE22614")]
		public int SlowUpdateCoroutines;

		[Token(Token = "0x4000169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2264C", Offset = "0xE2264C")]
		public int RealtimeUpdateCoroutines;

		[Token(Token = "0x400016A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE22684", Offset = "0xE22684")]
		public int EditorUpdateCoroutines;

		[Token(Token = "0x400016B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE226BC", Offset = "0xE226BC")]
		public int EditorSlowUpdateCoroutines;

		[Token(Token = "0x400016C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE226F4", Offset = "0xE226F4")]
		public int EndOfFrameCoroutines;

		[Token(Token = "0x400016D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2272C", Offset = "0xE2272C")]
		public int ManualTimeframeCoroutines;

		[NonSerialized]
		[Token(Token = "0x400016E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float localTime;

		[NonSerialized]
		[Token(Token = "0x400016F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float deltaTime;

		[Token(Token = "0x4000170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Func<float, float> SetManualTimeframeTime;

		[Token(Token = "0x4000171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Func<IEnumerator<float>, CoroutineHandle, IEnumerator<float>> ReplacementFunction;

		[Token(Token = "0x4000173")]
		public const float WaitForOneFrame = float.NegativeInfinity;

		[Token(Token = "0x4000174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE22774", Offset = "0xE22774")]
		private static Thread <MainThread>k__BackingField;

		[Token(Token = "0x4000175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE22784", Offset = "0xE22784")]
		private CoroutineHandle <currentCoroutine>k__BackingField;

		[Token(Token = "0x4000176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static object _tmpRef;

		[Token(Token = "0x4000177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static int _tmpInt;

		[Token(Token = "0x4000178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private static bool _tmpBool;

		[Token(Token = "0x4000179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Segment _tmpSegment;

		[Token(Token = "0x400017A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private static CoroutineHandle _tmpHandle;

		[Token(Token = "0x400017B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int _currentUpdateFrame;

		[Token(Token = "0x400017C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int _currentLateUpdateFrame;

		[Token(Token = "0x400017D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int _currentSlowUpdateFrame;

		[Token(Token = "0x400017E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int _currentRealtimeUpdateFrame;

		[Token(Token = "0x400017F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int _currentEndOfFrameFrame;

		[Token(Token = "0x4000180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int _nextUpdateProcessSlot;

		[Token(Token = "0x4000181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int _nextLateUpdateProcessSlot;

		[Token(Token = "0x4000182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int _nextFixedUpdateProcessSlot;

		[Token(Token = "0x4000183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int _nextSlowUpdateProcessSlot;

		[Token(Token = "0x4000184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _nextRealtimeUpdateProcessSlot;

		[Token(Token = "0x4000185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int _nextEditorUpdateProcessSlot;

		[Token(Token = "0x4000186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _nextEditorSlowUpdateProcessSlot;

		[Token(Token = "0x4000187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private int _nextEndOfFrameProcessSlot;

		[Token(Token = "0x4000188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _nextManualTimeframeProcessSlot;

		[Token(Token = "0x4000189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private int _lastUpdateProcessSlot;

		[Token(Token = "0x400018A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int _lastLateUpdateProcessSlot;

		[Token(Token = "0x400018B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int _lastFixedUpdateProcessSlot;

		[Token(Token = "0x400018C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private int _lastSlowUpdateProcessSlot;

		[Token(Token = "0x400018D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private int _lastRealtimeUpdateProcessSlot;

		[Token(Token = "0x400018E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int _lastEndOfFrameProcessSlot;

		[Token(Token = "0x400018F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private int _lastManualTimeframeProcessSlot;

		[Token(Token = "0x4000190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float _lastUpdateTime;

		[Token(Token = "0x4000191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float _lastLateUpdateTime;

		[Token(Token = "0x4000192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float _lastFixedUpdateTime;

		[Token(Token = "0x4000193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private float _lastSlowUpdateTime;

		[Token(Token = "0x4000194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float _lastRealtimeUpdateTime;

		[Token(Token = "0x4000195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float _lastEndOfFrameTime;

		[Token(Token = "0x4000196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float _lastManualTimeframeTime;

		[Token(Token = "0x4000197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private float _lastSlowUpdateDeltaTime;

		[Token(Token = "0x4000198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float _lastEditorUpdateDeltaTime;

		[Token(Token = "0x4000199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float _lastEditorSlowUpdateDeltaTime;

		[Token(Token = "0x400019A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private float _lastManualTimeframeDeltaTime;

		[Token(Token = "0x400019B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private ushort _framesSinceUpdate;

		[Token(Token = "0x400019C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDE")]
		private ushort _expansions;

		[Token(Token = "0x400019D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		[HideInInspector]
		private byte _instanceID;

		[Token(Token = "0x400019E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool _EOFPumpRan;

		[Token(Token = "0x400019F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static readonly Dictionary<CoroutineHandle, HashSet<CoroutineHandle>> Links;

		[Token(Token = "0x40001A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static readonly WaitForEndOfFrame EofWaitObject;

		[Token(Token = "0x40001A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private readonly Dictionary<CoroutineHandle, HashSet<CoroutineHandle>> _waitingTriggers;

		[Token(Token = "0x40001A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private readonly HashSet<CoroutineHandle> _allWaiting;

		[Token(Token = "0x40001A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private readonly Dictionary<CoroutineHandle, ProcessIndex> _handleToIndex;

		[Token(Token = "0x40001A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private readonly Dictionary<ProcessIndex, CoroutineHandle> _indexToHandle;

		[Token(Token = "0x40001A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private readonly Dictionary<CoroutineHandle, string> _processTags;

		[Token(Token = "0x40001A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private readonly Dictionary<string, HashSet<CoroutineHandle>> _taggedProcesses;

		[Token(Token = "0x40001A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private readonly Dictionary<CoroutineHandle, int> _processLayers;

		[Token(Token = "0x40001A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private readonly Dictionary<int, HashSet<CoroutineHandle>> _layeredProcesses;

		[Token(Token = "0x40001A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private IEnumerator<float>[] UpdateProcesses;

		[Token(Token = "0x40001AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private IEnumerator<float>[] LateUpdateProcesses;

		[Token(Token = "0x40001AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private IEnumerator<float>[] FixedUpdateProcesses;

		[Token(Token = "0x40001AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private IEnumerator<float>[] SlowUpdateProcesses;

		[Token(Token = "0x40001AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private IEnumerator<float>[] RealtimeUpdateProcesses;

		[Token(Token = "0x40001AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private IEnumerator<float>[] EditorUpdateProcesses;

		[Token(Token = "0x40001AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private IEnumerator<float>[] EditorSlowUpdateProcesses;

		[Token(Token = "0x40001B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private IEnumerator<float>[] EndOfFrameProcesses;

		[Token(Token = "0x40001B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private IEnumerator<float>[] ManualTimeframeProcesses;

		[Token(Token = "0x40001B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private bool[] UpdatePaused;

		[Token(Token = "0x40001B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private bool[] LateUpdatePaused;

		[Token(Token = "0x40001B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private bool[] FixedUpdatePaused;

		[Token(Token = "0x40001B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private bool[] SlowUpdatePaused;

		[Token(Token = "0x40001B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private bool[] RealtimeUpdatePaused;

		[Token(Token = "0x40001B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private bool[] EditorUpdatePaused;

		[Token(Token = "0x40001B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private bool[] EditorSlowUpdatePaused;

		[Token(Token = "0x40001B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private bool[] EndOfFramePaused;

		[Token(Token = "0x40001BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private bool[] ManualTimeframePaused;

		[Token(Token = "0x40001BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private bool[] UpdateHeld;

		[Token(Token = "0x40001BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private bool[] LateUpdateHeld;

		[Token(Token = "0x40001BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private bool[] FixedUpdateHeld;

		[Token(Token = "0x40001BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private bool[] SlowUpdateHeld;

		[Token(Token = "0x40001BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private bool[] RealtimeUpdateHeld;

		[Token(Token = "0x40001C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private bool[] EditorUpdateHeld;

		[Token(Token = "0x40001C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private bool[] EditorSlowUpdateHeld;

		[Token(Token = "0x40001C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private bool[] EndOfFrameHeld;

		[Token(Token = "0x40001C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private bool[] ManualTimeframeHeld;

		[Token(Token = "0x40001C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private CoroutineHandle _eofWatcherHandle;

		[Token(Token = "0x40001C5")]
		private const ushort FramesUntilMaintenance = 64;

		[Token(Token = "0x40001C6")]
		private const int ProcessArrayChunkSize = 64;

		[Token(Token = "0x40001C7")]
		private const int InitialBufferSizeLarge = 256;

		[Token(Token = "0x40001C8")]
		private const int InitialBufferSizeMedium = 64;

		[Token(Token = "0x40001C9")]
		private const int InitialBufferSizeSmall = 8;

		[Token(Token = "0x40001CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static Timing[] ActiveInstances;

		[Token(Token = "0x40001CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static Timing _instance;

		[Token(Token = "0x1700004D")]
		public static float LocalTime
		{
			[Token(Token = "0x6000168")]
			[Address(RVA = "0xF0E718", Offset = "0xF0E718", VA = "0xF0E718")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700004E")]
		public static float DeltaTime
		{
			[Token(Token = "0x6000169")]
			[Address(RVA = "0xF0F29C", Offset = "0xF0F29C", VA = "0xF0F29C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700004F")]
		public static Thread MainThread
		{
			[Token(Token = "0x600016C")]
			[Address(RVA = "0xF122DC", Offset = "0xF122DC", VA = "0xF122DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2B768", Offset = "0xE2B768")]
			get
			{
				return null;
			}
			[Token(Token = "0x600016D")]
			[Address(RVA = "0xF12344", Offset = "0xF12344", VA = "0xF12344")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2B778", Offset = "0xE2B778")]
			private set
			{
			}
		}

		[Token(Token = "0x17000050")]
		public static CoroutineHandle CurrentCoroutine
		{
			[Token(Token = "0x600016E")]
			[Address(RVA = "0xF123B4", Offset = "0xF123B4", VA = "0xF123B4")]
			get
			{
				return default(CoroutineHandle);
			}
		}

		[Token(Token = "0x17000051")]
		public CoroutineHandle currentCoroutine
		{
			[Token(Token = "0x600016F")]
			[Address(RVA = "0xF12550", Offset = "0xF12550", VA = "0xF12550")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2B788", Offset = "0xE2B788")]
			get
			{
				return default(CoroutineHandle);
			}
			[Token(Token = "0x6000170")]
			[Address(RVA = "0xF12558", Offset = "0xF12558", VA = "0xF12558")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2B798", Offset = "0xE2B798")]
			private set
			{
			}
		}

		[Token(Token = "0x17000052")]
		public static Timing Instance
		{
			[Token(Token = "0x6000171")]
			[Address(RVA = "0xF12098", Offset = "0xF12098", VA = "0xF12098")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000172")]
			[Address(RVA = "0xF127C8", Offset = "0xF127C8", VA = "0xF127C8")]
			set
			{
			}
		}

		[Token(Token = "0x14000001")]
		public static event Action OnPreExecute
		{
			[Token(Token = "0x600016A")]
			[Address(RVA = "0xF0F778", Offset = "0xF0F778", VA = "0xF0F778")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2B748", Offset = "0xE2B748")]
			add
			{
			}
			[Token(Token = "0x600016B")]
			[Address(RVA = "0xF0FC90", Offset = "0xF0FC90", VA = "0xF0FC90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2B758", Offset = "0xE2B758")]
			remove
			{
			}
		}

		[Token(Token = "0x6000173")]
		[Address(RVA = "0xF12838", Offset = "0xF12838", VA = "0xF12838")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000174")]
		[Address(RVA = "0xF1291C", Offset = "0xF1291C", VA = "0xF1291C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000175")]
		[Address(RVA = "0xF12D64", Offset = "0xF12D64", VA = "0xF12D64")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000176")]
		[Address(RVA = "0xF12560", Offset = "0xF12560", VA = "0xF12560")]
		private void InitializeInstanceID()
		{
		}

		[Token(Token = "0x6000177")]
		[Address(RVA = "0xF12E4C", Offset = "0xF12E4C", VA = "0xF12E4C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000178")]
		[Address(RVA = "0xF16778", Offset = "0xF16778", VA = "0xF16778")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000179")]
		[Address(RVA = "0xF16EAC", Offset = "0xF16EAC", VA = "0xF16EAC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600017A")]
		[Address(RVA = "0xF14764", Offset = "0xF14764", VA = "0xF14764")]
		public void TriggerManualTimeframeUpdate()
		{
		}

		[Token(Token = "0x600017B")]
		[Address(RVA = "0xF12A8C", Offset = "0xF12A8C", VA = "0xF12A8C")]
		private bool OnEditorStart()
		{
			return default(bool);
		}

		[Token(Token = "0x600017C")]
		[Address(RVA = "0xF12A94", Offset = "0xF12A94", VA = "0xF12A94")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE2B7A8", Offset = "0xE2B7A8")]
		private IEnumerator<float> _EOFPumpWatcher()
		{
			return null;
		}

		[Token(Token = "0x600017D")]
		[Address(RVA = "0xF175E0", Offset = "0xF175E0", VA = "0xF175E0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE2B80C", Offset = "0xE2B80C")]
		private IEnumerator _EOFPump()
		{
			return null;
		}

		[Token(Token = "0x600017E")]
		[Address(RVA = "0xF14EBC", Offset = "0xF14EBC", VA = "0xF14EBC")]
		private void RemoveUnused()
		{
		}

		[Token(Token = "0x600017F")]
		[Address(RVA = "0xF17AF4", Offset = "0xF17AF4", VA = "0xF17AF4")]
		private void EditorRemoveUnused()
		{
		}

		[Token(Token = "0x6000180")]
		[Address(RVA = "0xF0DA5C", Offset = "0xF0DA5C", VA = "0xF0DA5C")]
		public static CoroutineHandle RunCoroutine(IEnumerator<float> coroutine)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000181")]
		[Address(RVA = "0xF1AFDC", Offset = "0xF1AFDC", VA = "0xF1AFDC")]
		public static CoroutineHandle RunCoroutine(IEnumerator<float> coroutine, GameObject gameObj)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000182")]
		[Address(RVA = "0xF1B150", Offset = "0xF1B150", VA = "0xF1B150")]
		public static CoroutineHandle RunCoroutine(IEnumerator<float> coroutine, int layer)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000183")]
		[Address(RVA = "0xF1B220", Offset = "0xF1B220", VA = "0xF1B220")]
		public static CoroutineHandle RunCoroutine(IEnumerator<float> coroutine, string tag)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000184")]
		[Address(RVA = "0xF1B2F0", Offset = "0xF1B2F0", VA = "0xF1B2F0")]
		public static CoroutineHandle RunCoroutine(IEnumerator<float> coroutine, GameObject gameObj, string tag)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000185")]
		[Address(RVA = "0xF1B470", Offset = "0xF1B470", VA = "0xF1B470")]
		public static CoroutineHandle RunCoroutine(IEnumerator<float> coroutine, int layer, string tag)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000186")]
		[Address(RVA = "0xF1B544", Offset = "0xF1B544", VA = "0xF1B544")]
		public static CoroutineHandle RunCoroutine(IEnumerator<float> coroutine, Segment segment)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000187")]
		[Address(RVA = "0xF1B614", Offset = "0xF1B614", VA = "0xF1B614")]
		public static CoroutineHandle RunCoroutine(IEnumerator<float> coroutine, Segment segment, GameObject gameObj)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000188")]
		[Address(RVA = "0xF1B794", Offset = "0xF1B794", VA = "0xF1B794")]
		public static CoroutineHandle RunCoroutine(IEnumerator<float> coroutine, Segment segment, int layer)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000189")]
		[Address(RVA = "0xF1B868", Offset = "0xF1B868", VA = "0xF1B868")]
		public static CoroutineHandle RunCoroutine(IEnumerator<float> coroutine, Segment segment, string tag)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x600018A")]
		[Address(RVA = "0xF1B93C", Offset = "0xF1B93C", VA = "0xF1B93C")]
		public static CoroutineHandle RunCoroutine(IEnumerator<float> coroutine, Segment segment, GameObject gameObj, string tag)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x600018B")]
		[Address(RVA = "0xF1BAC0", Offset = "0xF1BAC0", VA = "0xF1BAC0")]
		public static CoroutineHandle RunCoroutine(IEnumerator<float> coroutine, Segment segment, int layer, string tag)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x600018C")]
		[Address(RVA = "0xF1BBA0", Offset = "0xF1BBA0", VA = "0xF1BBA0")]
		public CoroutineHandle RunCoroutineOnInstance(IEnumerator<float> coroutine)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x600018D")]
		[Address(RVA = "0xF1BC0C", Offset = "0xF1BC0C", VA = "0xF1BC0C")]
		public CoroutineHandle RunCoroutineOnInstance(IEnumerator<float> coroutine, GameObject gameObj)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x600018E")]
		[Address(RVA = "0xF1BD34", Offset = "0xF1BD34", VA = "0xF1BD34")]
		public CoroutineHandle RunCoroutineOnInstance(IEnumerator<float> coroutine, int layer)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x600018F")]
		[Address(RVA = "0xF1BDAC", Offset = "0xF1BDAC", VA = "0xF1BDAC")]
		public CoroutineHandle RunCoroutineOnInstance(IEnumerator<float> coroutine, string tag)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000190")]
		[Address(RVA = "0xF1BE24", Offset = "0xF1BE24", VA = "0xF1BE24")]
		public CoroutineHandle RunCoroutineOnInstance(IEnumerator<float> coroutine, GameObject gameObj, string tag)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000191")]
		[Address(RVA = "0xF1BF50", Offset = "0xF1BF50", VA = "0xF1BF50")]
		public CoroutineHandle RunCoroutineOnInstance(IEnumerator<float> coroutine, int layer, string tag)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000192")]
		[Address(RVA = "0xF1BFCC", Offset = "0xF1BFCC", VA = "0xF1BFCC")]
		public CoroutineHandle RunCoroutineOnInstance(IEnumerator<float> coroutine, Segment segment)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000193")]
		[Address(RVA = "0xF1C044", Offset = "0xF1C044", VA = "0xF1C044")]
		public CoroutineHandle RunCoroutineOnInstance(IEnumerator<float> coroutine, Segment segment, GameObject gameObj)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000194")]
		[Address(RVA = "0xF1C170", Offset = "0xF1C170", VA = "0xF1C170")]
		public CoroutineHandle RunCoroutineOnInstance(IEnumerator<float> coroutine, Segment segment, int layer)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000195")]
		[Address(RVA = "0xF1C1EC", Offset = "0xF1C1EC", VA = "0xF1C1EC")]
		public CoroutineHandle RunCoroutineOnInstance(IEnumerator<float> coroutine, Segment segment, string tag)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000196")]
		[Address(RVA = "0xF1C268", Offset = "0xF1C268", VA = "0xF1C268")]
		public CoroutineHandle RunCoroutineOnInstance(IEnumerator<float> coroutine, Segment segment, GameObject gameObj, string tag)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000197")]
		[Address(RVA = "0xF1C3A0", Offset = "0xF1C3A0", VA = "0xF1C3A0")]
		public CoroutineHandle RunCoroutineOnInstance(IEnumerator<float> coroutine, Segment segment, int layer, string tag)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000198")]
		[Address(RVA = "0xF1C428", Offset = "0xF1C428", VA = "0xF1C428")]
		public static CoroutineHandle RunCoroutineSingleton(IEnumerator<float> coroutine, CoroutineHandle handle, SingletonBehavior behaviorOnCollision)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000199")]
		[Address(RVA = "0xF1C920", Offset = "0xF1C920", VA = "0xF1C920")]
		public static CoroutineHandle RunCoroutineSingleton(IEnumerator<float> coroutine, GameObject gameObj, SingletonBehavior behaviorOnCollision)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x600019A")]
		[Address(RVA = "0xF1CA20", Offset = "0xF1CA20", VA = "0xF1CA20")]
		public static CoroutineHandle RunCoroutineSingleton(IEnumerator<float> coroutine, int layer, SingletonBehavior behaviorOnCollision)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x600019B")]
		[Address(RVA = "0xF1D740", Offset = "0xF1D740", VA = "0xF1D740")]
		public static CoroutineHandle RunCoroutineSingleton(IEnumerator<float> coroutine, string tag, SingletonBehavior behaviorOnCollision)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x600019C")]
		[Address(RVA = "0xF1DB28", Offset = "0xF1DB28", VA = "0xF1DB28")]
		public static CoroutineHandle RunCoroutineSingleton(IEnumerator<float> coroutine, GameObject gameObj, string tag, SingletonBehavior behaviorOnCollision)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x600019D")]
		[Address(RVA = "0xF1DC40", Offset = "0xF1DC40", VA = "0xF1DC40")]
		public static CoroutineHandle RunCoroutineSingleton(IEnumerator<float> coroutine, int layer, string tag, SingletonBehavior behaviorOnCollision)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x600019E")]
		[Address(RVA = "0xF1E318", Offset = "0xF1E318", VA = "0xF1E318")]
		public static CoroutineHandle RunCoroutineSingleton(IEnumerator<float> coroutine, CoroutineHandle handle, Segment segment, SingletonBehavior behaviorOnCollision)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x600019F")]
		[Address(RVA = "0xF1E4F8", Offset = "0xF1E4F8", VA = "0xF1E4F8")]
		public static CoroutineHandle RunCoroutineSingleton(IEnumerator<float> coroutine, Segment segment, GameObject gameObj, SingletonBehavior behaviorOnCollision)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x60001A0")]
		[Address(RVA = "0xF1E60C", Offset = "0xF1E60C", VA = "0xF1E60C")]
		public static CoroutineHandle RunCoroutineSingleton(IEnumerator<float> coroutine, Segment segment, int layer, SingletonBehavior behaviorOnCollision)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x60001A1")]
		[Address(RVA = "0xF1E910", Offset = "0xF1E910", VA = "0xF1E910")]
		public static CoroutineHandle RunCoroutineSingleton(IEnumerator<float> coroutine, Segment segment, string tag, SingletonBehavior behaviorOnCollision)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x60001A2")]
		[Address(RVA = "0xF1EC14", Offset = "0xF1EC14", VA = "0xF1EC14")]
		public static CoroutineHandle RunCoroutineSingleton(IEnumerator<float> coroutine, Segment segment, GameObject gameObj, string tag, SingletonBehavior behaviorOnCollision)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x60001A3")]
		[Address(RVA = "0xF1ED38", Offset = "0xF1ED38", VA = "0xF1ED38")]
		public static CoroutineHandle RunCoroutineSingleton(IEnumerator<float> coroutine, Segment segment, int layer, string tag, SingletonBehavior behaviorOnCollision)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x60001A4")]
		[Address(RVA = "0xF1F230", Offset = "0xF1F230", VA = "0xF1F230")]
		public CoroutineHandle RunCoroutineSingletonOnInstance(IEnumerator<float> coroutine, CoroutineHandle handle, SingletonBehavior behaviorOnCollision)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x60001A5")]
		[Address(RVA = "0xF1F62C", Offset = "0xF1F62C", VA = "0xF1F62C")]
		public CoroutineHandle RunCoroutineSingletonOnInstance(IEnumerator<float> coroutine, GameObject gameObj, SingletonBehavior behaviorOnCollision)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x60001A6")]
		[Address(RVA = "0xF1F6F8", Offset = "0xF1F6F8", VA = "0xF1F6F8")]
		public CoroutineHandle RunCoroutineSingletonOnInstance(IEnumerator<float> coroutine, int layer, SingletonBehavior behaviorOnCollision)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x60001A7")]
		[Address(RVA = "0xF12B10", Offset = "0xF12B10", VA = "0xF12B10")]
		public CoroutineHandle RunCoroutineSingletonOnInstance(IEnumerator<float> coroutine, string tag, SingletonBehavior behaviorOnCollision)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x60001A8")]
		[Address(RVA = "0xF1FE18", Offset = "0xF1FE18", VA = "0xF1FE18")]
		public CoroutineHandle RunCoroutineSingletonOnInstance(IEnumerator<float> coroutine, GameObject gameObj, string tag, SingletonBehavior behaviorOnCollision)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x60001A9")]
		[Address(RVA = "0xF1FEF4", Offset = "0xF1FEF4", VA = "0xF1FEF4")]
		public CoroutineHandle RunCoroutineSingletonOnInstance(IEnumerator<float> coroutine, int layer, string tag, SingletonBehavior behaviorOnCollision)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x60001AA")]
		[Address(RVA = "0xF20994", Offset = "0xF20994", VA = "0xF20994")]
		public CoroutineHandle RunCoroutineSingletonOnInstance(IEnumerator<float> coroutine, Segment segment, GameObject gameObj, SingletonBehavior behaviorOnCollision)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x60001AB")]
		[Address(RVA = "0xF20A6C", Offset = "0xF20A6C", VA = "0xF20A6C")]
		public CoroutineHandle RunCoroutineSingletonOnInstance(IEnumerator<float> coroutine, Segment segment, int layer, SingletonBehavior behaviorOnCollision)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x60001AC")]
		[Address(RVA = "0xF20CCC", Offset = "0xF20CCC", VA = "0xF20CCC")]
		public CoroutineHandle RunCoroutineSingletonOnInstance(IEnumerator<float> coroutine, Segment segment, string tag, SingletonBehavior behaviorOnCollision)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x60001AD")]
		[Address(RVA = "0xF20F2C", Offset = "0xF20F2C", VA = "0xF20F2C")]
		public CoroutineHandle RunCoroutineSingletonOnInstance(IEnumerator<float> coroutine, Segment segment, GameObject gameObj, string tag, SingletonBehavior behaviorOnCollision)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x60001AE")]
		[Address(RVA = "0xF2101C", Offset = "0xF2101C", VA = "0xF2101C")]
		public CoroutineHandle RunCoroutineSingletonOnInstance(IEnumerator<float> coroutine, Segment segment, int layer, string tag, SingletonBehavior behaviorOnCollision)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x60001AF")]
		[Address(RVA = "0xF182F4", Offset = "0xF182F4", VA = "0xF182F4")]
		private CoroutineHandle RunCoroutineInternal(IEnumerator<float> coroutine, Segment segment, int layer, bool layerHasValue, string tag, CoroutineHandle handle, bool prewarm)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x60001B0")]
		[Address(RVA = "0xF21610", Offset = "0xF21610", VA = "0xF21610")]
		public static int KillCoroutines()
		{
			return default(int);
		}

		[Token(Token = "0x60001B1")]
		[Address(RVA = "0xF216EC", Offset = "0xF216EC", VA = "0xF216EC")]
		public int KillCoroutinesOnInstance()
		{
			return default(int);
		}

		[Token(Token = "0x60001B2")]
		[Address(RVA = "0xF0D500", Offset = "0xF0D500", VA = "0xF0D500")]
		public static int KillCoroutines(CoroutineHandle handle)
		{
			return default(int);
		}

		[Token(Token = "0x60001B3")]
		[Address(RVA = "0xF21BD4", Offset = "0xF21BD4", VA = "0xF21BD4")]
		public static int KillCoroutines(params CoroutineHandle[] handles)
		{
			return default(int);
		}

		[Token(Token = "0x60001B4")]
		[Address(RVA = "0xF14574", Offset = "0xF14574", VA = "0xF14574")]
		public int KillCoroutinesOnInstance(CoroutineHandle handle)
		{
			return default(int);
		}

		[Token(Token = "0x60001B5")]
		[Address(RVA = "0xF21DD0", Offset = "0xF21DD0", VA = "0xF21DD0")]
		public static int KillCoroutines(GameObject gameObj)
		{
			return default(int);
		}

		[Token(Token = "0x60001B6")]
		[Address(RVA = "0xF21ED4", Offset = "0xF21ED4", VA = "0xF21ED4")]
		public int KillCoroutinesOnInstance(GameObject gameObj)
		{
			return default(int);
		}

		[Token(Token = "0x60001B7")]
		[Address(RVA = "0xF1CD18", Offset = "0xF1CD18", VA = "0xF1CD18")]
		public static int KillCoroutines(int layer)
		{
			return default(int);
		}

		[Token(Token = "0x60001B8")]
		[Address(RVA = "0xF1F94C", Offset = "0xF1F94C", VA = "0xF1F94C")]
		public int KillCoroutinesOnInstance(int layer)
		{
			return default(int);
		}

		[Token(Token = "0x60001B9")]
		[Address(RVA = "0xF1DA38", Offset = "0xF1DA38", VA = "0xF1DA38")]
		public static int KillCoroutines(string tag)
		{
			return default(int);
		}

		[Token(Token = "0x60001BA")]
		[Address(RVA = "0xF1FBA0", Offset = "0xF1FBA0", VA = "0xF1FBA0")]
		public int KillCoroutinesOnInstance(string tag)
		{
			return default(int);
		}

		[Token(Token = "0x60001BB")]
		[Address(RVA = "0xF22028", Offset = "0xF22028", VA = "0xF22028")]
		public static int KillCoroutines(GameObject gameObj, string tag)
		{
			return default(int);
		}

		[Token(Token = "0x60001BC")]
		[Address(RVA = "0xF22134", Offset = "0xF22134", VA = "0xF22134")]
		public int KillCoroutinesOnInstance(GameObject gameObj, string tag)
		{
			return default(int);
		}

		[Token(Token = "0x60001BD")]
		[Address(RVA = "0xF1E128", Offset = "0xF1E128", VA = "0xF1E128")]
		public static int KillCoroutines(int layer, string tag)
		{
			return default(int);
		}

		[Token(Token = "0x60001BE")]
		[Address(RVA = "0xF20278", Offset = "0xF20278", VA = "0xF20278")]
		public int KillCoroutinesOnInstance(int layer, string tag)
		{
			return default(int);
		}

		[Token(Token = "0x60001BF")]
		[Address(RVA = "0xF10EAC", Offset = "0xF10EAC", VA = "0xF10EAC")]
		public static Timing GetInstance(byte ID)
		{
			return null;
		}

		[Token(Token = "0x60001C0")]
		[Address(RVA = "0xF22174", Offset = "0xF22174", VA = "0xF22174")]
		public static float WaitForSeconds(float waitTime)
		{
			return default(float);
		}

		[Token(Token = "0x60001C1")]
		[Address(RVA = "0xF22200", Offset = "0xF22200", VA = "0xF22200")]
		public float WaitForSecondsOnInstance(float waitTime)
		{
			return default(float);
		}

		[Token(Token = "0x60001C2")]
		[Address(RVA = "0xF14278", Offset = "0xF14278", VA = "0xF14278")]
		private bool UpdateTimeValues(Segment segment)
		{
			return default(bool);
		}

		[Token(Token = "0x60001C3")]
		[Address(RVA = "0xF22244", Offset = "0xF22244", VA = "0xF22244")]
		private float GetSegmentTime(Segment segment)
		{
			return default(float);
		}

		[Token(Token = "0x60001C4")]
		[Address(RVA = "0xF22330", Offset = "0xF22330", VA = "0xF22330")]
		public static int PauseCoroutines()
		{
			return default(int);
		}

		[Token(Token = "0x60001C5")]
		[Address(RVA = "0xF2240C", Offset = "0xF2240C", VA = "0xF2240C")]
		public int PauseCoroutinesOnInstance()
		{
			return default(int);
		}

		[Token(Token = "0x60001C6")]
		[Address(RVA = "0xF23730", Offset = "0xF23730", VA = "0xF23730")]
		public int PauseCoroutinesOnInstance(CoroutineHandle handle)
		{
			return default(int);
		}

		[Token(Token = "0x60001C7")]
		[Address(RVA = "0xF0D6AC", Offset = "0xF0D6AC", VA = "0xF0D6AC")]
		public static int PauseCoroutines(CoroutineHandle handle)
		{
			return default(int);
		}

		[Token(Token = "0x60001C8")]
		[Address(RVA = "0xF246D4", Offset = "0xF246D4", VA = "0xF246D4")]
		public static int PauseCoroutines(params CoroutineHandle[] handles)
		{
			return default(int);
		}

		[Token(Token = "0x60001C9")]
		[Address(RVA = "0xF2485C", Offset = "0xF2485C", VA = "0xF2485C")]
		public static int PauseCoroutines(GameObject gameObj)
		{
			return default(int);
		}

		[Token(Token = "0x60001CA")]
		[Address(RVA = "0xF2494C", Offset = "0xF2494C", VA = "0xF2494C")]
		public int PauseCoroutinesOnInstance(GameObject gameObj)
		{
			return default(int);
		}

		[Token(Token = "0x60001CB")]
		[Address(RVA = "0xF24CC8", Offset = "0xF24CC8", VA = "0xF24CC8")]
		public static int PauseCoroutines(int layer)
		{
			return default(int);
		}

		[Token(Token = "0x60001CC")]
		[Address(RVA = "0xF249FC", Offset = "0xF249FC", VA = "0xF249FC")]
		public int PauseCoroutinesOnInstance(int layer)
		{
			return default(int);
		}

		[Token(Token = "0x60001CD")]
		[Address(RVA = "0xF24DB8", Offset = "0xF24DB8", VA = "0xF24DB8")]
		public static int PauseCoroutines(string tag)
		{
			return default(int);
		}

		[Token(Token = "0x60001CE")]
		[Address(RVA = "0xF24EA8", Offset = "0xF24EA8", VA = "0xF24EA8")]
		public int PauseCoroutinesOnInstance(string tag)
		{
			return default(int);
		}

		[Token(Token = "0x60001CF")]
		[Address(RVA = "0xF25178", Offset = "0xF25178", VA = "0xF25178")]
		public static int PauseCoroutines(GameObject gameObj, string tag)
		{
			return default(int);
		}

		[Token(Token = "0x60001D0")]
		[Address(RVA = "0xF25624", Offset = "0xF25624", VA = "0xF25624")]
		public int PauseCoroutinesOnInstance(GameObject gameObj, string tag)
		{
			return default(int);
		}

		[Token(Token = "0x60001D1")]
		[Address(RVA = "0xF256DC", Offset = "0xF256DC", VA = "0xF256DC")]
		public static int PauseCoroutines(int layer, string tag)
		{
			return default(int);
		}

		[Token(Token = "0x60001D2")]
		[Address(RVA = "0xF25284", Offset = "0xF25284", VA = "0xF25284")]
		public int PauseCoroutinesOnInstance(int layer, string tag)
		{
			return default(int);
		}

		[Token(Token = "0x60001D3")]
		[Address(RVA = "0xF257D4", Offset = "0xF257D4", VA = "0xF257D4")]
		public static int ResumeCoroutines()
		{
			return default(int);
		}

		[Token(Token = "0x60001D4")]
		[Address(RVA = "0xF258B0", Offset = "0xF258B0", VA = "0xF258B0")]
		public int ResumeCoroutinesOnInstance()
		{
			return default(int);
		}

		[Token(Token = "0x60001D5")]
		[Address(RVA = "0xF0D79C", Offset = "0xF0D79C", VA = "0xF0D79C")]
		public static int ResumeCoroutines(CoroutineHandle handle)
		{
			return default(int);
		}

		[Token(Token = "0x60001D6")]
		[Address(RVA = "0xF25DE4", Offset = "0xF25DE4", VA = "0xF25DE4")]
		public static int ResumeCoroutines(params CoroutineHandle[] handles)
		{
			return default(int);
		}

		[Token(Token = "0x60001D7")]
		[Address(RVA = "0xF1F3DC", Offset = "0xF1F3DC", VA = "0xF1F3DC")]
		public int ResumeCoroutinesOnInstance(CoroutineHandle handle)
		{
			return default(int);
		}

		[Token(Token = "0x60001D8")]
		[Address(RVA = "0xF1CE08", Offset = "0xF1CE08", VA = "0xF1CE08")]
		public int ResumeCoroutinesOnInstance(IEnumerable<CoroutineHandle> handles)
		{
			return default(int);
		}

		[Token(Token = "0x60001D9")]
		[Address(RVA = "0xF25F6C", Offset = "0xF25F6C", VA = "0xF25F6C")]
		public static int ResumeCoroutines(GameObject gameObj)
		{
			return default(int);
		}

		[Token(Token = "0x60001DA")]
		[Address(RVA = "0xF26338", Offset = "0xF26338", VA = "0xF26338")]
		public int ResumeCoroutinesOnInstance(GameObject gameObj)
		{
			return default(int);
		}

		[Token(Token = "0x60001DB")]
		[Address(RVA = "0xF263E8", Offset = "0xF263E8", VA = "0xF263E8")]
		public static int ResumeCoroutines(int layer)
		{
			return default(int);
		}

		[Token(Token = "0x60001DC")]
		[Address(RVA = "0xF26070", Offset = "0xF26070", VA = "0xF26070")]
		public int ResumeCoroutinesOnInstance(int layer)
		{
			return default(int);
		}

		[Token(Token = "0x60001DD")]
		[Address(RVA = "0xF264D8", Offset = "0xF264D8", VA = "0xF264D8")]
		public static int ResumeCoroutines(string tag)
		{
			return default(int);
		}

		[Token(Token = "0x60001DE")]
		[Address(RVA = "0xF265C8", Offset = "0xF265C8", VA = "0xF265C8")]
		public int ResumeCoroutinesOnInstance(string tag)
		{
			return default(int);
		}

		[Token(Token = "0x60001DF")]
		[Address(RVA = "0xF26894", Offset = "0xF26894", VA = "0xF26894")]
		public static int ResumeCoroutines(GameObject gameObj, string tag)
		{
			return default(int);
		}

		[Token(Token = "0x60001E0")]
		[Address(RVA = "0xF269A0", Offset = "0xF269A0", VA = "0xF269A0")]
		public int ResumeCoroutinesOnInstance(GameObject gameObj, string tag)
		{
			return default(int);
		}

		[Token(Token = "0x60001E1")]
		[Address(RVA = "0xF1E220", Offset = "0xF1E220", VA = "0xF1E220")]
		public static int ResumeCoroutines(int layer, string tag)
		{
			return default(int);
		}

		[Token(Token = "0x60001E2")]
		[Address(RVA = "0xF20640", Offset = "0xF20640", VA = "0xF20640")]
		public int ResumeCoroutinesOnInstance(int layer, string tag)
		{
			return default(int);
		}

		[Token(Token = "0x60001E3")]
		[Address(RVA = "0xF0CE04", Offset = "0xF0CE04", VA = "0xF0CE04")]
		public static string GetTag(CoroutineHandle handle)
		{
			return null;
		}

		[Token(Token = "0x60001E4")]
		[Address(RVA = "0xF0CF24", Offset = "0xF0CF24", VA = "0xF0CF24")]
		public static int? GetLayer(CoroutineHandle handle)
		{
			return null;
		}

		[Token(Token = "0x60001E5")]
		[Address(RVA = "0xF0D068", Offset = "0xF0D068", VA = "0xF0D068")]
		public static string GetDebugName(CoroutineHandle handle)
		{
			return null;
		}

		[Token(Token = "0x60001E6")]
		[Address(RVA = "0xF0D20C", Offset = "0xF0D20C", VA = "0xF0D20C")]
		public static Segment GetSegment(CoroutineHandle handle)
		{
			return default(Segment);
		}

		[Token(Token = "0x60001E7")]
		[Address(RVA = "0xF26B20", Offset = "0xF26B20", VA = "0xF26B20")]
		public static bool SetTag(CoroutineHandle handle, string newTag, bool overwriteExisting = true)
		{
			return default(bool);
		}

		[Token(Token = "0x60001E8")]
		[Address(RVA = "0xF26DD0", Offset = "0xF26DD0", VA = "0xF26DD0")]
		public static bool SetLayer(CoroutineHandle handle, int newLayer, bool overwriteExisting = true)
		{
			return default(bool);
		}

		[Token(Token = "0x60001E9")]
		[Address(RVA = "0xF27080", Offset = "0xF27080", VA = "0xF27080")]
		public static bool SetSegment(CoroutineHandle handle, Segment newSegment)
		{
			return default(bool);
		}

		[Token(Token = "0x60001EA")]
		[Address(RVA = "0xF28334", Offset = "0xF28334", VA = "0xF28334")]
		public static bool RemoveTag(CoroutineHandle handle)
		{
			return default(bool);
		}

		[Token(Token = "0x60001EB")]
		[Address(RVA = "0xF283A0", Offset = "0xF283A0", VA = "0xF283A0")]
		public static bool RemoveLayer(CoroutineHandle handle)
		{
			return default(bool);
		}

		[Token(Token = "0x60001EC")]
		[Address(RVA = "0xF0D36C", Offset = "0xF0D36C", VA = "0xF0D36C")]
		public static bool IsRunning(CoroutineHandle handle)
		{
			return default(bool);
		}

		[Token(Token = "0x60001ED")]
		[Address(RVA = "0xF284B8", Offset = "0xF284B8", VA = "0xF284B8")]
		public static bool IsAliveAndPaused(CoroutineHandle handle)
		{
			return default(bool);
		}

		[Token(Token = "0x60001EE")]
		[Address(RVA = "0xF213A0", Offset = "0xF213A0", VA = "0xF213A0")]
		private void AddTagOnInstance(string tag, CoroutineHandle handle)
		{
		}

		[Token(Token = "0x60001EF")]
		[Address(RVA = "0xF214D8", Offset = "0xF214D8", VA = "0xF214D8")]
		private void AddLayerOnInstance(int layer, CoroutineHandle handle)
		{
		}

		[Token(Token = "0x60001F0")]
		[Address(RVA = "0xF26C7C", Offset = "0xF26C7C", VA = "0xF26C7C")]
		private void RemoveTagOnInstance(CoroutineHandle handle)
		{
		}

		[Token(Token = "0x60001F1")]
		[Address(RVA = "0xF26F2C", Offset = "0xF26F2C", VA = "0xF26F2C")]
		private void RemoveLayerOnInstance(CoroutineHandle handle)
		{
		}

		[Token(Token = "0x60001F2")]
		[Address(RVA = "0xF178B8", Offset = "0xF178B8", VA = "0xF178B8")]
		private void RemoveGraffiti(CoroutineHandle handle)
		{
		}

		[Token(Token = "0x60001F3")]
		[Address(RVA = "0xF2736C", Offset = "0xF2736C", VA = "0xF2736C")]
		private IEnumerator<float> CoindexExtract(ProcessIndex coindex)
		{
			return null;
		}

		[Token(Token = "0x60001F4")]
		[Address(RVA = "0xF1765C", Offset = "0xF1765C", VA = "0xF1765C")]
		private bool CoindexIsNull(ProcessIndex coindex)
		{
			return default(bool);
		}

		[Token(Token = "0x60001F5")]
		[Address(RVA = "0xF26A58", Offset = "0xF26A58", VA = "0xF26A58")]
		private IEnumerator<float> CoindexPeek(ProcessIndex coindex)
		{
			return null;
		}

		[Token(Token = "0x60001F6")]
		[Address(RVA = "0xF21D5C", Offset = "0xF21D5C", VA = "0xF21D5C")]
		private bool Nullify(CoroutineHandle handle)
		{
			return default(bool);
		}

		[Token(Token = "0x60001F7")]
		[Address(RVA = "0xF21F0C", Offset = "0xF21F0C", VA = "0xF21F0C")]
		private bool Nullify(ProcessIndex coindex)
		{
			return default(bool);
		}

		[Token(Token = "0x60001F8")]
		[Address(RVA = "0xF23984", Offset = "0xF23984", VA = "0xF23984")]
		private bool SetPause(ProcessIndex coindex, bool newPausedState)
		{
			return default(bool);
		}

		[Token(Token = "0x60001F9")]
		[Address(RVA = "0xF275E4", Offset = "0xF275E4", VA = "0xF275E4")]
		private bool SetHeld(ProcessIndex coindex, bool newHeldState)
		{
			return default(bool);
		}

		[Token(Token = "0x60001FA")]
		[Address(RVA = "0xF285F0", Offset = "0xF285F0", VA = "0xF285F0")]
		private IEnumerator<float> CreateHold(ProcessIndex coindex, IEnumerator<float> coptr)
		{
			return null;
		}

		[Token(Token = "0x60001FB")]
		[Address(RVA = "0xF27518", Offset = "0xF27518", VA = "0xF27518")]
		private bool CoindexIsPaused(ProcessIndex coindex)
		{
			return default(bool);
		}

		[Token(Token = "0x60001FC")]
		[Address(RVA = "0xF2744C", Offset = "0xF2744C", VA = "0xF2744C")]
		private bool CoindexIsHeld(ProcessIndex coindex)
		{
			return default(bool);
		}

		[Token(Token = "0x60001FD")]
		[Address(RVA = "0xF292B8", Offset = "0xF292B8", VA = "0xF292B8")]
		private void CoindexReplace(ProcessIndex coindex, IEnumerator<float> replacement)
		{
		}

		[Token(Token = "0x60001FE")]
		[Address(RVA = "0xF293C8", Offset = "0xF293C8", VA = "0xF293C8")]
		public static float WaitUntilDone(IEnumerator<float> newCoroutine)
		{
			return default(float);
		}

		[Token(Token = "0x60001FF")]
		[Address(RVA = "0xF29724", Offset = "0xF29724", VA = "0xF29724")]
		public static float WaitUntilDone(IEnumerator<float> newCoroutine, string tag)
		{
			return default(float);
		}

		[Token(Token = "0x6000200")]
		[Address(RVA = "0xF297C0", Offset = "0xF297C0", VA = "0xF297C0")]
		public static float WaitUntilDone(IEnumerator<float> newCoroutine, int layer)
		{
			return default(float);
		}

		[Token(Token = "0x6000201")]
		[Address(RVA = "0xF2985C", Offset = "0xF2985C", VA = "0xF2985C")]
		public static float WaitUntilDone(IEnumerator<float> newCoroutine, int layer, string tag)
		{
			return default(float);
		}

		[Token(Token = "0x6000202")]
		[Address(RVA = "0xF29908", Offset = "0xF29908", VA = "0xF29908")]
		public static float WaitUntilDone(IEnumerator<float> newCoroutine, Segment segment)
		{
			return default(float);
		}

		[Token(Token = "0x6000203")]
		[Address(RVA = "0xF29988", Offset = "0xF29988", VA = "0xF29988")]
		public static float WaitUntilDone(IEnumerator<float> newCoroutine, Segment segment, string tag)
		{
			return default(float);
		}

		[Token(Token = "0x6000204")]
		[Address(RVA = "0xF29A10", Offset = "0xF29A10", VA = "0xF29A10")]
		public static float WaitUntilDone(IEnumerator<float> newCoroutine, Segment segment, int layer)
		{
			return default(float);
		}

		[Token(Token = "0x6000205")]
		[Address(RVA = "0xF29A98", Offset = "0xF29A98", VA = "0xF29A98")]
		public static float WaitUntilDone(IEnumerator<float> newCoroutine, Segment segment, int layer, string tag)
		{
			return default(float);
		}

		[Token(Token = "0x6000206")]
		[Address(RVA = "0xF29B30", Offset = "0xF29B30", VA = "0xF29B30")]
		public static float WaitUntilDone(CoroutineHandle otherCoroutine)
		{
			return default(float);
		}

		[Token(Token = "0x6000207")]
		[Address(RVA = "0xF2945C", Offset = "0xF2945C", VA = "0xF2945C")]
		public static float WaitUntilDone(CoroutineHandle otherCoroutine, bool warnOnIssue)
		{
			return default(float);
		}

		[Token(Token = "0x6000208")]
		[Address(RVA = "0xF1C604", Offset = "0xF1C604", VA = "0xF1C604")]
		public static void WaitForOtherHandles(CoroutineHandle handle, CoroutineHandle otherHandle, bool warnOnIssue = true)
		{
		}

		[Token(Token = "0x6000209")]
		[Address(RVA = "0xF1CFB4", Offset = "0xF1CFB4", VA = "0xF1CFB4")]
		public static void WaitForOtherHandles(CoroutineHandle handle, IEnumerable<CoroutineHandle> otherHandles, bool warnOnIssue = true)
		{
		}

		[Token(Token = "0x600020A")]
		[Address(RVA = "0xF29C38", Offset = "0xF29C38", VA = "0xF29C38")]
		private void SwapToLast(CoroutineHandle firstHandle, CoroutineHandle lastHandle)
		{
		}

		[Token(Token = "0x600020B")]
		[Address(RVA = "0xF29B98", Offset = "0xF29B98", VA = "0xF29B98")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE2B870", Offset = "0xE2B870")]
		private IEnumerator<float> _StartWhenDone(CoroutineHandle handle, IEnumerator<float> proc)
		{
			return null;
		}

		[Token(Token = "0x600020C")]
		[Address(RVA = "0xF1772C", Offset = "0xF1772C", VA = "0xF1772C")]
		private void CloseWaitingProcess(CoroutineHandle handle)
		{
		}

		[Token(Token = "0x600020D")]
		[Address(RVA = "0xF29FB0", Offset = "0xF29FB0", VA = "0xF29FB0")]
		private bool HandleIsInWaitingList(CoroutineHandle handle)
		{
			return default(bool);
		}

		[Token(Token = "0x600020E")]
		[Address(RVA = "0xF2A07C", Offset = "0xF2A07C", VA = "0xF2A07C")]
		private static IEnumerator<float> ReturnTmpRefForRepFunc(IEnumerator<float> coptr, CoroutineHandle handle)
		{
			return null;
		}

		[Token(Token = "0x600020F")]
		[Address(RVA = "0xF2A0F0", Offset = "0xF2A0F0", VA = "0xF2A0F0")]
		public static float WaitUntilDone(AsyncOperation operation)
		{
			return default(float);
		}

		[Token(Token = "0x6000210")]
		[Address(RVA = "0xF2A280", Offset = "0xF2A280", VA = "0xF2A280")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE2B8D4", Offset = "0xE2B8D4")]
		private static IEnumerator<float> _StartWhenDone(AsyncOperation operation, IEnumerator<float> pausedProc)
		{
			return null;
		}

		[Token(Token = "0x6000211")]
		[Address(RVA = "0xF2A318", Offset = "0xF2A318", VA = "0xF2A318")]
		public static float WaitUntilDone(CustomYieldInstruction operation)
		{
			return default(float);
		}

		[Token(Token = "0x6000212")]
		[Address(RVA = "0xF2A4AC", Offset = "0xF2A4AC", VA = "0xF2A4AC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE2B938", Offset = "0xE2B938")]
		private static IEnumerator<float> _StartWhenDone(CustomYieldInstruction operation, IEnumerator<float> pausedProc)
		{
			return null;
		}

		[Token(Token = "0x6000213")]
		[Address(RVA = "0xF2A544", Offset = "0xF2A544", VA = "0xF2A544")]
		public static float WaitUntilTrue(Func<bool> evaluatorFunc)
		{
			return default(float);
		}

		[Token(Token = "0x6000214")]
		[Address(RVA = "0xF2A624", Offset = "0xF2A624", VA = "0xF2A624")]
		private static IEnumerator<float> WaitUntilTrueHelper(IEnumerator<float> coptr, CoroutineHandle handle)
		{
			return null;
		}

		[Token(Token = "0x6000215")]
		[Address(RVA = "0xF2A760", Offset = "0xF2A760", VA = "0xF2A760")]
		public static float WaitUntilFalse(Func<bool> evaluatorFunc)
		{
			return default(float);
		}

		[Token(Token = "0x6000216")]
		[Address(RVA = "0xF2A840", Offset = "0xF2A840", VA = "0xF2A840")]
		private static IEnumerator<float> WaitUntilFalseHelper(IEnumerator<float> coptr, CoroutineHandle handle)
		{
			return null;
		}

		[Token(Token = "0x6000217")]
		[Address(RVA = "0xF2A6BC", Offset = "0xF2A6BC", VA = "0xF2A6BC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE2B99C", Offset = "0xE2B99C")]
		private static IEnumerator<float> _StartWhenDone(Func<bool> evaluatorFunc, bool continueOn, IEnumerator<float> pausedProc)
		{
			return null;
		}

		[Token(Token = "0x6000218")]
		[Address(RVA = "0xF23688", Offset = "0xF23688", VA = "0xF23688")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE2BA00", Offset = "0xE2BA00")]
		private IEnumerator<float> _InjectDelay(IEnumerator<float> proc, float waitTime)
		{
			return null;
		}

		[Token(Token = "0x6000219")]
		[Address(RVA = "0xF10F58", Offset = "0xF10F58", VA = "0xF10F58")]
		public bool LockCoroutine(CoroutineHandle coroutine, CoroutineHandle key)
		{
			return default(bool);
		}

		[Token(Token = "0x600021A")]
		[Address(RVA = "0xF11D60", Offset = "0xF11D60", VA = "0xF11D60")]
		public bool UnlockCoroutine(CoroutineHandle coroutine, CoroutineHandle key)
		{
			return default(bool);
		}

		[Token(Token = "0x600021B")]
		[Address(RVA = "0xF2A8D8", Offset = "0xF2A8D8", VA = "0xF2A8D8")]
		public static int LinkCoroutines(CoroutineHandle master, CoroutineHandle slave)
		{
			return default(int);
		}

		[Token(Token = "0x600021C")]
		[Address(RVA = "0xF2AB2C", Offset = "0xF2AB2C", VA = "0xF2AB2C")]
		public static int UnlinkCoroutines(CoroutineHandle master, CoroutineHandle slave, bool twoWay = false)
		{
			return default(int);
		}

		[Token(Token = "0x600021D")]
		[Address(RVA = "0xF2AE80", Offset = "0xF2AE80", VA = "0xF2AE80")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE2BA64", Offset = "0xE2BA64")]
		public static float GetMyHandle(Action<CoroutineHandle> reciever)
		{
			return default(float);
		}

		[Token(Token = "0x600021E")]
		[Address(RVA = "0xF2AF44", Offset = "0xF2AF44", VA = "0xF2AF44")]
		private static IEnumerator<float> GetHandleHelper(IEnumerator<float> input, CoroutineHandle handle)
		{
			return null;
		}

		[Token(Token = "0x600021F")]
		[Address(RVA = "0xF2AFFC", Offset = "0xF2AFFC", VA = "0xF2AFFC")]
		public static float SwitchCoroutine(Segment newSegment)
		{
			return default(float);
		}

		[Token(Token = "0x6000220")]
		[Address(RVA = "0xF2B0B8", Offset = "0xF2B0B8", VA = "0xF2B0B8")]
		private static IEnumerator<float> SwitchCoroutineRepS(IEnumerator<float> coptr, CoroutineHandle handle)
		{
			return null;
		}

		[Token(Token = "0x6000221")]
		[Address(RVA = "0xF2B16C", Offset = "0xF2B16C", VA = "0xF2B16C")]
		public static float SwitchCoroutine(Segment newSegment, string newTag)
		{
			return default(float);
		}

		[Token(Token = "0x6000222")]
		[Address(RVA = "0xF2B244", Offset = "0xF2B244", VA = "0xF2B244")]
		private static IEnumerator<float> SwitchCoroutineRepST(IEnumerator<float> coptr, CoroutineHandle handle)
		{
			return null;
		}

		[Token(Token = "0x6000223")]
		[Address(RVA = "0xF2B3A0", Offset = "0xF2B3A0", VA = "0xF2B3A0")]
		public static float SwitchCoroutine(Segment newSegment, int newLayer)
		{
			return default(float);
		}

		[Token(Token = "0x6000224")]
		[Address(RVA = "0xF2B470", Offset = "0xF2B470", VA = "0xF2B470")]
		private static IEnumerator<float> SwitchCoroutineRepSL(IEnumerator<float> coptr, CoroutineHandle handle)
		{
			return null;
		}

		[Token(Token = "0x6000225")]
		[Address(RVA = "0xF2B550", Offset = "0xF2B550", VA = "0xF2B550")]
		public static float SwitchCoroutine(Segment newSegment, int newLayer, string newTag)
		{
			return default(float);
		}

		[Token(Token = "0x6000226")]
		[Address(RVA = "0xF2B634", Offset = "0xF2B634", VA = "0xF2B634")]
		private static IEnumerator<float> SwitchCoroutineRepSLT(IEnumerator<float> coptr, CoroutineHandle handle)
		{
			return null;
		}

		[Token(Token = "0x6000227")]
		[Address(RVA = "0xF2B7B0", Offset = "0xF2B7B0", VA = "0xF2B7B0")]
		public static float SwitchCoroutine(string newTag)
		{
			return default(float);
		}

		[Token(Token = "0x6000228")]
		[Address(RVA = "0xF2B874", Offset = "0xF2B874", VA = "0xF2B874")]
		private static IEnumerator<float> SwitchCoroutineRepT(IEnumerator<float> coptr, CoroutineHandle handle)
		{
			return null;
		}

		[Token(Token = "0x6000229")]
		[Address(RVA = "0xF2B984", Offset = "0xF2B984", VA = "0xF2B984")]
		public static float SwitchCoroutine(int newLayer)
		{
			return default(float);
		}

		[Token(Token = "0x600022A")]
		[Address(RVA = "0xF2BA40", Offset = "0xF2BA40", VA = "0xF2BA40")]
		private static IEnumerator<float> SwitchCoroutineRepL(IEnumerator<float> coptr, CoroutineHandle handle)
		{
			return null;
		}

		[Token(Token = "0x600022B")]
		[Address(RVA = "0xF2BAE0", Offset = "0xF2BAE0", VA = "0xF2BAE0")]
		public static float SwitchCoroutine(int newLayer, string newTag)
		{
			return default(float);
		}

		[Token(Token = "0x600022C")]
		[Address(RVA = "0xF2BBB8", Offset = "0xF2BBB8", VA = "0xF2BBB8")]
		private static IEnumerator<float> SwitchCoroutineRepLT(IEnumerator<float> coptr, CoroutineHandle handle)
		{
			return null;
		}

		[Token(Token = "0x600022D")]
		[Address(RVA = "0xF2BCEC", Offset = "0xF2BCEC", VA = "0xF2BCEC")]
		public static CoroutineHandle CallDelayed(float delay, Action action)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x600022E")]
		[Address(RVA = "0xF2BE44", Offset = "0xF2BE44", VA = "0xF2BE44")]
		public CoroutineHandle CallDelayedOnInstance(float delay, Action action)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x600022F")]
		[Address(RVA = "0xF2BE84", Offset = "0xF2BE84", VA = "0xF2BE84")]
		public static CoroutineHandle CallDelayed(float delay, Action action, GameObject gameObject)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000230")]
		[Address(RVA = "0xF2BF30", Offset = "0xF2BF30", VA = "0xF2BF30")]
		public CoroutineHandle CallDelayedOnInstance(float delay, Action action, GameObject gameObject)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000231")]
		[Address(RVA = "0xF2BD88", Offset = "0xF2BD88", VA = "0xF2BD88")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE2BAA0", Offset = "0xE2BAA0")]
		private IEnumerator<float> _DelayedCall(float delay, Action action, GameObject cancelWith)
		{
			return null;
		}

		[Token(Token = "0x6000232")]
		[Address(RVA = "0xF2BF74", Offset = "0xF2BF74", VA = "0xF2BF74")]
		public static CoroutineHandle CallDelayed(float delay, Segment segment, Action action)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000233")]
		[Address(RVA = "0xF2C020", Offset = "0xF2C020", VA = "0xF2C020")]
		public CoroutineHandle CallDelayedOnInstance(float delay, Segment segment, Action action)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000234")]
		[Address(RVA = "0xF2C06C", Offset = "0xF2C06C", VA = "0xF2C06C")]
		public static CoroutineHandle CallDelayed(float delay, Segment segment, Action action, GameObject gameObject)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000235")]
		[Address(RVA = "0xF2C120", Offset = "0xF2C120", VA = "0xF2C120")]
		public CoroutineHandle CallDelayedOnInstance(float delay, Segment segment, Action action, GameObject gameObject)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000236")]
		[Address(RVA = "0xF2C17C", Offset = "0xF2C17C", VA = "0xF2C17C")]
		public static CoroutineHandle CallPeriodically(float timeframe, float period, Action action, [Optional] Action onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000237")]
		[Address(RVA = "0xF2C3FC", Offset = "0xF2C3FC", VA = "0xF2C3FC")]
		public CoroutineHandle CallPeriodicallyOnInstance(float timeframe, float period, Action action, [Optional] Action onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000238")]
		[Address(RVA = "0xF2C494", Offset = "0xF2C494", VA = "0xF2C494")]
		public static CoroutineHandle CallPeriodically(float timeframe, float period, Action action, GameObject gameObject, [Optional] Action onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000239")]
		[Address(RVA = "0xF2C5A4", Offset = "0xF2C5A4", VA = "0xF2C5A4")]
		public CoroutineHandle CallPeriodicallyOnInstance(float timeframe, float period, Action action, GameObject gameObject, [Optional] Action onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x600023A")]
		[Address(RVA = "0xF2C6AC", Offset = "0xF2C6AC", VA = "0xF2C6AC")]
		public static CoroutineHandle CallPeriodically(float timeframe, float period, Action action, Segment timing, [Optional] Action onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x600023B")]
		[Address(RVA = "0xF2C7B0", Offset = "0xF2C7B0", VA = "0xF2C7B0")]
		public CoroutineHandle CallPeriodicallyOnInstance(float timeframe, float period, Action action, Segment timing, [Optional] Action onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x600023C")]
		[Address(RVA = "0xF2C8B8", Offset = "0xF2C8B8", VA = "0xF2C8B8")]
		public static CoroutineHandle CallPeriodically(float timeframe, float period, Action action, Segment timing, GameObject gameObject, [Optional] Action onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x600023D")]
		[Address(RVA = "0xF2C9DC", Offset = "0xF2C9DC", VA = "0xF2C9DC")]
		public CoroutineHandle CallPeriodicallyOnInstance(float timeframe, float period, Action action, Segment timing, GameObject gameObject, [Optional] Action onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x600023E")]
		[Address(RVA = "0xF2CAF0", Offset = "0xF2CAF0", VA = "0xF2CAF0")]
		public static CoroutineHandle CallContinuously(float timeframe, Action action, [Optional] Action onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x600023F")]
		[Address(RVA = "0xF2CBF0", Offset = "0xF2CBF0", VA = "0xF2CBF0")]
		public CoroutineHandle CallContinuouslyOnInstance(float timeframe, Action action, [Optional] Action onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000240")]
		[Address(RVA = "0xF2CCE0", Offset = "0xF2CCE0", VA = "0xF2CCE0")]
		public static CoroutineHandle CallContinuously(float timeframe, Action action, GameObject gameObject, [Optional] Action onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000241")]
		[Address(RVA = "0xF2CDEC", Offset = "0xF2CDEC", VA = "0xF2CDEC")]
		public CoroutineHandle CallContinuouslyOnInstance(float timeframe, Action action, GameObject gameObject, [Optional] Action onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000242")]
		[Address(RVA = "0xF2CEF0", Offset = "0xF2CEF0", VA = "0xF2CEF0")]
		public static CoroutineHandle CallContinuously(float timeframe, Action action, Segment timing, [Optional] Action onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000243")]
		[Address(RVA = "0xF2CFFC", Offset = "0xF2CFFC", VA = "0xF2CFFC")]
		public CoroutineHandle CallContinuouslyOnInstance(float timeframe, Action action, Segment timing, [Optional] Action onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000244")]
		[Address(RVA = "0xF2D100", Offset = "0xF2D100", VA = "0xF2D100")]
		public static CoroutineHandle CallContinuously(float timeframe, Action action, Segment timing, GameObject gameObject, [Optional] Action onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000245")]
		[Address(RVA = "0xF2D220", Offset = "0xF2D220", VA = "0xF2D220")]
		public CoroutineHandle CallContinuouslyOnInstance(float timeframe, Action action, Segment timing, GameObject gameObject, [Optional] Action onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000246")]
		[Address(RVA = "0xF2C330", Offset = "0xF2C330", VA = "0xF2C330")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE2BB04", Offset = "0xE2BB04")]
		private IEnumerator<float> _WatchCall(float timeframe, CoroutineHandle handle, GameObject gObject, Action onDone)
		{
			return null;
		}

		[Token(Token = "0x6000247")]
		[Address(RVA = "0xF2C274", Offset = "0xF2C274", VA = "0xF2C274")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE2BB68", Offset = "0xE2BB68")]
		private IEnumerator<float> _CallContinuously(float period, Action action, GameObject gObject)
		{
			return null;
		}

		[Token(Token = "0x6000248")]
		public static CoroutineHandle CallPeriodically<T>(T reference, float timeframe, float period, Action<T> action, [Optional] Action<T> onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000249")]
		public CoroutineHandle CallPeriodicallyOnInstance<T>(T reference, float timeframe, float period, Action<T> action, [Optional] Action<T> onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x600024A")]
		public static CoroutineHandle CallPeriodically<T>(T reference, float timeframe, float period, Action<T> action, GameObject gameObject, [Optional] Action<T> onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x600024B")]
		public CoroutineHandle CallPeriodicallyOnInstance<T>(T reference, float timeframe, float period, Action<T> action, GameObject gameObject, [Optional] Action<T> onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x600024C")]
		public static CoroutineHandle CallPeriodically<T>(T reference, float timeframe, float period, Action<T> action, Segment timing, [Optional] Action<T> onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x600024D")]
		public CoroutineHandle CallPeriodicallyOnInstance<T>(T reference, float timeframe, float period, Action<T> action, Segment timing, [Optional] Action<T> onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x600024E")]
		public static CoroutineHandle CallPeriodically<T>(T reference, float timeframe, float period, Action<T> action, Segment timing, GameObject gameObject, [Optional] Action<T> onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x600024F")]
		public CoroutineHandle CallPeriodicallyOnInstance<T>(T reference, float timeframe, float period, Action<T> action, Segment timing, GameObject gameObject, [Optional] Action<T> onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000250")]
		public static CoroutineHandle CallContinuously<T>(T reference, float timeframe, Action<T> action, [Optional] Action<T> onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000251")]
		public CoroutineHandle CallContinuouslyOnInstance<T>(T reference, float timeframe, Action<T> action, [Optional] Action<T> onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000252")]
		public static CoroutineHandle CallContinuously<T>(T reference, float timeframe, Action<T> action, GameObject gameObject, [Optional] Action<T> onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000253")]
		public CoroutineHandle CallContinuouslyOnInstance<T>(T reference, float timeframe, Action<T> action, GameObject gameObject, [Optional] Action<T> onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000254")]
		public static CoroutineHandle CallContinuously<T>(T reference, float timeframe, Action<T> action, Segment timing, [Optional] Action<T> onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000255")]
		public CoroutineHandle CallContinuouslyOnInstance<T>(T reference, float timeframe, Action<T> action, Segment timing, [Optional] Action<T> onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000256")]
		public static CoroutineHandle CallContinuously<T>(T reference, float timeframe, Action<T> action, Segment timing, GameObject gameObject, [Optional] Action<T> onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000257")]
		public CoroutineHandle CallContinuouslyOnInstance<T>(T reference, float timeframe, Action<T> action, Segment timing, GameObject gameObject, [Optional] Action<T> onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000258")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE2BBCC", Offset = "0xE2BBCC")]
		private IEnumerator<float> _WatchCall<T>(T reference, float timeframe, CoroutineHandle handle, GameObject gObject, Action<T> onDone)
		{
			return null;
		}

		[Token(Token = "0x6000259")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE2BC30", Offset = "0xE2BC30")]
		private IEnumerator<float> _CallContinuously<T>(T reference, float period, Action<T> action, GameObject gObject)
		{
			return null;
		}

		[Token(Token = "0x600025A")]
		[Address(RVA = "0xF2D330", Offset = "0xF2D330", VA = "0xF2D330")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE2BC94", Offset = "0xE2BC94")]
		public new Coroutine StartCoroutine(IEnumerator routine)
		{
			return null;
		}

		[Token(Token = "0x600025B")]
		[Address(RVA = "0xF2D338", Offset = "0xF2D338", VA = "0xF2D338")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE2BCD0", Offset = "0xE2BCD0")]
		public new Coroutine StartCoroutine(string methodName, object value)
		{
			return null;
		}

		[Token(Token = "0x600025C")]
		[Address(RVA = "0xF2D340", Offset = "0xF2D340", VA = "0xF2D340")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE2BD0C", Offset = "0xE2BD0C")]
		public new Coroutine StartCoroutine(string methodName)
		{
			return null;
		}

		[Token(Token = "0x600025D")]
		[Address(RVA = "0xF2D348", Offset = "0xF2D348", VA = "0xF2D348")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE2BD48", Offset = "0xE2BD48")]
		public new Coroutine StartCoroutine_Auto(IEnumerator routine)
		{
			return null;
		}

		[Token(Token = "0x600025E")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE2BD84", Offset = "0xE2BD84")]
		public new static T FindObjectOfType<T>() where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x600025F")]
		[Address(RVA = "0xF2D350", Offset = "0xF2D350", VA = "0xF2D350")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE2BDC0", Offset = "0xE2BDC0")]
		public new static UnityEngine.Object FindObjectOfType(Type t)
		{
			return null;
		}

		[Token(Token = "0x6000260")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE2BDFC", Offset = "0xE2BDFC")]
		public new static T[] FindObjectsOfType<T>() where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6000261")]
		[Address(RVA = "0xF2D358", Offset = "0xF2D358", VA = "0xF2D358")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xE2BE38", Offset = "0xE2BE38")]
		public new static UnityEngine.Object[] FindObjectsOfType(Type t)
		{
			return null;
		}

		[Token(Token = "0x6000262")]
		[Address(RVA = "0xF2D360", Offset = "0xF2D360", VA = "0xF2D360")]
		public Timing()
		{
		}
	}
	[Token(Token = "0x200005B")]
	public enum Segment
	{
		[Token(Token = "0x400020E")]
		Invalid = -1,
		[Token(Token = "0x400020F")]
		Update,
		[Token(Token = "0x4000210")]
		FixedUpdate,
		[Token(Token = "0x4000211")]
		LateUpdate,
		[Token(Token = "0x4000212")]
		SlowUpdate,
		[Token(Token = "0x4000213")]
		RealtimeUpdate,
		[Token(Token = "0x4000214")]
		EditorUpdate,
		[Token(Token = "0x4000215")]
		EditorSlowUpdate,
		[Token(Token = "0x4000216")]
		EndOfFrame,
		[Token(Token = "0x4000217")]
		ManualTimeframe
	}
	[Token(Token = "0x200005C")]
	public enum DebugInfoType
	{
		[Token(Token = "0x4000219")]
		None,
		[Token(Token = "0x400021A")]
		SeperateCoroutines,
		[Token(Token = "0x400021B")]
		SeperateTags
	}
	[Token(Token = "0x200005D")]
	public enum SingletonBehavior
	{
		[Token(Token = "0x400021D")]
		Abort,
		[Token(Token = "0x400021E")]
		Overwrite,
		[Token(Token = "0x400021F")]
		Wait,
		[Token(Token = "0x4000220")]
		AbortAndUnpause
	}
	[Token(Token = "0x200005E")]
	public struct CoroutineHandle : IEquatable<CoroutineHandle>
	{
		[Token(Token = "0x4000221")]
		private const byte ReservedSpace = 15;

		[Token(Token = "0x4000222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int[] NextIndex;

		[Token(Token = "0x4000223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly int _id;

		[Token(Token = "0x1700006B")]
		public byte Key
		{
			[Token(Token = "0x60002B0")]
			[Address(RVA = "0xF0C8D8", Offset = "0xF0C8D8", VA = "0xF0C8D8")]
			get
			{
				return default(byte);
			}
		}

		[Token(Token = "0x1700006C")]
		public Segment Segment
		{
			[Token(Token = "0x60002B7")]
			[Address(RVA = "0xF0D1A4", Offset = "0xF0D1A4", VA = "0xF0D1A4")]
			get
			{
				return default(Segment);
			}
		}

		[Token(Token = "0x1700006D")]
		public bool IsRunning
		{
			[Token(Token = "0x60002B8")]
			[Address(RVA = "0xF0D304", Offset = "0xF0D304", VA = "0xF0D304")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60002B9")]
			[Address(RVA = "0xF0D478", Offset = "0xF0D478", VA = "0xF0D478")]
			set
			{
			}
		}

		[Token(Token = "0x1700006E")]
		public bool IsAliveAndPaused
		{
			[Token(Token = "0x60002BA")]
			[Address(RVA = "0xF0D610", Offset = "0xF0D610", VA = "0xF0D610")]
			set
			{
			}
		}

		[Token(Token = "0x1700006F")]
		public bool IsValid
		{
			[Token(Token = "0x60002BB")]
			[Address(RVA = "0xF0D88C", Offset = "0xF0D88C", VA = "0xF0D88C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60002B1")]
		[Address(RVA = "0xF0C8E4", Offset = "0xF0C8E4", VA = "0xF0C8E4")]
		public CoroutineHandle(byte ind)
		{
		}

		[Token(Token = "0x60002B2")]
		[Address(RVA = "0xF0C9D0", Offset = "0xF0C9D0", VA = "0xF0C9D0", Slot = "4")]
		public bool Equals(CoroutineHandle other)
		{
			return default(bool);
		}

		[Token(Token = "0x60002B3")]
		[Address(RVA = "0xF0C9E0", Offset = "0xF0C9E0", VA = "0xF0C9E0", Slot = "0")]
		public override bool Equals(object other)
		{
			return default(bool);
		}

		[Token(Token = "0x60002B4")]
		[Address(RVA = "0xF0CA68", Offset = "0xF0CA68", VA = "0xF0CA68")]
		public static bool operator ==(CoroutineHandle a, CoroutineHandle b)
		{
			return default(bool);
		}

		[Token(Token = "0x60002B5")]
		[Address(RVA = "0xF0CA74", Offset = "0xF0CA74", VA = "0xF0CA74", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60002B6")]
		[Address(RVA = "0xF0CA7C", Offset = "0xF0CA7C", VA = "0xF0CA7C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
}
namespace RootMotion
{
	[Token(Token = "0x200005F")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xE20BA4", Offset = "0xE20BA4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE20BA4", Offset = "0xE20BA4")]
	public abstract class Baker : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000060")]
		public enum Mode
		{
			[Token(Token = "0x4000233")]
			AnimationClips,
			[Token(Token = "0x4000234")]
			AnimationStates,
			[Token(Token = "0x4000235")]
			PlayableDirector,
			[Token(Token = "0x4000236")]
			Realtime
		}

		[Token(Token = "0x4000224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE227CC", Offset = "0xE227CC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE227CC", Offset = "0xE227CC")]
		public int frameRate;

		[Token(Token = "0x4000225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE22824", Offset = "0xE22824")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE22824", Offset = "0xE22824")]
		public float keyReductionError;

		[Token(Token = "0x4000226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2287C", Offset = "0xE2287C")]
		public Mode mode;

		[Token(Token = "0x4000227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE228B4", Offset = "0xE228B4")]
		public AnimationClip[] animationClips;

		[Token(Token = "0x4000228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE228EC", Offset = "0xE228EC")]
		public string[] animationStates;

		[Token(Token = "0x4000229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE22924", Offset = "0xE22924")]
		public bool loop;

		[Token(Token = "0x400022A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2295C", Offset = "0xE2295C")]
		public string saveToFolder;

		[Token(Token = "0x400022B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE22994", Offset = "0xE22994")]
		public string appendName;

		[Token(Token = "0x400022C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE229CC", Offset = "0xE229CC")]
		public string saveName;

		[Token(Token = "0x400022D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE22A04", Offset = "0xE22A04")]
		private bool <isBaking>k__BackingField;

		[Token(Token = "0x400022E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE22A14", Offset = "0xE22A14")]
		private float <bakingProgress>k__BackingField;

		[Token(Token = "0x400022F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public Animator animator;

		[Token(Token = "0x4000230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public PlayableDirector director;

		[Token(Token = "0x4000231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE22A44", Offset = "0xE22A44")]
		private float <clipLength>k__BackingField;

		[Token(Token = "0x17000070")]
		public bool isBaking
		{
			[Token(Token = "0x60002C1")]
			[Address(RVA = "0x16FF16C", Offset = "0x16FF16C", VA = "0x16FF16C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C314", Offset = "0xE2C314")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60002C2")]
			[Address(RVA = "0x16FF174", Offset = "0x16FF174", VA = "0x16FF174")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C324", Offset = "0xE2C324")]
			private set
			{
			}
		}

		[Token(Token = "0x17000071")]
		public float bakingProgress
		{
			[Token(Token = "0x60002C3")]
			[Address(RVA = "0x16FF180", Offset = "0x16FF180", VA = "0x16FF180")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C334", Offset = "0xE2C334")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60002C4")]
			[Address(RVA = "0x16FF188", Offset = "0x16FF188", VA = "0x16FF188")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C344", Offset = "0xE2C344")]
			private set
			{
			}
		}

		[Token(Token = "0x17000072")]
		protected float clipLength
		{
			[Token(Token = "0x60002CA")]
			[Address(RVA = "0x16FF190", Offset = "0x16FF190", VA = "0x16FF190")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C354", Offset = "0xE2C354")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60002CB")]
			[Address(RVA = "0x16FF198", Offset = "0x16FF198", VA = "0x16FF198")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C364", Offset = "0xE2C364")]
			private set
			{
			}
		}

		[Token(Token = "0x60002BD")]
		[Address(RVA = "0x16FF03C", Offset = "0x16FF03C", VA = "0x16FF03C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2C234", Offset = "0xE2C234")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x60002BE")]
		[Address(RVA = "0x16FF088", Offset = "0x16FF088", VA = "0x16FF088")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2C26C", Offset = "0xE2C26C")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x60002BF")]
		[Address(RVA = "0x16FF0D4", Offset = "0x16FF0D4", VA = "0x16FF0D4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2C2A4", Offset = "0xE2C2A4")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x60002C0")]
		[Address(RVA = "0x16FF120", Offset = "0x16FF120", VA = "0x16FF120")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2C2DC", Offset = "0xE2C2DC")]
		private void ASThread()
		{
		}

		[Token(Token = "0x60002C5")]
		protected abstract Transform GetCharacterRoot();

		[Token(Token = "0x60002C6")]
		protected abstract void OnStartBaking();

		[Token(Token = "0x60002C7")]
		protected abstract void OnSetLoopFrame(float time);

		[Token(Token = "0x60002C8")]
		protected abstract void OnSetCurves(ref AnimationClip clip);

		[Token(Token = "0x60002C9")]
		protected abstract void OnSetKeyframes(float time, bool lastFrame);

		[Token(Token = "0x60002CC")]
		[Address(RVA = "0x16FF1A0", Offset = "0x16FF1A0", VA = "0x16FF1A0")]
		protected Baker()
		{
		}
	}
	[Token(Token = "0x2000061")]
	public class GenericBaker : Baker
	{
		[Token(Token = "0x4000237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE22A54", Offset = "0xE22A54")]
		public bool markAsLegacy;

		[Token(Token = "0x4000238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE22A8C", Offset = "0xE22A8C")]
		public Transform root;

		[Token(Token = "0x4000239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE22AC4", Offset = "0xE22AC4")]
		public Transform rootNode;

		[Token(Token = "0x400023A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE22AFC", Offset = "0xE22AFC")]
		public Transform[] ignoreList;

		[Token(Token = "0x400023B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE22B34", Offset = "0xE22B34")]
		public Transform[] bakePositionList;

		[Token(Token = "0x400023C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BakerTransform[] children;

		[Token(Token = "0x400023D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private BakerTransform rootChild;

		[Token(Token = "0x400023E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int rootChildIndex;

		[Token(Token = "0x60002CD")]
		[Address(RVA = "0x1FE0664", Offset = "0x1FE0664", VA = "0x1FE0664")]
		private void Awake()
		{
		}

		[Token(Token = "0x60002CE")]
		[Address(RVA = "0x1FE0A44", Offset = "0x1FE0A44", VA = "0x1FE0A44", Slot = "4")]
		protected override Transform GetCharacterRoot()
		{
			return null;
		}

		[Token(Token = "0x60002CF")]
		[Address(RVA = "0x1FE0A4C", Offset = "0x1FE0A4C", VA = "0x1FE0A4C", Slot = "5")]
		protected override void OnStartBaking()
		{
		}

		[Token(Token = "0x60002D0")]
		[Address(RVA = "0x1FE0B5C", Offset = "0x1FE0B5C", VA = "0x1FE0B5C", Slot = "6")]
		protected override void OnSetLoopFrame(float time)
		{
		}

		[Token(Token = "0x60002D1")]
		[Address(RVA = "0x1FE0BD8", Offset = "0x1FE0BD8", VA = "0x1FE0BD8", Slot = "7")]
		protected override void OnSetCurves(ref AnimationClip clip)
		{
		}

		[Token(Token = "0x60002D2")]
		[Address(RVA = "0x1FE0C54", Offset = "0x1FE0C54", VA = "0x1FE0C54", Slot = "8")]
		protected override void OnSetKeyframes(float time, bool lastFrame)
		{
		}

		[Token(Token = "0x60002D3")]
		[Address(RVA = "0x1FE0894", Offset = "0x1FE0894", VA = "0x1FE0894")]
		private bool IsIgnored(Transform t)
		{
			return default(bool);
		}

		[Token(Token = "0x60002D4")]
		[Address(RVA = "0x1FE096C", Offset = "0x1FE096C", VA = "0x1FE096C")]
		private bool BakePosition(Transform t)
		{
			return default(bool);
		}

		[Token(Token = "0x60002D5")]
		[Address(RVA = "0x1FE0CD0", Offset = "0x1FE0CD0", VA = "0x1FE0CD0")]
		public GenericBaker()
		{
		}
	}
	[Token(Token = "0x2000062")]
	public class TQ
	{
		[Token(Token = "0x400023F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 t;

		[Token(Token = "0x4000240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion q;

		[Token(Token = "0x60002D6")]
		[Address(RVA = "0x1FE40F4", Offset = "0x1FE40F4", VA = "0x1FE40F4")]
		public TQ(Vector3 translation, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x2000063")]
	public class AvatarUtility
	{
		[Token(Token = "0x60002D7")]
		[Address(RVA = "0x16FE4A0", Offset = "0x16FE4A0", VA = "0x16FE4A0")]
		public static TQ GetIKGoalTQ(Avatar avatar, float humanScale, AvatarIKGoal avatarIKGoal, TQ bodyPositionRotation, TQ boneTQ)
		{
			return null;
		}

		[Token(Token = "0x60002D8")]
		[Address(RVA = "0x16FEB38", Offset = "0x16FEB38", VA = "0x16FEB38")]
		public static HumanBodyBones HumanIDFromAvatarIKGoal(AvatarIKGoal avatarIKGoal)
		{
			return default(HumanBodyBones);
		}
	}
	[Token(Token = "0x2000064")]
	public static class BakerUtilities
	{
		[Token(Token = "0x60002D9")]
		[Address(RVA = "0x1700550", Offset = "0x1700550", VA = "0x1700550")]
		public static void ReduceKeyframes(AnimationCurve curve, float maxError)
		{
		}

		[Token(Token = "0x60002DA")]
		[Address(RVA = "0x1701A28", Offset = "0x1701A28", VA = "0x1701A28")]
		public static Keyframe[] GetReducedKeyframes(AnimationCurve curve, float maxError)
		{
			return null;
		}

		[Token(Token = "0x60002DB")]
		[Address(RVA = "0x16FFF64", Offset = "0x16FFF64", VA = "0x16FFF64")]
		public static void SetLoopFrame(float time, AnimationCurve curve)
		{
		}

		[Token(Token = "0x60002DC")]
		[Address(RVA = "0x1700598", Offset = "0x1700598", VA = "0x1700598")]
		public static void SetTangentMode(AnimationCurve curve)
		{
		}

		[Token(Token = "0x60002DD")]
		[Address(RVA = "0x16FFA9C", Offset = "0x16FFA9C", VA = "0x16FFA9C")]
		public static Quaternion EnsureQuaternionContinuity(Quaternion lastQ, Quaternion q)
		{
			return default(Quaternion);
		}
	}
	[Serializable]
	[Token(Token = "0x2000065")]
	public class BakerHumanoidQT
	{
		[Token(Token = "0x4000241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Transform transform;

		[Token(Token = "0x4000242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string Qx;

		[Token(Token = "0x4000243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string Qy;

		[Token(Token = "0x4000244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string Qz;

		[Token(Token = "0x4000245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string Qw;

		[Token(Token = "0x4000246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string Tx;

		[Token(Token = "0x4000247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string Ty;

		[Token(Token = "0x4000248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string Tz;

		[Token(Token = "0x4000249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AnimationCurve rotX;

		[Token(Token = "0x400024A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AnimationCurve rotY;

		[Token(Token = "0x400024B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AnimationCurve rotZ;

		[Token(Token = "0x400024C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AnimationCurve rotW;

		[Token(Token = "0x400024D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AnimationCurve posX;

		[Token(Token = "0x400024E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public AnimationCurve posY;

		[Token(Token = "0x400024F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public AnimationCurve posZ;

		[Token(Token = "0x4000250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private AvatarIKGoal goal;

		[Token(Token = "0x4000251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Quaternion lastQ;

		[Token(Token = "0x4000252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private bool lastQSet;

		[Token(Token = "0x60002DE")]
		[Address(RVA = "0x16FF290", Offset = "0x16FF290", VA = "0x16FF290")]
		public BakerHumanoidQT(string name)
		{
		}

		[Token(Token = "0x60002DF")]
		[Address(RVA = "0x16FF588", Offset = "0x16FF588", VA = "0x16FF588")]
		public BakerHumanoidQT(Transform transform, AvatarIKGoal goal, string name)
		{
		}

		[Token(Token = "0x60002E0")]
		[Address(RVA = "0x16FF404", Offset = "0x16FF404", VA = "0x16FF404")]
		public void Reset()
		{
		}

		[Token(Token = "0x60002E1")]
		[Address(RVA = "0x16FF720", Offset = "0x16FF720", VA = "0x16FF720")]
		public void SetIKKeyframes(float time, Avatar avatar, Transform root, float humanScale, Vector3 bodyPosition, Quaternion bodyRotation)
		{
		}

		[Token(Token = "0x60002E2")]
		[Address(RVA = "0x16FFCF8", Offset = "0x16FFCF8", VA = "0x16FFCF8")]
		public void SetKeyframes(float time, Vector3 pos, Quaternion rot)
		{
		}

		[Token(Token = "0x60002E3")]
		[Address(RVA = "0x16FFDF4", Offset = "0x16FFDF4", VA = "0x16FFDF4")]
		public void MoveLastKeyframes(float time)
		{
		}

		[Token(Token = "0x60002E4")]
		[Address(RVA = "0x16FFEF0", Offset = "0x16FFEF0", VA = "0x16FFEF0")]
		public void SetLoopFrame(float time)
		{
		}

		[Token(Token = "0x60002E5")]
		[Address(RVA = "0x16FFE68", Offset = "0x16FFE68", VA = "0x16FFE68")]
		private void MoveLastKeyframe(float time, AnimationCurve curve)
		{
		}

		[Token(Token = "0x60002E6")]
		[Address(RVA = "0x17001B0", Offset = "0x17001B0", VA = "0x17001B0")]
		public void MultiplyLength(AnimationCurve curve, float mlp)
		{
		}

		[Token(Token = "0x60002E7")]
		[Address(RVA = "0x1700264", Offset = "0x1700264", VA = "0x1700264")]
		public void SetCurves(ref AnimationClip clip, float maxError, float lengthMlp)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000066")]
	public class BakerMuscle
	{
		[Token(Token = "0x4000253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AnimationCurve curve;

		[Token(Token = "0x4000254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int muscleIndex;

		[Token(Token = "0x4000255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string propertyName;

		[Token(Token = "0x60002E8")]
		[Address(RVA = "0x170059C", Offset = "0x170059C", VA = "0x170059C")]
		public BakerMuscle(int muscleIndex)
		{
		}

		[Token(Token = "0x60002E9")]
		[Address(RVA = "0x1700618", Offset = "0x1700618", VA = "0x1700618")]
		private string MuscleNameToPropertyName(string n)
		{
			return null;
		}

		[Token(Token = "0x60002EA")]
		[Address(RVA = "0x1700D08", Offset = "0x1700D08", VA = "0x1700D08")]
		public void MultiplyLength(AnimationCurve curve, float mlp)
		{
		}

		[Token(Token = "0x60002EB")]
		[Address(RVA = "0x1700DBC", Offset = "0x1700DBC", VA = "0x1700DBC")]
		public void SetCurves(ref AnimationClip clip, float maxError, float lengthMlp)
		{
		}

		[Token(Token = "0x60002EC")]
		[Address(RVA = "0x1700CA0", Offset = "0x1700CA0", VA = "0x1700CA0")]
		public void Reset()
		{
		}

		[Token(Token = "0x60002ED")]
		[Address(RVA = "0x1700EA0", Offset = "0x1700EA0", VA = "0x1700EA0")]
		public void SetKeyframe(float time, float[] muscles)
		{
		}

		[Token(Token = "0x60002EE")]
		[Address(RVA = "0x1700EE8", Offset = "0x1700EE8", VA = "0x1700EE8")]
		public void SetLoopFrame(float time)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000067")]
	public class BakerTransform
	{
		[Token(Token = "0x4000256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform transform;

		[Token(Token = "0x4000257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationCurve posX;

		[Token(Token = "0x4000258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve posY;

		[Token(Token = "0x4000259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve posZ;

		[Token(Token = "0x400025A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve rotX;

		[Token(Token = "0x400025B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AnimationCurve rotY;

		[Token(Token = "0x400025C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AnimationCurve rotZ;

		[Token(Token = "0x400025D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AnimationCurve rotW;

		[Token(Token = "0x400025E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string relativePath;

		[Token(Token = "0x400025F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool recordPosition;

		[Token(Token = "0x4000260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 relativePosition;

		[Token(Token = "0x4000261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool isRootNode;

		[Token(Token = "0x4000262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Quaternion relativeRotation;

		[Token(Token = "0x60002EF")]
		[Address(RVA = "0x1700EF0", Offset = "0x1700EF0", VA = "0x1700EF0")]
		public BakerTransform(Transform transform, Transform root, bool recordPosition, bool isRootNode)
		{
		}

		[Token(Token = "0x60002F0")]
		[Address(RVA = "0x17010E8", Offset = "0x17010E8", VA = "0x17010E8")]
		public void SetRelativeSpace(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x60002F1")]
		[Address(RVA = "0x17010FC", Offset = "0x17010FC", VA = "0x17010FC")]
		public void SetCurves(ref AnimationClip clip)
		{
		}

		[Token(Token = "0x60002F2")]
		[Address(RVA = "0x170138C", Offset = "0x170138C", VA = "0x170138C")]
		private void AddRootMotionCurves(ref AnimationClip clip)
		{
		}

		[Token(Token = "0x60002F3")]
		[Address(RVA = "0x1700FA0", Offset = "0x1700FA0", VA = "0x1700FA0")]
		public void Reset()
		{
		}

		[Token(Token = "0x60002F4")]
		[Address(RVA = "0x17015D8", Offset = "0x17015D8", VA = "0x17015D8")]
		public void SetKeyframes(float time)
		{
		}

		[Token(Token = "0x60002F5")]
		[Address(RVA = "0x1701824", Offset = "0x1701824", VA = "0x1701824")]
		public void AddLoopFrame(float time)
		{
		}
	}
	[Token(Token = "0x2000068")]
	public class HumanoidBaker : Baker
	{
		[Token(Token = "0x4000263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE22B6C", Offset = "0xE22B6C")]
		public bool bakeHandIK;

		[Token(Token = "0x4000264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE22BA4", Offset = "0xE22BA4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE22BA4", Offset = "0xE22BA4")]
		public float IKKeyReductionError;

		[Token(Token = "0x4000265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE22BFC", Offset = "0xE22BFC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE22BFC", Offset = "0xE22BFC")]
		public int muscleFrameRateDiv;

		[Token(Token = "0x4000266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private BakerMuscle[] bakerMuscles;

		[Token(Token = "0x4000267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private BakerHumanoidQT rootQT;

		[Token(Token = "0x4000268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private BakerHumanoidQT leftFootQT;

		[Token(Token = "0x4000269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BakerHumanoidQT rightFootQT;

		[Token(Token = "0x400026A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private BakerHumanoidQT leftHandQT;

		[Token(Token = "0x400026B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private BakerHumanoidQT rightHandQT;

		[Token(Token = "0x400026C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float[] muscles;

		[Token(Token = "0x400026D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private HumanPose pose;

		[Token(Token = "0x400026E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private HumanPoseHandler handler;

		[Token(Token = "0x400026F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Vector3 bodyPosition;

		[Token(Token = "0x4000270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private Quaternion bodyRotation;

		[Token(Token = "0x4000271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private int mN;

		[Token(Token = "0x4000272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Quaternion lastBodyRotation;

		[Token(Token = "0x60002F6")]
		[Address(RVA = "0x1FE15C4", Offset = "0x1FE15C4", VA = "0x1FE15C4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60002F7")]
		[Address(RVA = "0x1FE1AA8", Offset = "0x1FE1AA8", VA = "0x1FE1AA8", Slot = "4")]
		protected override Transform GetCharacterRoot()
		{
			return null;
		}

		[Token(Token = "0x60002F8")]
		[Address(RVA = "0x1FE1AC4", Offset = "0x1FE1AC4", VA = "0x1FE1AC4", Slot = "5")]
		protected override void OnStartBaking()
		{
		}

		[Token(Token = "0x60002F9")]
		[Address(RVA = "0x1FE1BE4", Offset = "0x1FE1BE4", VA = "0x1FE1BE4", Slot = "6")]
		protected override void OnSetLoopFrame(float time)
		{
		}

		[Token(Token = "0x60002FA")]
		[Address(RVA = "0x1FE1CC0", Offset = "0x1FE1CC0", VA = "0x1FE1CC0", Slot = "7")]
		protected override void OnSetCurves(ref AnimationClip clip)
		{
		}

		[Token(Token = "0x60002FB")]
		[Address(RVA = "0x1FE1E90", Offset = "0x1FE1E90", VA = "0x1FE1E90", Slot = "8")]
		protected override void OnSetKeyframes(float time, bool lastFrame)
		{
		}

		[Token(Token = "0x60002FC")]
		[Address(RVA = "0x1FE2228", Offset = "0x1FE2228", VA = "0x1FE2228")]
		private void UpdateHumanPose()
		{
		}

		[Token(Token = "0x60002FD")]
		[Address(RVA = "0x1FE2304", Offset = "0x1FE2304", VA = "0x1FE2304")]
		public HumanoidBaker()
		{
		}
	}
	[Token(Token = "0x2000069")]
	public class CameraController : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200006A")]
		public enum UpdateMode
		{
			[Token(Token = "0x400029A")]
			Update,
			[Token(Token = "0x400029B")]
			FixedUpdate,
			[Token(Token = "0x400029C")]
			LateUpdate,
			[Token(Token = "0x400029D")]
			FixedLateUpdate
		}

		[Token(Token = "0x4000273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x4000274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform rotationSpace;

		[Token(Token = "0x4000275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UpdateMode updateMode;

		[Token(Token = "0x4000276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool lockCursor;

		[Token(Token = "0x4000277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE22C50", Offset = "0xE22C50")]
		public bool smoothFollow;

		[Token(Token = "0x4000278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 offset;

		[Token(Token = "0x4000279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float followSpeed;

		[Token(Token = "0x400027A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE22C88", Offset = "0xE22C88")]
		public float rotationSensitivity;

		[Token(Token = "0x400027B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float yMinLimit;

		[Token(Token = "0x400027C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float yMaxLimit;

		[Token(Token = "0x400027D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool rotateAlways;

		[Token(Token = "0x400027E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		public bool rotateOnLeftButton;

		[Token(Token = "0x400027F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
		public bool rotateOnRightButton;

		[Token(Token = "0x4000280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F")]
		public bool rotateOnMiddleButton;

		[Token(Token = "0x4000281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE22CC0", Offset = "0xE22CC0")]
		public float distance;

		[Token(Token = "0x4000282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float minDistance;

		[Token(Token = "0x4000283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float maxDistance;

		[Token(Token = "0x4000284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float zoomSpeed;

		[Token(Token = "0x4000285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float zoomSensitivity;

		[Token(Token = "0x4000286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE22CF8", Offset = "0xE22CF8")]
		public LayerMask blockingLayers;

		[Token(Token = "0x4000287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float blockingRadius;

		[Token(Token = "0x4000288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float blockingSmoothTime;

		[Token(Token = "0x4000289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float blockingOriginOffset;

		[Token(Token = "0x400028A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE22D30", Offset = "0xE22D30")]
		public float blockedOffset;

		[Token(Token = "0x400028B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE22D48", Offset = "0xE22D48")]
		private float <x>k__BackingField;

		[Token(Token = "0x400028C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE22D58", Offset = "0xE22D58")]
		private float <y>k__BackingField;

		[Token(Token = "0x400028D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE22D68", Offset = "0xE22D68")]
		private float <distanceTarget>k__BackingField;

		[Token(Token = "0x400028E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector3 targetDistance;

		[Token(Token = "0x400028F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 position;

		[Token(Token = "0x4000290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Quaternion rotation;

		[Token(Token = "0x4000291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private Vector3 smoothPosition;

		[Token(Token = "0x4000292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Camera cam;

		[Token(Token = "0x4000293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool fixedFrame;

		[Token(Token = "0x4000294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float fixedDeltaTime;

		[Token(Token = "0x4000295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Quaternion r;

		[Token(Token = "0x4000296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Vector3 lastUp;

		[Token(Token = "0x4000297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float blockedDistance;

		[Token(Token = "0x4000298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float blockedDistanceV;

		[Token(Token = "0x17000073")]
		public float x
		{
			[Token(Token = "0x60002FE")]
			[Address(RVA = "0x1708060", Offset = "0x1708060", VA = "0x1708060")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C374", Offset = "0xE2C374")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60002FF")]
			[Address(RVA = "0x1708068", Offset = "0x1708068", VA = "0x1708068")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C384", Offset = "0xE2C384")]
			private set
			{
			}
		}

		[Token(Token = "0x17000074")]
		public float y
		{
			[Token(Token = "0x6000300")]
			[Address(RVA = "0x1708070", Offset = "0x1708070", VA = "0x1708070")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C394", Offset = "0xE2C394")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000301")]
			[Address(RVA = "0x1708078", Offset = "0x1708078", VA = "0x1708078")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C3A4", Offset = "0xE2C3A4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000075")]
		public float distanceTarget
		{
			[Token(Token = "0x6000302")]
			[Address(RVA = "0x1708080", Offset = "0x1708080", VA = "0x1708080")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C3B4", Offset = "0xE2C3B4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000303")]
			[Address(RVA = "0x1708088", Offset = "0x1708088", VA = "0x1708088")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C3C4", Offset = "0xE2C3C4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000076")]
		private float zoomAdd
		{
			[Token(Token = "0x600030D")]
			[Address(RVA = "0x1708BC4", Offset = "0x1708BC4", VA = "0x1708BC4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000304")]
		[Address(RVA = "0x1708090", Offset = "0x1708090", VA = "0x1708090")]
		public void SetAngles(Quaternion rotation)
		{
		}

		[Token(Token = "0x6000305")]
		[Address(RVA = "0x17080CC", Offset = "0x17080CC", VA = "0x17080CC")]
		public void SetAngles(float yaw, float pitch)
		{
		}

		[Token(Token = "0x6000306")]
		[Address(RVA = "0x17080D4", Offset = "0x17080D4", VA = "0x17080D4", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000307")]
		[Address(RVA = "0x17081FC", Offset = "0x17081FC", VA = "0x17081FC", Slot = "5")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000308")]
		[Address(RVA = "0x1708258", Offset = "0x1708258", VA = "0x1708258", Slot = "6")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6000309")]
		[Address(RVA = "0x17082C0", Offset = "0x17082C0", VA = "0x17082C0", Slot = "7")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x600030A")]
		[Address(RVA = "0x1708324", Offset = "0x1708324", VA = "0x1708324")]
		public void UpdateInput()
		{
		}

		[Token(Token = "0x600030B")]
		[Address(RVA = "0x1708230", Offset = "0x1708230", VA = "0x1708230")]
		public void UpdateTransform()
		{
		}

		[Token(Token = "0x600030C")]
		[Address(RVA = "0x17084A4", Offset = "0x17084A4", VA = "0x17084A4")]
		public void UpdateTransform(float deltaTime)
		{
		}

		[Token(Token = "0x600030E")]
		[Address(RVA = "0x1708B14", Offset = "0x1708B14", VA = "0x1708B14")]
		private float ClampAngle(float angle, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x600030F")]
		[Address(RVA = "0x1708C38", Offset = "0x1708C38", VA = "0x1708C38")]
		public CameraController()
		{
		}
	}
	[Token(Token = "0x200006B")]
	public class CameraControllerFPS : MonoBehaviour
	{
		[Token(Token = "0x400029E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float rotationSensitivity;

		[Token(Token = "0x400029F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float yMinLimit;

		[Token(Token = "0x40002A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float yMaxLimit;

		[Token(Token = "0x40002A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float x;

		[Token(Token = "0x40002A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float y;

		[Token(Token = "0x6000310")]
		[Address(RVA = "0x1708D50", Offset = "0x1708D50", VA = "0x1708D50")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000311")]
		[Address(RVA = "0x1708D88", Offset = "0x1708D88", VA = "0x1708D88")]
		public void LateUpdate()
		{
		}

		[Token(Token = "0x6000312")]
		[Address(RVA = "0x1708F40", Offset = "0x1708F40", VA = "0x1708F40")]
		private float ClampAngle(float angle, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6000313")]
		[Address(RVA = "0x1708FF0", Offset = "0x1708FF0", VA = "0x1708FF0")]
		public CameraControllerFPS()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200006C")]
	public enum Axis
	{
		[Token(Token = "0x40002A4")]
		X,
		[Token(Token = "0x40002A5")]
		Y,
		[Token(Token = "0x40002A6")]
		Z
	}
	[Token(Token = "0x200006D")]
	public class AxisTools
	{
		[Token(Token = "0x6000314")]
		[Address(RVA = "0x16FEB58", Offset = "0x16FEB58", VA = "0x16FEB58")]
		public static Vector3 ToVector3(Axis axis)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000315")]
		[Address(RVA = "0x16FEC10", Offset = "0x16FEC10", VA = "0x16FEC10")]
		public static Axis GetAxisToDirection(Transform t, Vector3 direction)
		{
			return default(Axis);
		}

		[Token(Token = "0x6000316")]
		[Address(RVA = "0x16FED2C", Offset = "0x16FED2C", VA = "0x16FED2C")]
		public static Vector3 GetAxisVectorToDirection(Transform t, Vector3 direction)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000317")]
		[Address(RVA = "0x16FED74", Offset = "0x16FED74", VA = "0x16FED74")]
		public static Vector3 GetAxisVectorToDirection(Quaternion r, Vector3 direction)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x200006E")]
	public static class BipedNaming
	{
		[Serializable]
		[Token(Token = "0x200006F")]
		public enum BoneType
		{
			[Token(Token = "0x40002BA")]
			Unassigned,
			[Token(Token = "0x40002BB")]
			Spine,
			[Token(Token = "0x40002BC")]
			Head,
			[Token(Token = "0x40002BD")]
			Arm,
			[Token(Token = "0x40002BE")]
			Leg,
			[Token(Token = "0x40002BF")]
			Tail,
			[Token(Token = "0x40002C0")]
			Eye
		}

		[Serializable]
		[Token(Token = "0x2000070")]
		public enum BoneSide
		{
			[Token(Token = "0x40002C2")]
			Center,
			[Token(Token = "0x40002C3")]
			Left,
			[Token(Token = "0x40002C4")]
			Right
		}

		[Token(Token = "0x40002A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string[] typeLeft;

		[Token(Token = "0x40002A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string[] typeRight;

		[Token(Token = "0x40002A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string[] typeSpine;

		[Token(Token = "0x40002AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static string[] typeHead;

		[Token(Token = "0x40002AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static string[] typeArm;

		[Token(Token = "0x40002AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static string[] typeLeg;

		[Token(Token = "0x40002AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static string[] typeTail;

		[Token(Token = "0x40002AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static string[] typeEye;

		[Token(Token = "0x40002AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static string[] typeExclude;

		[Token(Token = "0x40002B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static string[] typeExcludeSpine;

		[Token(Token = "0x40002B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static string[] typeExcludeHead;

		[Token(Token = "0x40002B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static string[] typeExcludeArm;

		[Token(Token = "0x40002B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static string[] typeExcludeLeg;

		[Token(Token = "0x40002B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public static string[] typeExcludeTail;

		[Token(Token = "0x40002B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public static string[] typeExcludeEye;

		[Token(Token = "0x40002B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public static string[] pelvis;

		[Token(Token = "0x40002B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public static string[] hand;

		[Token(Token = "0x40002B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public static string[] foot;

		[Token(Token = "0x6000318")]
		[Address(RVA = "0x1701E10", Offset = "0x1701E10", VA = "0x1701E10")]
		public static Transform[] GetBonesOfType(BoneType boneType, Transform[] bones)
		{
			return null;
		}

		[Token(Token = "0x6000319")]
		[Address(RVA = "0x1702118", Offset = "0x1702118", VA = "0x1702118")]
		public static Transform[] GetBonesOfSide(BoneSide boneSide, Transform[] bones)
		{
			return null;
		}

		[Token(Token = "0x600031A")]
		[Address(RVA = "0x1702370", Offset = "0x1702370", VA = "0x1702370")]
		public static Transform[] GetBonesOfTypeAndSide(BoneType boneType, BoneSide boneSide, Transform[] bones)
		{
			return null;
		}

		[Token(Token = "0x600031B")]
		[Address(RVA = "0x17023F4", Offset = "0x17023F4", VA = "0x17023F4")]
		public static Transform GetNamingMatch(Transform[] transforms, params string[][] namings)
		{
			return null;
		}

		[Token(Token = "0x600031C")]
		[Address(RVA = "0x1701FC8", Offset = "0x1701FC8", VA = "0x1701FC8")]
		public static BoneType GetBoneType(string boneName)
		{
			return default(BoneType);
		}

		[Token(Token = "0x600031D")]
		[Address(RVA = "0x17022D0", Offset = "0x17022D0", VA = "0x17022D0")]
		public static BoneSide GetBoneSide(string boneName)
		{
			return default(BoneSide);
		}

		[Token(Token = "0x600031E")]
		[Address(RVA = "0x1702C34", Offset = "0x1702C34", VA = "0x1702C34")]
		public static Transform GetBone(Transform[] transforms, BoneType boneType, BoneSide boneSide = BoneSide.Center, params string[][] namings)
		{
			return null;
		}

		[Token(Token = "0x600031F")]
		[Address(RVA = "0x1702A4C", Offset = "0x1702A4C", VA = "0x1702A4C")]
		private static bool isLeft(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000320")]
		[Address(RVA = "0x1702B40", Offset = "0x1702B40", VA = "0x1702B40")]
		private static bool isRight(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000321")]
		[Address(RVA = "0x1702614", Offset = "0x1702614", VA = "0x1702614")]
		private static bool isSpine(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000322")]
		[Address(RVA = "0x17026C8", Offset = "0x17026C8", VA = "0x17026C8")]
		private static bool isHead(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000323")]
		[Address(RVA = "0x170277C", Offset = "0x170277C", VA = "0x170277C")]
		private static bool isArm(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000324")]
		[Address(RVA = "0x1702830", Offset = "0x1702830", VA = "0x1702830")]
		private static bool isLeg(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000325")]
		[Address(RVA = "0x17028E4", Offset = "0x17028E4", VA = "0x17028E4")]
		private static bool isTail(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000326")]
		[Address(RVA = "0x1702998", Offset = "0x1702998", VA = "0x1702998")]
		private static bool isEye(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000327")]
		[Address(RVA = "0x1702528", Offset = "0x1702528", VA = "0x1702528")]
		private static bool matchesNaming(string boneName, string[] namingConvention)
		{
			return default(bool);
		}

		[Token(Token = "0x6000328")]
		[Address(RVA = "0x1702DB8", Offset = "0x1702DB8", VA = "0x1702DB8")]
		private static bool excludesNaming(string boneName, string[] namingConvention)
		{
			return default(bool);
		}

		[Token(Token = "0x6000329")]
		[Address(RVA = "0x1702D3C", Offset = "0x1702D3C", VA = "0x1702D3C")]
		private static string firstLetter(string boneName)
		{
			return null;
		}

		[Token(Token = "0x600032A")]
		[Address(RVA = "0x1702CC4", Offset = "0x1702CC4", VA = "0x1702CC4")]
		private static string lastLetter(string boneName)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000071")]
	public class BipedReferences
	{
		[Token(Token = "0x2000072")]
		public struct AutoDetectParams
		{
			[Token(Token = "0x40002D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool legsParentInSpine;

			[Token(Token = "0x40002D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			public bool includeEyes;

			[Token(Token = "0x6000341")]
			[Address(RVA = "0x170804C", Offset = "0x170804C", VA = "0x170804C")]
			public AutoDetectParams(bool legsParentInSpine, bool includeEyes)
			{
			}
		}

		[Token(Token = "0x40002C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform root;

		[Token(Token = "0x40002C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform pelvis;

		[Token(Token = "0x40002C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform leftThigh;

		[Token(Token = "0x40002C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform leftCalf;

		[Token(Token = "0x40002C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform leftFoot;

		[Token(Token = "0x40002CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform rightThigh;

		[Token(Token = "0x40002CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform rightCalf;

		[Token(Token = "0x40002CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform rightFoot;

		[Token(Token = "0x40002CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform leftUpperArm;

		[Token(Token = "0x40002CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform leftForearm;

		[Token(Token = "0x40002CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform leftHand;

		[Token(Token = "0x40002D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform rightUpperArm;

		[Token(Token = "0x40002D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform rightForearm;

		[Token(Token = "0x40002D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Transform rightHand;

		[Token(Token = "0x40002D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Transform head;

		[Token(Token = "0x40002D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Transform[] spine;

		[Token(Token = "0x40002D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Transform[] eyes;

		[Token(Token = "0x17000077")]
		public virtual bool isFilled
		{
			[Token(Token = "0x600032C")]
			[Address(RVA = "0x17051A0", Offset = "0x17051A0", VA = "0x17051A0", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600032D")]
		[Address(RVA = "0x170558C", Offset = "0x170558C", VA = "0x170558C")]
		public static bool AutoDetectReferences(ref BipedReferences references, Transform root, AutoDetectParams autoDetectParams)
		{
			return default(bool);
		}

		[Token(Token = "0x600032E")]
		[Address(RVA = "0x1705C98", Offset = "0x1705C98", VA = "0x1705C98")]
		public static void DetectReferencesByNaming(ref BipedReferences references, Transform root, AutoDetectParams autoDetectParams)
		{
		}

		[Token(Token = "0x600032F")]
		[Address(RVA = "0x1705808", Offset = "0x1705808", VA = "0x1705808")]
		public static void AssignHumanoidReferences(ref BipedReferences references, Animator animator, AutoDetectParams autoDetectParams)
		{
		}

		[Token(Token = "0x6000330")]
		[Address(RVA = "0x17064CC", Offset = "0x17064CC", VA = "0x17064CC")]
		public static bool SetupError(BipedReferences references, ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000331")]
		[Address(RVA = "0x17065CC", Offset = "0x17065CC", VA = "0x17065CC")]
		public static bool SetupWarning(BipedReferences references, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000332")]
		[Address(RVA = "0x1706B80", Offset = "0x1706B80", VA = "0x1706B80")]
		private static bool IsNeckBone(Transform bone, Transform leftUpperArm)
		{
			return default(bool);
		}

		[Token(Token = "0x6000333")]
		[Address(RVA = "0x1706970", Offset = "0x1706970", VA = "0x1706970")]
		private static bool AddBoneToEyes(Transform bone, ref BipedReferences references, AutoDetectParams autoDetectParams)
		{
			return default(bool);
		}

		[Token(Token = "0x6000334")]
		[Address(RVA = "0x17067E8", Offset = "0x17067E8", VA = "0x17067E8")]
		private static bool AddBoneToSpine(Transform bone, ref BipedReferences references, AutoDetectParams autoDetectParams)
		{
			return default(bool);
		}

		[Token(Token = "0x6000335")]
		[Address(RVA = "0x170666C", Offset = "0x170666C", VA = "0x170666C")]
		private static void DetectLimb(BipedNaming.BoneType boneType, BipedNaming.BoneSide boneSide, ref Transform firstBone, ref Transform secondBone, ref Transform lastBone, Transform[] transforms)
		{
		}

		[Token(Token = "0x6000336")]
		[Address(RVA = "0x1706A74", Offset = "0x1706A74", VA = "0x1706A74")]
		private static void AddBoneToHierarchy(ref Transform[] bones, Transform transform)
		{
		}

		[Token(Token = "0x6000337")]
		[Address(RVA = "0x1706C7C", Offset = "0x1706C7C", VA = "0x1706C7C")]
		private static bool LimbError(Transform bone1, Transform bone2, Transform bone3, ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000338")]
		[Address(RVA = "0x17077E0", Offset = "0x17077E0", VA = "0x17077E0")]
		private static bool LimbWarning(Transform bone1, Transform bone2, Transform bone3, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000339")]
		[Address(RVA = "0x17072AC", Offset = "0x17072AC", VA = "0x17072AC")]
		private static bool SpineError(BipedReferences references, ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x600033A")]
		[Address(RVA = "0x1707B28", Offset = "0x1707B28", VA = "0x1707B28")]
		private static bool SpineWarning(BipedReferences references, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x600033B")]
		[Address(RVA = "0x17075F8", Offset = "0x17075F8", VA = "0x17075F8")]
		private static bool EyesError(BipedReferences references, ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x600033C")]
		[Address(RVA = "0x1707B30", Offset = "0x1707B30", VA = "0x1707B30")]
		private static bool EyesWarning(BipedReferences references, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x600033D")]
		[Address(RVA = "0x1707B38", Offset = "0x1707B38", VA = "0x1707B38")]
		private static bool RootHeightWarning(BipedReferences references, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x600033E")]
		[Address(RVA = "0x1707D04", Offset = "0x1707D04", VA = "0x1707D04")]
		private static bool FacingAxisWarning(BipedReferences references, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x600033F")]
		[Address(RVA = "0x1707F28", Offset = "0x1707F28", VA = "0x1707F28")]
		private static float GetVerticalOffset(Vector3 p1, Vector3 p2, Quaternion rotation)
		{
			return default(float);
		}

		[Token(Token = "0x6000340")]
		[Address(RVA = "0x1705780", Offset = "0x1705780", VA = "0x1705780")]
		public BipedReferences()
		{
		}
	}
	[Token(Token = "0x2000073")]
	public class Comments : MonoBehaviour
	{
		[Token(Token = "0x40002D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "MultilineAttribute", RVA = "0xE22D78", Offset = "0xE22D78")]
		public string text;

		[Token(Token = "0x6000342")]
		[Address(RVA = "0x170900C", Offset = "0x170900C", VA = "0x170900C")]
		public Comments()
		{
		}
	}
	[Token(Token = "0x2000074")]
	public class DemoGUIMessage : MonoBehaviour
	{
		[Token(Token = "0x40002D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string text;

		[Token(Token = "0x40002DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color color;

		[Token(Token = "0x6000343")]
		[Address(RVA = "0x1709014", Offset = "0x1709014", VA = "0x1709014")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000344")]
		[Address(RVA = "0x1709154", Offset = "0x1709154", VA = "0x1709154")]
		public DemoGUIMessage()
		{
		}
	}
	[Token(Token = "0x2000075")]
	public class Hierarchy
	{
		[Token(Token = "0x6000345")]
		[Address(RVA = "0x1FE0D44", Offset = "0x1FE0D44", VA = "0x1FE0D44")]
		public static bool HierarchyIsValid(Transform[] bones)
		{
			return default(bool);
		}

		[Token(Token = "0x6000346")]
		[Address(RVA = "0x1FE0F44", Offset = "0x1FE0F44", VA = "0x1FE0F44")]
		public static UnityEngine.Object ContainsDuplicate(UnityEngine.Object[] objects)
		{
			return null;
		}

		[Token(Token = "0x6000347")]
		[Address(RVA = "0x1FE0DDC", Offset = "0x1FE0DDC", VA = "0x1FE0DDC")]
		public static bool IsAncestor(Transform transform, Transform ancestor)
		{
			return default(bool);
		}

		[Token(Token = "0x6000348")]
		[Address(RVA = "0x1FE1068", Offset = "0x1FE1068", VA = "0x1FE1068")]
		public static bool ContainsChild(Transform transform, Transform child)
		{
			return default(bool);
		}

		[Token(Token = "0x6000349")]
		[Address(RVA = "0x1FE118C", Offset = "0x1FE118C", VA = "0x1FE118C")]
		public static void AddAncestors(Transform transform, Transform blocker, ref Transform[] array)
		{
		}

		[Token(Token = "0x600034A")]
		[Address(RVA = "0x1FE143C", Offset = "0x1FE143C", VA = "0x1FE143C")]
		public static Transform GetFirstCommonAncestor(Transform t1, Transform t2)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000076")]
	public enum InterpolationMode
	{
		[Token(Token = "0x40002DC")]
		None,
		[Token(Token = "0x40002DD")]
		InOutCubic,
		[Token(Token = "0x40002DE")]
		InOutQuintic,
		[Token(Token = "0x40002DF")]
		InOutSine,
		[Token(Token = "0x40002E0")]
		InQuintic,
		[Token(Token = "0x40002E1")]
		InQuartic,
		[Token(Token = "0x40002E2")]
		InCubic,
		[Token(Token = "0x40002E3")]
		InQuadratic,
		[Token(Token = "0x40002E4")]
		InElastic,
		[Token(Token = "0x40002E5")]
		InElasticSmall,
		[Token(Token = "0x40002E6")]
		InElasticBig,
		[Token(Token = "0x40002E7")]
		InSine,
		[Token(Token = "0x40002E8")]
		InBack,
		[Token(Token = "0x40002E9")]
		OutQuintic,
		[Token(Token = "0x40002EA")]
		OutQuartic,
		[Token(Token = "0x40002EB")]
		OutCubic,
		[Token(Token = "0x40002EC")]
		OutInCubic,
		[Token(Token = "0x40002ED")]
		OutInQuartic,
		[Token(Token = "0x40002EE")]
		OutElastic,
		[Token(Token = "0x40002EF")]
		OutElasticSmall,
		[Token(Token = "0x40002F0")]
		OutElasticBig,
		[Token(Token = "0x40002F1")]
		OutSine,
		[Token(Token = "0x40002F2")]
		OutBack,
		[Token(Token = "0x40002F3")]
		OutBackCubic,
		[Token(Token = "0x40002F4")]
		OutBackQuartic,
		[Token(Token = "0x40002F5")]
		BackInCubic,
		[Token(Token = "0x40002F6")]
		BackInQuartic
	}
	[Token(Token = "0x2000077")]
	public class Interp
	{
		[Token(Token = "0x600034B")]
		[Address(RVA = "0x1FE23C4", Offset = "0x1FE23C4", VA = "0x1FE23C4")]
		public static float Float(float t, InterpolationMode mode)
		{
			return default(float);
		}

		[Token(Token = "0x600034C")]
		[Address(RVA = "0x1FE2E2C", Offset = "0x1FE2E2C", VA = "0x1FE2E2C")]
		public static float LerpValue(float value, float target, float increaseSpeed, float decreaseSpeed)
		{
			return default(float);
		}

		[Token(Token = "0x600034D")]
		[Address(RVA = "0x1FE2730", Offset = "0x1FE2730", VA = "0x1FE2730")]
		private static float None(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x600034E")]
		[Address(RVA = "0x1FE273C", Offset = "0x1FE273C", VA = "0x1FE273C")]
		private static float InOutCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x600034F")]
		[Address(RVA = "0x1FE2760", Offset = "0x1FE2760", VA = "0x1FE2760")]
		private static float InOutQuintic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000350")]
		[Address(RVA = "0x1FE279C", Offset = "0x1FE279C", VA = "0x1FE279C")]
		private static float InQuintic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000351")]
		[Address(RVA = "0x1FE27B4", Offset = "0x1FE27B4", VA = "0x1FE27B4")]
		private static float InQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000352")]
		[Address(RVA = "0x1FE27C8", Offset = "0x1FE27C8", VA = "0x1FE27C8")]
		private static float InCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000353")]
		[Address(RVA = "0x1FE27DC", Offset = "0x1FE27DC", VA = "0x1FE27DC")]
		private static float InQuadratic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000354")]
		[Address(RVA = "0x1FE27EC", Offset = "0x1FE27EC", VA = "0x1FE27EC")]
		private static float OutQuintic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000355")]
		[Address(RVA = "0x1FE2834", Offset = "0x1FE2834", VA = "0x1FE2834")]
		private static float OutQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000356")]
		[Address(RVA = "0x1FE286C", Offset = "0x1FE286C", VA = "0x1FE286C")]
		private static float OutCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000357")]
		[Address(RVA = "0x1FE2894", Offset = "0x1FE2894", VA = "0x1FE2894")]
		private static float OutInCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000358")]
		[Address(RVA = "0x1FE28C8", Offset = "0x1FE28C8", VA = "0x1FE28C8")]
		private static float BackInCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000359")]
		[Address(RVA = "0x1FE28F0", Offset = "0x1FE28F0", VA = "0x1FE28F0")]
		private static float BackInQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x600035A")]
		[Address(RVA = "0x1FE2920", Offset = "0x1FE2920", VA = "0x1FE2920")]
		private static float OutBackCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x600035B")]
		[Address(RVA = "0x1FE2954", Offset = "0x1FE2954", VA = "0x1FE2954")]
		private static float OutBackQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x600035C")]
		[Address(RVA = "0x1FE2998", Offset = "0x1FE2998", VA = "0x1FE2998")]
		private static float OutElasticSmall(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x600035D")]
		[Address(RVA = "0x1FE29FC", Offset = "0x1FE29FC", VA = "0x1FE29FC")]
		private static float OutElasticBig(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x600035E")]
		[Address(RVA = "0x1FE2A60", Offset = "0x1FE2A60", VA = "0x1FE2A60")]
		private static float InElasticSmall(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x600035F")]
		[Address(RVA = "0x1FE2AB4", Offset = "0x1FE2AB4", VA = "0x1FE2AB4")]
		private static float InElasticBig(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000360")]
		[Address(RVA = "0x1FE2B08", Offset = "0x1FE2B08", VA = "0x1FE2B08")]
		private static float InSine(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000361")]
		[Address(RVA = "0x1FE2BA0", Offset = "0x1FE2BA0", VA = "0x1FE2BA0")]
		private static float OutSine(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000362")]
		[Address(RVA = "0x1FE2C34", Offset = "0x1FE2C34", VA = "0x1FE2C34")]
		private static float InOutSine(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000363")]
		[Address(RVA = "0x1FE2CD8", Offset = "0x1FE2CD8", VA = "0x1FE2CD8")]
		private static float OutElastic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000364")]
		[Address(RVA = "0x1FE2DBC", Offset = "0x1FE2DBC", VA = "0x1FE2DBC")]
		private static float InBack(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000365")]
		[Address(RVA = "0x1FE2DEC", Offset = "0x1FE2DEC", VA = "0x1FE2DEC")]
		private static float OutBack(float t, float b, float c)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000078")]
	public class LargeHeader : PropertyAttribute
	{
		[Token(Token = "0x40002F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x40002F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string color;

		[Token(Token = "0x6000366")]
		[Address(RVA = "0x1FE2F28", Offset = "0x1FE2F28", VA = "0x1FE2F28")]
		public LargeHeader(string name)
		{
		}
	}
	[Token(Token = "0x2000079")]
	public static class QuaTools
	{
		[Token(Token = "0x6000367")]
		[Address(RVA = "0x1FE2FB8", Offset = "0x1FE2FB8", VA = "0x1FE2FB8")]
		public static Quaternion Lerp(Quaternion fromRotation, Quaternion toRotation, float weight)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000368")]
		[Address(RVA = "0x1FE3104", Offset = "0x1FE3104", VA = "0x1FE3104")]
		public static Quaternion FromToAroundAxis(Vector3 fromDirection, Vector3 toDirection, Vector3 axis)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000369")]
		[Address(RVA = "0x1FE3290", Offset = "0x1FE3290", VA = "0x1FE3290")]
		public static Quaternion RotationToLocalSpace(Quaternion space, Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600036A")]
		[Address(RVA = "0x1FE3360", Offset = "0x1FE3360", VA = "0x1FE3360")]
		public static Quaternion FromToRotation(Quaternion from, Quaternion to)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600036B")]
		[Address(RVA = "0x1FE34B4", Offset = "0x1FE34B4", VA = "0x1FE34B4")]
		public static Vector3 GetAxis(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600036C")]
		[Address(RVA = "0x1FE3738", Offset = "0x1FE3738", VA = "0x1FE3738")]
		public static Quaternion ClampRotation(Quaternion rotation, float clampWeight, int clampSmoothing)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600036D")]
		[Address(RVA = "0x1FE394C", Offset = "0x1FE394C", VA = "0x1FE394C")]
		public static Quaternion MatchRotation(Quaternion targetRotation, Vector3 targetforwardAxis, Vector3 targetUpAxis, Vector3 forwardAxis, Vector3 upAxis)
		{
			return default(Quaternion);
		}
	}
	[Token(Token = "0x200007A")]
	public abstract class Singleton<T> : MonoBehaviour where T : Singleton<T>
	{
		[Token(Token = "0x40002F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static T sInstance;

		[Token(Token = "0x17000078")]
		public static T instance
		{
			[Token(Token = "0x600036E")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600036F")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000370")]
		protected Singleton()
		{
		}
	}
	[Token(Token = "0x200007B")]
	public class SolverManager : MonoBehaviour
	{
		[Token(Token = "0x40002FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE22D88", Offset = "0xE22D88")]
		public bool fixTransforms;

		[Token(Token = "0x40002FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator animator;

		[Token(Token = "0x40002FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Animation legacy;

		[Token(Token = "0x40002FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool updateFrame;

		[Token(Token = "0x40002FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool componentInitiated;

		[Token(Token = "0x40002FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		private bool skipSolverUpdate;

		[Token(Token = "0x17000079")]
		private bool animatePhysics
		{
			[Token(Token = "0x6000377")]
			[Address(RVA = "0x1FE3BF4", Offset = "0x1FE3BF4", VA = "0x1FE3BF4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700007A")]
		private bool isAnimated
		{
			[Token(Token = "0x600037B")]
			[Address(RVA = "0x1FE3F28", Offset = "0x1FE3F28", VA = "0x1FE3F28")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000371")]
		[Address(RVA = "0x1FE3ABC", Offset = "0x1FE3ABC", VA = "0x1FE3ABC")]
		public void Disable()
		{
		}

		[Token(Token = "0x6000372")]
		[Address(RVA = "0x1FE3B54", Offset = "0x1FE3B54", VA = "0x1FE3B54", Slot = "4")]
		protected virtual void InitiateSolver()
		{
		}

		[Token(Token = "0x6000373")]
		[Address(RVA = "0x1FE3B58", Offset = "0x1FE3B58", VA = "0x1FE3B58", Slot = "5")]
		protected virtual void UpdateSolver()
		{
		}

		[Token(Token = "0x6000374")]
		[Address(RVA = "0x1FE3B5C", Offset = "0x1FE3B5C", VA = "0x1FE3B5C", Slot = "6")]
		protected virtual void FixTransforms()
		{
		}

		[Token(Token = "0x6000375")]
		[Address(RVA = "0x1FE3B60", Offset = "0x1FE3B60", VA = "0x1FE3B60")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000376")]
		[Address(RVA = "0x1FE3BF0", Offset = "0x1FE3BF0", VA = "0x1FE3BF0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000378")]
		[Address(RVA = "0x1FE3B98", Offset = "0x1FE3B98", VA = "0x1FE3B98")]
		private void Initiate()
		{
		}

		[Token(Token = "0x6000379")]
		[Address(RVA = "0x1FE3EDC", Offset = "0x1FE3EDC", VA = "0x1FE3EDC")]
		private void Update()
		{
		}

		[Token(Token = "0x600037A")]
		[Address(RVA = "0x1FE3CE4", Offset = "0x1FE3CE4", VA = "0x1FE3CE4")]
		private void FindAnimatorRecursive(Transform t, bool findInChildren)
		{
		}

		[Token(Token = "0x600037C")]
		[Address(RVA = "0x1FE3FE4", Offset = "0x1FE3FE4", VA = "0x1FE3FE4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600037D")]
		[Address(RVA = "0x1FE4040", Offset = "0x1FE4040", VA = "0x1FE4040")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600037E")]
		[Address(RVA = "0x1FE409C", Offset = "0x1FE409C", VA = "0x1FE409C")]
		public void UpdateSolverExternal()
		{
		}

		[Token(Token = "0x600037F")]
		[Address(RVA = "0x1FE40E4", Offset = "0x1FE40E4", VA = "0x1FE40E4")]
		public SolverManager()
		{
		}
	}
	[Token(Token = "0x200007C")]
	public class TriggerEventBroadcaster : MonoBehaviour
	{
		[Token(Token = "0x4000300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject target;

		[Token(Token = "0x6000380")]
		[Address(RVA = "0x1FE4164", Offset = "0x1FE4164", VA = "0x1FE4164")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6000381")]
		[Address(RVA = "0x1FE421C", Offset = "0x1FE421C", VA = "0x1FE421C")]
		private void OnTriggerStay(Collider collider)
		{
		}

		[Token(Token = "0x6000382")]
		[Address(RVA = "0x1FE42D4", Offset = "0x1FE42D4", VA = "0x1FE42D4")]
		private void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6000383")]
		[Address(RVA = "0x1FE438C", Offset = "0x1FE438C", VA = "0x1FE438C")]
		public TriggerEventBroadcaster()
		{
		}
	}
	[Token(Token = "0x200007D")]
	public static class V3Tools
	{
		[Token(Token = "0x6000384")]
		[Address(RVA = "0x1FE4394", Offset = "0x1FE4394", VA = "0x1FE4394")]
		public static float GetYaw(Vector3 forward)
		{
			return default(float);
		}

		[Token(Token = "0x6000385")]
		[Address(RVA = "0x1FE4418", Offset = "0x1FE4418", VA = "0x1FE4418")]
		public static float GetPitch(Vector3 forward)
		{
			return default(float);
		}

		[Token(Token = "0x6000386")]
		[Address(RVA = "0x1FE44B8", Offset = "0x1FE44B8", VA = "0x1FE44B8")]
		public static Vector3 Lerp(Vector3 fromVector, Vector3 toVector, float weight)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000387")]
		[Address(RVA = "0x1FE45B0", Offset = "0x1FE45B0", VA = "0x1FE45B0")]
		public static Vector3 ExtractVertical(Vector3 v, Vector3 verticalAxis, float weight)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000388")]
		[Address(RVA = "0x1FE46A8", Offset = "0x1FE46A8", VA = "0x1FE46A8")]
		public static Vector3 ExtractHorizontal(Vector3 v, Vector3 normal, float weight)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000389")]
		[Address(RVA = "0x1FE47A8", Offset = "0x1FE47A8", VA = "0x1FE47A8")]
		public static Vector3 ClampDirection(Vector3 direction, Vector3 normalDirection, float clampWeight, int clampSmoothing, out bool changed)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600038A")]
		[Address(RVA = "0x1FE49E4", Offset = "0x1FE49E4", VA = "0x1FE49E4")]
		public static Vector3 LineToPlane(Vector3 origin, Vector3 direction, Vector3 planeNormal, Vector3 planePoint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600038B")]
		[Address(RVA = "0x1FE4BE4", Offset = "0x1FE4BE4", VA = "0x1FE4BE4")]
		public static Vector3 PointToPlane(Vector3 point, Vector3 planePosition, Vector3 planeNormal)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x200007E")]
	public static class Warning
	{
		[Token(Token = "0x200007F")]
		public delegate void Logger(string message);

		[Token(Token = "0x4000301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool logged;

		[Token(Token = "0x600038C")]
		[Address(RVA = "0x1FE4DC0", Offset = "0x1FE4DC0", VA = "0x1FE4DC0")]
		public static void Log(string message, Transform context, bool logInEditMode = false)
		{
		}
	}
}
namespace RootMotion.FinalIK
{
	[Token(Token = "0x2000080")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xE20C04", Offset = "0xE20C04")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE20C04", Offset = "0xE20C04")]
	public class BipedIK : SolverManager
	{
		[Token(Token = "0x4000302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public BipedReferences references;

		[Token(Token = "0x4000303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public BipedIKSolvers solvers;

		[Token(Token = "0x6000391")]
		[Address(RVA = "0x15A71DC", Offset = "0x15A71DC", VA = "0x15A71DC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2C3D4", Offset = "0xE2C3D4")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6000392")]
		[Address(RVA = "0x15A7228", Offset = "0x15A7228", VA = "0x15A7228")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2C40C", Offset = "0xE2C40C")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000393")]
		[Address(RVA = "0x15A7274", Offset = "0x15A7274", VA = "0x15A7274")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2C444", Offset = "0xE2C444")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000394")]
		[Address(RVA = "0x15A72C0", Offset = "0x15A72C0", VA = "0x15A72C0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2C47C", Offset = "0xE2C47C")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000395")]
		[Address(RVA = "0x15A730C", Offset = "0x15A730C", VA = "0x15A730C")]
		public float GetIKPositionWeight(AvatarIKGoal goal)
		{
			return default(float);
		}

		[Token(Token = "0x6000396")]
		[Address(RVA = "0x15A73A8", Offset = "0x15A73A8", VA = "0x15A73A8")]
		public float GetIKRotationWeight(AvatarIKGoal goal)
		{
			return default(float);
		}

		[Token(Token = "0x6000397")]
		[Address(RVA = "0x15A73C8", Offset = "0x15A73C8", VA = "0x15A73C8")]
		public void SetIKPositionWeight(AvatarIKGoal goal, float weight)
		{
		}

		[Token(Token = "0x6000398")]
		[Address(RVA = "0x15A73F8", Offset = "0x15A73F8", VA = "0x15A73F8")]
		public void SetIKRotationWeight(AvatarIKGoal goal, float weight)
		{
		}

		[Token(Token = "0x6000399")]
		[Address(RVA = "0x15A7428", Offset = "0x15A7428", VA = "0x15A7428")]
		public void SetIKPosition(AvatarIKGoal goal, Vector3 IKPosition)
		{
		}

		[Token(Token = "0x600039A")]
		[Address(RVA = "0x15A7468", Offset = "0x15A7468", VA = "0x15A7468")]
		public void SetIKRotation(AvatarIKGoal goal, Quaternion IKRotation)
		{
		}

		[Token(Token = "0x600039B")]
		[Address(RVA = "0x15A74AC", Offset = "0x15A74AC", VA = "0x15A74AC")]
		public Vector3 GetIKPosition(AvatarIKGoal goal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600039C")]
		[Address(RVA = "0x15A74D0", Offset = "0x15A74D0", VA = "0x15A74D0")]
		public Quaternion GetIKRotation(AvatarIKGoal goal)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600039D")]
		[Address(RVA = "0x15A74F4", Offset = "0x15A74F4", VA = "0x15A74F4")]
		public void SetLookAtWeight(float weight, float bodyWeight, float headWeight, float eyesWeight, float clampWeight, float clampWeightHead, float clampWeightEyes)
		{
		}

		[Token(Token = "0x600039E")]
		[Address(RVA = "0x15A751C", Offset = "0x15A751C", VA = "0x15A751C")]
		public void SetLookAtPosition(Vector3 lookAtPosition)
		{
		}

		[Token(Token = "0x600039F")]
		[Address(RVA = "0x15A7548", Offset = "0x15A7548", VA = "0x15A7548")]
		public void SetSpinePosition(Vector3 spinePosition)
		{
		}

		[Token(Token = "0x60003A0")]
		[Address(RVA = "0x15A7574", Offset = "0x15A7574", VA = "0x15A7574")]
		public void SetSpineWeight(float weight)
		{
		}

		[Token(Token = "0x60003A1")]
		[Address(RVA = "0x15A732C", Offset = "0x15A732C", VA = "0x15A732C")]
		public IKSolverLimb GetGoalIK(AvatarIKGoal goal)
		{
			return null;
		}

		[Token(Token = "0x60003A2")]
		[Address(RVA = "0x15A759C", Offset = "0x15A759C", VA = "0x15A759C")]
		public void InitiateBipedIK()
		{
		}

		[Token(Token = "0x60003A3")]
		[Address(RVA = "0x15A75A8", Offset = "0x15A75A8", VA = "0x15A75A8")]
		public void UpdateBipedIK()
		{
		}

		[Token(Token = "0x60003A4")]
		[Address(RVA = "0x15A75B4", Offset = "0x15A75B4", VA = "0x15A75B4")]
		public void SetToDefaults()
		{
		}

		[Token(Token = "0x60003A5")]
		[Address(RVA = "0x15A78DC", Offset = "0x15A78DC", VA = "0x15A78DC", Slot = "6")]
		protected override void FixTransforms()
		{
		}

		[Token(Token = "0x60003A6")]
		[Address(RVA = "0x15A7984", Offset = "0x15A7984", VA = "0x15A7984", Slot = "4")]
		protected override void InitiateSolver()
		{
		}

		[Token(Token = "0x60003A7")]
		[Address(RVA = "0x15A7CD0", Offset = "0x15A7CD0", VA = "0x15A7CD0", Slot = "5")]
		protected override void UpdateSolver()
		{
		}

		[Token(Token = "0x60003A8")]
		[Address(RVA = "0x15A81B8", Offset = "0x15A81B8", VA = "0x15A81B8")]
		public void LogWarning(string message)
		{
		}

		[Token(Token = "0x60003A9")]
		[Address(RVA = "0x15A81EC", Offset = "0x15A81EC", VA = "0x15A81EC")]
		public BipedIK()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000081")]
	public class BipedIKSolvers
	{
		[Token(Token = "0x4000304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IKSolverLimb leftFoot;

		[Token(Token = "0x4000305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IKSolverLimb rightFoot;

		[Token(Token = "0x4000306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IKSolverLimb leftHand;

		[Token(Token = "0x4000307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IKSolverLimb rightHand;

		[Token(Token = "0x4000308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public IKSolverFABRIK spine;

		[Token(Token = "0x4000309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverLookAt lookAt;

		[Token(Token = "0x400030A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public IKSolverAim aim;

		[Token(Token = "0x400030B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Constraints pelvis;

		[Token(Token = "0x400030C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private IKSolverLimb[] _limbs;

		[Token(Token = "0x400030D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private IKSolver[] _ikSolvers;

		[Token(Token = "0x1700007B")]
		public IKSolverLimb[] limbs
		{
			[Token(Token = "0x60003AA")]
			[Address(RVA = "0x15A7754", Offset = "0x15A7754", VA = "0x15A7754")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003AB")]
		[Address(RVA = "0x15A7B54", Offset = "0x15A7B54", VA = "0x15A7B54")]
		public void AssignReferences(BipedReferences references)
		{
		}

		[Token(Token = "0x60003AC")]
		[Address(RVA = "0x15A8288", Offset = "0x15A8288", VA = "0x15A8288")]
		public BipedIKSolvers()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000082")]
	public class Constraints
	{
		[Token(Token = "0x400030E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform transform;

		[Token(Token = "0x400030F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x4000310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 positionOffset;

		[Token(Token = "0x4000311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 position;

		[Token(Token = "0x4000312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE22DC0", Offset = "0xE22DC0")]
		public float positionWeight;

		[Token(Token = "0x4000313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 rotationOffset;

		[Token(Token = "0x4000314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 rotation;

		[Token(Token = "0x4000315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE22DD8", Offset = "0xE22DD8")]
		public float rotationWeight;

		[Token(Token = "0x60003AD")]
		[Address(RVA = "0x15A8D7C", Offset = "0x15A8D7C", VA = "0x15A8D7C")]
		public bool IsValid()
		{
			return default(bool);
		}

		[Token(Token = "0x60003AE")]
		[Address(RVA = "0x15A7C78", Offset = "0x15A7C78", VA = "0x15A7C78")]
		public void Initiate(Transform transform)
		{
		}

		[Token(Token = "0x60003AF")]
		[Address(RVA = "0x15A7E58", Offset = "0x15A7E58", VA = "0x15A7E58")]
		public void Update()
		{
		}

		[Token(Token = "0x60003B0")]
		[Address(RVA = "0x15A8430", Offset = "0x15A8430", VA = "0x15A8430")]
		public Constraints()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000083")]
	public class Finger
	{
		[Serializable]
		[Token(Token = "0x2000084")]
		public enum DOF
		{
			[Token(Token = "0x4000329")]
			One,
			[Token(Token = "0x400032A")]
			Three
		}

		[Token(Token = "0x4000316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE22DF0", Offset = "0xE22DF0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE22DF0", Offset = "0xE22DF0")]
		public float weight;

		[Token(Token = "0x4000317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE22E44", Offset = "0xE22E44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE22E44", Offset = "0xE22E44")]
		public float rotationWeight;

		[Token(Token = "0x4000318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE22E98", Offset = "0xE22E98")]
		public DOF rotationDOF;

		[Token(Token = "0x4000319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE22ED0", Offset = "0xE22ED0")]
		public bool fixBone1Twist;

		[Token(Token = "0x400031A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE22F08", Offset = "0xE22F08")]
		public Transform bone1;

		[Token(Token = "0x400031B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE22F40", Offset = "0xE22F40")]
		public Transform bone2;

		[Token(Token = "0x400031C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE22F78", Offset = "0xE22F78")]
		public Transform bone3;

		[Token(Token = "0x400031D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE22FB0", Offset = "0xE22FB0")]
		public Transform tip;

		[Token(Token = "0x400031E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE22FE8", Offset = "0xE22FE8")]
		public Transform target;

		[Token(Token = "0x400031F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23020", Offset = "0xE23020")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x4000320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private IKSolverLimb solver;

		[Token(Token = "0x4000321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion bone3RelativeToTarget;

		[Token(Token = "0x4000322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 bone3DefaultLocalPosition;

		[Token(Token = "0x4000323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Quaternion bone3DefaultLocalRotation;

		[Token(Token = "0x4000324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector3 bone1Axis;

		[Token(Token = "0x4000325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 tipAxis;

		[Token(Token = "0x4000326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Vector3 bone1TwistAxis;

		[Token(Token = "0x4000327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 defaultBendNormal;

		[Token(Token = "0x1700007C")]
		public bool initiated
		{
			[Token(Token = "0x60003B1")]
			[Address(RVA = "0x15B0D38", Offset = "0x15B0D38", VA = "0x15B0D38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C4B4", Offset = "0xE2C4B4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60003B2")]
			[Address(RVA = "0x15B0D40", Offset = "0x15B0D40", VA = "0x15B0D40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C4C4", Offset = "0xE2C4C4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700007D")]
		public Vector3 IKPosition
		{
			[Token(Token = "0x60003B3")]
			[Address(RVA = "0x15B0D4C", Offset = "0x15B0D4C", VA = "0x15B0D4C")]
			set
			{
			}
		}

		[Token(Token = "0x1700007E")]
		public Quaternion IKRotation
		{
			[Token(Token = "0x60003B4")]
			[Address(RVA = "0x15B0D6C", Offset = "0x15B0D6C", VA = "0x15B0D6C")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x60003B5")]
			[Address(RVA = "0x15B0D8C", Offset = "0x15B0D8C", VA = "0x15B0D8C")]
			set
			{
			}
		}

		[Token(Token = "0x60003B6")]
		[Address(RVA = "0x15B0DAC", Offset = "0x15B0DAC", VA = "0x15B0DAC")]
		public bool IsValid(ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x60003B7")]
		[Address(RVA = "0x15B0EB8", Offset = "0x15B0EB8", VA = "0x15B0EB8")]
		public void Initiate(Transform hand, int index)
		{
		}

		[Token(Token = "0x60003B8")]
		[Address(RVA = "0x15B156C", Offset = "0x15B156C", VA = "0x15B156C")]
		public void FixTransforms()
		{
		}

		[Token(Token = "0x60003B9")]
		[Address(RVA = "0x15B1648", Offset = "0x15B1648", VA = "0x15B1648")]
		public void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x60003BA")]
		[Address(RVA = "0x15B1710", Offset = "0x15B1710", VA = "0x15B1710")]
		public void Update(float masterWeight)
		{
		}

		[Token(Token = "0x60003BB")]
		[Address(RVA = "0x15B1D30", Offset = "0x15B1D30", VA = "0x15B1D30")]
		public Finger()
		{
		}
	}
	[Token(Token = "0x2000085")]
	public class FingerRig : SolverManager
	{
		[Token(Token = "0x400032B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE23030", Offset = "0xE23030")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE23030", Offset = "0xE23030")]
		public float weight;

		[Token(Token = "0x400032C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Finger[] fingers;

		[Token(Token = "0x400032D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23084", Offset = "0xE23084")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x1700007F")]
		public bool initiated
		{
			[Token(Token = "0x60003BC")]
			[Address(RVA = "0x15B1D40", Offset = "0x15B1D40", VA = "0x15B1D40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C4D4", Offset = "0xE2C4D4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60003BD")]
			[Address(RVA = "0x15B1D48", Offset = "0x15B1D48", VA = "0x15B1D48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C4E4", Offset = "0xE2C4E4")]
			private set
			{
			}
		}

		[Token(Token = "0x60003BE")]
		[Address(RVA = "0x15B1D54", Offset = "0x15B1D54", VA = "0x15B1D54")]
		public bool IsValid(ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x60003BF")]
		[Address(RVA = "0x15B1DDC", Offset = "0x15B1DDC", VA = "0x15B1DDC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2C4F4", Offset = "0xE2C4F4")]
		public void AutoDetect()
		{
		}

		[Token(Token = "0x60003C0")]
		[Address(RVA = "0x15B2154", Offset = "0x15B2154", VA = "0x15B2154")]
		public void AddFinger(Transform bone1, Transform bone2, Transform bone3, Transform tip, [Optional] Transform target)
		{
		}

		[Token(Token = "0x60003C1")]
		[Address(RVA = "0x15B2310", Offset = "0x15B2310", VA = "0x15B2310")]
		public void RemoveFinger(int index)
		{
		}

		[Token(Token = "0x60003C2")]
		[Address(RVA = "0x15B2044", Offset = "0x15B2044", VA = "0x15B2044")]
		private void AddChildrenRecursive(Transform parent, ref Transform[] array)
		{
		}

		[Token(Token = "0x60003C3")]
		[Address(RVA = "0x15B2494", Offset = "0x15B2494", VA = "0x15B2494", Slot = "4")]
		protected override void InitiateSolver()
		{
		}

		[Token(Token = "0x60003C4")]
		[Address(RVA = "0x15B2554", Offset = "0x15B2554", VA = "0x15B2554")]
		public void UpdateFingerSolvers()
		{
		}

		[Token(Token = "0x60003C5")]
		[Address(RVA = "0x15B25CC", Offset = "0x15B25CC", VA = "0x15B25CC")]
		public void FixFingerTransforms()
		{
		}

		[Token(Token = "0x60003C6")]
		[Address(RVA = "0x15B2640", Offset = "0x15B2640", VA = "0x15B2640")]
		public void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x60003C7")]
		[Address(RVA = "0x15B26A8", Offset = "0x15B26A8", VA = "0x15B26A8", Slot = "5")]
		protected override void UpdateSolver()
		{
		}

		[Token(Token = "0x60003C8")]
		[Address(RVA = "0x15B26AC", Offset = "0x15B26AC", VA = "0x15B26AC", Slot = "6")]
		protected override void FixTransforms()
		{
		}

		[Token(Token = "0x60003C9")]
		[Address(RVA = "0x15B26C0", Offset = "0x15B26C0", VA = "0x15B26C0")]
		public FingerRig()
		{
		}
	}
	[Token(Token = "0x2000086")]
	public abstract class Grounder : MonoBehaviour
	{
		[Token(Token = "0x2000087")]
		public delegate void GrounderDelegate();

		[Token(Token = "0x400032E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE23094", Offset = "0xE23094")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE23094", Offset = "0xE23094")]
		public float weight;

		[Token(Token = "0x400032F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE230E8", Offset = "0xE230E8")]
		public Grounding solver;

		[Token(Token = "0x4000330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GrounderDelegate OnPreGrounder;

		[Token(Token = "0x4000331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GrounderDelegate OnPostGrounder;

		[Token(Token = "0x4000332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23120", Offset = "0xE23120")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x17000080")]
		public bool initiated
		{
			[Token(Token = "0x60003CB")]
			[Address(RVA = "0x15B3790", Offset = "0x15B3790", VA = "0x15B3790")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C52C", Offset = "0xE2C52C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60003CC")]
			[Address(RVA = "0x15B3798", Offset = "0x15B3798", VA = "0x15B3798")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C53C", Offset = "0xE2C53C")]
			protected set
			{
			}
		}

		[Token(Token = "0x60003CA")]
		public abstract void ResetPosition();

		[Token(Token = "0x60003CD")]
		[Address(RVA = "0x15B37A4", Offset = "0x15B37A4", VA = "0x15B37A4")]
		protected Vector3 GetSpineOffsetTarget()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60003CE")]
		[Address(RVA = "0x15B3A78", Offset = "0x15B3A78", VA = "0x15B3A78")]
		protected void LogWarning(string message)
		{
		}

		[Token(Token = "0x60003CF")]
		[Address(RVA = "0x15B38E8", Offset = "0x15B38E8", VA = "0x15B38E8")]
		private Vector3 GetLegSpineBendVector(Grounding.Leg leg)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60003D0")]
		[Address(RVA = "0x15B3AAC", Offset = "0x15B3AAC", VA = "0x15B3AAC")]
		private Vector3 GetLegSpineTangent(Grounding.Leg leg)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60003D1")]
		protected abstract void OpenUserManual();

		[Token(Token = "0x60003D2")]
		protected abstract void OpenScriptReference();

		[Token(Token = "0x60003D3")]
		[Address(RVA = "0x15B3CB4", Offset = "0x15B3CB4", VA = "0x15B3CB4")]
		protected Grounder()
		{
		}
	}
	[Token(Token = "0x2000088")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE20C64", Offset = "0xE20C64")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xE20C64", Offset = "0xE20C64")]
	public class GrounderBipedIK : Grounder
	{
		[Token(Token = "0x4000333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE23130", Offset = "0xE23130")]
		public BipedIK ik;

		[Token(Token = "0x4000334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE23168", Offset = "0xE23168")]
		public float spineBend;

		[Token(Token = "0x4000335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE231A0", Offset = "0xE231A0")]
		public float spineSpeed;

		[Token(Token = "0x4000336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform[] feet;

		[Token(Token = "0x4000337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion[] footRotations;

		[Token(Token = "0x4000338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 animatedPelvisLocalPosition;

		[Token(Token = "0x4000339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 solvedPelvisLocalPosition;

		[Token(Token = "0x400033A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 spineOffset;

		[Token(Token = "0x400033B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float lastWeight;

		[Token(Token = "0x60003D8")]
		[Address(RVA = "0x15B3F88", Offset = "0x15B3F88", VA = "0x15B3F88", Slot = "5")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2C54C", Offset = "0xE2C54C")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x60003D9")]
		[Address(RVA = "0x15B3FD4", Offset = "0x15B3FD4", VA = "0x15B3FD4", Slot = "6")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2C584", Offset = "0xE2C584")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x60003DA")]
		[Address(RVA = "0x15B4020", Offset = "0x15B4020", VA = "0x15B4020", Slot = "4")]
		public override void ResetPosition()
		{
		}

		[Token(Token = "0x60003DB")]
		[Address(RVA = "0x15B40A4", Offset = "0x15B40A4", VA = "0x15B40A4")]
		private bool IsReadyToInitiate()
		{
			return default(bool);
		}

		[Token(Token = "0x60003DC")]
		[Address(RVA = "0x15B4154", Offset = "0x15B4154", VA = "0x15B4154")]
		private void Update()
		{
		}

		[Token(Token = "0x60003DD")]
		[Address(RVA = "0x15B4208", Offset = "0x15B4208", VA = "0x15B4208")]
		private void Initiate()
		{
		}

		[Token(Token = "0x60003DE")]
		[Address(RVA = "0x15B451C", Offset = "0x15B451C", VA = "0x15B451C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60003DF")]
		[Address(RVA = "0x15B4570", Offset = "0x15B4570", VA = "0x15B4570")]
		private void OnSolverUpdate()
		{
		}

		[Token(Token = "0x60003E0")]
		[Address(RVA = "0x15B4AE4", Offset = "0x15B4AE4", VA = "0x15B4AE4")]
		private void SetLegIK(IKSolverLimb limb, int index)
		{
		}

		[Token(Token = "0x60003E1")]
		[Address(RVA = "0x15B4BB8", Offset = "0x15B4BB8", VA = "0x15B4BB8")]
		private void OnPostSolverUpdate()
		{
		}

		[Token(Token = "0x60003E2")]
		[Address(RVA = "0x15B4D48", Offset = "0x15B4D48", VA = "0x15B4D48")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60003E3")]
		[Address(RVA = "0x15B4EEC", Offset = "0x15B4EEC", VA = "0x15B4EEC")]
		public GrounderBipedIK()
		{
		}
	}
	[Token(Token = "0x2000089")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE20CC4", Offset = "0xE20CC4")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xE20CC4", Offset = "0xE20CC4")]
	public class GrounderFBBIK : Grounder
	{
		[Serializable]
		[Token(Token = "0x200008A")]
		public class SpineEffector
		{
			[Token(Token = "0x4000343")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE23280", Offset = "0xE23280")]
			public FullBodyBipedEffector effectorType;

			[Token(Token = "0x4000344")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE232B8", Offset = "0xE232B8")]
			public float horizontalWeight;

			[Token(Token = "0x4000345")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE232F0", Offset = "0xE232F0")]
			public float verticalWeight;

			[Token(Token = "0x60003F2")]
			[Address(RVA = "0x1BF5D10", Offset = "0x1BF5D10", VA = "0x1BF5D10")]
			public SpineEffector()
			{
			}
		}

		[Token(Token = "0x400033C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE231D8", Offset = "0xE231D8")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x400033D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE23210", Offset = "0xE23210")]
		public float spineBend;

		[Token(Token = "0x400033E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE23248", Offset = "0xE23248")]
		public float spineSpeed;

		[Token(Token = "0x400033F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public SpineEffector[] spine;

		[Token(Token = "0x4000340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform[] feet;

		[Token(Token = "0x4000341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 spineOffset;

		[Token(Token = "0x4000342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool firstSolve;

		[Token(Token = "0x60003E4")]
		[Address(RVA = "0x1BF486C", Offset = "0x1BF486C", VA = "0x1BF486C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2C5BC", Offset = "0xE2C5BC")]
		private void OpenTutorial()
		{
		}

		[Token(Token = "0x60003E5")]
		[Address(RVA = "0x1BF48B8", Offset = "0x1BF48B8", VA = "0x1BF48B8", Slot = "5")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2C5F4", Offset = "0xE2C5F4")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x60003E6")]
		[Address(RVA = "0x1BF4904", Offset = "0x1BF4904", VA = "0x1BF4904", Slot = "6")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2C62C", Offset = "0xE2C62C")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x60003E7")]
		[Address(RVA = "0x1BF4950", Offset = "0x1BF4950", VA = "0x1BF4950", Slot = "4")]
		public override void ResetPosition()
		{
		}

		[Token(Token = "0x60003E8")]
		[Address(RVA = "0x1BF4A54", Offset = "0x1BF4A54", VA = "0x1BF4A54")]
		private bool IsReadyToInitiate()
		{
			return default(bool);
		}

		[Token(Token = "0x60003E9")]
		[Address(RVA = "0x1BF4AEC", Offset = "0x1BF4AEC", VA = "0x1BF4AEC")]
		private void Update()
		{
		}

		[Token(Token = "0x60003EA")]
		[Address(RVA = "0x1BF4DF0", Offset = "0x1BF4DF0", VA = "0x1BF4DF0")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60003EB")]
		[Address(RVA = "0x1BF4DFC", Offset = "0x1BF4DFC", VA = "0x1BF4DFC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60003EC")]
		[Address(RVA = "0x1BF4BA8", Offset = "0x1BF4BA8", VA = "0x1BF4BA8")]
		private void Initiate()
		{
		}

		[Token(Token = "0x60003ED")]
		[Address(RVA = "0x1BF50D4", Offset = "0x1BF50D4", VA = "0x1BF50D4")]
		private void OnSolverUpdate()
		{
		}

		[Token(Token = "0x60003EE")]
		[Address(RVA = "0x1BF5828", Offset = "0x1BF5828", VA = "0x1BF5828")]
		private void SetLegIK(IKEffector effector, Grounding.Leg leg)
		{
		}

		[Token(Token = "0x60003EF")]
		[Address(RVA = "0x1BF59E8", Offset = "0x1BF59E8", VA = "0x1BF59E8")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60003F0")]
		[Address(RVA = "0x1BF5B44", Offset = "0x1BF5B44", VA = "0x1BF5B44")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60003F1")]
		[Address(RVA = "0x1BF5C74", Offset = "0x1BF5C74", VA = "0x1BF5C74")]
		public GrounderFBBIK()
		{
		}
	}
	[Token(Token = "0x200008B")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE20D24", Offset = "0xE20D24")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xE20D24", Offset = "0xE20D24")]
	public class GrounderIK : Grounder
	{
		[Token(Token = "0x4000346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public IK[] legs;

		[Token(Token = "0x4000347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE23328", Offset = "0xE23328")]
		public Transform pelvis;

		[Token(Token = "0x4000348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE23360", Offset = "0xE23360")]
		public Transform characterRoot;

		[Token(Token = "0x4000349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE23398", Offset = "0xE23398")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE23398", Offset = "0xE23398")]
		public float rootRotationWeight;

		[Token(Token = "0x400034A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE233EC", Offset = "0xE233EC")]
		public float rootRotationSpeed;

		[Token(Token = "0x400034B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE23424", Offset = "0xE23424")]
		public float maxRootRotationAngle;

		[Token(Token = "0x400034C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform[] feet;

		[Token(Token = "0x400034D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Quaternion[] footRotations;

		[Token(Token = "0x400034E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 animatedPelvisLocalPosition;

		[Token(Token = "0x400034F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector3 solvedPelvisLocalPosition;

		[Token(Token = "0x4000350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int solvedFeet;

		[Token(Token = "0x4000351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private bool solved;

		[Token(Token = "0x4000352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float lastWeight;

		[Token(Token = "0x4000353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Rigidbody characterRootRigidbody;

		[Token(Token = "0x60003F3")]
		[Address(RVA = "0x1BF5D20", Offset = "0x1BF5D20", VA = "0x1BF5D20", Slot = "5")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2C664", Offset = "0xE2C664")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x60003F4")]
		[Address(RVA = "0x1BF5D6C", Offset = "0x1BF5D6C", VA = "0x1BF5D6C", Slot = "6")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2C69C", Offset = "0xE2C69C")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x60003F5")]
		[Address(RVA = "0x1BF5DB8", Offset = "0x1BF5DB8", VA = "0x1BF5DB8", Slot = "4")]
		public override void ResetPosition()
		{
		}

		[Token(Token = "0x60003F6")]
		[Address(RVA = "0x1BF5DD0", Offset = "0x1BF5DD0", VA = "0x1BF5DD0")]
		private bool IsReadyToInitiate()
		{
			return default(bool);
		}

		[Token(Token = "0x60003F7")]
		[Address(RVA = "0x1BF5FAC", Offset = "0x1BF5FAC", VA = "0x1BF5FAC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60003F8")]
		[Address(RVA = "0x1BF60AC", Offset = "0x1BF60AC", VA = "0x1BF60AC")]
		private void Update()
		{
		}

		[Token(Token = "0x60003F9")]
		[Address(RVA = "0x1BF67F4", Offset = "0x1BF67F4", VA = "0x1BF67F4")]
		private void Initiate()
		{
		}

		[Token(Token = "0x60003FA")]
		[Address(RVA = "0x1BF6C4C", Offset = "0x1BF6C4C", VA = "0x1BF6C4C")]
		private void OnSolverUpdate()
		{
		}

		[Token(Token = "0x60003FB")]
		[Address(RVA = "0x1BF6EC4", Offset = "0x1BF6EC4", VA = "0x1BF6EC4")]
		private void SetLegIK(int index)
		{
		}

		[Token(Token = "0x60003FC")]
		[Address(RVA = "0x1BF71E4", Offset = "0x1BF71E4", VA = "0x1BF71E4")]
		private void OnPostSolverUpdate()
		{
		}

		[Token(Token = "0x60003FD")]
		[Address(RVA = "0x1BF7380", Offset = "0x1BF7380", VA = "0x1BF7380")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60003FE")]
		[Address(RVA = "0x1BF7584", Offset = "0x1BF7584", VA = "0x1BF7584")]
		public GrounderIK()
		{
		}
	}
	[Token(Token = "0x200008C")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xE20D84", Offset = "0xE20D84")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE20D84", Offset = "0xE20D84")]
	public class GrounderQuadruped : Grounder
	{
		[Token(Token = "0x200008D")]
		public struct Foot
		{
			[Token(Token = "0x4000371")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IKSolver solver;

			[Token(Token = "0x4000372")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Transform transform;

			[Token(Token = "0x4000373")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Quaternion rotation;

			[Token(Token = "0x4000374")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Grounding.Leg leg;

			[Token(Token = "0x6000411")]
			[Address(RVA = "0x1BF819C", Offset = "0x1BF819C", VA = "0x1BF819C")]
			public Foot(IKSolver solver, Transform transform)
			{
			}
		}

		[Token(Token = "0x4000354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2345C", Offset = "0xE2345C")]
		public Grounding forelegSolver;

		[Token(Token = "0x4000355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE23494", Offset = "0xE23494")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE23494", Offset = "0xE23494")]
		public float rootRotationWeight;

		[Token(Token = "0x4000356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE234E8", Offset = "0xE234E8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE234E8", Offset = "0xE234E8")]
		public float minRootRotation;

		[Token(Token = "0x4000357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE23540", Offset = "0xE23540")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE23540", Offset = "0xE23540")]
		public float maxRootRotation;

		[Token(Token = "0x4000358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE23598", Offset = "0xE23598")]
		public float rootRotationSpeed;

		[Token(Token = "0x4000359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE235D0", Offset = "0xE235D0")]
		public float maxLegOffset;

		[Token(Token = "0x400035A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE23608", Offset = "0xE23608")]
		public float maxForeLegOffset;

		[Token(Token = "0x400035B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE23640", Offset = "0xE23640")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE23640", Offset = "0xE23640")]
		public float maintainHeadRotationWeight;

		[Token(Token = "0x400035C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE23694", Offset = "0xE23694")]
		public Transform characterRoot;

		[Token(Token = "0x400035D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE236CC", Offset = "0xE236CC")]
		public Transform pelvis;

		[Token(Token = "0x400035E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE23704", Offset = "0xE23704")]
		public Transform lastSpineBone;

		[Token(Token = "0x400035F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2373C", Offset = "0xE2373C")]
		public Transform head;

		[Token(Token = "0x4000360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public IK[] legs;

		[Token(Token = "0x4000361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public IK[] forelegs;

		[Token(Token = "0x4000362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public Vector3 gravity;

		[Token(Token = "0x4000363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Foot[] feet;

		[Token(Token = "0x4000364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 animatedPelvisLocalPosition;

		[Token(Token = "0x4000365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Quaternion animatedPelvisLocalRotation;

		[Token(Token = "0x4000366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private Quaternion animatedHeadLocalRotation;

		[Token(Token = "0x4000367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private Vector3 solvedPelvisLocalPosition;

		[Token(Token = "0x4000368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Quaternion solvedPelvisLocalRotation;

		[Token(Token = "0x4000369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Quaternion solvedHeadLocalRotation;

		[Token(Token = "0x400036A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private int solvedFeet;

		[Token(Token = "0x400036B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private bool solved;

		[Token(Token = "0x400036C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private float angle;

		[Token(Token = "0x400036D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Transform forefeetRoot;

		[Token(Token = "0x400036E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Quaternion headRotation;

		[Token(Token = "0x400036F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private float lastWeight;

		[Token(Token = "0x4000370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private Rigidbody characterRootRigidbody;

		[Token(Token = "0x60003FF")]
		[Address(RVA = "0x1BF7620", Offset = "0x1BF7620", VA = "0x1BF7620", Slot = "5")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2C6D4", Offset = "0xE2C6D4")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000400")]
		[Address(RVA = "0x1BF766C", Offset = "0x1BF766C", VA = "0x1BF766C", Slot = "6")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2C70C", Offset = "0xE2C70C")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000401")]
		[Address(RVA = "0x1BF76B8", Offset = "0x1BF76B8", VA = "0x1BF76B8", Slot = "4")]
		public override void ResetPosition()
		{
		}

		[Token(Token = "0x6000402")]
		[Address(RVA = "0x1BF76EC", Offset = "0x1BF76EC", VA = "0x1BF76EC")]
		private bool IsReadyToInitiate()
		{
			return default(bool);
		}

		[Token(Token = "0x6000403")]
		[Address(RVA = "0x1BF781C", Offset = "0x1BF781C", VA = "0x1BF781C")]
		private bool IsReadyToInitiateLegs(IK[] ikComponents)
		{
			return default(bool);
		}

		[Token(Token = "0x6000404")]
		[Address(RVA = "0x1BF79C8", Offset = "0x1BF79C8", VA = "0x1BF79C8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000405")]
		[Address(RVA = "0x1BF7A30", Offset = "0x1BF7A30", VA = "0x1BF7A30")]
		private void Update()
		{
		}

		[Token(Token = "0x6000406")]
		[Address(RVA = "0x1BF7AE8", Offset = "0x1BF7AE8", VA = "0x1BF7AE8")]
		private void Initiate()
		{
		}

		[Token(Token = "0x6000407")]
		[Address(RVA = "0x1BF7E1C", Offset = "0x1BF7E1C", VA = "0x1BF7E1C")]
		private Transform[] InitiateFeet(IK[] ikComponents, ref Foot[] f, int indexOffset)
		{
			return null;
		}

		[Token(Token = "0x6000408")]
		[Address(RVA = "0x1BF8200", Offset = "0x1BF8200", VA = "0x1BF8200")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000409")]
		[Address(RVA = "0x1BF834C", Offset = "0x1BF834C", VA = "0x1BF834C")]
		private void RootRotation()
		{
		}

		[Token(Token = "0x600040A")]
		[Address(RVA = "0x1BF87F0", Offset = "0x1BF87F0", VA = "0x1BF87F0")]
		private void OnSolverUpdate()
		{
		}

		[Token(Token = "0x600040B")]
		[Address(RVA = "0x1BF8FE8", Offset = "0x1BF8FE8", VA = "0x1BF8FE8")]
		private void UpdateForefeetRoot()
		{
		}

		[Token(Token = "0x600040C")]
		[Address(RVA = "0x1BF92A8", Offset = "0x1BF92A8", VA = "0x1BF92A8")]
		private void SetFootIK(Foot foot, float maxOffset)
		{
		}

		[Token(Token = "0x600040D")]
		[Address(RVA = "0x1BF9408", Offset = "0x1BF9408", VA = "0x1BF9408")]
		private void OnPostSolverUpdate()
		{
		}

		[Token(Token = "0x600040E")]
		[Address(RVA = "0x1BF96E4", Offset = "0x1BF96E4", VA = "0x1BF96E4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600040F")]
		[Address(RVA = "0x1BF971C", Offset = "0x1BF971C", VA = "0x1BF971C")]
		private void DestroyLegs(IK[] ikComponents)
		{
		}

		[Token(Token = "0x6000410")]
		[Address(RVA = "0x1BF9918", Offset = "0x1BF9918", VA = "0x1BF9918")]
		public GrounderQuadruped()
		{
		}
	}
	[Token(Token = "0x200008E")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE20DE4", Offset = "0xE20DE4")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xE20DE4", Offset = "0xE20DE4")]
	public class GrounderVRIK : Grounder
	{
		[Token(Token = "0x4000375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE23784", Offset = "0xE23784")]
		public VRIK ik;

		[Token(Token = "0x4000376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform[] feet;

		[Token(Token = "0x6000412")]
		[Address(RVA = "0x1BF9AA4", Offset = "0x1BF9AA4", VA = "0x1BF9AA4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2C744", Offset = "0xE2C744")]
		private void OpenTutorial()
		{
		}

		[Token(Token = "0x6000413")]
		[Address(RVA = "0x1BF9AF0", Offset = "0x1BF9AF0", VA = "0x1BF9AF0", Slot = "5")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2C77C", Offset = "0xE2C77C")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000414")]
		[Address(RVA = "0x1BF9B3C", Offset = "0x1BF9B3C", VA = "0x1BF9B3C", Slot = "6")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2C7B4", Offset = "0xE2C7B4")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000415")]
		[Address(RVA = "0x1BF9B88", Offset = "0x1BF9B88", VA = "0x1BF9B88", Slot = "4")]
		public override void ResetPosition()
		{
		}

		[Token(Token = "0x6000416")]
		[Address(RVA = "0x1BF9BA0", Offset = "0x1BF9BA0", VA = "0x1BF9BA0")]
		private bool IsReadyToInitiate()
		{
			return default(bool);
		}

		[Token(Token = "0x6000417")]
		[Address(RVA = "0x1BF9C38", Offset = "0x1BF9C38", VA = "0x1BF9C38")]
		private void Update()
		{
		}

		[Token(Token = "0x6000418")]
		[Address(RVA = "0x1BF9CEC", Offset = "0x1BF9CEC", VA = "0x1BF9CEC")]
		private void Initiate()
		{
		}

		[Token(Token = "0x6000419")]
		[Address(RVA = "0x1BF9F50", Offset = "0x1BF9F50", VA = "0x1BF9F50")]
		private void OnSolverUpdate()
		{
		}

		[Token(Token = "0x600041A")]
		[Address(RVA = "0x1BFA1EC", Offset = "0x1BFA1EC", VA = "0x1BFA1EC")]
		private void SetLegIK(IKSolverVR.PositionOffset positionOffset, Transform bone, Grounding.Leg leg)
		{
		}

		[Token(Token = "0x600041B")]
		[Address(RVA = "0x1BFA2F4", Offset = "0x1BFA2F4", VA = "0x1BFA2F4")]
		private void OnPostSolverUpdate()
		{
		}

		[Token(Token = "0x600041C")]
		[Address(RVA = "0x1BFA4F4", Offset = "0x1BFA4F4", VA = "0x1BFA4F4")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x600041D")]
		[Address(RVA = "0x1BFA650", Offset = "0x1BFA650", VA = "0x1BFA650")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600041E")]
		[Address(RVA = "0x1BFA7FC", Offset = "0x1BFA7FC", VA = "0x1BFA7FC")]
		public GrounderVRIK()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200008F")]
	public class Grounding
	{
		[Serializable]
		[Token(Token = "0x2000090")]
		public enum Quality
		{
			[Token(Token = "0x4000390")]
			Fastest,
			[Token(Token = "0x4000391")]
			Simple,
			[Token(Token = "0x4000392")]
			Best
		}

		[Token(Token = "0x2000091")]
		public class Leg
		{
			[Token(Token = "0x4000393")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23C68", Offset = "0xE23C68")]
			private bool <isGrounded>k__BackingField;

			[Token(Token = "0x4000394")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23C78", Offset = "0xE23C78")]
			private Vector3 <IKPosition>k__BackingField;

			[Token(Token = "0x4000395")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Quaternion rotationOffset;

			[Token(Token = "0x4000396")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23C88", Offset = "0xE23C88")]
			private bool <initiated>k__BackingField;

			[Token(Token = "0x4000397")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23C98", Offset = "0xE23C98")]
			private float <heightFromGround>k__BackingField;

			[Token(Token = "0x4000398")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23CA8", Offset = "0xE23CA8")]
			private Vector3 <velocity>k__BackingField;

			[Token(Token = "0x4000399")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23CB8", Offset = "0xE23CB8")]
			private Transform <transform>k__BackingField;

			[Token(Token = "0x400039A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23CC8", Offset = "0xE23CC8")]
			private float <IKOffset>k__BackingField;

			[Token(Token = "0x400039B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public bool invertFootCenter;

			[Token(Token = "0x400039C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23CD8", Offset = "0xE23CD8")]
			private RaycastHit <heelHit>k__BackingField;

			[Token(Token = "0x400039D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23CE8", Offset = "0xE23CE8")]
			private RaycastHit <capsuleHit>k__BackingField;

			[Token(Token = "0x400039E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			private Grounding grounding;

			[Token(Token = "0x400039F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			private float lastTime;

			[Token(Token = "0x40003A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			private float deltaTime;

			[Token(Token = "0x40003A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			private Vector3 lastPosition;

			[Token(Token = "0x40003A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
			private Quaternion toHitNormal;

			[Token(Token = "0x40003A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
			private Quaternion r;

			[Token(Token = "0x40003A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
			private Vector3 up;

			[Token(Token = "0x40003A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			private bool doOverrideFootPosition;

			[Token(Token = "0x40003A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
			private Vector3 overrideFootPosition;

			[Token(Token = "0x40003A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
			private Vector3 transformPosition;

			[Token(Token = "0x17000089")]
			public bool isGrounded
			{
				[Token(Token = "0x6000436")]
				[Address(RVA = "0x1BFC230", Offset = "0x1BFC230", VA = "0x1BFC230")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C88C", Offset = "0xE2C88C")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6000437")]
				[Address(RVA = "0x1BFC238", Offset = "0x1BFC238", VA = "0x1BFC238")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C89C", Offset = "0xE2C89C")]
				private set
				{
				}
			}

			[Token(Token = "0x1700008A")]
			public Vector3 IKPosition
			{
				[Token(Token = "0x6000438")]
				[Address(RVA = "0x1BFC244", Offset = "0x1BFC244", VA = "0x1BFC244")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C8AC", Offset = "0xE2C8AC")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6000439")]
				[Address(RVA = "0x1BFC250", Offset = "0x1BFC250", VA = "0x1BFC250")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C8BC", Offset = "0xE2C8BC")]
				private set
				{
				}
			}

			[Token(Token = "0x1700008B")]
			public bool initiated
			{
				[Token(Token = "0x600043A")]
				[Address(RVA = "0x1BFC25C", Offset = "0x1BFC25C", VA = "0x1BFC25C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C8CC", Offset = "0xE2C8CC")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x600043B")]
				[Address(RVA = "0x1BFC264", Offset = "0x1BFC264", VA = "0x1BFC264")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C8DC", Offset = "0xE2C8DC")]
				private set
				{
				}
			}

			[Token(Token = "0x1700008C")]
			public float heightFromGround
			{
				[Token(Token = "0x600043C")]
				[Address(RVA = "0x1BFC270", Offset = "0x1BFC270", VA = "0x1BFC270")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C8EC", Offset = "0xE2C8EC")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x600043D")]
				[Address(RVA = "0x1BFC278", Offset = "0x1BFC278", VA = "0x1BFC278")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C8FC", Offset = "0xE2C8FC")]
				private set
				{
				}
			}

			[Token(Token = "0x1700008D")]
			public Vector3 velocity
			{
				[Token(Token = "0x600043E")]
				[Address(RVA = "0x1BFC280", Offset = "0x1BFC280", VA = "0x1BFC280")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C90C", Offset = "0xE2C90C")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x600043F")]
				[Address(RVA = "0x1BFC28C", Offset = "0x1BFC28C", VA = "0x1BFC28C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C91C", Offset = "0xE2C91C")]
				private set
				{
				}
			}

			[Token(Token = "0x1700008E")]
			public Transform transform
			{
				[Token(Token = "0x6000440")]
				[Address(RVA = "0x1BFC298", Offset = "0x1BFC298", VA = "0x1BFC298")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C92C", Offset = "0xE2C92C")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000441")]
				[Address(RVA = "0x1BFC2A0", Offset = "0x1BFC2A0", VA = "0x1BFC2A0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C93C", Offset = "0xE2C93C")]
				private set
				{
				}
			}

			[Token(Token = "0x1700008F")]
			public float IKOffset
			{
				[Token(Token = "0x6000442")]
				[Address(RVA = "0x1BFC2A8", Offset = "0x1BFC2A8", VA = "0x1BFC2A8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C94C", Offset = "0xE2C94C")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6000443")]
				[Address(RVA = "0x1BFC2B0", Offset = "0x1BFC2B0", VA = "0x1BFC2B0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C95C", Offset = "0xE2C95C")]
				private set
				{
				}
			}

			[Token(Token = "0x17000090")]
			public RaycastHit heelHit
			{
				[Token(Token = "0x6000444")]
				[Address(RVA = "0x1BFC2B8", Offset = "0x1BFC2B8", VA = "0x1BFC2B8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C96C", Offset = "0xE2C96C")]
				get
				{
					return default(RaycastHit);
				}
				[Token(Token = "0x6000445")]
				[Address(RVA = "0x1BFC2D0", Offset = "0x1BFC2D0", VA = "0x1BFC2D0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C97C", Offset = "0xE2C97C")]
				private set
				{
				}
			}

			[Token(Token = "0x17000091")]
			public RaycastHit capsuleHit
			{
				[Token(Token = "0x6000446")]
				[Address(RVA = "0x1BFC2F0", Offset = "0x1BFC2F0", VA = "0x1BFC2F0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C98C", Offset = "0xE2C98C")]
				get
				{
					return default(RaycastHit);
				}
				[Token(Token = "0x6000447")]
				[Address(RVA = "0x1BFC308", Offset = "0x1BFC308", VA = "0x1BFC308")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C99C", Offset = "0xE2C99C")]
				private set
				{
				}
			}

			[Token(Token = "0x17000092")]
			public float stepHeightFromGround
			{
				[Token(Token = "0x600044C")]
				[Address(RVA = "0x1BFD090", Offset = "0x1BFD090", VA = "0x1BFD090")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000093")]
			private float rootYOffset
			{
				[Token(Token = "0x6000455")]
				[Address(RVA = "0x1BFD368", Offset = "0x1BFD368", VA = "0x1BFD368")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x6000448")]
			[Address(RVA = "0x1BFAF3C", Offset = "0x1BFAF3C", VA = "0x1BFAF3C")]
			public void Initiate(Grounding grounding, Transform transform)
			{
			}

			[Token(Token = "0x6000449")]
			[Address(RVA = "0x1BFC328", Offset = "0x1BFC328", VA = "0x1BFC328")]
			public void OnEnable()
			{
			}

			[Token(Token = "0x600044A")]
			[Address(RVA = "0x1BFBE54", Offset = "0x1BFBE54", VA = "0x1BFBE54")]
			public void Reset()
			{
			}

			[Token(Token = "0x600044B")]
			[Address(RVA = "0x1BFB080", Offset = "0x1BFB080", VA = "0x1BFB080")]
			public void Process()
			{
			}

			[Token(Token = "0x600044D")]
			[Address(RVA = "0x1BFCB04", Offset = "0x1BFCB04", VA = "0x1BFCB04")]
			private RaycastHit GetCapsuleHit(Vector3 offsetFromHeel)
			{
				return default(RaycastHit);
			}

			[Token(Token = "0x600044E")]
			[Address(RVA = "0x1BFC374", Offset = "0x1BFC374", VA = "0x1BFC374")]
			private RaycastHit GetRaycastHit(Vector3 offsetFromHeel)
			{
				return default(RaycastHit);
			}

			[Token(Token = "0x600044F")]
			[Address(RVA = "0x1BFD210", Offset = "0x1BFD210", VA = "0x1BFD210")]
			private Vector3 RotateNormal(Vector3 normal)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6000450")]
			[Address(RVA = "0x1BFC7B0", Offset = "0x1BFC7B0", VA = "0x1BFC7B0")]
			private void SetFootToPoint(Vector3 normal, Vector3 point)
			{
			}

			[Token(Token = "0x6000451")]
			[Address(RVA = "0x1BFC8B8", Offset = "0x1BFC8B8", VA = "0x1BFC8B8")]
			private void SetFootToPlane(Vector3 planeNormal, Vector3 planePoint, Vector3 heelHitPoint)
			{
			}

			[Token(Token = "0x6000452")]
			[Address(RVA = "0x1BFD30C", Offset = "0x1BFD30C", VA = "0x1BFD30C")]
			private float GetHeightFromGround(Vector3 hitPoint)
			{
				return default(float);
			}

			[Token(Token = "0x6000453")]
			[Address(RVA = "0x1BFD11C", Offset = "0x1BFD11C", VA = "0x1BFD11C")]
			private void RotateFoot()
			{
			}

			[Token(Token = "0x6000454")]
			[Address(RVA = "0x1BFD490", Offset = "0x1BFD490", VA = "0x1BFD490")]
			private Quaternion GetRotationOffsetTarget()
			{
				return default(Quaternion);
			}

			[Token(Token = "0x6000456")]
			[Address(RVA = "0x1BFAE8C", Offset = "0x1BFAE8C", VA = "0x1BFAE8C")]
			public Leg()
			{
			}
		}

		[Token(Token = "0x2000092")]
		public class Pelvis
		{
			[Token(Token = "0x40003A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23CF8", Offset = "0xE23CF8")]
			private Vector3 <IKOffset>k__BackingField;

			[Token(Token = "0x40003A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23D08", Offset = "0xE23D08")]
			private float <heightOffset>k__BackingField;

			[Token(Token = "0x40003AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Grounding grounding;

			[Token(Token = "0x40003AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 lastRootPosition;

			[Token(Token = "0x40003AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float damperF;

			[Token(Token = "0x40003AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private bool initiated;

			[Token(Token = "0x40003AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float lastTime;

			[Token(Token = "0x17000094")]
			public Vector3 IKOffset
			{
				[Token(Token = "0x6000457")]
				[Address(RVA = "0x1BFD580", Offset = "0x1BFD580", VA = "0x1BFD580")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C9AC", Offset = "0xE2C9AC")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6000458")]
				[Address(RVA = "0x1BFD58C", Offset = "0x1BFD58C", VA = "0x1BFD58C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C9BC", Offset = "0xE2C9BC")]
				private set
				{
				}
			}

			[Token(Token = "0x17000095")]
			public float heightOffset
			{
				[Token(Token = "0x6000459")]
				[Address(RVA = "0x1BFD598", Offset = "0x1BFD598", VA = "0x1BFD598")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C9CC", Offset = "0xE2C9CC")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x600045A")]
				[Address(RVA = "0x1BFD5A0", Offset = "0x1BFD5A0", VA = "0x1BFD5A0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C9DC", Offset = "0xE2C9DC")]
				private set
				{
				}
			}

			[Token(Token = "0x600045B")]
			[Address(RVA = "0x1BFB038", Offset = "0x1BFB038", VA = "0x1BFB038")]
			public void Initiate(Grounding grounding)
			{
			}

			[Token(Token = "0x600045C")]
			[Address(RVA = "0x1BFBDA4", Offset = "0x1BFBDA4", VA = "0x1BFBDA4")]
			public void Reset()
			{
			}

			[Token(Token = "0x600045D")]
			[Address(RVA = "0x1BFD5A8", Offset = "0x1BFD5A8", VA = "0x1BFD5A8")]
			public void OnEnable()
			{
			}

			[Token(Token = "0x600045E")]
			[Address(RVA = "0x1BFBB38", Offset = "0x1BFBB38", VA = "0x1BFBB38")]
			public void Process(float lowestOffset, float highestOffset, bool isGrounded)
			{
			}

			[Token(Token = "0x600045F")]
			[Address(RVA = "0x1BFAF34", Offset = "0x1BFAF34", VA = "0x1BFAF34")]
			public Pelvis()
			{
			}
		}

		[Token(Token = "0x4000377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE237BC", Offset = "0xE237BC")]
		public LayerMask layers;

		[Token(Token = "0x4000378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE237F4", Offset = "0xE237F4")]
		public float maxStep;

		[Token(Token = "0x4000379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2382C", Offset = "0xE2382C")]
		public float heightOffset;

		[Token(Token = "0x400037A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE23864", Offset = "0xE23864")]
		public float footSpeed;

		[Token(Token = "0x400037B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2389C", Offset = "0xE2389C")]
		public float footRadius;

		[Token(Token = "0x400037C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[HideInInspector]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE238D4", Offset = "0xE238D4")]
		public float footCenterOffset;

		[Token(Token = "0x400037D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE23920", Offset = "0xE23920")]
		public float prediction;

		[Token(Token = "0x400037E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE23958", Offset = "0xE23958")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE23958", Offset = "0xE23958")]
		public float footRotationWeight;

		[Token(Token = "0x400037F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE239AC", Offset = "0xE239AC")]
		public float footRotationSpeed;

		[Token(Token = "0x4000380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE239E4", Offset = "0xE239E4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE239E4", Offset = "0xE239E4")]
		public float maxFootRotationAngle;

		[Token(Token = "0x4000381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE23A3C", Offset = "0xE23A3C")]
		public bool rotateSolver;

		[Token(Token = "0x4000382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE23A74", Offset = "0xE23A74")]
		public float pelvisSpeed;

		[Token(Token = "0x4000383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE23AAC", Offset = "0xE23AAC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE23AAC", Offset = "0xE23AAC")]
		public float pelvisDamper;

		[Token(Token = "0x4000384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE23B00", Offset = "0xE23B00")]
		public float lowerPelvisWeight;

		[Token(Token = "0x4000385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE23B38", Offset = "0xE23B38")]
		public float liftPelvisWeight;

		[Token(Token = "0x4000386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE23B70", Offset = "0xE23B70")]
		public float rootSphereCastRadius;

		[Token(Token = "0x4000387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE23BA8", Offset = "0xE23BA8")]
		public bool overstepFallsDown;

		[Token(Token = "0x4000388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE23BE0", Offset = "0xE23BE0")]
		public Quality quality;

		[Token(Token = "0x4000389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23C18", Offset = "0xE23C18")]
		private Leg[] <legs>k__BackingField;

		[Token(Token = "0x400038A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23C28", Offset = "0xE23C28")]
		private Pelvis <pelvis>k__BackingField;

		[Token(Token = "0x400038B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23C38", Offset = "0xE23C38")]
		private bool <isGrounded>k__BackingField;

		[Token(Token = "0x400038C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23C48", Offset = "0xE23C48")]
		private Transform <root>k__BackingField;

		[Token(Token = "0x400038D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE23C58", Offset = "0xE23C58")]
		private RaycastHit <rootHit>k__BackingField;

		[Token(Token = "0x400038E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool initiated;

		[Token(Token = "0x17000081")]
		public Leg[] legs
		{
			[Token(Token = "0x600041F")]
			[Address(RVA = "0x1BFA868", Offset = "0x1BFA868", VA = "0x1BFA868")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C7EC", Offset = "0xE2C7EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000420")]
			[Address(RVA = "0x1BFA870", Offset = "0x1BFA870", VA = "0x1BFA870")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C7FC", Offset = "0xE2C7FC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000082")]
		public Pelvis pelvis
		{
			[Token(Token = "0x6000421")]
			[Address(RVA = "0x1BFA878", Offset = "0x1BFA878", VA = "0x1BFA878")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C80C", Offset = "0xE2C80C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000422")]
			[Address(RVA = "0x1BFA880", Offset = "0x1BFA880", VA = "0x1BFA880")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C81C", Offset = "0xE2C81C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000083")]
		public bool isGrounded
		{
			[Token(Token = "0x6000423")]
			[Address(RVA = "0x1BFA888", Offset = "0x1BFA888", VA = "0x1BFA888")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C82C", Offset = "0xE2C82C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000424")]
			[Address(RVA = "0x1BFA890", Offset = "0x1BFA890", VA = "0x1BFA890")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C83C", Offset = "0xE2C83C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000084")]
		public Transform root
		{
			[Token(Token = "0x6000425")]
			[Address(RVA = "0x1BFA89C", Offset = "0x1BFA89C", VA = "0x1BFA89C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C84C", Offset = "0xE2C84C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000426")]
			[Address(RVA = "0x1BFA8A4", Offset = "0x1BFA8A4", VA = "0x1BFA8A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C85C", Offset = "0xE2C85C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000085")]
		public RaycastHit rootHit
		{
			[Token(Token = "0x6000427")]
			[Address(RVA = "0x1BFA8AC", Offset = "0x1BFA8AC", VA = "0x1BFA8AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C86C", Offset = "0xE2C86C")]
			get
			{
				return default(RaycastHit);
			}
			[Token(Token = "0x6000428")]
			[Address(RVA = "0x1BFA8C4", Offset = "0x1BFA8C4", VA = "0x1BFA8C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2C87C", Offset = "0xE2C87C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000086")]
		public bool rootGrounded
		{
			[Token(Token = "0x6000429")]
			[Address(RVA = "0x1BFA8E4", Offset = "0x1BFA8E4", VA = "0x1BFA8E4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000087")]
		public Vector3 up
		{
			[Token(Token = "0x6000431")]
			[Address(RVA = "0x1BFAD18", Offset = "0x1BFAD18", VA = "0x1BFAD18")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000088")]
		private bool useRootRotation
		{
			[Token(Token = "0x6000433")]
			[Address(RVA = "0x1BFBF08", Offset = "0x1BFBF08", VA = "0x1BFBF08")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600042A")]
		[Address(RVA = "0x1BFA938", Offset = "0x1BFA938", VA = "0x1BFA938")]
		public RaycastHit GetRootHit(float maxDistanceMlp = 10f)
		{
			return default(RaycastHit);
		}

		[Token(Token = "0x600042B")]
		[Address(RVA = "0x1BFADA4", Offset = "0x1BFADA4", VA = "0x1BFADA4")]
		public bool IsValid(ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x600042C")]
		[Address(RVA = "0x1BF4E1C", Offset = "0x1BF4E1C", VA = "0x1BF4E1C")]
		public void Initiate(Transform root, Transform[] feet)
		{
		}

		[Token(Token = "0x600042D")]
		[Address(RVA = "0x1BF5580", Offset = "0x1BF5580", VA = "0x1BF5580")]
		public void Update()
		{
		}

		[Token(Token = "0x600042E")]
		[Address(RVA = "0x1BF65DC", Offset = "0x1BF65DC", VA = "0x1BF65DC")]
		public Vector3 GetLegsPlaneNormal()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600042F")]
		[Address(RVA = "0x1BF49D0", Offset = "0x1BF49D0", VA = "0x1BF49D0")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000430")]
		[Address(RVA = "0x1BFB068", Offset = "0x1BFB068", VA = "0x1BFB068")]
		public void LogWarning(string message)
		{
		}

		[Token(Token = "0x6000432")]
		[Address(RVA = "0x1BFBFD8", Offset = "0x1BFBFD8", VA = "0x1BFBFD8")]
		public float GetVerticalOffset(Vector3 p1, Vector3 p2)
		{
			return default(float);
		}

		[Token(Token = "0x6000434")]
		[Address(RVA = "0x1BFC140", Offset = "0x1BFC140", VA = "0x1BFC140")]
		public Vector3 GetFootCenterOffset()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000435")]
		[Address(RVA = "0x1BF9A50", Offset = "0x1BF9A50", VA = "0x1BF9A50")]
		public Grounding()
		{
		}
	}
	[Token(Token = "0x2000093")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE20E44", Offset = "0xE20E44")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xE20E44", Offset = "0xE20E44")]
	public class AimIK : IK
	{
		[Token(Token = "0x40003AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverAim solver;

		[Token(Token = "0x6000460")]
		[Address(RVA = "0x15A653C", Offset = "0x15A653C", VA = "0x15A653C", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2C9EC", Offset = "0xE2C9EC")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000461")]
		[Address(RVA = "0x15A6588", Offset = "0x15A6588", VA = "0x15A6588", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2CA24", Offset = "0xE2CA24")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000462")]
		[Address(RVA = "0x15A65D4", Offset = "0x15A65D4", VA = "0x15A65D4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2CA5C", Offset = "0xE2CA5C")]
		private void OpenSetupTutorial()
		{
		}

		[Token(Token = "0x6000463")]
		[Address(RVA = "0x15A6620", Offset = "0x15A6620", VA = "0x15A6620")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2CA94", Offset = "0xE2CA94")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000464")]
		[Address(RVA = "0x15A666C", Offset = "0x15A666C", VA = "0x15A666C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2CACC", Offset = "0xE2CACC")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000465")]
		[Address(RVA = "0x15A66B8", Offset = "0x15A66B8", VA = "0x15A66B8", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6000466")]
		[Address(RVA = "0x15A66C0", Offset = "0x15A66C0", VA = "0x15A66C0")]
		public AimIK()
		{
		}
	}
	[Token(Token = "0x2000094")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE20EA4", Offset = "0xE20EA4")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xE20EA4", Offset = "0xE20EA4")]
	public class ArmIK : IK
	{
		[Token(Token = "0x40003B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverArm solver;

		[Token(Token = "0x6000467")]
		[Address(RVA = "0x15A7030", Offset = "0x15A7030", VA = "0x15A7030", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2CB04", Offset = "0xE2CB04")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000468")]
		[Address(RVA = "0x15A707C", Offset = "0x15A707C", VA = "0x15A707C", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2CB3C", Offset = "0xE2CB3C")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000469")]
		[Address(RVA = "0x15A70C8", Offset = "0x15A70C8", VA = "0x15A70C8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2CB74", Offset = "0xE2CB74")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x600046A")]
		[Address(RVA = "0x15A7114", Offset = "0x15A7114", VA = "0x15A7114")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2CBAC", Offset = "0xE2CBAC")]
		private void ASThread()
		{
		}

		[Token(Token = "0x600046B")]
		[Address(RVA = "0x15A7160", Offset = "0x15A7160", VA = "0x15A7160", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x600046C")]
		[Address(RVA = "0x15A7168", Offset = "0x15A7168", VA = "0x15A7168")]
		public ArmIK()
		{
		}
	}
	[Token(Token = "0x2000095")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE20F04", Offset = "0xE20F04")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xE20F04", Offset = "0xE20F04")]
	public class CCDIK : IK
	{
		[Token(Token = "0x40003B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverCCD solver;

		[Token(Token = "0x600046D")]
		[Address(RVA = "0x15A8BD0", Offset = "0x15A8BD0", VA = "0x15A8BD0", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2CBE4", Offset = "0xE2CBE4")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x600046E")]
		[Address(RVA = "0x15A8C1C", Offset = "0x15A8C1C", VA = "0x15A8C1C", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2CC1C", Offset = "0xE2CC1C")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x600046F")]
		[Address(RVA = "0x15A8C68", Offset = "0x15A8C68", VA = "0x15A8C68")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2CC54", Offset = "0xE2CC54")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000470")]
		[Address(RVA = "0x15A8CB4", Offset = "0x15A8CB4", VA = "0x15A8CB4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2CC8C", Offset = "0xE2CC8C")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000471")]
		[Address(RVA = "0x15A8D00", Offset = "0x15A8D00", VA = "0x15A8D00", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6000472")]
		[Address(RVA = "0x15A8D08", Offset = "0x15A8D08", VA = "0x15A8D08")]
		public CCDIK()
		{
		}
	}
	[Token(Token = "0x2000096")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xE20F64", Offset = "0xE20F64")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE20F64", Offset = "0xE20F64")]
	public class FABRIK : IK
	{
		[Token(Token = "0x40003B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverFABRIK solver;

		[Token(Token = "0x6000473")]
		[Address(RVA = "0x15A9B08", Offset = "0x15A9B08", VA = "0x15A9B08", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2CCC4", Offset = "0xE2CCC4")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000474")]
		[Address(RVA = "0x15A9B54", Offset = "0x15A9B54", VA = "0x15A9B54", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2CCFC", Offset = "0xE2CCFC")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000475")]
		[Address(RVA = "0x15A9BA0", Offset = "0x15A9BA0", VA = "0x15A9BA0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2CD34", Offset = "0xE2CD34")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000476")]
		[Address(RVA = "0x15A9BEC", Offset = "0x15A9BEC", VA = "0x15A9BEC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2CD6C", Offset = "0xE2CD6C")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000477")]
		[Address(RVA = "0x15A9C38", Offset = "0x15A9C38", VA = "0x15A9C38", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6000478")]
		[Address(RVA = "0x15A9C40", Offset = "0x15A9C40", VA = "0x15A9C40")]
		public FABRIK()
		{
		}
	}
	[Token(Token = "0x2000097")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xE20FC4", Offset = "0xE20FC4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE20FC4", Offset = "0xE20FC4")]
	public class FABRIKRoot : IK
	{
		[Token(Token = "0x40003B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverFABRIKRoot solver;

		[Token(Token = "0x6000479")]
		[Address(RVA = "0x15AA2E4", Offset = "0x15AA2E4", VA = "0x15AA2E4", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2CDA4", Offset = "0xE2CDA4")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x600047A")]
		[Address(RVA = "0x15AA330", Offset = "0x15AA330", VA = "0x15AA330", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2CDDC", Offset = "0xE2CDDC")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x600047B")]
		[Address(RVA = "0x15AA37C", Offset = "0x15AA37C", VA = "0x15AA37C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2CE14", Offset = "0xE2CE14")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x600047C")]
		[Address(RVA = "0x15AA3C8", Offset = "0x15AA3C8", VA = "0x15AA3C8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2CE4C", Offset = "0xE2CE4C")]
		private void ASThread()
		{
		}

		[Token(Token = "0x600047D")]
		[Address(RVA = "0x15AA414", Offset = "0x15AA414", VA = "0x15AA414", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x600047E")]
		[Address(RVA = "0x15AA41C", Offset = "0x15AA41C", VA = "0x15AA41C")]
		public FABRIKRoot()
		{
		}
	}
	[Token(Token = "0x2000098")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xE21024", Offset = "0xE21024")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE21024", Offset = "0xE21024")]
	public class FullBodyBipedIK : IK
	{
		[Token(Token = "0x40003B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public BipedReferences references;

		[Token(Token = "0x40003B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public IKSolverFullBodyBiped solver;

		[Token(Token = "0x600047F")]
		[Address(RVA = "0x15B2734", Offset = "0x15B2734", VA = "0x15B2734", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2CE84", Offset = "0xE2CE84")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000480")]
		[Address(RVA = "0x15B2780", Offset = "0x15B2780", VA = "0x15B2780", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2CEBC", Offset = "0xE2CEBC")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000481")]
		[Address(RVA = "0x15B27CC", Offset = "0x15B27CC", VA = "0x15B27CC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2CEF4", Offset = "0xE2CEF4")]
		private void OpenSetupTutorial()
		{
		}

		[Token(Token = "0x6000482")]
		[Address(RVA = "0x15B2818", Offset = "0x15B2818", VA = "0x15B2818")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2CF2C", Offset = "0xE2CF2C")]
		private void OpenInspectorTutorial()
		{
		}

		[Token(Token = "0x6000483")]
		[Address(RVA = "0x15B2864", Offset = "0x15B2864", VA = "0x15B2864")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2CF64", Offset = "0xE2CF64")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000484")]
		[Address(RVA = "0x15B28B0", Offset = "0x15B28B0", VA = "0x15B28B0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2CF9C", Offset = "0xE2CF9C")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000485")]
		[Address(RVA = "0x15B28FC", Offset = "0x15B28FC", VA = "0x15B28FC")]
		public void SetReferences(BipedReferences references, Transform rootNode)
		{
		}

		[Token(Token = "0x6000486")]
		[Address(RVA = "0x15B2940", Offset = "0x15B2940", VA = "0x15B2940", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6000487")]
		[Address(RVA = "0x15B2948", Offset = "0x15B2948", VA = "0x15B2948")]
		public bool ReferencesError(ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000488")]
		[Address(RVA = "0x15B2B10", Offset = "0x15B2B10", VA = "0x15B2B10")]
		public bool ReferencesWarning(ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000489")]
		[Address(RVA = "0x15B2E70", Offset = "0x15B2E70", VA = "0x15B2E70")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2CFD4", Offset = "0xE2CFD4")]
		private void Reinitiate()
		{
		}

		[Token(Token = "0x600048A")]
		[Address(RVA = "0x15B2E90", Offset = "0x15B2E90", VA = "0x15B2E90")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2D00C", Offset = "0xE2D00C")]
		private void AutoDetectReferences()
		{
		}

		[Token(Token = "0x600048B")]
		[Address(RVA = "0x15B2F84", Offset = "0x15B2F84", VA = "0x15B2F84")]
		public FullBodyBipedIK()
		{
		}
	}
	[Token(Token = "0x2000099")]
	public abstract class IK : SolverManager
	{
		[Token(Token = "0x600048C")]
		public abstract IKSolver GetIKSolver();

		[Token(Token = "0x600048D")]
		[Address(RVA = "0x1C000F4", Offset = "0x1C000F4", VA = "0x1C000F4", Slot = "5")]
		protected override void UpdateSolver()
		{
		}

		[Token(Token = "0x600048E")]
		[Address(RVA = "0x1C001E0", Offset = "0x1C001E0", VA = "0x1C001E0", Slot = "4")]
		protected override void InitiateSolver()
		{
		}

		[Token(Token = "0x600048F")]
		[Address(RVA = "0x1C003B0", Offset = "0x1C003B0", VA = "0x1C003B0", Slot = "6")]
		protected override void FixTransforms()
		{
		}

		[Token(Token = "0x6000490")]
		protected abstract void OpenUserManual();

		[Token(Token = "0x6000491")]
		protected abstract void OpenScriptReference();

		[Token(Token = "0x6000492")]
		[Address(RVA = "0x1C00410", Offset = "0x1C00410", VA = "0x1C00410")]
		protected IK()
		{
		}
	}
	[Token(Token = "0x200009A")]
	public class IKExecutionOrder : MonoBehaviour
	{
		[Token(Token = "0x40003B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE23D18", Offset = "0xE23D18")]
		public IK[] IKComponents;

		[Token(Token = "0x40003B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE23D50", Offset = "0xE23D50")]
		public Animator animator;

		[Token(Token = "0x40003B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool fixedFrame;

		[Token(Token = "0x17000096")]
		private bool animatePhysics
		{
			[Token(Token = "0x6000493")]
			[Address(RVA = "0x1C02D84", Offset = "0x1C02D84", VA = "0x1C02D84")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000494")]
		[Address(RVA = "0x1C02E20", Offset = "0x1C02E20", VA = "0x1C02E20")]
		private void Start()
		{
		}

		[Token(Token = "0x6000495")]
		[Address(RVA = "0x1C02E90", Offset = "0x1C02E90", VA = "0x1C02E90")]
		private void Update()
		{
		}

		[Token(Token = "0x6000496")]
		[Address(RVA = "0x1C02F4C", Offset = "0x1C02F4C", VA = "0x1C02F4C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000497")]
		[Address(RVA = "0x1C02F88", Offset = "0x1C02F88", VA = "0x1C02F88")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000498")]
		[Address(RVA = "0x1C02EC4", Offset = "0x1C02EC4", VA = "0x1C02EC4")]
		private void FixTransforms()
		{
		}

		[Token(Token = "0x6000499")]
		[Address(RVA = "0x1C03014", Offset = "0x1C03014", VA = "0x1C03014")]
		public IKExecutionOrder()
		{
		}
	}
	[Token(Token = "0x200009B")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE21084", Offset = "0xE21084")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xE21084", Offset = "0xE21084")]
	public class LegIK : IK
	{
		[Token(Token = "0x40003B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverLeg solver;

		[Token(Token = "0x600049A")]
		[Address(RVA = "0x1777B74", Offset = "0x1777B74", VA = "0x1777B74", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2D044", Offset = "0xE2D044")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x600049B")]
		[Address(RVA = "0x1777BC0", Offset = "0x1777BC0", VA = "0x1777BC0", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2D07C", Offset = "0xE2D07C")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x600049C")]
		[Address(RVA = "0x1777C0C", Offset = "0x1777C0C", VA = "0x1777C0C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2D0B4", Offset = "0xE2D0B4")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x600049D")]
		[Address(RVA = "0x1777C58", Offset = "0x1777C58", VA = "0x1777C58")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2D0EC", Offset = "0xE2D0EC")]
		private void ASThread()
		{
		}

		[Token(Token = "0x600049E")]
		[Address(RVA = "0x1777CA4", Offset = "0x1777CA4", VA = "0x1777CA4", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x600049F")]
		[Address(RVA = "0x1777CAC", Offset = "0x1777CAC", VA = "0x1777CAC")]
		public LegIK()
		{
		}
	}
	[Token(Token = "0x200009C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE210E4", Offset = "0xE210E4")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xE210E4", Offset = "0xE210E4")]
	public class LimbIK : IK
	{
		[Token(Token = "0x40003BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverLimb solver;

		[Token(Token = "0x60004A0")]
		[Address(RVA = "0x1777D20", Offset = "0x1777D20", VA = "0x1777D20", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2D124", Offset = "0xE2D124")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x60004A1")]
		[Address(RVA = "0x1777D6C", Offset = "0x1777D6C", VA = "0x1777D6C", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2D15C", Offset = "0xE2D15C")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x60004A2")]
		[Address(RVA = "0x1777DB8", Offset = "0x1777DB8", VA = "0x1777DB8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2D194", Offset = "0xE2D194")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x60004A3")]
		[Address(RVA = "0x1777E04", Offset = "0x1777E04", VA = "0x1777E04")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2D1CC", Offset = "0xE2D1CC")]
		private void ASThread()
		{
		}

		[Token(Token = "0x60004A4")]
		[Address(RVA = "0x1777E50", Offset = "0x1777E50", VA = "0x1777E50", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x60004A5")]
		[Address(RVA = "0x1777E58", Offset = "0x1777E58", VA = "0x1777E58")]
		public LimbIK()
		{
		}
	}
	[Token(Token = "0x200009D")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE21144", Offset = "0xE21144")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xE21144", Offset = "0xE21144")]
	public class LookAtIK : IK
	{
		[Token(Token = "0x40003BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverLookAt solver;

		[Token(Token = "0x60004A6")]
		[Address(RVA = "0x1778D3C", Offset = "0x1778D3C", VA = "0x1778D3C", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2D204", Offset = "0xE2D204")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x60004A7")]
		[Address(RVA = "0x1778D88", Offset = "0x1778D88", VA = "0x1778D88", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2D23C", Offset = "0xE2D23C")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x60004A8")]
		[Address(RVA = "0x1778DD4", Offset = "0x1778DD4", VA = "0x1778DD4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2D274", Offset = "0xE2D274")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x60004A9")]
		[Address(RVA = "0x1778E20", Offset = "0x1778E20", VA = "0x1778E20")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2D2AC", Offset = "0xE2D2AC")]
		private void ASThread()
		{
		}

		[Token(Token = "0x60004AA")]
		[Address(RVA = "0x1778E6C", Offset = "0x1778E6C", VA = "0x1778E6C", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x60004AB")]
		[Address(RVA = "0x1778E74", Offset = "0x1778E74", VA = "0x1778E74")]
		public LookAtIK()
		{
		}
	}
	[Token(Token = "0x200009E")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xE211A4", Offset = "0xE211A4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE211A4", Offset = "0xE211A4")]
	public class TrigonometricIK : IK
	{
		[Token(Token = "0x40003BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverTrigonometric solver;

		[Token(Token = "0x60004AC")]
		[Address(RVA = "0x1781860", Offset = "0x1781860", VA = "0x1781860", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2D2E4", Offset = "0xE2D2E4")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x60004AD")]
		[Address(RVA = "0x17818AC", Offset = "0x17818AC", VA = "0x17818AC", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2D31C", Offset = "0xE2D31C")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x60004AE")]
		[Address(RVA = "0x17818F8", Offset = "0x17818F8", VA = "0x17818F8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2D354", Offset = "0xE2D354")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x60004AF")]
		[Address(RVA = "0x1781944", Offset = "0x1781944", VA = "0x1781944")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2D38C", Offset = "0xE2D38C")]
		private void ASThread()
		{
		}

		[Token(Token = "0x60004B0")]
		[Address(RVA = "0x1781990", Offset = "0x1781990", VA = "0x1781990", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x60004B1")]
		[Address(RVA = "0x1781998", Offset = "0x1781998", VA = "0x1781998")]
		public TrigonometricIK()
		{
		}
	}
	[Token(Token = "0x200009F")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE21204", Offset = "0xE21204")]
	public class VRIK : IK
	{
		[Serializable]
		[Token(Token = "0x20000A0")]
		public class References
		{
			[Token(Token = "0x40003BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform root;

			[Token(Token = "0x40003C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform pelvis;

			[Token(Token = "0x40003C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform spine;

			[Token(Token = "0x40003C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE23E3C", Offset = "0xE23E3C")]
			public Transform chest;

			[Token(Token = "0x40003C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE23E74", Offset = "0xE23E74")]
			public Transform neck;

			[Token(Token = "0x40003C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Transform head;

			[Token(Token = "0x40003C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE23EAC", Offset = "0xE23EAC")]
			public Transform leftShoulder;

			[Token(Token = "0x40003C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Transform leftUpperArm;

			[Token(Token = "0x40003C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Transform leftForearm;

			[Token(Token = "0x40003C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Transform leftHand;

			[Token(Token = "0x40003C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE23EE4", Offset = "0xE23EE4")]
			public Transform rightShoulder;

			[Token(Token = "0x40003CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Transform rightUpperArm;

			[Token(Token = "0x40003CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public Transform rightForearm;

			[Token(Token = "0x40003CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public Transform rightHand;

			[Token(Token = "0x40003CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE23F1C", Offset = "0xE23F1C")]
			public Transform leftThigh;

			[Token(Token = "0x40003CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE23F54", Offset = "0xE23F54")]
			public Transform leftCalf;

			[Token(Token = "0x40003CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE23F8C", Offset = "0xE23F8C")]
			public Transform leftFoot;

			[Token(Token = "0x40003D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE23FC4", Offset = "0xE23FC4")]
			public Transform leftToes;

			[Token(Token = "0x40003D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE23FFC", Offset = "0xE23FFC")]
			public Transform rightThigh;

			[Token(Token = "0x40003D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE24034", Offset = "0xE24034")]
			public Transform rightCalf;

			[Token(Token = "0x40003D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2406C", Offset = "0xE2406C")]
			public Transform rightFoot;

			[Token(Token = "0x40003D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE240A4", Offset = "0xE240A4")]
			public Transform rightToes;

			[Token(Token = "0x17000097")]
			public bool isFilled
			{
				[Token(Token = "0x60004BC")]
				[Address(RVA = "0x17834BC", Offset = "0x17834BC", VA = "0x17834BC")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000098")]
			public bool isEmpty
			{
				[Token(Token = "0x60004BD")]
				[Address(RVA = "0x1783040", Offset = "0x1783040", VA = "0x1783040")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x60004BB")]
			[Address(RVA = "0x1783B58", Offset = "0x1783B58", VA = "0x1783B58")]
			public Transform[] GetTransforms()
			{
				return null;
			}

			[Token(Token = "0x60004BE")]
			[Address(RVA = "0x1782B1C", Offset = "0x1782B1C", VA = "0x1782B1C")]
			public static bool AutoDetectReferences(Transform root, out References references)
			{
				return default(bool);
			}

			[Token(Token = "0x60004BF")]
			[Address(RVA = "0x1783B50", Offset = "0x1783B50", VA = "0x1783B50")]
			public References()
			{
			}
		}

		[Token(Token = "0x40003BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "ContextMenuItemAttribute", RVA = "0xE23D88", Offset = "0xE23D88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE23D88", Offset = "0xE23D88")]
		public References references;

		[Token(Token = "0x40003BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE23E04", Offset = "0xE23E04")]
		public IKSolverVR solver;

		[Token(Token = "0x60004B2")]
		[Address(RVA = "0x1782A10", Offset = "0x1782A10", VA = "0x1782A10", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2D3C4", Offset = "0xE2D3C4")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x60004B3")]
		[Address(RVA = "0x1782A5C", Offset = "0x1782A5C", VA = "0x1782A5C", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2D3FC", Offset = "0xE2D3FC")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x60004B4")]
		[Address(RVA = "0x1782AA8", Offset = "0x1782AA8", VA = "0x1782AA8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2D434", Offset = "0xE2D434")]
		private void OpenSetupTutorial()
		{
		}

		[Token(Token = "0x60004B5")]
		[Address(RVA = "0x1782AF4", Offset = "0x1782AF4", VA = "0x1782AF4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2D46C", Offset = "0xE2D46C")]
		public void AutoDetectReferences()
		{
		}

		[Token(Token = "0x60004B6")]
		[Address(RVA = "0x1782F9C", Offset = "0x1782F9C", VA = "0x1782F9C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2D4A4", Offset = "0xE2D4A4")]
		public void GuessHandOrientations()
		{
		}

		[Token(Token = "0x60004B7")]
		[Address(RVA = "0x1782FC4", Offset = "0x1782FC4", VA = "0x1782FC4", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x60004B8")]
		[Address(RVA = "0x1782FCC", Offset = "0x1782FCC", VA = "0x1782FCC", Slot = "4")]
		protected override void InitiateSolver()
		{
		}

		[Token(Token = "0x60004B9")]
		[Address(RVA = "0x1783938", Offset = "0x1783938", VA = "0x1783938", Slot = "5")]
		protected override void UpdateSolver()
		{
		}

		[Token(Token = "0x60004BA")]
		[Address(RVA = "0x1783AB0", Offset = "0x1783AB0", VA = "0x1783AB0")]
		public VRIK()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000A1")]
	public class FABRIKChain
	{
		[Token(Token = "0x40003D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FABRIK ik;

		[Token(Token = "0x40003D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE240DC", Offset = "0xE240DC")]
		public float pull;

		[Token(Token = "0x40003D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE240F4", Offset = "0xE240F4")]
		public float pin;

		[Token(Token = "0x40003D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int[] children;

		[Token(Token = "0x60004C0")]
		[Address(RVA = "0x15A9CB4", Offset = "0x15A9CB4", VA = "0x15A9CB4")]
		public bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x60004C1")]
		[Address(RVA = "0x15A9D88", Offset = "0x15A9D88", VA = "0x15A9D88")]
		public void Initiate()
		{
		}

		[Token(Token = "0x60004C2")]
		[Address(RVA = "0x15A9DA8", Offset = "0x15A9DA8", VA = "0x15A9DA8")]
		public void Stage1(FABRIKChain[] chain)
		{
		}

		[Token(Token = "0x60004C3")]
		[Address(RVA = "0x15AA178", Offset = "0x15AA178", VA = "0x15AA178")]
		public void Stage2(Vector3 rootPosition, FABRIKChain[] chain)
		{
		}

		[Token(Token = "0x60004C4")]
		[Address(RVA = "0x15A9E7C", Offset = "0x15A9E7C", VA = "0x15A9E7C")]
		private Vector3 GetCentroid(FABRIKChain[] chain)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60004C5")]
		[Address(RVA = "0x15AA270", Offset = "0x15AA270", VA = "0x15AA270")]
		public FABRIKChain()
		{
		}
	}
	[Token(Token = "0x20000A2")]
	public class FBBIKArmBending : MonoBehaviour
	{
		[Token(Token = "0x40003D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x40003DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 bendDirectionOffsetLeft;

		[Token(Token = "0x40003DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 bendDirectionOffsetRight;

		[Token(Token = "0x40003DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 characterSpaceBendOffsetLeft;

		[Token(Token = "0x40003DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 characterSpaceBendOffsetRight;

		[Token(Token = "0x40003DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion leftHandTargetRotation;

		[Token(Token = "0x40003DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Quaternion rightHandTargetRotation;

		[Token(Token = "0x40003E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool initiated;

		[Token(Token = "0x60004C6")]
		[Address(RVA = "0x15AA490", Offset = "0x15AA490", VA = "0x15AA490")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60004C7")]
		[Address(RVA = "0x15AAA0C", Offset = "0x15AAA0C", VA = "0x15AAA0C")]
		private void OnPostFBBIK()
		{
		}

		[Token(Token = "0x60004C8")]
		[Address(RVA = "0x15AABCC", Offset = "0x15AABCC", VA = "0x15AABCC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60004C9")]
		[Address(RVA = "0x15AACE8", Offset = "0x15AACE8", VA = "0x15AACE8")]
		public FBBIKArmBending()
		{
		}
	}
	[Token(Token = "0x20000A3")]
	public class FBBIKHeadEffector : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20000A4")]
		public class BendBone
		{
			[Token(Token = "0x400040F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2474C", Offset = "0xE2474C")]
			public Transform transform;

			[Token(Token = "0x4000410")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE24784", Offset = "0xE24784")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE24784", Offset = "0xE24784")]
			public float weight;

			[Token(Token = "0x4000411")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private Quaternion defaultLocalRotation;

			[Token(Token = "0x60004D8")]
			[Address(RVA = "0x15ADE78", Offset = "0x15ADE78", VA = "0x15ADE78")]
			public BendBone()
			{
			}

			[Token(Token = "0x60004D9")]
			[Address(RVA = "0x15AB538", Offset = "0x15AB538", VA = "0x15AB538")]
			public void StoreDefaultLocalState()
			{
			}

			[Token(Token = "0x60004DA")]
			[Address(RVA = "0x15AB93C", Offset = "0x15AB93C", VA = "0x15AB93C")]
			public void FixTransforms()
			{
			}
		}

		[Token(Token = "0x40003E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2410C", Offset = "0xE2410C")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x40003E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE24144", Offset = "0xE24144")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE24144", Offset = "0xE24144")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xE24144", Offset = "0xE24144")]
		public float positionWeight;

		[Token(Token = "0x40003E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE241BC", Offset = "0xE241BC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE241BC", Offset = "0xE241BC")]
		public float bodyWeight;

		[Token(Token = "0x40003E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE24210", Offset = "0xE24210")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE24210", Offset = "0xE24210")]
		public float thighWeight;

		[Token(Token = "0x40003E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE24264", Offset = "0xE24264")]
		public bool handsPullBody;

		[Token(Token = "0x40003E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2429C", Offset = "0xE2429C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE2429C", Offset = "0xE2429C")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xE2429C", Offset = "0xE2429C")]
		public float rotationWeight;

		[Token(Token = "0x40003E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE24314", Offset = "0xE24314")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE24314", Offset = "0xE24314")]
		public float bodyClampWeight;

		[Token(Token = "0x40003E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE24368", Offset = "0xE24368")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE24368", Offset = "0xE24368")]
		public float headClampWeight;

		[Token(Token = "0x40003E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE243BC", Offset = "0xE243BC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE243BC", Offset = "0xE243BC")]
		public float bendWeight;

		[Token(Token = "0x40003EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE24410", Offset = "0xE24410")]
		public BendBone[] bendBones;

		[Token(Token = "0x40003EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE24448", Offset = "0xE24448")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xE24448", Offset = "0xE24448")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE24448", Offset = "0xE24448")]
		public float CCDWeight;

		[Token(Token = "0x40003EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE244C0", Offset = "0xE244C0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE244C0", Offset = "0xE244C0")]
		public float roll;

		[Token(Token = "0x40003ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE24514", Offset = "0xE24514")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE24514", Offset = "0xE24514")]
		public float damper;

		[Token(Token = "0x40003EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2456C", Offset = "0xE2456C")]
		public Transform[] CCDBones;

		[Token(Token = "0x40003EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xE245A4", Offset = "0xE245A4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE245A4", Offset = "0xE245A4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE245A4", Offset = "0xE245A4")]
		public float postStretchWeight;

		[Token(Token = "0x40003F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2461C", Offset = "0xE2461C")]
		public float maxStretch;

		[Token(Token = "0x40003F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE24654", Offset = "0xE24654")]
		public float stretchDamper;

		[Token(Token = "0x40003F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2468C", Offset = "0xE2468C")]
		public bool fixHead;

		[Token(Token = "0x40003F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE246C4", Offset = "0xE246C4")]
		public Transform[] stretchBones;

		[Token(Token = "0x40003F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xE246FC", Offset = "0xE246FC")]
		public Vector3 chestDirection;

		[Token(Token = "0x40003F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE24734", Offset = "0xE24734")]
		public float chestDirectionWeight;

		[Token(Token = "0x40003F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Transform[] chestBones;

		[Token(Token = "0x40003F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public IKSolver.UpdateDelegate OnPostHeadEffectorFK;

		[Token(Token = "0x40003F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 offset;

		[Token(Token = "0x40003F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Vector3 headToBody;

		[Token(Token = "0x40003FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 shoulderCenterToHead;

		[Token(Token = "0x40003FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Vector3 headToLeftThigh;

		[Token(Token = "0x40003FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Vector3 headToRightThigh;

		[Token(Token = "0x40003FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private Vector3 leftShoulderPos;

		[Token(Token = "0x40003FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Vector3 rightShoulderPos;

		[Token(Token = "0x40003FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float shoulderDist;

		[Token(Token = "0x4000400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private float leftShoulderDist;

		[Token(Token = "0x4000401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private float rightShoulderDist;

		[Token(Token = "0x4000402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Quaternion chestRotation;

		[Token(Token = "0x4000403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Quaternion headRotationRelativeToRoot;

		[Token(Token = "0x4000404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Quaternion[] ccdDefaultLocalRotations;

		[Token(Token = "0x4000405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Vector3 headLocalPosition;

		[Token(Token = "0x4000406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private Quaternion headLocalRotation;

		[Token(Token = "0x4000407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private Vector3[] stretchLocalPositions;

		[Token(Token = "0x4000408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private Quaternion[] stretchLocalRotations;

		[Token(Token = "0x4000409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private Vector3[] chestLocalPositions;

		[Token(Token = "0x400040A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Quaternion[] chestLocalRotations;

		[Token(Token = "0x400040B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private int bendBonesCount;

		[Token(Token = "0x400040C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private int ccdBonesCount;

		[Token(Token = "0x400040D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private int stretchBonesCount;

		[Token(Token = "0x400040E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private int chestBonesCount;

		[Token(Token = "0x60004CA")]
		[Address(RVA = "0x15AACF0", Offset = "0x15AACF0", VA = "0x15AACF0")]
		private void Start()
		{
		}

		[Token(Token = "0x60004CB")]
		[Address(RVA = "0x15AB074", Offset = "0x15AB074", VA = "0x15AB074")]
		private void OnStoreDefaultLocalState()
		{
		}

		[Token(Token = "0x60004CC")]
		[Address(RVA = "0x15AB570", Offset = "0x15AB570", VA = "0x15AB570")]
		private void OnFixTransforms()
		{
		}

		[Token(Token = "0x60004CD")]
		[Address(RVA = "0x15AB964", Offset = "0x15AB964", VA = "0x15AB964")]
		private void OnPreRead()
		{
		}

		[Token(Token = "0x60004CE")]
		[Address(RVA = "0x15AC2DC", Offset = "0x15AC2DC", VA = "0x15AC2DC")]
		private void SpineBend()
		{
		}

		[Token(Token = "0x60004CF")]
		[Address(RVA = "0x15AC628", Offset = "0x15AC628", VA = "0x15AC628")]
		private void CCDPass()
		{
		}

		[Token(Token = "0x60004D0")]
		[Address(RVA = "0x15AC9C4", Offset = "0x15AC9C4", VA = "0x15AC9C4")]
		private void Iterate(int iteration)
		{
		}

		[Token(Token = "0x60004D1")]
		[Address(RVA = "0x15AD430", Offset = "0x15AD430", VA = "0x15AD430")]
		private void OnPostUpdate()
		{
		}

		[Token(Token = "0x60004D2")]
		[Address(RVA = "0x15AC008", Offset = "0x15AC008", VA = "0x15AC008")]
		private void ChestDirection()
		{
		}

		[Token(Token = "0x60004D3")]
		[Address(RVA = "0x15AD640", Offset = "0x15AD640", VA = "0x15AD640")]
		private void PostStretching()
		{
		}

		[Token(Token = "0x60004D4")]
		[Address(RVA = "0x15AD2EC", Offset = "0x15AD2EC", VA = "0x15AD2EC")]
		private void LerpSolverPosition(IKEffector effector, Vector3 position, float weight, Vector3 offset)
		{
		}

		[Token(Token = "0x60004D5")]
		[Address(RVA = "0x15AD150", Offset = "0x15AD150", VA = "0x15AD150")]
		private void Solve(ref Vector3 pos1, ref Vector3 pos2, float nominalDistance)
		{
		}

		[Token(Token = "0x60004D6")]
		[Address(RVA = "0x15AD9AC", Offset = "0x15AD9AC", VA = "0x15AD9AC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60004D7")]
		[Address(RVA = "0x15ADC90", Offset = "0x15ADC90", VA = "0x15ADC90")]
		public FBBIKHeadEffector()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000A5")]
	public class FBIKChain
	{
		[Serializable]
		[Token(Token = "0x20000A6")]
		public class ChildConstraint
		{
			[Token(Token = "0x4000429")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float pushElasticity;

			[Token(Token = "0x400042A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float pullElasticity;

			[Token(Token = "0x400042B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private Transform bone1;

			[Token(Token = "0x400042C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private Transform bone2;

			[Token(Token = "0x400042D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE24870", Offset = "0xE24870")]
			private float <nominalDistance>k__BackingField;

			[Token(Token = "0x400042E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE24880", Offset = "0xE24880")]
			private bool <isRigid>k__BackingField;

			[Token(Token = "0x400042F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float crossFade;

			[Token(Token = "0x4000430")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float inverseCrossFade;

			[Token(Token = "0x4000431")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int chain1Index;

			[Token(Token = "0x4000432")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private int chain2Index;

			[Token(Token = "0x17000099")]
			public float nominalDistance
			{
				[Token(Token = "0x60004EE")]
				[Address(RVA = "0x15B0CAC", Offset = "0x15B0CAC", VA = "0x15B0CAC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2D4DC", Offset = "0xE2D4DC")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x60004EF")]
				[Address(RVA = "0x15B0CB4", Offset = "0x15B0CB4", VA = "0x15B0CB4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2D4EC", Offset = "0xE2D4EC")]
				private set
				{
				}
			}

			[Token(Token = "0x1700009A")]
			public bool isRigid
			{
				[Token(Token = "0x60004F0")]
				[Address(RVA = "0x15B0CBC", Offset = "0x15B0CBC", VA = "0x15B0CBC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2D4FC", Offset = "0xE2D4FC")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x60004F1")]
				[Address(RVA = "0x15B0CC4", Offset = "0x15B0CC4", VA = "0x15B0CC4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2D50C", Offset = "0xE2D50C")]
				private set
				{
				}
			}

			[Token(Token = "0x60004F2")]
			[Address(RVA = "0x15B0CD0", Offset = "0x15B0CD0", VA = "0x15B0CD0")]
			public ChildConstraint(Transform bone1, Transform bone2, float pushElasticity = 0f, float pullElasticity = 0f)
			{
			}

			[Token(Token = "0x60004F3")]
			[Address(RVA = "0x15AEA30", Offset = "0x15AEA30", VA = "0x15AEA30")]
			public void Initiate(IKSolverFullBody solver)
			{
			}

			[Token(Token = "0x60004F4")]
			[Address(RVA = "0x15AEF70", Offset = "0x15AEF70", VA = "0x15AEF70")]
			public void OnPreSolve(IKSolverFullBody solver)
			{
			}

			[Token(Token = "0x60004F5")]
			[Address(RVA = "0x15B09A8", Offset = "0x15B09A8", VA = "0x15B09A8")]
			public void Solve(IKSolverFullBody solver)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20000A7")]
		public enum Smoothing
		{
			[Token(Token = "0x4000434")]
			None,
			[Token(Token = "0x4000435")]
			Exponential,
			[Token(Token = "0x4000436")]
			Cubic
		}

		[Token(Token = "0x4000412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE247D8", Offset = "0xE247D8")]
		public float pin;

		[Token(Token = "0x4000413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE247F0", Offset = "0xE247F0")]
		public float pull;

		[Token(Token = "0x4000414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE24808", Offset = "0xE24808")]
		public float push;

		[Token(Token = "0x4000415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE24820", Offset = "0xE24820")]
		public float pushParent;

		[Token(Token = "0x4000416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE24838", Offset = "0xE24838")]
		public float reach;

		[Token(Token = "0x4000417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Smoothing reachSmoothing;

		[Token(Token = "0x4000418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Smoothing pushSmoothing;

		[Token(Token = "0x4000419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public IKSolver.Node[] nodes;

		[Token(Token = "0x400041A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int[] children;

		[Token(Token = "0x400041B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ChildConstraint[] childConstraints;

		[Token(Token = "0x400041C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public IKConstraintBend bendConstraint;

		[Token(Token = "0x400041D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float rootLength;

		[Token(Token = "0x400041E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool initiated;

		[Token(Token = "0x400041F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float length;

		[Token(Token = "0x4000420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float distance;

		[Token(Token = "0x4000421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private IKSolver.Point p;

		[Token(Token = "0x4000422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float reachForce;

		[Token(Token = "0x4000423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float pullParentSum;

		[Token(Token = "0x4000424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float[] crossFades;

		[Token(Token = "0x4000425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float sqrMag1;

		[Token(Token = "0x4000426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float sqrMag2;

		[Token(Token = "0x4000427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float sqrMagDif;

		[Token(Token = "0x4000428")]
		private const float maxLimbLength = 0.99999f;

		[Token(Token = "0x60004DB")]
		[Address(RVA = "0x15ADEF8", Offset = "0x15ADEF8", VA = "0x15ADEF8")]
		public FBIKChain()
		{
		}

		[Token(Token = "0x60004DC")]
		[Address(RVA = "0x15ADFF4", Offset = "0x15ADFF4", VA = "0x15ADFF4")]
		public void SetNodes(params Transform[] boneTransforms)
		{
		}

		[Token(Token = "0x60004DD")]
		[Address(RVA = "0x15AE128", Offset = "0x15AE128", VA = "0x15AE128")]
		public int GetNodeIndex(Transform boneTransform)
		{
			return default(int);
		}

		[Token(Token = "0x60004DE")]
		[Address(RVA = "0x15AE204", Offset = "0x15AE204", VA = "0x15AE204")]
		public bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x60004DF")]
		[Address(RVA = "0x15AE314", Offset = "0x15AE314", VA = "0x15AE314")]
		public void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x60004E0")]
		[Address(RVA = "0x15AEA88", Offset = "0x15AEA88", VA = "0x15AEA88")]
		public void ReadPose(IKSolverFullBody solver, bool fullBody)
		{
		}

		[Token(Token = "0x60004E1")]
		[Address(RVA = "0x15AE4B0", Offset = "0x15AE4B0", VA = "0x15AE4B0")]
		private void CalculateBoneLengths(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x60004E2")]
		[Address(RVA = "0x15AF174", Offset = "0x15AF174", VA = "0x15AF174")]
		public void Reach(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x60004E3")]
		[Address(RVA = "0x15AF518", Offset = "0x15AF518", VA = "0x15AF518")]
		public Vector3 Push(IKSolverFullBody solver)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60004E4")]
		[Address(RVA = "0x15AF8FC", Offset = "0x15AF8FC", VA = "0x15AF8FC")]
		public void SolveTrigonometric(IKSolverFullBody solver, bool calculateBendDirection = false)
		{
		}

		[Token(Token = "0x60004E5")]
		[Address(RVA = "0x15AFE80", Offset = "0x15AFE80", VA = "0x15AFE80")]
		public void Stage1(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x60004E6")]
		[Address(RVA = "0x15B0450", Offset = "0x15B0450", VA = "0x15B0450")]
		public void Stage2(IKSolverFullBody solver, Vector3 position)
		{
		}

		[Token(Token = "0x60004E7")]
		[Address(RVA = "0x15B06E8", Offset = "0x15B06E8", VA = "0x15B06E8")]
		public void SolveConstraintSystems(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x60004E8")]
		[Address(RVA = "0x15B0348", Offset = "0x15B0348", VA = "0x15B0348")]
		private Vector3 SolveFABRIKJoint(Vector3 pos1, Vector3 pos2, float length)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60004E9")]
		[Address(RVA = "0x15AFC68", Offset = "0x15AFC68", VA = "0x15AFC68")]
		protected Vector3 GetDirToBendPoint(Vector3 direction, Vector3 bendDirection, float directionMagnitude)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60004EA")]
		[Address(RVA = "0x15B02D0", Offset = "0x15B02D0", VA = "0x15B02D0")]
		private void SolveChildConstraints(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x60004EB")]
		[Address(RVA = "0x15B07D0", Offset = "0x15B07D0", VA = "0x15B07D0")]
		private void SolveLinearConstraint(IKSolver.Node node1, IKSolver.Node node2, float crossFade, float distance)
		{
		}

		[Token(Token = "0x60004EC")]
		[Address(RVA = "0x15B01F0", Offset = "0x15B01F0", VA = "0x15B01F0")]
		public void ForwardReach(Vector3 position)
		{
		}

		[Token(Token = "0x60004ED")]
		[Address(RVA = "0x15B05D0", Offset = "0x15B05D0", VA = "0x15B05D0")]
		private void BackwardReach(Vector3 position)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000A8")]
	public class IKConstraintBend
	{
		[Token(Token = "0x4000437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform bone1;

		[Token(Token = "0x4000438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform bone2;

		[Token(Token = "0x4000439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform bone3;

		[Token(Token = "0x400043A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform bendGoal;

		[Token(Token = "0x400043B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 direction;

		[Token(Token = "0x400043C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Quaternion rotationOffset;

		[Token(Token = "0x400043D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE24890", Offset = "0xE24890")]
		public float weight;

		[Token(Token = "0x400043E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Vector3 defaultLocalDirection;

		[Token(Token = "0x400043F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Vector3 defaultChildDirection;

		[NonSerialized]
		[Token(Token = "0x4000440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float clampF;

		[Token(Token = "0x4000441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int chainIndex1;

		[Token(Token = "0x4000442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int nodeIndex1;

		[Token(Token = "0x4000443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int chainIndex2;

		[Token(Token = "0x4000444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int nodeIndex2;

		[Token(Token = "0x4000445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int chainIndex3;

		[Token(Token = "0x4000446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int nodeIndex3;

		[Token(Token = "0x4000447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE248A8", Offset = "0xE248A8")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x4000448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
		private bool limbOrientationsSet;

		[Token(Token = "0x1700009B")]
		public bool initiated
		{
			[Token(Token = "0x60004F6")]
			[Address(RVA = "0x1C00418", Offset = "0x1C00418", VA = "0x1C00418")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2D51C", Offset = "0xE2D51C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60004F7")]
			[Address(RVA = "0x1C00420", Offset = "0x1C00420", VA = "0x1C00420")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2D52C", Offset = "0xE2D52C")]
			private set
			{
			}
		}

		[Token(Token = "0x60004F8")]
		[Address(RVA = "0x1C0042C", Offset = "0x1C0042C", VA = "0x1C0042C")]
		public IKConstraintBend()
		{
		}

		[Token(Token = "0x60004F9")]
		[Address(RVA = "0x1C004B0", Offset = "0x1C004B0", VA = "0x1C004B0")]
		public void SetBones(Transform bone1, Transform bone2, Transform bone3)
		{
		}

		[Token(Token = "0x60004FA")]
		[Address(RVA = "0x1C00500", Offset = "0x1C00500", VA = "0x1C00500")]
		public void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x60004FB")]
		[Address(RVA = "0x1C00A54", Offset = "0x1C00A54", VA = "0x1C00A54")]
		public void LimitBend(float solverWeight, float positionWeight)
		{
		}

		[Token(Token = "0x60004FC")]
		[Address(RVA = "0x1C00EF0", Offset = "0x1C00EF0", VA = "0x1C00EF0")]
		public Vector3 GetDir(IKSolverFullBody solver)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60004FD")]
		[Address(RVA = "0x1C00824", Offset = "0x1C00824", VA = "0x1C00824")]
		private Vector3 OrthoToLimb(IKSolverFullBody solver, Vector3 tangent)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60004FE")]
		[Address(RVA = "0x1C0093C", Offset = "0x1C0093C", VA = "0x1C0093C")]
		private Vector3 OrthoToBone1(IKSolverFullBody solver, Vector3 tangent)
		{
			return default(Vector3);
		}
	}
	[Serializable]
	[Token(Token = "0x20000A9")]
	public class IKEffector
	{
		[Token(Token = "0x4000449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform bone;

		[Token(Token = "0x400044A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x400044B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE248B8", Offset = "0xE248B8")]
		public float positionWeight;

		[Token(Token = "0x400044C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE248D0", Offset = "0xE248D0")]
		public float rotationWeight;

		[Token(Token = "0x400044D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 position;

		[Token(Token = "0x400044E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Quaternion rotation;

		[Token(Token = "0x400044F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 positionOffset;

		[Token(Token = "0x4000450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE248E8", Offset = "0xE248E8")]
		private bool <isEndEffector>k__BackingField;

		[Token(Token = "0x4000451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool effectChildNodes;

		[Token(Token = "0x4000452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE248F8", Offset = "0xE248F8")]
		public float maintainRelativePositionWeight;

		[Token(Token = "0x4000453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform[] childBones;

		[Token(Token = "0x4000454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform planeBone1;

		[Token(Token = "0x4000455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform planeBone2;

		[Token(Token = "0x4000456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform planeBone3;

		[Token(Token = "0x4000457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Quaternion planeRotationOffset;

		[Token(Token = "0x4000458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float posW;

		[Token(Token = "0x4000459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float rotW;

		[Token(Token = "0x400045A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3[] localPositions;

		[Token(Token = "0x400045B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool usePlaneNodes;

		[Token(Token = "0x400045C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Quaternion animatedPlaneRotation;

		[Token(Token = "0x400045D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private Vector3 animatedPosition;

		[Token(Token = "0x400045E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool firstUpdate;

		[Token(Token = "0x400045F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int chainIndex;

		[Token(Token = "0x4000460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int nodeIndex;

		[Token(Token = "0x4000461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private int plane1ChainIndex;

		[Token(Token = "0x4000462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private int plane1NodeIndex;

		[Token(Token = "0x4000463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private int plane2ChainIndex;

		[Token(Token = "0x4000464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private int plane2NodeIndex;

		[Token(Token = "0x4000465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private int plane3ChainIndex;

		[Token(Token = "0x4000466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private int plane3NodeIndex;

		[Token(Token = "0x4000467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private int[] childChainIndexes;

		[Token(Token = "0x4000468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private int[] childNodeIndexes;

		[Token(Token = "0x1700009C")]
		public bool isEndEffector
		{
			[Token(Token = "0x6000500")]
			[Address(RVA = "0x1C015A0", Offset = "0x1C015A0", VA = "0x1C015A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2D53C", Offset = "0xE2D53C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000501")]
			[Address(RVA = "0x1C015A8", Offset = "0x1C015A8", VA = "0x1C015A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2D54C", Offset = "0xE2D54C")]
			private set
			{
			}
		}

		[Token(Token = "0x60004FF")]
		[Address(RVA = "0x1C01538", Offset = "0x1C01538", VA = "0x1C01538")]
		public IKSolver.Node GetNode(IKSolverFullBody solver)
		{
			return null;
		}

		[Token(Token = "0x6000502")]
		[Address(RVA = "0x1C015B4", Offset = "0x1C015B4", VA = "0x1C015B4")]
		public IKEffector()
		{
		}

		[Token(Token = "0x6000503")]
		[Address(RVA = "0x1C01720", Offset = "0x1C01720", VA = "0x1C01720")]
		public bool IsValid(IKSolver solver, ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000504")]
		[Address(RVA = "0x1C01A1C", Offset = "0x1C01A1C", VA = "0x1C01A1C")]
		public void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000505")]
		[Address(RVA = "0x1C01CE0", Offset = "0x1C01CE0", VA = "0x1C01CE0")]
		public void ResetOffset(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000506")]
		[Address(RVA = "0x1C01E18", Offset = "0x1C01E18", VA = "0x1C01E18")]
		public void SetToTarget()
		{
		}

		[Token(Token = "0x6000507")]
		[Address(RVA = "0x1C01EC4", Offset = "0x1C01EC4", VA = "0x1C01EC4")]
		public void OnPreSolve(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000508")]
		[Address(RVA = "0x1C02504", Offset = "0x1C02504", VA = "0x1C02504")]
		public void OnPostWrite()
		{
		}

		[Token(Token = "0x6000509")]
		[Address(RVA = "0x1C02574", Offset = "0x1C02574", VA = "0x1C02574")]
		private Quaternion GetPlaneRotation(IKSolverFullBody solver)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600050A")]
		[Address(RVA = "0x1C02780", Offset = "0x1C02780", VA = "0x1C02780")]
		public void Update(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x600050B")]
		[Address(RVA = "0x1C02AB4", Offset = "0x1C02AB4", VA = "0x1C02AB4")]
		private Vector3 GetPosition(IKSolverFullBody solver, out Quaternion planeRotationOffset)
		{
			return default(Vector3);
		}
	}
	[Serializable]
	[Token(Token = "0x20000AA")]
	public class IKMapping
	{
		[Serializable]
		[Token(Token = "0x20000AB")]
		public class BoneMap
		{
			[Token(Token = "0x4000469")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform transform;

			[Token(Token = "0x400046A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int chainIndex;

			[Token(Token = "0x400046B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int nodeIndex;

			[Token(Token = "0x400046C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 defaultLocalPosition;

			[Token(Token = "0x400046D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Quaternion defaultLocalRotation;

			[Token(Token = "0x400046E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public Vector3 localSwingAxis;

			[Token(Token = "0x400046F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Vector3 localTwistAxis;

			[Token(Token = "0x4000470")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public Vector3 planePosition;

			[Token(Token = "0x4000471")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Vector3 ikPosition;

			[Token(Token = "0x4000472")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			public Quaternion defaultLocalTargetRotation;

			[Token(Token = "0x4000473")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			private Quaternion maintainRotation;

			[Token(Token = "0x4000474")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			public float length;

			[Token(Token = "0x4000475")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public Quaternion animatedRotation;

			[Token(Token = "0x4000476")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private Transform planeBone1;

			[Token(Token = "0x4000477")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			private Transform planeBone2;

			[Token(Token = "0x4000478")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			private Transform planeBone3;

			[Token(Token = "0x4000479")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			private int plane1ChainIndex;

			[Token(Token = "0x400047A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			private int plane1NodeIndex;

			[Token(Token = "0x400047B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			private int plane2ChainIndex;

			[Token(Token = "0x400047C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
			private int plane2NodeIndex;

			[Token(Token = "0x400047D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			private int plane3ChainIndex;

			[Token(Token = "0x400047E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
			private int plane3NodeIndex;

			[Token(Token = "0x1700009D")]
			public Vector3 swingDirection
			{
				[Token(Token = "0x6000512")]
				[Address(RVA = "0x1C032B4", Offset = "0x1C032B4", VA = "0x1C032B4")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x1700009E")]
			public bool isNodeBone
			{
				[Token(Token = "0x6000515")]
				[Address(RVA = "0x1C03420", Offset = "0x1C03420", VA = "0x1C03420")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x1700009F")]
			private Quaternion lastAnimatedTargetRotation
			{
				[Token(Token = "0x6000528")]
				[Address(RVA = "0x1C03A24", Offset = "0x1C03A24", VA = "0x1C03A24")]
				get
				{
					return default(Quaternion);
				}
			}

			[Token(Token = "0x6000511")]
			[Address(RVA = "0x1C03268", Offset = "0x1C03268", VA = "0x1C03268")]
			public void Initiate(Transform transform, IKSolverFullBody solver)
			{
			}

			[Token(Token = "0x6000513")]
			[Address(RVA = "0x1C03380", Offset = "0x1C03380", VA = "0x1C03380")]
			public void StoreDefaultLocalState()
			{
			}

			[Token(Token = "0x6000514")]
			[Address(RVA = "0x1C033D0", Offset = "0x1C033D0", VA = "0x1C033D0")]
			public void FixTransform(bool position)
			{
			}

			[Token(Token = "0x6000516")]
			[Address(RVA = "0x1C03430", Offset = "0x1C03430", VA = "0x1C03430")]
			public void SetLength(BoneMap nextBone)
			{
			}

			[Token(Token = "0x6000517")]
			[Address(RVA = "0x1C03518", Offset = "0x1C03518", VA = "0x1C03518")]
			public void SetLocalSwingAxis(BoneMap swingTarget)
			{
			}

			[Token(Token = "0x6000518")]
			[Address(RVA = "0x1C03520", Offset = "0x1C03520", VA = "0x1C03520")]
			public void SetLocalSwingAxis(BoneMap bone1, BoneMap bone2)
			{
			}

			[Token(Token = "0x6000519")]
			[Address(RVA = "0x1C036B0", Offset = "0x1C036B0", VA = "0x1C036B0")]
			public void SetLocalTwistAxis(Vector3 twistDirection, Vector3 normalDirection)
			{
			}

			[Token(Token = "0x600051A")]
			[Address(RVA = "0x1C037BC", Offset = "0x1C037BC", VA = "0x1C037BC")]
			public void SetPlane(IKSolverFullBody solver, Transform planeBone1, Transform planeBone2, Transform planeBone3)
			{
			}

			[Token(Token = "0x600051B")]
			[Address(RVA = "0x1C03874", Offset = "0x1C03874", VA = "0x1C03874")]
			public void UpdatePlane(bool rotation, bool position)
			{
			}

			[Token(Token = "0x600051C")]
			[Address(RVA = "0x1C03C48", Offset = "0x1C03C48", VA = "0x1C03C48")]
			public void SetIKPosition()
			{
			}

			[Token(Token = "0x600051D")]
			[Address(RVA = "0x1C03C80", Offset = "0x1C03C80", VA = "0x1C03C80")]
			public void MaintainRotation()
			{
			}

			[Token(Token = "0x600051E")]
			[Address(RVA = "0x1C03CB8", Offset = "0x1C03CB8", VA = "0x1C03CB8")]
			public void SetToIKPosition()
			{
			}

			[Token(Token = "0x600051F")]
			[Address(RVA = "0x1C03CE0", Offset = "0x1C03CE0", VA = "0x1C03CE0")]
			public void FixToNode(IKSolverFullBody solver, float weight, [Optional] IKSolver.Node fixNode)
			{
			}

			[Token(Token = "0x6000520")]
			[Address(RVA = "0x1C03E08", Offset = "0x1C03E08", VA = "0x1C03E08")]
			public Vector3 GetPlanePosition(IKSolverFullBody solver)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6000521")]
			[Address(RVA = "0x1C04140", Offset = "0x1C04140", VA = "0x1C04140")]
			public void RotateToPlane(IKSolverFullBody solver, float weight)
			{
			}

			[Token(Token = "0x6000522")]
			[Address(RVA = "0x1C042D8", Offset = "0x1C042D8", VA = "0x1C042D8")]
			public void Swing(Vector3 swingTarget, float weight)
			{
			}

			[Token(Token = "0x6000523")]
			[Address(RVA = "0x1C04348", Offset = "0x1C04348", VA = "0x1C04348")]
			public void Swing(Vector3 pos1, Vector3 pos2, float weight)
			{
			}

			[Token(Token = "0x6000524")]
			[Address(RVA = "0x1C0458C", Offset = "0x1C0458C", VA = "0x1C0458C")]
			public void Twist(Vector3 twistDirection, Vector3 normalDirection, float weight)
			{
			}

			[Token(Token = "0x6000525")]
			[Address(RVA = "0x1C047B4", Offset = "0x1C047B4", VA = "0x1C047B4")]
			public void RotateToMaintain(float weight)
			{
			}

			[Token(Token = "0x6000526")]
			[Address(RVA = "0x1C048CC", Offset = "0x1C048CC", VA = "0x1C048CC")]
			public void RotateToEffector(IKSolverFullBody solver, float weight)
			{
			}

			[Token(Token = "0x6000527")]
			[Address(RVA = "0x1C03F48", Offset = "0x1C03F48", VA = "0x1C03F48")]
			private Quaternion GetTargetRotation(IKSolverFullBody solver)
			{
				return default(Quaternion);
			}

			[Token(Token = "0x6000529")]
			[Address(RVA = "0x1C04A5C", Offset = "0x1C04A5C", VA = "0x1C04A5C")]
			public BoneMap()
			{
			}
		}

		[Token(Token = "0x600050C")]
		[Address(RVA = "0x1C0301C", Offset = "0x1C0301C", VA = "0x1C0301C", Slot = "4")]
		public virtual bool IsValid(IKSolver solver, ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x600050D")]
		[Address(RVA = "0x1C03024", Offset = "0x1C03024", VA = "0x1C03024", Slot = "5")]
		public virtual void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x600050E")]
		[Address(RVA = "0x1C03028", Offset = "0x1C03028", VA = "0x1C03028")]
		protected bool BoneIsValid(Transform bone, IKSolver solver, ref string message, [Optional] Warning.Logger logger)
		{
			return default(bool);
		}

		[Token(Token = "0x600050F")]
		[Address(RVA = "0x1C03158", Offset = "0x1C03158", VA = "0x1C03158")]
		protected Vector3 SolveFABRIKJoint(Vector3 pos1, Vector3 pos2, float length)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000510")]
		[Address(RVA = "0x1C03260", Offset = "0x1C03260", VA = "0x1C03260")]
		public IKMapping()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000AC")]
	public class IKMappingBone : IKMapping
	{
		[Token(Token = "0x400047F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform bone;

		[Token(Token = "0x4000480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE24910", Offset = "0xE24910")]
		public float maintainRotationWeight;

		[Token(Token = "0x4000481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private BoneMap boneMap;

		[Token(Token = "0x600052A")]
		[Address(RVA = "0x1C04A78", Offset = "0x1C04A78", VA = "0x1C04A78", Slot = "4")]
		public override bool IsValid(IKSolver solver, ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x600052B")]
		[Address(RVA = "0x1C04B24", Offset = "0x1C04B24", VA = "0x1C04B24")]
		public IKMappingBone()
		{
		}

		[Token(Token = "0x600052C")]
		[Address(RVA = "0x1C04BB4", Offset = "0x1C04BB4", VA = "0x1C04BB4")]
		public void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x600052D")]
		[Address(RVA = "0x1C04BCC", Offset = "0x1C04BCC", VA = "0x1C04BCC")]
		public void FixTransforms()
		{
		}

		[Token(Token = "0x600052E")]
		[Address(RVA = "0x1C04BE8", Offset = "0x1C04BE8", VA = "0x1C04BE8", Slot = "5")]
		public override void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x600052F")]
		[Address(RVA = "0x1C04C94", Offset = "0x1C04C94", VA = "0x1C04C94")]
		public void ReadPose()
		{
		}

		[Token(Token = "0x6000530")]
		[Address(RVA = "0x1C04CAC", Offset = "0x1C04CAC", VA = "0x1C04CAC")]
		public void WritePose(float solverWeight)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000AD")]
	public class IKMappingLimb : IKMapping
	{
		[Serializable]
		[Token(Token = "0x20000AE")]
		public enum BoneMapType
		{
			[Token(Token = "0x400048E")]
			Parent,
			[Token(Token = "0x400048F")]
			Bone1,
			[Token(Token = "0x4000490")]
			Bone2,
			[Token(Token = "0x4000491")]
			Bone3
		}

		[Token(Token = "0x4000482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform parentBone;

		[Token(Token = "0x4000483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform bone1;

		[Token(Token = "0x4000484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform bone2;

		[Token(Token = "0x4000485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform bone3;

		[Token(Token = "0x4000486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE24928", Offset = "0xE24928")]
		public float maintainRotationWeight;

		[Token(Token = "0x4000487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE24940", Offset = "0xE24940")]
		public float weight;

		[NonSerialized]
		[Token(Token = "0x4000488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool updatePlaneRotations;

		[Token(Token = "0x4000489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private BoneMap boneMapParent;

		[Token(Token = "0x400048A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private BoneMap boneMap1;

		[Token(Token = "0x400048B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private BoneMap boneMap2;

		[Token(Token = "0x400048C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private BoneMap boneMap3;

		[Token(Token = "0x6000531")]
		[Address(RVA = "0x1C04CD0", Offset = "0x1C04CD0", VA = "0x1C04CD0", Slot = "4")]
		public override bool IsValid(IKSolver solver, ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000532")]
		[Address(RVA = "0x1C04D54", Offset = "0x1C04D54", VA = "0x1C04D54")]
		public BoneMap GetBoneMap(BoneMapType boneMap)
		{
			return null;
		}

		[Token(Token = "0x6000533")]
		[Address(RVA = "0x1C04E28", Offset = "0x1C04E28", VA = "0x1C04E28")]
		public IKMappingLimb()
		{
		}

		[Token(Token = "0x6000534")]
		[Address(RVA = "0x1C04F60", Offset = "0x1C04F60", VA = "0x1C04F60")]
		public void SetBones(Transform bone1, Transform bone2, Transform bone3, [Optional] Transform parentBone)
		{
		}

		[Token(Token = "0x6000535")]
		[Address(RVA = "0x1C04FC4", Offset = "0x1C04FC4", VA = "0x1C04FC4")]
		public void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000536")]
		[Address(RVA = "0x1C0506C", Offset = "0x1C0506C", VA = "0x1C0506C")]
		public void FixTransforms()
		{
		}

		[Token(Token = "0x6000537")]
		[Address(RVA = "0x1C05124", Offset = "0x1C05124", VA = "0x1C05124", Slot = "5")]
		public override void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000538")]
		[Address(RVA = "0x1C053EC", Offset = "0x1C053EC", VA = "0x1C053EC")]
		public void ReadPose()
		{
		}

		[Token(Token = "0x6000539")]
		[Address(RVA = "0x1C054A4", Offset = "0x1C054A4", VA = "0x1C054A4")]
		public void WritePose(IKSolverFullBody solver, bool fullBody)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000AF")]
	public class IKMappingSpine : IKMapping
	{
		[Token(Token = "0x4000492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform[] spineBones;

		[Token(Token = "0x4000493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform leftUpperArmBone;

		[Token(Token = "0x4000494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform rightUpperArmBone;

		[Token(Token = "0x4000495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform leftThighBone;

		[Token(Token = "0x4000496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform rightThighBone;

		[Token(Token = "0x4000497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE24958", Offset = "0xE24958")]
		public int iterations;

		[Token(Token = "0x4000498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE24970", Offset = "0xE24970")]
		public float twistWeight;

		[Token(Token = "0x4000499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int rootNodeIndex;

		[Token(Token = "0x400049A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private BoneMap[] spine;

		[Token(Token = "0x400049B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private BoneMap leftUpperArm;

		[Token(Token = "0x400049C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private BoneMap rightUpperArm;

		[Token(Token = "0x400049D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private BoneMap leftThigh;

		[Token(Token = "0x400049E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private BoneMap rightThigh;

		[Token(Token = "0x400049F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool useFABRIK;

		[Token(Token = "0x600053A")]
		[Address(RVA = "0x1C0560C", Offset = "0x1C0560C", VA = "0x1C0560C", Slot = "4")]
		public override bool IsValid(IKSolver solver, ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x600053B")]
		[Address(RVA = "0x1C05904", Offset = "0x1C05904", VA = "0x1C05904")]
		public IKMappingSpine()
		{
		}

		[Token(Token = "0x600053C")]
		[Address(RVA = "0x1C05A5C", Offset = "0x1C05A5C", VA = "0x1C05A5C")]
		public void SetBones(Transform[] spineBones, Transform leftUpperArmBone, Transform rightUpperArmBone, Transform leftThighBone, Transform rightThighBone)
		{
		}

		[Token(Token = "0x600053D")]
		[Address(RVA = "0x1C05ADC", Offset = "0x1C05ADC", VA = "0x1C05ADC")]
		public void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x600053E")]
		[Address(RVA = "0x1C05B44", Offset = "0x1C05B44", VA = "0x1C05B44")]
		public void FixTransforms()
		{
		}

		[Token(Token = "0x600053F")]
		[Address(RVA = "0x1C05BC4", Offset = "0x1C05BC4", VA = "0x1C05BC4", Slot = "5")]
		public override void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000540")]
		[Address(RVA = "0x1C0629C", Offset = "0x1C0629C", VA = "0x1C0629C")]
		private bool UseFABRIK()
		{
			return default(bool);
		}

		[Token(Token = "0x6000541")]
		[Address(RVA = "0x1C062D4", Offset = "0x1C062D4", VA = "0x1C062D4")]
		public void ReadPose()
		{
		}

		[Token(Token = "0x6000542")]
		[Address(RVA = "0x1C065B4", Offset = "0x1C065B4", VA = "0x1C065B4")]
		public void WritePose(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000543")]
		[Address(RVA = "0x1C06960", Offset = "0x1C06960", VA = "0x1C06960")]
		public void ForwardReach(Vector3 position)
		{
		}

		[Token(Token = "0x6000544")]
		[Address(RVA = "0x1C06A4C", Offset = "0x1C06A4C", VA = "0x1C06A4C")]
		private void BackwardReach(Vector3 position)
		{
		}

		[Token(Token = "0x6000545")]
		[Address(RVA = "0x1C06B14", Offset = "0x1C06B14", VA = "0x1C06B14")]
		private void MapToSolverPositions(IKSolverFullBody solver)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000B0")]
	public abstract class IKSolver
	{
		[Serializable]
		[Token(Token = "0x20000B1")]
		public class Point
		{
			[Token(Token = "0x40004AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform transform;

			[Token(Token = "0x40004AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE24A44", Offset = "0xE24A44")]
			public float weight;

			[Token(Token = "0x40004AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 solverPosition;

			[Token(Token = "0x40004AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Quaternion solverRotation;

			[Token(Token = "0x40004AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Vector3 defaultLocalPosition;

			[Token(Token = "0x40004AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public Quaternion defaultLocalRotation;

			[Token(Token = "0x600055A")]
			[Address(RVA = "0x1C07D40", Offset = "0x1C07D40", VA = "0x1C07D40")]
			public void StoreDefaultLocalState()
			{
			}

			[Token(Token = "0x600055B")]
			[Address(RVA = "0x1C07D90", Offset = "0x1C07D90", VA = "0x1C07D90")]
			public void FixTransform()
			{
			}

			[Token(Token = "0x600055C")]
			[Address(RVA = "0x1C07980", Offset = "0x1C07980", VA = "0x1C07980")]
			public Point()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20000B2")]
		public class Bone : Point
		{
			[Token(Token = "0x40004B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public float length;

			[Token(Token = "0x40004B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public float sqrMag;

			[Token(Token = "0x40004B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public Vector3 axis;

			[Token(Token = "0x40004B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private RotationLimit _rotationLimit;

			[Token(Token = "0x40004B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private bool isLimited;

			[Token(Token = "0x170000A1")]
			public RotationLimit rotationLimit
			{
				[Token(Token = "0x600055D")]
				[Address(RVA = "0x1C072D8", Offset = "0x1C072D8", VA = "0x1C072D8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600055E")]
			[Address(RVA = "0x1C073D4", Offset = "0x1C073D4", VA = "0x1C073D4")]
			public void Swing(Vector3 swingTarget, float weight = 1f)
			{
			}

			[Token(Token = "0x600055F")]
			[Address(RVA = "0x1C07694", Offset = "0x1C07694", VA = "0x1C07694")]
			public void Swing2D(Vector3 swingTarget, float weight = 1f)
			{
			}

			[Token(Token = "0x6000560")]
			[Address(RVA = "0x1C078FC", Offset = "0x1C078FC", VA = "0x1C078FC")]
			public Bone()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20000B3")]
		public class Node : Point
		{
			[Token(Token = "0x40004B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public float length;

			[Token(Token = "0x40004B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public float effectorPositionWeight;

			[Token(Token = "0x40004B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public float effectorRotationWeight;

			[Token(Token = "0x40004B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Vector3 offset;

			[Token(Token = "0x6000561")]
			[Address(RVA = "0x1C07D0C", Offset = "0x1C07D0C", VA = "0x1C07D0C")]
			public Node()
			{
			}

			[Token(Token = "0x6000562")]
			[Address(RVA = "0x1C07D10", Offset = "0x1C07D10", VA = "0x1C07D10")]
			public Node(Transform transform)
			{
			}
		}

		[Token(Token = "0x20000B4")]
		public delegate void UpdateDelegate();

		[Token(Token = "0x20000B5")]
		public delegate void IterationDelegate(int i);

		[Token(Token = "0x40004A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public bool executedInEditor;

		[Token(Token = "0x40004A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[HideInInspector]
		public Vector3 IKPosition;

		[Token(Token = "0x40004A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE249A8", Offset = "0xE249A8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE249A8", Offset = "0xE249A8")]
		public float IKPositionWeight;

		[Token(Token = "0x40004A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE249FC", Offset = "0xE249FC")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x40004A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UpdateDelegate OnPreInitiate;

		[Token(Token = "0x40004A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UpdateDelegate OnPostInitiate;

		[Token(Token = "0x40004A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UpdateDelegate OnPreUpdate;

		[Token(Token = "0x40004A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UpdateDelegate OnPostUpdate;

		[Token(Token = "0x40004A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected bool firstInitiation;

		[Token(Token = "0x40004A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[HideInInspector]
		protected Transform root;

		[Token(Token = "0x170000A0")]
		public bool initiated
		{
			[Token(Token = "0x600054E")]
			[Address(RVA = "0x1C070AC", Offset = "0x1C070AC", VA = "0x1C070AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2D55C", Offset = "0xE2D55C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600054F")]
			[Address(RVA = "0x1C070B4", Offset = "0x1C070B4", VA = "0x1C070B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2D56C", Offset = "0xE2D56C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000546")]
		public abstract bool IsValid(ref string message);

		[Token(Token = "0x6000547")]
		[Address(RVA = "0x1C00250", Offset = "0x1C00250", VA = "0x1C00250")]
		public void Initiate(Transform root)
		{
		}

		[Token(Token = "0x6000548")]
		[Address(RVA = "0x1C00178", Offset = "0x1C00178", VA = "0x1C00178")]
		public void Update()
		{
		}

		[Token(Token = "0x6000549")]
		[Address(RVA = "0x1C07000", Offset = "0x1C07000", VA = "0x1C07000", Slot = "5")]
		public virtual Vector3 GetIKPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600054A")]
		[Address(RVA = "0x1C0700C", Offset = "0x1C0700C", VA = "0x1C0700C")]
		public void SetIKPosition(Vector3 position)
		{
		}

		[Token(Token = "0x600054B")]
		[Address(RVA = "0x1C07018", Offset = "0x1C07018", VA = "0x1C07018")]
		public float GetIKPositionWeight()
		{
			return default(float);
		}

		[Token(Token = "0x600054C")]
		[Address(RVA = "0x1C07020", Offset = "0x1C07020", VA = "0x1C07020")]
		public void SetIKPositionWeight(float weight)
		{
		}

		[Token(Token = "0x600054D")]
		[Address(RVA = "0x1C070A4", Offset = "0x1C070A4", VA = "0x1C070A4")]
		public Transform GetRoot()
		{
			return null;
		}

		[Token(Token = "0x6000550")]
		public abstract Point[] GetPoints();

		[Token(Token = "0x6000551")]
		public abstract Point GetPoint(Transform transform);

		[Token(Token = "0x6000552")]
		public abstract void FixTransforms();

		[Token(Token = "0x6000553")]
		public abstract void StoreDefaultLocalState();

		[Token(Token = "0x6000554")]
		protected abstract void OnInitiate();

		[Token(Token = "0x6000555")]
		protected abstract void OnUpdate();

		[Token(Token = "0x6000556")]
		[Address(RVA = "0x1C070C0", Offset = "0x1C070C0", VA = "0x1C070C0")]
		protected void LogWarning(string message)
		{
		}

		[Token(Token = "0x6000557")]
		[Address(RVA = "0x1C070D8", Offset = "0x1C070D8", VA = "0x1C070D8")]
		public static Transform ContainsDuplicateBone(Bone[] bones)
		{
			return null;
		}

		[Token(Token = "0x6000558")]
		[Address(RVA = "0x1C07214", Offset = "0x1C07214", VA = "0x1C07214")]
		public static bool HierarchyIsValid(Bone[] bones)
		{
			return default(bool);
		}

		[Token(Token = "0x6000559")]
		[Address(RVA = "0x1C072C0", Offset = "0x1C072C0", VA = "0x1C072C0")]
		protected IKSolver()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000B6")]
	public class IKSolverAim : IKSolverHeuristic
	{
		[Token(Token = "0x40004B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Transform transform;

		[Token(Token = "0x40004BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Vector3 axis;

		[Token(Token = "0x40004BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public Vector3 poleAxis;

		[Token(Token = "0x40004BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Vector3 polePosition;

		[Token(Token = "0x40004BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE24A5C", Offset = "0xE24A5C")]
		public float poleWeight;

		[Token(Token = "0x40004BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Transform poleTarget;

		[Token(Token = "0x40004BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE24A74", Offset = "0xE24A74")]
		public float clampWeight;

		[Token(Token = "0x40004C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE24A8C", Offset = "0xE24A8C")]
		public int clampSmoothing;

		[Token(Token = "0x40004C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public IterationDelegate OnPreIteration;

		[Token(Token = "0x40004C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float step;

		[Token(Token = "0x40004C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private Vector3 clampedIKPosition;

		[Token(Token = "0x40004C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private RotationLimit transformLimit;

		[Token(Token = "0x40004C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Transform lastTransform;

		[Token(Token = "0x170000A2")]
		public Vector3 transformAxis
		{
			[Token(Token = "0x600056C")]
			[Address(RVA = "0x1C08050", Offset = "0x1C08050", VA = "0x1C08050")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170000A3")]
		public Vector3 transformPoleAxis
		{
			[Token(Token = "0x600056D")]
			[Address(RVA = "0x1C0811C", Offset = "0x1C0811C", VA = "0x1C0811C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170000A4")]
		protected override int minBones
		{
			[Token(Token = "0x6000570")]
			[Address(RVA = "0x1C08EAC", Offset = "0x1C08EAC", VA = "0x1C08EAC", Slot = "12")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000A5")]
		protected override Vector3 localDirection
		{
			[Token(Token = "0x6000574")]
			[Address(RVA = "0x1C09450", Offset = "0x1C09450", VA = "0x1C09450", Slot = "15")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x600056B")]
		[Address(RVA = "0x1C07F50", Offset = "0x1C07F50", VA = "0x1C07F50")]
		public float GetAngle()
		{
			return default(float);
		}

		[Token(Token = "0x600056E")]
		[Address(RVA = "0x1C081E8", Offset = "0x1C081E8", VA = "0x1C081E8", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x600056F")]
		[Address(RVA = "0x1C08468", Offset = "0x1C08468", VA = "0x1C08468", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000571")]
		[Address(RVA = "0x1C08DF8", Offset = "0x1C08DF8", VA = "0x1C08DF8")]
		private void Solve()
		{
		}

		[Token(Token = "0x6000572")]
		[Address(RVA = "0x1C08A20", Offset = "0x1C08A20", VA = "0x1C08A20")]
		private Vector3 GetClampedIKPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000573")]
		[Address(RVA = "0x1C08EB4", Offset = "0x1C08EB4", VA = "0x1C08EB4")]
		private void RotateToTarget(Vector3 targetPosition, Bone bone, float weight)
		{
		}

		[Token(Token = "0x6000575")]
		[Address(RVA = "0x1C094C4", Offset = "0x1C094C4", VA = "0x1C094C4")]
		public IKSolverAim()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000B7")]
	public class IKSolverArm : IKSolver
	{
		[Token(Token = "0x40004C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE24AA4", Offset = "0xE24AA4")]
		public float IKRotationWeight;

		[Token(Token = "0x40004C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Quaternion IKRotation;

		[Token(Token = "0x40004C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Point chest;

		[Token(Token = "0x40004C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Point shoulder;

		[Token(Token = "0x40004CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Point upperArm;

		[Token(Token = "0x40004CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Point forearm;

		[Token(Token = "0x40004CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Point hand;

		[Token(Token = "0x40004CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool isLeft;

		[Token(Token = "0x40004CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public IKSolverVR.Arm arm;

		[Token(Token = "0x40004CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3[] positions;

		[Token(Token = "0x40004D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Quaternion[] rotations;

		[Token(Token = "0x6000576")]
		[Address(RVA = "0x1C0955C", Offset = "0x1C0955C", VA = "0x1C0955C", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000577")]
		[Address(RVA = "0x1C09918", Offset = "0x1C09918", VA = "0x1C09918", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x6000578")]
		[Address(RVA = "0x1C09AB0", Offset = "0x1C09AB0", VA = "0x1C09AB0", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6000579")]
		[Address(RVA = "0x1C09C48", Offset = "0x1C09C48", VA = "0x1C09C48", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x600057A")]
		[Address(RVA = "0x1C09C94", Offset = "0x1C09C94", VA = "0x1C09C94", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x600057B")]
		[Address(RVA = "0x1C09CF4", Offset = "0x1C09CF4", VA = "0x1C09CF4", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x600057C")]
		[Address(RVA = "0x1C0A064", Offset = "0x1C0A064", VA = "0x1C0A064", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x600057D")]
		[Address(RVA = "0x1C0A090", Offset = "0x1C0A090", VA = "0x1C0A090")]
		private void Solve()
		{
		}

		[Token(Token = "0x600057E")]
		[Address(RVA = "0x1C09D58", Offset = "0x1C09D58", VA = "0x1C09D58")]
		private void Read()
		{
		}

		[Token(Token = "0x600057F")]
		[Address(RVA = "0x1C0A100", Offset = "0x1C0A100", VA = "0x1C0A100")]
		private void Write()
		{
		}

		[Token(Token = "0x6000580")]
		[Address(RVA = "0x1C0A28C", Offset = "0x1C0A28C", VA = "0x1C0A28C")]
		public IKSolverArm()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000B8")]
	public class IKSolverCCD : IKSolverHeuristic
	{
		[Token(Token = "0x40004D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public IterationDelegate OnPreIteration;

		[Token(Token = "0x6000581")]
		[Address(RVA = "0x1C0A43C", Offset = "0x1C0A43C", VA = "0x1C0A43C", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000582")]
		[Address(RVA = "0x1C0A4C0", Offset = "0x1C0A4C0", VA = "0x1C0A4C0", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000583")]
		[Address(RVA = "0x1C0A7BC", Offset = "0x1C0A7BC", VA = "0x1C0A7BC")]
		protected void Solve(Vector3 targetPosition)
		{
		}

		[Token(Token = "0x6000584")]
		[Address(RVA = "0x1C0AF10", Offset = "0x1C0AF10", VA = "0x1C0AF10")]
		public IKSolverCCD()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000B9")]
	public class IKSolverFABRIK : IKSolverHeuristic
	{
		[Token(Token = "0x40004D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public IterationDelegate OnPreIteration;

		[Token(Token = "0x40004D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool[] limitedBones;

		[Token(Token = "0x40004D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3[] solverLocalPositions;

		[Token(Token = "0x170000A6")]
		protected override bool boneLengthCanBeZero
		{
			[Token(Token = "0x600058A")]
			[Address(RVA = "0x1C0C15C", Offset = "0x1C0C15C", VA = "0x1C0C15C", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000585")]
		[Address(RVA = "0x1C0AF18", Offset = "0x1C0AF18", VA = "0x1C0AF18")]
		public void SolveForward(Vector3 position)
		{
		}

		[Token(Token = "0x6000586")]
		[Address(RVA = "0x1C0B660", Offset = "0x1C0B660", VA = "0x1C0B660")]
		public void SolveBackward(Vector3 position)
		{
		}

		[Token(Token = "0x6000587")]
		[Address(RVA = "0x1C0B798", Offset = "0x1C0B798", VA = "0x1C0B798", Slot = "5")]
		public override Vector3 GetIKPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000588")]
		[Address(RVA = "0x1C0B830", Offset = "0x1C0B830", VA = "0x1C0B830", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000589")]
		[Address(RVA = "0x1C0BDF4", Offset = "0x1C0BDF4", VA = "0x1C0BDF4", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x600058B")]
		[Address(RVA = "0x1C0C164", Offset = "0x1C0C164", VA = "0x1C0C164")]
		private Vector3 SolveJoint(Vector3 pos1, Vector3 pos2, float length)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600058C")]
		[Address(RVA = "0x1C0AFEC", Offset = "0x1C0AFEC", VA = "0x1C0AFEC")]
		private void OnPreSolve()
		{
		}

		[Token(Token = "0x600058D")]
		[Address(RVA = "0x1C0B744", Offset = "0x1C0B744", VA = "0x1C0B744")]
		private void OnPostSolve()
		{
		}

		[Token(Token = "0x600058E")]
		[Address(RVA = "0x1C0C100", Offset = "0x1C0C100", VA = "0x1C0C100")]
		private void Solve(Vector3 targetPosition)
		{
		}

		[Token(Token = "0x600058F")]
		[Address(RVA = "0x1C0B488", Offset = "0x1C0B488", VA = "0x1C0B488")]
		private void ForwardReach(Vector3 position)
		{
		}

		[Token(Token = "0x6000590")]
		[Address(RVA = "0x1C0C9A4", Offset = "0x1C0C9A4", VA = "0x1C0C9A4")]
		private void SolverMove(int index, Vector3 offset)
		{
		}

		[Token(Token = "0x6000591")]
		[Address(RVA = "0x1C0CAB4", Offset = "0x1C0CAB4", VA = "0x1C0CAB4")]
		private void SolverRotate(int index, Quaternion rotation, bool recursive)
		{
		}

		[Token(Token = "0x6000592")]
		[Address(RVA = "0x1C0CBE0", Offset = "0x1C0CBE0", VA = "0x1C0CBE0")]
		private void SolverRotateChildren(int index, Quaternion rotation)
		{
		}

		[Token(Token = "0x6000593")]
		[Address(RVA = "0x1C0CCF8", Offset = "0x1C0CCF8", VA = "0x1C0CCF8")]
		private void SolverMoveChildrenAroundPoint(int index, Quaternion rotation)
		{
		}

		[Token(Token = "0x6000594")]
		[Address(RVA = "0x1C0BB5C", Offset = "0x1C0BB5C", VA = "0x1C0BB5C")]
		private Quaternion GetParentSolverRotation(int index)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000595")]
		[Address(RVA = "0x1C0BCA8", Offset = "0x1C0BCA8", VA = "0x1C0BCA8")]
		private Vector3 GetParentSolverPosition(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000596")]
		[Address(RVA = "0x1C0CEE4", Offset = "0x1C0CEE4", VA = "0x1C0CEE4")]
		private Quaternion GetLimitedRotation(int index, Quaternion q, out bool changed)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000597")]
		[Address(RVA = "0x1C0C41C", Offset = "0x1C0C41C", VA = "0x1C0C41C")]
		private void LimitForward(int rotateBone, int limitBone)
		{
		}

		[Token(Token = "0x6000598")]
		[Address(RVA = "0x1C0B734", Offset = "0x1C0B734", VA = "0x1C0B734")]
		private void BackwardReach(Vector3 position)
		{
		}

		[Token(Token = "0x6000599")]
		[Address(RVA = "0x1C0D64C", Offset = "0x1C0D64C", VA = "0x1C0D64C")]
		private void BackwardReachUnlimited(Vector3 position)
		{
		}

		[Token(Token = "0x600059A")]
		[Address(RVA = "0x1C0D0B8", Offset = "0x1C0D0B8", VA = "0x1C0D0B8")]
		private void BackwardReachLimited(Vector3 position)
		{
		}

		[Token(Token = "0x600059B")]
		[Address(RVA = "0x1C0C27C", Offset = "0x1C0C27C", VA = "0x1C0C27C")]
		private void MapToSolverPositions()
		{
		}

		[Token(Token = "0x600059C")]
		[Address(RVA = "0x1C0C358", Offset = "0x1C0C358", VA = "0x1C0C358")]
		private void MapToSolverPositionsLimited()
		{
		}

		[Token(Token = "0x600059D")]
		[Address(RVA = "0x1C0D718", Offset = "0x1C0D718", VA = "0x1C0D718")]
		public IKSolverFABRIK()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000BA")]
	public class IKSolverFABRIKRoot : IKSolver
	{
		[Token(Token = "0x40004D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int iterations;

		[Token(Token = "0x40004D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE24ABC", Offset = "0xE24ABC")]
		public float rootPin;

		[Token(Token = "0x40004D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public FABRIKChain[] chains;

		[Token(Token = "0x40004D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool zeroWeightApplied;

		[Token(Token = "0x40004D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool[] isRoot;

		[Token(Token = "0x40004DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 rootDefaultPosition;

		[Token(Token = "0x600059E")]
		[Address(RVA = "0x1C0D7A8", Offset = "0x1C0D7A8", VA = "0x1C0D7A8", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x600059F")]
		[Address(RVA = "0x1C0E180", Offset = "0x1C0E180", VA = "0x1C0E180", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x60005A0")]
		[Address(RVA = "0x1C0E218", Offset = "0x1C0E218", VA = "0x1C0E218", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x60005A1")]
		[Address(RVA = "0x1C0E2B8", Offset = "0x1C0E2B8", VA = "0x1C0E2B8", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x60005A2")]
		[Address(RVA = "0x1C0E3C8", Offset = "0x1C0E3C8", VA = "0x1C0E3C8")]
		private bool IsRoot(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x60005A3")]
		[Address(RVA = "0x1C0E464", Offset = "0x1C0E464", VA = "0x1C0E464", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x60005A4")]
		[Address(RVA = "0x1C0E9CC", Offset = "0x1C0E9CC", VA = "0x1C0E9CC", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x60005A5")]
		[Address(RVA = "0x1C0EBE4", Offset = "0x1C0EBE4", VA = "0x1C0EBE4", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x60005A6")]
		[Address(RVA = "0x1C0EA7C", Offset = "0x1C0EA7C", VA = "0x1C0EA7C")]
		private void AddPointsToArray(ref Point[] array, FABRIKChain chain)
		{
		}

		[Token(Token = "0x60005A7")]
		[Address(RVA = "0x1C0E698", Offset = "0x1C0E698", VA = "0x1C0E698")]
		private Vector3 GetCentroid()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60005A8")]
		[Address(RVA = "0x1C0EC7C", Offset = "0x1C0EC7C", VA = "0x1C0EC7C")]
		public IKSolverFABRIKRoot()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000BB")]
	public class IKSolverFullBody : IKSolver
	{
		[Token(Token = "0x40004DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE24AD4", Offset = "0xE24AD4")]
		public int iterations;

		[Token(Token = "0x40004DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public FBIKChain[] chain;

		[Token(Token = "0x40004DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public IKEffector[] effectors;

		[Token(Token = "0x40004DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public IKMappingSpine spineMapping;

		[Token(Token = "0x40004DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public IKMappingBone[] boneMappings;

		[Token(Token = "0x40004E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public IKMappingLimb[] limbMappings;

		[Token(Token = "0x40004E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool FABRIKPass;

		[Token(Token = "0x40004E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public UpdateDelegate OnPreRead;

		[Token(Token = "0x40004E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public UpdateDelegate OnPreSolve;

		[Token(Token = "0x40004E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public IterationDelegate OnPreIteration;

		[Token(Token = "0x40004E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public IterationDelegate OnPostIteration;

		[Token(Token = "0x40004E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public UpdateDelegate OnPreBend;

		[Token(Token = "0x40004E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public UpdateDelegate OnPostSolve;

		[Token(Token = "0x40004E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public UpdateDelegate OnStoreDefaultLocalState;

		[Token(Token = "0x40004E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public UpdateDelegate OnFixTransforms;

		[Token(Token = "0x60005A9")]
		[Address(RVA = "0x1C0ED00", Offset = "0x1C0ED00", VA = "0x1C0ED00")]
		public IKEffector GetEffector(Transform t)
		{
			return null;
		}

		[Token(Token = "0x60005AA")]
		[Address(RVA = "0x1C0EDF4", Offset = "0x1C0EDF4", VA = "0x1C0EDF4")]
		public int GetChainIndex(Transform transform)
		{
			return default(int);
		}

		[Token(Token = "0x60005AB")]
		[Address(RVA = "0x1C014DC", Offset = "0x1C014DC", VA = "0x1C014DC")]
		public Node GetNode(int chainIndex, int nodeIndex)
		{
			return null;
		}

		[Token(Token = "0x60005AC")]
		[Address(RVA = "0x1C007A4", Offset = "0x1C007A4", VA = "0x1C007A4")]
		public void GetChainAndNodeIndexes(Transform transform, out int chainIndex, out int nodeIndex)
		{
		}

		[Token(Token = "0x60005AD")]
		[Address(RVA = "0x1C0EF28", Offset = "0x1C0EF28", VA = "0x1C0EF28", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x60005AE")]
		[Address(RVA = "0x1C0F0D8", Offset = "0x1C0F0D8", VA = "0x1C0F0D8", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x60005AF")]
		[Address(RVA = "0x1C0F24C", Offset = "0x1C0F24C", VA = "0x1C0F24C", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x60005B0")]
		[Address(RVA = "0x1C0F450", Offset = "0x1C0F450", VA = "0x1C0F450", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x60005B1")]
		[Address(RVA = "0x1C0F520", Offset = "0x1C0F520", VA = "0x1C0F520", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x60005B2")]
		[Address(RVA = "0x1C0F5FC", Offset = "0x1C0F5FC", VA = "0x1C0F5FC", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x60005B3")]
		[Address(RVA = "0x1C0F76C", Offset = "0x1C0F76C", VA = "0x1C0F76C", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x60005B4")]
		[Address(RVA = "0x1C0F924", Offset = "0x1C0F924", VA = "0x1C0F924", Slot = "12")]
		protected virtual void ReadPose()
		{
		}

		[Token(Token = "0x60005B5")]
		[Address(RVA = "0x1C0FB60", Offset = "0x1C0FB60", VA = "0x1C0FB60", Slot = "13")]
		protected virtual void Solve()
		{
		}

		[Token(Token = "0x60005B6")]
		[Address(RVA = "0x1C0FE20", Offset = "0x1C0FE20", VA = "0x1C0FE20", Slot = "14")]
		protected virtual void ApplyBendConstraints()
		{
		}

		[Token(Token = "0x60005B7")]
		[Address(RVA = "0x1C0FE64", Offset = "0x1C0FE64", VA = "0x1C0FE64", Slot = "15")]
		protected virtual void WritePose()
		{
		}

		[Token(Token = "0x60005B8")]
		[Address(RVA = "0x1C0FF48", Offset = "0x1C0FF48", VA = "0x1C0FF48")]
		public IKSolverFullBody()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000BC")]
	public enum FullBodyBipedEffector
	{
		[Token(Token = "0x40004EB")]
		Body,
		[Token(Token = "0x40004EC")]
		LeftShoulder,
		[Token(Token = "0x40004ED")]
		RightShoulder,
		[Token(Token = "0x40004EE")]
		LeftThigh,
		[Token(Token = "0x40004EF")]
		RightThigh,
		[Token(Token = "0x40004F0")]
		LeftHand,
		[Token(Token = "0x40004F1")]
		RightHand,
		[Token(Token = "0x40004F2")]
		LeftFoot,
		[Token(Token = "0x40004F3")]
		RightFoot
	}
	[Serializable]
	[Token(Token = "0x20000BD")]
	public enum FullBodyBipedChain
	{
		[Token(Token = "0x40004F5")]
		LeftArm,
		[Token(Token = "0x40004F6")]
		RightArm,
		[Token(Token = "0x40004F7")]
		LeftLeg,
		[Token(Token = "0x40004F8")]
		RightLeg
	}
	[Serializable]
	[Token(Token = "0x20000BE")]
	public class IKSolverFullBodyBiped : IKSolverFullBody
	{
		[Token(Token = "0x40004F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Transform rootNode;

		[Token(Token = "0x40004FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE24AEC", Offset = "0xE24AEC")]
		public float spineStiffness;

		[Token(Token = "0x40004FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE24B04", Offset = "0xE24B04")]
		public float pullBodyVertical;

		[Token(Token = "0x40004FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE24B1C", Offset = "0xE24B1C")]
		public float pullBodyHorizontal;

		[Token(Token = "0x40004FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE24B34", Offset = "0xE24B34")]
		private Vector3 <pullBodyOffset>k__BackingField;

		[Token(Token = "0x40004FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Vector3 offset;

		[Token(Token = "0x170000A7")]
		public IKEffector bodyEffector
		{
			[Token(Token = "0x60005B9")]
			[Address(RVA = "0x1DCC718", Offset = "0x1DCC718", VA = "0x1DCC718")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A8")]
		public IKEffector leftShoulderEffector
		{
			[Token(Token = "0x60005BA")]
			[Address(RVA = "0x1DCC860", Offset = "0x1DCC860", VA = "0x1DCC860")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A9")]
		public IKEffector rightShoulderEffector
		{
			[Token(Token = "0x60005BB")]
			[Address(RVA = "0x1DCC868", Offset = "0x1DCC868", VA = "0x1DCC868")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AA")]
		public IKEffector leftThighEffector
		{
			[Token(Token = "0x60005BC")]
			[Address(RVA = "0x1DCC870", Offset = "0x1DCC870", VA = "0x1DCC870")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AB")]
		public IKEffector rightThighEffector
		{
			[Token(Token = "0x60005BD")]
			[Address(RVA = "0x1DCC878", Offset = "0x1DCC878", VA = "0x1DCC878")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AC")]
		public IKEffector leftHandEffector
		{
			[Token(Token = "0x60005BE")]
			[Address(RVA = "0x1DCC880", Offset = "0x1DCC880", VA = "0x1DCC880")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AD")]
		public IKEffector rightHandEffector
		{
			[Token(Token = "0x60005BF")]
			[Address(RVA = "0x1DCC888", Offset = "0x1DCC888", VA = "0x1DCC888")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AE")]
		public IKEffector leftFootEffector
		{
			[Token(Token = "0x60005C0")]
			[Address(RVA = "0x1DCC890", Offset = "0x1DCC890", VA = "0x1DCC890")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AF")]
		public IKEffector rightFootEffector
		{
			[Token(Token = "0x60005C1")]
			[Address(RVA = "0x1DCC898", Offset = "0x1DCC898", VA = "0x1DCC898")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B0")]
		public FBIKChain leftArmChain
		{
			[Token(Token = "0x60005C2")]
			[Address(RVA = "0x1DCC8A0", Offset = "0x1DCC8A0", VA = "0x1DCC8A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B1")]
		public FBIKChain rightArmChain
		{
			[Token(Token = "0x60005C3")]
			[Address(RVA = "0x1DCC8D8", Offset = "0x1DCC8D8", VA = "0x1DCC8D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B2")]
		public IKMappingLimb leftArmMapping
		{
			[Token(Token = "0x60005C4")]
			[Address(RVA = "0x1DCC910", Offset = "0x1DCC910", VA = "0x1DCC910")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B3")]
		public IKMappingLimb rightArmMapping
		{
			[Token(Token = "0x60005C5")]
			[Address(RVA = "0x1DCC944", Offset = "0x1DCC944", VA = "0x1DCC944")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B4")]
		public IKMappingLimb leftLegMapping
		{
			[Token(Token = "0x60005C6")]
			[Address(RVA = "0x1DCC97C", Offset = "0x1DCC97C", VA = "0x1DCC97C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B5")]
		public IKMappingLimb rightLegMapping
		{
			[Token(Token = "0x60005C7")]
			[Address(RVA = "0x1DCC9B4", Offset = "0x1DCC9B4", VA = "0x1DCC9B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B6")]
		public IKMappingBone headMapping
		{
			[Token(Token = "0x60005C8")]
			[Address(RVA = "0x1DCC9EC", Offset = "0x1DCC9EC", VA = "0x1DCC9EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B7")]
		public Vector3 pullBodyOffset
		{
			[Token(Token = "0x60005D2")]
			[Address(RVA = "0x1DCE808", Offset = "0x1DCE808", VA = "0x1DCE808")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2D57C", Offset = "0xE2D57C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60005D3")]
			[Address(RVA = "0x1DCE814", Offset = "0x1DCE814", VA = "0x1DCE814")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2D58C", Offset = "0xE2D58C")]
			private set
			{
			}
		}

		[Token(Token = "0x60005C9")]
		[Address(RVA = "0x1DCCA20", Offset = "0x1DCCA20", VA = "0x1DCCA20")]
		public FBIKChain GetChain(FullBodyBipedChain c)
		{
			return null;
		}

		[Token(Token = "0x60005CA")]
		[Address(RVA = "0x1DCCAD8", Offset = "0x1DCCAD8", VA = "0x1DCCAD8")]
		public FBIKChain GetChain(FullBodyBipedEffector effector)
		{
			return null;
		}

		[Token(Token = "0x60005CB")]
		[Address(RVA = "0x1DCC720", Offset = "0x1DCC720", VA = "0x1DCC720")]
		public IKEffector GetEffector(FullBodyBipedEffector effector)
		{
			return null;
		}

		[Token(Token = "0x60005CC")]
		[Address(RVA = "0x1DCCBA8", Offset = "0x1DCCBA8", VA = "0x1DCCBA8")]
		public IKEffector GetEndEffector(FullBodyBipedChain c)
		{
			return null;
		}

		[Token(Token = "0x60005CD")]
		[Address(RVA = "0x1DCCC60", Offset = "0x1DCCC60", VA = "0x1DCCC60")]
		public IKMappingLimb GetLimbMapping(FullBodyBipedChain chain)
		{
			return null;
		}

		[Token(Token = "0x60005CE")]
		[Address(RVA = "0x1DCCD14", Offset = "0x1DCCD14", VA = "0x1DCCD14")]
		public IKConstraintBend GetBendConstraint(FullBodyBipedChain limb)
		{
			return null;
		}

		[Token(Token = "0x60005CF")]
		[Address(RVA = "0x1DCCDDC", Offset = "0x1DCCDDC", VA = "0x1DCCDDC", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x60005D0")]
		[Address(RVA = "0x1DCCF74", Offset = "0x1DCCF74", VA = "0x1DCCF74")]
		public void SetToReferences(BipedReferences references, [Optional] Transform rootNode)
		{
		}

		[Token(Token = "0x60005D1")]
		[Address(RVA = "0x1DCE374", Offset = "0x1DCE374", VA = "0x1DCE374")]
		public static Transform DetectRootNodeBone(BipedReferences references)
		{
			return null;
		}

		[Token(Token = "0x60005D4")]
		[Address(RVA = "0x1DCE688", Offset = "0x1DCE688", VA = "0x1DCE688")]
		private static Transform GetLeftClavicle(BipedReferences references)
		{
			return null;
		}

		[Token(Token = "0x60005D5")]
		[Address(RVA = "0x1DCE748", Offset = "0x1DCE748", VA = "0x1DCE748")]
		private static Transform GetRightClavicle(BipedReferences references)
		{
			return null;
		}

		[Token(Token = "0x60005D6")]
		[Address(RVA = "0x1DCE820", Offset = "0x1DCE820", VA = "0x1DCE820")]
		private static bool Contains(Transform[] array, Transform transform)
		{
			return default(bool);
		}

		[Token(Token = "0x60005D7")]
		[Address(RVA = "0x1DCE8FC", Offset = "0x1DCE8FC", VA = "0x1DCE8FC", Slot = "12")]
		protected override void ReadPose()
		{
		}

		[Token(Token = "0x60005D8")]
		[Address(RVA = "0x1DCEA48", Offset = "0x1DCEA48", VA = "0x1DCEA48")]
		private void PullBody()
		{
		}

		[Token(Token = "0x60005D9")]
		[Address(RVA = "0x1DCEBD8", Offset = "0x1DCEBD8", VA = "0x1DCEBD8")]
		private Vector3 GetBodyOffset()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60005DA")]
		[Address(RVA = "0x1DCEDD8", Offset = "0x1DCEDD8", VA = "0x1DCEDD8")]
		private Vector3 GetHandBodyPull(IKEffector effector, FBIKChain arm, Vector3 offset)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60005DB")]
		[Address(RVA = "0x1DCEFD8", Offset = "0x1DCEFD8", VA = "0x1DCEFD8", Slot = "14")]
		protected override void ApplyBendConstraints()
		{
		}

		[Token(Token = "0x60005DC")]
		[Address(RVA = "0x1DCF310", Offset = "0x1DCF310", VA = "0x1DCF310", Slot = "15")]
		protected override void WritePose()
		{
		}

		[Token(Token = "0x60005DD")]
		[Address(RVA = "0x1DCF414", Offset = "0x1DCF414", VA = "0x1DCF414")]
		public IKSolverFullBodyBiped()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000BF")]
	public class IKSolverHeuristic : IKSolver
	{
		[Token(Token = "0x40004FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform target;

		[Token(Token = "0x4000500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float tolerance;

		[Token(Token = "0x4000501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int maxIterations;

		[Token(Token = "0x4000502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool useRotationLimits;

		[Token(Token = "0x4000503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		public bool XY;

		[Token(Token = "0x4000504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Bone[] bones;

		[Token(Token = "0x4000505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Vector3 lastLocalDirection;

		[Token(Token = "0x4000506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		protected float chainLength;

		[Token(Token = "0x170000B8")]
		protected virtual int minBones
		{
			[Token(Token = "0x60005E4")]
			[Address(RVA = "0x1DCFB58", Offset = "0x1DCFB58", VA = "0x1DCFB58", Slot = "12")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000B9")]
		protected virtual bool boneLengthCanBeZero
		{
			[Token(Token = "0x60005E5")]
			[Address(RVA = "0x1DCFB60", Offset = "0x1DCFB60", VA = "0x1DCFB60", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000BA")]
		protected virtual bool allowCommonParent
		{
			[Token(Token = "0x60005E6")]
			[Address(RVA = "0x1DCFB68", Offset = "0x1DCFB68", VA = "0x1DCFB68", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000BB")]
		protected virtual Vector3 localDirection
		{
			[Token(Token = "0x60005EA")]
			[Address(RVA = "0x1DD00F8", Offset = "0x1DD00F8", VA = "0x1DD00F8", Slot = "15")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170000BC")]
		protected float positionOffset
		{
			[Token(Token = "0x60005EB")]
			[Address(RVA = "0x1DD022C", Offset = "0x1DD022C", VA = "0x1DD022C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60005DE")]
		[Address(RVA = "0x1DCF424", Offset = "0x1DCF424", VA = "0x1DCF424")]
		public bool SetChain(Transform[] hierarchy, Transform root)
		{
			return default(bool);
		}

		[Token(Token = "0x60005DF")]
		[Address(RVA = "0x1DCF5D8", Offset = "0x1DCF5D8", VA = "0x1DCF5D8", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x60005E0")]
		[Address(RVA = "0x1DCF644", Offset = "0x1DCF644", VA = "0x1DCF644", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x60005E1")]
		[Address(RVA = "0x1DCF6C4", Offset = "0x1DCF6C4", VA = "0x1DCF6C4", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x60005E2")]
		[Address(RVA = "0x1DCFA5C", Offset = "0x1DCFA5C", VA = "0x1DCFA5C", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x60005E3")]
		[Address(RVA = "0x1DCFA64", Offset = "0x1DCFA64", VA = "0x1DCFA64", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x60005E7")]
		[Address(RVA = "0x1DCFB70", Offset = "0x1DCFB70", VA = "0x1DCFB70", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x60005E8")]
		[Address(RVA = "0x1DCFB74", Offset = "0x1DCFB74", VA = "0x1DCFB74", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x60005E9")]
		[Address(RVA = "0x1DCFB78", Offset = "0x1DCFB78", VA = "0x1DCFB78")]
		protected void InitiateBones()
		{
		}

		[Token(Token = "0x60005EC")]
		[Address(RVA = "0x1DD02F0", Offset = "0x1DD02F0", VA = "0x1DD02F0")]
		protected Vector3 GetSingularityOffset()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60005ED")]
		[Address(RVA = "0x1DD0694", Offset = "0x1DD0694", VA = "0x1DD0694")]
		private bool SingularityDetected()
		{
			return default(bool);
		}

		[Token(Token = "0x60005EE")]
		[Address(RVA = "0x1DD0948", Offset = "0x1DD0948", VA = "0x1DD0948")]
		public IKSolverHeuristic()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000C0")]
	public class IKSolverLeg : IKSolver
	{
		[Token(Token = "0x4000507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE24B44", Offset = "0xE24B44")]
		public float IKRotationWeight;

		[Token(Token = "0x4000508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Quaternion IKRotation;

		[Token(Token = "0x4000509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Point pelvis;

		[Token(Token = "0x400050A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Point thigh;

		[Token(Token = "0x400050B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Point calf;

		[Token(Token = "0x400050C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Point foot;

		[Token(Token = "0x400050D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Point toe;

		[Token(Token = "0x400050E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public IKSolverVR.Leg leg;

		[Token(Token = "0x400050F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Vector3 heelOffset;

		[Token(Token = "0x4000510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3[] positions;

		[Token(Token = "0x4000511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Quaternion[] rotations;

		[Token(Token = "0x60005EF")]
		[Address(RVA = "0x1DD09C4", Offset = "0x1DD09C4", VA = "0x1DD09C4", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x60005F0")]
		[Address(RVA = "0x1DD0D80", Offset = "0x1DD0D80", VA = "0x1DD0D80", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x60005F1")]
		[Address(RVA = "0x1DD0F18", Offset = "0x1DD0F18", VA = "0x1DD0F18", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x60005F2")]
		[Address(RVA = "0x1DD10B0", Offset = "0x1DD10B0", VA = "0x1DD10B0", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x60005F3")]
		[Address(RVA = "0x1DD110C", Offset = "0x1DD110C", VA = "0x1DD110C", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x60005F4")]
		[Address(RVA = "0x1DD117C", Offset = "0x1DD117C", VA = "0x1DD117C", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x60005F5")]
		[Address(RVA = "0x1DD14E8", Offset = "0x1DD14E8", VA = "0x1DD14E8", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x60005F6")]
		[Address(RVA = "0x1DD1514", Offset = "0x1DD1514", VA = "0x1DD1514")]
		private void Solve()
		{
		}

		[Token(Token = "0x60005F7")]
		[Address(RVA = "0x1DD11E0", Offset = "0x1DD11E0", VA = "0x1DD11E0")]
		private void Read()
		{
		}

		[Token(Token = "0x60005F8")]
		[Address(RVA = "0x1DD161C", Offset = "0x1DD161C", VA = "0x1DD161C")]
		private void Write()
		{
		}

		[Token(Token = "0x60005F9")]
		[Address(RVA = "0x1DD1AB4", Offset = "0x1DD1AB4", VA = "0x1DD1AB4")]
		public IKSolverLeg()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000C1")]
	public class IKSolverLimb : IKSolverTrigonometric
	{
		[Serializable]
		[Token(Token = "0x20000C2")]
		public enum BendModifier
		{
			[Token(Token = "0x4000523")]
			Animation,
			[Token(Token = "0x4000524")]
			Target,
			[Token(Token = "0x4000525")]
			Parent,
			[Token(Token = "0x4000526")]
			Arm,
			[Token(Token = "0x4000527")]
			Goal
		}

		[Serializable]
		[Token(Token = "0x20000C3")]
		public struct AxisDirection
		{
			[Token(Token = "0x4000528")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 direction;

			[Token(Token = "0x4000529")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 axis;

			[Token(Token = "0x400052A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float dot;

			[Token(Token = "0x6000604")]
			[Address(RVA = "0x1DD34DC", Offset = "0x1DD34DC", VA = "0x1DD34DC")]
			public AxisDirection(Vector3 direction, Vector3 axis)
			{
			}
		}

		[Token(Token = "0x4000512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public AvatarIKGoal goal;

		[Token(Token = "0x4000513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public BendModifier bendModifier;

		[Token(Token = "0x4000514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE24B5C", Offset = "0xE24B5C")]
		public float maintainRotationWeight;

		[Token(Token = "0x4000515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE24B74", Offset = "0xE24B74")]
		public float bendModifierWeight;

		[Token(Token = "0x4000516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Transform bendGoal;

		[Token(Token = "0x4000517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool maintainBendFor1Frame;

		[Token(Token = "0x4000518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
		private bool maintainRotationFor1Frame;

		[Token(Token = "0x4000519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private Quaternion defaultRootRotation;

		[Token(Token = "0x400051A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private Quaternion parentDefaultRotation;

		[Token(Token = "0x400051B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private Quaternion bone3RotationBeforeSolve;

		[Token(Token = "0x400051C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private Quaternion maintainRotation;

		[Token(Token = "0x400051D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private Quaternion bone3DefaultRotation;

		[Token(Token = "0x400051E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private Vector3 _bendNormal;

		[Token(Token = "0x400051F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Vector3 animationNormal;

		[Token(Token = "0x4000520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private AxisDirection[] axisDirectionsLeft;

		[Token(Token = "0x4000521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private AxisDirection[] axisDirectionsRight;

		[Token(Token = "0x170000BD")]
		private AxisDirection[] axisDirections
		{
			[Token(Token = "0x6000601")]
			[Address(RVA = "0x1DD34C0", Offset = "0x1DD34C0", VA = "0x1DD34C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005FA")]
		[Address(RVA = "0x1DD1D68", Offset = "0x1DD1D68", VA = "0x1DD1D68")]
		public void MaintainRotation()
		{
		}

		[Token(Token = "0x60005FB")]
		[Address(RVA = "0x1DD1DB8", Offset = "0x1DD1DB8", VA = "0x1DD1DB8")]
		public void MaintainBend()
		{
		}

		[Token(Token = "0x60005FC")]
		[Address(RVA = "0x1DD1ECC", Offset = "0x1DD1ECC", VA = "0x1DD1ECC", Slot = "12")]
		protected override void OnInitiateVirtual()
		{
		}

		[Token(Token = "0x60005FD")]
		[Address(RVA = "0x1DD253C", Offset = "0x1DD253C", VA = "0x1DD253C", Slot = "13")]
		protected override void OnUpdateVirtual()
		{
		}

		[Token(Token = "0x60005FE")]
		[Address(RVA = "0x1DD3118", Offset = "0x1DD3118", VA = "0x1DD3118", Slot = "14")]
		protected override void OnPostSolveVirtual()
		{
		}

		[Token(Token = "0x60005FF")]
		[Address(RVA = "0x1DD3260", Offset = "0x1DD3260", VA = "0x1DD3260")]
		public IKSolverLimb()
		{
		}

		[Token(Token = "0x6000600")]
		[Address(RVA = "0x1DD3420", Offset = "0x1DD3420", VA = "0x1DD3420")]
		public IKSolverLimb(AvatarIKGoal goal)
		{
		}

		[Token(Token = "0x6000602")]
		[Address(RVA = "0x1DD2248", Offset = "0x1DD2248", VA = "0x1DD2248")]
		private void StoreAxisDirections(ref AxisDirection[] axisDirections)
		{
		}

		[Token(Token = "0x6000603")]
		[Address(RVA = "0x1DD2668", Offset = "0x1DD2668", VA = "0x1DD2668")]
		private Vector3 GetModifiedBendNormal()
		{
			return default(Vector3);
		}
	}
	[Serializable]
	[Token(Token = "0x20000C4")]
	public class IKSolverLookAt : IKSolver
	{
		[Serializable]
		[Token(Token = "0x20000C5")]
		public class LookAtBone : Bone
		{
			[Token(Token = "0x400053C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			public Vector3 baseForwardOffsetEuler;

			[Token(Token = "0x170000C4")]
			public Vector3 forward
			{
				[Token(Token = "0x600061F")]
				[Address(RVA = "0x1DD5274", Offset = "0x1DD5274", VA = "0x1DD5274")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x600061B")]
			[Address(RVA = "0x1DD5A18", Offset = "0x1DD5A18", VA = "0x1DD5A18")]
			public LookAtBone()
			{
			}

			[Token(Token = "0x600061C")]
			[Address(RVA = "0x1DD43C4", Offset = "0x1DD43C4", VA = "0x1DD43C4")]
			public LookAtBone(Transform transform)
			{
			}

			[Token(Token = "0x600061D")]
			[Address(RVA = "0x1DD474C", Offset = "0x1DD474C", VA = "0x1DD474C")]
			public void Initiate(Transform root)
			{
			}

			[Token(Token = "0x600061E")]
			[Address(RVA = "0x1DD5678", Offset = "0x1DD5678", VA = "0x1DD5678")]
			public void LookAt(Vector3 direction, float weight)
			{
			}
		}

		[Token(Token = "0x400052B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform target;

		[Token(Token = "0x400052C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public LookAtBone[] spine;

		[Token(Token = "0x400052D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public LookAtBone head;

		[Token(Token = "0x400052E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public LookAtBone[] eyes;

		[Token(Token = "0x400052F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE24B8C", Offset = "0xE24B8C")]
		public float bodyWeight;

		[Token(Token = "0x4000530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE24BA4", Offset = "0xE24BA4")]
		public float headWeight;

		[Token(Token = "0x4000531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE24BBC", Offset = "0xE24BBC")]
		public float eyesWeight;

		[Token(Token = "0x4000532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE24BD4", Offset = "0xE24BD4")]
		public float clampWeight;

		[Token(Token = "0x4000533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE24BEC", Offset = "0xE24BEC")]
		public float clampWeightHead;

		[Token(Token = "0x4000534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE24C04", Offset = "0xE24C04")]
		public float clampWeightEyes;

		[Token(Token = "0x4000535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE24C1C", Offset = "0xE24C1C")]
		public int clampSmoothing;

		[Token(Token = "0x4000536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public AnimationCurve spineWeightCurve;

		[Token(Token = "0x4000537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Vector3 spineTargetOffset;

		[Token(Token = "0x4000538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected Vector3[] spineForwards;

		[Token(Token = "0x4000539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected Vector3[] headForwards;

		[Token(Token = "0x400053A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected Vector3[] eyeForward;

		[Token(Token = "0x400053B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private bool isDirty;

		[Token(Token = "0x170000BE")]
		protected bool spineIsValid
		{
			[Token(Token = "0x600060F")]
			[Address(RVA = "0x1DD3AA8", Offset = "0x1DD3AA8", VA = "0x1DD3AA8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000BF")]
		protected bool spineIsEmpty
		{
			[Token(Token = "0x6000610")]
			[Address(RVA = "0x1DD3C80", Offset = "0x1DD3C80", VA = "0x1DD3C80")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000C0")]
		protected bool headIsValid
		{
			[Token(Token = "0x6000612")]
			[Address(RVA = "0x1DD3B8C", Offset = "0x1DD3B8C", VA = "0x1DD3B8C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000C1")]
		protected bool headIsEmpty
		{
			[Token(Token = "0x6000613")]
			[Address(RVA = "0x1DD3CA4", Offset = "0x1DD3CA4", VA = "0x1DD3CA4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000C2")]
		protected bool eyesIsValid
		{
			[Token(Token = "0x6000615")]
			[Address(RVA = "0x1DD3B9C", Offset = "0x1DD3B9C", VA = "0x1DD3B9C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000C3")]
		protected bool eyesIsEmpty
		{
			[Token(Token = "0x6000616")]
			[Address(RVA = "0x1DD3D20", Offset = "0x1DD3D20", VA = "0x1DD3D20")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000605")]
		[Address(RVA = "0x1DD353C", Offset = "0x1DD353C", VA = "0x1DD353C")]
		public void SetLookAtWeight(float weight, float bodyWeight = 0f, float headWeight = 1f, float eyesWeight = 0.5f, float clampWeight = 0.5f, float clampWeightHead = 0.5f, float clampWeightEyes = 0.3f)
		{
		}

		[Token(Token = "0x6000606")]
		[Address(RVA = "0x1DD3684", Offset = "0x1DD3684", VA = "0x1DD3684", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000607")]
		[Address(RVA = "0x1DD37B4", Offset = "0x1DD37B4", VA = "0x1DD37B4")]
		public void SetDirty()
		{
		}

		[Token(Token = "0x6000608")]
		[Address(RVA = "0x1DD37C0", Offset = "0x1DD37C0", VA = "0x1DD37C0", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x6000609")]
		[Address(RVA = "0x1DD3908", Offset = "0x1DD3908", VA = "0x1DD3908", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x600060A")]
		[Address(RVA = "0x1DD3D44", Offset = "0x1DD3D44", VA = "0x1DD3D44", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x600060B")]
		[Address(RVA = "0x1DD3FAC", Offset = "0x1DD3FAC", VA = "0x1DD3FAC", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x600060C")]
		[Address(RVA = "0x1DD414C", Offset = "0x1DD414C", VA = "0x1DD414C")]
		public bool SetChain(Transform[] spine, Transform head, Transform[] eyes, Transform root)
		{
			return default(bool);
		}

		[Token(Token = "0x600060D")]
		[Address(RVA = "0x1DD43F8", Offset = "0x1DD43F8", VA = "0x1DD43F8", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x600060E")]
		[Address(RVA = "0x1DD4888", Offset = "0x1DD4888", VA = "0x1DD4888", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000611")]
		[Address(RVA = "0x1DD498C", Offset = "0x1DD498C", VA = "0x1DD498C")]
		protected void SolveSpine()
		{
		}

		[Token(Token = "0x6000614")]
		[Address(RVA = "0x1DD4BB8", Offset = "0x1DD4BB8", VA = "0x1DD4BB8")]
		protected void SolveHead()
		{
		}

		[Token(Token = "0x6000617")]
		[Address(RVA = "0x1DD4E14", Offset = "0x1DD4E14", VA = "0x1DD4E14")]
		protected void SolveEyes()
		{
		}

		[Token(Token = "0x6000618")]
		[Address(RVA = "0x1DD5340", Offset = "0x1DD5340", VA = "0x1DD5340")]
		protected Vector3[] GetForwards(ref Vector3[] forwards, Vector3 baseForward, Vector3 targetForward, int bones, float clamp)
		{
			return null;
		}

		[Token(Token = "0x6000619")]
		[Address(RVA = "0x1DD4214", Offset = "0x1DD4214", VA = "0x1DD4214")]
		protected void SetBones(Transform[] array, ref LookAtBone[] bones)
		{
		}

		[Token(Token = "0x600061A")]
		[Address(RVA = "0x1DD57E0", Offset = "0x1DD57E0", VA = "0x1DD57E0")]
		public IKSolverLookAt()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000C6")]
	public class IKSolverTrigonometric : IKSolver
	{
		[Serializable]
		[Token(Token = "0x20000C7")]
		public class TrigonometricBone : Bone
		{
			[Token(Token = "0x4000546")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			private Quaternion targetToLocalSpace;

			[Token(Token = "0x4000547")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			private Vector3 defaultLocalBendNormal;

			[Token(Token = "0x6000635")]
			[Address(RVA = "0x1DD68AC", Offset = "0x1DD68AC", VA = "0x1DD68AC")]
			public void Initiate(Vector3 childPosition, Vector3 bendNormal)
			{
			}

			[Token(Token = "0x6000636")]
			[Address(RVA = "0x1DD7464", Offset = "0x1DD7464", VA = "0x1DD7464")]
			public Quaternion GetRotation(Vector3 direction, Vector3 bendNormal)
			{
				return default(Quaternion);
			}

			[Token(Token = "0x6000637")]
			[Address(RVA = "0x1DD1E00", Offset = "0x1DD1E00", VA = "0x1DD1E00")]
			public Vector3 GetBendNormalFromCurrentRotation()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6000638")]
			[Address(RVA = "0x1DD752C", Offset = "0x1DD752C", VA = "0x1DD752C")]
			public TrigonometricBone()
			{
			}
		}

		[Token(Token = "0x400053D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform target;

		[Token(Token = "0x400053E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE24C34", Offset = "0xE24C34")]
		public float IKRotationWeight;

		[Token(Token = "0x400053F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Quaternion IKRotation;

		[Token(Token = "0x4000540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public Vector3 bendNormal;

		[Token(Token = "0x4000541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public TrigonometricBone bone1;

		[Token(Token = "0x4000542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public TrigonometricBone bone2;

		[Token(Token = "0x4000543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public TrigonometricBone bone3;

		[Token(Token = "0x4000544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected Vector3 weightIKPosition;

		[Token(Token = "0x4000545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		protected bool directHierarchy;

		[Token(Token = "0x6000620")]
		[Address(RVA = "0x1DD5A20", Offset = "0x1DD5A20", VA = "0x1DD5A20")]
		public void SetBendGoalPosition(Vector3 goalPosition, float weight)
		{
		}

		[Token(Token = "0x6000621")]
		[Address(RVA = "0x1DD5C10", Offset = "0x1DD5C10", VA = "0x1DD5C10")]
		public void SetBendPlaneToCurrent()
		{
		}

		[Token(Token = "0x6000622")]
		[Address(RVA = "0x1DD5DC4", Offset = "0x1DD5DC4", VA = "0x1DD5DC4")]
		public void SetIKRotation(Quaternion rotation)
		{
		}

		[Token(Token = "0x6000623")]
		[Address(RVA = "0x1DD5DD0", Offset = "0x1DD5DD0", VA = "0x1DD5DD0")]
		public void SetIKRotationWeight(float weight)
		{
		}

		[Token(Token = "0x6000624")]
		[Address(RVA = "0x1DD5E54", Offset = "0x1DD5E54", VA = "0x1DD5E54")]
		public Quaternion GetIKRotation()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000625")]
		[Address(RVA = "0x1DD5E60", Offset = "0x1DD5E60", VA = "0x1DD5E60")]
		public float GetIKRotationWeight()
		{
			return default(float);
		}

		[Token(Token = "0x6000626")]
		[Address(RVA = "0x1DD5E68", Offset = "0x1DD5E68", VA = "0x1DD5E68", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x6000627")]
		[Address(RVA = "0x1DD5F90", Offset = "0x1DD5F90", VA = "0x1DD5F90", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6000628")]
		[Address(RVA = "0x1DD60B0", Offset = "0x1DD60B0", VA = "0x1DD60B0", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000629")]
		[Address(RVA = "0x1DD60FC", Offset = "0x1DD60FC", VA = "0x1DD60FC", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x600062A")]
		[Address(RVA = "0x1DD615C", Offset = "0x1DD615C", VA = "0x1DD615C", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x600062B")]
		[Address(RVA = "0x1DD6568", Offset = "0x1DD6568", VA = "0x1DD6568")]
		public bool SetChain(Transform bone1, Transform bone2, Transform bone3, Transform root)
		{
			return default(bool);
		}

		[Token(Token = "0x600062C")]
		[Address(RVA = "0x1DD65E8", Offset = "0x1DD65E8", VA = "0x1DD65E8", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x600062D")]
		[Address(RVA = "0x1DD67A4", Offset = "0x1DD67A4", VA = "0x1DD67A4")]
		private bool IsDirectHierarchy()
		{
			return default(bool);
		}

		[Token(Token = "0x600062E")]
		[Address(RVA = "0x1DD6720", Offset = "0x1DD6720", VA = "0x1DD6720")]
		private void InitiateBones()
		{
		}

		[Token(Token = "0x600062F")]
		[Address(RVA = "0x1DD6A4C", Offset = "0x1DD6A4C", VA = "0x1DD6A4C", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000630")]
		[Address(RVA = "0x1DD7520", Offset = "0x1DD7520", VA = "0x1DD7520", Slot = "12")]
		protected virtual void OnInitiateVirtual()
		{
		}

		[Token(Token = "0x6000631")]
		[Address(RVA = "0x1DD7524", Offset = "0x1DD7524", VA = "0x1DD7524", Slot = "13")]
		protected virtual void OnUpdateVirtual()
		{
		}

		[Token(Token = "0x6000632")]
		[Address(RVA = "0x1DD7528", Offset = "0x1DD7528", VA = "0x1DD7528", Slot = "14")]
		protected virtual void OnPostSolveVirtual()
		{
		}

		[Token(Token = "0x6000633")]
		[Address(RVA = "0x1DD7158", Offset = "0x1DD7158", VA = "0x1DD7158")]
		protected Vector3 GetBendDirection(Vector3 IKPosition, Vector3 bendNormal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000634")]
		[Address(RVA = "0x1DD32EC", Offset = "0x1DD32EC", VA = "0x1DD32EC")]
		public IKSolverTrigonometric()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000C8")]
	public class IKSolverVR : IKSolver
	{
		[Serializable]
		[Token(Token = "0x20000C9")]
		public class Arm : BodyPart
		{
			[Serializable]
			[Token(Token = "0x20000CA")]
			public enum ShoulderRotationMode
			{
				[Token(Token = "0x400058B")]
				YawPitch,
				[Token(Token = "0x400058C")]
				FromTo
			}

			[Token(Token = "0x400056D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE24E70", Offset = "0xE24E70")]
			public Transform target;

			[Token(Token = "0x400056E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE24EA8", Offset = "0xE24EA8")]
			public Transform bendGoal;

			[Token(Token = "0x400056F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE24EE0", Offset = "0xE24EE0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE24EE0", Offset = "0xE24EE0")]
			public float positionWeight;

			[Token(Token = "0x4000570")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE24F34", Offset = "0xE24F34")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE24F34", Offset = "0xE24F34")]
			public float rotationWeight;

			[Token(Token = "0x4000571")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE24F88", Offset = "0xE24F88")]
			public ShoulderRotationMode shoulderRotationMode;

			[Token(Token = "0x4000572")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE24FC0", Offset = "0xE24FC0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE24FC0", Offset = "0xE24FC0")]
			public float shoulderRotationWeight;

			[Token(Token = "0x4000573")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE25014", Offset = "0xE25014")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE25014", Offset = "0xE25014")]
			public float shoulderTwistWeight;

			[Token(Token = "0x4000574")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE25068", Offset = "0xE25068")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE25068", Offset = "0xE25068")]
			public float bendGoalWeight;

			[Token(Token = "0x4000575")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE250BC", Offset = "0xE250BC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE250BC", Offset = "0xE250BC")]
			public float swivelOffset;

			[Token(Token = "0x4000576")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE25118", Offset = "0xE25118")]
			public Vector3 wristToPalmAxis;

			[Token(Token = "0x4000577")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE25150", Offset = "0xE25150")]
			public Vector3 palmToThumbAxis;

			[Token(Token = "0x4000578")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE25188", Offset = "0xE25188")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE25188", Offset = "0xE25188")]
			public float armLengthMlp;

			[Token(Token = "0x4000579")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE251E0", Offset = "0xE251E0")]
			public AnimationCurve stretchCurve;

			[NonSerialized]
			[Token(Token = "0x400057A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			[HideInInspector]
			public Vector3 IKPosition;

			[NonSerialized]
			[Token(Token = "0x400057B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
			[HideInInspector]
			public Quaternion IKRotation;

			[NonSerialized]
			[Token(Token = "0x400057C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
			[HideInInspector]
			public Vector3 bendDirection;

			[NonSerialized]
			[Token(Token = "0x400057D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			[HideInInspector]
			public Vector3 handPositionOffset;

			[Token(Token = "0x400057E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE25258", Offset = "0xE25258")]
			private Vector3 <position>k__BackingField;

			[Token(Token = "0x400057F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE25268", Offset = "0xE25268")]
			private Quaternion <rotation>k__BackingField;

			[Token(Token = "0x4000580")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			private bool hasShoulder;

			[Token(Token = "0x4000581")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
			private Vector3 chestForwardAxis;

			[Token(Token = "0x4000582")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			private Vector3 chestUpAxis;

			[Token(Token = "0x4000583")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
			private Quaternion chestRotation;

			[Token(Token = "0x4000584")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
			private Vector3 chestForward;

			[Token(Token = "0x4000585")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
			private Vector3 chestUp;

			[Token(Token = "0x4000586")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
			private Quaternion forearmRelToUpperArm;

			[Token(Token = "0x4000587")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
			private Vector3 upperArmBendAxis;

			[Token(Token = "0x4000588")]
			private const float yawOffsetAngle = 45f;

			[Token(Token = "0x4000589")]
			private const float pitchOffsetAngle = -30f;

			[Token(Token = "0x170000C6")]
			public Vector3 position
			{
				[Token(Token = "0x6000652")]
				[Address(RVA = "0x1DDF9F0", Offset = "0x1DDF9F0", VA = "0x1DDF9F0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2D5BC", Offset = "0xE2D5BC")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6000653")]
				[Address(RVA = "0x1DDF9FC", Offset = "0x1DDF9FC", VA = "0x1DDF9FC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2D5CC", Offset = "0xE2D5CC")]
				private set
				{
				}
			}

			[Token(Token = "0x170000C7")]
			public Quaternion rotation
			{
				[Token(Token = "0x6000654")]
				[Address(RVA = "0x1DDFA08", Offset = "0x1DDFA08", VA = "0x1DDFA08")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2D5DC", Offset = "0xE2D5DC")]
				get
				{
					return default(Quaternion);
				}
				[Token(Token = "0x6000655")]
				[Address(RVA = "0x1DDFA14", Offset = "0x1DDFA14", VA = "0x1DDFA14")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2D5EC", Offset = "0xE2D5EC")]
				private set
				{
				}
			}

			[Token(Token = "0x170000C8")]
			private VirtualBone shoulder
			{
				[Token(Token = "0x6000656")]
				[Address(RVA = "0x1DDFA20", Offset = "0x1DDFA20", VA = "0x1DDFA20")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000C9")]
			private VirtualBone upperArm
			{
				[Token(Token = "0x6000657")]
				[Address(RVA = "0x1DDFA54", Offset = "0x1DDFA54", VA = "0x1DDFA54")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000CA")]
			private VirtualBone forearm
			{
				[Token(Token = "0x6000658")]
				[Address(RVA = "0x1DDFA94", Offset = "0x1DDFA94", VA = "0x1DDFA94")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000CB")]
			private VirtualBone hand
			{
				[Token(Token = "0x6000659")]
				[Address(RVA = "0x1DDFAE0", Offset = "0x1DDFAE0", VA = "0x1DDFAE0")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600065A")]
			[Address(RVA = "0x1DDFB2C", Offset = "0x1DDFB2C", VA = "0x1DDFB2C", Slot = "4")]
			protected override void OnRead(Vector3[] positions, Quaternion[] rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs, int rootIndex, int index)
			{
			}

			[Token(Token = "0x600065B")]
			[Address(RVA = "0x1DE04FC", Offset = "0x1DE04FC", VA = "0x1DE04FC", Slot = "5")]
			public override void PreSolve()
			{
			}

			[Token(Token = "0x600065C")]
			[Address(RVA = "0x1DE06F0", Offset = "0x1DE06F0", VA = "0x1DE06F0", Slot = "7")]
			public override void ApplyOffsets(float scale)
			{
			}

			[Token(Token = "0x600065D")]
			[Address(RVA = "0x1DE079C", Offset = "0x1DE079C", VA = "0x1DE079C")]
			private void Stretching()
			{
			}

			[Token(Token = "0x600065E")]
			[Address(RVA = "0x1DDD81C", Offset = "0x1DDD81C", VA = "0x1DDD81C")]
			public void Solve(bool isLeft)
			{
			}

			[Token(Token = "0x600065F")]
			[Address(RVA = "0x1DE13E8", Offset = "0x1DE13E8", VA = "0x1DE13E8", Slot = "8")]
			public override void ResetOffsets()
			{
			}

			[Token(Token = "0x6000660")]
			[Address(RVA = "0x1DE1458", Offset = "0x1DE1458", VA = "0x1DE1458", Slot = "6")]
			public override void Write(ref Vector3[] solvedPositions, ref Quaternion[] solvedRotations)
			{
			}

			[Token(Token = "0x6000661")]
			[Address(RVA = "0x1DE0BB4", Offset = "0x1DE0BB4", VA = "0x1DE0BB4")]
			private float DamperValue(float value, float min, float max, float weight = 1f)
			{
				return default(float);
			}

			[Token(Token = "0x6000662")]
			[Address(RVA = "0x1DE0C8C", Offset = "0x1DE0C8C", VA = "0x1DE0C8C")]
			private Vector3 GetBendNormal(Vector3 dir)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6000663")]
			[Address(RVA = "0x1DDF7A8", Offset = "0x1DDF7A8", VA = "0x1DDF7A8")]
			public Arm()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20000CB")]
		public abstract class BodyPart
		{
			[Token(Token = "0x400058D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE25278", Offset = "0xE25278")]
			private float <sqrMag>k__BackingField;

			[Token(Token = "0x400058E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE25288", Offset = "0xE25288")]
			private float <mag>k__BackingField;

			[Token(Token = "0x400058F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[HideInInspector]
			public VirtualBone[] bones;

			[Token(Token = "0x4000590")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			protected bool initiated;

			[Token(Token = "0x4000591")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			protected Vector3 rootPosition;

			[Token(Token = "0x4000592")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			protected Quaternion rootRotation;

			[Token(Token = "0x4000593")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			protected int index;

			[Token(Token = "0x4000594")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			protected int LOD;

			[Token(Token = "0x170000CC")]
			private float sqrMag
			{
				[Token(Token = "0x6000669")]
				[Address(RVA = "0x1DE171C", Offset = "0x1DE171C", VA = "0x1DE171C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2D5FC", Offset = "0xE2D5FC")]
				set
				{
				}
			}

			[Token(Token = "0x170000CD")]
			public float mag
			{
				[Token(Token = "0x600066A")]
				[Address(RVA = "0x1DE1724", Offset = "0x1DE1724", VA = "0x1DE1724")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2D60C", Offset = "0xE2D60C")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x600066B")]
				[Address(RVA = "0x1DE172C", Offset = "0x1DE172C", VA = "0x1DE172C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2D61C", Offset = "0xE2D61C")]
				private set
				{
				}
			}

			[Token(Token = "0x6000664")]
			protected abstract void OnRead(Vector3[] positions, Quaternion[] rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs, int rootIndex, int index);

			[Token(Token = "0x6000665")]
			public abstract void PreSolve();

			[Token(Token = "0x6000666")]
			public abstract void Write(ref Vector3[] solvedPositions, ref Quaternion[] solvedRotations);

			[Token(Token = "0x6000667")]
			public abstract void ApplyOffsets(float scale);

			[Token(Token = "0x6000668")]
			public abstract void ResetOffsets();

			[Token(Token = "0x600066C")]
			[Address(RVA = "0x1DE1734", Offset = "0x1DE1734", VA = "0x1DE1734")]
			public void SetLOD(int LOD)
			{
			}

			[Token(Token = "0x600066D")]
			[Address(RVA = "0x1DD19E0", Offset = "0x1DD19E0", VA = "0x1DD19E0")]
			public void Read(Vector3[] positions, Quaternion[] rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs, int rootIndex, int index)
			{
			}

			[Token(Token = "0x600066E")]
			[Address(RVA = "0x1DE173C", Offset = "0x1DE173C", VA = "0x1DE173C")]
			public void MovePosition(Vector3 position)
			{
			}

			[Token(Token = "0x600066F")]
			[Address(RVA = "0x1DDD5D8", Offset = "0x1DDD5D8", VA = "0x1DDD5D8")]
			public void TranslateRoot(Vector3 newRootPos, Quaternion newRootRot)
			{
			}

			[Token(Token = "0x6000670")]
			[Address(RVA = "0x1DE1244", Offset = "0x1DE1244", VA = "0x1DE1244")]
			public void RotateTo(VirtualBone bone, Quaternion rotation, float weight = 1f)
			{
			}

			[Token(Token = "0x6000671")]
			[Address(RVA = "0x1DE1678", Offset = "0x1DE1678", VA = "0x1DE1678")]
			protected BodyPart()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20000CC")]
		public class Footstep
		{
			[Token(Token = "0x4000595")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float stepSpeed;

			[Token(Token = "0x4000596")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 characterSpaceOffset;

			[Token(Token = "0x4000597")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 position;

			[Token(Token = "0x4000598")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Quaternion rotation;

			[Token(Token = "0x4000599")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public Quaternion stepToRootRot;

			[Token(Token = "0x400059A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public bool isSupportLeg;

			[Token(Token = "0x400059B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
			public bool relaxFlag;

			[Token(Token = "0x400059C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE252A8", Offset = "0xE252A8")]
			private float <stepProgress>k__BackingField;

			[Token(Token = "0x400059D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public Vector3 stepFrom;

			[Token(Token = "0x400059E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Vector3 stepTo;

			[Token(Token = "0x400059F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			public Quaternion stepFromRot;

			[Token(Token = "0x40005A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			public Quaternion stepToRot;

			[Token(Token = "0x40005A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			private Quaternion footRelativeToRoot;

			[Token(Token = "0x40005A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
			private float supportLegW;

			[Token(Token = "0x40005A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private float supportLegWV;

			[Token(Token = "0x170000CE")]
			public bool isStepping
			{
				[Token(Token = "0x6000672")]
				[Address(RVA = "0x1DE18A8", Offset = "0x1DE18A8", VA = "0x1DE18A8")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170000CF")]
			public float stepProgress
			{
				[Token(Token = "0x6000673")]
				[Address(RVA = "0x1DE18BC", Offset = "0x1DE18BC", VA = "0x1DE18BC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2D62C", Offset = "0xE2D62C")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6000674")]
				[Address(RVA = "0x1DE18C4", Offset = "0x1DE18C4", VA = "0x1DE18C4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2D63C", Offset = "0xE2D63C")]
				private set
				{
				}
			}

			[Token(Token = "0x6000675")]
			[Address(RVA = "0x1DE18CC", Offset = "0x1DE18CC", VA = "0x1DE18CC")]
			public Footstep(Quaternion rootRotation, Vector3 footPosition, Quaternion footRotation, Vector3 characterSpaceOffset)
			{
			}

			[Token(Token = "0x6000676")]
			[Address(RVA = "0x1DE1A5C", Offset = "0x1DE1A5C", VA = "0x1DE1A5C")]
			public void Reset(Quaternion rootRotation, Vector3 footPosition, Quaternion footRotation)
			{
			}

			[Token(Token = "0x6000677")]
			[Address(RVA = "0x1DE1AA4", Offset = "0x1DE1AA4", VA = "0x1DE1AA4")]
			public void StepTo(Vector3 p, Quaternion rootRotation, float stepThreshold)
			{
			}

			[Token(Token = "0x6000678")]
			[Address(RVA = "0x1DE1C74", Offset = "0x1DE1C74", VA = "0x1DE1C74")]
			public void UpdateStepping(Vector3 p, Quaternion rootRotation, float speed)
			{
			}

			[Token(Token = "0x6000679")]
			[Address(RVA = "0x1DE1E4C", Offset = "0x1DE1E4C", VA = "0x1DE1E4C")]
			public void UpdateStanding(Quaternion rootRotation, float minAngle, float speed)
			{
			}

			[Token(Token = "0x600067A")]
			[Address(RVA = "0x1DE2038", Offset = "0x1DE2038", VA = "0x1DE2038")]
			public void Update(InterpolationMode interpolation, UnityEvent onStep)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20000CD")]
		public class Leg : BodyPart
		{
			[Token(Token = "0x40005A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE252B8", Offset = "0xE252B8")]
			public Transform target;

			[Token(Token = "0x40005A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE252F0", Offset = "0xE252F0")]
			public Transform bendGoal;

			[Token(Token = "0x40005A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE25328", Offset = "0xE25328")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE25328", Offset = "0xE25328")]
			public float positionWeight;

			[Token(Token = "0x40005A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE2537C", Offset = "0xE2537C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2537C", Offset = "0xE2537C")]
			public float rotationWeight;

			[Token(Token = "0x40005A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE253D0", Offset = "0xE253D0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE253D0", Offset = "0xE253D0")]
			public float bendGoalWeight;

			[Token(Token = "0x40005A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE25424", Offset = "0xE25424")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE25424", Offset = "0xE25424")]
			public float swivelOffset;

			[Token(Token = "0x40005AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE25480", Offset = "0xE25480")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE25480", Offset = "0xE25480")]
			public float bendToTargetWeight;

			[Token(Token = "0x40005AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE254D4", Offset = "0xE254D4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE254D4", Offset = "0xE254D4")]
			public float legLengthMlp;

			[Token(Token = "0x40005AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2552C", Offset = "0xE2552C")]
			public AnimationCurve stretchCurve;

			[NonSerialized]
			[Token(Token = "0x40005AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			[HideInInspector]
			public Vector3 IKPosition;

			[NonSerialized]
			[Token(Token = "0x40005AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			[HideInInspector]
			public Quaternion IKRotation;

			[NonSerialized]
			[Token(Token = "0x40005AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			[HideInInspector]
			public Vector3 footPositionOffset;

			[NonSerialized]
			[Token(Token = "0x40005B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			[HideInInspector]
			public Vector3 heelPositionOffset;

			[NonSerialized]
			[Token(Token = "0x40005B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
			[HideInInspector]
			public Quaternion footRotationOffset;

			[NonSerialized]
			[Token(Token = "0x40005B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			[HideInInspector]
			public float currentMag;

			[Token(Token = "0x40005B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			[HideInInspector]
			public bool useAnimatedBendNormal;

			[Token(Token = "0x40005B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE255D4", Offset = "0xE255D4")]
			private Vector3 <position>k__BackingField;

			[Token(Token = "0x40005B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE255E4", Offset = "0xE255E4")]
			private Quaternion <rotation>k__BackingField;

			[Token(Token = "0x40005B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE255F4", Offset = "0xE255F4")]
			private bool <hasToes>k__BackingField;

			[Token(Token = "0x40005B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE25604", Offset = "0xE25604")]
			private Vector3 <thighRelativeToPelvis>k__BackingField;

			[Token(Token = "0x40005B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
			private Vector3 footPosition;

			[Token(Token = "0x40005B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
			private Quaternion footRotation;

			[Token(Token = "0x40005BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
			private Vector3 bendNormal;

			[Token(Token = "0x40005BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
			private Quaternion calfRelToThigh;

			[Token(Token = "0x40005BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
			private Quaternion thighRelToFoot;

			[Token(Token = "0x40005BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
			private Vector3 bendNormalRelToPelvis;

			[Token(Token = "0x40005BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
			private Vector3 bendNormalRelToTarget;

			[Token(Token = "0x170000D0")]
			public Vector3 position
			{
				[Token(Token = "0x600067B")]
				[Address(RVA = "0x1DE2254", Offset = "0x1DE2254", VA = "0x1DE2254")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2D64C", Offset = "0xE2D64C")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x600067C")]
				[Address(RVA = "0x1DE2260", Offset = "0x1DE2260", VA = "0x1DE2260")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2D65C", Offset = "0xE2D65C")]
				private set
				{
				}
			}

			[Token(Token = "0x170000D1")]
			public Quaternion rotation
			{
				[Token(Token = "0x600067D")]
				[Address(RVA = "0x1DE226C", Offset = "0x1DE226C", VA = "0x1DE226C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2D66C", Offset = "0xE2D66C")]
				get
				{
					return default(Quaternion);
				}
				[Token(Token = "0x600067E")]
				[Address(RVA = "0x1DE2278", Offset = "0x1DE2278", VA = "0x1DE2278")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2D67C", Offset = "0xE2D67C")]
				private set
				{
				}
			}

			[Token(Token = "0x170000D2")]
			public bool hasToes
			{
				[Token(Token = "0x600067F")]
				[Address(RVA = "0x1DE2284", Offset = "0x1DE2284", VA = "0x1DE2284")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2D68C", Offset = "0xE2D68C")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6000680")]
				[Address(RVA = "0x1DE228C", Offset = "0x1DE228C", VA = "0x1DE228C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2D69C", Offset = "0xE2D69C")]
				private set
				{
				}
			}

			[Token(Token = "0x170000D3")]
			public VirtualBone thigh
			{
				[Token(Token = "0x6000681")]
				[Address(RVA = "0x1DE2298", Offset = "0x1DE2298", VA = "0x1DE2298")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000D4")]
			private VirtualBone calf
			{
				[Token(Token = "0x6000682")]
				[Address(RVA = "0x1DE22CC", Offset = "0x1DE22CC", VA = "0x1DE22CC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000D5")]
			private VirtualBone foot
			{
				[Token(Token = "0x6000683")]
				[Address(RVA = "0x1DE2304", Offset = "0x1DE2304", VA = "0x1DE2304")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000D6")]
			private VirtualBone toes
			{
				[Token(Token = "0x6000684")]
				[Address(RVA = "0x1DE233C", Offset = "0x1DE233C", VA = "0x1DE233C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000D7")]
			public VirtualBone lastBone
			{
				[Token(Token = "0x6000685")]
				[Address(RVA = "0x1DDD42C", Offset = "0x1DDD42C", VA = "0x1DDD42C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000D8")]
			public Vector3 thighRelativeToPelvis
			{
				[Token(Token = "0x6000686")]
				[Address(RVA = "0x1DE2374", Offset = "0x1DE2374", VA = "0x1DE2374")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2D6AC", Offset = "0xE2D6AC")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6000687")]
				[Address(RVA = "0x1DE2380", Offset = "0x1DE2380", VA = "0x1DE2380")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2D6BC", Offset = "0xE2D6BC")]
				private set
				{
				}
			}

			[Token(Token = "0x6000688")]
			[Address(RVA = "0x1DE238C", Offset = "0x1DE238C", VA = "0x1DE238C", Slot = "4")]
			protected override void OnRead(Vector3[] positions, Quaternion[] rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs, int rootIndex, int index)
			{
			}

			[Token(Token = "0x6000689")]
			[Address(RVA = "0x1DE2A14", Offset = "0x1DE2A14", VA = "0x1DE2A14", Slot = "5")]
			public override void PreSolve()
			{
			}

			[Token(Token = "0x600068A")]
			[Address(RVA = "0x1DE3314", Offset = "0x1DE3314", VA = "0x1DE3314", Slot = "7")]
			public override void ApplyOffsets(float scale)
			{
			}

			[Token(Token = "0x600068B")]
			[Address(RVA = "0x1DE3210", Offset = "0x1DE3210", VA = "0x1DE3210")]
			private void ApplyPositionOffset(Vector3 offset, float weight)
			{
			}

			[Token(Token = "0x600068C")]
			[Address(RVA = "0x1DE2FD8", Offset = "0x1DE2FD8", VA = "0x1DE2FD8")]
			private void ApplyRotationOffset(Quaternion offset, float weight)
			{
			}

			[Token(Token = "0x600068D")]
			[Address(RVA = "0x1DD17A8", Offset = "0x1DD17A8", VA = "0x1DD17A8")]
			public void Solve(bool stretch)
			{
			}

			[Token(Token = "0x600068E")]
			[Address(RVA = "0x1DE3DF8", Offset = "0x1DE3DF8", VA = "0x1DE3DF8")]
			private void FixTwistRotations()
			{
			}

			[Token(Token = "0x600068F")]
			[Address(RVA = "0x1DE38CC", Offset = "0x1DE38CC", VA = "0x1DE38CC")]
			private void Stretching()
			{
			}

			[Token(Token = "0x6000690")]
			[Address(RVA = "0x1DE4260", Offset = "0x1DE4260", VA = "0x1DE4260", Slot = "6")]
			public override void Write(ref Vector3[] solvedPositions, ref Quaternion[] solvedRotations)
			{
			}

			[Token(Token = "0x6000691")]
			[Address(RVA = "0x1DE447C", Offset = "0x1DE447C", VA = "0x1DE447C", Slot = "8")]
			public override void ResetOffsets()
			{
			}

			[Token(Token = "0x6000692")]
			[Address(RVA = "0x1DD1C68", Offset = "0x1DD1C68", VA = "0x1DD1C68")]
			public Leg()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20000CE")]
		public class Locomotion
		{
			[Token(Token = "0x40005BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE25614", Offset = "0xE25614")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE25614", Offset = "0xE25614")]
			public float weight;

			[Token(Token = "0x40005C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE25668", Offset = "0xE25668")]
			public float footDistance;

			[Token(Token = "0x40005C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE256A0", Offset = "0xE256A0")]
			public float stepThreshold;

			[Token(Token = "0x40005C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE256D8", Offset = "0xE256D8")]
			public float angleThreshold;

			[Token(Token = "0x40005C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE25710", Offset = "0xE25710")]
			public float comAngleMlp;

			[Token(Token = "0x40005C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE25748", Offset = "0xE25748")]
			public float maxVelocity;

			[Token(Token = "0x40005C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE25780", Offset = "0xE25780")]
			public float velocityFactor;

			[Token(Token = "0x40005C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE257B8", Offset = "0xE257B8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE257B8", Offset = "0xE257B8")]
			public float maxLegStretch;

			[Token(Token = "0x40005C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE25810", Offset = "0xE25810")]
			public float rootSpeed;

			[Token(Token = "0x40005C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE25848", Offset = "0xE25848")]
			public float stepSpeed;

			[Token(Token = "0x40005C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE25880", Offset = "0xE25880")]
			public AnimationCurve stepHeight;

			[Token(Token = "0x40005CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE258B8", Offset = "0xE258B8")]
			public float maxBodyYOffset;

			[Token(Token = "0x40005CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE258F0", Offset = "0xE258F0")]
			public AnimationCurve heelHeight;

			[Token(Token = "0x40005CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE25928", Offset = "0xE25928")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE25928", Offset = "0xE25928")]
			public float relaxLegTwistMinAngle;

			[Token(Token = "0x40005CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE25980", Offset = "0xE25980")]
			public float relaxLegTwistSpeed;

			[Token(Token = "0x40005CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE259B8", Offset = "0xE259B8")]
			public InterpolationMode stepInterpolation;

			[Token(Token = "0x40005CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE259F0", Offset = "0xE259F0")]
			public Vector3 offset;

			[Token(Token = "0x40005D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[HideInInspector]
			public bool blockingEnabled;

			[Token(Token = "0x40005D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			[HideInInspector]
			public LayerMask blockingLayers;

			[Token(Token = "0x40005D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[HideInInspector]
			public float raycastRadius;

			[Token(Token = "0x40005D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			[HideInInspector]
			public float raycastHeight;

			[Token(Token = "0x40005D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE25A68", Offset = "0xE25A68")]
			public UnityEvent onLeftFootstep;

			[Token(Token = "0x40005D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE25AA0", Offset = "0xE25AA0")]
			public UnityEvent onRightFootstep;

			[Token(Token = "0x40005D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE25AD8", Offset = "0xE25AD8")]
			private Vector3 <centerOfMass>k__BackingField;

			[Token(Token = "0x40005D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			private Footstep[] footsteps;

			[Token(Token = "0x40005D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private Vector3 lastComPosition;

			[Token(Token = "0x40005D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
			private Vector3 comVelocity;

			[Token(Token = "0x40005DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			private int leftFootIndex;

			[Token(Token = "0x40005DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			private int rightFootIndex;

			[Token(Token = "0x170000D9")]
			public Vector3 centerOfMass
			{
				[Token(Token = "0x6000693")]
				[Address(RVA = "0x1DE452C", Offset = "0x1DE452C", VA = "0x1DE452C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2D6CC", Offset = "0xE2D6CC")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6000694")]
				[Address(RVA = "0x1DE4538", Offset = "0x1DE4538", VA = "0x1DE4538")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2D6DC", Offset = "0xE2D6DC")]
				private set
				{
				}
			}

			[Token(Token = "0x6000695")]
			[Address(RVA = "0x1DDB548", Offset = "0x1DDB548", VA = "0x1DDB548")]
			public void Initiate(Vector3[] positions, Quaternion[] rotations, bool hasToes, float scale)
			{
			}

			[Token(Token = "0x6000696")]
			[Address(RVA = "0x1DD9B8C", Offset = "0x1DD9B8C", VA = "0x1DD9B8C")]
			public void Reset(Vector3[] positions, Quaternion[] rotations)
			{
			}

			[Token(Token = "0x6000697")]
			[Address(RVA = "0x1DD8540", Offset = "0x1DD8540", VA = "0x1DD8540")]
			public void AddDeltaRotation(Quaternion delta, Vector3 pivot)
			{
			}

			[Token(Token = "0x6000698")]
			[Address(RVA = "0x1DD8390", Offset = "0x1DD8390", VA = "0x1DD8390")]
			public void AddDeltaPosition(Vector3 delta)
			{
			}

			[Token(Token = "0x6000699")]
			[Address(RVA = "0x1DDBE98", Offset = "0x1DDBE98", VA = "0x1DDBE98")]
			public void Solve(VirtualBone rootBone, Spine spine, Leg leftLeg, Leg rightLeg, Arm leftArm, Arm rightArm, int supportLegIndex, out Vector3 leftFootPosition, out Vector3 rightFootPosition, out Quaternion leftFootRotation, out Quaternion rightFootRotation, out float leftFootOffset, out float rightFootOffset, out float leftHeelOffset, out float rightHeelOffset, float scale)
			{
			}

			[Token(Token = "0x600069A")]
			[Address(RVA = "0x1DE4584", Offset = "0x1DE4584", VA = "0x1DE4584")]
			private bool StepBlocked(Vector3 fromPosition, Vector3 toPosition, Vector3 rootPosition)
			{
				return default(bool);
			}

			[Token(Token = "0x600069B")]
			[Address(RVA = "0x1DE4728", Offset = "0x1DE4728", VA = "0x1DE4728")]
			private bool CanStep()
			{
				return default(bool);
			}

			[Token(Token = "0x600069C")]
			[Address(RVA = "0x1DE47AC", Offset = "0x1DE47AC", VA = "0x1DE47AC")]
			private static bool GetLineSphereCollision(Vector3 lineStart, Vector3 lineEnd, Vector3 sphereCenter, float sphereRadius)
			{
				return default(bool);
			}

			[Token(Token = "0x600069D")]
			[Address(RVA = "0x1DDF8DC", Offset = "0x1DDF8DC", VA = "0x1DDF8DC")]
			public Locomotion()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20000CF")]
		public class Spine : BodyPart
		{
			[Token(Token = "0x40005DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE25AE8", Offset = "0xE25AE8")]
			public Transform headTarget;

			[Token(Token = "0x40005DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE25B20", Offset = "0xE25B20")]
			public Transform pelvisTarget;

			[Token(Token = "0x40005DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE25B58", Offset = "0xE25B58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE25B58", Offset = "0xE25B58")]
			public float positionWeight;

			[Token(Token = "0x40005DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE25BAC", Offset = "0xE25BAC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE25BAC", Offset = "0xE25BAC")]
			public float rotationWeight;

			[Token(Token = "0x40005E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE25C00", Offset = "0xE25C00")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE25C00", Offset = "0xE25C00")]
			public float pelvisPositionWeight;

			[Token(Token = "0x40005E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE25C54", Offset = "0xE25C54")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE25C54", Offset = "0xE25C54")]
			public float pelvisRotationWeight;

			[Token(Token = "0x40005E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE25CA8", Offset = "0xE25CA8")]
			public Transform chestGoal;

			[Token(Token = "0x40005E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE25CE0", Offset = "0xE25CE0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE25CE0", Offset = "0xE25CE0")]
			public float chestGoalWeight;

			[Token(Token = "0x40005E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE25D34", Offset = "0xE25D34")]
			public float minHeadHeight;

			[Token(Token = "0x40005E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE25D6C", Offset = "0xE25D6C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE25D6C", Offset = "0xE25D6C")]
			public float bodyPosStiffness;

			[Token(Token = "0x40005E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE25DC0", Offset = "0xE25DC0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE25DC0", Offset = "0xE25DC0")]
			public float bodyRotStiffness;

			[Token(Token = "0x40005E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE25E14", Offset = "0xE25E14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE25E14", Offset = "0xE25E14")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE25E14", Offset = "0xE25E14")]
			public float neckStiffness;

			[Token(Token = "0x40005E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE25E8C", Offset = "0xE25E8C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE25E8C", Offset = "0xE25E8C")]
			public float rotateChestByHands;

			[Token(Token = "0x40005E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE25EE0", Offset = "0xE25EE0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE25EE0", Offset = "0xE25EE0")]
			public float chestClampWeight;

			[Token(Token = "0x40005EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE25F34", Offset = "0xE25F34")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE25F34", Offset = "0xE25F34")]
			public float headClampWeight;

			[Token(Token = "0x40005EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE25F88", Offset = "0xE25F88")]
			public float moveBodyBackWhenCrouching;

			[Token(Token = "0x40005EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE25FC0", Offset = "0xE25FC0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE25FC0", Offset = "0xE25FC0")]
			public float maintainPelvisPosition;

			[Token(Token = "0x40005ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE26014", Offset = "0xE26014")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE26014", Offset = "0xE26014")]
			public float maxRootAngle;

			[Token(Token = "0x40005EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE2606C", Offset = "0xE2606C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2606C", Offset = "0xE2606C")]
			public float rootHeadingOffset;

			[NonSerialized]
			[Token(Token = "0x40005EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			[HideInInspector]
			public Vector3 IKPositionHead;

			[NonSerialized]
			[Token(Token = "0x40005F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
			[HideInInspector]
			public Quaternion IKRotationHead;

			[NonSerialized]
			[Token(Token = "0x40005F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			[HideInInspector]
			public Vector3 IKPositionPelvis;

			[NonSerialized]
			[Token(Token = "0x40005F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			[HideInInspector]
			public Quaternion IKRotationPelvis;

			[NonSerialized]
			[Token(Token = "0x40005F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			[HideInInspector]
			public Vector3 goalPositionChest;

			[NonSerialized]
			[Token(Token = "0x40005F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
			[HideInInspector]
			public Vector3 pelvisPositionOffset;

			[NonSerialized]
			[Token(Token = "0x40005F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
			[HideInInspector]
			public Vector3 chestPositionOffset;

			[NonSerialized]
			[Token(Token = "0x40005F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
			[HideInInspector]
			public Vector3 headPositionOffset;

			[NonSerialized]
			[Token(Token = "0x40005F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
			[HideInInspector]
			public Quaternion pelvisRotationOffset;

			[NonSerialized]
			[Token(Token = "0x40005F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
			[HideInInspector]
			public Quaternion chestRotationOffset;

			[NonSerialized]
			[Token(Token = "0x40005F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
			[HideInInspector]
			public Quaternion headRotationOffset;

			[NonSerialized]
			[Token(Token = "0x40005FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
			[HideInInspector]
			public Vector3 faceDirection;

			[NonSerialized]
			[Token(Token = "0x40005FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
			[HideInInspector]
			public Vector3 locomotionHeadPositionOffset;

			[NonSerialized]
			[Token(Token = "0x40005FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
			[HideInInspector]
			public Vector3 headPosition;

			[Token(Token = "0x40005FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE261A8", Offset = "0xE261A8")]
			private Quaternion <anchorRotation>k__BackingField;

			[Token(Token = "0x40005FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE261B8", Offset = "0xE261B8")]
			private Quaternion <anchorRelativeToHead>k__BackingField;

			[Token(Token = "0x40005FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
			private Quaternion headRotation;

			[Token(Token = "0x4000600")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
			private Quaternion pelvisRotation;

			[Token(Token = "0x4000601")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
			private Quaternion anchorRelativeToPelvis;

			[Token(Token = "0x4000602")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
			private Quaternion pelvisRelativeRotation;

			[Token(Token = "0x4000603")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
			private Quaternion chestRelativeRotation;

			[Token(Token = "0x4000604")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
			private Vector3 headDeltaPosition;

			[Token(Token = "0x4000605")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
			private Quaternion pelvisDeltaRotation;

			[Token(Token = "0x4000606")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
			private Quaternion chestTargetRotation;

			[Token(Token = "0x4000607")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
			private int pelvisIndex;

			[Token(Token = "0x4000608")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
			private int spineIndex;

			[Token(Token = "0x4000609")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
			private int chestIndex;

			[Token(Token = "0x400060A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
			private int neckIndex;

			[Token(Token = "0x400060B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
			private int headIndex;

			[Token(Token = "0x400060C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
			private float length;

			[Token(Token = "0x400060D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
			private bool hasChest;

			[Token(Token = "0x400060E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x211")]
			private bool hasNeck;

			[Token(Token = "0x400060F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x212")]
			private bool hasLegs;

			[Token(Token = "0x4000610")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
			private float headHeight;

			[Token(Token = "0x4000611")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
			private float sizeMlp;

			[Token(Token = "0x4000612")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
			private Vector3 chestForward;

			[Token(Token = "0x170000DA")]
			public VirtualBone pelvis
			{
				[Token(Token = "0x600069E")]
				[Address(RVA = "0x1DD9E00", Offset = "0x1DD9E00", VA = "0x1DD9E00")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000DB")]
			public VirtualBone chest
			{
				[Token(Token = "0x600069F")]
				[Address(RVA = "0x1DDD7C8", Offset = "0x1DDD7C8", VA = "0x1DDD7C8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000DC")]
			public VirtualBone head
			{
				[Token(Token = "0x60006A0")]
				[Address(RVA = "0x1DE4544", Offset = "0x1DE4544", VA = "0x1DE4544")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000DD")]
			public Quaternion anchorRotation
			{
				[Token(Token = "0x60006A1")]
				[Address(RVA = "0x1DE4978", Offset = "0x1DE4978", VA = "0x1DE4978")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2D6EC", Offset = "0xE2D6EC")]
				get
				{
					return default(Quaternion);
				}
				[Token(Token = "0x60006A2")]
				[Address(RVA = "0x1DE498C", Offset = "0x1DE498C", VA = "0x1DE498C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2D6FC", Offset = "0xE2D6FC")]
				private set
				{
				}
			}

			[Token(Token = "0x170000DE")]
			public Quaternion anchorRelativeToHead
			{
				[Token(Token = "0x60006A3")]
				[Address(RVA = "0x1DE49A0", Offset = "0x1DE49A0", VA = "0x1DE49A0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2D70C", Offset = "0xE2D70C")]
				get
				{
					return default(Quaternion);
				}
				[Token(Token = "0x60006A4")]
				[Address(RVA = "0x1DE49B4", Offset = "0x1DE49B4", VA = "0x1DE49B4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2D71C", Offset = "0xE2D71C")]
				private set
				{
				}
			}

			[Token(Token = "0x60006A5")]
			[Address(RVA = "0x1DE49C8", Offset = "0x1DE49C8", VA = "0x1DE49C8", Slot = "4")]
			protected override void OnRead(Vector3[] positions, Quaternion[] rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs, int rootIndex, int index)
			{
			}

			[Token(Token = "0x60006A6")]
			[Address(RVA = "0x1DE5488", Offset = "0x1DE5488", VA = "0x1DE5488", Slot = "5")]
			public override void PreSolve()
			{
			}

			[Token(Token = "0x60006A7")]
			[Address(RVA = "0x1DE5698", Offset = "0x1DE5698", VA = "0x1DE5698", Slot = "7")]
			public override void ApplyOffsets(float scale)
			{
			}

			[Token(Token = "0x60006A8")]
			[Address(RVA = "0x1DE5D20", Offset = "0x1DE5D20", VA = "0x1DE5D20")]
			private void CalculateChestTargetRotation(VirtualBone rootBone, Arm[] arms)
			{
			}

			[Token(Token = "0x60006A9")]
			[Address(RVA = "0x1DDB86C", Offset = "0x1DDB86C", VA = "0x1DDB86C")]
			public void Solve(VirtualBone rootBone, Leg[] legs, Arm[] arms, float scale)
			{
			}

			[Token(Token = "0x60006AA")]
			[Address(RVA = "0x1DE6740", Offset = "0x1DE6740", VA = "0x1DE6740")]
			private void FABRIKPass(Vector3 animatedPelvisPos, Vector3 rootUp, float weight)
			{
			}

			[Token(Token = "0x60006AB")]
			[Address(RVA = "0x1DE6E0C", Offset = "0x1DE6E0C", VA = "0x1DE6E0C")]
			private void SolvePelvis()
			{
			}

			[Token(Token = "0x60006AC")]
			[Address(RVA = "0x1DE7120", Offset = "0x1DE7120", VA = "0x1DE7120", Slot = "6")]
			public override void Write(ref Vector3[] solvedPositions, ref Quaternion[] solvedRotations)
			{
			}

			[Token(Token = "0x60006AD")]
			[Address(RVA = "0x1DE72FC", Offset = "0x1DE72FC", VA = "0x1DE72FC", Slot = "8")]
			public override void ResetOffsets()
			{
			}

			[Token(Token = "0x60006AE")]
			[Address(RVA = "0x1DE5F50", Offset = "0x1DE5F50", VA = "0x1DE5F50")]
			private void AdjustChestByHands(ref Quaternion chestTargetRotation, Arm[] arms)
			{
			}

			[Token(Token = "0x60006AF")]
			[Address(RVA = "0x1DDD46C", Offset = "0x1DDD46C", VA = "0x1DDD46C")]
			public void InverseTranslateToHead(Leg[] legs, bool limited, bool useCurrentLegMag, Vector3 offset, float w)
			{
			}

			[Token(Token = "0x60006B0")]
			[Address(RVA = "0x1DE62E0", Offset = "0x1DE62E0", VA = "0x1DE62E0")]
			private void TranslatePelvis(Leg[] legs, Vector3 deltaPosition, Quaternion deltaRotation, float scale)
			{
			}

			[Token(Token = "0x60006B1")]
			[Address(RVA = "0x1DE73F8", Offset = "0x1DE73F8", VA = "0x1DE73F8")]
			private Vector3 LimitPelvisPosition(Leg[] legs, Vector3 pelvisPosition, bool useCurrentLegMag, int it = 2)
			{
				return default(Vector3);
			}

			[Token(Token = "0x60006B2")]
			[Address(RVA = "0x1DE6BBC", Offset = "0x1DE6BBC", VA = "0x1DE6BBC")]
			private void Bend(VirtualBone[] bones, int firstIndex, int lastIndex, Quaternion targetRotation, float clampWeight, bool uniformWeight, float w)
			{
			}

			[Token(Token = "0x60006B3")]
			[Address(RVA = "0x1DE6904", Offset = "0x1DE6904", VA = "0x1DE6904")]
			private void Bend(VirtualBone[] bones, int firstIndex, int lastIndex, Quaternion targetRotation, Quaternion rotationOffset, float clampWeight, bool uniformWeight, float w)
			{
			}

			[Token(Token = "0x60006B4")]
			[Address(RVA = "0x1DDF5F4", Offset = "0x1DDF5F4", VA = "0x1DDF5F4")]
			public Spine()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20000D0")]
		public enum PositionOffset
		{
			[Token(Token = "0x4000614")]
			Pelvis,
			[Token(Token = "0x4000615")]
			Chest,
			[Token(Token = "0x4000616")]
			Head,
			[Token(Token = "0x4000617")]
			LeftHand,
			[Token(Token = "0x4000618")]
			RightHand,
			[Token(Token = "0x4000619")]
			LeftFoot,
			[Token(Token = "0x400061A")]
			RightFoot,
			[Token(Token = "0x400061B")]
			LeftHeel,
			[Token(Token = "0x400061C")]
			RightHeel
		}

		[Serializable]
		[Token(Token = "0x20000D1")]
		public enum RotationOffset
		{
			[Token(Token = "0x400061E")]
			Pelvis,
			[Token(Token = "0x400061F")]
			Chest,
			[Token(Token = "0x4000620")]
			Head
		}

		[Serializable]
		[Token(Token = "0x20000D2")]
		public class VirtualBone
		{
			[Token(Token = "0x4000621")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 readPosition;

			[Token(Token = "0x4000622")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Quaternion readRotation;

			[Token(Token = "0x4000623")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Vector3 solverPosition;

			[Token(Token = "0x4000624")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Quaternion solverRotation;

			[Token(Token = "0x4000625")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public float length;

			[Token(Token = "0x4000626")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public float sqrMag;

			[Token(Token = "0x4000627")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Vector3 axis;

			[Token(Token = "0x60006B5")]
			[Address(RVA = "0x176BEA0", Offset = "0x176BEA0", VA = "0x176BEA0")]
			public VirtualBone(Vector3 position, Quaternion rotation)
			{
			}

			[Token(Token = "0x60006B6")]
			[Address(RVA = "0x176BF1C", Offset = "0x176BF1C", VA = "0x176BF1C")]
			public void Read(Vector3 position, Quaternion rotation)
			{
			}

			[Token(Token = "0x60006B7")]
			[Address(RVA = "0x176BF3C", Offset = "0x176BF3C", VA = "0x176BF3C")]
			public static void SwingRotation(VirtualBone[] bones, int index, Vector3 swingTarget, float weight = 1f)
			{
			}

			[Token(Token = "0x60006B8")]
			[Address(RVA = "0x176C1CC", Offset = "0x176C1CC", VA = "0x176C1CC")]
			public static float PreSolve(ref VirtualBone[] bones)
			{
				return default(float);
			}

			[Token(Token = "0x60006B9")]
			[Address(RVA = "0x176C4B8", Offset = "0x176C4B8", VA = "0x176C4B8")]
			public static void RotateAroundPoint(VirtualBone[] bones, int index, Vector3 point, Quaternion rotation)
			{
			}

			[Token(Token = "0x60006BA")]
			[Address(RVA = "0x176C6A0", Offset = "0x176C6A0", VA = "0x176C6A0")]
			public static void RotateBy(VirtualBone[] bones, Quaternion rotation)
			{
			}

			[Token(Token = "0x60006BB")]
			[Address(RVA = "0x176C8D4", Offset = "0x176C8D4", VA = "0x176C8D4")]
			public static void SolveTrigonometric(VirtualBone[] bones, int first, int second, int third, Vector3 targetPosition, Vector3 bendNormal, float weight)
			{
			}

			[Token(Token = "0x60006BC")]
			[Address(RVA = "0x176CE80", Offset = "0x176CE80", VA = "0x176CE80")]
			private static Vector3 GetDirectionToBendPoint(Vector3 direction, float directionMag, Vector3 bendDirection, float sqrMag1, float sqrMag2)
			{
				return default(Vector3);
			}

			[Token(Token = "0x60006BD")]
			[Address(RVA = "0x176D098", Offset = "0x176D098", VA = "0x176D098")]
			public static void SolveFABRIK(VirtualBone[] bones, Vector3 startPosition, Vector3 targetPosition, float weight, float minNormalizedTargetDistance, int iterations, float length, Vector3 startOffset)
			{
			}

			[Token(Token = "0x60006BE")]
			[Address(RVA = "0x176D4F8", Offset = "0x176D4F8", VA = "0x176D4F8")]
			private static Vector3 SolveFABRIKJoint(Vector3 pos1, Vector3 pos2, float length)
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x4000548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform[] solverTransforms;

		[Token(Token = "0x4000549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool hasChest;

		[Token(Token = "0x400054A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool hasNeck;

		[Token(Token = "0x400054B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		private bool hasShoulders;

		[Token(Token = "0x400054C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		private bool hasToes;

		[Token(Token = "0x400054D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool hasLegs;

		[Token(Token = "0x400054E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3[] readPositions;

		[Token(Token = "0x400054F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Quaternion[] readRotations;

		[Token(Token = "0x4000550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] solvedPositions;

		[Token(Token = "0x4000551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Quaternion[] solvedRotations;

		[Token(Token = "0x4000552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Quaternion[] defaultLocalRotations;

		[Token(Token = "0x4000553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3[] defaultLocalPositions;

		[Token(Token = "0x4000554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 rootV;

		[Token(Token = "0x4000555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Vector3 rootVelocity;

		[Token(Token = "0x4000556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 bodyOffset;

		[Token(Token = "0x4000557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int supportLegIndex;

		[Token(Token = "0x4000558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int lastLOD;

		[Token(Token = "0x4000559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE24C4C", Offset = "0xE24C4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE24C4C", Offset = "0xE24C4C")]
		public int LOD;

		[Token(Token = "0x400055A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE24CA0", Offset = "0xE24CA0")]
		public float scale;

		[Token(Token = "0x400055B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE24CD8", Offset = "0xE24CD8")]
		public bool plantFeet;

		[Token(Token = "0x400055C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE24D10", Offset = "0xE24D10")]
		private VirtualBone <rootBone>k__BackingField;

		[Token(Token = "0x400055D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE24D20", Offset = "0xE24D20")]
		public Spine spine;

		[Token(Token = "0x400055E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE24D58", Offset = "0xE24D58")]
		public Arm leftArm;

		[Token(Token = "0x400055F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE24D90", Offset = "0xE24D90")]
		public Arm rightArm;

		[Token(Token = "0x4000560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE24DC8", Offset = "0xE24DC8")]
		public Leg leftLeg;

		[Token(Token = "0x4000561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE24E00", Offset = "0xE24E00")]
		public Leg rightLeg;

		[Token(Token = "0x4000562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE24E38", Offset = "0xE24E38")]
		public Locomotion locomotion;

		[Token(Token = "0x4000563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Leg[] legs;

		[Token(Token = "0x4000564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Arm[] arms;

		[Token(Token = "0x4000565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Vector3 headPosition;

		[Token(Token = "0x4000566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private Vector3 headDeltaPosition;

		[Token(Token = "0x4000567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Vector3 raycastOriginPelvis;

		[Token(Token = "0x4000568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private Vector3 lastOffset;

		[Token(Token = "0x4000569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private Vector3 debugPos1;

		[Token(Token = "0x400056A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		private Vector3 debugPos2;

		[Token(Token = "0x400056B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private Vector3 debugPos3;

		[Token(Token = "0x400056C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private Vector3 debugPos4;

		[Token(Token = "0x170000C5")]
		[HideInInspector]
		public VirtualBone rootBone
		{
			[Token(Token = "0x600064D")]
			[Address(RVA = "0x1DDF380", Offset = "0x1DDF380", VA = "0x1DDF380")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2D59C", Offset = "0xE2D59C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600064E")]
			[Address(RVA = "0x1DDF388", Offset = "0x1DDF388", VA = "0x1DDF388")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2D5AC", Offset = "0xE2D5AC")]
			private set
			{
			}
		}

		[Token(Token = "0x6000639")]
		[Address(RVA = "0x1DD7534", Offset = "0x1DD7534", VA = "0x1DD7534")]
		public void SetToReferences(VRIK.References references)
		{
		}

		[Token(Token = "0x600063A")]
		[Address(RVA = "0x1DD79C8", Offset = "0x1DD79C8", VA = "0x1DD79C8")]
		public void GuessHandOrientations(VRIK.References references, bool onlyIfZero)
		{
		}

		[Token(Token = "0x600063B")]
		[Address(RVA = "0x1DD7850", Offset = "0x1DD7850", VA = "0x1DD7850")]
		public void DefaultAnimationCurves()
		{
		}

		[Token(Token = "0x600063C")]
		[Address(RVA = "0x1DD7D9C", Offset = "0x1DD7D9C", VA = "0x1DD7D9C")]
		public void AddPositionOffset(PositionOffset positionOffset, Vector3 value)
		{
		}

		[Token(Token = "0x600063D")]
		[Address(RVA = "0x1DD8078", Offset = "0x1DD8078", VA = "0x1DD8078")]
		public void AddRotationOffset(RotationOffset rotationOffset, Quaternion value)
		{
		}

		[Token(Token = "0x600063E")]
		[Address(RVA = "0x1DD820C", Offset = "0x1DD820C", VA = "0x1DD820C")]
		public void AddPlatformMotion(Vector3 deltaPosition, Quaternion deltaRotation, Vector3 platformPivot)
		{
		}

		[Token(Token = "0x600063F")]
		[Address(RVA = "0x1DD8918", Offset = "0x1DD8918", VA = "0x1DD8918", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000640")]
		[Address(RVA = "0x1DD8A8C", Offset = "0x1DD8A8C", VA = "0x1DD8A8C", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x6000641")]
		[Address(RVA = "0x1DD8C94", Offset = "0x1DD8C94", VA = "0x1DD8C94", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x6000642")]
		[Address(RVA = "0x1DD8D08", Offset = "0x1DD8D08", VA = "0x1DD8D08", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6000643")]
		[Address(RVA = "0x1DD8D7C", Offset = "0x1DD8D7C", VA = "0x1DD8D7C", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000644")]
		[Address(RVA = "0x1DD7C78", Offset = "0x1DD7C78", VA = "0x1DD7C78")]
		private static Keyframe[] GetSineKeyframes(float mag)
		{
			return null;
		}

		[Token(Token = "0x6000645")]
		[Address(RVA = "0x1DD8F9C", Offset = "0x1DD8F9C", VA = "0x1DD8F9C")]
		private void UpdateSolverTransforms()
		{
		}

		[Token(Token = "0x6000646")]
		[Address(RVA = "0x1DD9104", Offset = "0x1DD9104", VA = "0x1DD9104", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000647")]
		[Address(RVA = "0x1DD96CC", Offset = "0x1DD96CC", VA = "0x1DD96CC", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000648")]
		[Address(RVA = "0x1DDB0D0", Offset = "0x1DDB0D0", VA = "0x1DDB0D0")]
		private void WriteTransforms()
		{
		}

		[Token(Token = "0x6000649")]
		[Address(RVA = "0x1DD914C", Offset = "0x1DD914C", VA = "0x1DD914C")]
		private void Read(Vector3[] positions, Quaternion[] rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs)
		{
		}

		[Token(Token = "0x600064A")]
		[Address(RVA = "0x1DD9E40", Offset = "0x1DD9E40", VA = "0x1DD9E40")]
		private void Solve()
		{
		}

		[Token(Token = "0x600064B")]
		[Address(RVA = "0x1DDB4BC", Offset = "0x1DDB4BC", VA = "0x1DDB4BC")]
		private Vector3 GetPosition(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600064C")]
		[Address(RVA = "0x1DDB504", Offset = "0x1DDB504", VA = "0x1DDB504")]
		private Quaternion GetRotation(int index)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600064F")]
		[Address(RVA = "0x1DDAF80", Offset = "0x1DDAF80", VA = "0x1DDAF80")]
		private void Write()
		{
		}

		[Token(Token = "0x6000650")]
		[Address(RVA = "0x1DDED98", Offset = "0x1DDED98", VA = "0x1DDED98")]
		private Vector3 GetPelvisOffset()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000651")]
		[Address(RVA = "0x1DDF390", Offset = "0x1DDF390", VA = "0x1DDF390")]
		public IKSolverVR()
		{
		}
	}
	[Token(Token = "0x20000D3")]
	public class TwistRelaxer : MonoBehaviour
	{
		[Token(Token = "0x4000628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IK ik;

		[Token(Token = "0x4000629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE261C8", Offset = "0xE261C8")]
		public TwistSolver[] twistSolvers;

		[Token(Token = "0x60006BF")]
		[Address(RVA = "0x1781A0C", Offset = "0x1781A0C", VA = "0x1781A0C")]
		public void Start()
		{
		}

		[Token(Token = "0x60006C0")]
		[Address(RVA = "0x1782164", Offset = "0x1782164", VA = "0x1782164")]
		private void OnPostUpdate()
		{
		}

		[Token(Token = "0x60006C1")]
		[Address(RVA = "0x17826E8", Offset = "0x17826E8", VA = "0x17826E8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60006C2")]
		[Address(RVA = "0x17827B0", Offset = "0x17827B0", VA = "0x17827B0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60006C3")]
		[Address(RVA = "0x17828D8", Offset = "0x17828D8", VA = "0x17828D8")]
		public TwistRelaxer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000D4")]
	public class TwistSolver
	{
		[Token(Token = "0x400062A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE26200", Offset = "0xE26200")]
		public Transform transform;

		[Token(Token = "0x400062B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE26238", Offset = "0xE26238")]
		public Transform parent;

		[Token(Token = "0x400062C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE26270", Offset = "0xE26270")]
		public Transform[] children;

		[Token(Token = "0x400062D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE262A8", Offset = "0xE262A8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE262A8", Offset = "0xE262A8")]
		public float weight;

		[Token(Token = "0x400062E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE262FC", Offset = "0xE262FC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE262FC", Offset = "0xE262FC")]
		public float parentChildCrossfade;

		[Token(Token = "0x400062F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE26350", Offset = "0xE26350")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE26350", Offset = "0xE26350")]
		public float twistAngleOffset;

		[Token(Token = "0x4000630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 twistAxis;

		[Token(Token = "0x4000631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 axis;

		[Token(Token = "0x4000632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 axisRelativeToParentDefault;

		[Token(Token = "0x4000633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 axisRelativeToChildDefault;

		[Token(Token = "0x4000634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Quaternion[] childRotations;

		[Token(Token = "0x4000635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool inititated;

		[Token(Token = "0x60006C4")]
		[Address(RVA = "0x1782944", Offset = "0x1782944", VA = "0x1782944")]
		public TwistSolver()
		{
		}

		[Token(Token = "0x60006C5")]
		[Address(RVA = "0x1781BE0", Offset = "0x1781BE0", VA = "0x1781BE0")]
		public void Initiate()
		{
		}

		[Token(Token = "0x60006C6")]
		[Address(RVA = "0x178222C", Offset = "0x178222C", VA = "0x178222C")]
		public void Relax()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000D5")]
	public class InteractionEffector
	{
		[Token(Token = "0x4000636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE263AC", Offset = "0xE263AC")]
		private FullBodyBipedEffector <effectorType>k__BackingField;

		[Token(Token = "0x4000637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE263BC", Offset = "0xE263BC")]
		private bool <isPaused>k__BackingField;

		[Token(Token = "0x4000638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE263CC", Offset = "0xE263CC")]
		private InteractionObject <interactionObject>k__BackingField;

		[Token(Token = "0x4000639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Poser poser;

		[Token(Token = "0x400063A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private IKEffector effector;

		[Token(Token = "0x400063B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float timer;

		[Token(Token = "0x400063C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float length;

		[Token(Token = "0x400063D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float weight;

		[Token(Token = "0x400063E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float fadeInSpeed;

		[Token(Token = "0x400063F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float defaultPositionWeight;

		[Token(Token = "0x4000640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float defaultRotationWeight;

		[Token(Token = "0x4000641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float defaultPull;

		[Token(Token = "0x4000642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float defaultReach;

		[Token(Token = "0x4000643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float defaultPush;

		[Token(Token = "0x4000644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float defaultPushParent;

		[Token(Token = "0x4000645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float defaultBendGoalWeight;

		[Token(Token = "0x4000646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float resetTimer;

		[Token(Token = "0x4000647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool positionWeightUsed;

		[Token(Token = "0x4000648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool rotationWeightUsed;

		[Token(Token = "0x4000649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		private bool pullUsed;

		[Token(Token = "0x400064A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		private bool reachUsed;

		[Token(Token = "0x400064B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool pushUsed;

		[Token(Token = "0x400064C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		private bool pushParentUsed;

		[Token(Token = "0x400064D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
		private bool bendGoalWeightUsed;

		[Token(Token = "0x400064E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x67")]
		private bool pickedUp;

		[Token(Token = "0x400064F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool defaults;

		[Token(Token = "0x4000650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		private bool pickUpOnPostFBBIK;

		[Token(Token = "0x4000651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 pickUpPosition;

		[Token(Token = "0x4000652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 pausePositionRelative;

		[Token(Token = "0x4000653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Quaternion pickUpRotation;

		[Token(Token = "0x4000654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Quaternion pauseRotationRelative;

		[Token(Token = "0x4000655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private InteractionTarget interactionTarget;

		[Token(Token = "0x4000656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Transform target;

		[Token(Token = "0x4000657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private List<bool> triggered;

		[Token(Token = "0x4000658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private InteractionSystem interactionSystem;

		[Token(Token = "0x4000659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private bool started;

		[Token(Token = "0x170000DF")]
		public FullBodyBipedEffector effectorType
		{
			[Token(Token = "0x60006C7")]
			[Address(RVA = "0x176DCB0", Offset = "0x176DCB0", VA = "0x176DCB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2D72C", Offset = "0xE2D72C")]
			get
			{
				return default(FullBodyBipedEffector);
			}
			[Token(Token = "0x60006C8")]
			[Address(RVA = "0x176DCB8", Offset = "0x176DCB8", VA = "0x176DCB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2D73C", Offset = "0xE2D73C")]
			private set
			{
			}
		}

		[Token(Token = "0x170000E0")]
		public bool isPaused
		{
			[Token(Token = "0x60006C9")]
			[Address(RVA = "0x176DCC0", Offset = "0x176DCC0", VA = "0x176DCC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2D74C", Offset = "0xE2D74C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60006CA")]
			[Address(RVA = "0x176DCC8", Offset = "0x176DCC8", VA = "0x176DCC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2D75C", Offset = "0xE2D75C")]
			private set
			{
			}
		}

		[Token(Token = "0x170000E1")]
		public InteractionObject interactionObject
		{
			[Token(Token = "0x60006CB")]
			[Address(RVA = "0x176DCD4", Offset = "0x176DCD4", VA = "0x176DCD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2D76C", Offset = "0xE2D76C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60006CC")]
			[Address(RVA = "0x176DCDC", Offset = "0x176DCDC", VA = "0x176DCDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2D77C", Offset = "0xE2D77C")]
			private set
			{
			}
		}

		[Token(Token = "0x170000E2")]
		public bool inInteraction
		{
			[Token(Token = "0x60006CD")]
			[Address(RVA = "0x176DCE4", Offset = "0x176DCE4", VA = "0x176DCE4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000E3")]
		public float progress
		{
			[Token(Token = "0x60006D6")]
			[Address(RVA = "0x1770A1C", Offset = "0x1770A1C", VA = "0x1770A1C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60006CE")]
		[Address(RVA = "0x176DD54", Offset = "0x176DD54", VA = "0x176DD54")]
		public InteractionEffector(FullBodyBipedEffector effectorType)
		{
		}

		[Token(Token = "0x60006CF")]
		[Address(RVA = "0x176DDE4", Offset = "0x176DDE4", VA = "0x176DDE4")]
		public void Initiate(InteractionSystem interactionSystem)
		{
		}

		[Token(Token = "0x60006D0")]
		[Address(RVA = "0x176DEA8", Offset = "0x176DEA8", VA = "0x176DEA8")]
		private void StoreDefaults()
		{
		}

		[Token(Token = "0x60006D1")]
		[Address(RVA = "0x176E020", Offset = "0x176E020", VA = "0x176E020")]
		public bool ResetToDefaults(float speed)
		{
			return default(bool);
		}

		[Token(Token = "0x60006D2")]
		[Address(RVA = "0x176E4D0", Offset = "0x176E4D0", VA = "0x176E4D0")]
		public bool Pause()
		{
			return default(bool);
		}

		[Token(Token = "0x60006D3")]
		[Address(RVA = "0x176E890", Offset = "0x176E890", VA = "0x176E890")]
		public bool Resume()
		{
			return default(bool);
		}

		[Token(Token = "0x60006D4")]
		[Address(RVA = "0x176E8E4", Offset = "0x176E8E4", VA = "0x176E8E4")]
		public bool Start(InteractionObject interactionObject, string tag, float fadeInTime, bool interrupt)
		{
			return default(bool);
		}

		[Token(Token = "0x60006D5")]
		[Address(RVA = "0x176F5F8", Offset = "0x176F5F8", VA = "0x176F5F8")]
		public void Update(Transform root, float speed)
		{
		}

		[Token(Token = "0x60006D7")]
		[Address(RVA = "0x17701A8", Offset = "0x17701A8", VA = "0x17701A8")]
		private void TriggerUntriggeredEvents(bool checkTime, out bool pickUp, out bool pause)
		{
		}

		[Token(Token = "0x60006D8")]
		[Address(RVA = "0x17703D0", Offset = "0x17703D0", VA = "0x17703D0")]
		private void PickUp(Transform root)
		{
		}

		[Token(Token = "0x60006D9")]
		[Address(RVA = "0x17708AC", Offset = "0x17708AC", VA = "0x17708AC")]
		public bool Stop()
		{
			return default(bool);
		}

		[Token(Token = "0x60006DA")]
		[Address(RVA = "0x1770F04", Offset = "0x1770F04", VA = "0x1770F04")]
		public void OnPostFBBIK()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000D6")]
	public class InteractionLookAt
	{
		[Token(Token = "0x400065A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE263DC", Offset = "0xE263DC")]
		public LookAtIK ik;

		[Token(Token = "0x400065B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE26414", Offset = "0xE26414")]
		public float lerpSpeed;

		[Token(Token = "0x400065C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2644C", Offset = "0xE2644C")]
		public float weightSpeed;

		[Token(Token = "0x400065D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public bool isPaused;

		[Token(Token = "0x400065E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform lookAtTarget;

		[Token(Token = "0x400065F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float stopLookTime;

		[Token(Token = "0x4000660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float weight;

		[Token(Token = "0x4000661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool firstFBBIKSolve;

		[Token(Token = "0x60006DB")]
		[Address(RVA = "0x17711EC", Offset = "0x17711EC", VA = "0x17711EC")]
		public void Look(Transform target, float time)
		{
		}

		[Token(Token = "0x60006DC")]
		[Address(RVA = "0x1771370", Offset = "0x1771370", VA = "0x1771370")]
		public void OnFixTransforms()
		{
		}

		[Token(Token = "0x60006DD")]
		[Address(RVA = "0x1771418", Offset = "0x1771418", VA = "0x1771418")]
		public void Update()
		{
		}

		[Token(Token = "0x60006DE")]
		[Address(RVA = "0x177166C", Offset = "0x177166C", VA = "0x177166C")]
		public void SolveSpine()
		{
		}

		[Token(Token = "0x60006DF")]
		[Address(RVA = "0x1771764", Offset = "0x1771764", VA = "0x1771764")]
		public void SolveHead()
		{
		}

		[Token(Token = "0x60006E0")]
		[Address(RVA = "0x1771830", Offset = "0x1771830", VA = "0x1771830")]
		public InteractionLookAt()
		{
		}
	}
	[Token(Token = "0x20000D7")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE2123C", Offset = "0xE2123C")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xE2123C", Offset = "0xE2123C")]
	public class InteractionObject : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20000D8")]
		public class InteractionEvent
		{
			[Token(Token = "0x400066B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2655C", Offset = "0xE2655C")]
			public float time;

			[Token(Token = "0x400066C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE26594", Offset = "0xE26594")]
			public bool pause;

			[Token(Token = "0x400066D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE265CC", Offset = "0xE265CC")]
			public bool pickUp;

			[Token(Token = "0x400066E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE26604", Offset = "0xE26604")]
			public AnimatorEvent[] animations;

			[Token(Token = "0x400066F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2663C", Offset = "0xE2663C")]
			public Message[] messages;

			[Token(Token = "0x4000670")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE26674", Offset = "0xE26674")]
			public UnityEvent unityEvent;

			[Token(Token = "0x60006FD")]
			[Address(RVA = "0x1770A58", Offset = "0x1770A58", VA = "0x1770A58")]
			public void Activate(Transform t)
			{
			}

			[Token(Token = "0x60006FE")]
			[Address(RVA = "0x1772B40", Offset = "0x1772B40", VA = "0x1772B40")]
			public InteractionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20000D9")]
		public class Message
		{
			[Token(Token = "0x4000671")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE266AC", Offset = "0xE266AC")]
			public string function;

			[Token(Token = "0x4000672")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE266E4", Offset = "0xE266E4")]
			public GameObject recipient;

			[Token(Token = "0x4000673")]
			private const string empty = "";

			[Token(Token = "0x60006FF")]
			[Address(RVA = "0x1772A50", Offset = "0x1772A50", VA = "0x1772A50")]
			public void Send(Transform t)
			{
			}

			[Token(Token = "0x6000700")]
			[Address(RVA = "0x1772B48", Offset = "0x1772B48", VA = "0x1772B48")]
			public Message()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20000DA")]
		public class AnimatorEvent
		{
			[Token(Token = "0x4000674")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2671C", Offset = "0xE2671C")]
			public Animator animator;

			[Token(Token = "0x4000675")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE26754", Offset = "0xE26754")]
			public Animation animation;

			[Token(Token = "0x4000676")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2678C", Offset = "0xE2678C")]
			public string animationState;

			[Token(Token = "0x4000677")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE267C4", Offset = "0xE267C4")]
			public float crossfadeTime;

			[Token(Token = "0x4000678")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE267FC", Offset = "0xE267FC")]
			public int layer;

			[Token(Token = "0x4000679")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE26834", Offset = "0xE26834")]
			public bool resetNormalizedTime;

			[Token(Token = "0x400067A")]
			private const string empty = "";

			[Token(Token = "0x6000701")]
			[Address(RVA = "0x17727B0", Offset = "0x17727B0", VA = "0x17727B0")]
			public void Activate(bool pickUp)
			{
			}

			[Token(Token = "0x6000702")]
			[Address(RVA = "0x17728A4", Offset = "0x17728A4", VA = "0x17728A4")]
			private void Activate(Animator animator)
			{
			}

			[Token(Token = "0x6000703")]
			[Address(RVA = "0x177295C", Offset = "0x177295C", VA = "0x177295C")]
			private void Activate(Animation animation)
			{
			}

			[Token(Token = "0x6000704")]
			[Address(RVA = "0x1772A3C", Offset = "0x1772A3C", VA = "0x1772A3C")]
			public AnimatorEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20000DB")]
		public class WeightCurve
		{
			[Serializable]
			[Token(Token = "0x20000DC")]
			public enum Type
			{
				[Token(Token = "0x400067E")]
				PositionWeight,
				[Token(Token = "0x400067F")]
				RotationWeight,
				[Token(Token = "0x4000680")]
				PositionOffsetX,
				[Token(Token = "0x4000681")]
				PositionOffsetY,
				[Token(Token = "0x4000682")]
				PositionOffsetZ,
				[Token(Token = "0x4000683")]
				Pull,
				[Token(Token = "0x4000684")]
				Reach,
				[Token(Token = "0x4000685")]
				RotateBoneWeight,
				[Token(Token = "0x4000686")]
				Push,
				[Token(Token = "0x4000687")]
				PushParent,
				[Token(Token = "0x4000688")]
				PoserWeight,
				[Token(Token = "0x4000689")]
				BendGoalWeight
			}

			[Token(Token = "0x400067B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2686C", Offset = "0xE2686C")]
			public Type type;

			[Token(Token = "0x400067C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE268A4", Offset = "0xE268A4")]
			public AnimationCurve curve;

			[Token(Token = "0x6000705")]
			[Address(RVA = "0x1771FBC", Offset = "0x1771FBC", VA = "0x1771FBC")]
			public float GetValue(float timer)
			{
				return default(float);
			}

			[Token(Token = "0x6000706")]
			[Address(RVA = "0x1772B60", Offset = "0x1772B60", VA = "0x1772B60")]
			public WeightCurve()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20000DD")]
		public class Multiplier
		{
			[Token(Token = "0x400068A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE268DC", Offset = "0xE268DC")]
			public WeightCurve.Type curve;

			[Token(Token = "0x400068B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE26914", Offset = "0xE26914")]
			public float multiplier;

			[Token(Token = "0x400068C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2694C", Offset = "0xE2694C")]
			public WeightCurve.Type result;

			[Token(Token = "0x6000707")]
			[Address(RVA = "0x177269C", Offset = "0x177269C", VA = "0x177269C")]
			public float GetValue(WeightCurve weightCurve, float timer)
			{
				return default(float);
			}

			[Token(Token = "0x6000708")]
			[Address(RVA = "0x1772B50", Offset = "0x1772B50", VA = "0x1772B50")]
			public Multiplier()
			{
			}
		}

		[Token(Token = "0x4000662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE26494", Offset = "0xE26494")]
		public Transform otherLookAtTarget;

		[Token(Token = "0x4000663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE264CC", Offset = "0xE264CC")]
		public Transform otherTargetsRoot;

		[Token(Token = "0x4000664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE26504", Offset = "0xE26504")]
		public Transform positionOffsetSpace;

		[Token(Token = "0x4000665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public WeightCurve[] weightCurves;

		[Token(Token = "0x4000666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Multiplier[] multipliers;

		[Token(Token = "0x4000667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public InteractionEvent[] events;

		[Token(Token = "0x4000668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2653C", Offset = "0xE2653C")]
		private float <length>k__BackingField;

		[Token(Token = "0x4000669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2654C", Offset = "0xE2654C")]
		private InteractionSystem <lastUsedInteractionSystem>k__BackingField;

		[Token(Token = "0x400066A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private InteractionTarget[] targets;

		[Token(Token = "0x170000E4")]
		public float length
		{
			[Token(Token = "0x60006E9")]
			[Address(RVA = "0x1771AA4", Offset = "0x1771AA4", VA = "0x1771AA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2D94C", Offset = "0xE2D94C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60006EA")]
			[Address(RVA = "0x1771AAC", Offset = "0x1771AAC", VA = "0x1771AAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2D95C", Offset = "0xE2D95C")]
			private set
			{
			}
		}

		[Token(Token = "0x170000E5")]
		public InteractionSystem lastUsedInteractionSystem
		{
			[Token(Token = "0x60006EB")]
			[Address(RVA = "0x1771AB4", Offset = "0x1771AB4", VA = "0x1771AB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2D96C", Offset = "0xE2D96C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60006EC")]
			[Address(RVA = "0x1771ABC", Offset = "0x1771ABC", VA = "0x1771ABC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2D97C", Offset = "0xE2D97C")]
			private set
			{
			}
		}

		[Token(Token = "0x170000E6")]
		public Transform lookAtTarget
		{
			[Token(Token = "0x60006EE")]
			[Address(RVA = "0x1771CE0", Offset = "0x1771CE0", VA = "0x1771CE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E7")]
		public Transform targetsRoot
		{
			[Token(Token = "0x60006F6")]
			[Address(RVA = "0x1770DD8", Offset = "0x1770DD8", VA = "0x1770DD8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006E1")]
		[Address(RVA = "0x1771844", Offset = "0x1771844", VA = "0x1771844")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2D78C", Offset = "0xE2D78C")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x60006E2")]
		[Address(RVA = "0x1771890", Offset = "0x1771890", VA = "0x1771890")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2D7C4", Offset = "0xE2D7C4")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x60006E3")]
		[Address(RVA = "0x17718DC", Offset = "0x17718DC", VA = "0x17718DC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2D7FC", Offset = "0xE2D7FC")]
		private void OpenTutorial1()
		{
		}

		[Token(Token = "0x60006E4")]
		[Address(RVA = "0x1771928", Offset = "0x1771928", VA = "0x1771928")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2D834", Offset = "0xE2D834")]
		private void OpenTutorial2()
		{
		}

		[Token(Token = "0x60006E5")]
		[Address(RVA = "0x1771974", Offset = "0x1771974", VA = "0x1771974")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2D86C", Offset = "0xE2D86C")]
		private void OpenTutorial3()
		{
		}

		[Token(Token = "0x60006E6")]
		[Address(RVA = "0x17719C0", Offset = "0x17719C0", VA = "0x17719C0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2D8A4", Offset = "0xE2D8A4")]
		private void OpenTutorial4()
		{
		}

		[Token(Token = "0x60006E7")]
		[Address(RVA = "0x1771A0C", Offset = "0x1771A0C", VA = "0x1771A0C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2D8DC", Offset = "0xE2D8DC")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x60006E8")]
		[Address(RVA = "0x1771A58", Offset = "0x1771A58", VA = "0x1771A58")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2D914", Offset = "0xE2D914")]
		private void ASThread()
		{
		}

		[Token(Token = "0x60006ED")]
		[Address(RVA = "0x1771AC4", Offset = "0x1771AC4", VA = "0x1771AC4")]
		public void Initiate()
		{
		}

		[Token(Token = "0x60006EF")]
		[Address(RVA = "0x1771D70", Offset = "0x1771D70", VA = "0x1771D70")]
		public InteractionTarget GetTarget(FullBodyBipedEffector effectorType, InteractionSystem interactionSystem)
		{
			return null;
		}

		[Token(Token = "0x60006F0")]
		[Address(RVA = "0x176EE9C", Offset = "0x176EE9C", VA = "0x176EE9C")]
		public bool CurveUsed(WeightCurve.Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x60006F1")]
		[Address(RVA = "0x1771ED4", Offset = "0x1771ED4", VA = "0x1771ED4")]
		public InteractionTarget[] GetTargets()
		{
			return null;
		}

		[Token(Token = "0x60006F2")]
		[Address(RVA = "0x176ED58", Offset = "0x176ED58", VA = "0x176ED58")]
		public Transform GetTarget(FullBodyBipedEffector effectorType, string tag)
		{
			return null;
		}

		[Token(Token = "0x60006F3")]
		[Address(RVA = "0x176EE94", Offset = "0x176EE94", VA = "0x176EE94")]
		public void OnStartInteraction(InteractionSystem interactionSystem)
		{
		}

		[Token(Token = "0x60006F4")]
		[Address(RVA = "0x176FD8C", Offset = "0x176FD8C", VA = "0x176FD8C")]
		public void Apply(IKSolverFullBodyBiped solver, FullBodyBipedEffector effector, InteractionTarget target, float timer, float weight)
		{
		}

		[Token(Token = "0x60006F5")]
		[Address(RVA = "0x1770684", Offset = "0x1770684", VA = "0x1770684")]
		public float GetValue(WeightCurve.Type weightCurveType, InteractionTarget target, float timer)
		{
			return default(float);
		}

		[Token(Token = "0x60006F7")]
		[Address(RVA = "0x17726D8", Offset = "0x17726D8", VA = "0x17726D8")]
		private void Start()
		{
		}

		[Token(Token = "0x60006F8")]
		[Address(RVA = "0x1771FD8", Offset = "0x1771FD8", VA = "0x1771FD8")]
		private void Apply(IKSolverFullBodyBiped solver, FullBodyBipedEffector effector, WeightCurve.Type type, float value, float weight)
		{
		}

		[Token(Token = "0x60006F9")]
		[Address(RVA = "0x1771EDC", Offset = "0x1771EDC", VA = "0x1771EDC")]
		private Transform GetTarget(FullBodyBipedEffector effectorType)
		{
			return null;
		}

		[Token(Token = "0x60006FA")]
		[Address(RVA = "0x1772634", Offset = "0x1772634", VA = "0x1772634")]
		private int GetWeightCurveIndex(WeightCurve.Type weightCurveType)
		{
			return default(int);
		}

		[Token(Token = "0x60006FB")]
		[Address(RVA = "0x17726DC", Offset = "0x17726DC", VA = "0x17726DC")]
		private int GetMultiplierIndex(WeightCurve.Type weightCurveType)
		{
			return default(int);
		}

		[Token(Token = "0x60006FC")]
		[Address(RVA = "0x1772744", Offset = "0x1772744", VA = "0x1772744")]
		public InteractionObject()
		{
		}
	}
	[Token(Token = "0x20000DE")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE2129C", Offset = "0xE2129C")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xE2129C", Offset = "0xE2129C")]
	public class InteractionSystem : MonoBehaviour
	{
		[Token(Token = "0x20000DF")]
		public delegate void InteractionDelegate(FullBodyBipedEffector effectorType, InteractionObject interactionObject);

		[Token(Token = "0x20000E0")]
		public delegate void InteractionEventDelegate(FullBodyBipedEffector effectorType, InteractionObject interactionObject, InteractionObject.InteractionEvent interactionEvent);

		[Token(Token = "0x400068D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE26984", Offset = "0xE26984")]
		public string targetTag;

		[Token(Token = "0x400068E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE269BC", Offset = "0xE269BC")]
		public float fadeInTime;

		[Token(Token = "0x400068F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE269F4", Offset = "0xE269F4")]
		public float speed;

		[Token(Token = "0x4000690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE26A2C", Offset = "0xE26A2C")]
		public float resetToDefaultsSpeed;

		[Token(Token = "0x4000691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE26A64", Offset = "0xE26A64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE26A64", Offset = "0xE26A64")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE26A64", Offset = "0xE26A64")]
		public Collider characterCollider;

		[Token(Token = "0x4000692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xE26AE8", Offset = "0xE26AE8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE26AE8", Offset = "0xE26AE8")]
		public Transform FPSCamera;

		[Token(Token = "0x4000693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE26B48", Offset = "0xE26B48")]
		public LayerMask camRaycastLayers;

		[Token(Token = "0x4000694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE26B80", Offset = "0xE26B80")]
		public float camRaycastDistance;

		[Token(Token = "0x4000695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE26BB8", Offset = "0xE26BB8")]
		private List<InteractionTrigger> <triggersInRange>k__BackingField;

		[Token(Token = "0x4000696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<InteractionTrigger> inContact;

		[Token(Token = "0x4000697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<int> bestRangeIndexes;

		[Token(Token = "0x4000698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public InteractionDelegate OnInteractionStart;

		[Token(Token = "0x4000699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public InteractionDelegate OnInteractionPause;

		[Token(Token = "0x400069A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public InteractionDelegate OnInteractionPickUp;

		[Token(Token = "0x400069B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public InteractionDelegate OnInteractionResume;

		[Token(Token = "0x400069C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public InteractionDelegate OnInteractionStop;

		[Token(Token = "0x400069D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public InteractionEventDelegate OnInteractionEvent;

		[Token(Token = "0x400069E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public RaycastHit raycastHit;

		[Token(Token = "0x400069F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE26BC8", Offset = "0xE26BC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE26BC8", Offset = "0xE26BC8")]
		private FullBodyBipedIK fullBody;

		[Token(Token = "0x40006A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE26C28", Offset = "0xE26C28")]
		public InteractionLookAt lookAt;

		[Token(Token = "0x40006A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private InteractionEffector[] interactionEffectors;

		[Token(Token = "0x40006A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE26C60", Offset = "0xE26C60")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x40006A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Collider lastCollider;

		[Token(Token = "0x40006A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Collider c;

		[Token(Token = "0x170000E8")]
		public bool inInteraction
		{
			[Token(Token = "0x6000711")]
			[Address(RVA = "0x1772DC8", Offset = "0x1772DC8", VA = "0x1772DC8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000E9")]
		public FullBodyBipedIK ik
		{
			[Token(Token = "0x600072B")]
			[Address(RVA = "0x1774A20", Offset = "0x1774A20", VA = "0x1774A20")]
			get
			{
				return null;
			}
			[Token(Token = "0x600072C")]
			[Address(RVA = "0x1774A28", Offset = "0x1774A28", VA = "0x1774A28")]
			set
			{
			}
		}

		[Token(Token = "0x170000EA")]
		public List<InteractionTrigger> triggersInRange
		{
			[Token(Token = "0x600072D")]
			[Address(RVA = "0x1774A30", Offset = "0x1774A30", VA = "0x1774A30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2DB4C", Offset = "0xE2DB4C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600072E")]
			[Address(RVA = "0x1774A38", Offset = "0x1774A38", VA = "0x1774A38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2DB5C", Offset = "0xE2DB5C")]
			private set
			{
			}
		}

		[Token(Token = "0x170000EB")]
		public bool initiated
		{
			[Token(Token = "0x600072F")]
			[Address(RVA = "0x1774A40", Offset = "0x1774A40", VA = "0x1774A40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2DB6C", Offset = "0xE2DB6C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000730")]
			[Address(RVA = "0x1774A48", Offset = "0x1774A48", VA = "0x1774A48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2DB7C", Offset = "0xE2DB7C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000709")]
		[Address(RVA = "0x1772B68", Offset = "0x1772B68", VA = "0x1772B68")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2D98C", Offset = "0xE2D98C")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x600070A")]
		[Address(RVA = "0x1772BB4", Offset = "0x1772BB4", VA = "0x1772BB4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2D9C4", Offset = "0xE2D9C4")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x600070B")]
		[Address(RVA = "0x1772C00", Offset = "0x1772C00", VA = "0x1772C00")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2D9FC", Offset = "0xE2D9FC")]
		private void OpenTutorial1()
		{
		}

		[Token(Token = "0x600070C")]
		[Address(RVA = "0x1772C4C", Offset = "0x1772C4C", VA = "0x1772C4C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2DA34", Offset = "0xE2DA34")]
		private void OpenTutorial2()
		{
		}

		[Token(Token = "0x600070D")]
		[Address(RVA = "0x1772C98", Offset = "0x1772C98", VA = "0x1772C98")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2DA6C", Offset = "0xE2DA6C")]
		private void OpenTutorial3()
		{
		}

		[Token(Token = "0x600070E")]
		[Address(RVA = "0x1772CE4", Offset = "0x1772CE4", VA = "0x1772CE4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2DAA4", Offset = "0xE2DAA4")]
		private void OpenTutorial4()
		{
		}

		[Token(Token = "0x600070F")]
		[Address(RVA = "0x1772D30", Offset = "0x1772D30", VA = "0x1772D30")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2DADC", Offset = "0xE2DADC")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000710")]
		[Address(RVA = "0x1772D7C", Offset = "0x1772D7C", VA = "0x1772D7C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2DB14", Offset = "0xE2DB14")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000712")]
		[Address(RVA = "0x1772F58", Offset = "0x1772F58", VA = "0x1772F58")]
		public bool IsInInteraction(FullBodyBipedEffector effectorType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000713")]
		[Address(RVA = "0x1773024", Offset = "0x1773024", VA = "0x1773024")]
		public bool IsPaused(FullBodyBipedEffector effectorType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000714")]
		[Address(RVA = "0x17730F0", Offset = "0x17730F0", VA = "0x17730F0")]
		public bool IsPaused()
		{
			return default(bool);
		}

		[Token(Token = "0x6000715")]
		[Address(RVA = "0x177319C", Offset = "0x177319C", VA = "0x177319C")]
		public bool IsInSync()
		{
			return default(bool);
		}

		[Token(Token = "0x6000716")]
		[Address(RVA = "0x1773294", Offset = "0x1773294", VA = "0x1773294")]
		public bool StartInteraction(FullBodyBipedEffector effectorType, InteractionObject interactionObject, bool interrupt)
		{
			return default(bool);
		}

		[Token(Token = "0x6000717")]
		[Address(RVA = "0x17733B0", Offset = "0x17733B0", VA = "0x17733B0")]
		public bool PauseInteraction(FullBodyBipedEffector effectorType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000718")]
		[Address(RVA = "0x1773440", Offset = "0x1773440", VA = "0x1773440")]
		public bool ResumeInteraction(FullBodyBipedEffector effectorType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000719")]
		[Address(RVA = "0x17734D0", Offset = "0x17734D0", VA = "0x17734D0")]
		public bool StopInteraction(FullBodyBipedEffector effectorType)
		{
			return default(bool);
		}

		[Token(Token = "0x600071A")]
		[Address(RVA = "0x1773560", Offset = "0x1773560", VA = "0x1773560")]
		public void PauseAll()
		{
		}

		[Token(Token = "0x600071B")]
		[Address(RVA = "0x17735D4", Offset = "0x17735D4", VA = "0x17735D4")]
		public void ResumeAll()
		{
		}

		[Token(Token = "0x600071C")]
		[Address(RVA = "0x1773648", Offset = "0x1773648", VA = "0x1773648")]
		public void StopAll()
		{
		}

		[Token(Token = "0x600071D")]
		[Address(RVA = "0x17736B0", Offset = "0x17736B0", VA = "0x17736B0")]
		public InteractionObject GetInteractionObject(FullBodyBipedEffector effectorType)
		{
			return null;
		}

		[Token(Token = "0x600071E")]
		[Address(RVA = "0x177373C", Offset = "0x177373C", VA = "0x177373C")]
		public float GetProgress(FullBodyBipedEffector effectorType)
		{
			return default(float);
		}

		[Token(Token = "0x600071F")]
		[Address(RVA = "0x17737F0", Offset = "0x17737F0", VA = "0x17737F0")]
		public float GetMinActiveProgress()
		{
			return default(float);
		}

		[Token(Token = "0x6000720")]
		[Address(RVA = "0x17738D4", Offset = "0x17738D4", VA = "0x17738D4")]
		public bool TriggerInteraction(int index, bool interrupt)
		{
			return default(bool);
		}

		[Token(Token = "0x6000721")]
		[Address(RVA = "0x1773B78", Offset = "0x1773B78", VA = "0x1773B78")]
		public bool TriggerInteraction(int index, bool interrupt, out InteractionObject interactionObject)
		{
			return default(bool);
		}

		[Token(Token = "0x6000722")]
		[Address(RVA = "0x1773D68", Offset = "0x1773D68", VA = "0x1773D68")]
		public bool TriggerInteraction(int index, bool interrupt, out InteractionTarget interactionTarget)
		{
			return default(bool);
		}

		[Token(Token = "0x6000723")]
		[Address(RVA = "0x1773FEC", Offset = "0x1773FEC", VA = "0x1773FEC")]
		public InteractionTrigger.Range GetClosestInteractionRange()
		{
			return null;
		}

		[Token(Token = "0x6000724")]
		[Address(RVA = "0x17742E0", Offset = "0x17742E0", VA = "0x17742E0")]
		public InteractionObject GetClosestInteractionObjectInRange()
		{
			return null;
		}

		[Token(Token = "0x6000725")]
		[Address(RVA = "0x1774324", Offset = "0x1774324", VA = "0x1774324")]
		public InteractionTarget GetClosestInteractionTargetInRange()
		{
			return null;
		}

		[Token(Token = "0x6000726")]
		[Address(RVA = "0x177439C", Offset = "0x177439C", VA = "0x177439C")]
		public InteractionObject[] GetClosestInteractionObjectsInRange()
		{
			return null;
		}

		[Token(Token = "0x6000727")]
		[Address(RVA = "0x17744D4", Offset = "0x17744D4", VA = "0x17744D4")]
		public InteractionTarget[] GetClosestInteractionTargetsInRange()
		{
			return null;
		}

		[Token(Token = "0x6000728")]
		[Address(RVA = "0x177464C", Offset = "0x177464C", VA = "0x177464C")]
		public bool TriggerEffectorsReady(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000729")]
		[Address(RVA = "0x17748F4", Offset = "0x17748F4", VA = "0x17748F4")]
		public InteractionTrigger.Range GetTriggerRange(int index)
		{
			return null;
		}

		[Token(Token = "0x600072A")]
		[Address(RVA = "0x17740EC", Offset = "0x17740EC", VA = "0x17740EC")]
		public int GetClosestTriggerIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6000731")]
		[Address(RVA = "0x1774A54", Offset = "0x1774A54", VA = "0x1774A54")]
		public void Start()
		{
		}

		[Token(Token = "0x6000732")]
		[Address(RVA = "0x1775208", Offset = "0x1775208", VA = "0x1775208")]
		private void InteractionPause(FullBodyBipedEffector effector, InteractionObject interactionObject)
		{
		}

		[Token(Token = "0x6000733")]
		[Address(RVA = "0x1775228", Offset = "0x1775228", VA = "0x1775228")]
		private void InteractionResume(FullBodyBipedEffector effector, InteractionObject interactionObject)
		{
		}

		[Token(Token = "0x6000734")]
		[Address(RVA = "0x1775244", Offset = "0x1775244", VA = "0x1775244")]
		private void InteractionStop(FullBodyBipedEffector effector, InteractionObject interactionObject)
		{
		}

		[Token(Token = "0x6000735")]
		[Address(RVA = "0x1775260", Offset = "0x1775260", VA = "0x1775260")]
		private void LookAtInteraction(FullBodyBipedEffector effector, InteractionObject interactionObject)
		{
		}

		[Token(Token = "0x6000736")]
		[Address(RVA = "0x17752C0", Offset = "0x17752C0", VA = "0x17752C0")]
		public void OnTriggerEnter(Collider c)
		{
		}

		[Token(Token = "0x6000737")]
		[Address(RVA = "0x17753DC", Offset = "0x17753DC", VA = "0x17753DC")]
		public void OnTriggerExit(Collider c)
		{
		}

		[Token(Token = "0x6000738")]
		[Address(RVA = "0x17754D8", Offset = "0x17754D8", VA = "0x17754D8")]
		private bool ContactIsInRange(int index, out int bestRangeIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6000739")]
		[Address(RVA = "0x1775838", Offset = "0x1775838", VA = "0x1775838")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x600073A")]
		[Address(RVA = "0x1775950", Offset = "0x1775950", VA = "0x1775950")]
		public void Update()
		{
		}

		[Token(Token = "0x600073B")]
		[Address(RVA = "0x1775B68", Offset = "0x1775B68", VA = "0x1775B68")]
		private void Raycasting()
		{
		}

		[Token(Token = "0x600073C")]
		[Address(RVA = "0x1774F68", Offset = "0x1774F68", VA = "0x1774F68")]
		private void UpdateTriggerEventBroadcasting()
		{
		}

		[Token(Token = "0x600073D")]
		[Address(RVA = "0x1775CA8", Offset = "0x1775CA8", VA = "0x1775CA8")]
		private void UpdateEffectors()
		{
		}

		[Token(Token = "0x600073E")]
		[Address(RVA = "0x1775DD4", Offset = "0x1775DD4", VA = "0x1775DD4")]
		private void OnPreFBBIK()
		{
		}

		[Token(Token = "0x600073F")]
		[Address(RVA = "0x1775E6C", Offset = "0x1775E6C", VA = "0x1775E6C")]
		private void OnPostFBBIK()
		{
		}

		[Token(Token = "0x6000740")]
		[Address(RVA = "0x1775F44", Offset = "0x1775F44", VA = "0x1775F44")]
		private void OnFixTransforms()
		{
		}

		[Token(Token = "0x6000741")]
		[Address(RVA = "0x1775F5C", Offset = "0x1775F5C", VA = "0x1775F5C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000742")]
		[Address(RVA = "0x1772E74", Offset = "0x1772E74", VA = "0x1772E74")]
		private bool IsValid(bool log)
		{
			return default(bool);
		}

		[Token(Token = "0x6000743")]
		[Address(RVA = "0x1773A74", Offset = "0x1773A74", VA = "0x1773A74")]
		private bool TriggerIndexIsValid(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000744")]
		[Address(RVA = "0x1776320", Offset = "0x1776320", VA = "0x1776320")]
		public InteractionSystem()
		{
		}
	}
	[Token(Token = "0x20000E1")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE212FC", Offset = "0xE212FC")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xE212FC", Offset = "0xE212FC")]
	public class InteractionTarget : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20000E2")]
		public enum RotationMode
		{
			[Token(Token = "0x40006B2")]
			TwoDOF,
			[Token(Token = "0x40006B3")]
			ThreeDOF
		}

		[Serializable]
		[Token(Token = "0x20000E3")]
		public class Multiplier
		{
			[Token(Token = "0x40006B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE26EBC", Offset = "0xE26EBC")]
			public InteractionObject.WeightCurve.Type curve;

			[Token(Token = "0x40006B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE26EF4", Offset = "0xE26EF4")]
			public float multiplier;

			[Token(Token = "0x6000759")]
			[Address(RVA = "0x1776B70", Offset = "0x1776B70", VA = "0x1776B70")]
			public Multiplier()
			{
			}
		}

		[Token(Token = "0x40006A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE26C70", Offset = "0xE26C70")]
		public FullBodyBipedEffector effectorType;

		[Token(Token = "0x40006A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE26CA8", Offset = "0xE26CA8")]
		public Multiplier[] multipliers;

		[Token(Token = "0x40006A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE26CE0", Offset = "0xE26CE0")]
		public float interactionSpeedMlp;

		[Token(Token = "0x40006A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE26D18", Offset = "0xE26D18")]
		public Transform pivot;

		[Token(Token = "0x40006A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE26D50", Offset = "0xE26D50")]
		public RotationMode rotationMode;

		[Token(Token = "0x40006AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE26D88", Offset = "0xE26D88")]
		public Vector3 twistAxis;

		[Token(Token = "0x40006AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE26DC0", Offset = "0xE26DC0")]
		public float twistWeight;

		[Token(Token = "0x40006AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE26DF8", Offset = "0xE26DF8")]
		public float swingWeight;

		[Token(Token = "0x40006AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE26E30", Offset = "0xE26E30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE26E30", Offset = "0xE26E30")]
		public float threeDOFWeight;

		[Token(Token = "0x40006AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE26E84", Offset = "0xE26E84")]
		public bool rotateOnce;

		[Token(Token = "0x40006AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion defaultLocalRotation;

		[Token(Token = "0x40006B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform lastPivot;

		[Token(Token = "0x600074D")]
		[Address(RVA = "0x1776880", Offset = "0x1776880", VA = "0x1776880")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2DB8C", Offset = "0xE2DB8C")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x600074E")]
		[Address(RVA = "0x17768CC", Offset = "0x17768CC", VA = "0x17768CC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2DBC4", Offset = "0xE2DBC4")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x600074F")]
		[Address(RVA = "0x1776918", Offset = "0x1776918", VA = "0x1776918")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2DBFC", Offset = "0xE2DBFC")]
		private void OpenTutorial1()
		{
		}

		[Token(Token = "0x6000750")]
		[Address(RVA = "0x1776964", Offset = "0x1776964", VA = "0x1776964")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2DC34", Offset = "0xE2DC34")]
		private void OpenTutorial2()
		{
		}

		[Token(Token = "0x6000751")]
		[Address(RVA = "0x17769B0", Offset = "0x17769B0", VA = "0x17769B0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2DC6C", Offset = "0xE2DC6C")]
		private void OpenTutorial3()
		{
		}

		[Token(Token = "0x6000752")]
		[Address(RVA = "0x17769FC", Offset = "0x17769FC", VA = "0x17769FC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2DCA4", Offset = "0xE2DCA4")]
		private void OpenTutorial4()
		{
		}

		[Token(Token = "0x6000753")]
		[Address(RVA = "0x1776A48", Offset = "0x1776A48", VA = "0x1776A48")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2DCDC", Offset = "0xE2DCDC")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000754")]
		[Address(RVA = "0x1776A94", Offset = "0x1776A94", VA = "0x1776A94")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2DD14", Offset = "0xE2DD14")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000755")]
		[Address(RVA = "0x1771F4C", Offset = "0x1771F4C", VA = "0x1771F4C")]
		public float GetValue(InteractionObject.WeightCurve.Type curveType)
		{
			return default(float);
		}

		[Token(Token = "0x6000756")]
		[Address(RVA = "0x1770E68", Offset = "0x1770E68", VA = "0x1770E68")]
		public void ResetRotation()
		{
		}

		[Token(Token = "0x6000757")]
		[Address(RVA = "0x176EF50", Offset = "0x176EF50", VA = "0x176EF50")]
		public void RotateTo(Transform bone)
		{
		}

		[Token(Token = "0x6000758")]
		[Address(RVA = "0x1776AE0", Offset = "0x1776AE0", VA = "0x1776AE0")]
		public InteractionTarget()
		{
		}
	}
	[Token(Token = "0x20000E4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE2135C", Offset = "0xE2135C")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xE2135C", Offset = "0xE2135C")]
	public class InteractionTrigger : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20000E5")]
		public class CharacterPosition
		{
			[Token(Token = "0x40006B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE26F64", Offset = "0xE26F64")]
			public bool use;

			[Token(Token = "0x40006B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE26F9C", Offset = "0xE26F9C")]
			public Vector2 offset;

			[Token(Token = "0x40006B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE26FD4", Offset = "0xE26FD4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE26FD4", Offset = "0xE26FD4")]
			public float angleOffset;

			[Token(Token = "0x40006BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE27030", Offset = "0xE27030")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE27030", Offset = "0xE27030")]
			public float maxAngle;

			[Token(Token = "0x40006BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE27088", Offset = "0xE27088")]
			public float radius;

			[Token(Token = "0x40006BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE270C0", Offset = "0xE270C0")]
			public bool orbit;

			[Token(Token = "0x40006BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE270F8", Offset = "0xE270F8")]
			public bool fixYAxis;

			[Token(Token = "0x170000EC")]
			public Vector3 offset3D
			{
				[Token(Token = "0x6000761")]
				[Address(RVA = "0x1777398", Offset = "0x1777398", VA = "0x1777398")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x170000ED")]
			public Vector3 direction3D
			{
				[Token(Token = "0x6000762")]
				[Address(RVA = "0x17773D4", Offset = "0x17773D4", VA = "0x17773D4")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x6000763")]
			[Address(RVA = "0x17774CC", Offset = "0x17774CC", VA = "0x17774CC")]
			public bool IsInRange(Transform character, Transform trigger, out float error)
			{
				return default(bool);
			}

			[Token(Token = "0x6000764")]
			[Address(RVA = "0x1777B48", Offset = "0x1777B48", VA = "0x1777B48")]
			public CharacterPosition()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20000E6")]
		public class CameraPosition
		{
			[Token(Token = "0x40006BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE27130", Offset = "0xE27130")]
			public Collider lookAtTarget;

			[Token(Token = "0x40006BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE27168", Offset = "0xE27168")]
			public Vector3 direction;

			[Token(Token = "0x40006C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE271A0", Offset = "0xE271A0")]
			public float maxDistance;

			[Token(Token = "0x40006C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE271D8", Offset = "0xE271D8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE271D8", Offset = "0xE271D8")]
			public float maxAngle;

			[Token(Token = "0x40006C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE27230", Offset = "0xE27230")]
			public bool fixYAxis;

			[Token(Token = "0x6000765")]
			[Address(RVA = "0x1776E84", Offset = "0x1776E84", VA = "0x1776E84")]
			public Quaternion GetRotation()
			{
				return default(Quaternion);
			}

			[Token(Token = "0x6000766")]
			[Address(RVA = "0x177702C", Offset = "0x177702C", VA = "0x177702C")]
			public bool IsInRange(Transform raycastFrom, RaycastHit hit, Transform trigger, out float error)
			{
				return default(bool);
			}

			[Token(Token = "0x6000767")]
			[Address(RVA = "0x177730C", Offset = "0x177730C", VA = "0x177730C")]
			public CameraPosition()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20000E7")]
		public class Range
		{
			[Serializable]
			[Token(Token = "0x20000E8")]
			public class Interaction
			{
				[Token(Token = "0x40006C8")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE27330", Offset = "0xE27330")]
				public InteractionObject interactionObject;

				[Token(Token = "0x40006C9")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE27368", Offset = "0xE27368")]
				public FullBodyBipedEffector[] effectors;

				[Token(Token = "0x600076A")]
				[Address(RVA = "0x1777B6C", Offset = "0x1777B6C", VA = "0x1777B6C")]
				public Interaction()
				{
				}
			}

			[Token(Token = "0x40006C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[HideInInspector]
			public string name;

			[Token(Token = "0x40006C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[HideInInspector]
			public bool show;

			[Token(Token = "0x40006C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE27288", Offset = "0xE27288")]
			public CharacterPosition characterPosition;

			[Token(Token = "0x40006C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE272C0", Offset = "0xE272C0")]
			public CameraPosition cameraPosition;

			[Token(Token = "0x40006C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE272F8", Offset = "0xE272F8")]
			public Interaction[] interactions;

			[Token(Token = "0x6000768")]
			[Address(RVA = "0x1776CF4", Offset = "0x1776CF4", VA = "0x1776CF4")]
			public bool IsInRange(Transform character, Transform raycastFrom, RaycastHit raycastHit, Transform trigger, out float maxError)
			{
				return default(bool);
			}

			[Token(Token = "0x6000769")]
			[Address(RVA = "0x1777B5C", Offset = "0x1777B5C", VA = "0x1777B5C")]
			public Range()
			{
			}
		}

		[Token(Token = "0x40006B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE26F2C", Offset = "0xE26F2C")]
		public Range[] ranges;

		[Token(Token = "0x600075A")]
		[Address(RVA = "0x1776B78", Offset = "0x1776B78", VA = "0x1776B78")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2DD4C", Offset = "0xE2DD4C")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x600075B")]
		[Address(RVA = "0x1776BC4", Offset = "0x1776BC4", VA = "0x1776BC4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2DD84", Offset = "0xE2DD84")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x600075C")]
		[Address(RVA = "0x1776C10", Offset = "0x1776C10", VA = "0x1776C10")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2DDBC", Offset = "0xE2DDBC")]
		private void OpenTutorial4()
		{
		}

		[Token(Token = "0x600075D")]
		[Address(RVA = "0x1776C5C", Offset = "0x1776C5C", VA = "0x1776C5C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2DDF4", Offset = "0xE2DDF4")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x600075E")]
		[Address(RVA = "0x1776CA8", Offset = "0x1776CA8", VA = "0x1776CA8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2DE2C", Offset = "0xE2DE2C")]
		private void ASThread()
		{
		}

		[Token(Token = "0x600075F")]
		[Address(RVA = "0x177567C", Offset = "0x177567C", VA = "0x177567C")]
		public int GetBestRangeIndex(Transform character, Transform raycastFrom, RaycastHit raycastHit)
		{
			return default(int);
		}

		[Token(Token = "0x6000760")]
		[Address(RVA = "0x1776E18", Offset = "0x1776E18", VA = "0x1776E18")]
		public InteractionTrigger()
		{
		}
	}
	[Token(Token = "0x20000E9")]
	public class GenericPoser : Poser
	{
		[Serializable]
		[Token(Token = "0x20000EA")]
		public class Map
		{
			[Token(Token = "0x40006CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform bone;

			[Token(Token = "0x40006CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform target;

			[Token(Token = "0x40006CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Vector3 defaultLocalPosition;

			[Token(Token = "0x40006CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private Quaternion defaultLocalRotation;

			[Token(Token = "0x6000772")]
			[Address(RVA = "0x15B3318", Offset = "0x15B3318", VA = "0x15B3318")]
			public Map(Transform bone, Transform target)
			{
			}

			[Token(Token = "0x6000773")]
			[Address(RVA = "0x15B3738", Offset = "0x15B3738", VA = "0x15B3738")]
			public void StoreDefaultState()
			{
			}

			[Token(Token = "0x6000774")]
			[Address(RVA = "0x15B36EC", Offset = "0x15B36EC", VA = "0x15B36EC")]
			public void FixTransform()
			{
			}

			[Token(Token = "0x6000775")]
			[Address(RVA = "0x15B34E4", Offset = "0x15B34E4", VA = "0x15B34E4")]
			public void Update(float localRotationWeight, float localPositionWeight)
			{
			}
		}

		[Token(Token = "0x40006CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Map[] maps;

		[Token(Token = "0x600076B")]
		[Address(RVA = "0x15B3024", Offset = "0x15B3024", VA = "0x15B3024", Slot = "7")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2DE64", Offset = "0xE2DE64")]
		public override void AutoMapping()
		{
		}

		[Token(Token = "0x600076C")]
		[Address(RVA = "0x15B33D8", Offset = "0x15B33D8", VA = "0x15B33D8", Slot = "8")]
		protected override void InitiatePoser()
		{
		}

		[Token(Token = "0x600076D")]
		[Address(RVA = "0x15B33DC", Offset = "0x15B33DC", VA = "0x15B33DC", Slot = "9")]
		protected override void UpdatePoser()
		{
		}

		[Token(Token = "0x600076E")]
		[Address(RVA = "0x15B3684", Offset = "0x15B3684", VA = "0x15B3684", Slot = "10")]
		protected override void FixPoserTransforms()
		{
		}

		[Token(Token = "0x600076F")]
		[Address(RVA = "0x15B3370", Offset = "0x15B3370", VA = "0x15B3370")]
		private void StoreDefaultState()
		{
		}

		[Token(Token = "0x6000770")]
		[Address(RVA = "0x15B3278", Offset = "0x15B3278", VA = "0x15B3278")]
		private Transform GetTargetNamed(string tName, Transform[] array)
		{
			return null;
		}

		[Token(Token = "0x6000771")]
		[Address(RVA = "0x15B3788", Offset = "0x15B3788", VA = "0x15B3788")]
		public GenericPoser()
		{
		}
	}
	[Token(Token = "0x20000EB")]
	public class HandPoser : Poser
	{
		[Token(Token = "0x40006CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Transform[] children;

		[Token(Token = "0x40006D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform _poseRoot;

		[Token(Token = "0x40006D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform[] poseChildren;

		[Token(Token = "0x40006D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3[] defaultLocalPositions;

		[Token(Token = "0x40006D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Quaternion[] defaultLocalRotations;

		[Token(Token = "0x6000776")]
		[Address(RVA = "0x1BFD608", Offset = "0x1BFD608", VA = "0x1BFD608", Slot = "7")]
		public override void AutoMapping()
		{
		}

		[Token(Token = "0x6000777")]
		[Address(RVA = "0x1BFD6D0", Offset = "0x1BFD6D0", VA = "0x1BFD6D0", Slot = "8")]
		protected override void InitiatePoser()
		{
		}

		[Token(Token = "0x6000778")]
		[Address(RVA = "0x1BFD8B4", Offset = "0x1BFD8B4", VA = "0x1BFD8B4", Slot = "10")]
		protected override void FixPoserTransforms()
		{
		}

		[Token(Token = "0x6000779")]
		[Address(RVA = "0x1BFD9B0", Offset = "0x1BFD9B0", VA = "0x1BFD9B0", Slot = "9")]
		protected override void UpdatePoser()
		{
		}

		[Token(Token = "0x600077A")]
		[Address(RVA = "0x1BFD738", Offset = "0x1BFD738", VA = "0x1BFD738")]
		protected void StoreDefaultState()
		{
		}

		[Token(Token = "0x600077B")]
		[Address(RVA = "0x1BFDD60", Offset = "0x1BFDD60", VA = "0x1BFDD60")]
		public HandPoser()
		{
		}
	}
	[Token(Token = "0x20000EC")]
	public abstract class Poser : SolverManager
	{
		[Token(Token = "0x40006D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform poseRoot;

		[Token(Token = "0x40006D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE273A0", Offset = "0xE273A0")]
		public float weight;

		[Token(Token = "0x40006D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE273B8", Offset = "0xE273B8")]
		public float localRotationWeight;

		[Token(Token = "0x40006D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE273D0", Offset = "0xE273D0")]
		public float localPositionWeight;

		[Token(Token = "0x40006D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool initiated;

		[Token(Token = "0x600077C")]
		public abstract void AutoMapping();

		[Token(Token = "0x600077D")]
		[Address(RVA = "0x177A808", Offset = "0x177A808", VA = "0x177A808")]
		public void UpdateManual()
		{
		}

		[Token(Token = "0x600077E")]
		protected abstract void InitiatePoser();

		[Token(Token = "0x600077F")]
		protected abstract void UpdatePoser();

		[Token(Token = "0x6000780")]
		protected abstract void FixPoserTransforms();

		[Token(Token = "0x6000781")]
		[Address(RVA = "0x177A814", Offset = "0x177A814", VA = "0x177A814", Slot = "5")]
		protected override void UpdateSolver()
		{
		}

		[Token(Token = "0x6000782")]
		[Address(RVA = "0x177A868", Offset = "0x177A868", VA = "0x177A868", Slot = "4")]
		protected override void InitiateSolver()
		{
		}

		[Token(Token = "0x6000783")]
		[Address(RVA = "0x177A8A4", Offset = "0x177A8A4", VA = "0x177A8A4", Slot = "6")]
		protected override void FixTransforms()
		{
		}

		[Token(Token = "0x6000784")]
		[Address(RVA = "0x177A8BC", Offset = "0x177A8BC", VA = "0x177A8BC")]
		protected Poser()
		{
		}
	}
	[Token(Token = "0x20000ED")]
	public class RagdollUtility : MonoBehaviour
	{
		[Token(Token = "0x20000EE")]
		public class Rigidbone
		{
			[Token(Token = "0x40006E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody r;

			[Token(Token = "0x40006EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform t;

			[Token(Token = "0x40006EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Collider collider;

			[Token(Token = "0x40006EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Joint joint;

			[Token(Token = "0x40006ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Rigidbody c;

			[Token(Token = "0x40006EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool updateAnchor;

			[Token(Token = "0x40006EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public Vector3 deltaPosition;

			[Token(Token = "0x40006F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Quaternion deltaRotation;

			[Token(Token = "0x40006F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public float deltaTime;

			[Token(Token = "0x40006F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public Vector3 lastPosition;

			[Token(Token = "0x40006F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Quaternion lastRotation;

			[Token(Token = "0x6000797")]
			[Address(RVA = "0x177AEEC", Offset = "0x177AEEC", VA = "0x177AEEC")]
			public Rigidbone(Rigidbody r)
			{
			}

			[Token(Token = "0x6000798")]
			[Address(RVA = "0x177BB64", Offset = "0x177BB64", VA = "0x177BB64")]
			public void RecordVelocity()
			{
			}

			[Token(Token = "0x6000799")]
			[Address(RVA = "0x177B948", Offset = "0x177B948", VA = "0x177B948")]
			public void WakeUp(float velocityWeight, float angularVelocityWeight)
			{
			}
		}

		[Token(Token = "0x20000EF")]
		public class Child
		{
			[Token(Token = "0x40006F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform t;

			[Token(Token = "0x40006F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 localPosition;

			[Token(Token = "0x40006F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Quaternion localRotation;

			[Token(Token = "0x600079A")]
			[Address(RVA = "0x177B09C", Offset = "0x177B09C", VA = "0x177B09C")]
			public Child(Transform transform)
			{
			}

			[Token(Token = "0x600079B")]
			[Address(RVA = "0x177BD00", Offset = "0x177BD00", VA = "0x177BD00")]
			public void FixTransform(float weight)
			{
			}

			[Token(Token = "0x600079C")]
			[Address(RVA = "0x177BCB0", Offset = "0x177BCB0", VA = "0x177BCB0")]
			public void StoreLocalState()
			{
			}
		}

		[Token(Token = "0x20000F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE213BC", Offset = "0xE213BC")]
		private sealed class <DisableRagdollSmooth>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40006F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40006F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40006F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RagdollUtility <>4__this;

			[Token(Token = "0x170000F0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60007A0")]
				[Address(RVA = "0x177C360", Offset = "0x177C360", VA = "0x177C360", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000F1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60007A2")]
				[Address(RVA = "0x177C3C8", Offset = "0x177C3C8", VA = "0x177C3C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600079D")]
			[Address(RVA = "0x177B114", Offset = "0x177B114", VA = "0x177B114")]
			[DebuggerHidden]
			public <DisableRagdollSmooth>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x600079E")]
			[Address(RVA = "0x177C0F8", Offset = "0x177C0F8", VA = "0x177C0F8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600079F")]
			[Address(RVA = "0x177C0FC", Offset = "0x177C0FC", VA = "0x177C0FC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60007A1")]
			[Address(RVA = "0x177C368", Offset = "0x177C368", VA = "0x177C368", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40006D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE273E8", Offset = "0xE273E8")]
		public IK ik;

		[Token(Token = "0x40006DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE27420", Offset = "0xE27420")]
		public float ragdollToAnimationTime;

		[Token(Token = "0x40006DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE27458", Offset = "0xE27458")]
		public bool applyIkOnRagdoll;

		[Token(Token = "0x40006DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE27490", Offset = "0xE27490")]
		public float applyVelocity;

		[Token(Token = "0x40006DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE274C8", Offset = "0xE274C8")]
		public float applyAngularVelocity;

		[Token(Token = "0x40006DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Animator animator;

		[Token(Token = "0x40006DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Rigidbone[] rigidbones;

		[Token(Token = "0x40006E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Child[] children;

		[Token(Token = "0x40006E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool enableRagdollFlag;

		[Token(Token = "0x40006E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private AnimatorUpdateMode animatorUpdateMode;

		[Token(Token = "0x40006E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private IK[] allIKComponents;

		[Token(Token = "0x40006E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool[] fixTransforms;

		[Token(Token = "0x40006E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float ragdollWeight;

		[Token(Token = "0x40006E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float ragdollWeightV;

		[Token(Token = "0x40006E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool fixedFrame;

		[Token(Token = "0x40006E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool[] disabledIKComponents;

		[Token(Token = "0x170000EE")]
		private bool isRagdoll
		{
			[Token(Token = "0x6000790")]
			[Address(RVA = "0x177A904", Offset = "0x177A904", VA = "0x177A904")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000EF")]
		private bool ikUsed
		{
			[Token(Token = "0x6000792")]
			[Address(RVA = "0x177B500", Offset = "0x177B500", VA = "0x177B500")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000785")]
		[Address(RVA = "0x177A8CC", Offset = "0x177A8CC", VA = "0x177A8CC")]
		public void EnableRagdoll()
		{
		}

		[Token(Token = "0x6000786")]
		[Address(RVA = "0x177A97C", Offset = "0x177A97C", VA = "0x177A97C")]
		public void DisableRagdoll()
		{
		}

		[Token(Token = "0x6000787")]
		[Address(RVA = "0x177AAB8", Offset = "0x177AAB8", VA = "0x177AAB8")]
		public void Start()
		{
		}

		[Token(Token = "0x6000788")]
		[Address(RVA = "0x177AA3C", Offset = "0x177AA3C", VA = "0x177AA3C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE2DE9C", Offset = "0xE2DE9C")]
		private IEnumerator DisableRagdollSmooth()
		{
			return null;
		}

		[Token(Token = "0x6000789")]
		[Address(RVA = "0x177B140", Offset = "0x177B140", VA = "0x177B140")]
		private void Update()
		{
		}

		[Token(Token = "0x600078A")]
		[Address(RVA = "0x177B38C", Offset = "0x177B38C", VA = "0x177B38C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600078B")]
		[Address(RVA = "0x177B444", Offset = "0x177B444", VA = "0x177B444")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600078C")]
		[Address(RVA = "0x177B684", Offset = "0x177B684", VA = "0x177B684")]
		private void AfterLastIK()
		{
		}

		[Token(Token = "0x600078D")]
		[Address(RVA = "0x177B4C4", Offset = "0x177B4C4", VA = "0x177B4C4")]
		private void AfterAnimation()
		{
		}

		[Token(Token = "0x600078E")]
		[Address(RVA = "0x177B640", Offset = "0x177B640", VA = "0x177B640")]
		private void OnFinalPose()
		{
		}

		[Token(Token = "0x600078F")]
		[Address(RVA = "0x177B720", Offset = "0x177B720", VA = "0x177B720")]
		private void RagdollEnabler()
		{
		}

		[Token(Token = "0x6000791")]
		[Address(RVA = "0x177B6B8", Offset = "0x177B6B8", VA = "0x177B6B8")]
		private void RecordVelocities()
		{
		}

		[Token(Token = "0x6000793")]
		[Address(RVA = "0x177A9D4", Offset = "0x177A9D4", VA = "0x177A9D4")]
		private void StoreLocalState()
		{
		}

		[Token(Token = "0x6000794")]
		[Address(RVA = "0x177B3CC", Offset = "0x177B3CC", VA = "0x177B3CC")]
		private void FixTransforms(float weight)
		{
		}

		[Token(Token = "0x6000795")]
		[Address(RVA = "0x177BEC8", Offset = "0x177BEC8", VA = "0x177BEC8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000796")]
		[Address(RVA = "0x177BFF0", Offset = "0x177BFF0", VA = "0x177BFF0")]
		public RagdollUtility()
		{
		}
	}
	[Token(Token = "0x20000F1")]
	public abstract class RotationLimit : MonoBehaviour
	{
		[Token(Token = "0x40006FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 axis;

		[Token(Token = "0x40006FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[HideInInspector]
		public Quaternion defaultLocalRotation;

		[Token(Token = "0x40006FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27510", Offset = "0xE27510")]
		private bool <defaultLocalRotationOverride>k__BackingField;

		[Token(Token = "0x40006FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		private bool initiated;

		[Token(Token = "0x40006FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
		private bool applicationQuit;

		[Token(Token = "0x40006FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x37")]
		private bool defaultLocalRotationSet;

		[Token(Token = "0x170000F2")]
		public Vector3 secondaryAxis
		{
			[Token(Token = "0x60007A8")]
			[Address(RVA = "0x177DCAC", Offset = "0x177DCAC", VA = "0x177DCAC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170000F3")]
		public Vector3 crossAxis
		{
			[Token(Token = "0x60007A9")]
			[Address(RVA = "0x177DCE8", Offset = "0x177DCE8", VA = "0x177DCE8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170000F4")]
		public bool defaultLocalRotationOverride
		{
			[Token(Token = "0x60007AA")]
			[Address(RVA = "0x177DDB8", Offset = "0x177DDB8", VA = "0x177DDB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2DF50", Offset = "0xE2DF50")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60007AB")]
			[Address(RVA = "0x177DDC0", Offset = "0x177DDC0", VA = "0x177DDC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2DF60", Offset = "0xE2DF60")]
			private set
			{
			}
		}

		[Token(Token = "0x60007A3")]
		[Address(RVA = "0x177D910", Offset = "0x177D910", VA = "0x177D910")]
		public void SetDefaultLocalRotation()
		{
		}

		[Token(Token = "0x60007A4")]
		[Address(RVA = "0x177D958", Offset = "0x177D958", VA = "0x177D958")]
		public void SetDefaultLocalRotation(Quaternion localRotation)
		{
		}

		[Token(Token = "0x60007A5")]
		[Address(RVA = "0x177D970", Offset = "0x177D970", VA = "0x177D970")]
		public Quaternion GetLimitedLocalRotation(Quaternion localRotation, out bool changed)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60007A6")]
		[Address(RVA = "0x177DC04", Offset = "0x177DC04", VA = "0x177DC04")]
		public bool Apply()
		{
			return default(bool);
		}

		[Token(Token = "0x60007A7")]
		[Address(RVA = "0x177DC74", Offset = "0x177DC74", VA = "0x177DC74")]
		public void Disable()
		{
		}

		[Token(Token = "0x60007AC")]
		protected abstract Quaternion LimitRotation(Quaternion rotation);

		[Token(Token = "0x60007AD")]
		[Address(RVA = "0x177DB14", Offset = "0x177DB14", VA = "0x177DB14")]
		private void Awake()
		{
		}

		[Token(Token = "0x60007AE")]
		[Address(RVA = "0x177DDCC", Offset = "0x177DDCC", VA = "0x177DDCC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60007AF")]
		[Address(RVA = "0x177DDD0", Offset = "0x177DDD0", VA = "0x177DDD0")]
		public void LogWarning(string message)
		{
		}

		[Token(Token = "0x60007B0")]
		[Address(RVA = "0x177DE04", Offset = "0x177DE04", VA = "0x177DE04")]
		protected static Quaternion Limit1DOF(Quaternion rotation, Vector3 axis)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60007B1")]
		[Address(RVA = "0x177DEE8", Offset = "0x177DEE8", VA = "0x177DEE8")]
		protected static Quaternion LimitTwist(Quaternion rotation, Vector3 axis, Vector3 orthoAxis, float twistLimit)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60007B2")]
		[Address(RVA = "0x177E164", Offset = "0x177E164", VA = "0x177E164")]
		protected static float GetOrthogonalAngle(Vector3 v1, Vector3 v2, Vector3 normal)
		{
			return default(float);
		}

		[Token(Token = "0x60007B3")]
		[Address(RVA = "0x177E220", Offset = "0x177E220", VA = "0x177E220")]
		protected RotationLimit()
		{
		}
	}
	[Token(Token = "0x20000F2")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE213CC", Offset = "0xE213CC")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xE213CC", Offset = "0xE213CC")]
	public class RotationLimitAngle : RotationLimit
	{
		[Token(Token = "0x4000700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE27520", Offset = "0xE27520")]
		public float limit;

		[Token(Token = "0x4000701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE2753C", Offset = "0xE2753C")]
		public float twistLimit;

		[Token(Token = "0x60007B4")]
		[Address(RVA = "0x177E298", Offset = "0x177E298", VA = "0x177E298")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2DF70", Offset = "0xE2DF70")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x60007B5")]
		[Address(RVA = "0x177E2E4", Offset = "0x177E2E4", VA = "0x177E2E4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2DFA8", Offset = "0xE2DFA8")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x60007B6")]
		[Address(RVA = "0x177E330", Offset = "0x177E330", VA = "0x177E330")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2DFE0", Offset = "0xE2DFE0")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x60007B7")]
		[Address(RVA = "0x177E37C", Offset = "0x177E37C", VA = "0x177E37C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2E018", Offset = "0xE2E018")]
		private void ASThread()
		{
		}

		[Token(Token = "0x60007B8")]
		[Address(RVA = "0x177E3C8", Offset = "0x177E3C8", VA = "0x177E3C8", Slot = "4")]
		protected override Quaternion LimitRotation(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60007B9")]
		[Address(RVA = "0x177E480", Offset = "0x177E480", VA = "0x177E480")]
		private Quaternion LimitSwing(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60007BA")]
		[Address(RVA = "0x177E6C8", Offset = "0x177E6C8", VA = "0x177E6C8")]
		public RotationLimitAngle()
		{
		}
	}
	[Token(Token = "0x20000F3")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE2142C", Offset = "0xE2142C")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xE2142C", Offset = "0xE2142C")]
	public class RotationLimitHinge : RotationLimit
	{
		[Token(Token = "0x4000702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool useLimits;

		[Token(Token = "0x4000703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float min;

		[Token(Token = "0x4000704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float max;

		[Token(Token = "0x4000705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[HideInInspector]
		public float zeroAxisDisplayOffset;

		[Token(Token = "0x4000706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float lastAngle;

		[Token(Token = "0x60007BB")]
		[Address(RVA = "0x177E6D8", Offset = "0x177E6D8", VA = "0x177E6D8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2E050", Offset = "0xE2E050")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x60007BC")]
		[Address(RVA = "0x177E724", Offset = "0x177E724", VA = "0x177E724")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2E088", Offset = "0xE2E088")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x60007BD")]
		[Address(RVA = "0x177E770", Offset = "0x177E770", VA = "0x177E770")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2E0C0", Offset = "0xE2E0C0")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x60007BE")]
		[Address(RVA = "0x177E7BC", Offset = "0x177E7BC", VA = "0x177E7BC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2E0F8", Offset = "0xE2E0F8")]
		private void ASThread()
		{
		}

		[Token(Token = "0x60007BF")]
		[Address(RVA = "0x177E808", Offset = "0x177E808", VA = "0x177E808", Slot = "4")]
		protected override Quaternion LimitRotation(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60007C0")]
		[Address(RVA = "0x177E80C", Offset = "0x177E80C", VA = "0x177E80C")]
		private Quaternion LimitHinge(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60007C1")]
		[Address(RVA = "0x177EAB8", Offset = "0x177EAB8", VA = "0x177EAB8")]
		public RotationLimitHinge()
		{
		}
	}
	[Token(Token = "0x20000F4")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xE2148C", Offset = "0xE2148C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE2148C", Offset = "0xE2148C")]
	public class RotationLimitPolygonal : RotationLimit
	{
		[Serializable]
		[Token(Token = "0x20000F5")]
		public class ReachCone
		{
			[Token(Token = "0x400070C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3[] tetrahedron;

			[Token(Token = "0x400070D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float volume;

			[Token(Token = "0x400070E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 S;

			[Token(Token = "0x400070F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 B;

			[Token(Token = "0x170000F5")]
			public Vector3 a
			{
				[Token(Token = "0x60007D2")]
				[Address(RVA = "0x1780AE0", Offset = "0x1780AE0", VA = "0x1780AE0")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x170000F6")]
			public Vector3 b
			{
				[Token(Token = "0x60007D3")]
				[Address(RVA = "0x1780B1C", Offset = "0x1780B1C", VA = "0x1780B1C")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x170000F7")]
			public Vector3 c
			{
				[Token(Token = "0x60007D4")]
				[Address(RVA = "0x1780B58", Offset = "0x1780B58", VA = "0x1780B58")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x170000F8")]
			public bool isValid
			{
				[Token(Token = "0x60007D6")]
				[Address(RVA = "0x177FC24", Offset = "0x177FC24", VA = "0x177FC24")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x60007D5")]
			[Address(RVA = "0x1780270", Offset = "0x1780270", VA = "0x1780270")]
			public ReachCone(Vector3 _o, Vector3 _a, Vector3 _b, Vector3 _c)
			{
			}

			[Token(Token = "0x60007D7")]
			[Address(RVA = "0x17803E4", Offset = "0x17803E4", VA = "0x17803E4")]
			public void Calculate()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20000F6")]
		public class LimitPoint
		{
			[Token(Token = "0x4000710")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 point;

			[Token(Token = "0x4000711")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float tangentWeight;

			[Token(Token = "0x60007D8")]
			[Address(RVA = "0x177FC34", Offset = "0x177FC34", VA = "0x177FC34")]
			public LimitPoint()
			{
			}
		}

		[Token(Token = "0x4000707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE27568", Offset = "0xE27568")]
		public float twistLimit;

		[Token(Token = "0x4000708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE27584", Offset = "0xE27584")]
		public int smoothIterations;

		[Token(Token = "0x4000709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public LimitPoint[] points;

		[Token(Token = "0x400070A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public Vector3[] P;

		[Token(Token = "0x400070B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public ReachCone[] reachCones;

		[Token(Token = "0x60007C2")]
		[Address(RVA = "0x177EAD0", Offset = "0x177EAD0", VA = "0x177EAD0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2E130", Offset = "0xE2E130")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x60007C3")]
		[Address(RVA = "0x177EB1C", Offset = "0x177EB1C", VA = "0x177EB1C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2E168", Offset = "0xE2E168")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x60007C4")]
		[Address(RVA = "0x177EB68", Offset = "0x177EB68", VA = "0x177EB68")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2E1A0", Offset = "0xE2E1A0")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x60007C5")]
		[Address(RVA = "0x177EBB4", Offset = "0x177EBB4", VA = "0x177EBB4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2E1D8", Offset = "0xE2E1D8")]
		private void ASThread()
		{
		}

		[Token(Token = "0x60007C6")]
		[Address(RVA = "0x177EC00", Offset = "0x177EC00", VA = "0x177EC00")]
		public void SetLimitPoints(LimitPoint[] points)
		{
		}

		[Token(Token = "0x60007C7")]
		[Address(RVA = "0x177F144", Offset = "0x177F144", VA = "0x177F144", Slot = "4")]
		protected override Quaternion LimitRotation(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60007C8")]
		[Address(RVA = "0x177F23C", Offset = "0x177F23C", VA = "0x177F23C")]
		private void Start()
		{
		}

		[Token(Token = "0x60007C9")]
		[Address(RVA = "0x177F844", Offset = "0x177F844", VA = "0x177F844")]
		public void ResetToDefault()
		{
		}

		[Token(Token = "0x60007CA")]
		[Address(RVA = "0x177ECAC", Offset = "0x177ECAC", VA = "0x177ECAC")]
		public void BuildReachCones()
		{
		}

		[Token(Token = "0x60007CB")]
		[Address(RVA = "0x177FCB8", Offset = "0x177FCB8", VA = "0x177FCB8")]
		private Vector3[] SmoothPoints()
		{
			return null;
		}

		[Token(Token = "0x60007CC")]
		[Address(RVA = "0x17805A4", Offset = "0x17805A4", VA = "0x17805A4")]
		private float GetScalar(int k)
		{
			return default(float);
		}

		[Token(Token = "0x60007CD")]
		[Address(RVA = "0x17805E8", Offset = "0x17805E8", VA = "0x17805E8")]
		private Vector3 PointToTangentPlane(Vector3 p, float r)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60007CE")]
		[Address(RVA = "0x1780730", Offset = "0x1780730", VA = "0x1780730")]
		private Vector3 TangentPointToSphere(Vector3 q, float r)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60007CF")]
		[Address(RVA = "0x177F508", Offset = "0x177F508", VA = "0x177F508")]
		private Quaternion LimitSwing(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60007D0")]
		[Address(RVA = "0x17808C0", Offset = "0x17808C0", VA = "0x17808C0")]
		private int GetReachCone(Vector3 L)
		{
			return default(int);
		}

		[Token(Token = "0x60007D1")]
		[Address(RVA = "0x1780A70", Offset = "0x1780A70", VA = "0x1780A70")]
		public RotationLimitPolygonal()
		{
		}
	}
	[Token(Token = "0x20000F7")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE214EC", Offset = "0xE214EC")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xE214EC", Offset = "0xE214EC")]
	public class RotationLimitSpline : RotationLimit
	{
		[Token(Token = "0x4000712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE275CC", Offset = "0xE275CC")]
		public float twistLimit;

		[Token(Token = "0x4000713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public AnimationCurve spline;

		[Token(Token = "0x60007D9")]
		[Address(RVA = "0x1780B94", Offset = "0x1780B94", VA = "0x1780B94")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2E210", Offset = "0xE2E210")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x60007DA")]
		[Address(RVA = "0x1780BE0", Offset = "0x1780BE0", VA = "0x1780BE0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2E248", Offset = "0xE2E248")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x60007DB")]
		[Address(RVA = "0x1780C2C", Offset = "0x1780C2C", VA = "0x1780C2C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2E280", Offset = "0xE2E280")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x60007DC")]
		[Address(RVA = "0x1780C78", Offset = "0x1780C78", VA = "0x1780C78")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xE2E2B8", Offset = "0xE2E2B8")]
		private void ASThread()
		{
		}

		[Token(Token = "0x60007DD")]
		[Address(RVA = "0x1780CC4", Offset = "0x1780CC4", VA = "0x1780CC4")]
		public void SetSpline(Keyframe[] keyframes)
		{
		}

		[Token(Token = "0x60007DE")]
		[Address(RVA = "0x1780CE0", Offset = "0x1780CE0", VA = "0x1780CE0", Slot = "4")]
		protected override Quaternion LimitRotation(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60007DF")]
		[Address(RVA = "0x1780D98", Offset = "0x1780D98", VA = "0x1780D98")]
		public Quaternion LimitSwing(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60007E0")]
		[Address(RVA = "0x17810C4", Offset = "0x17810C4", VA = "0x17810C4")]
		public RotationLimitSpline()
		{
		}
	}
	[Token(Token = "0x20000F8")]
	public class AimController : MonoBehaviour
	{
		[Token(Token = "0x20000F9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2154C", Offset = "0xE2154C")]
		private sealed class <TurnToTarget>d__37 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000733")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000734")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000735")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AimController <>4__this;

			[Token(Token = "0x170000FA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60007EB")]
				[Address(RVA = "0x15A64CC", Offset = "0x15A64CC", VA = "0x15A64CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000FB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60007ED")]
				[Address(RVA = "0x15A6534", Offset = "0x15A6534", VA = "0x15A6534", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60007E8")]
			[Address(RVA = "0x15A629C", Offset = "0x15A629C", VA = "0x15A629C")]
			[DebuggerHidden]
			public <TurnToTarget>d__37(int <>1__state)
			{
			}

			[Token(Token = "0x60007E9")]
			[Address(RVA = "0x15A639C", Offset = "0x15A639C", VA = "0x15A639C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60007EA")]
			[Address(RVA = "0x15A63A0", Offset = "0x15A63A0", VA = "0x15A63A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60007EC")]
			[Address(RVA = "0x15A64D4", Offset = "0x15A64D4", VA = "0x15A64D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE275F8", Offset = "0xE275F8")]
		public AimIK ik;

		[Token(Token = "0x4000715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE27630", Offset = "0xE27630")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE27630", Offset = "0xE27630")]
		public float weight;

		[Token(Token = "0x4000716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE27684", Offset = "0xE27684")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE27684", Offset = "0xE27684")]
		public Transform target;

		[Token(Token = "0x4000717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE276E4", Offset = "0xE276E4")]
		public float targetSwitchSmoothTime;

		[Token(Token = "0x4000718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2771C", Offset = "0xE2771C")]
		public float weightSmoothTime;

		[Token(Token = "0x4000719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE27754", Offset = "0xE27754")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE27754", Offset = "0xE27754")]
		public bool smoothTurnTowardsTarget;

		[Token(Token = "0x400071A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE277B4", Offset = "0xE277B4")]
		public float maxRadiansDelta;

		[Token(Token = "0x400071B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE277EC", Offset = "0xE277EC")]
		public float maxMagnitudeDelta;

		[Token(Token = "0x400071C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE27824", Offset = "0xE27824")]
		public float slerpSpeed;

		[Token(Token = "0x400071D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2785C", Offset = "0xE2785C")]
		public float smoothDampTime;

		[Token(Token = "0x400071E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE27894", Offset = "0xE27894")]
		public Vector3 pivotOffsetFromRoot;

		[Token(Token = "0x400071F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE278CC", Offset = "0xE278CC")]
		public float minDistance;

		[Token(Token = "0x4000720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE27904", Offset = "0xE27904")]
		public Vector3 offset;

		[Token(Token = "0x4000721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2793C", Offset = "0xE2793C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE2793C", Offset = "0xE2793C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE2793C", Offset = "0xE2793C")]
		public float maxRootAngle;

		[Token(Token = "0x4000722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE279B8", Offset = "0xE279B8")]
		public bool turnToTarget;

		[Token(Token = "0x4000723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE279F0", Offset = "0xE279F0")]
		public float turnToTargetTime;

		[Token(Token = "0x4000724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE27A28", Offset = "0xE27A28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE27A28", Offset = "0xE27A28")]
		public bool useAnimatedAimDirection;

		[Token(Token = "0x4000725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE27A88", Offset = "0xE27A88")]
		public Vector3 animatedAimDirection;

		[Token(Token = "0x4000726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Transform lastTarget;

		[Token(Token = "0x4000727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float switchWeight;

		[Token(Token = "0x4000728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float switchWeightV;

		[Token(Token = "0x4000729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float weightV;

		[Token(Token = "0x400072A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Vector3 lastPosition;

		[Token(Token = "0x400072B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 dir;

		[Token(Token = "0x400072C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private bool lastSmoothTowardsTarget;

		[Token(Token = "0x400072D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB5")]
		private bool turningToTarget;

		[Token(Token = "0x400072E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float turnToTargetMlp;

		[Token(Token = "0x400072F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private float turnToTargetMlpV;

		[Token(Token = "0x4000730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float yawV;

		[Token(Token = "0x4000731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float pitchV;

		[Token(Token = "0x4000732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float dirMagV;

		[Token(Token = "0x170000F9")]
		private Vector3 pivot
		{
			[Token(Token = "0x60007E3")]
			[Address(RVA = "0x15A5218", Offset = "0x15A5218", VA = "0x15A5218")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60007E1")]
		[Address(RVA = "0x15A5118", Offset = "0x15A5118", VA = "0x15A5118")]
		private void Start()
		{
		}

		[Token(Token = "0x60007E2")]
		[Address(RVA = "0x15A5364", Offset = "0x15A5364", VA = "0x15A5364")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60007E4")]
		[Address(RVA = "0x15A5D14", Offset = "0x15A5D14", VA = "0x15A5D14")]
		private void ApplyMinDistance()
		{
		}

		[Token(Token = "0x60007E5")]
		[Address(RVA = "0x15A5EB0", Offset = "0x15A5EB0", VA = "0x15A5EB0")]
		private void RootRotation()
		{
		}

		[Token(Token = "0x60007E6")]
		[Address(RVA = "0x15A6220", Offset = "0x15A6220", VA = "0x15A6220")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE2E2F0", Offset = "0xE2E2F0")]
		private IEnumerator TurnToTarget()
		{
			return null;
		}

		[Token(Token = "0x60007E7")]
		[Address(RVA = "0x15A62C8", Offset = "0x15A62C8", VA = "0x15A62C8")]
		public AimController()
		{
		}
	}
	[Token(Token = "0x20000FA")]
	public class AimPoser : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20000FB")]
		public class Pose
		{
			[Token(Token = "0x4000738")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool visualize;

			[Token(Token = "0x4000739")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string name;

			[Token(Token = "0x400073A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 direction;

			[Token(Token = "0x400073B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float yaw;

			[Token(Token = "0x400073C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float pitch;

			[Token(Token = "0x400073D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float angleBuffer;

			[Token(Token = "0x60007F1")]
			[Address(RVA = "0x15A6734", Offset = "0x15A6734", VA = "0x15A6734")]
			public bool IsInDirection(Vector3 d)
			{
				return default(bool);
			}

			[Token(Token = "0x60007F2")]
			[Address(RVA = "0x15A6A40", Offset = "0x15A6A40", VA = "0x15A6A40")]
			public void SetAngleBuffer(float value)
			{
			}

			[Token(Token = "0x60007F3")]
			[Address(RVA = "0x15A6A48", Offset = "0x15A6A48", VA = "0x15A6A48")]
			public Pose()
			{
			}
		}

		[Token(Token = "0x4000736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float angleBuffer;

		[Token(Token = "0x4000737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pose[] poses;

		[Token(Token = "0x60007EE")]
		[Address(RVA = "0x15A08F8", Offset = "0x15A08F8", VA = "0x15A08F8")]
		public Pose GetPose(Vector3 localDirection)
		{
			return null;
		}

		[Token(Token = "0x60007EF")]
		[Address(RVA = "0x15A09D4", Offset = "0x15A09D4", VA = "0x15A09D4")]
		public void SetPoseActive(Pose pose)
		{
		}

		[Token(Token = "0x60007F0")]
		[Address(RVA = "0x15A69CC", Offset = "0x15A69CC", VA = "0x15A69CC")]
		public AimPoser()
		{
		}
	}
	[Token(Token = "0x20000FC")]
	public class Amplifier : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x20000FD")]
		public class Body
		{
			[Serializable]
			[Token(Token = "0x20000FE")]
			public class EffectorLink
			{
				[Token(Token = "0x4000748")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE27C48", Offset = "0xE27C48")]
				public FullBodyBipedEffector effector;

				[Token(Token = "0x4000749")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE27C80", Offset = "0xE27C80")]
				public float weight;

				[Token(Token = "0x60007F8")]
				[Address(RVA = "0x15A7028", Offset = "0x15A7028", VA = "0x15A7028")]
				public EffectorLink()
				{
				}
			}

			[Token(Token = "0x400073F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE27AF8", Offset = "0xE27AF8")]
			public Transform transform;

			[Token(Token = "0x4000740")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE27B30", Offset = "0xE27B30")]
			public Transform relativeTo;

			[Token(Token = "0x4000741")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE27B68", Offset = "0xE27B68")]
			public EffectorLink[] effectorLinks;

			[Token(Token = "0x4000742")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE27BA0", Offset = "0xE27BA0")]
			public float verticalWeight;

			[Token(Token = "0x4000743")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE27BD8", Offset = "0xE27BD8")]
			public float horizontalWeight;

			[Token(Token = "0x4000744")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE27C10", Offset = "0xE27C10")]
			public float speed;

			[Token(Token = "0x4000745")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 lastRelativePos;

			[Token(Token = "0x4000746")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Vector3 smoothDelta;

			[Token(Token = "0x4000747")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private bool firstUpdate;

			[Token(Token = "0x60007F6")]
			[Address(RVA = "0x15A6BA4", Offset = "0x15A6BA4", VA = "0x15A6BA4")]
			public void Update(IKSolverFullBodyBiped solver, float w, float deltaTime)
			{
			}

			[Token(Token = "0x60007F7")]
			[Address(RVA = "0x15A7010", Offset = "0x15A7010", VA = "0x15A7010")]
			public Body()
			{
			}
		}

		[Token(Token = "0x400073E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE27AC0", Offset = "0xE27AC0")]
		public Body[] bodies;

		[Token(Token = "0x60007F4")]
		[Address(RVA = "0x15A6A64", Offset = "0x15A6A64", VA = "0x15A6A64", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x60007F5")]
		[Address(RVA = "0x15A7008", Offset = "0x15A7008", VA = "0x15A7008")]
		public Amplifier()
		{
		}
	}
	[Token(Token = "0x20000FF")]
	public class BodyTilt : OffsetModifier
	{
		[Token(Token = "0x400074A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE27CB8", Offset = "0xE27CB8")]
		public float tiltSpeed;

		[Token(Token = "0x400074B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE27CF0", Offset = "0xE27CF0")]
		public float tiltSensitivity;

		[Token(Token = "0x400074C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE27D28", Offset = "0xE27D28")]
		public OffsetPose poseLeft;

		[Token(Token = "0x400074D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE27D60", Offset = "0xE27D60")]
		public OffsetPose poseRight;

		[Token(Token = "0x400074E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float tiltAngle;

		[Token(Token = "0x400074F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 lastForward;

		[Token(Token = "0x60007F9")]
		[Address(RVA = "0x15A8438", Offset = "0x15A8438", VA = "0x15A8438", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60007FA")]
		[Address(RVA = "0x15A8480", Offset = "0x15A8480", VA = "0x15A8480", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x60007FB")]
		[Address(RVA = "0x15A86B0", Offset = "0x15A86B0", VA = "0x15A86B0")]
		public BodyTilt()
		{
		}
	}
	[Token(Token = "0x2000100")]
	public class CCDBendGoal : MonoBehaviour
	{
		[Token(Token = "0x4000750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CCDIK ik;

		[Token(Token = "0x4000751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE27D98", Offset = "0xE27D98")]
		public float weight;

		[Token(Token = "0x60007FC")]
		[Address(RVA = "0x15A86C4", Offset = "0x15A86C4", VA = "0x15A86C4")]
		private void Start()
		{
		}

		[Token(Token = "0x60007FD")]
		[Address(RVA = "0x15A8794", Offset = "0x15A8794", VA = "0x15A8794")]
		private void BeforeIK()
		{
		}

		[Token(Token = "0x60007FE")]
		[Address(RVA = "0x15A8AA4", Offset = "0x15A8AA4", VA = "0x15A8AA4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60007FF")]
		[Address(RVA = "0x15A8BC0", Offset = "0x15A8BC0", VA = "0x15A8BC0")]
		public CCDBendGoal()
		{
		}
	}
	[Token(Token = "0x2000101")]
	[ExecuteInEditMode]
	public class EditorIK : MonoBehaviour
	{
		[Token(Token = "0x4000752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE27DB0", Offset = "0xE27DB0")]
		public Animator animator;

		[Token(Token = "0x4000753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE27DE8", Offset = "0xE27DE8")]
		public EditorIKPose defaultPose;

		[Token(Token = "0x4000754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public Transform[] bones;

		[Token(Token = "0x4000755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27E30", Offset = "0xE27E30")]
		private IK <ik>k__BackingField;

		[Token(Token = "0x170000FC")]
		public IK ik
		{
			[Token(Token = "0x6000800")]
			[Address(RVA = "0x15A8DEC", Offset = "0x15A8DEC", VA = "0x15A8DEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2E3A4", Offset = "0xE2E3A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000801")]
			[Address(RVA = "0x15A8DF4", Offset = "0x15A8DF4", VA = "0x15A8DF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2E3B4", Offset = "0xE2E3B4")]
			private set
			{
			}
		}

		[Token(Token = "0x6000802")]
		[Address(RVA = "0x15A8DFC", Offset = "0x15A8DFC", VA = "0x15A8DFC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000803")]
		[Address(RVA = "0x15A8F8C", Offset = "0x15A8F8C", VA = "0x15A8F8C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000804")]
		[Address(RVA = "0x15A9214", Offset = "0x15A9214", VA = "0x15A9214")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000805")]
		[Address(RVA = "0x15A9364", Offset = "0x15A9364", VA = "0x15A9364")]
		public void StoreDefaultPose()
		{
		}

		[Token(Token = "0x6000806")]
		[Address(RVA = "0x15A9550", Offset = "0x15A9550", VA = "0x15A9550")]
		public bool Initiate()
		{
			return default(bool);
		}

		[Token(Token = "0x6000807")]
		[Address(RVA = "0x15A9768", Offset = "0x15A9768", VA = "0x15A9768")]
		public void Update()
		{
		}

		[Token(Token = "0x6000808")]
		[Address(RVA = "0x15A9A0C", Offset = "0x15A9A0C", VA = "0x15A9A0C")]
		public EditorIK()
		{
		}
	}
	[Token(Token = "0x2000102")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xE2156C", Offset = "0xE2156C")]
	public class EditorIKPose : ScriptableObject
	{
		[Token(Token = "0x4000756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3[] localPositions;

		[Token(Token = "0x4000757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Quaternion[] localRotations;

		[Token(Token = "0x170000FD")]
		public bool poseStored
		{
			[Token(Token = "0x6000809")]
			[Address(RVA = "0x15A9088", Offset = "0x15A9088", VA = "0x15A9088")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600080A")]
		[Address(RVA = "0x15A93E8", Offset = "0x15A93E8", VA = "0x15A93E8")]
		public void Store(Transform[] T)
		{
		}

		[Token(Token = "0x600080B")]
		[Address(RVA = "0x15A90AC", Offset = "0x15A90AC", VA = "0x15A90AC")]
		public bool Restore(Transform[] T)
		{
			return default(bool);
		}

		[Token(Token = "0x600080C")]
		[Address(RVA = "0x15A9A78", Offset = "0x15A9A78", VA = "0x15A9A78")]
		public EditorIKPose()
		{
		}
	}
	[Token(Token = "0x2000103")]
	public class HitReaction : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x2000104")]
		public abstract class HitPoint
		{
			[Token(Token = "0x400075A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE27EB0", Offset = "0xE27EB0")]
			public string name;

			[Token(Token = "0x400075B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE27EE8", Offset = "0xE27EE8")]
			public Collider collider;

			[Token(Token = "0x400075C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE27F20", Offset = "0xE27F20")]
			[SerializeField]
			private float crossFadeTime;

			[Token(Token = "0x400075D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27F6C", Offset = "0xE27F6C")]
			private float <crossFader>k__BackingField;

			[Token(Token = "0x400075E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27F7C", Offset = "0xE27F7C")]
			private float <timer>k__BackingField;

			[Token(Token = "0x400075F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27F8C", Offset = "0xE27F8C")]
			private Vector3 <force>k__BackingField;

			[Token(Token = "0x4000760")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE27F9C", Offset = "0xE27F9C")]
			private Vector3 <point>k__BackingField;

			[Token(Token = "0x4000761")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float length;

			[Token(Token = "0x4000762")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float crossFadeSpeed;

			[Token(Token = "0x4000763")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float lastTime;

			[Token(Token = "0x170000FF")]
			public bool inProgress
			{
				[Token(Token = "0x6000811")]
				[Address(RVA = "0x1BFDE24", Offset = "0x1BFDE24", VA = "0x1BFDE24")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000100")]
			protected float crossFader
			{
				[Token(Token = "0x6000812")]
				[Address(RVA = "0x1BFE3CC", Offset = "0x1BFE3CC", VA = "0x1BFE3CC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2E3C4", Offset = "0xE2E3C4")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6000813")]
				[Address(RVA = "0x1BFE3D4", Offset = "0x1BFE3D4", VA = "0x1BFE3D4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2E3D4", Offset = "0xE2E3D4")]
				private set
				{
				}
			}

			[Token(Token = "0x17000101")]
			protected float timer
			{
				[Token(Token = "0x6000814")]
				[Address(RVA = "0x1BFE3DC", Offset = "0x1BFE3DC", VA = "0x1BFE3DC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2E3E4", Offset = "0xE2E3E4")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6000815")]
				[Address(RVA = "0x1BFE3E4", Offset = "0x1BFE3E4", VA = "0x1BFE3E4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2E3F4", Offset = "0xE2E3F4")]
				private set
				{
				}
			}

			[Token(Token = "0x17000102")]
			protected Vector3 force
			{
				[Token(Token = "0x6000816")]
				[Address(RVA = "0x1BFE3EC", Offset = "0x1BFE3EC", VA = "0x1BFE3EC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2E404", Offset = "0xE2E404")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6000817")]
				[Address(RVA = "0x1BFE3F8", Offset = "0x1BFE3F8", VA = "0x1BFE3F8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2E414", Offset = "0xE2E414")]
				private set
				{
				}
			}

			[Token(Token = "0x17000103")]
			protected Vector3 point
			{
				[Token(Token = "0x6000818")]
				[Address(RVA = "0x1BFE404", Offset = "0x1BFE404", VA = "0x1BFE404")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2E424", Offset = "0xE2E424")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6000819")]
				[Address(RVA = "0x1BFE410", Offset = "0x1BFE410", VA = "0x1BFE410")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2E434", Offset = "0xE2E434")]
				private set
				{
				}
			}

			[Token(Token = "0x600081A")]
			[Address(RVA = "0x1BFE298", Offset = "0x1BFE298", VA = "0x1BFE298")]
			public void Hit(Vector3 force, Vector3 point)
			{
			}

			[Token(Token = "0x600081B")]
			[Address(RVA = "0x1BFDF0C", Offset = "0x1BFDF0C", VA = "0x1BFDF0C")]
			public void Apply(IKSolverFullBodyBiped solver, float weight)
			{
			}

			[Token(Token = "0x600081C")]
			protected abstract float GetLength();

			[Token(Token = "0x600081D")]
			protected abstract void CrossFadeStart();

			[Token(Token = "0x600081E")]
			protected abstract void OnApply(IKSolverFullBodyBiped solver, float weight);

			[Token(Token = "0x600081F")]
			[Address(RVA = "0x1BFE41C", Offset = "0x1BFE41C", VA = "0x1BFE41C")]
			protected HitPoint()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000105")]
		public class HitPointEffector : HitPoint
		{
			[Serializable]
			[Token(Token = "0x2000106")]
			public class EffectorLink
			{
				[Token(Token = "0x4000767")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE28054", Offset = "0xE28054")]
				public FullBodyBipedEffector effector;

				[Token(Token = "0x4000768")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2808C", Offset = "0xE2808C")]
				public float weight;

				[Token(Token = "0x4000769")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private Vector3 lastValue;

				[Token(Token = "0x400076A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
				private Vector3 current;

				[Token(Token = "0x6000824")]
				[Address(RVA = "0x1BFED98", Offset = "0x1BFED98", VA = "0x1BFED98")]
				public void Apply(IKSolverFullBodyBiped solver, Vector3 offset, float crossFader)
				{
				}

				[Token(Token = "0x6000825")]
				[Address(RVA = "0x1BFEB8C", Offset = "0x1BFEB8C", VA = "0x1BFEB8C")]
				public void CrossFadeStart()
				{
				}

				[Token(Token = "0x6000826")]
				[Address(RVA = "0x1BFEED4", Offset = "0x1BFEED4", VA = "0x1BFEED4")]
				public EffectorLink()
				{
				}
			}

			[Token(Token = "0x4000764")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE27FAC", Offset = "0xE27FAC")]
			public AnimationCurve offsetInForceDirection;

			[Token(Token = "0x4000765")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE27FE4", Offset = "0xE27FE4")]
			public AnimationCurve offsetInUpDirection;

			[Token(Token = "0x4000766")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2801C", Offset = "0xE2801C")]
			public EffectorLink[] effectorLinks;

			[Token(Token = "0x6000820")]
			[Address(RVA = "0x1BFE9A8", Offset = "0x1BFE9A8", VA = "0x1BFE9A8", Slot = "4")]
			protected override float GetLength()
			{
				return default(float);
			}

			[Token(Token = "0x6000821")]
			[Address(RVA = "0x1BFEB20", Offset = "0x1BFEB20", VA = "0x1BFEB20", Slot = "5")]
			protected override void CrossFadeStart()
			{
			}

			[Token(Token = "0x6000822")]
			[Address(RVA = "0x1BFEBA0", Offset = "0x1BFEBA0", VA = "0x1BFEBA0", Slot = "6")]
			protected override void OnApply(IKSolverFullBodyBiped solver, float weight)
			{
			}

			[Token(Token = "0x6000823")]
			[Address(RVA = "0x1BFEEC0", Offset = "0x1BFEEC0", VA = "0x1BFEEC0")]
			public HitPointEffector()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000107")]
		public class HitPointBone : HitPoint
		{
			[Serializable]
			[Token(Token = "0x2000108")]
			public class BoneLink
			{
				[Token(Token = "0x400076E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE28134", Offset = "0xE28134")]
				public Transform bone;

				[Token(Token = "0x400076F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE2816C", Offset = "0xE2816C")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2816C", Offset = "0xE2816C")]
				public float weight;

				[Token(Token = "0x4000770")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
				private Quaternion lastValue;

				[Token(Token = "0x4000771")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
				private Quaternion current;

				[Token(Token = "0x600082B")]
				[Address(RVA = "0x1BFE7B0", Offset = "0x1BFE7B0", VA = "0x1BFE7B0")]
				public void Apply(IKSolverFullBodyBiped solver, Quaternion offset, float crossFader)
				{
				}

				[Token(Token = "0x600082C")]
				[Address(RVA = "0x1BFE538", Offset = "0x1BFE538", VA = "0x1BFE538")]
				public void CrossFadeStart()
				{
				}

				[Token(Token = "0x600082D")]
				[Address(RVA = "0x1BFE920", Offset = "0x1BFE920", VA = "0x1BFE920")]
				public BoneLink()
				{
				}
			}

			[Token(Token = "0x400076B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE280C4", Offset = "0xE280C4")]
			public AnimationCurve aroundCenterOfMass;

			[Token(Token = "0x400076C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE280FC", Offset = "0xE280FC")]
			public BoneLink[] boneLinks;

			[Token(Token = "0x400076D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Rigidbody rigidbody;

			[Token(Token = "0x6000827")]
			[Address(RVA = "0x1BFE430", Offset = "0x1BFE430", VA = "0x1BFE430", Slot = "4")]
			protected override float GetLength()
			{
				return default(float);
			}

			[Token(Token = "0x6000828")]
			[Address(RVA = "0x1BFE4D4", Offset = "0x1BFE4D4", VA = "0x1BFE4D4", Slot = "5")]
			protected override void CrossFadeStart()
			{
			}

			[Token(Token = "0x6000829")]
			[Address(RVA = "0x1BFE544", Offset = "0x1BFE544", VA = "0x1BFE544", Slot = "6")]
			protected override void OnApply(IKSolverFullBodyBiped solver, float weight)
			{
			}

			[Token(Token = "0x600082A")]
			[Address(RVA = "0x1BFE90C", Offset = "0x1BFE90C", VA = "0x1BFE90C")]
			public HitPointBone()
			{
			}
		}

		[Token(Token = "0x4000758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE27E40", Offset = "0xE27E40")]
		public HitPointEffector[] effectorHitPoints;

		[Token(Token = "0x4000759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE27E78", Offset = "0xE27E78")]
		public HitPointBone[] boneHitPoints;

		[Token(Token = "0x170000FE")]
		public bool inProgress
		{
			[Token(Token = "0x600080D")]
			[Address(RVA = "0x1BFDD68", Offset = "0x1BFDD68", VA = "0x1BFDD68")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600080E")]
		[Address(RVA = "0x1BFDE38", Offset = "0x1BFDE38", VA = "0x1BFDE38", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x600080F")]
		[Address(RVA = "0x1BFE058", Offset = "0x1BFE058", VA = "0x1BFE058")]
		public void Hit(Collider collider, Vector3 force, Vector3 point)
		{
		}

		[Token(Token = "0x6000810")]
		[Address(RVA = "0x1BFE3C4", Offset = "0x1BFE3C4", VA = "0x1BFE3C4")]
		public HitReaction()
		{
		}
	}
	[Token(Token = "0x2000109")]
	public class HitReactionVRIK : OffsetModifierVRIK
	{
		[Serializable]
		[Token(Token = "0x200010A")]
		public abstract class Offset
		{
			[Token(Token = "0x4000775")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE28230", Offset = "0xE28230")]
			public string name;

			[Token(Token = "0x4000776")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE28268", Offset = "0xE28268")]
			public Collider collider;

			[Token(Token = "0x4000777")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE282A0", Offset = "0xE282A0")]
			private float crossFadeTime;

			[Token(Token = "0x4000778")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE282EC", Offset = "0xE282EC")]
			private float <crossFader>k__BackingField;

			[Token(Token = "0x4000779")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE282FC", Offset = "0xE282FC")]
			private float <timer>k__BackingField;

			[Token(Token = "0x400077A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2830C", Offset = "0xE2830C")]
			private Vector3 <force>k__BackingField;

			[Token(Token = "0x400077B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2831C", Offset = "0xE2831C")]
			private Vector3 <point>k__BackingField;

			[Token(Token = "0x400077C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float length;

			[Token(Token = "0x400077D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float crossFadeSpeed;

			[Token(Token = "0x400077E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float lastTime;

			[Token(Token = "0x17000104")]
			protected float crossFader
			{
				[Token(Token = "0x6000831")]
				[Address(RVA = "0x1BFF48C", Offset = "0x1BFF48C", VA = "0x1BFF48C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2E444", Offset = "0xE2E444")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6000832")]
				[Address(RVA = "0x1BFF494", Offset = "0x1BFF494", VA = "0x1BFF494")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2E454", Offset = "0xE2E454")]
				private set
				{
				}
			}

			[Token(Token = "0x17000105")]
			protected float timer
			{
				[Token(Token = "0x6000833")]
				[Address(RVA = "0x1BFF49C", Offset = "0x1BFF49C", VA = "0x1BFF49C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2E464", Offset = "0xE2E464")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6000834")]
				[Address(RVA = "0x1BFF4A4", Offset = "0x1BFF4A4", VA = "0x1BFF4A4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2E474", Offset = "0xE2E474")]
				private set
				{
				}
			}

			[Token(Token = "0x17000106")]
			protected Vector3 force
			{
				[Token(Token = "0x6000835")]
				[Address(RVA = "0x1BFF4AC", Offset = "0x1BFF4AC", VA = "0x1BFF4AC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2E484", Offset = "0xE2E484")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6000836")]
				[Address(RVA = "0x1BFF4B8", Offset = "0x1BFF4B8", VA = "0x1BFF4B8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2E494", Offset = "0xE2E494")]
				private set
				{
				}
			}

			[Token(Token = "0x17000107")]
			protected Vector3 point
			{
				[Token(Token = "0x6000837")]
				[Address(RVA = "0x1BFF4C4", Offset = "0x1BFF4C4", VA = "0x1BFF4C4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2E4A4", Offset = "0xE2E4A4")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6000838")]
				[Address(RVA = "0x1BFF4D0", Offset = "0x1BFF4D0", VA = "0x1BFF4D0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2E4B4", Offset = "0xE2E4B4")]
				private set
				{
				}
			}

			[Token(Token = "0x6000839")]
			[Address(RVA = "0x1BFF344", Offset = "0x1BFF344", VA = "0x1BFF344")]
			public void Hit(Vector3 force, AnimationCurve[] curves, Vector3 point)
			{
			}

			[Token(Token = "0x600083A")]
			[Address(RVA = "0x1BFEFA8", Offset = "0x1BFEFA8", VA = "0x1BFEFA8")]
			public void Apply(VRIK ik, AnimationCurve[] curves, float weight)
			{
			}

			[Token(Token = "0x600083B")]
			protected abstract float GetLength(AnimationCurve[] curves);

			[Token(Token = "0x600083C")]
			protected abstract void CrossFadeStart();

			[Token(Token = "0x600083D")]
			protected abstract void OnApply(VRIK ik, AnimationCurve[] curves, float weight);

			[Token(Token = "0x600083E")]
			[Address(RVA = "0x1BFF4DC", Offset = "0x1BFF4DC", VA = "0x1BFF4DC")]
			protected Offset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200010B")]
		public class PositionOffset : Offset
		{
			[Serializable]
			[Token(Token = "0x200010C")]
			public class PositionOffsetLink
			{
				[Token(Token = "0x4000782")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE283D4", Offset = "0xE283D4")]
				public IKSolverVR.PositionOffset positionOffset;

				[Token(Token = "0x4000783")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2840C", Offset = "0xE2840C")]
				public float weight;

				[Token(Token = "0x4000784")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private Vector3 lastValue;

				[Token(Token = "0x4000785")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
				private Vector3 current;

				[Token(Token = "0x6000843")]
				[Address(RVA = "0x1BFF998", Offset = "0x1BFF998", VA = "0x1BFF998")]
				public void Apply(VRIK ik, Vector3 offset, float crossFader)
				{
				}

				[Token(Token = "0x6000844")]
				[Address(RVA = "0x1BFF754", Offset = "0x1BFF754", VA = "0x1BFF754")]
				public void CrossFadeStart()
				{
				}

				[Token(Token = "0x6000845")]
				[Address(RVA = "0x1BFFAB4", Offset = "0x1BFFAB4", VA = "0x1BFFAB4")]
				public PositionOffsetLink()
				{
				}
			}

			[Token(Token = "0x400077F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2832C", Offset = "0xE2832C")]
			public int forceDirCurveIndex;

			[Token(Token = "0x4000780")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE28364", Offset = "0xE28364")]
			public int upDirCurveIndex;

			[Token(Token = "0x4000781")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2839C", Offset = "0xE2839C")]
			public PositionOffsetLink[] offsetLinks;

			[Token(Token = "0x600083F")]
			[Address(RVA = "0x1BFF4F0", Offset = "0x1BFF4F0", VA = "0x1BFF4F0", Slot = "4")]
			protected override float GetLength(AnimationCurve[] curves)
			{
				return default(float);
			}

			[Token(Token = "0x6000840")]
			[Address(RVA = "0x1BFF6E8", Offset = "0x1BFF6E8", VA = "0x1BFF6E8", Slot = "5")]
			protected override void CrossFadeStart()
			{
			}

			[Token(Token = "0x6000841")]
			[Address(RVA = "0x1BFF768", Offset = "0x1BFF768", VA = "0x1BFF768", Slot = "6")]
			protected override void OnApply(VRIK ik, AnimationCurve[] curves, float weight)
			{
			}

			[Token(Token = "0x6000842")]
			[Address(RVA = "0x1BFFA98", Offset = "0x1BFFA98", VA = "0x1BFFA98")]
			public PositionOffset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200010D")]
		public class RotationOffset : Offset
		{
			[Serializable]
			[Token(Token = "0x200010E")]
			public class RotationOffsetLink
			{
				[Token(Token = "0x4000789")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE284B4", Offset = "0xE284B4")]
				public IKSolverVR.RotationOffset rotationOffset;

				[Token(Token = "0x400078A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE284EC", Offset = "0xE284EC")]
				[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE284EC", Offset = "0xE284EC")]
				public float weight;

				[Token(Token = "0x400078B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private Quaternion lastValue;

				[Token(Token = "0x400078C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				private Quaternion current;

				[Token(Token = "0x600084A")]
				[Address(RVA = "0x1BFFF30", Offset = "0x1BFFF30", VA = "0x1BFFF30")]
				public void Apply(VRIK ik, Quaternion offset, float crossFader)
				{
				}

				[Token(Token = "0x600084B")]
				[Address(RVA = "0x1BFFC04", Offset = "0x1BFFC04", VA = "0x1BFFC04")]
				public void CrossFadeStart()
				{
				}

				[Token(Token = "0x600084C")]
				[Address(RVA = "0x1C0006C", Offset = "0x1C0006C", VA = "0x1C0006C")]
				public RotationOffsetLink()
				{
				}
			}

			[Token(Token = "0x4000786")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE28444", Offset = "0xE28444")]
			public int curveIndex;

			[Token(Token = "0x4000787")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2847C", Offset = "0xE2847C")]
			public RotationOffsetLink[] offsetLinks;

			[Token(Token = "0x4000788")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Rigidbody rigidbody;

			[Token(Token = "0x6000846")]
			[Address(RVA = "0x1BFFABC", Offset = "0x1BFFABC", VA = "0x1BFFABC", Slot = "4")]
			protected override float GetLength(AnimationCurve[] curves)
			{
				return default(float);
			}

			[Token(Token = "0x6000847")]
			[Address(RVA = "0x1BFFBA0", Offset = "0x1BFFBA0", VA = "0x1BFFBA0", Slot = "5")]
			protected override void CrossFadeStart()
			{
			}

			[Token(Token = "0x6000848")]
			[Address(RVA = "0x1BFFC10", Offset = "0x1BFFC10", VA = "0x1BFFC10", Slot = "6")]
			protected override void OnApply(VRIK ik, AnimationCurve[] curves, float weight)
			{
			}

			[Token(Token = "0x6000849")]
			[Address(RVA = "0x1C00058", Offset = "0x1C00058", VA = "0x1C00058")]
			public RotationOffset()
			{
			}
		}

		[Token(Token = "0x4000772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve[] offsetCurves;

		[Token(Token = "0x4000773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE281C0", Offset = "0xE281C0")]
		public PositionOffset[] positionOffsets;

		[Token(Token = "0x4000774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE281F8", Offset = "0xE281F8")]
		public RotationOffset[] rotationOffsets;

		[Token(Token = "0x600082E")]
		[Address(RVA = "0x1BFEEDC", Offset = "0x1BFEEDC", VA = "0x1BFEEDC", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x600082F")]
		[Address(RVA = "0x1BFF0FC", Offset = "0x1BFF0FC", VA = "0x1BFF0FC")]
		public void Hit(Collider collider, Vector3 force, Vector3 point)
		{
		}

		[Token(Token = "0x6000830")]
		[Address(RVA = "0x1BFF484", Offset = "0x1BFF484", VA = "0x1BFF484")]
		public HitReactionVRIK()
		{
		}
	}
	[Token(Token = "0x200010F")]
	public class Inertia : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x2000110")]
		public class Body
		{
			[Serializable]
			[Token(Token = "0x2000111")]
			public class EffectorLink
			{
				[Token(Token = "0x400079A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2871C", Offset = "0xE2871C")]
				public FullBodyBipedEffector effector;

				[Token(Token = "0x400079B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE28754", Offset = "0xE28754")]
				public float weight;

				[Token(Token = "0x6000853")]
				[Address(RVA = "0x176DCA8", Offset = "0x176DCA8", VA = "0x176DCA8")]
				public EffectorLink()
				{
				}
			}

			[Token(Token = "0x400078F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE285B0", Offset = "0xE285B0")]
			public Transform transform;

			[Token(Token = "0x4000790")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE285E8", Offset = "0xE285E8")]
			public EffectorLink[] effectorLinks;

			[Token(Token = "0x4000791")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE28620", Offset = "0xE28620")]
			public float speed;

			[Token(Token = "0x4000792")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE28658", Offset = "0xE28658")]
			public float acceleration;

			[Token(Token = "0x4000793")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE28690", Offset = "0xE28690")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE28690", Offset = "0xE28690")]
			public float matchVelocity;

			[Token(Token = "0x4000794")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE286E4", Offset = "0xE286E4")]
			public float gravity;

			[Token(Token = "0x4000795")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3 delta;

			[Token(Token = "0x4000796")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private Vector3 lazyPoint;

			[Token(Token = "0x4000797")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Vector3 direction;

			[Token(Token = "0x4000798")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private Vector3 lastPosition;

			[Token(Token = "0x4000799")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private bool firstUpdate;

			[Token(Token = "0x6000850")]
			[Address(RVA = "0x176D678", Offset = "0x176D678", VA = "0x176D678")]
			public void Reset()
			{
			}

			[Token(Token = "0x6000851")]
			[Address(RVA = "0x176D838", Offset = "0x176D838", VA = "0x176D838")]
			public void Update(IKSolverFullBodyBiped solver, float weight, float deltaTime)
			{
			}

			[Token(Token = "0x6000852")]
			[Address(RVA = "0x176DC8C", Offset = "0x176DC8C", VA = "0x176DC8C")]
			public Body()
			{
			}
		}

		[Token(Token = "0x400078D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE28540", Offset = "0xE28540")]
		public Body[] bodies;

		[Token(Token = "0x400078E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE28578", Offset = "0xE28578")]
		public OffsetLimits[] limits;

		[Token(Token = "0x600084D")]
		[Address(RVA = "0x176D600", Offset = "0x176D600", VA = "0x176D600")]
		public void ResetBodies()
		{
		}

		[Token(Token = "0x600084E")]
		[Address(RVA = "0x176D754", Offset = "0x176D754", VA = "0x176D754", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x600084F")]
		[Address(RVA = "0x176DC6C", Offset = "0x176DC6C", VA = "0x176DC6C")]
		public Inertia()
		{
		}
	}
	[Token(Token = "0x2000112")]
	public class LookAtController : MonoBehaviour
	{
		[Token(Token = "0x400079C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LookAtIK ik;

		[Token(Token = "0x400079D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2878C", Offset = "0xE2878C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE2878C", Offset = "0xE2878C")]
		public Transform target;

		[Token(Token = "0x400079E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE287EC", Offset = "0xE287EC")]
		public float weight;

		[Token(Token = "0x400079F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 offset;

		[Token(Token = "0x40007A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE28804", Offset = "0xE28804")]
		public float targetSwitchSmoothTime;

		[Token(Token = "0x40007A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2883C", Offset = "0xE2883C")]
		public float weightSmoothTime;

		[Token(Token = "0x40007A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE28874", Offset = "0xE28874")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE28874", Offset = "0xE28874")]
		public bool smoothTurnTowardsTarget;

		[Token(Token = "0x40007A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE288D4", Offset = "0xE288D4")]
		public float maxRadiansDelta;

		[Token(Token = "0x40007A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2890C", Offset = "0xE2890C")]
		public float maxMagnitudeDelta;

		[Token(Token = "0x40007A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE28944", Offset = "0xE28944")]
		public float slerpSpeed;

		[Token(Token = "0x40007A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2897C", Offset = "0xE2897C")]
		public Vector3 pivotOffsetFromRoot;

		[Token(Token = "0x40007A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE289B4", Offset = "0xE289B4")]
		public float minDistance;

		[Token(Token = "0x40007A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE289EC", Offset = "0xE289EC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE289EC", Offset = "0xE289EC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE289EC", Offset = "0xE289EC")]
		public float maxRootAngle;

		[Token(Token = "0x40007A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform lastTarget;

		[Token(Token = "0x40007AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float switchWeight;

		[Token(Token = "0x40007AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float switchWeightV;

		[Token(Token = "0x40007AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float weightV;

		[Token(Token = "0x40007AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Vector3 lastPosition;

		[Token(Token = "0x40007AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 dir;

		[Token(Token = "0x40007AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private bool lastSmoothTowardsTarget;

		[Token(Token = "0x17000108")]
		private Vector3 pivot
		{
			[Token(Token = "0x6000856")]
			[Address(RVA = "0x1777FB4", Offset = "0x1777FB4", VA = "0x1777FB4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000854")]
		[Address(RVA = "0x1777ECC", Offset = "0x1777ECC", VA = "0x1777ECC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000855")]
		[Address(RVA = "0x1778100", Offset = "0x1778100", VA = "0x1778100")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000857")]
		[Address(RVA = "0x17787D0", Offset = "0x17787D0", VA = "0x17787D0")]
		private void ApplyMinDistance()
		{
		}

		[Token(Token = "0x6000858")]
		[Address(RVA = "0x177896C", Offset = "0x177896C", VA = "0x177896C")]
		private void RootRotation()
		{
		}

		[Token(Token = "0x6000859")]
		[Address(RVA = "0x1778C88", Offset = "0x1778C88", VA = "0x1778C88")]
		public LookAtController()
		{
		}
	}
	[Token(Token = "0x2000113")]
	public abstract class OffsetModifier : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000114")]
		public class OffsetLimits
		{
			[Token(Token = "0x40007B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE28AD8", Offset = "0xE28AD8")]
			public FullBodyBipedEffector effector;

			[Token(Token = "0x40007B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE28B10", Offset = "0xE28B10")]
			public float spring;

			[Token(Token = "0x40007B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE28B48", Offset = "0xE28B48")]
			public bool x;

			[Token(Token = "0x40007B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE28B80", Offset = "0xE28B80")]
			public bool y;

			[Token(Token = "0x40007B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE28BB8", Offset = "0xE28BB8")]
			public bool z;

			[Token(Token = "0x40007B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE28BF0", Offset = "0xE28BF0")]
			public float minX;

			[Token(Token = "0x40007B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE28C28", Offset = "0xE28C28")]
			public float maxX;

			[Token(Token = "0x40007BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE28C60", Offset = "0xE28C60")]
			public float minY;

			[Token(Token = "0x40007BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE28C98", Offset = "0xE28C98")]
			public float maxY;

			[Token(Token = "0x40007BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE28CD0", Offset = "0xE28CD0")]
			public float minZ;

			[Token(Token = "0x40007BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE28D08", Offset = "0xE28D08")]
			public float maxZ;

			[Token(Token = "0x6000862")]
			[Address(RVA = "0x17790C8", Offset = "0x17790C8", VA = "0x17790C8")]
			public void Apply(IKEffector e, Quaternion rootRotation)
			{
			}

			[Token(Token = "0x6000863")]
			[Address(RVA = "0x1779614", Offset = "0x1779614", VA = "0x1779614")]
			private float SpringAxis(float value, float min, float max)
			{
				return default(float);
			}

			[Token(Token = "0x6000864")]
			[Address(RVA = "0x1779644", Offset = "0x1779644", VA = "0x1779644")]
			private float Spring(float value, float limit, bool negative)
			{
				return default(float);
			}

			[Token(Token = "0x6000865")]
			[Address(RVA = "0x177971C", Offset = "0x177971C", VA = "0x177971C")]
			public OffsetLimits()
			{
			}
		}

		[Token(Token = "0x2000115")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE215D8", Offset = "0xE215D8")]
		private sealed class <Initiate>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40007BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40007BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40007C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OffsetModifier <>4__this;

			[Token(Token = "0x1700010A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000869")]
				[Address(RVA = "0x17795A4", Offset = "0x17795A4", VA = "0x17795A4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700010B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600086B")]
				[Address(RVA = "0x177960C", Offset = "0x177960C", VA = "0x177960C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000866")]
			[Address(RVA = "0x1778F90", Offset = "0x1778F90", VA = "0x1778F90")]
			[DebuggerHidden]
			public <Initiate>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6000867")]
			[Address(RVA = "0x1779444", Offset = "0x1779444", VA = "0x1779444", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000868")]
			[Address(RVA = "0x1779448", Offset = "0x1779448", VA = "0x1779448", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600086A")]
			[Address(RVA = "0x17795AC", Offset = "0x17795AC", VA = "0x17795AC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40007B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE28A68", Offset = "0xE28A68")]
		public float weight;

		[Token(Token = "0x40007B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE28AA0", Offset = "0xE28AA0")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x40007B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected float lastTime;

		[Token(Token = "0x17000109")]
		protected float deltaTime
		{
			[Token(Token = "0x600085A")]
			[Address(RVA = "0x176D80C", Offset = "0x176D80C", VA = "0x176D80C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600085B")]
		protected abstract void OnModifyOffset();

		[Token(Token = "0x600085C")]
		[Address(RVA = "0x1778EE8", Offset = "0x1778EE8", VA = "0x1778EE8", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x600085D")]
		[Address(RVA = "0x1778F14", Offset = "0x1778F14", VA = "0x1778F14")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE2E4C4", Offset = "0xE2E4C4")]
		private IEnumerator Initiate()
		{
			return null;
		}

		[Token(Token = "0x600085E")]
		[Address(RVA = "0x1778FBC", Offset = "0x1778FBC", VA = "0x1778FBC")]
		private void ModifyOffset()
		{
		}

		[Token(Token = "0x600085F")]
		[Address(RVA = "0x176DBB0", Offset = "0x176DBB0", VA = "0x176DBB0")]
		protected void ApplyLimits(OffsetLimits[] limits)
		{
		}

		[Token(Token = "0x6000860")]
		[Address(RVA = "0x1779328", Offset = "0x1779328", VA = "0x1779328", Slot = "6")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000861")]
		[Address(RVA = "0x176DC7C", Offset = "0x176DC7C", VA = "0x176DC7C")]
		protected OffsetModifier()
		{
		}
	}
	[Token(Token = "0x2000116")]
	public abstract class OffsetModifierVRIK : MonoBehaviour
	{
		[Token(Token = "0x2000117")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE215E8", Offset = "0xE215E8")]
		private sealed class <Initiate>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40007C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40007C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40007C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OffsetModifierVRIK <>4__this;

			[Token(Token = "0x1700010D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000876")]
				[Address(RVA = "0x1779BBC", Offset = "0x1779BBC", VA = "0x1779BBC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700010E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000878")]
				[Address(RVA = "0x1779C24", Offset = "0x1779C24", VA = "0x1779C24", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000873")]
			[Address(RVA = "0x17797F8", Offset = "0x17797F8", VA = "0x17797F8")]
			[DebuggerHidden]
			public <Initiate>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6000874")]
			[Address(RVA = "0x1779A5C", Offset = "0x1779A5C", VA = "0x1779A5C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000875")]
			[Address(RVA = "0x1779A60", Offset = "0x1779A60", VA = "0x1779A60", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000877")]
			[Address(RVA = "0x1779BC4", Offset = "0x1779BC4", VA = "0x1779BC4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40007C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE28D40", Offset = "0xE28D40")]
		public float weight;

		[Token(Token = "0x40007C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE28D78", Offset = "0xE28D78")]
		public VRIK ik;

		[Token(Token = "0x40007C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float lastTime;

		[Token(Token = "0x1700010C")]
		protected float deltaTime
		{
			[Token(Token = "0x600086C")]
			[Address(RVA = "0x1779724", Offset = "0x1779724", VA = "0x1779724")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600086D")]
		protected abstract void OnModifyOffset();

		[Token(Token = "0x600086E")]
		[Address(RVA = "0x1779750", Offset = "0x1779750", VA = "0x1779750", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x600086F")]
		[Address(RVA = "0x177977C", Offset = "0x177977C", VA = "0x177977C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE2E578", Offset = "0xE2E578")]
		private IEnumerator Initiate()
		{
			return null;
		}

		[Token(Token = "0x6000870")]
		[Address(RVA = "0x1779824", Offset = "0x1779824", VA = "0x1779824")]
		private void ModifyOffset()
		{
		}

		[Token(Token = "0x6000871")]
		[Address(RVA = "0x1779930", Offset = "0x1779930", VA = "0x1779930", Slot = "6")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000872")]
		[Address(RVA = "0x1779A4C", Offset = "0x1779A4C", VA = "0x1779A4C")]
		protected OffsetModifierVRIK()
		{
		}
	}
	[Token(Token = "0x2000118")]
	public class OffsetPose : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000119")]
		public class EffectorLink
		{
			[Token(Token = "0x40007C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FullBodyBipedEffector effector;

			[Token(Token = "0x40007C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 offset;

			[Token(Token = "0x40007CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 pin;

			[Token(Token = "0x40007CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Vector3 pinWeight;

			[Token(Token = "0x600087C")]
			[Address(RVA = "0x1779CEC", Offset = "0x1779CEC", VA = "0x1779CEC")]
			public void Apply(IKSolverFullBodyBiped solver, float weight, Quaternion rotation)
			{
			}

			[Token(Token = "0x600087D")]
			[Address(RVA = "0x177A148", Offset = "0x177A148", VA = "0x177A148")]
			public EffectorLink()
			{
			}
		}

		[Token(Token = "0x40007C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EffectorLink[] effectorLinks;

		[Token(Token = "0x6000879")]
		[Address(RVA = "0x1779C2C", Offset = "0x1779C2C", VA = "0x1779C2C")]
		public void Apply(IKSolverFullBodyBiped solver, float weight)
		{
		}

		[Token(Token = "0x600087A")]
		[Address(RVA = "0x177A024", Offset = "0x177A024", VA = "0x177A024")]
		public void Apply(IKSolverFullBodyBiped solver, float weight, Quaternion rotation)
		{
		}

		[Token(Token = "0x600087B")]
		[Address(RVA = "0x177A0DC", Offset = "0x177A0DC", VA = "0x177A0DC")]
		public OffsetPose()
		{
		}
	}
	[Token(Token = "0x200011A")]
	public class PenetrationAvoidance : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x200011B")]
		public class Avoider
		{
			[Serializable]
			[Token(Token = "0x200011C")]
			public class EffectorLink
			{
				[Token(Token = "0x40007D7")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE28F8C", Offset = "0xE28F8C")]
				public FullBodyBipedEffector effector;

				[Token(Token = "0x40007D8")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE28FC4", Offset = "0xE28FC4")]
				public float weight;

				[Token(Token = "0x6000884")]
				[Address(RVA = "0x177A800", Offset = "0x177A800", VA = "0x177A800")]
				public EffectorLink()
				{
				}
			}

			[Token(Token = "0x40007CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE28DE8", Offset = "0xE28DE8")]
			public Transform[] raycastFrom;

			[Token(Token = "0x40007CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE28E20", Offset = "0xE28E20")]
			public Transform raycastTo;

			[Token(Token = "0x40007CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE28E58", Offset = "0xE28E58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE28E58", Offset = "0xE28E58")]
			public float raycastRadius;

			[Token(Token = "0x40007D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE28EAC", Offset = "0xE28EAC")]
			public EffectorLink[] effectors;

			[Token(Token = "0x40007D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE28EE4", Offset = "0xE28EE4")]
			public float smoothTimeIn;

			[Token(Token = "0x40007D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE28F1C", Offset = "0xE28F1C")]
			public float smoothTimeOut;

			[Token(Token = "0x40007D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE28F54", Offset = "0xE28F54")]
			public LayerMask layers;

			[Token(Token = "0x40007D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private Vector3 offset;

			[Token(Token = "0x40007D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Vector3 offsetTarget;

			[Token(Token = "0x40007D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private Vector3 offsetV;

			[Token(Token = "0x6000880")]
			[Address(RVA = "0x177A1D4", Offset = "0x177A1D4", VA = "0x177A1D4")]
			public void Solve(IKSolverFullBodyBiped solver, float weight)
			{
			}

			[Token(Token = "0x6000881")]
			[Address(RVA = "0x177A3E0", Offset = "0x177A3E0", VA = "0x177A3E0")]
			private Vector3 GetOffsetTarget(IKSolverFullBodyBiped solver)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6000882")]
			[Address(RVA = "0x177A578", Offset = "0x177A578", VA = "0x177A578")]
			private Vector3 Raycast(Vector3 from, Vector3 to)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6000883")]
			[Address(RVA = "0x177A7EC", Offset = "0x177A7EC", VA = "0x177A7EC")]
			public Avoider()
			{
			}
		}

		[Token(Token = "0x40007CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE28DB0", Offset = "0xE28DB0")]
		public Avoider[] avoiders;

		[Token(Token = "0x600087E")]
		[Address(RVA = "0x177A150", Offset = "0x177A150", VA = "0x177A150", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x600087F")]
		[Address(RVA = "0x177A3D0", Offset = "0x177A3D0", VA = "0x177A3D0")]
		public PenetrationAvoidance()
		{
		}
	}
	[Token(Token = "0x200011D")]
	public class Recoil : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x200011E")]
		public class RecoilOffset
		{
			[Serializable]
			[Token(Token = "0x200011F")]
			public class EffectorLink
			{
				[Token(Token = "0x40007F6")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE29350", Offset = "0xE29350")]
				public FullBodyBipedEffector effector;

				[Token(Token = "0x40007F7")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE29388", Offset = "0xE29388")]
				public float weight;

				[Token(Token = "0x6000894")]
				[Address(RVA = "0x177D908", Offset = "0x177D908", VA = "0x177D908")]
				public EffectorLink()
				{
				}
			}

			[Token(Token = "0x40007F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE29254", Offset = "0xE29254")]
			public Vector3 offset;

			[Token(Token = "0x40007F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE2928C", Offset = "0xE2928C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2928C", Offset = "0xE2928C")]
			public float additivity;

			[Token(Token = "0x40007F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE292E0", Offset = "0xE292E0")]
			public float maxAdditiveOffsetMag;

			[Token(Token = "0x40007F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE29318", Offset = "0xE29318")]
			public EffectorLink[] effectorLinks;

			[Token(Token = "0x40007F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3 additiveOffset;

			[Token(Token = "0x40007F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private Vector3 lastOffset;

			[Token(Token = "0x6000891")]
			[Address(RVA = "0x177C5F8", Offset = "0x177C5F8", VA = "0x177C5F8")]
			public void Start()
			{
			}

			[Token(Token = "0x6000892")]
			[Address(RVA = "0x177D1AC", Offset = "0x177D1AC", VA = "0x177D1AC")]
			public void Apply(IKSolverFullBodyBiped solver, Quaternion rotation, float masterWeight, float length, float timeLeft)
			{
			}

			[Token(Token = "0x6000893")]
			[Address(RVA = "0x177D8F4", Offset = "0x177D8F4", VA = "0x177D8F4")]
			public RecoilOffset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000120")]
		public enum Handedness
		{
			[Token(Token = "0x40007F9")]
			Right,
			[Token(Token = "0x40007FA")]
			Left
		}

		[Token(Token = "0x40007D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE28FFC", Offset = "0xE28FFC")]
		public AimIK aimIK;

		[Token(Token = "0x40007DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE29034", Offset = "0xE29034")]
		public bool aimIKSolvedLast;

		[Token(Token = "0x40007DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2906C", Offset = "0xE2906C")]
		public Handedness handedness;

		[Token(Token = "0x40007DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE290A4", Offset = "0xE290A4")]
		public bool twoHanded;

		[Token(Token = "0x40007DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE290DC", Offset = "0xE290DC")]
		public AnimationCurve recoilWeight;

		[Token(Token = "0x40007DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE29114", Offset = "0xE29114")]
		public float magnitudeRandom;

		[Token(Token = "0x40007DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2914C", Offset = "0xE2914C")]
		public Vector3 rotationRandom;

		[Token(Token = "0x40007E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE29184", Offset = "0xE29184")]
		public Vector3 handRotationOffset;

		[Token(Token = "0x40007E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE291BC", Offset = "0xE291BC")]
		public float blendTime;

		[Token(Token = "0x40007E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE291F4", Offset = "0xE291F4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE291F4", Offset = "0xE291F4")]
		public RecoilOffset[] offsets;

		[Token(Token = "0x40007E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public Quaternion rotationOffset;

		[Token(Token = "0x40007E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float magnitudeMlp;

		[Token(Token = "0x40007E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float endTime;

		[Token(Token = "0x40007E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Quaternion handRotation;

		[Token(Token = "0x40007E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Quaternion secondaryHandRelativeRotation;

		[Token(Token = "0x40007E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Quaternion randomRotation;

		[Token(Token = "0x40007E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float length;

		[Token(Token = "0x40007EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private bool initiated;

		[Token(Token = "0x40007EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float blendWeight;

		[Token(Token = "0x40007EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private float w;

		[Token(Token = "0x40007ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Quaternion primaryHandRotation;

		[Token(Token = "0x40007EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool handRotationsSet;

		[Token(Token = "0x40007EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private Vector3 aimIKAxis;

		[Token(Token = "0x1700010F")]
		public bool isFinished
		{
			[Token(Token = "0x6000885")]
			[Address(RVA = "0x177C3D0", Offset = "0x177C3D0", VA = "0x177C3D0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000110")]
		private IKEffector primaryHandEffector
		{
			[Token(Token = "0x600088B")]
			[Address(RVA = "0x177D460", Offset = "0x177D460", VA = "0x177D460")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000111")]
		private IKEffector secondaryHandEffector
		{
			[Token(Token = "0x600088C")]
			[Address(RVA = "0x177D4A0", Offset = "0x177D4A0", VA = "0x177D4A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000112")]
		private Transform primaryHand
		{
			[Token(Token = "0x600088D")]
			[Address(RVA = "0x177D420", Offset = "0x177D420", VA = "0x177D420")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000113")]
		private Transform secondaryHand
		{
			[Token(Token = "0x600088E")]
			[Address(RVA = "0x177D440", Offset = "0x177D440", VA = "0x177D440")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000886")]
		[Address(RVA = "0x177C400", Offset = "0x177C400", VA = "0x177C400")]
		public void SetHandRotations(Quaternion leftHandRotation, Quaternion rightHandRotation)
		{
		}

		[Token(Token = "0x6000887")]
		[Address(RVA = "0x177C42C", Offset = "0x177C42C", VA = "0x177C42C")]
		public void Fire(float magnitude)
		{
		}

		[Token(Token = "0x6000888")]
		[Address(RVA = "0x177C6A8", Offset = "0x177C6A8", VA = "0x177C6A8", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x6000889")]
		[Address(RVA = "0x177D4E0", Offset = "0x177D4E0", VA = "0x177D4E0")]
		private void AfterFBBIK()
		{
		}

		[Token(Token = "0x600088A")]
		[Address(RVA = "0x177D638", Offset = "0x177D638", VA = "0x177D638")]
		private void AfterAimIK()
		{
		}

		[Token(Token = "0x600088F")]
		[Address(RVA = "0x177D674", Offset = "0x177D674", VA = "0x177D674", Slot = "6")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000890")]
		[Address(RVA = "0x177D840", Offset = "0x177D840", VA = "0x177D840")]
		public Recoil()
		{
		}
	}
	[Token(Token = "0x2000121")]
	public class ShoulderRotator : MonoBehaviour
	{
		[Token(Token = "0x40007FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE293C0", Offset = "0xE293C0")]
		public float weight;

		[Token(Token = "0x40007FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE293F8", Offset = "0xE293F8")]
		public float offset;

		[Token(Token = "0x40007FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FullBodyBipedIK ik;

		[Token(Token = "0x40007FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool skip;

		[Token(Token = "0x6000895")]
		[Address(RVA = "0x17810D0", Offset = "0x17810D0", VA = "0x17810D0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000896")]
		[Address(RVA = "0x17811C4", Offset = "0x17811C4", VA = "0x17811C4")]
		private void RotateShoulders()
		{
		}

		[Token(Token = "0x6000897")]
		[Address(RVA = "0x17812B0", Offset = "0x17812B0", VA = "0x17812B0")]
		private void RotateShoulder(FullBodyBipedChain chain, float weight, float offset)
		{
		}

		[Token(Token = "0x6000898")]
		[Address(RVA = "0x17816F8", Offset = "0x17816F8", VA = "0x17816F8")]
		private IKMapping.BoneMap GetParentBoneMap(FullBodyBipedChain chain)
		{
			return null;
		}

		[Token(Token = "0x6000899")]
		[Address(RVA = "0x1781730", Offset = "0x1781730", VA = "0x1781730")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600089A")]
		[Address(RVA = "0x178184C", Offset = "0x178184C", VA = "0x178184C")]
		public ShoulderRotator()
		{
		}
	}
	[Token(Token = "0x2000122")]
	public static class VRIKCalibrator
	{
		[Serializable]
		[Token(Token = "0x2000123")]
		public class Settings
		{
			[Token(Token = "0x40007FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE29430", Offset = "0xE29430")]
			public float scaleMlp;

			[Token(Token = "0x4000800")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE29468", Offset = "0xE29468")]
			public Vector3 headTrackerForward;

			[Token(Token = "0x4000801")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE294A0", Offset = "0xE294A0")]
			public Vector3 headTrackerUp;

			[Token(Token = "0x4000802")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE294D8", Offset = "0xE294D8")]
			public Vector3 handTrackerForward;

			[Token(Token = "0x4000803")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE29510", Offset = "0xE29510")]
			public Vector3 handTrackerUp;

			[Token(Token = "0x4000804")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE29548", Offset = "0xE29548")]
			public Vector3 footTrackerForward;

			[Token(Token = "0x4000805")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE29580", Offset = "0xE29580")]
			public Vector3 footTrackerUp;

			[Token(Token = "0x4000806")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE295B8", Offset = "0xE295B8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE295B8", Offset = "0xE295B8")]
			public Vector3 headOffset;

			[Token(Token = "0x4000807")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE29608", Offset = "0xE29608")]
			public Vector3 handOffset;

			[Token(Token = "0x4000808")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE29640", Offset = "0xE29640")]
			public float footForwardOffset;

			[Token(Token = "0x4000809")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE29678", Offset = "0xE29678")]
			public float footInwardOffset;

			[Token(Token = "0x400080A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE296B0", Offset = "0xE296B0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE296B0", Offset = "0xE296B0")]
			public float footHeadingOffset;

			[Token(Token = "0x400080B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE2970C", Offset = "0xE2970C")]
			public float pelvisPositionWeight;

			[Token(Token = "0x400080C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE29724", Offset = "0xE29724")]
			public float pelvisRotationWeight;

			[Token(Token = "0x60008A8")]
			[Address(RVA = "0x1FDF878", Offset = "0x1FDF878", VA = "0x1FDF878")]
			public Settings()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000124")]
		public class CalibrationData
		{
			[Serializable]
			[Token(Token = "0x2000125")]
			public class Target
			{
				[Token(Token = "0x4000819")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public bool used;

				[Token(Token = "0x400081A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				public Vector3 localPosition;

				[Token(Token = "0x400081B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public Quaternion localRotation;

				[Token(Token = "0x60008AA")]
				[Address(RVA = "0x1FDF754", Offset = "0x1FDF754", VA = "0x1FDF754")]
				public Target(Transform t)
				{
				}

				[Token(Token = "0x60008AB")]
				[Address(RVA = "0x1FDF818", Offset = "0x1FDF818", VA = "0x1FDF818")]
				public void SetTo(Transform t)
				{
				}
			}

			[Token(Token = "0x400080D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float scale;

			[Token(Token = "0x400080E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Target head;

			[Token(Token = "0x400080F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Target leftHand;

			[Token(Token = "0x4000810")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Target rightHand;

			[Token(Token = "0x4000811")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Target pelvis;

			[Token(Token = "0x4000812")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Target leftFoot;

			[Token(Token = "0x4000813")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Target rightFoot;

			[Token(Token = "0x4000814")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Target leftLegGoal;

			[Token(Token = "0x4000815")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Target rightLegGoal;

			[Token(Token = "0x4000816")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Vector3 pelvisTargetRight;

			[Token(Token = "0x4000817")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			public float pelvisPositionWeight;

			[Token(Token = "0x4000818")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public float pelvisRotationWeight;

			[Token(Token = "0x60008A9")]
			[Address(RVA = "0x1FDF74C", Offset = "0x1FDF74C", VA = "0x1FDF74C")]
			public CalibrationData()
			{
			}
		}

		[Token(Token = "0x600089B")]
		[Address(RVA = "0x17840AC", Offset = "0x17840AC", VA = "0x17840AC")]
		public static void RecalibrateScale(VRIK ik, CalibrationData data, Settings settings)
		{
		}

		[Token(Token = "0x600089C")]
		[Address(RVA = "0x17840C4", Offset = "0x17840C4", VA = "0x17840C4")]
		public static void RecalibrateScale(VRIK ik, CalibrationData data, float scaleMlp)
		{
		}

		[Token(Token = "0x600089D")]
		[Address(RVA = "0x1784110", Offset = "0x1784110", VA = "0x1784110")]
		private static void CalibrateScale(VRIK ik, float scaleMlp = 1f)
		{
		}

		[Token(Token = "0x600089E")]
		[Address(RVA = "0x178425C", Offset = "0x178425C", VA = "0x178425C")]
		public static CalibrationData Calibrate(VRIK ik, Settings settings, Transform headTracker, [Optional] Transform bodyTracker, [Optional] Transform leftHandTracker, [Optional] Transform rightHandTracker, [Optional] Transform leftFootTracker, [Optional] Transform rightFootTracker)
		{
			return null;
		}

		[Token(Token = "0x600089F")]
		[Address(RVA = "0x17855E0", Offset = "0x17855E0", VA = "0x17855E0")]
		private static void CalibrateLeg(Settings settings, Transform tracker, IKSolverVR.Leg leg, Transform lastBone, Vector3 rootForward, bool isLeft)
		{
		}

		[Token(Token = "0x60008A0")]
		[Address(RVA = "0x1785DC8", Offset = "0x1785DC8", VA = "0x1785DC8")]
		public static void Calibrate(VRIK ik, CalibrationData data, Transform headTracker, [Optional] Transform bodyTracker, [Optional] Transform leftHandTracker, [Optional] Transform rightHandTracker, [Optional] Transform leftFootTracker, [Optional] Transform rightFootTracker)
		{
		}

		[Token(Token = "0x60008A1")]
		[Address(RVA = "0x1786894", Offset = "0x1786894", VA = "0x1786894")]
		private static void CalibrateLeg(CalibrationData data, Transform tracker, IKSolverVR.Leg leg, Transform lastBone, Vector3 rootForward, bool isLeft)
		{
		}

		[Token(Token = "0x60008A2")]
		[Address(RVA = "0x1786B10", Offset = "0x1786B10", VA = "0x1786B10")]
		public static CalibrationData Calibrate(VRIK ik, Transform centerEyeAnchor, Transform leftHandAnchor, Transform rightHandAnchor, Vector3 centerEyePositionOffset, Vector3 centerEyeRotationOffset, Vector3 handPositionOffset, Vector3 handRotationOffset, float scaleMlp = 1f)
		{
			return null;
		}

		[Token(Token = "0x60008A3")]
		[Address(RVA = "0x1786D40", Offset = "0x1786D40", VA = "0x1786D40")]
		public static void CalibrateHead(VRIK ik, Transform centerEyeAnchor, Vector3 anchorPositionOffset, Vector3 anchorRotationOffset)
		{
		}

		[Token(Token = "0x60008A4")]
		[Address(RVA = "0x1787214", Offset = "0x1787214", VA = "0x1787214")]
		public static void CalibrateHands(VRIK ik, Transform leftHandAnchor, Transform rightHandAnchor, Vector3 anchorPositionOffset, Vector3 anchorRotationOffset)
		{
		}

		[Token(Token = "0x60008A5")]
		[Address(RVA = "0x1787460", Offset = "0x1787460", VA = "0x1787460")]
		private static void CalibrateHand(Transform hand, Transform forearm, Transform target, Transform anchor, Vector3 positionOffset, Vector3 rotationOffset, bool isLeft)
		{
		}

		[Token(Token = "0x60008A6")]
		[Address(RVA = "0x178775C", Offset = "0x178775C", VA = "0x178775C")]
		public static Vector3 GuessWristToPalmAxis(Transform hand, Transform forearm)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60008A7")]
		[Address(RVA = "0x1787934", Offset = "0x1787934", VA = "0x1787934")]
		public static Vector3 GuessPalmToThumbAxis(Transform hand, Transform forearm)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x2000126")]
	public class VRIKLODController : MonoBehaviour
	{
		[Token(Token = "0x400081C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Renderer LODRenderer;

		[Token(Token = "0x400081D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float LODDistance;

		[Token(Token = "0x400081E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool allowCulled;

		[Token(Token = "0x400081F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private VRIK ik;

		[Token(Token = "0x60008AC")]
		[Address(RVA = "0x1FDF950", Offset = "0x1FDF950", VA = "0x1FDF950")]
		private void Start()
		{
		}

		[Token(Token = "0x60008AD")]
		[Address(RVA = "0x1FDF9B0", Offset = "0x1FDF9B0", VA = "0x1FDF9B0")]
		private void Update()
		{
		}

		[Token(Token = "0x60008AE")]
		[Address(RVA = "0x1FDF9E4", Offset = "0x1FDF9E4", VA = "0x1FDF9E4")]
		private int GetLODLevel()
		{
			return default(int);
		}

		[Token(Token = "0x60008AF")]
		[Address(RVA = "0x1FDFB6C", Offset = "0x1FDFB6C", VA = "0x1FDFB6C")]
		public VRIKLODController()
		{
		}
	}
	[Token(Token = "0x2000127")]
	public class VRIKRootController : MonoBehaviour
	{
		[Token(Token = "0x4000820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2973C", Offset = "0xE2973C")]
		private Vector3 <pelvisTargetRight>k__BackingField;

		[Token(Token = "0x4000821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform pelvisTarget;

		[Token(Token = "0x4000822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform leftFootTarget;

		[Token(Token = "0x4000823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform rightFootTarget;

		[Token(Token = "0x4000824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private VRIK ik;

		[Token(Token = "0x17000114")]
		public Vector3 pelvisTargetRight
		{
			[Token(Token = "0x60008B0")]
			[Address(RVA = "0x1FDFB84", Offset = "0x1FDFB84", VA = "0x1FDFB84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2E62C", Offset = "0xE2E62C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60008B1")]
			[Address(RVA = "0x1FDFB90", Offset = "0x1FDFB90", VA = "0x1FDFB90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2E63C", Offset = "0xE2E63C")]
			private set
			{
			}
		}

		[Token(Token = "0x60008B2")]
		[Address(RVA = "0x1FDFB9C", Offset = "0x1FDFB9C", VA = "0x1FDFB9C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008B3")]
		[Address(RVA = "0x1FDFC98", Offset = "0x1FDFC98", VA = "0x1FDFC98")]
		public void Calibrate()
		{
		}

		[Token(Token = "0x60008B4")]
		[Address(RVA = "0x1FDFEF4", Offset = "0x1FDFEF4", VA = "0x1FDFEF4")]
		public void Calibrate(VRIKCalibrator.CalibrationData data)
		{
		}

		[Token(Token = "0x60008B5")]
		[Address(RVA = "0x1FE009C", Offset = "0x1FE009C", VA = "0x1FE009C")]
		private void OnPreUpdate()
		{
		}

		[Token(Token = "0x60008B6")]
		[Address(RVA = "0x1FE0540", Offset = "0x1FE0540", VA = "0x1FE0540")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60008B7")]
		[Address(RVA = "0x1FE065C", Offset = "0x1FE065C", VA = "0x1FE065C")]
		public VRIKRootController()
		{
		}
	}
}
namespace RootMotion.Demos
{
	[Token(Token = "0x2000128")]
	public class FKOffset : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000129")]
		public class Offset
		{
			[Token(Token = "0x4000827")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[HideInInspector]
			public string name;

			[Token(Token = "0x4000828")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public HumanBodyBones bone;

			[Token(Token = "0x4000829")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 rotationOffset;

			[Token(Token = "0x400082A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Transform t;

			[Token(Token = "0x60008BC")]
			[Address(RVA = "0x1711CCC", Offset = "0x1711CCC", VA = "0x1711CCC")]
			public void Apply(Animator animator)
			{
			}

			[Token(Token = "0x60008BD")]
			[Address(RVA = "0x1711F78", Offset = "0x1711F78", VA = "0x1711F78")]
			public Offset()
			{
			}
		}

		[Token(Token = "0x4000825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Offset[] offsets;

		[Token(Token = "0x4000826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator animator;

		[Token(Token = "0x60008B8")]
		[Address(RVA = "0x1711BF4", Offset = "0x1711BF4", VA = "0x1711BF4")]
		private void Start()
		{
		}

		[Token(Token = "0x60008B9")]
		[Address(RVA = "0x1711C54", Offset = "0x1711C54", VA = "0x1711C54")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60008BA")]
		[Address(RVA = "0x1711E88", Offset = "0x1711E88", VA = "0x1711E88")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60008BB")]
		[Address(RVA = "0x1711F70", Offset = "0x1711F70", VA = "0x1711F70")]
		public FKOffset()
		{
		}
	}
	[Token(Token = "0x200012A")]
	public class AimBoxing : MonoBehaviour
	{
		[Token(Token = "0x400082B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AimIK aimIK;

		[Token(Token = "0x400082C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform pin;

		[Token(Token = "0x60008BE")]
		[Address(RVA = "0x1709188", Offset = "0x1709188", VA = "0x1709188")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60008BF")]
		[Address(RVA = "0x170920C", Offset = "0x170920C", VA = "0x170920C")]
		public AimBoxing()
		{
		}
	}
	[Token(Token = "0x200012B")]
	public class AimSwing : MonoBehaviour
	{
		[Token(Token = "0x400082D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AimIK ik;

		[Token(Token = "0x400082E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2975C", Offset = "0xE2975C")]
		public Vector3 animatedSwingDirection;

		[Token(Token = "0x60008C0")]
		[Address(RVA = "0x1709214", Offset = "0x1709214", VA = "0x1709214")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60008C1")]
		[Address(RVA = "0x170931C", Offset = "0x170931C", VA = "0x170931C")]
		public AimSwing()
		{
		}
	}
	[Token(Token = "0x200012C")]
	public class SecondHandOnGun : MonoBehaviour
	{
		[Token(Token = "0x400082F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AimIK aim;

		[Token(Token = "0x4000830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LimbIK leftArmIK;

		[Token(Token = "0x4000831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform leftHand;

		[Token(Token = "0x4000832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform rightHand;

		[Token(Token = "0x4000833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 leftHandPositionOffset;

		[Token(Token = "0x4000834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 leftHandRotationOffset;

		[Token(Token = "0x4000835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 leftHandPosRelToRight;

		[Token(Token = "0x4000836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Quaternion leftHandRotRelToRight;

		[Token(Token = "0x60008C2")]
		[Address(RVA = "0x15A00A4", Offset = "0x15A00A4", VA = "0x15A00A4")]
		private void Start()
		{
		}

		[Token(Token = "0x60008C3")]
		[Address(RVA = "0x15A00E8", Offset = "0x15A00E8", VA = "0x15A00E8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60008C4")]
		[Address(RVA = "0x15A0348", Offset = "0x15A0348", VA = "0x15A0348")]
		public SecondHandOnGun()
		{
		}
	}
	[Token(Token = "0x200012D")]
	public class SimpleAimingSystem : MonoBehaviour
	{
		[Token(Token = "0x4000837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE29794", Offset = "0xE29794")]
		public AimPoser aimPoser;

		[Token(Token = "0x4000838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE297CC", Offset = "0xE297CC")]
		public AimIK aim;

		[Token(Token = "0x4000839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE29804", Offset = "0xE29804")]
		public LookAtIK lookAt;

		[Token(Token = "0x400083A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2983C", Offset = "0xE2983C")]
		public Animator animator;

		[Token(Token = "0x400083B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE29874", Offset = "0xE29874")]
		public float crossfadeTime;

		[Token(Token = "0x400083C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE298AC", Offset = "0xE298AC")]
		public float minAimDistance;

		[Token(Token = "0x400083D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private AimPoser.Pose aimPose;

		[Token(Token = "0x400083E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AimPoser.Pose lastPose;

		[Token(Token = "0x60008C5")]
		[Address(RVA = "0x15A0350", Offset = "0x15A0350", VA = "0x15A0350")]
		private void Start()
		{
		}

		[Token(Token = "0x60008C6")]
		[Address(RVA = "0x15A0394", Offset = "0x15A0394", VA = "0x15A0394")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60008C7")]
		[Address(RVA = "0x15A04E8", Offset = "0x15A04E8", VA = "0x15A04E8")]
		private void Pose()
		{
		}

		[Token(Token = "0x60008C8")]
		[Address(RVA = "0x15A0700", Offset = "0x15A0700", VA = "0x15A0700")]
		private void LimitAimTarget()
		{
		}

		[Token(Token = "0x60008C9")]
		[Address(RVA = "0x15A0A40", Offset = "0x15A0A40", VA = "0x15A0A40")]
		private void DirectCrossFade(string state, float target)
		{
		}

		[Token(Token = "0x60008CA")]
		[Address(RVA = "0x15A0B18", Offset = "0x15A0B18", VA = "0x15A0B18")]
		public SimpleAimingSystem()
		{
		}
	}
	[Token(Token = "0x200012E")]
	public class TerrainOffset : MonoBehaviour
	{
		[Token(Token = "0x400083F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AimIK aimIK;

		[Token(Token = "0x4000840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 raycastOffset;

		[Token(Token = "0x4000841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public LayerMask raycastLayers;

		[Token(Token = "0x4000842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float min;

		[Token(Token = "0x4000843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float max;

		[Token(Token = "0x4000844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float lerpSpeed;

		[Token(Token = "0x4000845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private RaycastHit hit;

		[Token(Token = "0x4000846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 offset;

		[Token(Token = "0x60008CB")]
		[Address(RVA = "0x15A18E4", Offset = "0x15A18E4", VA = "0x15A18E4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60008CC")]
		[Address(RVA = "0x15A1B48", Offset = "0x15A1B48", VA = "0x15A1B48")]
		private Vector3 GetGroundHeightOffset(Vector3 worldPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60008CD")]
		[Address(RVA = "0x15A1D98", Offset = "0x15A1D98", VA = "0x15A1D98")]
		public TerrainOffset()
		{
		}
	}
	[Token(Token = "0x200012F")]
	public class BipedIKvsAnimatorIK : MonoBehaviour
	{
		[Token(Token = "0x4000847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xE298E4", Offset = "0xE298E4")]
		public Animator animator;

		[Token(Token = "0x4000848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BipedIK bipedIK;

		[Token(Token = "0x4000849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xE2991C", Offset = "0xE2991C")]
		public Transform lookAtTargetBiped;

		[Token(Token = "0x400084A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform lookAtTargetAnimator;

		[Token(Token = "0x400084B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE29954", Offset = "0xE29954")]
		public float lookAtWeight;

		[Token(Token = "0x400084C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE2996C", Offset = "0xE2996C")]
		public float lookAtBodyWeight;

		[Token(Token = "0x400084D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE29984", Offset = "0xE29984")]
		public float lookAtHeadWeight;

		[Token(Token = "0x400084E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE2999C", Offset = "0xE2999C")]
		public float lookAtEyesWeight;

		[Token(Token = "0x400084F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE299B4", Offset = "0xE299B4")]
		public float lookAtClampWeight;

		[Token(Token = "0x4000850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE299CC", Offset = "0xE299CC")]
		public float lookAtClampWeightHead;

		[Token(Token = "0x4000851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE299E4", Offset = "0xE299E4")]
		public float lookAtClampWeightEyes;

		[Token(Token = "0x4000852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xE299FC", Offset = "0xE299FC")]
		public Transform footTargetBiped;

		[Token(Token = "0x4000853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform footTargetAnimator;

		[Token(Token = "0x4000854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE29A34", Offset = "0xE29A34")]
		public float footPositionWeight;

		[Token(Token = "0x4000855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE29A4C", Offset = "0xE29A4C")]
		public float footRotationWeight;

		[Token(Token = "0x4000856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0xE29A64", Offset = "0xE29A64")]
		public Transform handTargetBiped;

		[Token(Token = "0x4000857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Transform handTargetAnimator;

		[Token(Token = "0x4000858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE29A9C", Offset = "0xE29A9C")]
		public float handPositionWeight;

		[Token(Token = "0x4000859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE29AB4", Offset = "0xE29AB4")]
		public float handRotationWeight;

		[Token(Token = "0x60008CE")]
		[Address(RVA = "0x170AF18", Offset = "0x170AF18", VA = "0x170AF18")]
		private void OnAnimatorIK(int layer)
		{
		}

		[Token(Token = "0x60008CF")]
		[Address(RVA = "0x170B3C4", Offset = "0x170B3C4", VA = "0x170B3C4")]
		public BipedIKvsAnimatorIK()
		{
		}
	}
	[Token(Token = "0x2000130")]
	public class MechSpider : MonoBehaviour
	{
		[Token(Token = "0x400085A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LayerMask raycastLayers;

		[Token(Token = "0x400085B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float scale;

		[Token(Token = "0x400085C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform body;

		[Token(Token = "0x400085D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MechSpiderLeg[] legs;

		[Token(Token = "0x400085E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float legRotationWeight;

		[Token(Token = "0x400085F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float rootPositionSpeed;

		[Token(Token = "0x4000860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float rootRotationSpeed;

		[Token(Token = "0x4000861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float breatheSpeed;

		[Token(Token = "0x4000862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float breatheMagnitude;

		[Token(Token = "0x4000863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float height;

		[Token(Token = "0x4000864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float minHeight;

		[Token(Token = "0x4000865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float raycastHeight;

		[Token(Token = "0x4000866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float raycastDistance;

		[Token(Token = "0x4000867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE29ACC", Offset = "0xE29ACC")]
		private Vector3 <velocity>k__BackingField;

		[Token(Token = "0x4000868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 lastPosition;

		[Token(Token = "0x4000869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 defaultBodyLocalPosition;

		[Token(Token = "0x400086A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float sine;

		[Token(Token = "0x400086B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private RaycastHit rootHit;

		[Token(Token = "0x17000115")]
		public Vector3 velocity
		{
			[Token(Token = "0x60008D0")]
			[Address(RVA = "0x1715B18", Offset = "0x1715B18", VA = "0x1715B18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2E64C", Offset = "0xE2E64C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60008D1")]
			[Address(RVA = "0x1715B24", Offset = "0x1715B24", VA = "0x1715B24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2E65C", Offset = "0xE2E65C")]
			private set
			{
			}
		}

		[Token(Token = "0x60008D2")]
		[Address(RVA = "0x1715B30", Offset = "0x1715B30", VA = "0x1715B30")]
		private void Start()
		{
		}

		[Token(Token = "0x60008D3")]
		[Address(RVA = "0x1715B6C", Offset = "0x1715B6C", VA = "0x1715B6C")]
		private void Update()
		{
		}

		[Token(Token = "0x60008D4")]
		[Address(RVA = "0x1716628", Offset = "0x1716628", VA = "0x1716628")]
		private Vector3 GetLegCentroid()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60008D5")]
		[Address(RVA = "0x171630C", Offset = "0x171630C", VA = "0x171630C")]
		private Vector3 GetLegsPlaneNormal()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60008D6")]
		[Address(RVA = "0x17167A0", Offset = "0x17167A0", VA = "0x17167A0")]
		public MechSpider()
		{
		}
	}
	[Token(Token = "0x2000131")]
	public class MechSpiderController : MonoBehaviour
	{
		[Token(Token = "0x400086C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MechSpider mechSpider;

		[Token(Token = "0x400086D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform cameraTransform;

		[Token(Token = "0x400086E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float speed;

		[Token(Token = "0x400086F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float turnSpeed;

		[Token(Token = "0x17000116")]
		public Vector3 inputVector
		{
			[Token(Token = "0x60008D7")]
			[Address(RVA = "0x1599E64", Offset = "0x1599E64", VA = "0x1599E64")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60008D8")]
		[Address(RVA = "0x1599F04", Offset = "0x1599F04", VA = "0x1599F04")]
		private void Update()
		{
		}

		[Token(Token = "0x60008D9")]
		[Address(RVA = "0x159A19C", Offset = "0x159A19C", VA = "0x159A19C")]
		public MechSpiderController()
		{
		}
	}
	[Token(Token = "0x2000132")]
	public class MechSpiderLeg : MonoBehaviour
	{
		[Token(Token = "0x2000133")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE215F8", Offset = "0xE215F8")]
		private sealed class <Step>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000886")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000887")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000888")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MechSpiderLeg <>4__this;

			[Token(Token = "0x4000889")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 stepStartPosition;

			[Token(Token = "0x400088A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Vector3 targetPosition;

			[Token(Token = "0x17000119")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60008E8")]
				[Address(RVA = "0x159B5E0", Offset = "0x159B5E0", VA = "0x159B5E0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700011A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60008EA")]
				[Address(RVA = "0x159B648", Offset = "0x159B648", VA = "0x159B648", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60008E5")]
			[Address(RVA = "0x159B1CC", Offset = "0x159B1CC", VA = "0x159B1CC")]
			[DebuggerHidden]
			public <Step>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x60008E6")]
			[Address(RVA = "0x159B2A0", Offset = "0x159B2A0", VA = "0x159B2A0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60008E7")]
			[Address(RVA = "0x159B2A4", Offset = "0x159B2A4", VA = "0x159B2A4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60008E9")]
			[Address(RVA = "0x159B5E8", Offset = "0x159B5E8", VA = "0x159B5E8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MechSpider mechSpider;

		[Token(Token = "0x4000871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MechSpiderLeg unSync;

		[Token(Token = "0x4000872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 offset;

		[Token(Token = "0x4000873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float minDelay;

		[Token(Token = "0x4000874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float maxOffset;

		[Token(Token = "0x4000875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float stepSpeed;

		[Token(Token = "0x4000876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float footHeight;

		[Token(Token = "0x4000877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float velocityPrediction;

		[Token(Token = "0x4000878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float raycastFocus;

		[Token(Token = "0x4000879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AnimationCurve yOffset;

		[Token(Token = "0x400087A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform foot;

		[Token(Token = "0x400087B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector3 footUpAxis;

		[Token(Token = "0x400087C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float footRotationSpeed;

		[Token(Token = "0x400087D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public ParticleSystem sand;

		[Token(Token = "0x400087E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private IK ik;

		[Token(Token = "0x400087F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float stepProgress;

		[Token(Token = "0x4000880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float lastStepTime;

		[Token(Token = "0x4000881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 defaultPosition;

		[Token(Token = "0x4000882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private RaycastHit hit;

		[Token(Token = "0x4000883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Quaternion lastFootLocalRotation;

		[Token(Token = "0x4000884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Vector3 smoothHitNormal;

		[Token(Token = "0x4000885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private Vector3 lastStepPosition;

		[Token(Token = "0x17000117")]
		public bool isStepping
		{
			[Token(Token = "0x60008DA")]
			[Address(RVA = "0x159A1B0", Offset = "0x159A1B0", VA = "0x159A1B0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000118")]
		public Vector3 position
		{
			[Token(Token = "0x60008DB")]
			[Address(RVA = "0x159A1C4", Offset = "0x159A1C4", VA = "0x159A1C4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60008DC")]
			[Address(RVA = "0x159A1F8", Offset = "0x159A1F8", VA = "0x159A1F8")]
			set
			{
			}
		}

		[Token(Token = "0x60008DD")]
		[Address(RVA = "0x159A248", Offset = "0x159A248", VA = "0x159A248")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008DE")]
		[Address(RVA = "0x159A4CC", Offset = "0x159A4CC", VA = "0x159A4CC")]
		private void AfterIK()
		{
		}

		[Token(Token = "0x60008DF")]
		[Address(RVA = "0x159A6E8", Offset = "0x159A6E8", VA = "0x159A6E8")]
		private void Start()
		{
		}

		[Token(Token = "0x60008E0")]
		[Address(RVA = "0x159A9A0", Offset = "0x159A9A0", VA = "0x159A9A0")]
		private Vector3 GetStepTarget(out bool stepFound, float focus, float distance)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60008E1")]
		[Address(RVA = "0x159AD38", Offset = "0x159AD38", VA = "0x159AD38")]
		private void UpdatePosition(float distance)
		{
		}

		[Token(Token = "0x60008E2")]
		[Address(RVA = "0x159AF94", Offset = "0x159AF94", VA = "0x159AF94")]
		private void Update()
		{
		}

		[Token(Token = "0x60008E3")]
		[Address(RVA = "0x159A8E8", Offset = "0x159A8E8", VA = "0x159A8E8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE2E66C", Offset = "0xE2E66C")]
		private IEnumerator Step(Vector3 stepStartPosition, Vector3 targetPosition)
		{
			return null;
		}

		[Token(Token = "0x60008E4")]
		[Address(RVA = "0x159B1F8", Offset = "0x159B1F8", VA = "0x159B1F8")]
		public MechSpiderLeg()
		{
		}
	}
	[Token(Token = "0x2000134")]
	public class MechSpiderParticles : MonoBehaviour
	{
		[Token(Token = "0x400088B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MechSpiderController mechSpiderController;

		[Token(Token = "0x400088C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ParticleSystem particles;

		[Token(Token = "0x60008EB")]
		[Address(RVA = "0x159B650", Offset = "0x159B650", VA = "0x159B650")]
		private void Start()
		{
		}

		[Token(Token = "0x60008EC")]
		[Address(RVA = "0x159B70C", Offset = "0x159B70C", VA = "0x159B70C")]
		private void Update()
		{
		}

		[Token(Token = "0x60008ED")]
		[Address(RVA = "0x159B9A0", Offset = "0x159B9A0", VA = "0x159B9A0")]
		public MechSpiderParticles()
		{
		}
	}
	[Token(Token = "0x2000135")]
	public class AnimationWarping : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x2000136")]
		public struct Warp
		{
			[Token(Token = "0x4000891")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE29B9C", Offset = "0xE29B9C")]
			public int animationLayer;

			[Token(Token = "0x4000892")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE29BD4", Offset = "0xE29BD4")]
			public string animationState;

			[Token(Token = "0x4000893")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE29C0C", Offset = "0xE29C0C")]
			public AnimationCurve weightCurve;

			[Token(Token = "0x4000894")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE29C44", Offset = "0xE29C44")]
			public Transform warpFrom;

			[Token(Token = "0x4000895")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE29C7C", Offset = "0xE29C7C")]
			public Transform warpTo;

			[Token(Token = "0x4000896")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE29CB4", Offset = "0xE29CB4")]
			public FullBodyBipedEffector effector;
		}

		[Serializable]
		[Token(Token = "0x2000137")]
		public enum EffectorMode
		{
			[Token(Token = "0x4000898")]
			PositionOffset,
			[Token(Token = "0x4000899")]
			Position
		}

		[Token(Token = "0x400088D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE29ADC", Offset = "0xE29ADC")]
		public Animator animator;

		[Token(Token = "0x400088E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE29B14", Offset = "0xE29B14")]
		public EffectorMode effectorMode;

		[Token(Token = "0x400088F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xE29B4C", Offset = "0xE29B4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE29B4C", Offset = "0xE29B4C")]
		public Warp[] warps;

		[Token(Token = "0x4000890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private EffectorMode lastMode;

		[Token(Token = "0x60008EE")]
		[Address(RVA = "0x1709394", Offset = "0x1709394", VA = "0x1709394", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60008EF")]
		[Address(RVA = "0x17093C0", Offset = "0x17093C0", VA = "0x17093C0")]
		public float GetWarpWeight(int warpIndex)
		{
			return default(float);
		}

		[Token(Token = "0x60008F0")]
		[Address(RVA = "0x17095E0", Offset = "0x17095E0", VA = "0x17095E0", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x60008F1")]
		[Address(RVA = "0x1709994", Offset = "0x1709994", VA = "0x1709994")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60008F2")]
		[Address(RVA = "0x1709A34", Offset = "0x1709A34", VA = "0x1709A34")]
		public AnimationWarping()
		{
		}
	}
	[Token(Token = "0x2000138")]
	public class AnimatorController3rdPerson : MonoBehaviour
	{
		[Token(Token = "0x400089A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float rotateSpeed;

		[Token(Token = "0x400089B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float blendSpeed;

		[Token(Token = "0x400089C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float maxAngle;

		[Token(Token = "0x400089D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float moveSpeed;

		[Token(Token = "0x400089E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float rootMotionWeight;

		[Token(Token = "0x400089F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Animator animator;

		[Token(Token = "0x40008A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Vector3 moveBlend;

		[Token(Token = "0x40008A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		protected Vector3 moveInput;

		[Token(Token = "0x40008A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Vector3 velocity;

		[Token(Token = "0x60008F3")]
		[Address(RVA = "0x1709A3C", Offset = "0x1709A3C", VA = "0x1709A3C", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x60008F4")]
		[Address(RVA = "0x1709A9C", Offset = "0x1709A9C", VA = "0x1709A9C")]
		private void OnAnimatorMove()
		{
		}

		[Token(Token = "0x60008F5")]
		[Address(RVA = "0x1709CD4", Offset = "0x1709CD4", VA = "0x1709CD4", Slot = "5")]
		public virtual void Move(Vector3 moveInput, bool isMoving, Vector3 faceDirection, Vector3 aimTarget)
		{
		}

		[Token(Token = "0x60008F6")]
		[Address(RVA = "0x1709F38", Offset = "0x1709F38", VA = "0x1709F38")]
		public AnimatorController3rdPerson()
		{
		}
	}
	[Token(Token = "0x2000139")]
	public class AnimatorController3rdPersonIK : AnimatorController3rdPerson
	{
		[Token(Token = "0x40008A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE29CEC", Offset = "0xE29CEC")]
		public float headLookWeight;

		[Token(Token = "0x40008A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector3 gunHoldOffset;

		[Token(Token = "0x40008A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public Vector3 leftHandOffset;

		[Token(Token = "0x40008A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Recoil recoil;

		[Token(Token = "0x40008A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private AimIK aim;

		[Token(Token = "0x40008A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private FullBodyBipedIK ik;

		[Token(Token = "0x40008A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 headLookAxis;

		[Token(Token = "0x40008AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Vector3 leftHandPosRelToRightHand;

		[Token(Token = "0x40008AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Quaternion leftHandRotRelToRightHand;

		[Token(Token = "0x40008AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Vector3 aimTarget;

		[Token(Token = "0x40008AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private Quaternion rightHandRotation;

		[Token(Token = "0x60008F7")]
		[Address(RVA = "0x1709F4C", Offset = "0x1709F4C", VA = "0x1709F4C", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60008F8")]
		[Address(RVA = "0x170A0F8", Offset = "0x170A0F8", VA = "0x170A0F8", Slot = "5")]
		public override void Move(Vector3 moveInput, bool isMoving, Vector3 faceDirection, Vector3 aimTarget)
		{
		}

		[Token(Token = "0x60008F9")]
		[Address(RVA = "0x170A174", Offset = "0x170A174", VA = "0x170A174")]
		private void Read()
		{
		}

		[Token(Token = "0x60008FA")]
		[Address(RVA = "0x170A2CC", Offset = "0x170A2CC", VA = "0x170A2CC")]
		private void AimIK()
		{
		}

		[Token(Token = "0x60008FB")]
		[Address(RVA = "0x170A314", Offset = "0x170A314", VA = "0x170A314")]
		private void FBBIK()
		{
		}

		[Token(Token = "0x60008FC")]
		[Address(RVA = "0x170A90C", Offset = "0x170A90C", VA = "0x170A90C")]
		private void OnPreRead()
		{
		}

		[Token(Token = "0x60008FD")]
		[Address(RVA = "0x170A6D0", Offset = "0x170A6D0", VA = "0x170A6D0")]
		private void HeadLookAt(Vector3 lookAtTarget)
		{
		}

		[Token(Token = "0x60008FE")]
		[Address(RVA = "0x170AC64", Offset = "0x170AC64", VA = "0x170AC64")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60008FF")]
		[Address(RVA = "0x170AD80", Offset = "0x170AD80", VA = "0x170AD80")]
		public AnimatorController3rdPersonIK()
		{
		}
	}
	[Token(Token = "0x200013A")]
	public class CharacterAnimationThirdPersonIK : CharacterAnimationThirdPerson
	{
		[Token(Token = "0x40008AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private FullBodyBipedIK ik;

		[Token(Token = "0x6000900")]
		[Address(RVA = "0x170C394", Offset = "0x170C394", VA = "0x170C394", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000901")]
		[Address(RVA = "0x170C3FC", Offset = "0x170C3FC", VA = "0x170C3FC", Slot = "7")]
		protected override void LateUpdate()
		{
		}

		[Token(Token = "0x6000902")]
		[Address(RVA = "0x170C6C0", Offset = "0x170C6C0", VA = "0x170C6C0")]
		private void RotateEffector(IKEffector effector, Quaternion rotation, float mlp)
		{
		}

		[Token(Token = "0x6000903")]
		[Address(RVA = "0x170C878", Offset = "0x170C878", VA = "0x170C878")]
		public CharacterAnimationThirdPersonIK()
		{
		}
	}
	[Token(Token = "0x200013B")]
	public class CharacterController3rdPerson : MonoBehaviour
	{
		[Token(Token = "0x40008AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CameraController cam;

		[Token(Token = "0x40008B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AnimatorController3rdPerson animatorController;

		[Token(Token = "0x1700011B")]
		private static Vector3 inputVector
		{
			[Token(Token = "0x6000906")]
			[Address(RVA = "0x170D6E4", Offset = "0x170D6E4", VA = "0x170D6E4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700011C")]
		private static Vector3 inputVectorRaw
		{
			[Token(Token = "0x6000907")]
			[Address(RVA = "0x170D784", Offset = "0x170D784", VA = "0x170D784")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000904")]
		[Address(RVA = "0x170D428", Offset = "0x170D428", VA = "0x170D428")]
		private void Start()
		{
		}

		[Token(Token = "0x6000905")]
		[Address(RVA = "0x170D4A0", Offset = "0x170D4A0", VA = "0x170D4A0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000908")]
		[Address(RVA = "0x170D824", Offset = "0x170D824", VA = "0x170D824")]
		public CharacterController3rdPerson()
		{
		}
	}
	[Token(Token = "0x200013C")]
	public class EffectorOffset : OffsetModifier
	{
		[Token(Token = "0x40008B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE29D04", Offset = "0xE29D04")]
		public float handsMaintainRelativePositionWeight;

		[Token(Token = "0x40008B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 bodyOffset;

		[Token(Token = "0x40008B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 leftShoulderOffset;

		[Token(Token = "0x40008B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 rightShoulderOffset;

		[Token(Token = "0x40008B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector3 leftThighOffset;

		[Token(Token = "0x40008B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector3 rightThighOffset;

		[Token(Token = "0x40008B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public Vector3 leftHandOffset;

		[Token(Token = "0x40008B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Vector3 rightHandOffset;

		[Token(Token = "0x40008B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public Vector3 leftFootOffset;

		[Token(Token = "0x40008BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Vector3 rightFootOffset;

		[Token(Token = "0x6000909")]
		[Address(RVA = "0x1710220", Offset = "0x1710220", VA = "0x1710220", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x600090A")]
		[Address(RVA = "0x1710804", Offset = "0x1710804", VA = "0x1710804")]
		public EffectorOffset()
		{
		}
	}
	[Token(Token = "0x200013D")]
	public class ExplosionDemo : MonoBehaviour
	{
		[Token(Token = "0x40008BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SimpleLocomotion character;

		[Token(Token = "0x40008BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float forceMlp;

		[Token(Token = "0x40008BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float upForce;

		[Token(Token = "0x40008BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float weightFalloffSpeed;

		[Token(Token = "0x40008BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve weightFalloff;

		[Token(Token = "0x40008C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AnimationCurve explosionForceByDistance;

		[Token(Token = "0x40008C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AnimationCurve scale;

		[Token(Token = "0x40008C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float weight;

		[Token(Token = "0x40008C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 defaultScale;

		[Token(Token = "0x40008C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Rigidbody r;

		[Token(Token = "0x40008C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private FullBodyBipedIK ik;

		[Token(Token = "0x600090B")]
		[Address(RVA = "0x171080C", Offset = "0x171080C", VA = "0x171080C")]
		private void Start()
		{
		}

		[Token(Token = "0x600090C")]
		[Address(RVA = "0x17108C0", Offset = "0x17108C0", VA = "0x17108C0")]
		private void Update()
		{
		}

		[Token(Token = "0x600090D")]
		[Address(RVA = "0x1710D3C", Offset = "0x1710D3C", VA = "0x1710D3C")]
		private void SetEffectorWeights(float w)
		{
		}

		[Token(Token = "0x600090E")]
		[Address(RVA = "0x1710DE8", Offset = "0x1710DE8", VA = "0x1710DE8")]
		public ExplosionDemo()
		{
		}
	}
	[Token(Token = "0x200013E")]
	public class FBBIKSettings : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200013F")]
		public class Limb
		{
			[Token(Token = "0x40008CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FBIKChain.Smoothing reachSmoothing;

			[Token(Token = "0x40008CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float maintainRelativePositionWeight;

			[Token(Token = "0x40008D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float mappingWeight;

			[Token(Token = "0x6000913")]
			[Address(RVA = "0x1710FBC", Offset = "0x1710FBC", VA = "0x1710FBC")]
			public void Apply(FullBodyBipedChain chain, IKSolverFullBodyBiped solver)
			{
			}

			[Token(Token = "0x6000914")]
			[Address(RVA = "0x17110F0", Offset = "0x17110F0", VA = "0x17110F0")]
			public Limb()
			{
			}
		}

		[Token(Token = "0x40008C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x40008C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool disableAfterStart;

		[Token(Token = "0x40008C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Limb leftArm;

		[Token(Token = "0x40008C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Limb rightArm;

		[Token(Token = "0x40008CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Limb leftLeg;

		[Token(Token = "0x40008CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Limb rightLeg;

		[Token(Token = "0x40008CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float rootPin;

		[Token(Token = "0x40008CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool bodyEffectChildNodes;

		[Token(Token = "0x600090F")]
		[Address(RVA = "0x1710E70", Offset = "0x1710E70", VA = "0x1710E70")]
		public void UpdateSettings()
		{
		}

		[Token(Token = "0x6000910")]
		[Address(RVA = "0x1711040", Offset = "0x1711040", VA = "0x1711040")]
		private void Start()
		{
		}

		[Token(Token = "0x6000911")]
		[Address(RVA = "0x17110DC", Offset = "0x17110DC", VA = "0x17110DC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000912")]
		[Address(RVA = "0x17110E0", Offset = "0x17110E0", VA = "0x17110E0")]
		public FBBIKSettings()
		{
		}
	}
	[Token(Token = "0x2000140")]
	public class FBIKBendGoal : MonoBehaviour
	{
		[Token(Token = "0x40008D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x40008D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FullBodyBipedChain chain;

		[Token(Token = "0x40008D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float weight;

		[Token(Token = "0x6000915")]
		[Address(RVA = "0x1711100", Offset = "0x1711100", VA = "0x1711100")]
		private void Start()
		{
		}

		[Token(Token = "0x6000916")]
		[Address(RVA = "0x171116C", Offset = "0x171116C", VA = "0x171116C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000917")]
		[Address(RVA = "0x1711250", Offset = "0x1711250", VA = "0x1711250")]
		public FBIKBendGoal()
		{
		}
	}
	[Token(Token = "0x2000141")]
	public class FBIKBoxing : MonoBehaviour
	{
		[Token(Token = "0x40008D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE29D1C", Offset = "0xE29D1C")]
		public Transform target;

		[Token(Token = "0x40008D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE29D54", Offset = "0xE29D54")]
		public Transform pin;

		[Token(Token = "0x40008D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE29D8C", Offset = "0xE29D8C")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x40008D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE29DC4", Offset = "0xE29DC4")]
		public AimIK aim;

		[Token(Token = "0x40008D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE29DFC", Offset = "0xE29DFC")]
		public float weight;

		[Token(Token = "0x40008D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE29E34", Offset = "0xE29E34")]
		public FullBodyBipedEffector effector;

		[Token(Token = "0x40008DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE29E6C", Offset = "0xE29E6C")]
		public AnimationCurve aimWeight;

		[Token(Token = "0x40008DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Animator animator;

		[Token(Token = "0x6000918")]
		[Address(RVA = "0x1711258", Offset = "0x1711258", VA = "0x1711258")]
		private void Start()
		{
		}

		[Token(Token = "0x6000919")]
		[Address(RVA = "0x17112B8", Offset = "0x17112B8", VA = "0x17112B8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600091A")]
		[Address(RVA = "0x1711454", Offset = "0x1711454", VA = "0x1711454")]
		public FBIKBoxing()
		{
		}
	}
	[Token(Token = "0x2000142")]
	public class FBIKHandsOnProp : MonoBehaviour
	{
		[Token(Token = "0x40008DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x40008DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool leftHanded;

		[Token(Token = "0x600091B")]
		[Address(RVA = "0x171145C", Offset = "0x171145C", VA = "0x171145C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600091C")]
		[Address(RVA = "0x171152C", Offset = "0x171152C", VA = "0x171152C")]
		private void OnPreRead()
		{
		}

		[Token(Token = "0x600091D")]
		[Address(RVA = "0x17115BC", Offset = "0x17115BC", VA = "0x17115BC")]
		private void HandsOnProp(IKEffector mainHand, IKEffector otherHand)
		{
		}

		[Token(Token = "0x600091E")]
		[Address(RVA = "0x1711AD0", Offset = "0x1711AD0", VA = "0x1711AD0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600091F")]
		[Address(RVA = "0x1711BEC", Offset = "0x1711BEC", VA = "0x1711BEC")]
		public FBIKHandsOnProp()
		{
		}
	}
	[Token(Token = "0x2000143")]
	public class FPSAiming : MonoBehaviour
	{
		[Token(Token = "0x40008DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE29EA4", Offset = "0xE29EA4")]
		public float aimWeight;

		[Token(Token = "0x40008DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE29EBC", Offset = "0xE29EBC")]
		public float sightWeight;

		[Token(Token = "0x40008E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE29ED4", Offset = "0xE29ED4")]
		public float maxAngle;

		[Token(Token = "0x40008E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 aimOffset;

		[Token(Token = "0x40008E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool animatePhysics;

		[Token(Token = "0x40008E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform gun;

		[Token(Token = "0x40008E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform gunTarget;

		[Token(Token = "0x40008E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x40008E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AimIK gunAim;

		[Token(Token = "0x40008E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AimIK headAim;

		[Token(Token = "0x40008E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public CameraControllerFPS cam;

		[Token(Token = "0x40008E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Recoil recoil;

		[Token(Token = "0x40008EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE29EF0", Offset = "0xE29EF0")]
		public float cameraRecoilWeight;

		[Token(Token = "0x40008EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector3 gunTargetDefaultLocalPosition;

		[Token(Token = "0x40008EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 gunTargetDefaultLocalRotation;

		[Token(Token = "0x40008ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3 camDefaultLocalPosition;

		[Token(Token = "0x40008EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 camRelativeToGunTarget;

		[Token(Token = "0x40008EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool updateFrame;

		[Token(Token = "0x6000920")]
		[Address(RVA = "0x1711F80", Offset = "0x1711F80", VA = "0x1711F80")]
		private void Start()
		{
		}

		[Token(Token = "0x6000921")]
		[Address(RVA = "0x1712130", Offset = "0x1712130", VA = "0x1712130")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000922")]
		[Address(RVA = "0x171213C", Offset = "0x171213C", VA = "0x171213C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000923")]
		[Address(RVA = "0x171247C", Offset = "0x171247C", VA = "0x171247C")]
		private void Aiming()
		{
		}

		[Token(Token = "0x6000924")]
		[Address(RVA = "0x17127F4", Offset = "0x17127F4", VA = "0x17127F4")]
		private void LookDownTheSight()
		{
		}

		[Token(Token = "0x6000925")]
		[Address(RVA = "0x1712200", Offset = "0x1712200", VA = "0x1712200")]
		private void RotateCharacter()
		{
		}

		[Token(Token = "0x6000926")]
		[Address(RVA = "0x1713214", Offset = "0x1713214", VA = "0x1713214")]
		public FPSAiming()
		{
		}
	}
	[Token(Token = "0x2000144")]
	public class FPSCharacter : MonoBehaviour
	{
		[Token(Token = "0x40008F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE29F08", Offset = "0xE29F08")]
		public float walkSpeed;

		[Token(Token = "0x40008F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float sVel;

		[Token(Token = "0x40008F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator animator;

		[Token(Token = "0x40008F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private FPSAiming FPSAiming;

		[Token(Token = "0x6000927")]
		[Address(RVA = "0x1713234", Offset = "0x1713234", VA = "0x1713234")]
		private void Start()
		{
		}

		[Token(Token = "0x6000928")]
		[Address(RVA = "0x17132B8", Offset = "0x17132B8", VA = "0x17132B8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000929")]
		[Address(RVA = "0x17133DC", Offset = "0x17133DC", VA = "0x17133DC")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x600092A")]
		[Address(RVA = "0x171348C", Offset = "0x171348C", VA = "0x171348C")]
		public FPSCharacter()
		{
		}
	}
	[Token(Token = "0x2000145")]
	public class HitReactionTrigger : MonoBehaviour
	{
		[Token(Token = "0x40008F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HitReaction hitReaction;

		[Token(Token = "0x40008F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float hitForce;

		[Token(Token = "0x40008F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string colliderName;

		[Token(Token = "0x600092B")]
		[Address(RVA = "0x1713820", Offset = "0x1713820", VA = "0x1713820")]
		private void Update()
		{
		}

		[Token(Token = "0x600092C")]
		[Address(RVA = "0x17139EC", Offset = "0x17139EC", VA = "0x17139EC")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x600092D")]
		[Address(RVA = "0x1713BB0", Offset = "0x1713BB0", VA = "0x1713BB0")]
		public HitReactionTrigger()
		{
		}
	}
	[Token(Token = "0x2000146")]
	public class HoldingHands : MonoBehaviour
	{
		[Token(Token = "0x40008F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FullBodyBipedIK rightHandChar;

		[Token(Token = "0x40008F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FullBodyBipedIK leftHandChar;

		[Token(Token = "0x40008F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform rightHandTarget;

		[Token(Token = "0x40008FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform leftHandTarget;

		[Token(Token = "0x40008FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float crossFade;

		[Token(Token = "0x40008FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float speed;

		[Token(Token = "0x40008FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Quaternion rightHandRotation;

		[Token(Token = "0x40008FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion leftHandRotation;

		[Token(Token = "0x600092E")]
		[Address(RVA = "0x1713F60", Offset = "0x1713F60", VA = "0x1713F60")]
		private void Start()
		{
		}

		[Token(Token = "0x600092F")]
		[Address(RVA = "0x171410C", Offset = "0x171410C", VA = "0x171410C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000930")]
		[Address(RVA = "0x17144C8", Offset = "0x17144C8", VA = "0x17144C8")]
		public HoldingHands()
		{
		}
	}
	[Token(Token = "0x2000147")]
	public class InteractionC2CDemo : MonoBehaviour
	{
		[Token(Token = "0x40008FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractionSystem character1;

		[Token(Token = "0x4000900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractionSystem character2;

		[Token(Token = "0x4000901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InteractionObject handShake;

		[Token(Token = "0x6000931")]
		[Address(RVA = "0x17144D8", Offset = "0x17144D8", VA = "0x17144D8")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000932")]
		[Address(RVA = "0x171460C", Offset = "0x171460C", VA = "0x171460C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000933")]
		[Address(RVA = "0x171475C", Offset = "0x171475C", VA = "0x171475C")]
		public InteractionC2CDemo()
		{
		}
	}
	[Token(Token = "0x2000148")]
	public class InteractionDemo : MonoBehaviour
	{
		[Token(Token = "0x4000902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractionSystem interactionSystem;

		[Token(Token = "0x4000903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool interrupt;

		[Token(Token = "0x4000904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InteractionObject ball;

		[Token(Token = "0x4000905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public InteractionObject benchMain;

		[Token(Token = "0x4000906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public InteractionObject benchHands;

		[Token(Token = "0x4000907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public InteractionObject button;

		[Token(Token = "0x4000908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractionObject cigarette;

		[Token(Token = "0x4000909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public InteractionObject door;

		[Token(Token = "0x400090A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool isSitting;

		[Token(Token = "0x6000934")]
		[Address(RVA = "0x1714764", Offset = "0x1714764", VA = "0x1714764")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000935")]
		[Address(RVA = "0x1714E34", Offset = "0x1714E34", VA = "0x1714E34")]
		public InteractionDemo()
		{
		}
	}
	[Token(Token = "0x2000149")]
	public class InteractionSystemTestGUI : MonoBehaviour
	{
		[Token(Token = "0x400090B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE29F20", Offset = "0xE29F20")]
		public InteractionObject interactionObject;

		[Token(Token = "0x400090C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE29F58", Offset = "0xE29F58")]
		public FullBodyBipedEffector[] effectors;

		[Token(Token = "0x400090D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private InteractionSystem interactionSystem;

		[Token(Token = "0x6000936")]
		[Address(RVA = "0x1714E3C", Offset = "0x1714E3C", VA = "0x1714E3C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000937")]
		[Address(RVA = "0x1714E9C", Offset = "0x1714E9C", VA = "0x1714E9C")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000938")]
		[Address(RVA = "0x17151A8", Offset = "0x17151A8", VA = "0x17151A8")]
		public InteractionSystemTestGUI()
		{
		}
	}
	[Token(Token = "0x200014A")]
	public class KissingRig : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200014B")]
		public class Partner
		{
			[Token(Token = "0x4000912")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FullBodyBipedIK ik;

			[Token(Token = "0x4000913")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform mouth;

			[Token(Token = "0x4000914")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform mouthTarget;

			[Token(Token = "0x4000915")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform touchTargetLeftHand;

			[Token(Token = "0x4000916")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Transform touchTargetRightHand;

			[Token(Token = "0x4000917")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float bodyWeightHorizontal;

			[Token(Token = "0x4000918")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public float bodyWeightVertical;

			[Token(Token = "0x4000919")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public float neckRotationWeight;

			[Token(Token = "0x400091A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public float headTiltAngle;

			[Token(Token = "0x400091B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Vector3 headTiltAxis;

			[Token(Token = "0x400091C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private Quaternion neckRotation;

			[Token(Token = "0x1700011D")]
			private Transform neck
			{
				[Token(Token = "0x600093E")]
				[Address(RVA = "0x1715AAC", Offset = "0x1715AAC", VA = "0x1715AAC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600093C")]
			[Address(RVA = "0x17151E4", Offset = "0x17151E4", VA = "0x17151E4")]
			public void Initiate()
			{
			}

			[Token(Token = "0x600093D")]
			[Address(RVA = "0x1715264", Offset = "0x1715264", VA = "0x1715264")]
			public void Update(float weight)
			{
			}

			[Token(Token = "0x600093F")]
			[Address(RVA = "0x17158D0", Offset = "0x17158D0", VA = "0x17158D0")]
			private void InverseTransformEffector(FullBodyBipedEffector effector, Transform target, Vector3 targetPosition, float weight)
			{
			}

			[Token(Token = "0x6000940")]
			[Address(RVA = "0x1715B04", Offset = "0x1715B04", VA = "0x1715B04")]
			public Partner()
			{
			}
		}

		[Token(Token = "0x400090E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Partner partner1;

		[Token(Token = "0x400090F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Partner partner2;

		[Token(Token = "0x4000910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float weight;

		[Token(Token = "0x4000911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int iterations;

		[Token(Token = "0x6000939")]
		[Address(RVA = "0x17151B0", Offset = "0x17151B0", VA = "0x17151B0")]
		private void Start()
		{
		}

		[Token(Token = "0x600093A")]
		[Address(RVA = "0x1715204", Offset = "0x1715204", VA = "0x1715204")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600093B")]
		[Address(RVA = "0x17158C0", Offset = "0x17158C0", VA = "0x17158C0")]
		public KissingRig()
		{
		}
	}
	[Token(Token = "0x200014C")]
	public class MotionAbsorb : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x200014D")]
		public enum Mode
		{
			[Token(Token = "0x4000925")]
			Position,
			[Token(Token = "0x4000926")]
			PositionOffset
		}

		[Serializable]
		[Token(Token = "0x200014E")]
		public class Absorber
		{
			[Token(Token = "0x4000927")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2A070", Offset = "0xE2A070")]
			public FullBodyBipedEffector effector;

			[Token(Token = "0x4000928")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2A0A8", Offset = "0xE2A0A8")]
			public float weight;

			[Token(Token = "0x4000929")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Vector3 position;

			[Token(Token = "0x400092A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private Quaternion rotation;

			[Token(Token = "0x400092B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private IKEffector e;

			[Token(Token = "0x6000947")]
			[Address(RVA = "0x159BB1C", Offset = "0x159BB1C", VA = "0x159BB1C")]
			public void SetToBone(IKSolverFullBodyBiped solver, Mode mode)
			{
			}

			[Token(Token = "0x6000948")]
			[Address(RVA = "0x159BD10", Offset = "0x159BD10", VA = "0x159BD10")]
			public void UpdateEffectorWeights(float w)
			{
			}

			[Token(Token = "0x6000949")]
			[Address(RVA = "0x159BD4C", Offset = "0x159BD4C", VA = "0x159BD4C")]
			public void SetPosition(float w)
			{
			}

			[Token(Token = "0x600094A")]
			[Address(RVA = "0x159BEFC", Offset = "0x159BEFC", VA = "0x159BEFC")]
			public void SetRotation(float w)
			{
			}

			[Token(Token = "0x600094B")]
			[Address(RVA = "0x159C144", Offset = "0x159C144", VA = "0x159C144")]
			public Absorber()
			{
			}
		}

		[Token(Token = "0x400091D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE29F90", Offset = "0xE29F90")]
		public Mode mode;

		[Token(Token = "0x400091E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE29FC8", Offset = "0xE29FC8")]
		public Absorber[] absorbers;

		[Token(Token = "0x400091F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2A000", Offset = "0xE2A000")]
		public AnimationCurve falloff;

		[Token(Token = "0x4000920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2A038", Offset = "0xE2A038")]
		public float falloffSpeed;

		[Token(Token = "0x4000921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float timer;

		[Token(Token = "0x4000922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float w;

		[Token(Token = "0x4000923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Mode initialMode;

		[Token(Token = "0x6000941")]
		[Address(RVA = "0x159B9A8", Offset = "0x159B9A8", VA = "0x159B9A8", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000942")]
		[Address(RVA = "0x159BA90", Offset = "0x159BA90", VA = "0x159BA90")]
		private void OnCollisionEnter(Collision c)
		{
		}

		[Token(Token = "0x6000943")]
		[Address(RVA = "0x159BC04", Offset = "0x159BC04", VA = "0x159BC04", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x6000944")]
		[Address(RVA = "0x159BE74", Offset = "0x159BE74", VA = "0x159BE74")]
		private void AfterIK()
		{
		}

		[Token(Token = "0x6000945")]
		[Address(RVA = "0x159C00C", Offset = "0x159C00C", VA = "0x159C00C", Slot = "6")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000946")]
		[Address(RVA = "0x159C134", Offset = "0x159C134", VA = "0x159C134")]
		public MotionAbsorb()
		{
		}
	}
	[Token(Token = "0x200014F")]
	public class MotionAbsorbCharacter : MonoBehaviour
	{
		[Token(Token = "0x400092C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Animator animator;

		[Token(Token = "0x400092D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MotionAbsorb motionAbsorb;

		[Token(Token = "0x400092E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform cube;

		[Token(Token = "0x400092F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float cubeRandomPosition;

		[Token(Token = "0x4000930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AnimationCurve motionAbsorbWeight;

		[Token(Token = "0x4000931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 cubeDefaultPosition;

		[Token(Token = "0x4000932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private AnimatorStateInfo info;

		[Token(Token = "0x4000933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Rigidbody cubeRigidbody;

		[Token(Token = "0x600094C")]
		[Address(RVA = "0x159C1C4", Offset = "0x159C1C4", VA = "0x159C1C4")]
		private void Start()
		{
		}

		[Token(Token = "0x600094D")]
		[Address(RVA = "0x159C244", Offset = "0x159C244", VA = "0x159C244")]
		private void Update()
		{
		}

		[Token(Token = "0x600094E")]
		[Address(RVA = "0x159C310", Offset = "0x159C310", VA = "0x159C310")]
		private void SwingStart()
		{
		}

		[Token(Token = "0x600094F")]
		[Address(RVA = "0x159C470", Offset = "0x159C470", VA = "0x159C470")]
		public MotionAbsorbCharacter()
		{
		}
	}
	[Token(Token = "0x2000150")]
	public class OffsetEffector : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x2000151")]
		public class EffectorLink
		{
			[Token(Token = "0x4000935")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FullBodyBipedEffector effectorType;

			[Token(Token = "0x4000936")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float weightMultiplier;

			[Token(Token = "0x4000937")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[HideInInspector]
			public Vector3 localPosition;

			[Token(Token = "0x6000953")]
			[Address(RVA = "0x159D210", Offset = "0x159D210", VA = "0x159D210")]
			public EffectorLink()
			{
			}
		}

		[Token(Token = "0x4000934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public EffectorLink[] effectorLinks;

		[Token(Token = "0x6000950")]
		[Address(RVA = "0x159CEDC", Offset = "0x159CEDC", VA = "0x159CEDC", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000951")]
		[Address(RVA = "0x159CFDC", Offset = "0x159CFDC", VA = "0x159CFDC", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x6000952")]
		[Address(RVA = "0x159D208", Offset = "0x159D208", VA = "0x159D208")]
		public OffsetEffector()
		{
		}
	}
	[Token(Token = "0x2000152")]
	public class PendulumExample : MonoBehaviour
	{
		[Token(Token = "0x4000938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2A0F0", Offset = "0xE2A0F0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE2A0F0", Offset = "0xE2A0F0")]
		public float weight;

		[Token(Token = "0x4000939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2A144", Offset = "0xE2A144")]
		public float hangingDistanceMlp;

		[Token(Token = "0x400093A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2A17C", Offset = "0xE2A17C")]
		public Vector3 rootTargetPosition;

		[Token(Token = "0x400093B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2A1C8", Offset = "0xE2A1C8")]
		[HideInInspector]
		public Quaternion rootTargetRotation;

		[Token(Token = "0x400093C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform target;

		[Token(Token = "0x400093D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform leftHandTarget;

		[Token(Token = "0x400093E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform rightHandTarget;

		[Token(Token = "0x400093F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform leftFootTarget;

		[Token(Token = "0x4000940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform rightFootTarget;

		[Token(Token = "0x4000941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform pelvisTarget;

		[Token(Token = "0x4000942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform bodyTarget;

		[Token(Token = "0x4000943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Transform headTarget;

		[Token(Token = "0x4000944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Vector3 pelvisDownAxis;

		[Token(Token = "0x4000945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private FullBodyBipedIK ik;

		[Token(Token = "0x4000946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Quaternion rootRelativeToPelvis;

		[Token(Token = "0x4000947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 pelvisToRoot;

		[Token(Token = "0x4000948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float lastWeight;

		[Token(Token = "0x6000954")]
		[Address(RVA = "0x159D220", Offset = "0x159D220", VA = "0x159D220")]
		private void Start()
		{
		}

		[Token(Token = "0x6000955")]
		[Address(RVA = "0x159D570", Offset = "0x159D570", VA = "0x159D570")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000956")]
		[Address(RVA = "0x159DCC0", Offset = "0x159DCC0", VA = "0x159DCC0")]
		public PendulumExample()
		{
		}
	}
	[Token(Token = "0x2000153")]
	public abstract class PickUp2Handed : MonoBehaviour
	{
		[Token(Token = "0x4000949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int GUIspace;

		[Token(Token = "0x400094A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractionSystem interactionSystem;

		[Token(Token = "0x400094B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InteractionObject obj;

		[Token(Token = "0x400094C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform pivot;

		[Token(Token = "0x400094D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform holdPoint;

		[Token(Token = "0x400094E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float pickUpTime;

		[Token(Token = "0x400094F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float holdWeight;

		[Token(Token = "0x4000950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float holdWeightVel;

		[Token(Token = "0x4000951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 pickUpPosition;

		[Token(Token = "0x4000952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion pickUpRotation;

		[Token(Token = "0x1700011E")]
		private bool holding
		{
			[Token(Token = "0x600095E")]
			[Address(RVA = "0x159E230", Offset = "0x159E230", VA = "0x159E230")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700011F")]
		private bool holdingLeft
		{
			[Token(Token = "0x600095F")]
			[Address(RVA = "0x159E320", Offset = "0x159E320", VA = "0x159E320")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000120")]
		private bool holdingRight
		{
			[Token(Token = "0x6000960")]
			[Address(RVA = "0x159E268", Offset = "0x159E268", VA = "0x159E268")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000957")]
		[Address(RVA = "0x159DD44", Offset = "0x159DD44", VA = "0x159DD44")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000958")]
		protected abstract void RotatePivot();

		[Token(Token = "0x6000959")]
		[Address(RVA = "0x159E3D8", Offset = "0x159E3D8", VA = "0x159E3D8")]
		private void Start()
		{
		}

		[Token(Token = "0x600095A")]
		[Address(RVA = "0x159E570", Offset = "0x159E570", VA = "0x159E570")]
		private void OnPause(FullBodyBipedEffector effectorType, InteractionObject interactionObject)
		{
		}

		[Token(Token = "0x600095B")]
		[Address(RVA = "0x159E6EC", Offset = "0x159E6EC", VA = "0x159E6EC")]
		private void OnStart(FullBodyBipedEffector effectorType, InteractionObject interactionObject)
		{
		}

		[Token(Token = "0x600095C")]
		[Address(RVA = "0x159E7CC", Offset = "0x159E7CC", VA = "0x159E7CC")]
		private void OnDrop(FullBodyBipedEffector effectorType, InteractionObject interactionObject)
		{
		}

		[Token(Token = "0x600095D")]
		[Address(RVA = "0x159E904", Offset = "0x159E904", VA = "0x159E904")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000961")]
		[Address(RVA = "0x159EB20", Offset = "0x159EB20", VA = "0x159EB20")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000962")]
		[Address(RVA = "0x159ED04", Offset = "0x159ED04", VA = "0x159ED04")]
		protected PickUp2Handed()
		{
		}
	}
	[Token(Token = "0x2000154")]
	public class PickUpBox : PickUp2Handed
	{
		[Token(Token = "0x6000963")]
		[Address(RVA = "0x159ED18", Offset = "0x159ED18", VA = "0x159ED18", Slot = "4")]
		protected override void RotatePivot()
		{
		}

		[Token(Token = "0x6000964")]
		[Address(RVA = "0x159EF0C", Offset = "0x159EF0C", VA = "0x159EF0C")]
		public PickUpBox()
		{
		}
	}
	[Token(Token = "0x2000155")]
	public class PickUpSphere : PickUp2Handed
	{
		[Token(Token = "0x6000965")]
		[Address(RVA = "0x159EF20", Offset = "0x159EF20", VA = "0x159EF20", Slot = "4")]
		protected override void RotatePivot()
		{
		}

		[Token(Token = "0x6000966")]
		[Address(RVA = "0x159F0CC", Offset = "0x159F0CC", VA = "0x159F0CC")]
		public PickUpSphere()
		{
		}
	}
	[Token(Token = "0x2000156")]
	public class RagdollUtilityDemo : MonoBehaviour
	{
		[Token(Token = "0x4000953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RagdollUtility ragdollUtility;

		[Token(Token = "0x4000954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform root;

		[Token(Token = "0x4000955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Rigidbody pelvis;

		[Token(Token = "0x6000967")]
		[Address(RVA = "0x159F86C", Offset = "0x159F86C", VA = "0x159F86C")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000968")]
		[Address(RVA = "0x159F944", Offset = "0x159F944", VA = "0x159F944")]
		private void Update()
		{
		}

		[Token(Token = "0x6000969")]
		[Address(RVA = "0x159FAEC", Offset = "0x159FAEC", VA = "0x159FAEC")]
		public RagdollUtilityDemo()
		{
		}
	}
	[Token(Token = "0x2000157")]
	public class RecoilTest : MonoBehaviour
	{
		[Token(Token = "0x4000956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float magnitude;

		[Token(Token = "0x4000957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Recoil recoil;

		[Token(Token = "0x600096A")]
		[Address(RVA = "0x159FAF4", Offset = "0x159FAF4", VA = "0x159FAF4")]
		private void Start()
		{
		}

		[Token(Token = "0x600096B")]
		[Address(RVA = "0x159FB54", Offset = "0x159FB54", VA = "0x159FB54")]
		private void Update()
		{
		}

		[Token(Token = "0x600096C")]
		[Address(RVA = "0x159FBB0", Offset = "0x159FBB0", VA = "0x159FBB0")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x600096D")]
		[Address(RVA = "0x159FC88", Offset = "0x159FC88", VA = "0x159FC88")]
		public RecoilTest()
		{
		}
	}
	[Token(Token = "0x2000158")]
	public class ResetInteractionObject : MonoBehaviour
	{
		[Token(Token = "0x2000159")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE21608", Offset = "0xE21608")]
		private sealed class <ResetObject>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400095D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400095E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400095F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float resetTime;

			[Token(Token = "0x4000960")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ResetInteractionObject <>4__this;

			[Token(Token = "0x17000121")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000975")]
				[Address(RVA = "0x15A0034", Offset = "0x15A0034", VA = "0x15A0034", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000122")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000977")]
				[Address(RVA = "0x15A009C", Offset = "0x15A009C", VA = "0x15A009C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000972")]
			[Address(RVA = "0x159FE38", Offset = "0x159FE38", VA = "0x159FE38")]
			[DebuggerHidden]
			public <ResetObject>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6000973")]
			[Address(RVA = "0x159FE74", Offset = "0x159FE74", VA = "0x159FE74", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000974")]
			[Address(RVA = "0x159FE78", Offset = "0x159FE78", VA = "0x159FE78", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000976")]
			[Address(RVA = "0x15A003C", Offset = "0x15A003C", VA = "0x15A003C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float resetDelay;

		[Token(Token = "0x4000959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Vector3 defaultPosition;

		[Token(Token = "0x400095A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Quaternion defaultRotation;

		[Token(Token = "0x400095B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform defaultParent;

		[Token(Token = "0x400095C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Rigidbody r;

		[Token(Token = "0x600096E")]
		[Address(RVA = "0x159FC98", Offset = "0x159FC98", VA = "0x159FC98")]
		private void Start()
		{
		}

		[Token(Token = "0x600096F")]
		[Address(RVA = "0x159FD64", Offset = "0x159FD64", VA = "0x159FD64")]
		private void OnPickUp(Transform t)
		{
		}

		[Token(Token = "0x6000970")]
		[Address(RVA = "0x159FDAC", Offset = "0x159FDAC", VA = "0x159FDAC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE2E720", Offset = "0xE2E720")]
		private IEnumerator ResetObject(float resetTime)
		{
			return null;
		}

		[Token(Token = "0x6000971")]
		[Address(RVA = "0x159FE64", Offset = "0x159FE64", VA = "0x159FE64")]
		public ResetInteractionObject()
		{
		}
	}
	[Token(Token = "0x200015A")]
	public class SoccerDemo : MonoBehaviour
	{
		[Token(Token = "0x200015B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE21618", Offset = "0xE21618")]
		private sealed class <ResetDelayed>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000964")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000965")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000966")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoccerDemo <>4__this;

			[Token(Token = "0x17000123")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600097E")]
				[Address(RVA = "0x15A1874", Offset = "0x15A1874", VA = "0x15A1874", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000124")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000980")]
				[Address(RVA = "0x15A18DC", Offset = "0x15A18DC", VA = "0x15A18DC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600097B")]
			[Address(RVA = "0x15A1704", Offset = "0x15A1704", VA = "0x15A1704")]
			[DebuggerHidden]
			public <ResetDelayed>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x600097C")]
			[Address(RVA = "0x15A1738", Offset = "0x15A1738", VA = "0x15A1738", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600097D")]
			[Address(RVA = "0x15A173C", Offset = "0x15A173C", VA = "0x15A173C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600097F")]
			[Address(RVA = "0x15A187C", Offset = "0x15A187C", VA = "0x15A187C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Animator animator;

		[Token(Token = "0x4000962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 defaultPosition;

		[Token(Token = "0x4000963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Quaternion defaultRotation;

		[Token(Token = "0x6000978")]
		[Address(RVA = "0x15A15CC", Offset = "0x15A15CC", VA = "0x15A15CC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000979")]
		[Address(RVA = "0x15A1688", Offset = "0x15A1688", VA = "0x15A1688")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE2E7D4", Offset = "0xE2E7D4")]
		private IEnumerator ResetDelayed()
		{
			return null;
		}

		[Token(Token = "0x600097A")]
		[Address(RVA = "0x15A1730", Offset = "0x15A1730", VA = "0x15A1730")]
		public SoccerDemo()
		{
		}
	}
	[Token(Token = "0x200015C")]
	public class TouchWalls : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200015D")]
		public class EffectorLink
		{
			[Token(Token = "0x4000969")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool enabled;

			[Token(Token = "0x400096A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public FullBodyBipedEffector effectorType;

			[Token(Token = "0x400096B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public InteractionObject interactionObject;

			[Token(Token = "0x400096C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform spherecastFrom;

			[Token(Token = "0x400096D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float spherecastRadius;

			[Token(Token = "0x400096E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float minDistance;

			[Token(Token = "0x400096F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float distanceMlp;

			[Token(Token = "0x4000970")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public LayerMask touchLayers;

			[Token(Token = "0x4000971")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float lerpSpeed;

			[Token(Token = "0x4000972")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public float minSwitchTime;

			[Token(Token = "0x4000973")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public float releaseDistance;

			[Token(Token = "0x4000974")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public bool sliding;

			[Token(Token = "0x4000975")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Vector3 raycastDirectionLocal;

			[Token(Token = "0x4000976")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private float raycastDistance;

			[Token(Token = "0x4000977")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private bool inTouch;

			[Token(Token = "0x4000978")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			private RaycastHit hit;

			[Token(Token = "0x4000979")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private Vector3 targetPosition;

			[Token(Token = "0x400097A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			private Quaternion targetRotation;

			[Token(Token = "0x400097B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
			private bool initiated;

			[Token(Token = "0x400097C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			private float nextSwitchTime;

			[Token(Token = "0x400097D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
			private float speedF;

			[Token(Token = "0x6000985")]
			[Address(RVA = "0x15A1E84", Offset = "0x15A1E84", VA = "0x15A1E84")]
			public void Initiate(InteractionSystem interactionSystem)
			{
			}

			[Token(Token = "0x6000986")]
			[Address(RVA = "0x15A2B94", Offset = "0x15A2B94", VA = "0x15A2B94")]
			private bool FindWalls(Vector3 direction)
			{
				return default(bool);
			}

			[Token(Token = "0x6000987")]
			[Address(RVA = "0x15A2200", Offset = "0x15A2200", VA = "0x15A2200")]
			public void Update(InteractionSystem interactionSystem)
			{
			}

			[Token(Token = "0x6000988")]
			[Address(RVA = "0x15A2C80", Offset = "0x15A2C80", VA = "0x15A2C80")]
			private void StopTouch(InteractionSystem interactionSystem)
			{
			}

			[Token(Token = "0x6000989")]
			[Address(RVA = "0x15A2E1C", Offset = "0x15A2E1C", VA = "0x15A2E1C")]
			private void OnInteractionStart(FullBodyBipedEffector effectorType, InteractionObject interactionObject)
			{
			}

			[Token(Token = "0x600098A")]
			[Address(RVA = "0x15A2EB8", Offset = "0x15A2EB8", VA = "0x15A2EB8")]
			private void OnInteractionResume(FullBodyBipedEffector effectorType, InteractionObject interactionObject)
			{
			}

			[Token(Token = "0x600098B")]
			[Address(RVA = "0x15A2F50", Offset = "0x15A2F50", VA = "0x15A2F50")]
			private void OnInteractionStop(FullBodyBipedEffector effectorType, InteractionObject interactionObject)
			{
			}

			[Token(Token = "0x600098C")]
			[Address(RVA = "0x15A29E0", Offset = "0x15A29E0", VA = "0x15A29E0")]
			public void Destroy(InteractionSystem interactionSystem)
			{
			}

			[Token(Token = "0x600098D")]
			[Address(RVA = "0x15A2FE8", Offset = "0x15A2FE8", VA = "0x15A2FE8")]
			public EffectorLink()
			{
			}
		}

		[Token(Token = "0x4000967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractionSystem interactionSystem;

		[Token(Token = "0x4000968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EffectorLink[] effectorLinks;

		[Token(Token = "0x6000981")]
		[Address(RVA = "0x15A1E0C", Offset = "0x15A1E0C", VA = "0x15A1E0C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000982")]
		[Address(RVA = "0x15A2194", Offset = "0x15A2194", VA = "0x15A2194")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000983")]
		[Address(RVA = "0x15A2918", Offset = "0x15A2918", VA = "0x15A2918")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000984")]
		[Address(RVA = "0x15A2B8C", Offset = "0x15A2B8C", VA = "0x15A2B8C")]
		public TouchWalls()
		{
		}
	}
	[Token(Token = "0x200015E")]
	public class TransferMotion : MonoBehaviour
	{
		[Token(Token = "0x400097E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2A214", Offset = "0xE2A214")]
		public Transform to;

		[Token(Token = "0x400097F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2A24C", Offset = "0xE2A24C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE2A24C", Offset = "0xE2A24C")]
		public float transferMotion;

		[Token(Token = "0x4000980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 lastPosition;

		[Token(Token = "0x600098E")]
		[Address(RVA = "0x15A3024", Offset = "0x15A3024", VA = "0x15A3024")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600098F")]
		[Address(RVA = "0x15A3060", Offset = "0x15A3060", VA = "0x15A3060")]
		private void Update()
		{
		}

		[Token(Token = "0x6000990")]
		[Address(RVA = "0x15A31B8", Offset = "0x15A31B8", VA = "0x15A31B8")]
		public TransferMotion()
		{
		}
	}
	[Token(Token = "0x200015F")]
	public class TwoHandedProp : MonoBehaviour
	{
		[Token(Token = "0x4000981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2A2A0", Offset = "0xE2A2A0")]
		public Transform leftHandTarget;

		[Token(Token = "0x4000982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FullBodyBipedIK ik;

		[Token(Token = "0x4000983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 targetPosRelativeToRight;

		[Token(Token = "0x4000984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Quaternion targetRotRelativeToRight;

		[Token(Token = "0x6000991")]
		[Address(RVA = "0x15A338C", Offset = "0x15A338C", VA = "0x15A338C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000992")]
		[Address(RVA = "0x15A356C", Offset = "0x15A356C", VA = "0x15A356C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000993")]
		[Address(RVA = "0x15A3808", Offset = "0x15A3808", VA = "0x15A3808")]
		private void AfterFBBIK()
		{
		}

		[Token(Token = "0x6000994")]
		[Address(RVA = "0x15A38D4", Offset = "0x15A38D4", VA = "0x15A38D4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000995")]
		[Address(RVA = "0x15A39F0", Offset = "0x15A39F0", VA = "0x15A39F0")]
		public TwoHandedProp()
		{
		}
	}
	[Token(Token = "0x2000160")]
	public class UserControlInteractions : UserControlThirdPerson
	{
		[Token(Token = "0x4000985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public CharacterThirdPerson character;

		[Token(Token = "0x4000986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public InteractionSystem interactionSystem;

		[Token(Token = "0x4000987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool disableInputInInteraction;

		[Token(Token = "0x4000988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float enableInputAtProgress;

		[Token(Token = "0x6000996")]
		[Address(RVA = "0x15A3D5C", Offset = "0x15A3D5C", VA = "0x15A3D5C", Slot = "5")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6000997")]
		[Address(RVA = "0x15A41D4", Offset = "0x15A41D4", VA = "0x15A41D4")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000998")]
		[Address(RVA = "0x15A442C", Offset = "0x15A442C", VA = "0x15A442C")]
		public UserControlInteractions()
		{
		}
	}
	[Token(Token = "0x2000161")]
	public class GrounderDemo : MonoBehaviour
	{
		[Token(Token = "0x4000989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] characters;

		[Token(Token = "0x6000999")]
		[Address(RVA = "0x171349C", Offset = "0x171349C", VA = "0x171349C")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x600099A")]
		[Address(RVA = "0x1713798", Offset = "0x1713798", VA = "0x1713798")]
		public void Activate(int index)
		{
		}

		[Token(Token = "0x600099B")]
		[Address(RVA = "0x1713818", Offset = "0x1713818", VA = "0x1713818")]
		public GrounderDemo()
		{
		}
	}
	[Token(Token = "0x2000162")]
	public class PlatformRotator : MonoBehaviour
	{
		[Token(Token = "0x2000163")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE21628", Offset = "0xE21628")]
		private sealed class <SwitchRotation>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000996")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000997")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000998")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlatformRotator <>4__this;

			[Token(Token = "0x17000125")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60009A5")]
				[Address(RVA = "0x159F7FC", Offset = "0x159F7FC", VA = "0x159F7FC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000126")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60009A7")]
				[Address(RVA = "0x159F864", Offset = "0x159F864", VA = "0x159F864", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60009A2")]
			[Address(RVA = "0x159F4AC", Offset = "0x159F4AC", VA = "0x159F4AC")]
			[DebuggerHidden]
			public <SwitchRotation>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x60009A3")]
			[Address(RVA = "0x159F6B8", Offset = "0x159F6B8", VA = "0x159F6B8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60009A4")]
			[Address(RVA = "0x159F6BC", Offset = "0x159F6BC", VA = "0x159F6BC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60009A6")]
			[Address(RVA = "0x159F804", Offset = "0x159F804", VA = "0x159F804", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400098A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float maxAngle;

		[Token(Token = "0x400098B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float switchRotationTime;

		[Token(Token = "0x400098C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float random;

		[Token(Token = "0x400098D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float rotationSpeed;

		[Token(Token = "0x400098E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 movePosition;

		[Token(Token = "0x400098F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float moveSpeed;

		[Token(Token = "0x4000990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int characterLayer;

		[Token(Token = "0x4000991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion defaultRotation;

		[Token(Token = "0x4000992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion targetRotation;

		[Token(Token = "0x4000993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 targetPosition;

		[Token(Token = "0x4000994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 velocity;

		[Token(Token = "0x4000995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Rigidbody r;

		[Token(Token = "0x600099C")]
		[Address(RVA = "0x159F0E0", Offset = "0x159F0E0", VA = "0x159F0E0")]
		private void Start()
		{
		}

		[Token(Token = "0x600099D")]
		[Address(RVA = "0x159F284", Offset = "0x159F284", VA = "0x159F284")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600099E")]
		[Address(RVA = "0x159F208", Offset = "0x159F208", VA = "0x159F208")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE2E888", Offset = "0xE2E888")]
		private IEnumerator SwitchRotation()
		{
			return null;
		}

		[Token(Token = "0x600099F")]
		[Address(RVA = "0x159F4D8", Offset = "0x159F4D8", VA = "0x159F4D8")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x60009A0")]
		[Address(RVA = "0x159F5BC", Offset = "0x159F5BC", VA = "0x159F5BC")]
		private void OnCollisionExit(Collision collision)
		{
		}

		[Token(Token = "0x60009A1")]
		[Address(RVA = "0x159F69C", Offset = "0x159F69C", VA = "0x159F69C")]
		public PlatformRotator()
		{
		}
	}
	[Token(Token = "0x2000164")]
	public class BendGoal : MonoBehaviour
	{
		[Token(Token = "0x4000999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LimbIK limbIK;

		[Token(Token = "0x400099A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE2A2D8", Offset = "0xE2A2D8")]
		public float weight;

		[Token(Token = "0x60009A8")]
		[Address(RVA = "0x170ADE0", Offset = "0x170ADE0", VA = "0x170ADE0")]
		private void Start()
		{
		}

		[Token(Token = "0x60009A9")]
		[Address(RVA = "0x170AE4C", Offset = "0x170AE4C", VA = "0x170AE4C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60009AA")]
		[Address(RVA = "0x170AF08", Offset = "0x170AF08", VA = "0x170AF08")]
		public BendGoal()
		{
		}
	}
	[Token(Token = "0x2000165")]
	public class Turret : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000166")]
		public class Part
		{
			[Token(Token = "0x400099D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform transform;

			[Token(Token = "0x400099E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private RotationLimit rotationLimit;

			[Token(Token = "0x60009AD")]
			[Address(RVA = "0x15A3244", Offset = "0x15A3244", VA = "0x15A3244")]
			public void AimAt(Transform target)
			{
			}

			[Token(Token = "0x60009AE")]
			[Address(RVA = "0x15A3384", Offset = "0x15A3384", VA = "0x15A3384")]
			public Part()
			{
			}
		}

		[Token(Token = "0x400099B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x400099C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Part[] parts;

		[Token(Token = "0x60009AB")]
		[Address(RVA = "0x15A31CC", Offset = "0x15A31CC", VA = "0x15A31CC")]
		private void Update()
		{
		}

		[Token(Token = "0x60009AC")]
		[Address(RVA = "0x15A337C", Offset = "0x15A337C", VA = "0x15A337C")]
		public Turret()
		{
		}
	}
	[Token(Token = "0x2000167")]
	public class HitReactionVRIKTrigger : MonoBehaviour
	{
		[Token(Token = "0x400099F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HitReactionVRIK hitReaction;

		[Token(Token = "0x40009A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float hitForce;

		[Token(Token = "0x40009A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string colliderName;

		[Token(Token = "0x60009AF")]
		[Address(RVA = "0x1713BC0", Offset = "0x1713BC0", VA = "0x1713BC0")]
		private void Update()
		{
		}

		[Token(Token = "0x60009B0")]
		[Address(RVA = "0x1713D8C", Offset = "0x1713D8C", VA = "0x1713D8C")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60009B1")]
		[Address(RVA = "0x1713F50", Offset = "0x1713F50", VA = "0x1713F50")]
		public HitReactionVRIKTrigger()
		{
		}
	}
	[Token(Token = "0x2000168")]
	public class VRIKCalibrationBasic : MonoBehaviour
	{
		[Token(Token = "0x40009A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2A2F0", Offset = "0xE2A2F0")]
		public VRIK ik;

		[Token(Token = "0x40009A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE2A328", Offset = "0xE2A328")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2A328", Offset = "0xE2A328")]
		public Transform centerEyeAnchor;

		[Token(Token = "0x40009A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2A388", Offset = "0xE2A388")]
		public Vector3 headAnchorPositionOffset;

		[Token(Token = "0x40009A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2A3C0", Offset = "0xE2A3C0")]
		public Vector3 headAnchorRotationOffset;

		[Token(Token = "0x40009A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE2A3F8", Offset = "0xE2A3F8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2A3F8", Offset = "0xE2A3F8")]
		public Transform leftHandAnchor;

		[Token(Token = "0x40009A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2A458", Offset = "0xE2A458")]
		public Transform rightHandAnchor;

		[Token(Token = "0x40009A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2A490", Offset = "0xE2A490")]
		public Vector3 handAnchorPositionOffset;

		[Token(Token = "0x40009A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2A4C8", Offset = "0xE2A4C8")]
		public Vector3 handAnchorRotationOffset;

		[Token(Token = "0x40009AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE2A500", Offset = "0xE2A500")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2A500", Offset = "0xE2A500")]
		public float scaleMlp;

		[Token(Token = "0x40009AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE2A560", Offset = "0xE2A560")]
		public VRIKCalibrator.CalibrationData data;

		[Token(Token = "0x60009B2")]
		[Address(RVA = "0x15A4450", Offset = "0x15A4450", VA = "0x15A4450")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60009B3")]
		[Address(RVA = "0x15A45EC", Offset = "0x15A45EC", VA = "0x15A45EC")]
		public VRIKCalibrationBasic()
		{
		}
	}
	[Token(Token = "0x2000169")]
	public class VRIKCalibrationController : MonoBehaviour
	{
		[Token(Token = "0x40009AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2A598", Offset = "0xE2A598")]
		public VRIK ik;

		[Token(Token = "0x40009AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2A5D0", Offset = "0xE2A5D0")]
		public VRIKCalibrator.Settings settings;

		[Token(Token = "0x40009AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2A608", Offset = "0xE2A608")]
		public Transform headTracker;

		[Token(Token = "0x40009AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2A640", Offset = "0xE2A640")]
		public Transform bodyTracker;

		[Token(Token = "0x40009B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2A678", Offset = "0xE2A678")]
		public Transform leftHandTracker;

		[Token(Token = "0x40009B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2A6B0", Offset = "0xE2A6B0")]
		public Transform rightHandTracker;

		[Token(Token = "0x40009B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2A6E8", Offset = "0xE2A6E8")]
		public Transform leftFootTracker;

		[Token(Token = "0x40009B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2A720", Offset = "0xE2A720")]
		public Transform rightFootTracker;

		[Token(Token = "0x40009B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE2A758", Offset = "0xE2A758")]
		public VRIKCalibrator.CalibrationData data;

		[Token(Token = "0x60009B4")]
		[Address(RVA = "0x15A4668", Offset = "0x15A4668", VA = "0x15A4668")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60009B5")]
		[Address(RVA = "0x15A47D4", Offset = "0x15A47D4", VA = "0x15A47D4")]
		public VRIKCalibrationController()
		{
		}
	}
	[Token(Token = "0x200016A")]
	public class VRIKPlatform : MonoBehaviour
	{
		[Token(Token = "0x40009B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VRIK ik;

		[Token(Token = "0x40009B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 lastPosition;

		[Token(Token = "0x40009B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Quaternion lastRotation;

		[Token(Token = "0x60009B6")]
		[Address(RVA = "0x15A4848", Offset = "0x15A4848", VA = "0x15A4848")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60009B7")]
		[Address(RVA = "0x15A48A4", Offset = "0x15A48A4", VA = "0x15A48A4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60009B8")]
		[Address(RVA = "0x15A4AB8", Offset = "0x15A4AB8", VA = "0x15A4AB8")]
		public VRIKPlatform()
		{
		}
	}
	[Token(Token = "0x200016B")]
	public class VRIKPlatformController : MonoBehaviour
	{
		[Token(Token = "0x40009B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VRIK ik;

		[Token(Token = "0x40009B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform trackingSpace;

		[Token(Token = "0x40009BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform platform;

		[Token(Token = "0x40009BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool moveToPlatform;

		[Token(Token = "0x40009BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform lastPlatform;

		[Token(Token = "0x40009BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 lastPosition;

		[Token(Token = "0x40009BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion lastRotation;

		[Token(Token = "0x60009B9")]
		[Address(RVA = "0x15A4B30", Offset = "0x15A4B30", VA = "0x15A4B30")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60009BA")]
		[Address(RVA = "0x15A5098", Offset = "0x15A5098", VA = "0x15A5098")]
		public VRIKPlatformController()
		{
		}
	}
	[Token(Token = "0x200016C")]
	public abstract class CharacterAnimationBase : MonoBehaviour
	{
		[Token(Token = "0x40009BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool smoothFollow;

		[Token(Token = "0x40009C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float smoothFollowSpeed;

		[Token(Token = "0x40009C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected bool animatePhysics;

		[Token(Token = "0x40009C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 lastPosition;

		[Token(Token = "0x40009C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 localPosition;

		[Token(Token = "0x40009C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion localRotation;

		[Token(Token = "0x40009C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion lastRotation;

		[Token(Token = "0x17000127")]
		public virtual bool animationGrounded
		{
			[Token(Token = "0x60009BC")]
			[Address(RVA = "0x170B408", Offset = "0x170B408", VA = "0x170B408", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60009BB")]
		[Address(RVA = "0x170B3E4", Offset = "0x170B3E4", VA = "0x170B3E4", Slot = "4")]
		public virtual Vector3 GetPivotPoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60009BD")]
		[Address(RVA = "0x170B410", Offset = "0x170B410", VA = "0x170B410")]
		public float GetAngleFromForward(Vector3 worldDirection)
		{
			return default(float);
		}

		[Token(Token = "0x60009BE")]
		[Address(RVA = "0x170B4D4", Offset = "0x170B4D4", VA = "0x170B4D4", Slot = "6")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x60009BF")]
		[Address(RVA = "0x170B64C", Offset = "0x170B64C", VA = "0x170B64C", Slot = "7")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x60009C0")]
		[Address(RVA = "0x170B900", Offset = "0x170B900", VA = "0x170B900", Slot = "8")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x60009C1")]
		[Address(RVA = "0x170B65C", Offset = "0x170B65C", VA = "0x170B65C")]
		private void SmoothFollow()
		{
		}

		[Token(Token = "0x60009C2")]
		[Address(RVA = "0x170B910", Offset = "0x170B910", VA = "0x170B910")]
		protected CharacterAnimationBase()
		{
		}
	}
	[Token(Token = "0x200016D")]
	public class CharacterAnimationSimple : CharacterAnimationBase
	{
		[Token(Token = "0x40009C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public CharacterThirdPerson characterController;

		[Token(Token = "0x40009C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float pivotOffset;

		[Token(Token = "0x40009C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AnimationCurve moveSpeed;

		[Token(Token = "0x40009C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Animator animator;

		[Token(Token = "0x60009C3")]
		[Address(RVA = "0x170B928", Offset = "0x170B928", VA = "0x170B928", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60009C4")]
		[Address(RVA = "0x170B990", Offset = "0x170B990", VA = "0x170B990", Slot = "4")]
		public override Vector3 GetPivotPoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60009C5")]
		[Address(RVA = "0x170BABC", Offset = "0x170BABC", VA = "0x170BABC")]
		private void Update()
		{
		}

		[Token(Token = "0x60009C6")]
		[Address(RVA = "0x170BC38", Offset = "0x170BC38", VA = "0x170BC38")]
		public CharacterAnimationSimple()
		{
		}
	}
	[Token(Token = "0x200016E")]
	public class CharacterAnimationThirdPerson : CharacterAnimationBase
	{
		[Token(Token = "0x40009CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public CharacterThirdPerson characterController;

		[Token(Token = "0x40009CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float turnSensitivity;

		[Token(Token = "0x40009CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private float turnSpeed;

		[Token(Token = "0x40009CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private float runCycleLegOffset;

		[Token(Token = "0x40009CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE2A7C0", Offset = "0xE2A7C0")]
		private float animSpeedMultiplier;

		[Token(Token = "0x40009CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Animator animator;

		[Token(Token = "0x40009D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 lastForward;

		[Token(Token = "0x40009D1")]
		private const string groundedDirectional = "Grounded Directional";

		[Token(Token = "0x40009D2")]
		private const string groundedStrafe = "Grounded Strafe";

		[Token(Token = "0x40009D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float deltaAngle;

		[Token(Token = "0x40009D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float jumpLeg;

		[Token(Token = "0x40009D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private bool lastJump;

		[Token(Token = "0x17000128")]
		public override bool animationGrounded
		{
			[Token(Token = "0x60009C9")]
			[Address(RVA = "0x170BCFC", Offset = "0x170BCFC", VA = "0x170BCFC", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60009C7")]
		[Address(RVA = "0x170BC50", Offset = "0x170BC50", VA = "0x170BC50", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60009C8")]
		[Address(RVA = "0x170BCE0", Offset = "0x170BCE0", VA = "0x170BCE0", Slot = "4")]
		public override Vector3 GetPivotPoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60009CA")]
		[Address(RVA = "0x170BDEC", Offset = "0x170BDEC", VA = "0x170BDEC", Slot = "9")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60009CB")]
		[Address(RVA = "0x170C1BC", Offset = "0x170C1BC", VA = "0x170C1BC")]
		private void OnAnimatorMove()
		{
		}

		[Token(Token = "0x60009CC")]
		[Address(RVA = "0x170C370", Offset = "0x170C370", VA = "0x170C370")]
		public CharacterAnimationThirdPerson()
		{
		}
	}
	[Token(Token = "0x200016F")]
	public abstract class CharacterBase : MonoBehaviour
	{
		[Token(Token = "0x40009D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE2A804", Offset = "0xE2A804")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2A804", Offset = "0xE2A804")]
		public Transform gravityTarget;

		[Token(Token = "0x40009D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2A864", Offset = "0xE2A864")]
		public float gravityMultiplier;

		[Token(Token = "0x40009D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float airborneThreshold;

		[Token(Token = "0x40009D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float slopeStartAngle;

		[Token(Token = "0x40009DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float slopeEndAngle;

		[Token(Token = "0x40009DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float spherecastRadius;

		[Token(Token = "0x40009DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public LayerMask groundLayers;

		[Token(Token = "0x40009DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private PhysicMaterial zeroFrictionMaterial;

		[Token(Token = "0x40009DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private PhysicMaterial highFrictionMaterial;

		[Token(Token = "0x40009DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Rigidbody r;

		[Token(Token = "0x40009E0")]
		protected const float half = 0.5f;

		[Token(Token = "0x40009E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected float originalHeight;

		[Token(Token = "0x40009E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		protected Vector3 originalCenter;

		[Token(Token = "0x40009E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected CapsuleCollider capsule;

		[Token(Token = "0x60009CD")]
		public abstract void Move(Vector3 deltaPosition, Quaternion deltaRotation);

		[Token(Token = "0x60009CE")]
		[Address(RVA = "0x170C89C", Offset = "0x170C89C", VA = "0x170C89C")]
		protected Vector3 GetGravity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60009CF")]
		[Address(RVA = "0x170CA20", Offset = "0x170CA20", VA = "0x170CA20", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x60009D0")]
		[Address(RVA = "0x170CBE8", Offset = "0x170CBE8", VA = "0x170CBE8", Slot = "6")]
		protected virtual RaycastHit GetSpherecastHit()
		{
			return default(RaycastHit);
		}

		[Token(Token = "0x60009D1")]
		[Address(RVA = "0x170CE60", Offset = "0x170CE60", VA = "0x170CE60")]
		public float GetAngleFromForward(Vector3 worldDirection)
		{
			return default(float);
		}

		[Token(Token = "0x60009D2")]
		[Address(RVA = "0x170CF24", Offset = "0x170CF24", VA = "0x170CF24")]
		protected void RigidbodyRotateAround(Vector3 point, Vector3 axis, float angle)
		{
		}

		[Token(Token = "0x60009D3")]
		[Address(RVA = "0x170D10C", Offset = "0x170D10C", VA = "0x170D10C")]
		protected void ScaleCapsule(float mlp)
		{
		}

		[Token(Token = "0x60009D4")]
		[Address(RVA = "0x170D2BC", Offset = "0x170D2BC", VA = "0x170D2BC")]
		protected void HighFriction()
		{
		}

		[Token(Token = "0x60009D5")]
		[Address(RVA = "0x170D2E0", Offset = "0x170D2E0", VA = "0x170D2E0")]
		protected void ZeroFriction()
		{
		}

		[Token(Token = "0x60009D6")]
		[Address(RVA = "0x170D304", Offset = "0x170D304", VA = "0x170D304")]
		protected float GetSlopeDamper(Vector3 velocity, Vector3 groundNormal)
		{
			return default(float);
		}

		[Token(Token = "0x60009D7")]
		[Address(RVA = "0x170D408", Offset = "0x170D408", VA = "0x170D408")]
		protected CharacterBase()
		{
		}
	}
	[Token(Token = "0x2000170")]
	public class CharacterThirdPerson : CharacterBase
	{
		[Serializable]
		[Token(Token = "0x2000171")]
		public enum MoveMode
		{
			[Token(Token = "0x4000A1E")]
			Directional,
			[Token(Token = "0x4000A1F")]
			Strafe
		}

		[Token(Token = "0x2000172")]
		public struct AnimState
		{
			[Token(Token = "0x4000A20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 moveDirection;

			[Token(Token = "0x4000A21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public bool jump;

			[Token(Token = "0x4000A22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
			public bool crouch;

			[Token(Token = "0x4000A23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
			public bool onGround;

			[Token(Token = "0x4000A24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF")]
			public bool isStrafing;

			[Token(Token = "0x4000A25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float yVelocity;

			[Token(Token = "0x4000A26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public bool doubleJump;
		}

		[Token(Token = "0x2000173")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE21638", Offset = "0xE21638")]
		private sealed class <JumpSmooth>d__75 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000A27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000A28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000A29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CharacterThirdPerson <>4__this;

			[Token(Token = "0x4000A2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 jumpVelocity;

			[Token(Token = "0x4000A2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private int <steps>5__2;

			[Token(Token = "0x4000A2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <stepsToTake>5__3;

			[Token(Token = "0x1700012A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60009ED")]
				[Address(RVA = "0x17101B0", Offset = "0x17101B0", VA = "0x17101B0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700012B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60009EF")]
				[Address(RVA = "0x1710218", Offset = "0x1710218", VA = "0x1710218", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60009EA")]
			[Address(RVA = "0x170FF04", Offset = "0x170FF04", VA = "0x170FF04")]
			[DebuggerHidden]
			public <JumpSmooth>d__75(int <>1__state)
			{
			}

			[Token(Token = "0x60009EB")]
			[Address(RVA = "0x1710064", Offset = "0x1710064", VA = "0x1710064", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60009EC")]
			[Address(RVA = "0x1710068", Offset = "0x1710068", VA = "0x1710068", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60009EE")]
			[Address(RVA = "0x17101B8", Offset = "0x17101B8", VA = "0x17101B8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40009E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE2A89C", Offset = "0xE2A89C")]
		public CharacterAnimationBase characterAnimation;

		[Token(Token = "0x40009E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public UserControlThirdPerson userControl;

		[Token(Token = "0x40009E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public CameraController cam;

		[Token(Token = "0x40009E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE2A8D4", Offset = "0xE2A8D4")]
		public MoveMode moveMode;

		[Token(Token = "0x40009E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public bool smoothPhysics;

		[Token(Token = "0x40009E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float smoothAccelerationTime;

		[Token(Token = "0x40009EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float linearAccelerationSpeed;

		[Token(Token = "0x40009EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float platformFriction;

		[Token(Token = "0x40009EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float groundStickyEffect;

		[Token(Token = "0x40009ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float maxVerticalVelocityOnGround;

		[Token(Token = "0x40009EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float velocityToGroundTangentWeight;

		[Token(Token = "0x40009EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE2A90C", Offset = "0xE2A90C")]
		public bool lookInCameraDirection;

		[Token(Token = "0x40009F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public float turnSpeed;

		[Token(Token = "0x40009F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float stationaryTurnSpeedMlp;

		[Token(Token = "0x40009F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE2A944", Offset = "0xE2A944")]
		public bool smoothJump;

		[Token(Token = "0x40009F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float airSpeed;

		[Token(Token = "0x40009F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float airControl;

		[Token(Token = "0x40009F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float jumpPower;

		[Token(Token = "0x40009F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float jumpRepeatDelayTime;

		[Token(Token = "0x40009F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public bool doubleJumpEnabled;

		[Token(Token = "0x40009F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public float doubleJumpPowerMlp;

		[Token(Token = "0x40009F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE2A97C", Offset = "0xE2A97C")]
		public LayerMask wallRunLayers;

		[Token(Token = "0x40009FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public float wallRunMaxLength;

		[Token(Token = "0x40009FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public float wallRunMinMoveMag;

		[Token(Token = "0x40009FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public float wallRunMinVelocityY;

		[Token(Token = "0x40009FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public float wallRunRotationSpeed;

		[Token(Token = "0x40009FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public float wallRunMaxRotationAngle;

		[Token(Token = "0x40009FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public float wallRunWeightSpeed;

		[Token(Token = "0x4000A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE2A9B4", Offset = "0xE2A9B4")]
		public float crouchCapsuleScaleMlp;

		[Token(Token = "0x4000A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2A9EC", Offset = "0xE2A9EC")]
		private bool <onGround>k__BackingField;

		[Token(Token = "0x4000A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public AnimState animState;

		[Token(Token = "0x4000A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		protected Vector3 moveDirection;

		[Token(Token = "0x4000A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Animator animator;

		[Token(Token = "0x4000A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Vector3 normal;

		[Token(Token = "0x4000A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private Vector3 platformVelocity;

		[Token(Token = "0x4000A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Vector3 platformAngularVelocity;

		[Token(Token = "0x4000A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private RaycastHit hit;

		[Token(Token = "0x4000A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private float jumpLeg;

		[Token(Token = "0x4000A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private float jumpEndTime;

		[Token(Token = "0x4000A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private float forwardMlp;

		[Token(Token = "0x4000A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		private float groundDistance;

		[Token(Token = "0x4000A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private float lastAirTime;

		[Token(Token = "0x4000A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		private float stickyForce;

		[Token(Token = "0x4000A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private Vector3 wallNormal;

		[Token(Token = "0x4000A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		private Vector3 moveDirectionVelocity;

		[Token(Token = "0x4000A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private float wallRunWeight;

		[Token(Token = "0x4000A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		private float lastWallRunWeight;

		[Token(Token = "0x4000A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private float fixedDeltaTime;

		[Token(Token = "0x4000A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		private Vector3 fixedDeltaPosition;

		[Token(Token = "0x4000A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private Quaternion fixedDeltaRotation;

		[Token(Token = "0x4000A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private bool fixedFrame;

		[Token(Token = "0x4000A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		private float wallRunEndTime;

		[Token(Token = "0x4000A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private Vector3 gravity;

		[Token(Token = "0x4000A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		private Vector3 verticalVelocity;

		[Token(Token = "0x4000A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private float velocityY;

		[Token(Token = "0x4000A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		private bool doubleJumped;

		[Token(Token = "0x4000A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E5")]
		private bool jumpReleased;

		[Token(Token = "0x17000129")]
		public bool onGround
		{
			[Token(Token = "0x60009D8")]
			[Address(RVA = "0x170D82C", Offset = "0x170D82C", VA = "0x170D82C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2E93C", Offset = "0xE2E93C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009D9")]
			[Address(RVA = "0x170D834", Offset = "0x170D834", VA = "0x170D834")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2E94C", Offset = "0xE2E94C")]
			private set
			{
			}
		}

		[Token(Token = "0x60009DA")]
		[Address(RVA = "0x170D840", Offset = "0x170D840", VA = "0x170D840", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60009DB")]
		[Address(RVA = "0x170D9EC", Offset = "0x170D9EC", VA = "0x170D9EC")]
		private void OnAnimatorMove()
		{
		}

		[Token(Token = "0x60009DC")]
		[Address(RVA = "0x170DA7C", Offset = "0x170DA7C", VA = "0x170DA7C", Slot = "4")]
		public override void Move(Vector3 deltaPosition, Quaternion deltaRotation)
		{
		}

		[Token(Token = "0x60009DD")]
		[Address(RVA = "0x170DBCC", Offset = "0x170DBCC", VA = "0x170DBCC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60009DE")]
		[Address(RVA = "0x170EB48", Offset = "0x170EB48", VA = "0x170EB48", Slot = "7")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60009DF")]
		[Address(RVA = "0x170EEE0", Offset = "0x170EEE0", VA = "0x170EEE0", Slot = "8")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x60009E0")]
		[Address(RVA = "0x170E1DC", Offset = "0x170E1DC", VA = "0x170E1DC")]
		private void MoveFixed(Vector3 deltaPosition)
		{
		}

		[Token(Token = "0x60009E1")]
		[Address(RVA = "0x170EFC0", Offset = "0x170EFC0", VA = "0x170EFC0")]
		private void WallRun()
		{
		}

		[Token(Token = "0x60009E2")]
		[Address(RVA = "0x170F5B0", Offset = "0x170F5B0", VA = "0x170F5B0")]
		private bool CanWallRun()
		{
			return default(bool);
		}

		[Token(Token = "0x60009E3")]
		[Address(RVA = "0x170EC24", Offset = "0x170EC24", VA = "0x170EC24")]
		private Vector3 GetMoveDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60009E4")]
		[Address(RVA = "0x170F650", Offset = "0x170F650", VA = "0x170F650", Slot = "9")]
		protected virtual void Rotate()
		{
		}

		[Token(Token = "0x60009E5")]
		[Address(RVA = "0x170FAC0", Offset = "0x170FAC0", VA = "0x170FAC0")]
		private Vector3 GetForwardDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60009E6")]
		[Address(RVA = "0x170FC4C", Offset = "0x170FC4C", VA = "0x170FC4C", Slot = "10")]
		protected virtual bool Jump()
		{
			return default(bool);
		}

		[Token(Token = "0x60009E7")]
		[Address(RVA = "0x170FE64", Offset = "0x170FE64", VA = "0x170FE64")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE2E95C", Offset = "0xE2E95C")]
		private IEnumerator JumpSmooth(Vector3 jumpVelocity)
		{
			return null;
		}

		[Token(Token = "0x60009E8")]
		[Address(RVA = "0x170E728", Offset = "0x170E728", VA = "0x170E728")]
		private void GroundCheck()
		{
		}

		[Token(Token = "0x60009E9")]
		[Address(RVA = "0x170FF30", Offset = "0x170FF30", VA = "0x170FF30")]
		public CharacterThirdPerson()
		{
		}
	}
	[Token(Token = "0x2000174")]
	public class SimpleLocomotion : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000175")]
		public enum RotationMode
		{
			[Token(Token = "0x4000A3B")]
			Smooth,
			[Token(Token = "0x4000A3C")]
			Linear
		}

		[Token(Token = "0x4000A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2A9FC", Offset = "0xE2A9FC")]
		public CameraController cameraController;

		[Token(Token = "0x4000A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2AA34", Offset = "0xE2AA34")]
		public float accelerationTime;

		[Token(Token = "0x4000A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2AA6C", Offset = "0xE2AA6C")]
		public float turnTime;

		[Token(Token = "0x4000A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2AAA4", Offset = "0xE2AAA4")]
		public bool walkByDefault;

		[Token(Token = "0x4000A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2AADC", Offset = "0xE2AADC")]
		public RotationMode rotationMode;

		[Token(Token = "0x4000A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2AB14", Offset = "0xE2AB14")]
		public float moveSpeed;

		[Token(Token = "0x4000A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2AB4C", Offset = "0xE2AB4C")]
		private bool <isGrounded>k__BackingField;

		[Token(Token = "0x4000A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Animator animator;

		[Token(Token = "0x4000A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float speed;

		[Token(Token = "0x4000A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float angleVel;

		[Token(Token = "0x4000A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float speedVel;

		[Token(Token = "0x4000A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 linearTargetDirection;

		[Token(Token = "0x4000A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private CharacterController characterController;

		[Token(Token = "0x1700012C")]
		public bool isGrounded
		{
			[Token(Token = "0x60009F0")]
			[Address(RVA = "0x15A0B2C", Offset = "0x15A0B2C", VA = "0x15A0B2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2EA10", Offset = "0xE2EA10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009F1")]
			[Address(RVA = "0x15A0B34", Offset = "0x15A0B34", VA = "0x15A0B34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2EA20", Offset = "0xE2EA20")]
			private set
			{
			}
		}

		[Token(Token = "0x60009F2")]
		[Address(RVA = "0x15A0B40", Offset = "0x15A0B40", VA = "0x15A0B40")]
		private void Start()
		{
		}

		[Token(Token = "0x60009F3")]
		[Address(RVA = "0x15A0BDC", Offset = "0x15A0BDC", VA = "0x15A0BDC")]
		private void Update()
		{
		}

		[Token(Token = "0x60009F4")]
		[Address(RVA = "0x15A12D8", Offset = "0x15A12D8", VA = "0x15A12D8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60009F5")]
		[Address(RVA = "0x15A0C30", Offset = "0x15A0C30", VA = "0x15A0C30")]
		private void Rotate()
		{
		}

		[Token(Token = "0x60009F6")]
		[Address(RVA = "0x15A1030", Offset = "0x15A1030", VA = "0x15A1030")]
		private void Move()
		{
		}

		[Token(Token = "0x60009F7")]
		[Address(RVA = "0x15A1314", Offset = "0x15A1314", VA = "0x15A1314")]
		private Vector3 GetInputVector()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60009F8")]
		[Address(RVA = "0x15A140C", Offset = "0x15A140C", VA = "0x15A140C")]
		private Vector3 GetInputVectorRaw()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60009F9")]
		[Address(RVA = "0x15A14AC", Offset = "0x15A14AC", VA = "0x15A14AC")]
		public SimpleLocomotion()
		{
		}
	}
	[Token(Token = "0x2000176")]
	public class UserControlAI : UserControlThirdPerson
	{
		[Token(Token = "0x4000A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform moveTarget;

		[Token(Token = "0x4000A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float stoppingDistance;

		[Token(Token = "0x4000A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float stoppingThreshold;

		[Token(Token = "0x4000A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Navigator navigator;

		[Token(Token = "0x60009FA")]
		[Address(RVA = "0x15A39F8", Offset = "0x15A39F8", VA = "0x15A39F8", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60009FB")]
		[Address(RVA = "0x15A3A78", Offset = "0x15A3A78", VA = "0x15A3A78", Slot = "5")]
		protected override void Update()
		{
		}

		[Token(Token = "0x60009FC")]
		[Address(RVA = "0x15A3D0C", Offset = "0x15A3D0C", VA = "0x15A3D0C")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60009FD")]
		[Address(RVA = "0x15A3D30", Offset = "0x15A3D30", VA = "0x15A3D30")]
		public UserControlAI()
		{
		}
	}
	[Token(Token = "0x2000177")]
	public class UserControlThirdPerson : MonoBehaviour
	{
		[Token(Token = "0x2000178")]
		public struct State
		{
			[Token(Token = "0x4000A46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 move;

			[Token(Token = "0x4000A47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 lookPos;

			[Token(Token = "0x4000A48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool crouch;

			[Token(Token = "0x4000A49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
			public bool jump;

			[Token(Token = "0x4000A4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int actionIndex;
		}

		[Token(Token = "0x4000A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool walkByDefault;

		[Token(Token = "0x4000A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool canCrouch;

		[Token(Token = "0x4000A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool canJump;

		[Token(Token = "0x4000A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public State state;

		[Token(Token = "0x4000A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Transform cam;

		[Token(Token = "0x60009FE")]
		[Address(RVA = "0x15A3A38", Offset = "0x15A3A38", VA = "0x15A3A38", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x60009FF")]
		[Address(RVA = "0x15A3E70", Offset = "0x15A3E70", VA = "0x15A3E70", Slot = "5")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000A00")]
		[Address(RVA = "0x15A3D4C", Offset = "0x15A3D4C", VA = "0x15A3D4C")]
		public UserControlThirdPerson()
		{
		}
	}
	[Token(Token = "0x2000179")]
	public class ApplicationQuit : MonoBehaviour
	{
		[Token(Token = "0x6000A01")]
		[Address(RVA = "0x170AD9C", Offset = "0x170AD9C", VA = "0x170AD9C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A02")]
		[Address(RVA = "0x170ADD8", Offset = "0x170ADD8", VA = "0x170ADD8")]
		public ApplicationQuit()
		{
		}
	}
	[Token(Token = "0x200017A")]
	public class SlowMo : MonoBehaviour
	{
		[Token(Token = "0x4000A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public KeyCode[] keyCodes;

		[Token(Token = "0x4000A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool mouse0;

		[Token(Token = "0x4000A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool mouse1;

		[Token(Token = "0x4000A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float slowMoTimeScale;

		[Token(Token = "0x6000A03")]
		[Address(RVA = "0x15A14D4", Offset = "0x15A14D4", VA = "0x15A14D4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A04")]
		[Address(RVA = "0x15A1508", Offset = "0x15A1508", VA = "0x15A1508")]
		private bool IsSlowMotion()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A05")]
		[Address(RVA = "0x15A15B8", Offset = "0x15A15B8", VA = "0x15A15B8")]
		public SlowMo()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200017B")]
	public class Navigator
	{
		[Token(Token = "0x200017C")]
		public enum State
		{
			[Token(Token = "0x4000A5E")]
			Idle,
			[Token(Token = "0x4000A5F")]
			Seeking,
			[Token(Token = "0x4000A60")]
			OnPath
		}

		[Token(Token = "0x4000A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2AB5C", Offset = "0xE2AB5C")]
		public bool activeTargetSeeking;

		[Token(Token = "0x4000A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2AB94", Offset = "0xE2AB94")]
		public float cornerRadius;

		[Token(Token = "0x4000A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2ABCC", Offset = "0xE2ABCC")]
		public float recalculateOnPathDistance;

		[Token(Token = "0x4000A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2AC04", Offset = "0xE2AC04")]
		public float maxSampleDistance;

		[Token(Token = "0x4000A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2AC3C", Offset = "0xE2AC3C")]
		public float nextPathInterval;

		[Token(Token = "0x4000A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2AC74", Offset = "0xE2AC74")]
		private Vector3 <normalizedDeltaPosition>k__BackingField;

		[Token(Token = "0x4000A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2AC84", Offset = "0xE2AC84")]
		private State <state>k__BackingField;

		[Token(Token = "0x4000A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform transform;

		[Token(Token = "0x4000A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int cornerIndex;

		[Token(Token = "0x4000A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3[] corners;

		[Token(Token = "0x4000A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private NavMeshPath path;

		[Token(Token = "0x4000A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 lastTargetPosition;

		[Token(Token = "0x4000A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool initiated;

		[Token(Token = "0x4000A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float nextPathTime;

		[Token(Token = "0x1700012D")]
		public Vector3 normalizedDeltaPosition
		{
			[Token(Token = "0x6000A06")]
			[Address(RVA = "0x159C484", Offset = "0x159C484", VA = "0x159C484")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2EA30", Offset = "0xE2EA30")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000A07")]
			[Address(RVA = "0x159C490", Offset = "0x159C490", VA = "0x159C490")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2EA40", Offset = "0xE2EA40")]
			private set
			{
			}
		}

		[Token(Token = "0x1700012E")]
		public State state
		{
			[Token(Token = "0x6000A08")]
			[Address(RVA = "0x159C49C", Offset = "0x159C49C", VA = "0x159C49C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2EA50", Offset = "0xE2EA50")]
			get
			{
				return default(State);
			}
			[Token(Token = "0x6000A09")]
			[Address(RVA = "0x159C4A4", Offset = "0x159C4A4", VA = "0x159C4A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2EA60", Offset = "0xE2EA60")]
			private set
			{
			}
		}

		[Token(Token = "0x6000A0A")]
		[Address(RVA = "0x159C4AC", Offset = "0x159C4AC", VA = "0x159C4AC")]
		public void Initiate(Transform transform)
		{
		}

		[Token(Token = "0x6000A0B")]
		[Address(RVA = "0x159C5A4", Offset = "0x159C5A4", VA = "0x159C5A4")]
		public void Update(Vector3 targetPosition)
		{
		}

		[Token(Token = "0x6000A0C")]
		[Address(RVA = "0x159CAFC", Offset = "0x159CAFC", VA = "0x159CAFC")]
		private void CalculatePath(Vector3 targetPosition)
		{
		}

		[Token(Token = "0x6000A0D")]
		[Address(RVA = "0x159CB6C", Offset = "0x159CB6C", VA = "0x159CB6C")]
		private bool Find(Vector3 targetPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0x159C9C4", Offset = "0x159C9C4", VA = "0x159C9C4")]
		private void Stop()
		{
		}

		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0x159CA38", Offset = "0x159CA38", VA = "0x159CA38")]
		private float HorDistance(Vector3 p1, Vector3 p2)
		{
			return default(float);
		}

		[Token(Token = "0x6000A10")]
		[Address(RVA = "0x159CCB4", Offset = "0x159CCB4", VA = "0x159CCB4")]
		public void Visualize()
		{
		}

		[Token(Token = "0x6000A11")]
		[Address(RVA = "0x159CE64", Offset = "0x159CE64", VA = "0x159CE64")]
		public Navigator()
		{
		}
	}
}
namespace PreviewLabs
{
	[Token(Token = "0x200017D")]
	public static class PlayerPrefs
	{
		[Token(Token = "0x4000A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Hashtable PlayerPrefsHashtable;

		[Token(Token = "0x4000A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static bool _hashTableChanged;

		[Token(Token = "0x4000A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string _serializedOutput;

		[Token(Token = "0x4000A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly string SerializedInput;

		[Token(Token = "0x4000A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly string FileName;

		[Token(Token = "0x6000A12")]
		[Address(RVA = "0x16FD02C", Offset = "0x16FD02C", VA = "0x16FD02C")]
		static PlayerPrefs()
		{
		}

		[Token(Token = "0x6000A13")]
		[Address(RVA = "0x16FD46C", Offset = "0x16FD46C", VA = "0x16FD46C")]
		public static bool HasKey(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A14")]
		[Address(RVA = "0x16FD4F0", Offset = "0x16FD4F0", VA = "0x16FD4F0")]
		public static void SetInt(string key, int value)
		{
		}

		[Token(Token = "0x6000A15")]
		[Address(RVA = "0x16FD668", Offset = "0x16FD668", VA = "0x16FD668")]
		public static void SetFloat(string key, float value)
		{
		}

		[Token(Token = "0x6000A16")]
		[Address(RVA = "0x16FD7E8", Offset = "0x16FD7E8", VA = "0x16FD7E8")]
		public static int GetInt(string key)
		{
			return default(int);
		}

		[Token(Token = "0x6000A17")]
		[Address(RVA = "0x16FD988", Offset = "0x16FD988", VA = "0x16FD988")]
		public static float GetFloat(string key)
		{
			return default(float);
		}

		[Token(Token = "0x6000A18")]
		[Address(RVA = "0x16FDB28", Offset = "0x16FDB28", VA = "0x16FDB28")]
		public static void Flush()
		{
		}

		[Token(Token = "0x6000A19")]
		[Address(RVA = "0x16FDCB4", Offset = "0x16FDCB4", VA = "0x16FDCB4")]
		private static void Serialize()
		{
		}

		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0x16FD1A4", Offset = "0x16FD1A4", VA = "0x16FD1A4")]
		private static void Deserialize()
		{
		}

		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0x16FE194", Offset = "0x16FE194", VA = "0x16FE194")]
		private static string EscapeNonSeperators(string inputToEscape)
		{
			return null;
		}

		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0x16FE220", Offset = "0x16FE220", VA = "0x16FE220")]
		private static string DeEscapeNonSeperators(string inputToDeEscape)
		{
			return null;
		}

		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0x16FE2AC", Offset = "0x16FE2AC", VA = "0x16FE2AC")]
		public static object GetTypeValue(string typeName, string value)
		{
			return null;
		}
	}
}
namespace DarkTonic.CoreGameKit
{
	[Token(Token = "0x200017E")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE21648", Offset = "0xE21648")]
	public class ClickToKillOrDamage : MonoBehaviour
	{
		[Token(Token = "0x4000A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool killObjects;

		[Token(Token = "0x4000A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int damagePointsToInflict;

		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0x124AC3C", Offset = "0x124AC3C", VA = "0x124AC3C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0x124ADDC", Offset = "0x124ADDC", VA = "0x124ADDC")]
		private void KillOrDamage(GameObject go)
		{
		}

		[Token(Token = "0x6000A20")]
		[Address(RVA = "0x124AEE8", Offset = "0x124AEE8", VA = "0x124AEE8")]
		public ClickToKillOrDamage()
		{
		}
	}
	[Token(Token = "0x200017F")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE21680", Offset = "0xE21680")]
	public class ClickToKillOrDamage2D : MonoBehaviour
	{
		[Token(Token = "0x4000A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool killObjects;

		[Token(Token = "0x4000A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int damagePointsToInflict;

		[Token(Token = "0x6000A21")]
		[Address(RVA = "0x124AEFC", Offset = "0x124AEFC", VA = "0x124AEFC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A22")]
		[Address(RVA = "0x124B138", Offset = "0x124B138", VA = "0x124B138")]
		private void KillOrDamage(GameObject go)
		{
		}

		[Token(Token = "0x6000A23")]
		[Address(RVA = "0x124B244", Offset = "0x124B244", VA = "0x124B244")]
		public ClickToKillOrDamage2D()
		{
		}
	}
	[Token(Token = "0x2000180")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE216B8", Offset = "0xE216B8")]
	public class Killable : MonoBehaviour
	{
		[Token(Token = "0x2000181")]
		public enum DeathPrefabSpawnLocation
		{
			[Token(Token = "0x4000B10")]
			DeathPosition,
			[Token(Token = "0x4000B11")]
			RespawnPosition
		}

		[Token(Token = "0x2000182")]
		public enum DeathDespawnBehavior
		{
			[Token(Token = "0x4000B13")]
			ReturnToPool,
			[Token(Token = "0x4000B14")]
			Disable
		}

		[Token(Token = "0x2000183")]
		public enum RespawnType
		{
			[Token(Token = "0x4000B16")]
			None,
			[Token(Token = "0x4000B17")]
			Infinite,
			[Token(Token = "0x4000B18")]
			SetNumber
		}

		[Token(Token = "0x2000184")]
		public enum SpawnerDestroyedBehavior
		{
			[Token(Token = "0x4000B1A")]
			DoNothing,
			[Token(Token = "0x4000B1B")]
			Despawn,
			[Token(Token = "0x4000B1C")]
			Die
		}

		[Token(Token = "0x2000185")]
		public enum SpawnSource
		{
			[Token(Token = "0x4000B1E")]
			None,
			[Token(Token = "0x4000B1F")]
			Specific,
			[Token(Token = "0x4000B20")]
			PrefabPool
		}

		[Token(Token = "0x2000186")]
		public enum DamagePrefabSpawnMode
		{
			[Token(Token = "0x4000B22")]
			None,
			[Token(Token = "0x4000B23")]
			PerHit,
			[Token(Token = "0x4000B24")]
			PerHitPointLost,
			[Token(Token = "0x4000B25")]
			PerGroupHitPointsLost
		}

		[Token(Token = "0x2000187")]
		public enum RotationMode
		{
			[Token(Token = "0x4000B27")]
			CustomRotation,
			[Token(Token = "0x4000B28")]
			InheritExistingRotation,
			[Token(Token = "0x4000B29")]
			UseDeathPrefabRotation
		}

		[Token(Token = "0x2000188")]
		public enum DespawnMode
		{
			[Token(Token = "0x4000B2B")]
			None = -1,
			[Token(Token = "0x4000B2C")]
			ZeroHitPoints,
			[Token(Token = "0x4000B2D")]
			LostAnyHitPoints,
			[Token(Token = "0x4000B2E")]
			CollisionOrTrigger
		}

		[Token(Token = "0x2000189")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE216F0", Offset = "0xE216F0")]
		private sealed class <>c__DisplayClass216_0
		{
			[Token(Token = "0x4000B2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string scenarioName;

			[Token(Token = "0x6000A9A")]
			[Address(RVA = "0x1250074", Offset = "0x1250074", VA = "0x1250074")]
			public <>c__DisplayClass216_0()
			{
			}

			[Token(Token = "0x6000A9B")]
			[Address(RVA = "0x12553FC", Offset = "0x12553FC", VA = "0x12553FC")]
			internal bool <PerformDeath>b__0(WorldVariableCollection obj)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200018A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE21700", Offset = "0xE21700")]
		private sealed class <SetSpawnInvincibleForSeconds>d__254 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Killable <>4__this;

			[Token(Token = "0x4000B33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float seconds;

			[Token(Token = "0x1700014D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000A9F")]
				[Address(RVA = "0x125550C", Offset = "0x125550C", VA = "0x125550C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700014E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000AA1")]
				[Address(RVA = "0x1255574", Offset = "0x1255574", VA = "0x1255574", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000A9C")]
			[Address(RVA = "0x1254B38", Offset = "0x1254B38", VA = "0x1254B38")]
			[DebuggerHidden]
			public <SetSpawnInvincibleForSeconds>d__254(int <>1__state)
			{
			}

			[Token(Token = "0x6000A9D")]
			[Address(RVA = "0x1255420", Offset = "0x1255420", VA = "0x1255420", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000A9E")]
			[Address(RVA = "0x1255424", Offset = "0x1255424", VA = "0x1255424", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000AA0")]
			[Address(RVA = "0x1255514", Offset = "0x1255514", VA = "0x1255514", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200018B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE21710", Offset = "0xE21710")]
		private sealed class <WaitThenDestroy>d__255 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Killable <>4__this;

			[Token(Token = "0x4000B37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string scenarioName;

			[Token(Token = "0x1700014F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000AA5")]
				[Address(RVA = "0x12556F8", Offset = "0x12556F8", VA = "0x12556F8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000150")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000AA7")]
				[Address(RVA = "0x1255760", Offset = "0x1255760", VA = "0x1255760", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000AA2")]
			[Address(RVA = "0x1254B64", Offset = "0x1254B64", VA = "0x1254B64")]
			[DebuggerHidden]
			public <WaitThenDestroy>d__255(int <>1__state)
			{
			}

			[Token(Token = "0x6000AA3")]
			[Address(RVA = "0x125557C", Offset = "0x125557C", VA = "0x125557C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000AA4")]
			[Address(RVA = "0x1255580", Offset = "0x1255580", VA = "0x1255580", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000AA6")]
			[Address(RVA = "0x1255700", Offset = "0x1255700", VA = "0x1255700", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A6A")]
		public const string DestroyedText = "Destroyed";

		[Token(Token = "0x4000A6B")]
		public const int MaxHitPoints = 100000;

		[Token(Token = "0x4000A6C")]
		public const int MaxAttackPoints = 100000;

		[Token(Token = "0x4000A6D")]
		public const int MinAttackPoints = -100000;

		[Token(Token = "0x4000A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TriggeredSpawner.GameOverBehavior gameOverBehavior;

		[Token(Token = "0x4000A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool syncHitPointWorldVariable;

		[Token(Token = "0x4000A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public KillerInt hitPoints;

		[Token(Token = "0x4000A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public KillerInt maxHitPoints;

		[Token(Token = "0x4000A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public KillerInt atckPoints;

		[Token(Token = "0x4000A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public KillableListener listener;

		[Token(Token = "0x4000A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string poolBossCategoryName;

		[Token(Token = "0x4000A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool invincibilityExpanded;

		[Token(Token = "0x4000A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool isInvincible;

		[Token(Token = "0x4000A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		public bool invincibleWhileChildrenKillablesExist;

		[Token(Token = "0x4000A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
		public bool disableCollidersWhileChildrenKillablesExist;

		[Token(Token = "0x4000A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool invincibleOnSpawn;

		[Token(Token = "0x4000A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public KillerFloat invincibleTimeSpawn;

		[Token(Token = "0x4000A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool invincibleWhenDamaged;

		[Token(Token = "0x4000A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public KillerFloat invincibleDamageTime;

		[Token(Token = "0x4000A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public SpawnSource invinceHitPrefabSource;

		[Token(Token = "0x4000A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int invinceHitPrefabPoolIndex;

		[Token(Token = "0x4000A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string invinceHitPrefabPoolName;

		[Token(Token = "0x4000A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Transform invinceHitPrefabSpecific;

		[Token(Token = "0x4000A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public string invinceHitPrefabCategoryName;

		[Token(Token = "0x4000A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool invinceHitPrefabRandomizeXRotation;

		[Token(Token = "0x4000A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		public bool invinceHitPrefabRandomizeYRotation;

		[Token(Token = "0x4000A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
		public bool invinceHitPrefabRandomizeZRotation;

		[Token(Token = "0x4000A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8B")]
		public bool enableLogging;

		[Token(Token = "0x4000A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public bool filtersExpanded;

		[Token(Token = "0x4000A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
		public bool ignoreKillablesSpawnedByMe;

		[Token(Token = "0x4000A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8E")]
		public bool useLayerFilter;

		[Token(Token = "0x4000A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8F")]
		public bool useTagFilter;

		[Token(Token = "0x4000A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool showVisibilitySettings;

		[Token(Token = "0x4000A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		public bool despawnWhenOffscreen;

		[Token(Token = "0x4000A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
		public bool despawnOnClick;

		[Token(Token = "0x4000A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x93")]
		public bool despawnOnMouseClick;

		[Token(Token = "0x4000A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public bool despawnIfNotVisible;

		[Token(Token = "0x4000A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public KillerFloat despawnIfNotVisibleForSec;

		[Token(Token = "0x4000A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public SpawnSource vanishPrefabSource;

		[Token(Token = "0x4000A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public int vanishPrefabPoolIndex;

		[Token(Token = "0x4000A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public string vanishPrefabPoolName;

		[Token(Token = "0x4000A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Transform vanishPrefabSpecific;

		[Token(Token = "0x4000A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public string vanishPrefabCategoryName;

		[Token(Token = "0x4000A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public bool vanishPrefabRandomizeXRotation;

		[Token(Token = "0x4000A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
		public bool vanishPrefabRandomizeYRotation;

		[Token(Token = "0x4000A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC2")]
		public bool vanishPrefabRandomizeZRotation;

		[Token(Token = "0x4000A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC3")]
		public bool ignoreOffscreenHits;

		[Token(Token = "0x4000A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public List<string> matchingTags;

		[Token(Token = "0x4000A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public List<int> matchingLayers;

		[Token(Token = "0x4000A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public DespawnMode despawnMode;

		[Token(Token = "0x4000A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public bool includeNonKillables;

		[Token(Token = "0x4000A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD")]
		public bool damageFireEvents;

		[Token(Token = "0x4000A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public List<CGKCustomEventToFire> damageCustomEvents;

		[Token(Token = "0x4000A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public bool dealDamageFireEvents;

		[Token(Token = "0x4000AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public List<CGKCustomEventToFire> dealDamageCustomEvents;

		[Token(Token = "0x4000AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public bool deathFireEvents;

		[Token(Token = "0x4000AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public List<CGKCustomEventToFire> deathCustomEvents;

		[Token(Token = "0x4000AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public bool despawnStatModifiersExpanded;

		[Token(Token = "0x4000AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public WorldVariableCollection playerStatDespawnModifiers;

		[Token(Token = "0x4000AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public List<WorldVariableCollection> alternateModifiers;

		[Token(Token = "0x4000AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public bool dealDamagePrefabExpanded;

		[Token(Token = "0x4000AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		public SpawnSource dealDamagePrefabSource;

		[Token(Token = "0x4000AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public int dealDamagePrefabPoolIndex;

		[Token(Token = "0x4000AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public string dealDamagePrefabPoolName;

		[Token(Token = "0x4000AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public Transform dealDamagePrefabSpecific;

		[Token(Token = "0x4000AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public string dealDamagePrefabCategoryName;

		[Token(Token = "0x4000AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public bool dealDamagePrefabOnDeathHit;

		[Token(Token = "0x4000AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x149")]
		public bool dealDamagePrefabRandomizeXRotation;

		[Token(Token = "0x4000AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14A")]
		public bool dealDamagePrefabRandomizeYRotation;

		[Token(Token = "0x4000AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14B")]
		public bool dealDamagePrefabRandomizeZRotation;

		[Token(Token = "0x4000AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		public bool damagePrefabExpanded;

		[Token(Token = "0x4000AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public SpawnSource damagePrefabSource;

		[Token(Token = "0x4000AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		public int damagePrefabPoolIndex;

		[Token(Token = "0x4000AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public string damagePrefabPoolName;

		[Token(Token = "0x4000AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public Transform damagePrefabSpecific;

		[Token(Token = "0x4000AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public string damagePrefabCategoryName;

		[Token(Token = "0x4000AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public DamagePrefabSpawnMode damagePrefabSpawnMode;

		[Token(Token = "0x4000AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public KillerInt damagePrefabSpawnQuantity;

		[Token(Token = "0x4000AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public KillerInt damageGroupsize;

		[Token(Token = "0x4000AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public Vector3 damagePrefabOffset;

		[Token(Token = "0x4000ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		public Vector3 damagePrefabIncrementalOffset;

		[Token(Token = "0x4000ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public bool damagePrefabRandomizeXRotation;

		[Token(Token = "0x4000ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A1")]
		public bool damagePrefabRandomizeYRotation;

		[Token(Token = "0x4000ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A2")]
		public bool damagePrefabRandomizeZRotation;

		[Token(Token = "0x4000ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A3")]
		public bool despawnStatDamageModifiersExpanded;

		[Token(Token = "0x4000ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		public bool damagePrefabOnDeathHit;

		[Token(Token = "0x4000AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public WorldVariableCollection playerStatDamageModifiers;

		[Token(Token = "0x4000AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public bool damageKnockBackExpanded;

		[Token(Token = "0x4000AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B1")]
		public bool sendDamageKnockback;

		[Token(Token = "0x4000AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B2")]
		public bool receiveKnockbackWhenDamaged;

		[Token(Token = "0x4000AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B3")]
		public bool receiveKnockbackWhenInvince;

		[Token(Token = "0x4000AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public KillerFloat damageKnockUpMeters;

		[Token(Token = "0x4000AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public KillerFloat damageKnockBackFactor;

		[Token(Token = "0x4000AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		public WaveSpecifics.SpawnOrigin deathPrefabSource;

		[Token(Token = "0x4000AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		public int deathPrefabPoolIndex;

		[Token(Token = "0x4000AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		public string deathPrefabPoolName;

		[Token(Token = "0x4000ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		public bool deathPrefabSettingsExpanded;

		[Token(Token = "0x4000ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		public Transform deathPrefabSpecific;

		[Token(Token = "0x4000ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		public string deathPrefabCategoryName;

		[Token(Token = "0x4000ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		public bool deathPrefabKeepSameParent;

		[Token(Token = "0x4000ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		public KillerInt deathPrefabSpawnPercent;

		[Token(Token = "0x4000ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		public DeathPrefabSpawnLocation deathPrefabSpawnLocation;

		[Token(Token = "0x4000AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		public KillerInt deathPrefabQty;

		[Token(Token = "0x4000AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		public Vector3 deathPrefabOffset;

		[Token(Token = "0x4000AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
		public Vector3 deathPrefabIncrementalOffset;

		[Token(Token = "0x4000AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		public RotationMode rotationMode;

		[Token(Token = "0x4000AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
		public bool deathPrefabRandomizeXRotation;

		[Token(Token = "0x4000AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22D")]
		public bool deathPrefabRandomizeYRotation;

		[Token(Token = "0x4000AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22E")]
		public bool deathPrefabRandomizeZRotation;

		[Token(Token = "0x4000AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22F")]
		public bool deathPrefabKeepVelocity;

		[Token(Token = "0x4000AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		public Vector3 deathPrefabCustomRotation;

		[Token(Token = "0x4000AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		public KillerFloat deathDelay;

		[Token(Token = "0x4000ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		public SpawnerDestroyedBehavior spawnerDestroyedAction;

		[Token(Token = "0x4000ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		public Killable parentKillableForParentDestroyed;

		[Token(Token = "0x4000ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		public SpawnerDestroyedBehavior parentDestroyedAction;

		[Token(Token = "0x4000ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
		public DeathDespawnBehavior deathDespawnBehavior;

		[Token(Token = "0x4000ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		public bool timerDeathEnabled;

		[Token(Token = "0x4000ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		public KillerFloat timerDeathSeconds;

		[Token(Token = "0x4000AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		public SpawnerDestroyedBehavior timeUpAction;

		[Token(Token = "0x4000AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
		public bool distanceDeathEnabled;

		[Token(Token = "0x4000AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		public KillerFloat tooFarDistance;

		[Token(Token = "0x4000AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		public SpawnerDestroyedBehavior distanceDeathAction;

		[Token(Token = "0x4000AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
		public int currentHitPoints;

		[Token(Token = "0x4000AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		public bool isVisible;

		[Token(Token = "0x4000AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x289")]
		public bool showRespawnSettings;

		[Token(Token = "0x4000AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
		public RespawnType respawnType;

		[Token(Token = "0x4000AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		public int timesToRespawn;

		[Token(Token = "0x4000AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		public KillerFloat respawnDelay;

		[Token(Token = "0x4000AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		public bool respawnFireEvents;

		[Token(Token = "0x4000AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		public List<CGKCustomEventToFire> respawnCustomEvents;

		[Token(Token = "0x4000AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		private Vector3 _respawnLocation;

		[Token(Token = "0x4000AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		private VisualizationMarker _visualizationMarker;

		[Token(Token = "0x4000AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		private int _timesRespawned;

		[Token(Token = "0x4000AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2CC")]
		private Vector3 _spawnPoint;

		[Token(Token = "0x4000AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		private GameObject _spawnedFromObject;

		[Token(Token = "0x4000AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		private int? _spawnedFromGOInstanceId;

		[Token(Token = "0x4000AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		private WavePrefabPool _deathPrefabWavePool;

		[Token(Token = "0x4000AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		private Transform _trans;

		[Token(Token = "0x4000AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		private GameObject _go;

		[Token(Token = "0x4000AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		private int? _instanceId;

		[Token(Token = "0x4000AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		private CharacterController _charCtrl;

		[Token(Token = "0x4000AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		private Rigidbody _body;

		[Token(Token = "0x4000AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		private Killable _parentKillable;

		[Token(Token = "0x4000AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		private List<Collider> _colliders;

		[Token(Token = "0x4000AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		private bool _willSkipDeathDelay;

		[Token(Token = "0x4000AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
		private string _deathScenarioName;

		[Token(Token = "0x4000AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
		private Rigidbody2D _body2D;

		[Token(Token = "0x4000AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
		private List<Collider2D> _colliders2D;

		[Token(Token = "0x4000AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		private int _damageTaken;

		[Token(Token = "0x4000AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34C")]
		private int _damagePrefabsSpawned;

		[Token(Token = "0x4000B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
		private WavePrefabPool _damagePrefabWavePool;

		[Token(Token = "0x4000B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
		private WavePrefabPool _dealDamagePrefabWavePool;

		[Token(Token = "0x4000B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
		private WavePrefabPool _vanishPrefabWavePool;

		[Token(Token = "0x4000B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
		private WavePrefabPool _invinceHitPrefabWavePool;

		[Token(Token = "0x4000B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
		private bool _becameVisible;

		[Token(Token = "0x4000B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x374")]
		private float _spawnTime;

		[Token(Token = "0x4000B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
		private bool _isDespawning;

		[Token(Token = "0x4000B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x379")]
		private bool _isTemporarilyInvincible;

		[Token(Token = "0x4000B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x37A")]
		private bool _spawnerSet;

		[Token(Token = "0x4000B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x37B")]
		private bool _spawnLocationSet;

		[Token(Token = "0x4000B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x37C")]
		private bool _waitingToDestroy;

		[Token(Token = "0x4000B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x37D")]
		private bool _deathDelayGoing;

		[Token(Token = "0x4000B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
		private readonly List<Killable> _childrenToDestroy;

		[Token(Token = "0x4000B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
		private readonly List<Killable> _childKillables;

		[Token(Token = "0x4000B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2AC94", Offset = "0xE2AC94")]
		private Killable <KilledBy>k__BackingField;

		[Token(Token = "0x1700012F")]
		private Transform CurrentDeathPrefab
		{
			[Token(Token = "0x6000A78")]
			[Address(RVA = "0x12511FC", Offset = "0x12511FC", VA = "0x12511FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000130")]
		private Transform CurrentDamagePrefab
		{
			[Token(Token = "0x6000A79")]
			[Address(RVA = "0x1250D44", Offset = "0x1250D44", VA = "0x1250D44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000131")]
		private bool IsVisualizationClone
		{
			[Token(Token = "0x6000A7A")]
			[Address(RVA = "0x124D1D8", Offset = "0x124D1D8", VA = "0x124D1D8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000132")]
		public int? SpawnedFromObjectId
		{
			[Token(Token = "0x6000A7B")]
			[Address(RVA = "0x124F8BC", Offset = "0x124F8BC", VA = "0x124F8BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000133")]
		private GameObject GameObj
		{
			[Token(Token = "0x6000A7C")]
			[Address(RVA = "0x124DC3C", Offset = "0x124DC3C", VA = "0x124DC3C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000134")]
		private int? KillableId
		{
			[Token(Token = "0x6000A7D")]
			[Address(RVA = "0x124F980", Offset = "0x124F980", VA = "0x124F980")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000135")]
		public bool CanReceiveKnockback
		{
			[Token(Token = "0x6000A7E")]
			[Address(RVA = "0x1254B90", Offset = "0x1254B90", VA = "0x1254B90")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000136")]
		public bool ReceiveKnockbackWhenInvince
		{
			[Token(Token = "0x6000A7F")]
			[Address(RVA = "0x12531B8", Offset = "0x12531B8", VA = "0x12531B8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000137")]
		public bool ReceiveKnockbackWhenDamaged
		{
			[Token(Token = "0x6000A80")]
			[Address(RVA = "0x12531FC", Offset = "0x12531FC", VA = "0x12531FC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000138")]
		public Rigidbody Body
		{
			[Token(Token = "0x6000A81")]
			[Address(RVA = "0x1250778", Offset = "0x1250778", VA = "0x1250778")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000139")]
		public List<Killable> ChildKillables
		{
			[Token(Token = "0x6000A82")]
			[Address(RVA = "0x1254C44", Offset = "0x1254C44", VA = "0x1254C44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013A")]
		public List<Collider> Colidrs
		{
			[Token(Token = "0x6000A83")]
			[Address(RVA = "0x124FA14", Offset = "0x124FA14", VA = "0x124FA14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013B")]
		public int CurrentHitPoints
		{
			[Token(Token = "0x6000A84")]
			[Address(RVA = "0x1254C4C", Offset = "0x1254C4C", VA = "0x1254C4C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000A85")]
			[Address(RVA = "0x1254C54", Offset = "0x1254C54", VA = "0x1254C54")]
			set
			{
			}
		}

		[Token(Token = "0x1700013C")]
		public Transform CurrentVanishPrefab
		{
			[Token(Token = "0x6000A86")]
			[Address(RVA = "0x12516E0", Offset = "0x12516E0", VA = "0x12516E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013D")]
		public Transform CurrentDealDamagePrefab
		{
			[Token(Token = "0x6000A87")]
			[Address(RVA = "0x1251100", Offset = "0x1251100", VA = "0x1251100")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013E")]
		public Transform CurrentInvinceHitPrefab
		{
			[Token(Token = "0x6000A88")]
			[Address(RVA = "0x1251430", Offset = "0x1251430", VA = "0x1251430")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013F")]
		public bool GameIsOverForKillable
		{
			[Token(Token = "0x6000A89")]
			[Address(RVA = "0x124FDA4", Offset = "0x124FDA4", VA = "0x124FDA4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000140")]
		public bool IsDead
		{
			[Token(Token = "0x6000A8A")]
			[Address(RVA = "0x1254C5C", Offset = "0x1254C5C", VA = "0x1254C5C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000141")]
		public bool IsGravBody
		{
			[Token(Token = "0x6000A8B")]
			[Address(RVA = "0x1250668", Offset = "0x1250668", VA = "0x1250668")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000142")]
		public bool IsCharController
		{
			[Token(Token = "0x6000A8C")]
			[Address(RVA = "0x1254BC8", Offset = "0x1254BC8", VA = "0x1254BC8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000143")]
		public bool IsMyMultiplayerPrefab
		{
			[Token(Token = "0x6000A8D")]
			[Address(RVA = "0x124FD44", Offset = "0x124FD44", VA = "0x124FD44")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000144")]
		public Killable KilledBy
		{
			[Token(Token = "0x6000A8E")]
			[Address(RVA = "0x1254C6C", Offset = "0x1254C6C", VA = "0x1254C6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2EB38", Offset = "0xE2EB38")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A8F")]
			[Address(RVA = "0x1254C74", Offset = "0x1254C74", VA = "0x1254C74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2EB48", Offset = "0xE2EB48")]
			private set
			{
			}
		}

		[Token(Token = "0x17000145")]
		public Vector3 RespawnPosition
		{
			[Token(Token = "0x6000A90")]
			[Address(RVA = "0x1254C84", Offset = "0x1254C84", VA = "0x1254C84")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000A91")]
			[Address(RVA = "0x1254C94", Offset = "0x1254C94", VA = "0x1254C94")]
			set
			{
			}
		}

		[Token(Token = "0x17000146")]
		public GameObject SpawnedFromObject
		{
			[Token(Token = "0x6000A92")]
			[Address(RVA = "0x1254CA4", Offset = "0x1254CA4", VA = "0x1254CA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000147")]
		public Transform Trans
		{
			[Token(Token = "0x6000A93")]
			[Address(RVA = "0x124E61C", Offset = "0x124E61C", VA = "0x124E61C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000148")]
		public int TimesRespawned
		{
			[Token(Token = "0x6000A94")]
			[Address(RVA = "0x1254CAC", Offset = "0x1254CAC", VA = "0x1254CAC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000149")]
		private Rigidbody2D Body2D
		{
			[Token(Token = "0x6000A95")]
			[Address(RVA = "0x1250824", Offset = "0x1250824", VA = "0x1250824")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014A")]
		private Vector3 DeathPrefabSpawnPosition
		{
			[Token(Token = "0x6000A96")]
			[Address(RVA = "0x12511BC", Offset = "0x12511BC", VA = "0x12511BC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700014B")]
		private List<Collider2D> Colidrs2D
		{
			[Token(Token = "0x6000A97")]
			[Address(RVA = "0x124FAE0", Offset = "0x124FAE0", VA = "0x124FAE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014C")]
		private CharacterController CharController
		{
			[Token(Token = "0x6000A98")]
			[Address(RVA = "0x124DB90", Offset = "0x124DB90", VA = "0x124DB90")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A24")]
		[Address(RVA = "0x124CD3C", Offset = "0x124CD3C", VA = "0x124CD3C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A25")]
		[Address(RVA = "0x124CDA8", Offset = "0x124CDA8", VA = "0x124CDA8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A26")]
		[Address(RVA = "0x124CDBC", Offset = "0x124CDBC", VA = "0x124CDBC")]
		private void OnSpawned()
		{
		}

		[Token(Token = "0x6000A27")]
		[Address(RVA = "0x124CDD0", Offset = "0x124CDD0", VA = "0x124CDD0")]
		private void OnDespawned()
		{
		}

		[Token(Token = "0x6000A28")]
		[Address(RVA = "0x124D038", Offset = "0x124D038", VA = "0x124D038", Slot = "4")]
		protected virtual void Despawned()
		{
		}

		[Token(Token = "0x6000A29")]
		[Address(RVA = "0x124D03C", Offset = "0x124D03C", VA = "0x124D03C")]
		private void OnClick()
		{
		}

		[Token(Token = "0x6000A2A")]
		[Address(RVA = "0x124D048", Offset = "0x124D048", VA = "0x124D048", Slot = "5")]
		protected virtual void _OnClick()
		{
		}

		[Token(Token = "0x6000A2B")]
		[Address(RVA = "0x124D0BC", Offset = "0x124D0BC", VA = "0x124D0BC")]
		private void OnMouseDown()
		{
		}

		[Token(Token = "0x6000A2C")]
		[Address(RVA = "0x124D0C8", Offset = "0x124D0C8", VA = "0x124D0C8", Slot = "6")]
		protected virtual void _OnMouseDown()
		{
		}

		[Token(Token = "0x6000A2D")]
		[Address(RVA = "0x124D13C", Offset = "0x124D13C", VA = "0x124D13C")]
		private void OnBecameVisible()
		{
		}

		[Token(Token = "0x6000A2E")]
		[Address(RVA = "0x124D148", Offset = "0x124D148", VA = "0x124D148", Slot = "7")]
		public virtual void BecameVisible()
		{
		}

		[Token(Token = "0x6000A2F")]
		[Address(RVA = "0x124D164", Offset = "0x124D164", VA = "0x124D164")]
		private void OnBecameInvisible()
		{
		}

		[Token(Token = "0x6000A30")]
		[Address(RVA = "0x124D170", Offset = "0x124D170", VA = "0x124D170", Slot = "8")]
		public virtual void BecameInvisible()
		{
		}

		[Token(Token = "0x6000A31")]
		[Address(RVA = "0x124D194", Offset = "0x124D194", VA = "0x124D194")]
		private void OnCollisionEnter2D(Collision2D coll)
		{
		}

		[Token(Token = "0x6000A32")]
		[Address(RVA = "0x124D2BC", Offset = "0x124D2BC", VA = "0x124D2BC", Slot = "9")]
		public virtual void CollisionEnter2D(Collision2D collision)
		{
		}

		[Token(Token = "0x6000A33")]
		[Address(RVA = "0x124D734", Offset = "0x124D734", VA = "0x124D734")]
		private void OnTriggerEnter2D(Collider2D other)
		{
		}

		[Token(Token = "0x6000A34")]
		[Address(RVA = "0x124D778", Offset = "0x124D778", VA = "0x124D778", Slot = "10")]
		public virtual void TriggerEnter2D(Collider2D other)
		{
		}

		[Token(Token = "0x6000A35")]
		[Address(RVA = "0x124D808", Offset = "0x124D808", VA = "0x124D808")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6000A36")]
		[Address(RVA = "0x124D84C", Offset = "0x124D84C", VA = "0x124D84C", Slot = "11")]
		public virtual void CollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6000A37")]
		[Address(RVA = "0x124D8DC", Offset = "0x124D8DC", VA = "0x124D8DC")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000A38")]
		[Address(RVA = "0x124D920", Offset = "0x124D920", VA = "0x124D920", Slot = "12")]
		public virtual void TriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000A39")]
		[Address(RVA = "0x124D9D4", Offset = "0x124D9D4", VA = "0x124D9D4")]
		private void OnControllerColliderHit(ControllerColliderHit hit)
		{
		}

		[Token(Token = "0x6000A3A")]
		[Address(RVA = "0x124DA34", Offset = "0x124DA34", VA = "0x124DA34", Slot = "13")]
		public virtual void ControllerColliderHit(GameObject hit, bool calledFromOtherKillable = false)
		{
		}

		[Token(Token = "0x6000A3B")]
		[Address(RVA = "0x124DCE0", Offset = "0x124DCE0", VA = "0x124DCE0", Slot = "14")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x6000A3C")]
		[Address(RVA = "0x124E6C0", Offset = "0x124E6C0", VA = "0x124E6C0")]
		public void AddAttackPoints(int pointsToAdd)
		{
		}

		[Token(Token = "0x6000A3D")]
		[Address(RVA = "0x124E86C", Offset = "0x124E86C", VA = "0x124E86C")]
		public void AddHitPoints(int pointsToAdd)
		{
		}

		[Token(Token = "0x6000A3E")]
		[Address(RVA = "0x124E8E4", Offset = "0x124E8E4", VA = "0x124E8E4")]
		public void FireRespawnEvents()
		{
		}

		[Token(Token = "0x6000A3F")]
		[Address(RVA = "0x124E9C4", Offset = "0x124E9C4", VA = "0x124E9C4")]
		public void StartDeathTimer()
		{
		}

		[Token(Token = "0x6000A40")]
		[Address(RVA = "0x124E9F4", Offset = "0x124E9F4", VA = "0x124E9F4")]
		public void StopDeathTimer()
		{
		}

		[Token(Token = "0x6000A41")]
		[Address(RVA = "0x124EA04", Offset = "0x124EA04", VA = "0x124EA04")]
		public void TemporaryInvincibility(float seconds)
		{
		}

		[Token(Token = "0x6000A42")]
		[Address(RVA = "0x124EAC8", Offset = "0x124EAC8", VA = "0x124EAC8")]
		public bool IsUsingPrefabPool(Transform poolTrans)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A43")]
		[Address(RVA = "0x124EB24", Offset = "0x124EB24", VA = "0x124EB24")]
		public void RegisterChildKillable(Killable kill)
		{
		}

		[Token(Token = "0x6000A44")]
		[Address(RVA = "0x124ED14", Offset = "0x124ED14", VA = "0x124ED14")]
		public void RecordSpawner(GameObject spawnerObject)
		{
		}

		[Token(Token = "0x6000A45")]
		[Address(RVA = "0x124ED44", Offset = "0x124ED44", VA = "0x124ED44", Slot = "15")]
		public virtual void UnregisterChildKillable(Killable kill)
		{
		}

		[Token(Token = "0x6000A46")]
		[Address(RVA = "0x124EF2C", Offset = "0x124EF2C", VA = "0x124EF2C")]
		public void RecordChildToDie(Killable kilChild)
		{
		}

		[Token(Token = "0x6000A47")]
		[Address(RVA = "0x124EFC4", Offset = "0x124EFC4", VA = "0x124EFC4")]
		private void CheckForValidVariables()
		{
		}

		[Token(Token = "0x6000A48")]
		[Address(RVA = "0x124D5C0", Offset = "0x124D5C0", VA = "0x124D5C0")]
		private void CheckForAttackPoints(Killable enemy, GameObject goHit)
		{
		}

		[Token(Token = "0x6000A49")]
		[Address(RVA = "0x124E000", Offset = "0x124E000", VA = "0x124E000")]
		private void DestroyRecordedChildren()
		{
		}

		[Token(Token = "0x6000A4A")]
		[Address(RVA = "0x124EBD4", Offset = "0x124EBD4", VA = "0x124EBD4")]
		private void DisableColliders()
		{
		}

		[Token(Token = "0x6000A4B")]
		[Address(RVA = "0x124EDEC", Offset = "0x124EDEC", VA = "0x124EDEC")]
		private void EnableColliders()
		{
		}

		[Token(Token = "0x6000A4C")]
		[Address(RVA = "0x124D4CC", Offset = "0x124D4CC", VA = "0x124D4CC")]
		private static Killable GetOtherKillable(GameObject other)
		{
			return null;
		}

		[Token(Token = "0x6000A4D")]
		[Address(RVA = "0x124D34C", Offset = "0x124D34C", VA = "0x124D34C")]
		private bool IsValidHit(int hitLayer, string hitTag)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A4E")]
		[Address(RVA = "0x124F7E4", Offset = "0x124F7E4", VA = "0x124F7E4")]
		private void LogIfEnabled(string msg)
		{
		}

		[Token(Token = "0x6000A4F")]
		[Address(RVA = "0x124FE6C", Offset = "0x124FE6C", VA = "0x124FE6C", Slot = "16")]
		public virtual void ModifyWorldVariables(WorldVariableCollection modCollection, bool isDamage, bool fireAnyway = false)
		{
		}

		[Token(Token = "0x6000A50")]
		[Address(RVA = "0x124E174", Offset = "0x124E174", VA = "0x124E174")]
		protected bool PerformDeath(string scenarioName, bool skipDespawn = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A51")]
		[Address(RVA = "0x124CE18", Offset = "0x124CE18", VA = "0x124CE18")]
		private void ResetVelocity()
		{
		}

		[Token(Token = "0x6000A52")]
		[Address(RVA = "0x124CD74", Offset = "0x124CD74", VA = "0x124CD74")]
		private void ResetSpawnerInfo()
		{
		}

		[Token(Token = "0x6000A53")]
		[Address(RVA = "0x12508D0", Offset = "0x12508D0", VA = "0x12508D0")]
		private bool SpawnDamagePrefabsIfPerHit(int damagePoints)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A54")]
		[Address(RVA = "0x12508FC", Offset = "0x12508FC", VA = "0x12508FC")]
		private void SpawnDamagePrefabs(int damagePoints)
		{
		}

		[Token(Token = "0x6000A55")]
		[Address(RVA = "0x1250E00", Offset = "0x1250E00", VA = "0x1250E00")]
		private bool SpawnDealDamagePrefabsIfTakingDamage(int damagePoints, Killable enemy)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A56")]
		[Address(RVA = "0x125007C", Offset = "0x125007C", VA = "0x125007C")]
		private void SpawnDeathPrefabs()
		{
		}

		[Token(Token = "0x6000A57")]
		[Address(RVA = "0x1251238", Offset = "0x1251238", VA = "0x1251238")]
		private void SpawnInvinceHitPrefab()
		{
		}

		[Token(Token = "0x6000A58")]
		[Address(RVA = "0x12514EC", Offset = "0x12514EC", VA = "0x12514EC")]
		private void SpawnVanishPrefab()
		{
		}

		[Token(Token = "0x6000A59")]
		[Address(RVA = "0x124F58C", Offset = "0x124F58C", VA = "0x124F58C")]
		private void ValidateWorldVariableModifier(WorldVariableModifier mod)
		{
		}

		[Token(Token = "0x6000A5A")]
		[Address(RVA = "0x125179C", Offset = "0x125179C", VA = "0x125179C", Slot = "17")]
		public virtual bool DespawnPrefab()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A5B")]
		[Address(RVA = "0x1251CF4", Offset = "0x1251CF4", VA = "0x1251CF4", Slot = "18")]
		public virtual Transform SpawnPrefab(Transform prefabToSpawn, Vector3 spawnPos)
		{
			return null;
		}

		[Token(Token = "0x6000A5C")]
		[Address(RVA = "0x1251E9C", Offset = "0x1251E9C", VA = "0x1251E9C", Slot = "19")]
		public virtual Transform SpawnDeathPrefab(Transform deathPre, Vector3 spawnPos, Quaternion spawnRotation, Transform theParent)
		{
			return null;
		}

		[Token(Token = "0x6000A5D")]
		[Address(RVA = "0x1252278", Offset = "0x1252278", VA = "0x1252278", Slot = "20")]
		protected virtual void DamagePrefabFailedSpawn(Transform prefabToSpawn)
		{
		}

		[Token(Token = "0x6000A5E")]
		[Address(RVA = "0x1252324", Offset = "0x1252324", VA = "0x1252324", Slot = "21")]
		protected virtual void DamagePrefabSpawned(Transform spawnedDamagePrefab)
		{
		}

		[Token(Token = "0x6000A5F")]
		[Address(RVA = "0x12523D0", Offset = "0x12523D0", VA = "0x12523D0", Slot = "22")]
		protected virtual void DamagePrevented(int pointsDamage, Killable enemyHitBy)
		{
		}

		[Token(Token = "0x6000A60")]
		[Address(RVA = "0x12523F0", Offset = "0x12523F0", VA = "0x12523F0", Slot = "23")]
		protected virtual void DeathDelayStarted()
		{
		}

		[Token(Token = "0x6000A61")]
		[Address(RVA = "0x1252498", Offset = "0x1252498", VA = "0x1252498", Slot = "24")]
		protected virtual void DeathPrefabFailedSpawn(Transform deathPre)
		{
		}

		[Token(Token = "0x6000A62")]
		[Address(RVA = "0x1252548", Offset = "0x1252548", VA = "0x1252548", Slot = "25")]
		protected virtual void DeathPrefabSpawned(Transform spawnedDeathPrefab)
		{
		}

		[Token(Token = "0x6000A63")]
		[Address(RVA = "0x12525F4", Offset = "0x12525F4", VA = "0x12525F4", Slot = "26")]
		public virtual bool Despawn(TriggeredSpawner.EventType eType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A64")]
		[Address(RVA = "0x1252734", Offset = "0x1252734", VA = "0x1252734", Slot = "27")]
		public virtual bool DespawnOrRespawn()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A65")]
		[Address(RVA = "0x1252A78", Offset = "0x1252A78", VA = "0x1252A78", Slot = "28")]
		public virtual bool DespawnThis()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A66")]
		[Address(RVA = "0x1252B8C", Offset = "0x1252B8C", VA = "0x1252B8C")]
		public void DestroyImmediately(string scenarioName = "Destroyed")
		{
		}

		[Token(Token = "0x6000A67")]
		[Address(RVA = "0x1252BA0", Offset = "0x1252BA0", VA = "0x1252BA0", Slot = "29")]
		public virtual void DestroyKillable(string scenarioName = "Destroyed", bool skipDeathDelay = false)
		{
		}

		[Token(Token = "0x6000A68")]
		[Address(RVA = "0x1252BCC", Offset = "0x1252BCC", VA = "0x1252BCC", Slot = "30")]
		public virtual string DetermineScenario(string scenarioName)
		{
			return null;
		}

		[Token(Token = "0x6000A69")]
		[Address(RVA = "0x1252BD4", Offset = "0x1252BD4", VA = "0x1252BD4", Slot = "31")]
		public virtual bool IsInvincible()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A6A")]
		[Address(RVA = "0x1252C4C", Offset = "0x1252C4C", VA = "0x1252C4C", Slot = "32")]
		public virtual bool IsTemporarilyInvincible()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A6B")]
		[Address(RVA = "0x1252C54", Offset = "0x1252C54", VA = "0x1252C54", Slot = "33")]
		public virtual void Knockback(Killable enemy)
		{
		}

		[Token(Token = "0x6000A6C")]
		[Address(RVA = "0x1253240", Offset = "0x1253240", VA = "0x1253240", Slot = "34")]
		protected virtual void ModifyDamageWorldVariables(List<WorldVariableModifier> mods)
		{
		}

		[Token(Token = "0x6000A6D")]
		[Address(RVA = "0x1253264", Offset = "0x1253264", VA = "0x1253264", Slot = "35")]
		protected virtual void ModifyDeathWorldVariables(List<WorldVariableModifier> mods)
		{
		}

		[Token(Token = "0x6000A6E")]
		[Address(RVA = "0x1253288", Offset = "0x1253288", VA = "0x1253288", Slot = "36")]
		protected virtual bool ShouldDieFromNonDamageHit(Killable enemyKillable)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A6F")]
		[Address(RVA = "0x1253298", Offset = "0x1253298", VA = "0x1253298", Slot = "37")]
		protected virtual bool ShouldFireDamageVariableModifiers()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A70")]
		[Address(RVA = "0x12532A0", Offset = "0x12532A0", VA = "0x12532A0", Slot = "38")]
		protected virtual bool ShouldFireDeathVariableModifiers()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A71")]
		[Address(RVA = "0x12532A8", Offset = "0x12532A8", VA = "0x12532A8", Slot = "39")]
		protected virtual void SpawnedOrAwake(bool spawned = true)
		{
		}

		[Token(Token = "0x6000A72")]
		[Address(RVA = "0x1254398", Offset = "0x1254398", VA = "0x1254398", Slot = "40")]
		protected virtual void SpawnerDestroyed()
		{
		}

		[Token(Token = "0x6000A73")]
		[Address(RVA = "0x1254430", Offset = "0x1254430", VA = "0x1254430", Slot = "41")]
		public virtual void TakeDamage(int damagePoints)
		{
		}

		[Token(Token = "0x6000A74")]
		[Address(RVA = "0x1254444", Offset = "0x1254444", VA = "0x1254444", Slot = "42")]
		public virtual void TakeDamage(int damagePoints, Killable enemy)
		{
		}

		[Token(Token = "0x6000A75")]
		[Address(RVA = "0x1254A84", Offset = "0x1254A84", VA = "0x1254A84", Slot = "43")]
		protected virtual void TakingDamage(int damagePoints, Killable enemy)
		{
		}

		[Token(Token = "0x6000A76")]
		[Address(RVA = "0x124EA3C", Offset = "0x124EA3C", VA = "0x124EA3C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE2EA70", Offset = "0xE2EA70")]
		private IEnumerator SetSpawnInvincibleForSeconds(float seconds)
		{
			return null;
		}

		[Token(Token = "0x6000A77")]
		[Address(RVA = "0x124E0DC", Offset = "0x124E0DC", VA = "0x124E0DC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE2EAD4", Offset = "0xE2EAD4")]
		private IEnumerator WaitThenDestroy(string scenarioName)
		{
			return null;
		}

		[Token(Token = "0x6000A99")]
		[Address(RVA = "0x1254CB4", Offset = "0x1254CB4", VA = "0x1254CB4")]
		public Killable()
		{
		}
	}
	[Token(Token = "0x200018C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE21720", Offset = "0xE21720")]
	public class KillableChildCollision : MonoBehaviour
	{
		[Token(Token = "0x4000B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Killable killable;

		[Token(Token = "0x4000B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _isValid;

		[Token(Token = "0x17000151")]
		private Killable KillableToAlert
		{
			[Token(Token = "0x6000AA8")]
			[Address(RVA = "0x1255768", Offset = "0x1255768", VA = "0x1255768")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AA9")]
		[Address(RVA = "0x1255954", Offset = "0x1255954", VA = "0x1255954")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0x12559A8", Offset = "0x12559A8", VA = "0x12559A8")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000AAB")]
		[Address(RVA = "0x12559FC", Offset = "0x12559FC", VA = "0x12559FC")]
		private void OnCollisionEnter2D(Collision2D coll)
		{
		}

		[Token(Token = "0x6000AAC")]
		[Address(RVA = "0x1255A44", Offset = "0x1255A44", VA = "0x1255A44")]
		private void OnTriggerEnter2D(Collider2D other)
		{
		}

		[Token(Token = "0x6000AAD")]
		[Address(RVA = "0x1255A8C", Offset = "0x1255A8C", VA = "0x1255A8C")]
		public KillableChildCollision()
		{
		}
	}
	[Token(Token = "0x200018D")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE21758", Offset = "0xE21758")]
	public class KillableChildVisibility : MonoBehaviour
	{
		[Token(Token = "0x4000B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Killable killableWithRenderer;

		[Token(Token = "0x4000B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _isValid;

		[Token(Token = "0x17000152")]
		private Killable KillableToAlert
		{
			[Token(Token = "0x6000AAE")]
			[Address(RVA = "0x1255A9C", Offset = "0x1255A9C", VA = "0x1255A9C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AAF")]
		[Address(RVA = "0x1255C88", Offset = "0x1255C88", VA = "0x1255C88")]
		private void OnBecameVisible()
		{
		}

		[Token(Token = "0x6000AB0")]
		[Address(RVA = "0x1255CD4", Offset = "0x1255CD4", VA = "0x1255CD4")]
		private void OnBecameInvisible()
		{
		}

		[Token(Token = "0x6000AB1")]
		[Address(RVA = "0x1255D20", Offset = "0x1255D20", VA = "0x1255D20")]
		public KillableChildVisibility()
		{
		}
	}
	[Token(Token = "0x200018E")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE21790", Offset = "0xE21790")]
	public class KillableListener : MonoBehaviour
	{
		[Token(Token = "0x4000B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string sourceKillableName;

		[Token(Token = "0x6000AB2")]
		[Address(RVA = "0x1255D30", Offset = "0x1255D30", VA = "0x1255D30")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000AB3")]
		[Address(RVA = "0x1255DFC", Offset = "0x1255DFC", VA = "0x1255DFC", Slot = "4")]
		public virtual void SpawnerDestroyed()
		{
		}

		[Token(Token = "0x6000AB4")]
		[Address(RVA = "0x1255E00", Offset = "0x1255E00", VA = "0x1255E00", Slot = "5")]
		public virtual void Despawning(TriggeredSpawner.EventType eType)
		{
		}

		[Token(Token = "0x6000AB5")]
		[Address(RVA = "0x1255E04", Offset = "0x1255E04", VA = "0x1255E04", Slot = "6")]
		public virtual void Despawned()
		{
		}

		[Token(Token = "0x6000AB6")]
		[Address(RVA = "0x1255E08", Offset = "0x1255E08", VA = "0x1255E08", Slot = "7")]
		public virtual void TakingDamage(int pointsDamage, Killable enemyHitBy)
		{
		}

		[Token(Token = "0x6000AB7")]
		[Address(RVA = "0x1255E0C", Offset = "0x1255E0C", VA = "0x1255E0C", Slot = "8")]
		public virtual void DamagePrevented(int pointsDamage, Killable enemyHitBy)
		{
		}

		[Token(Token = "0x6000AB8")]
		[Address(RVA = "0x1255E10", Offset = "0x1255E10", VA = "0x1255E10", Slot = "9")]
		public virtual void DamagePrefabSpawned(Transform damagePrefab)
		{
		}

		[Token(Token = "0x6000AB9")]
		[Address(RVA = "0x1255E14", Offset = "0x1255E14", VA = "0x1255E14", Slot = "10")]
		public virtual void DamagePrefabFailedToSpawn(Transform damagePrefab)
		{
		}

		[Token(Token = "0x6000ABA")]
		[Address(RVA = "0x1255E18", Offset = "0x1255E18", VA = "0x1255E18", Slot = "11")]
		public virtual void DeathDelayStarted(float delayTime)
		{
		}

		[Token(Token = "0x6000ABB")]
		[Address(RVA = "0x1255E1C", Offset = "0x1255E1C", VA = "0x1255E1C", Slot = "12")]
		public virtual void DeathPrefabSpawned(Transform deathPrefab)
		{
		}

		[Token(Token = "0x6000ABC")]
		[Address(RVA = "0x1255E20", Offset = "0x1255E20", VA = "0x1255E20", Slot = "13")]
		public virtual void DeathPrefabFailedToSpawn(Transform deathPrefab)
		{
		}

		[Token(Token = "0x6000ABD")]
		[Address(RVA = "0x1255E24", Offset = "0x1255E24", VA = "0x1255E24", Slot = "14")]
		public virtual void ModifyingDamageWorldVariables(List<WorldVariableModifier> variableModifiers)
		{
		}

		[Token(Token = "0x6000ABE")]
		[Address(RVA = "0x1255E28", Offset = "0x1255E28", VA = "0x1255E28", Slot = "15")]
		public virtual void ModifyingDeathWorldVariables(List<WorldVariableModifier> variableModifiers)
		{
		}

		[Token(Token = "0x6000ABF")]
		[Address(RVA = "0x1255E2C", Offset = "0x1255E2C", VA = "0x1255E2C", Slot = "16")]
		public virtual void WaitingToDestroyKillable(Killable deadKillable)
		{
		}

		[Token(Token = "0x6000AC0")]
		[Address(RVA = "0x1255E30", Offset = "0x1255E30", VA = "0x1255E30", Slot = "17")]
		public virtual void DestroyingKillable(Killable deadKillable)
		{
		}

		[Token(Token = "0x6000AC1")]
		[Address(RVA = "0x1255E34", Offset = "0x1255E34", VA = "0x1255E34", Slot = "18")]
		public virtual string DeterminingScenario(Killable deadKillable, string scenario)
		{
			return null;
		}

		[Token(Token = "0x6000AC2")]
		[Address(RVA = "0x1255E3C", Offset = "0x1255E3C", VA = "0x1255E3C", Slot = "19")]
		public virtual void Spawned(Killable newKillable)
		{
		}

		[Token(Token = "0x6000AC3")]
		[Address(RVA = "0x1255E40", Offset = "0x1255E40", VA = "0x1255E40", Slot = "20")]
		public virtual void StartedInScene(Killable newKillable)
		{
		}

		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0x1255E44", Offset = "0x1255E44", VA = "0x1255E44")]
		public KillableListener()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200018F")]
	public class CGKCustomEventCategory
	{
		[Token(Token = "0x4000B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string CatName;

		[Token(Token = "0x4000B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IsExpanded;

		[Token(Token = "0x4000B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool IsEditing;

		[Token(Token = "0x4000B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool IsTemporary;

		[Token(Token = "0x4000B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string ProspectiveName;

		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0x124AB5C", Offset = "0x124AB5C", VA = "0x124AB5C")]
		public CGKCustomEventCategory()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000190")]
	public class CgkCustomEvent
	{
		[Token(Token = "0x4000B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string EventName;

		[Token(Token = "0x4000B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string ProspectiveName;

		[Token(Token = "0x4000B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool IsEditing;

		[Token(Token = "0x4000B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool eventExpanded;

		[Token(Token = "0x4000B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public LevelSettings.EventReceiveMode eventRcvMode;

		[Token(Token = "0x4000B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LevelSettings.EventReceiveFilter eventRcvFilterMode;

		[Token(Token = "0x4000B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public KillerInt filterModeQty;

		[Token(Token = "0x4000B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public KillerFloat distanceThreshold;

		[Token(Token = "0x4000B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int frameLastFired;

		[Token(Token = "0x4000B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public CgkCustomEventsFireDuringFrame customEventsDuringFrame;

		[Token(Token = "0x4000B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string categoryName;
	}
	[Serializable]
	[Token(Token = "0x2000191")]
	public class CgkCustomEventsFireDuringFrame
	{
		[Token(Token = "0x4000B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int FrameNumber;

		[Token(Token = "0x4000B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HashSet<int> CustomEventHashes;

		[Token(Token = "0x6000AC6")]
		[Address(RVA = "0x124AC34", Offset = "0x124AC34", VA = "0x124AC34")]
		public CgkCustomEventsFireDuringFrame()
		{
		}
	}
	[Token(Token = "0x2000192")]
	public interface ICgkEventReceiver
	{
		[Token(Token = "0x6000AC7")]
		void ReceiveEvent(string customEventName, Vector3 eventOrigin);

		[Token(Token = "0x6000AC8")]
		bool SubscribesToEvent(string customEventName);
	}
	[Token(Token = "0x2000193")]
	public class UniversalCustomEventReceiver : MonoBehaviour, ICgkEventReceiver
	{
		[Token(Token = "0x2000194")]
		public enum EventReceivedBehavior
		{
			[Token(Token = "0x4000B55")]
			None,
			[Token(Token = "0x4000B56")]
			DealXDamage,
			[Token(Token = "0x4000B57")]
			Despawn,
			[Token(Token = "0x4000B58")]
			Destroy
		}

		[Token(Token = "0x4000B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[CoreCustomEvent]
		public string CustomEvent;

		[Token(Token = "0x4000B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EventReceivedBehavior eventReceivedBehavior;

		[Token(Token = "0x4000B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2ACB4", Offset = "0xE2ACB4")]
		public int damageToDeal;

		[Token(Token = "0x4000B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform _trans;

		[Token(Token = "0x4000B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Killable _kill;

		[Token(Token = "0x17000153")]
		public Killable Kill
		{
			[Token(Token = "0x6000AD2")]
			[Address(RVA = "0xEFD414", Offset = "0xEFD414", VA = "0xEFD414")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000154")]
		public Transform Trans
		{
			[Token(Token = "0x6000AD3")]
			[Address(RVA = "0xEFD368", Offset = "0xEFD368", VA = "0xEFD368")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AC9")]
		[Address(RVA = "0xEFCE30", Offset = "0xEFCE30", VA = "0xEFCE30")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000ACA")]
		[Address(RVA = "0xEFCED8", Offset = "0xEFCED8", VA = "0xEFCED8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000ACB")]
		[Address(RVA = "0xEFCF6C", Offset = "0xEFCF6C", VA = "0xEFCF6C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000ACC")]
		[Address(RVA = "0xEFCF70", Offset = "0xEFCF70", VA = "0xEFCF70", Slot = "6")]
		public void CheckForIllegalCustomEvents()
		{
		}

		[Token(Token = "0x6000ACD")]
		[Address(RVA = "0xEFD1CC", Offset = "0xEFD1CC", VA = "0xEFD1CC", Slot = "4")]
		public void ReceiveEvent(string customEventName, Vector3 eventOrigin)
		{
		}

		[Token(Token = "0x6000ACE")]
		[Address(RVA = "0xEFD564", Offset = "0xEFD564", VA = "0xEFD564", Slot = "5")]
		public bool SubscribesToEvent(string customEventName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ACF")]
		[Address(RVA = "0xEFCE34", Offset = "0xEFCE34", VA = "0xEFCE34", Slot = "7")]
		public void RegisterReceiver()
		{
		}

		[Token(Token = "0x6000AD0")]
		[Address(RVA = "0xEFCEDC", Offset = "0xEFCEDC", VA = "0xEFCEDC", Slot = "8")]
		public void UnregisterReceiver()
		{
		}

		[Token(Token = "0x6000AD1")]
		[Address(RVA = "0xEFD4C0", Offset = "0xEFD4C0", VA = "0xEFD4C0")]
		private void LogNoKillable()
		{
		}

		[Token(Token = "0x6000AD4")]
		[Address(RVA = "0xEFD570", Offset = "0xEFD570", VA = "0xEFD570")]
		public UniversalCustomEventReceiver()
		{
		}
	}
	[Token(Token = "0x2000195")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE217C8", Offset = "0xE217C8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE217C8", Offset = "0xE217C8")]
	public class ParticleDespawner : MonoBehaviour
	{
		[Token(Token = "0x4000B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ParticleSystem _particles;

		[Token(Token = "0x4000B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform _trans;

		[Token(Token = "0x6000AD5")]
		[Address(RVA = "0x1261148", Offset = "0x1261148", VA = "0x1261148")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000AD6")]
		[Address(RVA = "0x12611C4", Offset = "0x12611C4", VA = "0x12611C4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000AD7")]
		[Address(RVA = "0x1261254", Offset = "0x1261254", VA = "0x1261254")]
		public ParticleDespawner()
		{
		}
	}
	[Token(Token = "0x2000196")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE21850", Offset = "0xE21850")]
	public class TimedDespawner : MonoBehaviour
	{
		[Token(Token = "0x2000197")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE21888", Offset = "0xE21888")]
		private sealed class <WaitUntilTimeUp>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TimedDespawner <>4__this;

			[Token(Token = "0x17000155")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000AE2")]
				[Address(RVA = "0x11763F0", Offset = "0x11763F0", VA = "0x11763F0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000156")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000AE4")]
				[Address(RVA = "0x1176458", Offset = "0x1176458", VA = "0x1176458", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000ADF")]
			[Address(RVA = "0x1176214", Offset = "0x1176214", VA = "0x1176214")]
			[DebuggerHidden]
			public <WaitUntilTimeUp>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6000AE0")]
			[Address(RVA = "0x11762D0", Offset = "0x11762D0", VA = "0x11762D0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000AE1")]
			[Address(RVA = "0x11762D4", Offset = "0x11762D4", VA = "0x11762D4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000AE3")]
			[Address(RVA = "0x11763F8", Offset = "0x11763F8", VA = "0x11763F8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float LifeSeconds;

		[Token(Token = "0x4000B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool StartTimerOnSpawn;

		[Token(Token = "0x4000B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TimedDespawnerListener listener;

		[Token(Token = "0x4000B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform _trans;

		[Token(Token = "0x4000B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private YieldInstruction _timerDelay;

		[Token(Token = "0x6000AD8")]
		[Address(RVA = "0x1176094", Offset = "0x1176094", VA = "0x1176094")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0x1176168", Offset = "0x1176168", VA = "0x1176168")]
		private void OnSpawned()
		{
		}

		[Token(Token = "0x6000ADA")]
		[Address(RVA = "0x1176130", Offset = "0x1176130", VA = "0x1176130")]
		private void AwakeOrSpawn()
		{
		}

		[Token(Token = "0x6000ADB")]
		[Address(RVA = "0x117616C", Offset = "0x117616C", VA = "0x117616C")]
		public void StartTimer()
		{
		}

		[Token(Token = "0x6000ADC")]
		[Address(RVA = "0x1176198", Offset = "0x1176198", VA = "0x1176198")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE2EBF8", Offset = "0xE2EBF8")]
		private IEnumerator WaitUntilTimeUp()
		{
			return null;
		}

		[Token(Token = "0x6000ADD")]
		[Address(RVA = "0x1176240", Offset = "0x1176240", VA = "0x1176240")]
		public void ChangeTimerDelay(float time)
		{
		}

		[Token(Token = "0x6000ADE")]
		[Address(RVA = "0x11762B8", Offset = "0x11762B8", VA = "0x11762B8")]
		public TimedDespawner()
		{
		}
	}
	[Token(Token = "0x2000198")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE21898", Offset = "0xE21898")]
	public class TimedDespawnerListener : MonoBehaviour
	{
		[Token(Token = "0x4000B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string sourceDespawnerName;

		[Token(Token = "0x6000AE5")]
		[Address(RVA = "0x1176460", Offset = "0x1176460", VA = "0x1176460")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000AE6")]
		[Address(RVA = "0x117652C", Offset = "0x117652C", VA = "0x117652C", Slot = "4")]
		public virtual void Despawning(Transform transDespawning)
		{
		}

		[Token(Token = "0x6000AE7")]
		[Address(RVA = "0x1176530", Offset = "0x1176530", VA = "0x1176530")]
		public TimedDespawnerListener()
		{
		}
	}
	[Token(Token = "0x2000199")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE218D0", Offset = "0xE218D0")]
	public class TriggeredDespawner : MonoBehaviour
	{
		[Token(Token = "0x4000B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform _trans;

		[Token(Token = "0x4000B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EventDespawnSpecifics invisibleSpec;

		[Token(Token = "0x4000B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public EventDespawnSpecifics mouseOverSpec;

		[Token(Token = "0x4000B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public EventDespawnSpecifics mouseClickSpec;

		[Token(Token = "0x4000B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public EventDespawnSpecifics collisionSpec;

		[Token(Token = "0x4000B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public EventDespawnSpecifics triggerEnterSpec;

		[Token(Token = "0x4000B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public EventDespawnSpecifics triggerExitSpec;

		[Token(Token = "0x4000B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public EventDespawnSpecifics collision2dSpec;

		[Token(Token = "0x4000B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public EventDespawnSpecifics triggerEnter2dSpec;

		[Token(Token = "0x4000B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public EventDespawnSpecifics triggerExit2dSpec;

		[Token(Token = "0x4000B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public EventDespawnSpecifics onClickSpec;

		[Token(Token = "0x4000B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public TriggeredDespawnerListener listener;

		[Token(Token = "0x4000B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool _isDespawning;

		[Token(Token = "0x6000AE8")]
		[Address(RVA = "0x1176A74", Offset = "0x1176A74", VA = "0x1176A74")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000AE9")]
		[Address(RVA = "0x1176AB4", Offset = "0x1176AB4", VA = "0x1176AB4")]
		private void OnSpawned()
		{
		}

		[Token(Token = "0x6000AEA")]
		[Address(RVA = "0x1176AC0", Offset = "0x1176AC0", VA = "0x1176AC0", Slot = "4")]
		protected virtual void SpawnedOrAwake()
		{
		}

		[Token(Token = "0x6000AEB")]
		[Address(RVA = "0x1176AC8", Offset = "0x1176AC8", VA = "0x1176AC8")]
		private void OnBecameInvisible()
		{
		}

		[Token(Token = "0x6000AEC")]
		[Address(RVA = "0x1176C58", Offset = "0x1176C58", VA = "0x1176C58")]
		private void OnMouseEnter()
		{
		}

		[Token(Token = "0x6000AED")]
		[Address(RVA = "0x1176C80", Offset = "0x1176C80", VA = "0x1176C80")]
		private void OnMouseDown()
		{
		}

		[Token(Token = "0x6000AEE")]
		[Address(RVA = "0x1176CA8", Offset = "0x1176CA8", VA = "0x1176CA8")]
		private void OnClick()
		{
		}

		[Token(Token = "0x6000AEF")]
		[Address(RVA = "0x1176CD0", Offset = "0x1176CD0", VA = "0x1176CD0")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0x1176DE0", Offset = "0x1176DE0", VA = "0x1176DE0")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000AF1")]
		[Address(RVA = "0x1176EF0", Offset = "0x1176EF0", VA = "0x1176EF0")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0x1177000", Offset = "0x1177000", VA = "0x1177000")]
		private void OnCollisionEnter2D(Collision2D collision)
		{
		}

		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0x1177110", Offset = "0x1177110", VA = "0x1177110")]
		private void OnTriggerEnter2D(Collider2D other)
		{
		}

		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0x1177220", Offset = "0x1177220", VA = "0x1177220")]
		private void OnTriggerExit2D(Collider2D other)
		{
		}

		[Token(Token = "0x6000AF5")]
		[Address(RVA = "0x1176AF0", Offset = "0x1176AF0", VA = "0x1176AF0")]
		private void Despawn(TriggeredSpawner.EventType eType)
		{
		}

		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0x1177330", Offset = "0x1177330", VA = "0x1177330")]
		public TriggeredDespawner()
		{
		}
	}
	[Token(Token = "0x200019A")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE21908", Offset = "0xE21908")]
	public class TriggeredDespawnerListener : MonoBehaviour
	{
		[Token(Token = "0x4000B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string sourceDespawnerName;

		[Token(Token = "0x6000AF7")]
		[Address(RVA = "0x11774F0", Offset = "0x11774F0", VA = "0x11774F0")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000AF8")]
		[Address(RVA = "0x11775BC", Offset = "0x11775BC", VA = "0x11775BC", Slot = "4")]
		public virtual void Despawning(TriggeredSpawner.EventType eType, Transform transDespawning)
		{
		}

		[Token(Token = "0x6000AF9")]
		[Address(RVA = "0x11775C0", Offset = "0x11775C0", VA = "0x11775C0")]
		public TriggeredDespawnerListener()
		{
		}
	}
	[Token(Token = "0x200019B")]
	[AttributeAttribute(Name = "CoreScriptOrder", RVA = "0xE21940", Offset = "0xE21940")]
	public class LevelSettings : MonoBehaviour
	{
		[Token(Token = "0x200019C")]
		public enum DistanceType
		{
			[Token(Token = "0x4000BCE")]
			Local,
			[Token(Token = "0x4000BCF")]
			World
		}

		[Token(Token = "0x200019D")]
		public enum RepeatToUseItem
		{
			[Token(Token = "0x4000BD1")]
			All,
			[Token(Token = "0x4000BD2")]
			Final
		}

		[Token(Token = "0x200019E")]
		public enum WaveSpawnerUseMode
		{
			[Token(Token = "0x4000BD4")]
			AllAbove,
			[Token(Token = "0x4000BD5")]
			RandomSubset
		}

		[Token(Token = "0x200019F")]
		public enum LevelLoopMode
		{
			[Token(Token = "0x4000BD7")]
			Win,
			[Token(Token = "0x4000BD8")]
			RepeatAllLevelsFromBeginning
		}

		[Token(Token = "0x20001A0")]
		public enum EventReceiveMode
		{
			[Token(Token = "0x4000BDA")]
			Always,
			[Token(Token = "0x4000BDB")]
			WhenDistanceLessThan,
			[Token(Token = "0x4000BDC")]
			WhenDistanceMoreThan,
			[Token(Token = "0x4000BDD")]
			Never,
			[Token(Token = "0x4000BDE")]
			OnSameGameObject,
			[Token(Token = "0x4000BDF")]
			OnChildGameObject,
			[Token(Token = "0x4000BE0")]
			OnParentGameObject,
			[Token(Token = "0x4000BE1")]
			OnSameOrChildGameObject,
			[Token(Token = "0x4000BE2")]
			OnSameOrParentGameObject
		}

		[Token(Token = "0x20001A1")]
		public enum EventReceiveFilter
		{
			[Token(Token = "0x4000BE4")]
			All,
			[Token(Token = "0x4000BE5")]
			Closest,
			[Token(Token = "0x4000BE6")]
			Random
		}

		[Token(Token = "0x20001A2")]
		public enum WaveOrder
		{
			[Token(Token = "0x4000BE8")]
			SpecifiedOrder,
			[Token(Token = "0x4000BE9")]
			RandomOrder
		}

		[Token(Token = "0x20001A3")]
		public enum WaveRestartBehavior
		{
			[Token(Token = "0x4000BEB")]
			LeaveSpawned,
			[Token(Token = "0x4000BEC")]
			DestroySpawned,
			[Token(Token = "0x4000BED")]
			DespawnSpawned
		}

		[Token(Token = "0x20001A4")]
		public enum VariableSource
		{
			[Token(Token = "0x4000BEF")]
			Variable,
			[Token(Token = "0x4000BF0")]
			Value
		}

		[Token(Token = "0x20001A5")]
		public enum WaveMusicMode
		{
			[Token(Token = "0x4000BF2")]
			KeepPreviousMusic,
			[Token(Token = "0x4000BF3")]
			PlayNew,
			[Token(Token = "0x4000BF4")]
			Silence
		}

		[Token(Token = "0x20001A6")]
		public enum ActiveItemMode
		{
			[Token(Token = "0x4000BF6")]
			Always,
			[Token(Token = "0x4000BF7")]
			Never,
			[Token(Token = "0x4000BF8")]
			IfWorldVariableInRange,
			[Token(Token = "0x4000BF9")]
			IfWorldVariableOutsideRange
		}

		[Token(Token = "0x20001A7")]
		public enum SkipWaveMode
		{
			[Token(Token = "0x4000BFB")]
			None,
			[Token(Token = "0x4000BFC")]
			Always,
			[Token(Token = "0x4000BFD")]
			IfWorldVariableValueAbove,
			[Token(Token = "0x4000BFE")]
			IfWorldVariableValueBelow
		}

		[Token(Token = "0x20001A8")]
		public enum WaveType
		{
			[Token(Token = "0x4000C00")]
			Timed,
			[Token(Token = "0x4000C01")]
			Elimination
		}

		[Token(Token = "0x20001A9")]
		public enum SpawnerType
		{
			[Token(Token = "0x4000C03")]
			Green,
			[Token(Token = "0x4000C04")]
			Red
		}

		[Token(Token = "0x20001AA")]
		public struct RespawnTimer
		{
			[Token(Token = "0x4000C05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float TimeToRespawn;

			[Token(Token = "0x4000C06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Transform PrefabToRespawn;

			[Token(Token = "0x4000C07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 Position;

			[Token(Token = "0x4000C08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool HasRespawnCustomEvents;

			[Token(Token = "0x6000B53")]
			[Address(RVA = "0x125AF94", Offset = "0x125AF94", VA = "0x125AF94")]
			public RespawnTimer(float timeToWait, Transform prefab, Vector3 position, bool hasRespawnCustomEvents)
			{
			}
		}

		[Token(Token = "0x20001AB")]
		public struct CustomEventCandidate
		{
			[Token(Token = "0x4000C09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float DistanceAway;

			[Token(Token = "0x4000C0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public ICgkEventReceiver Receiver;

			[Token(Token = "0x4000C0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform Trans;

			[Token(Token = "0x4000C0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int RandomId;

			[Token(Token = "0x6000B54")]
			[Address(RVA = "0x125E450", Offset = "0x125E450", VA = "0x125E450")]
			public CustomEventCandidate(float distance, ICgkEventReceiver rec, Transform trans, int randomId)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE21954", Offset = "0xE21954")]
		private sealed class <>c
		{
			[Token(Token = "0x4000C0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000C0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<LevelWave> <>9__115_0;

			[Token(Token = "0x4000C0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Comparison<WaveSyncroPrefabSpawner> <>9__119_0;

			[Token(Token = "0x4000C10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Comparison<CustomEventCandidate> <>9__213_0;

			[Token(Token = "0x4000C11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Comparison<CustomEventCandidate> <>9__213_1;

			[Token(Token = "0x6000B56")]
			[Address(RVA = "0x125F2A8", Offset = "0x125F2A8", VA = "0x125F2A8")]
			public <>c()
			{
			}

			[Token(Token = "0x6000B57")]
			[Address(RVA = "0x125F2B0", Offset = "0x125F2B0", VA = "0x125F2B0")]
			internal int <CoUpdate>b__115_0(LevelWave x, LevelWave y)
			{
				return default(int);
			}

			[Token(Token = "0x6000B58")]
			[Address(RVA = "0x125F2DC", Offset = "0x125F2DC", VA = "0x125F2DC")]
			internal int <SpawnNewWave>b__119_0(WaveSyncroPrefabSpawner x, WaveSyncroPrefabSpawner y)
			{
				return default(int);
			}

			[Token(Token = "0x6000B59")]
			[Address(RVA = "0x125F308", Offset = "0x125F308", VA = "0x125F308")]
			internal int <FireCustomEvent>b__213_0(CustomEventCandidate x, CustomEventCandidate y)
			{
				return default(int);
			}

			[Token(Token = "0x6000B5A")]
			[Address(RVA = "0x125F318", Offset = "0x125F318", VA = "0x125F318")]
			internal int <FireCustomEvent>b__213_1(CustomEventCandidate x, CustomEventCandidate y)
			{
				return default(int);
			}
		}

		[Token(Token = "0x20001AD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE21964", Offset = "0xE21964")]
		private sealed class <CoUpdate>d__115 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LevelSettings <>4__this;

			[Token(Token = "0x17000179")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000B5E")]
				[Address(RVA = "0x1260914", Offset = "0x1260914", VA = "0x1260914", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700017A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000B60")]
				[Address(RVA = "0x126097C", Offset = "0x126097C", VA = "0x126097C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000B5B")]
			[Address(RVA = "0x125809C", Offset = "0x125809C", VA = "0x125809C")]
			[DebuggerHidden]
			public <CoUpdate>d__115(int <>1__state)
			{
			}

			[Token(Token = "0x6000B5C")]
			[Address(RVA = "0x125F5C8", Offset = "0x125F5C8", VA = "0x125F5C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000B5D")]
			[Address(RVA = "0x125F5CC", Offset = "0x125F5CC", VA = "0x125F5CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000B5F")]
			[Address(RVA = "0x126091C", Offset = "0x126091C", VA = "0x126091C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20001AE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE21974", Offset = "0xE21974")]
		private sealed class <>c__DisplayClass128_0
		{
			[Token(Token = "0x4000C15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TriggeredSpawnerV2 spawner;

			[Token(Token = "0x4000C16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public TriggeredSpawner.EventType eType;

			[Token(Token = "0x4000C17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TriggeredWaveSpecifics wave;

			[Token(Token = "0x6000B61")]
			[Address(RVA = "0x125A324", Offset = "0x125A324", VA = "0x125A324")]
			public <>c__DisplayClass128_0()
			{
			}

			[Token(Token = "0x6000B62")]
			[Address(RVA = "0x125F32C", Offset = "0x125F32C", VA = "0x125F32C")]
			internal bool <TriggeredSpawnerWaveEliminated>b__0(TrigSpawnerWaveWaiter waiter)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20001AF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE21984", Offset = "0xE21984")]
		private sealed class <>c__DisplayClass214_0
		{
			[Token(Token = "0x4000C18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string customEventName;

			[Token(Token = "0x6000B63")]
			[Address(RVA = "0x125E49C", Offset = "0x125E49C", VA = "0x125E49C")]
			public <>c__DisplayClass214_0()
			{
			}

			[Token(Token = "0x6000B64")]
			[Address(RVA = "0x125F404", Offset = "0x125F404", VA = "0x125F404")]
			internal bool <GetCustomEventByName>b__0(CgkCustomEvent obj)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20001B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE21994", Offset = "0xE21994")]
		private sealed class <>c__DisplayClass216_0
		{
			[Token(Token = "0x4000C19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string eventName;

			[Token(Token = "0x6000B65")]
			[Address(RVA = "0x125E4A4", Offset = "0x125E4A4", VA = "0x125E4A4")]
			public <>c__DisplayClass216_0()
			{
			}

			[Token(Token = "0x6000B66")]
			[Address(RVA = "0x125F428", Offset = "0x125F428", VA = "0x125F428")]
			internal bool <GetChildReceivers>b__0(ICgkEventReceiver rec)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20001B1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE219A4", Offset = "0xE219A4")]
		private sealed class <>c__DisplayClass217_0
		{
			[Token(Token = "0x4000C1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string eventName;

			[Token(Token = "0x6000B67")]
			[Address(RVA = "0x125E740", Offset = "0x125E740", VA = "0x125E740")]
			public <>c__DisplayClass217_0()
			{
			}

			[Token(Token = "0x6000B68")]
			[Address(RVA = "0x125F4F8", Offset = "0x125F4F8", VA = "0x125F4F8")]
			internal bool <GetParentReceivers>b__0(ICgkEventReceiver rec)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000B72")]
		public const int DefaultWaveDuration = 5;

		[Token(Token = "0x4000B73")]
		public const string DynamicEventName = "[Type In]";

		[Token(Token = "0x4000B74")]
		public const string NoEventName = "[None]";

		[Token(Token = "0x4000B75")]
		public const string EmptyValue = "[Empty]";

		[Token(Token = "0x4000B76")]
		public const string NoCategory = "[Uncategorized]";

		[Token(Token = "0x4000B77")]
		public const string KillerPoolingContainerTransName = "PoolBoss";

		[Token(Token = "0x4000B78")]
		public const string PrefabPoolsContainerTransName = "PrefabPools";

		[Token(Token = "0x4000B79")]
		public const string SpawnerContainerTransName = "Spawners";

		[Token(Token = "0x4000B7A")]
		public const string WorldVariablesContainerTransName = "WorldVariables";

		[Token(Token = "0x4000B7B")]
		public const string DropDownNoneOption = "-None-";

		[Token(Token = "0x4000B7C")]
		public const string RevertLevelSettingsAlert = "Please revert your LevelSettings prefab.";

		[Token(Token = "0x4000B7D")]
		public const string NoSpawnContainerAlert = "You have no 'Spawners' prefab under LevelSettings. Please revert your LevelSettings prefab.";

		[Token(Token = "0x4000B7E")]
		public const string NoPrefabPoolsContainerAlert = "You have no 'PrefabPools' prefab under LevelSettings. Please revert your LevelSettings prefab.";

		[Token(Token = "0x4000B7F")]
		public const string NoWorldVariablesContainerAlert = "You have no 'WorldVariables' prefab under LevelSettings. Please revert your LevelSettings prefab.";

		[Token(Token = "0x4000B80")]
		private const float WaveCheckInterval = 0.1f;

		[Token(Token = "0x4000B81")]
		private const int MaxComponents = 20;

		[Token(Token = "0x4000B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool useMusicSettings;

		[Token(Token = "0x4000B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool showLevelSettings;

		[Token(Token = "0x4000B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool showCustomEvents;

		[Token(Token = "0x4000B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool gameStatsExpanded;

		[Token(Token = "0x4000B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string newEventName;

		[Token(Token = "0x4000B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LevelSettingsListener listener;

		[Token(Token = "0x4000B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform RedSpawnerTrans;

		[Token(Token = "0x4000B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform GreenSpawnerTrans;

		[Token(Token = "0x4000B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform PrefabPoolTrans;

		[Token(Token = "0x4000B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string newSpawnerName;

		[Token(Token = "0x4000B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool newPrefabPoolExpanded;

		[Token(Token = "0x4000B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string newPrefabPoolName;

		[Token(Token = "0x4000B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public SpawnerType newSpawnerType;

		[Token(Token = "0x4000B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public LevelWaveMusicSettings gameOverMusicSettings;

		[Token(Token = "0x4000B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool spawnersExpanded;

		[Token(Token = "0x4000B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		public bool createSpawnerExpanded;

		[Token(Token = "0x4000B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		public bool createPrefabPoolsExpanded;

		[Token(Token = "0x4000B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x73")]
		public bool killerPoolingExpanded;

		[Token(Token = "0x4000B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public bool disableSyncroSpawners;

		[Token(Token = "0x4000B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
		public bool startFirstWaveImmediately;

		[Token(Token = "0x4000B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public WaveRestartBehavior waveRestartMode;

		[Token(Token = "0x4000B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public bool enableWaveWarp;

		[Token(Token = "0x4000B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public KillerInt startLevelNumber;

		[Token(Token = "0x4000B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public KillerInt startWaveNumber;

		[Token(Token = "0x4000B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool persistBetweenScenes;

		[Token(Token = "0x4000B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		public bool isLoggingOn;

		[Token(Token = "0x4000B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public List<LevelSpecifics> LevelTimes;

		[Token(Token = "0x4000B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public bool useWaves;

		[Token(Token = "0x4000B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		public bool showCustomWaveClasses;

		[Token(Token = "0x4000B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public List<string> customWaveClasses;

		[Token(Token = "0x4000BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public LevelLoopMode repeatLevelMode;

		[Token(Token = "0x4000BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public bool useWaveNameFilter;

		[Token(Token = "0x4000BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public string waveNameFilterText;

		[Token(Token = "0x4000BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public List<CgkCustomEvent> customEvents;

		[Token(Token = "0x4000BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public List<CGKCustomEventCategory> customEventCategories;

		[Token(Token = "0x4000BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public string newCustomEventCategoryName;

		[Token(Token = "0x4000BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public string addToCustomEventCategoryName;

		[Token(Token = "0x4000BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public bool initializationSettingsExpanded;

		[Token(Token = "0x4000BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public List<CGKCustomEventToFire> initializationCustomEvents;

		[Token(Token = "0x4000BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public bool waveDurationsCopied;

		[Token(Token = "0x4000BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly List<string> IllegalVariableNames;

		[Token(Token = "0x4000BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static LevelSettings _lsInstance;

		[Token(Token = "0x4000BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Dictionary<int, List<LevelWave>> _waveSettingsByLevel;

		[Token(Token = "0x4000BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static int _currentLevel;

		[Token(Token = "0x4000BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static int _currentLevelWave;

		[Token(Token = "0x4000BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static int _displayCurrentLevel;

		[Token(Token = "0x4000BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private static int _displayCurrentWave;

		[Token(Token = "0x4000BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static bool _gameIsOver;

		[Token(Token = "0x4000BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private static bool _hasPlayerWon;

		[Token(Token = "0x4000BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		private static bool _wavesArePaused;

		[Token(Token = "0x4000BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private static float _lastWavePauseTime;

		[Token(Token = "0x4000BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static float _wavePausedTime;

		[Token(Token = "0x4000BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static LevelWave _previousWave;

		[Token(Token = "0x4000BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly List<TrigSpawnerWaveWaiter> TriggeredWavesToAwait;

		[Token(Token = "0x4000BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static readonly Dictionary<int, WaveSyncroPrefabSpawner> EliminationSpawnersUnkilled;

		[Token(Token = "0x4000BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static bool _skippingWaveForRestart;

		[Token(Token = "0x4000BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private static bool _skipCurrentWave;

		[Token(Token = "0x4000BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static readonly List<Transform> SpawnedItemsRemaining;

		[Token(Token = "0x4000BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private static int _waveTimeRemaining;

		[Token(Token = "0x4000BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private static readonly Dictionary<string, float> RecentErrorsByTime;

		[Token(Token = "0x4000BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private static readonly List<RespawnTimer> PrefabsToRespawn;

		[Token(Token = "0x4000BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private static readonly Dictionary<int, object> CustomEventParams;

		[Token(Token = "0x4000BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private static readonly Dictionary<int, Transform> CustomEventParamSenders;

		[Token(Token = "0x4000BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private static readonly List<CustomEventCandidate> ValidReceivers;

		[Token(Token = "0x4000BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private static readonly Dictionary<string, Dictionary<ICgkEventReceiver, Transform>> ReceiversByEventName;

		[Token(Token = "0x4000BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private static Transform _trans;

		[Token(Token = "0x4000BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private readonly List<WaveSyncroPrefabSpawner> _syncroSpawners;

		[Token(Token = "0x4000BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private bool _initCustomEventsFired;

		[Token(Token = "0x4000BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
		private bool _isValid;

		[Token(Token = "0x4000BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private float _lastWaveChangeTime;

		[Token(Token = "0x4000BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private bool _hasFirstWaveBeenStarted;

		[Token(Token = "0x4000BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		public int _frames;

		[Token(Token = "0x4000BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public static readonly YieldInstruction EndOfFrameDelay;

		[Token(Token = "0x4000BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private readonly YieldInstruction _loopDelay;

		[Token(Token = "0x4000BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2ACEC", Offset = "0xE2ACEC")]
		private static bool <AppIsShuttingDown>k__BackingField;

		[Token(Token = "0x17000157")]
		public static LevelSettings Instance
		{
			[Token(Token = "0x6000B09")]
			[Address(RVA = "0x124B9A0", Offset = "0x124B9A0", VA = "0x124B9A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B0A")]
			[Address(RVA = "0x12596D4", Offset = "0x12596D4", VA = "0x12596D4")]
			set
			{
			}
		}

		[Token(Token = "0x17000158")]
		public static bool AppIsShuttingDown
		{
			[Token(Token = "0x6000B1E")]
			[Address(RVA = "0x125B410", Offset = "0x125B410", VA = "0x125B410")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2ED10", Offset = "0xE2ED10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B1F")]
			[Address(RVA = "0x125B478", Offset = "0x125B478", VA = "0x125B478")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2ED20", Offset = "0xE2ED20")]
			set
			{
			}
		}

		[Token(Token = "0x17000159")]
		public static LevelWave ActiveWaveInfo
		{
			[Token(Token = "0x6000B20")]
			[Address(RVA = "0x12584A8", Offset = "0x12584A8", VA = "0x12584A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015A")]
		public static int CurrentDisplayLevel
		{
			[Token(Token = "0x6000B21")]
			[Address(RVA = "0x125B338", Offset = "0x125B338", VA = "0x125B338")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700015B")]
		public static int CurrentDisplayWave
		{
			[Token(Token = "0x6000B22")]
			[Address(RVA = "0x125B3A4", Offset = "0x125B3A4", VA = "0x125B3A4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700015C")]
		public static int CurrentLevel
		{
			[Token(Token = "0x6000B23")]
			[Address(RVA = "0x125B4E8", Offset = "0x125B4E8", VA = "0x125B4E8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700015D")]
		public static int CurrentLevelWave
		{
			[Token(Token = "0x6000B24")]
			[Address(RVA = "0x125B550", Offset = "0x125B550", VA = "0x125B550")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700015E")]
		public int LevelNumber
		{
			[Token(Token = "0x6000B25")]
			[Address(RVA = "0x125B5B8", Offset = "0x125B5B8", VA = "0x125B5B8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700015F")]
		public int WaveNumber
		{
			[Token(Token = "0x6000B26")]
			[Address(RVA = "0x125B65C", Offset = "0x125B65C", VA = "0x125B65C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000160")]
		public static LevelWave CurrentWaveInfo
		{
			[Token(Token = "0x6000B27")]
			[Address(RVA = "0x1258F2C", Offset = "0x1258F2C", VA = "0x1258F2C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000161")]
		public static List<Transform> GetAllPrefabPools
		{
			[Token(Token = "0x6000B28")]
			[Address(RVA = "0x125B7F4", Offset = "0x125B7F4", VA = "0x125B7F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000162")]
		public static List<Transform> GetAllSpawners
		{
			[Token(Token = "0x6000B29")]
			[Address(RVA = "0x1256E04", Offset = "0x1256E04", VA = "0x1256E04")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000163")]
		public static List<WaveSyncroPrefabSpawner> GetAllSpawnerScripts
		{
			[Token(Token = "0x6000B2A")]
			[Address(RVA = "0x125B958", Offset = "0x125B958", VA = "0x125B958")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000164")]
		public static List<Transform> GetAllWorldVariables
		{
			[Token(Token = "0x6000B2B")]
			[Address(RVA = "0x125BAFC", Offset = "0x125BAFC", VA = "0x125BAFC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000165")]
		public static bool IsGameOver
		{
			[Token(Token = "0x6000B2C")]
			[Address(RVA = "0x125BD34", Offset = "0x125BD34", VA = "0x125BD34")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B2D")]
			[Address(RVA = "0x124C984", Offset = "0x124C984", VA = "0x124C984")]
			set
			{
			}
		}

		[Token(Token = "0x17000166")]
		public static bool HasNextWave
		{
			[Token(Token = "0x6000B2E")]
			[Address(RVA = "0x125BD9C", Offset = "0x125BD9C", VA = "0x125BD9C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000167")]
		public static bool HasPlayerWon
		{
			[Token(Token = "0x6000B2F")]
			[Address(RVA = "0x125BE70", Offset = "0x125BE70", VA = "0x125BE70")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B30")]
			[Address(RVA = "0x12595D4", Offset = "0x12595D4", VA = "0x12595D4")]
			set
			{
			}
		}

		[Token(Token = "0x17000168")]
		public static bool IsLoggingOn
		{
			[Token(Token = "0x6000B31")]
			[Address(RVA = "0x1259500", Offset = "0x1259500", VA = "0x1259500")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000169")]
		public static int LastLevel
		{
			[Token(Token = "0x6000B32")]
			[Address(RVA = "0x125BED8", Offset = "0x125BED8", VA = "0x125BED8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700016A")]
		public static LevelSettingsListener Listener
		{
			[Token(Token = "0x6000B33")]
			[Address(RVA = "0x125B190", Offset = "0x125B190", VA = "0x125B190")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016B")]
		public static LevelWave PreviousWaveInfo
		{
			[Token(Token = "0x6000B34")]
			[Address(RVA = "0x125BF54", Offset = "0x125BF54", VA = "0x125BF54")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016C")]
		public static List<WaveSyncroPrefabSpawner> SyncroSpawners
		{
			[Token(Token = "0x6000B35")]
			[Address(RVA = "0x125BFBC", Offset = "0x125BFBC", VA = "0x125BFBC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016D")]
		public static WaveSyncroPrefabSpawner RandomSyncroSpawner
		{
			[Token(Token = "0x6000B36")]
			[Address(RVA = "0x125C028", Offset = "0x125C028", VA = "0x125C028")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016E")]
		public static int TimeRemainingInCurrentWave
		{
			[Token(Token = "0x6000B37")]
			[Address(RVA = "0x125C0D8", Offset = "0x125C0D8", VA = "0x125C0D8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000B38")]
			[Address(RVA = "0x125901C", Offset = "0x125901C", VA = "0x125901C")]
			set
			{
			}
		}

		[Token(Token = "0x1700016F")]
		public static List<LevelWave> WaveLengths
		{
			[Token(Token = "0x6000B39")]
			[Address(RVA = "0x125B700", Offset = "0x125B700", VA = "0x125B700")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000170")]
		public static bool WavesArePaused
		{
			[Token(Token = "0x6000B3A")]
			[Address(RVA = "0x125C174", Offset = "0x125C174", VA = "0x125C174")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000171")]
		public static int EliminationSpawnersRemaining
		{
			[Token(Token = "0x6000B3B")]
			[Address(RVA = "0x125C1DC", Offset = "0x125C1DC", VA = "0x125C1DC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000172")]
		private static Transform GetPoolsHolder
		{
			[Token(Token = "0x6000B3C")]
			[Address(RVA = "0x125A7AC", Offset = "0x125A7AC", VA = "0x125A7AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000173")]
		private static Transform GetWorldVariablesHolder
		{
			[Token(Token = "0x6000B3D")]
			[Address(RVA = "0x125BC60", Offset = "0x125BC60", VA = "0x125BC60")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000174")]
		public static int WaveRemainingItemCount
		{
			[Token(Token = "0x6000B3E")]
			[Address(RVA = "0x125B2C4", Offset = "0x125B2C4", VA = "0x125B2C4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000175")]
		public static Transform WorldVariablePanel
		{
			[Token(Token = "0x6000B4D")]
			[Address(RVA = "0x125E850", Offset = "0x125E850", VA = "0x125E850")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000176")]
		public static Transform PrefabPoolsPanel
		{
			[Token(Token = "0x6000B4E")]
			[Address(RVA = "0x125E8D4", Offset = "0x125E8D4", VA = "0x125E8D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000177")]
		public static Transform PoolBossPanel
		{
			[Token(Token = "0x6000B4F")]
			[Address(RVA = "0x125E958", Offset = "0x125E958", VA = "0x125E958")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000178")]
		public List<string> CustomEventNames
		{
			[Token(Token = "0x6000B50")]
			[Address(RVA = "0x125E9DC", Offset = "0x125E9DC", VA = "0x125E9DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AFA")]
		[Address(RVA = "0x1255ED0", Offset = "0x1255ED0", VA = "0x1255ED0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000AFB")]
		[Address(RVA = "0x1256F8C", Offset = "0x1256F8C", VA = "0x1256F8C")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6000AFC")]
		[Address(RVA = "0x1257038", Offset = "0x1257038", VA = "0x1257038")]
		private void OnApplicationPause(bool paused)
		{
		}

		[Token(Token = "0x6000AFD")]
		[Address(RVA = "0x1257048", Offset = "0x1257048", VA = "0x1257048")]
		private static void LevelWasLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x6000AFE")]
		[Address(RVA = "0x1257050", Offset = "0x1257050", VA = "0x1257050")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000AFF")]
		[Address(RVA = "0x1257058", Offset = "0x1257058", VA = "0x1257058")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B00")]
		[Address(RVA = "0x1257108", Offset = "0x1257108", VA = "0x1257108")]
		private bool CheckForValidVariables()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B01")]
		[Address(RVA = "0x1257998", Offset = "0x1257998", VA = "0x1257998")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE2ECAC", Offset = "0xE2ECAC")]
		private IEnumerator CoUpdate()
		{
			return null;
		}

		[Token(Token = "0x6000B02")]
		[Address(RVA = "0x1257A14", Offset = "0x1257A14", VA = "0x1257A14")]
		private void CheckWaveCompletionVars(LevelWave wave, int i, int w)
		{
		}

		[Token(Token = "0x6000B03")]
		[Address(RVA = "0x12580C8", Offset = "0x12580C8", VA = "0x12580C8")]
		private void EndCurrentWaveNormally()
		{
		}

		[Token(Token = "0x6000B04")]
		[Address(RVA = "0x125864C", Offset = "0x125864C", VA = "0x125864C")]
		private static bool SkipWaveOrNot(LevelWave waveInfo, bool valueAbove)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B05")]
		[Address(RVA = "0x1258768", Offset = "0x1258768", VA = "0x1258768")]
		private void SpawnNewWave(LevelWave waveInfo, bool isRestartWave)
		{
		}

		[Token(Token = "0x6000B06")]
		[Address(RVA = "0x1258DF8", Offset = "0x1258DF8", VA = "0x1258DF8")]
		private void AddTriggeredSpawnerAwaitersIfAny(LevelWave wave)
		{
		}

		[Token(Token = "0x6000B07")]
		[Address(RVA = "0x1259134", Offset = "0x1259134", VA = "0x1259134")]
		private bool SpawnOrSkipNewWave(LevelWave waveInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B08")]
		[Address(RVA = "0x125944C", Offset = "0x125944C", VA = "0x125944C")]
		private static void Win()
		{
		}

		[Token(Token = "0x6000B0B")]
		[Address(RVA = "0x1259740", Offset = "0x1259740", VA = "0x1259740")]
		public static void AddWaveSpawnedItem(Transform spawnedTrans)
		{
		}

		[Token(Token = "0x6000B0C")]
		[Address(RVA = "0x1259814", Offset = "0x1259814", VA = "0x1259814")]
		public static void EliminationSpawnerCompleted(int instanceId, Transform lastPrefabKilled)
		{
		}

		[Token(Token = "0x6000B0D")]
		[Address(RVA = "0x125A194", Offset = "0x125A194", VA = "0x125A194")]
		public static void TriggeredSpawnerWaveEliminated(TriggeredSpawner.EventType eType, TriggeredSpawnerV2 spawner, TriggeredWaveSpecifics wave)
		{
		}

		[Token(Token = "0x6000B0E")]
		[Address(RVA = "0x125A32C", Offset = "0x125A32C", VA = "0x125A32C")]
		public static void ContinueGame()
		{
		}

		[Token(Token = "0x6000B0F")]
		[Address(RVA = "0x125A428", Offset = "0x125A428", VA = "0x125A428")]
		public static void RestartGame()
		{
		}

		[Token(Token = "0x6000B10")]
		[Address(RVA = "0x125A740", Offset = "0x125A740", VA = "0x125A740")]
		public static void EndWave()
		{
		}

		[Token(Token = "0x6000B11")]
		[Address(RVA = "0x125A5B0", Offset = "0x125A5B0", VA = "0x125A5B0")]
		public static void GotoWave(int levelNum, int waveNum)
		{
		}

		[Token(Token = "0x6000B12")]
		[Address(RVA = "0x1254264", Offset = "0x1254264", VA = "0x1254264")]
		public static WavePrefabPool GetFirstMatchingPrefabPool(string poolName)
		{
			return null;
		}

		[Token(Token = "0x6000B13")]
		[Address(RVA = "0x125A880", Offset = "0x125A880", VA = "0x125A880")]
		public static List<string> GetSortedPrefabPoolNames()
		{
			return null;
		}

		[Token(Token = "0x6000B14")]
		[Address(RVA = "0x124C4C8", Offset = "0x124C4C8", VA = "0x124C4C8")]
		public static void LogIfNew(string message, bool logAsWarning = false)
		{
		}

		[Token(Token = "0x6000B15")]
		[Address(RVA = "0x1258560", Offset = "0x1258560", VA = "0x1258560")]
		public static void PauseWave()
		{
		}

		[Token(Token = "0x6000B16")]
		[Address(RVA = "0x125A9FC", Offset = "0x125A9FC", VA = "0x125A9FC")]
		public static void RestartCurrentWave()
		{
		}

		[Token(Token = "0x6000B17")]
		[Address(RVA = "0x125AEC0", Offset = "0x125AEC0", VA = "0x125AEC0")]
		public static void RemoveWaveSpawnedItem(Transform spawnedTrans)
		{
		}

		[Token(Token = "0x6000B18")]
		[Address(RVA = "0x1252970", Offset = "0x1252970", VA = "0x1252970")]
		public static void TrackTimedRespawn(float delay, Transform prefabTrans, Vector3 pos, bool hasRespawnCustomEvents)
		{
		}

		[Token(Token = "0x6000B19")]
		[Address(RVA = "0x125ADD0", Offset = "0x125ADD0", VA = "0x125ADD0")]
		public static void UnpauseWave()
		{
		}

		[Token(Token = "0x6000B1A")]
		[Address(RVA = "0x125B010", Offset = "0x125B010", VA = "0x125B010")]
		public static void WarpToLevel(int levelNumber, int waveNumber)
		{
		}

		[Token(Token = "0x6000B1B")]
		[Address(RVA = "0x125B0BC", Offset = "0x125B0BC", VA = "0x125B0BC")]
		private static void PlayMusicIfSet(LevelWaveMusicSettings musicSpec)
		{
		}

		[Token(Token = "0x6000B1C")]
		[Address(RVA = "0x1258D14", Offset = "0x1258D14", VA = "0x1258D14")]
		private static void WaveRemainingItemsChanged()
		{
		}

		[Token(Token = "0x6000B1D")]
		[Address(RVA = "0x1259998", Offset = "0x1259998", VA = "0x1259998")]
		private static void SpawnBonusPrefabIfAny(Vector3 spawnPosition)
		{
		}

		[Token(Token = "0x6000B3F")]
		[Address(RVA = "0x125C258", Offset = "0x125C258", VA = "0x125C258")]
		public static void AddCustomEventReceiver(ICgkEventReceiver receiver, Transform receiverTrans)
		{
		}

		[Token(Token = "0x6000B40")]
		[Address(RVA = "0x125C570", Offset = "0x125C570", VA = "0x125C570")]
		public static void RemoveCustomEventReceiver(ICgkEventReceiver receiver)
		{
		}

		[Token(Token = "0x6000B41")]
		[Address(RVA = "0x125C984", Offset = "0x125C984", VA = "0x125C984")]
		public static List<Transform> ReceiversForEvent(string customEventName)
		{
			return null;
		}

		[Token(Token = "0x6000B42")]
		[Address(RVA = "0x124BB38", Offset = "0x124BB38", VA = "0x124BB38")]
		public static void FireCustomEventIfValid(string anEvent, Transform eventOrigin)
		{
		}

		[Token(Token = "0x6000B43")]
		[Address(RVA = "0x125DCD8", Offset = "0x125DCD8", VA = "0x125DCD8")]
		public static void FireCustomEventWithParam(string customEventName, Transform originObject, object eventParam, bool logDupe = true)
		{
		}

		[Token(Token = "0x6000B44")]
		[Address(RVA = "0x125CC10", Offset = "0x125CC10", VA = "0x125CC10")]
		public static void FireCustomEvent(string customEventName, Transform originObject, bool logDupe = true)
		{
		}

		[Token(Token = "0x6000B45")]
		[Address(RVA = "0x125E098", Offset = "0x125E098", VA = "0x125E098")]
		private static CgkCustomEvent GetCustomEventByName(string customEventName)
		{
			return null;
		}

		[Token(Token = "0x6000B46")]
		[Address(RVA = "0x125DFB8", Offset = "0x125DFB8", VA = "0x125DFB8")]
		public static bool CustomEventExists(string customEventName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B47")]
		[Address(RVA = "0x125E1B0", Offset = "0x125E1B0", VA = "0x125E1B0")]
		private static List<ICgkEventReceiver> GetChildReceivers(Transform origin, string eventName, bool includeSelf)
		{
			return null;
		}

		[Token(Token = "0x6000B48")]
		[Address(RVA = "0x125E300", Offset = "0x125E300", VA = "0x125E300")]
		private static List<ICgkEventReceiver> GetParentReceivers(Transform origin, string eventName, bool includeSelf)
		{
			return null;
		}

		[Token(Token = "0x6000B49")]
		[Address(RVA = "0x125E4AC", Offset = "0x125E4AC", VA = "0x125E4AC")]
		private static List<ICgkEventReceiver> FilterOutSelf(List<ICgkEventReceiver> sourceList, Transform origin)
		{
			return null;
		}

		[Token(Token = "0x6000B4A")]
		[Address(RVA = "0x125DF14", Offset = "0x125DF14", VA = "0x125DF14")]
		private static int GetCustomEventHash(string customEventName, Vector3 eventOrigin)
		{
			return default(int);
		}

		[Token(Token = "0x6000B4B")]
		public static T GetCustomEventParam<T>(string customEventName, Vector3 eventOrigin)
		{
			return (T)null;
		}

		[Token(Token = "0x6000B4C")]
		[Address(RVA = "0x125E748", Offset = "0x125E748", VA = "0x125E748")]
		public static Transform GetCustomEventParamSender(string customEventName, Vector3 eventOrigin)
		{
			return null;
		}

		[Token(Token = "0x6000B51")]
		[Address(RVA = "0x125EB08", Offset = "0x125EB08", VA = "0x125EB08")]
		public LevelSettings()
		{
		}
	}
	[Token(Token = "0x20001B2")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE219B4", Offset = "0xE219B4")]
	public class LevelSettingsListener : MonoBehaviour
	{
		[Token(Token = "0x4000C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string sourceTransName;

		[Token(Token = "0x6000B69")]
		[Address(RVA = "0x1260984", Offset = "0x1260984", VA = "0x1260984")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000B6A")]
		[Address(RVA = "0x1260A50", Offset = "0x1260A50", VA = "0x1260A50", Slot = "4")]
		public virtual void WaveItemsRemainingChanged(int waveItemsRemaining)
		{
		}

		[Token(Token = "0x6000B6B")]
		[Address(RVA = "0x1260A54", Offset = "0x1260A54", VA = "0x1260A54", Slot = "5")]
		public virtual void WaveTimeRemainingChanged(int secondsRemaining)
		{
		}

		[Token(Token = "0x6000B6C")]
		[Address(RVA = "0x1260A58", Offset = "0x1260A58", VA = "0x1260A58", Slot = "6")]
		public virtual void Win()
		{
		}

		[Token(Token = "0x6000B6D")]
		[Address(RVA = "0x1260A5C", Offset = "0x1260A5C", VA = "0x1260A5C", Slot = "7")]
		public virtual void Lose()
		{
		}

		[Token(Token = "0x6000B6E")]
		[Address(RVA = "0x1260A60", Offset = "0x1260A60", VA = "0x1260A60", Slot = "8")]
		public virtual void GameOver(bool hasWon)
		{
		}

		[Token(Token = "0x6000B6F")]
		[Address(RVA = "0x1260A64", Offset = "0x1260A64", VA = "0x1260A64", Slot = "9")]
		public virtual void LevelStarted(int levelNum)
		{
		}

		[Token(Token = "0x6000B70")]
		[Address(RVA = "0x1260A68", Offset = "0x1260A68", VA = "0x1260A68", Slot = "10")]
		public virtual void LevelEnded(int levelNum)
		{
		}

		[Token(Token = "0x6000B71")]
		[Address(RVA = "0x1260A6C", Offset = "0x1260A6C", VA = "0x1260A6C", Slot = "11")]
		public virtual void WaveStarted(LevelWave levelWaveInfo)
		{
		}

		[Token(Token = "0x6000B72")]
		[Address(RVA = "0x1260A70", Offset = "0x1260A70", VA = "0x1260A70", Slot = "12")]
		public virtual void WaveEnded(LevelWave levelWaveInfo)
		{
		}

		[Token(Token = "0x6000B73")]
		[Address(RVA = "0x1260A74", Offset = "0x1260A74", VA = "0x1260A74", Slot = "13")]
		public virtual void WaveRestarted(LevelWave levelWaveInf)
		{
		}

		[Token(Token = "0x6000B74")]
		[Address(RVA = "0x1260A78", Offset = "0x1260A78", VA = "0x1260A78", Slot = "14")]
		public virtual void WaveCompleteBonusesStart(List<WorldVariableModifier> bonusModifiers)
		{
		}

		[Token(Token = "0x6000B75")]
		[Address(RVA = "0x1260A7C", Offset = "0x1260A7C", VA = "0x1260A7C", Slot = "15")]
		public virtual void WaveEndedEarly(LevelWave levelWaveInfo)
		{
		}

		[Token(Token = "0x6000B76")]
		[Address(RVA = "0x1260A80", Offset = "0x1260A80", VA = "0x1260A80", Slot = "16")]
		public virtual void WaveSkipped(LevelWave levelWaveInfo)
		{
		}

		[Token(Token = "0x6000B77")]
		[Address(RVA = "0x1260A84", Offset = "0x1260A84", VA = "0x1260A84")]
		public LevelSettingsListener()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001B3")]
	public class LevelSpecifics
	{
		[Token(Token = "0x4000C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string levelName;

		[Token(Token = "0x4000C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LevelSettings.WaveOrder waveOrder;

		[Token(Token = "0x4000C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<LevelWave> WaveSettings;

		[Token(Token = "0x4000C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool isExpanded;

		[Token(Token = "0x6000B78")]
		[Address(RVA = "0x1260A8C", Offset = "0x1260A8C", VA = "0x1260A8C")]
		public LevelSpecifics()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001B4")]
	public class LevelWave
	{
		[Token(Token = "0x4000C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LevelSettings.WaveType waveType;

		[Token(Token = "0x4000C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public LevelSettings.SkipWaveMode skipWaveType;

		[Token(Token = "0x4000C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WorldVariableCollection skipWavePassCriteria;

		[Token(Token = "0x4000C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool pauseGlobalWavesWhenCompleted;

		[Token(Token = "0x4000C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string waveName;

		[Token(Token = "0x4000C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string waveClass;

		[Token(Token = "0x4000C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string waveDescription;

		[Token(Token = "0x4000C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public LevelWaveMusicSettings musicSettings;

		[Token(Token = "0x4000C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int WaveDuration;

		[Token(Token = "0x4000C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public KillerInt waveDurationFlex;

		[Token(Token = "0x4000C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool endEarlyIfAllDestroyed;

		[Token(Token = "0x4000C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		public bool waveBeatBonusesEnabled;

		[Token(Token = "0x4000C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		public bool useCompletionEvents;

		[Token(Token = "0x4000C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
		public bool useSpawnBonusPrefab;

		[Token(Token = "0x4000C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public WaveSpecifics.SpawnOrigin bonusPrefabSource;

		[Token(Token = "0x4000C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int bonusPrefabPoolIndex;

		[Token(Token = "0x4000C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string bonusPrefabPoolName;

		[Token(Token = "0x4000C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform bonusPrefabSpecific;

		[Token(Token = "0x4000C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public KillerInt bonusPrefabSpawnPercent;

		[Token(Token = "0x4000C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public KillerInt bonusPrefabQty;

		[Token(Token = "0x4000C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public string bonusPrefabCategoryName;

		[Token(Token = "0x4000C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public LevelSettings.WaveSpawnerUseMode spawnerUseMode;

		[Token(Token = "0x4000C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int spawnersToUseMin;

		[Token(Token = "0x4000C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int spawnersToUseMax;

		[Token(Token = "0x4000C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public bool isDummyWave;

		[Token(Token = "0x4000C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
		public bool useTriggeredSpawners;

		[Token(Token = "0x4000C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public List<TrigSpawnerWaveWaiter> trigSpawnerWavesToAwait;

		[Token(Token = "0x4000C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public List<CGKCustomEventToFire> completionCustomEvents;

		[Token(Token = "0x4000C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public WorldVariableCollection waveDefeatVariableModifiers;

		[Token(Token = "0x4000C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public bool isExpanded;

		[Token(Token = "0x4000C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public int sequencedWaveNumber;

		[Token(Token = "0x4000C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public int randomWaveNumber;

		[Token(Token = "0x6000B79")]
		[Address(RVA = "0x1256B90", Offset = "0x1256B90", VA = "0x1256B90")]
		public LevelWave()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001B5")]
	public class LevelWaveMusicSettings
	{
		[Token(Token = "0x4000C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LevelSettings.WaveMusicMode WaveMusicMode;

		[Token(Token = "0x4000C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip WaveMusic;

		[Token(Token = "0x4000C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float WaveMusicVolume;

		[Token(Token = "0x4000C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float FadeTime;

		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0x1256DE8", Offset = "0x1256DE8", VA = "0x1256DE8")]
		public LevelWaveMusicSettings()
		{
		}
	}
	[Token(Token = "0x20001B6")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE219EC", Offset = "0xE219EC")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE219EC", Offset = "0xE219EC")]
	public class WaveMusicChanger : MonoBehaviour
	{
		[Token(Token = "0x20001B7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE21A74", Offset = "0xE21A74")]
		private sealed class <CoUpdate>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x1700017B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000B88")]
				[Address(RVA = "0xEFE0B4", Offset = "0xEFE0B4", VA = "0xEFE0B4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700017C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000B8A")]
				[Address(RVA = "0xEFE11C", Offset = "0xEFE11C", VA = "0xEFE11C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000B85")]
			[Address(RVA = "0xEFD7FC", Offset = "0xEFD7FC", VA = "0xEFD7FC")]
			[DebuggerHidden]
			public <CoUpdate>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6000B86")]
			[Address(RVA = "0xEFDE7C", Offset = "0xEFDE7C", VA = "0xEFDE7C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000B87")]
			[Address(RVA = "0xEFDE80", Offset = "0xEFDE80", VA = "0xEFDE80", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000B89")]
			[Address(RVA = "0xEFE0BC", Offset = "0xEFE0BC", VA = "0xEFE0BC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WaveMusicChangerListener listener;

		[Token(Token = "0x4000C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static WaveMusicChangerListener _statListener;

		[Token(Token = "0x4000C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static AudioSource _statAudio;

		[Token(Token = "0x4000C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static bool _isValid;

		[Token(Token = "0x4000C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private static bool _isFading;

		[Token(Token = "0x4000C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static float _fadeStartTime;

		[Token(Token = "0x4000C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static float _fadeStartVolume;

		[Token(Token = "0x4000C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static float _fadeTotalTime;

		[Token(Token = "0x4000C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static float _lastVolume;

		[Token(Token = "0x4000C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static readonly YieldInstruction LoopDelay;

		[Token(Token = "0x6000B7B")]
		[Address(RVA = "0xEFD5E0", Offset = "0xEFD5E0", VA = "0xEFD5E0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0xEFD6FC", Offset = "0xEFD6FC", VA = "0xEFD6FC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B7D")]
		[Address(RVA = "0xEFD79C", Offset = "0xEFD79C", VA = "0xEFD79C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xE2ED80", Offset = "0xE2ED80")]
		private static IEnumerator CoUpdate()
		{
			return null;
		}

		[Token(Token = "0x6000B7E")]
		[Address(RVA = "0xEFD828", Offset = "0xEFD828", VA = "0xEFD828")]
		public static void WaveUp(LevelWaveMusicSettings newWave)
		{
		}

		[Token(Token = "0x6000B7F")]
		[Address(RVA = "0xEFD88C", Offset = "0xEFD88C", VA = "0xEFD88C")]
		private static void PlayMusic(LevelWaveMusicSettings musicSettings)
		{
		}

		[Token(Token = "0x6000B80")]
		[Address(RVA = "0xEFDB50", Offset = "0xEFDB50", VA = "0xEFDB50")]
		public static void PlayGameOverMusic(LevelWaveMusicSettings musicSettings)
		{
		}

		[Token(Token = "0x6000B81")]
		[Address(RVA = "0xEFDBB4", Offset = "0xEFDBB4", VA = "0xEFDBB4")]
		public static void MuteMusic()
		{
		}

		[Token(Token = "0x6000B82")]
		[Address(RVA = "0xEFDCD8", Offset = "0xEFDCD8", VA = "0xEFDCD8")]
		public static void UnmuteMusic()
		{
		}

		[Token(Token = "0x6000B83")]
		[Address(RVA = "0xEFDDFC", Offset = "0xEFDDFC", VA = "0xEFDDFC")]
		public WaveMusicChanger()
		{
		}
	}
	[Token(Token = "0x20001B8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE21A84", Offset = "0xE21A84")]
	public class WaveMusicChangerListener : MonoBehaviour
	{
		[Token(Token = "0x6000B8B")]
		[Address(RVA = "0xEFE124", Offset = "0xEFE124", VA = "0xEFE124")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000B8C")]
		[Address(RVA = "0xEFE1D4", Offset = "0xEFE1D4", VA = "0xEFE1D4", Slot = "4")]
		public virtual void MusicChanging(LevelWaveMusicSettings musicSettings)
		{
		}

		[Token(Token = "0x6000B8D")]
		[Address(RVA = "0xEFE1D8", Offset = "0xEFE1D8", VA = "0xEFE1D8")]
		public WaveMusicChangerListener()
		{
		}
	}
	[Token(Token = "0x20001B9")]
	public class PoolBoss : MonoBehaviour
	{
		[Token(Token = "0x20001BA")]
		public class PoolItemInstanceList
		{
			[Token(Token = "0x4000C6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool LogMessages;

			[Token(Token = "0x4000C6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			public bool AllowInstantiateMore;

			[Token(Token = "0x4000C6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int? ItemHardLimit;

			[Token(Token = "0x4000C6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool EnableNavMeshAgent;

			[Token(Token = "0x4000C70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform SourceTrans;

			[Token(Token = "0x4000C71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<Transform> SpawnedClones;

			[Token(Token = "0x4000C72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public List<Transform> DespawnedClones;

			[Token(Token = "0x4000C73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool AllowRecycle;

			[Token(Token = "0x4000C74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public string CategoryName;

			[Token(Token = "0x4000C75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public int Peak;

			[Token(Token = "0x4000C76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public float PeakTime;

			[Token(Token = "0x6000BC8")]
			[Address(RVA = "0x1175218", Offset = "0x1175218", VA = "0x1175218")]
			public PoolItemInstanceList(List<Transform> clones)
			{
			}
		}

		[Token(Token = "0x20001BB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE21ABC", Offset = "0xE21ABC")]
		private sealed class <>c__DisplayClass41_0
		{
			[Token(Token = "0x4000C77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PoolBossItem item;

			[Token(Token = "0x6000BC9")]
			[Address(RVA = "0x1175024", Offset = "0x1175024", VA = "0x1175024")]
			public <>c__DisplayClass41_0()
			{
			}

			[Token(Token = "0x6000BCA")]
			[Address(RVA = "0x117502C", Offset = "0x117502C", VA = "0x117502C")]
			internal bool <CreatePoolItemClones>b__0(PoolBossCategory x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20001BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE21ACC", Offset = "0xE21ACC")]
		private sealed class <>c__DisplayClass65_0
		{
			[Token(Token = "0x4000C78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PoolItemInstanceList item;

			[Token(Token = "0x6000BCB")]
			[Address(RVA = "0x1175058", Offset = "0x1175058", VA = "0x1175058")]
			public <>c__DisplayClass65_0()
			{
			}

			[Token(Token = "0x6000BCC")]
			[Address(RVA = "0x1175060", Offset = "0x1175060", VA = "0x1175060")]
			internal bool <DestroyPoolItem>b__0(PoolBossItem x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20001BD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE21ADC", Offset = "0xE21ADC")]
		private sealed class <>c__DisplayClass66_0
		{
			[Token(Token = "0x4000C79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PoolItemInstanceList item;

			[Token(Token = "0x6000BCD")]
			[Address(RVA = "0x1175138", Offset = "0x1175138", VA = "0x1175138")]
			public <>c__DisplayClass66_0()
			{
			}

			[Token(Token = "0x6000BCE")]
			[Address(RVA = "0x1175140", Offset = "0x1175140", VA = "0x1175140")]
			internal bool <DestroyCategoryPoolItems>b__0(PoolBossItem x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000C50")]
		public const string NoCategory = "[Uncategorized]";

		[Token(Token = "0x4000C51")]
		private const string SpawnedMessageName = "OnSpawned";

		[Token(Token = "0x4000C52")]
		private const string DespawnedMessageName = "OnDespawned";

		[Token(Token = "0x4000C53")]
		private const string NotInitError = "Pool Boss has not initialized (does so in Awake event and may take additional frames if you configured it that way) and is not ready to be used yet. Check that PoolBoss.IsReady returns true before calling other methods.";

		[Token(Token = "0x4000C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<PoolBossItem> poolItems;

		[Token(Token = "0x4000C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool logMessages;

		[Token(Token = "0x4000C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool useTextFilter;

		[Token(Token = "0x4000C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public bool showLegend;

		[Token(Token = "0x4000C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string textFilter;

		[Token(Token = "0x4000C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool autoAddMissingPoolItems;

		[Token(Token = "0x4000C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool allowDespawningInactive;

		[Token(Token = "0x4000C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string newCategoryName;

		[Token(Token = "0x4000C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string addToCategoryName;

		[Token(Token = "0x4000C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int framesForInit;

		[Token(Token = "0x4000C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public PoolBossListener listener;

		[Token(Token = "0x4000C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int _changes;

		[Token(Token = "0x4000C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<PoolBossCategory> _categories;

		[Token(Token = "0x4000C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Dictionary<string, PoolItemInstanceList> PoolItemsByName;

		[Token(Token = "0x4000C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Transform _trans;

		[Token(Token = "0x4000C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly List<PoolableInfo> _deadList;

		[Token(Token = "0x4000C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly Dictionary<PoolableInfo, object> _potentialInSceneObjects;

		[Token(Token = "0x4000C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static PoolBoss _instance;

		[Token(Token = "0x4000C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static int _initFrameStart;

		[Token(Token = "0x4000C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private static float _itemsToInitPerFrame;

		[Token(Token = "0x4000C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static int _lastFramInitContinued;

		[Token(Token = "0x4000C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int _itemsInited;

		[Token(Token = "0x4000C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private static bool _isReady;

		[Token(Token = "0x4000C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool IsPhotonNetworked;

		[Token(Token = "0x1700017D")]
		public static PoolBoss Instance
		{
			[Token(Token = "0x6000B8E")]
			[Address(RVA = "0x124FBAC", Offset = "0x124FBAC", VA = "0x124FBAC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017E")]
		public static int PrefabCount
		{
			[Token(Token = "0x6000BBD")]
			[Address(RVA = "0x1266F90", Offset = "0x1266F90", VA = "0x1266F90")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700017F")]
		public static bool IsServer
		{
			[Token(Token = "0x6000BC3")]
			[Address(RVA = "0x125ADC8", Offset = "0x125ADC8", VA = "0x125ADC8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000180")]
		public static bool IsReady
		{
			[Token(Token = "0x6000BC4")]
			[Address(RVA = "0x1267114", Offset = "0x1267114", VA = "0x1267114")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000181")]
		public static Transform Trans
		{
			[Token(Token = "0x6000BC5")]
			[Address(RVA = "0x126346C", Offset = "0x126346C", VA = "0x126346C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B8F")]
		[Address(RVA = "0x1261A0C", Offset = "0x1261A0C", VA = "0x1261A0C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B90")]
		[Address(RVA = "0x1261B90", Offset = "0x1261B90", VA = "0x1261B90")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B91")]
		[Address(RVA = "0x1261C24", Offset = "0x1261C24", VA = "0x1261C24")]
		private void RegisterInSceneObjects()
		{
		}

		[Token(Token = "0x6000B92")]
		[Address(RVA = "0x1261AA8", Offset = "0x1261AA8", VA = "0x1261AA8")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x6000B93")]
		[Address(RVA = "0x12620B0", Offset = "0x12620B0", VA = "0x12620B0")]
		private void ContinueInit()
		{
		}

		[Token(Token = "0x6000B94")]
		[Address(RVA = "0x1263058", Offset = "0x1263058", VA = "0x1263058")]
		public static void RegisterPotentialInScenePoolable(PoolableInfo poolable)
		{
		}

		[Token(Token = "0x6000B95")]
		[Address(RVA = "0x126312C", Offset = "0x126312C", VA = "0x126312C")]
		public static void UnregisterNonStartInScenePoolable(PoolableInfo poolable)
		{
		}

		[Token(Token = "0x6000B96")]
		[Address(RVA = "0x12631B0", Offset = "0x12631B0", VA = "0x12631B0")]
		private static Transform InstantiateForPool(Transform prefabTrans, int cloneNumber)
		{
			return null;
		}

		[Token(Token = "0x6000B97")]
		[Address(RVA = "0x12626F4", Offset = "0x12626F4", VA = "0x12626F4")]
		private static string CreateMissingPoolItem(Transform missingTrans, string itemName, bool isSpawn, bool enableNavMeshAgentOnSpawn = true)
		{
			return null;
		}

		[Token(Token = "0x6000B98")]
		[Address(RVA = "0x1263654", Offset = "0x1263654", VA = "0x1263654")]
		public static void CreateNewPoolItem(Transform itemTrans, int preloadInstances, bool canInstantiateMore, int hardLimit, bool logMsgs, string catName)
		{
		}

		[Token(Token = "0x6000B99")]
		[Address(RVA = "0x1262B10", Offset = "0x1262B10", VA = "0x1262B10")]
		private void CreatePoolItemClones(PoolBossItem item, bool isDuringAwake)
		{
		}

		[Token(Token = "0x6000B9A")]
		[Address(RVA = "0x12637C4", Offset = "0x12637C4", VA = "0x12637C4")]
		public static Transform SpawnOutsidePool(string itemName, Vector3 position, Quaternion rotation)
		{
			return null;
		}

		[Token(Token = "0x6000B9B")]
		[Address(RVA = "0x12618C0", Offset = "0x12618C0", VA = "0x12618C0")]
		public static Transform SpawnOutsidePool(Transform transToSpawn, Vector3 position, Quaternion rotation)
		{
			return null;
		}

		[Token(Token = "0x6000B9C")]
		[Address(RVA = "0x1263FE8", Offset = "0x1263FE8", VA = "0x1263FE8")]
		public static Transform SpawnInPool(string itemName, Vector3 position, Quaternion rotation)
		{
			return null;
		}

		[Token(Token = "0x6000B9D")]
		[Address(RVA = "0x1251DD8", Offset = "0x1251DD8", VA = "0x1251DD8")]
		public static Transform SpawnInPool(Transform transToSpawn, Vector3 position, Quaternion rotation)
		{
			return null;
		}

		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0x12640AC", Offset = "0x12640AC", VA = "0x12640AC")]
		public static Transform SpawnWithFollow(Transform transToSpawn, Vector3 position, Quaternion rotation, Transform followTarget)
		{
			return null;
		}

		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0x1264170", Offset = "0x1264170", VA = "0x1264170")]
		public static Transform NetworkSpawn(string itemName, Vector3 position, Quaternion rotation)
		{
			return null;
		}

		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0x12641E4", Offset = "0x12641E4", VA = "0x12641E4")]
		public static void NetworkDespawn(Transform transToDespawn)
		{
		}

		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0x1251F68", Offset = "0x1251F68", VA = "0x1251F68")]
		public static Transform Spawn(Transform transToSpawn, Vector3 position, Quaternion rotation, Transform parentTransform)
		{
			return null;
		}

		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0x1263884", Offset = "0x1263884", VA = "0x1263884")]
		public static Transform Spawn(string itemName, Vector3 position, Quaternion rotation, Transform parentTransform)
		{
			return null;
		}

		[Token(Token = "0x6000BA3")]
		[Address(RVA = "0x126357C", Offset = "0x126357C", VA = "0x126357C")]
		private static void SetParent(Transform trns, Transform parentTrans)
		{
		}

		[Token(Token = "0x6000BA4")]
		[Address(RVA = "0x1264320", Offset = "0x1264320", VA = "0x1264320")]
		public static int CategoryItemsDespawned(string category)
		{
			return default(int);
		}

		[Token(Token = "0x6000BA5")]
		[Address(RVA = "0x1264490", Offset = "0x1264490", VA = "0x1264490")]
		public static List<Transform> CategoryItemsDespawnedList(string category)
		{
			return null;
		}

		[Token(Token = "0x6000BA6")]
		[Address(RVA = "0x126463C", Offset = "0x126463C", VA = "0x126463C")]
		public static List<Transform> CategoryActiveItems(string category)
		{
			return null;
		}

		[Token(Token = "0x6000BA7")]
		[Address(RVA = "0x12647E8", Offset = "0x12647E8", VA = "0x12647E8")]
		public static int CategoryItemsSpawned(string category)
		{
			return default(int);
		}

		[Token(Token = "0x6000BA8")]
		[Address(RVA = "0x1251814", Offset = "0x1251814", VA = "0x1251814")]
		public static bool Despawn(Transform transToDespawn, bool keepParent = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BA9")]
		[Address(RVA = "0x1264AC4", Offset = "0x1264AC4", VA = "0x1264AC4")]
		public static void DamageAllPrefabs(int damagePoints)
		{
		}

		[Token(Token = "0x6000BAA")]
		[Address(RVA = "0x1264EF0", Offset = "0x1264EF0", VA = "0x1264EF0")]
		public static void DespawnAllPrefabs()
		{
		}

		[Token(Token = "0x6000BAB")]
		[Address(RVA = "0x1265298", Offset = "0x1265298", VA = "0x1265298")]
		public static void KillAllPrefabs()
		{
		}

		[Token(Token = "0x6000BAC")]
		[Address(RVA = "0x12656C4", Offset = "0x12656C4", VA = "0x12656C4")]
		public static void DespawnAllPrefabsInCategory(string category)
		{
		}

		[Token(Token = "0x6000BAD")]
		[Address(RVA = "0x1265834", Offset = "0x1265834", VA = "0x1265834")]
		public static void DamageAllPrefabsInCategory(string category, int damagePoints)
		{
		}

		[Token(Token = "0x6000BAE")]
		[Address(RVA = "0x12659B4", Offset = "0x12659B4", VA = "0x12659B4")]
		public static void KillAllPrefabsInCategory(string category)
		{
		}

		[Token(Token = "0x6000BAF")]
		[Address(RVA = "0x1264C1C", Offset = "0x1264C1C", VA = "0x1264C1C")]
		public static void DamageAllOfPrefab(Transform transToDespawn, int damagePoints)
		{
		}

		[Token(Token = "0x6000BB0")]
		[Address(RVA = "0x1265040", Offset = "0x1265040", VA = "0x1265040")]
		public static void DespawnAllOfPrefab(Transform transToDespawn)
		{
		}

		[Token(Token = "0x6000BB1")]
		[Address(RVA = "0x1265B24", Offset = "0x1265B24", VA = "0x1265B24")]
		public static void DestroyPoolItem(Transform transDeadItem)
		{
		}

		[Token(Token = "0x6000BB2")]
		[Address(RVA = "0x1265F58", Offset = "0x1265F58", VA = "0x1265F58")]
		public static void DestroyCategoryPoolItems(string categoryName)
		{
		}

		[Token(Token = "0x6000BB3")]
		[Address(RVA = "0x12653E8", Offset = "0x12653E8", VA = "0x12653E8")]
		public static void KillAllOfPrefab(Transform transToKill)
		{
		}

		[Token(Token = "0x6000BB4")]
		[Address(RVA = "0x126656C", Offset = "0x126656C", VA = "0x126656C")]
		public static Transform NextPoolItemToSpawn(Transform trans)
		{
			return null;
		}

		[Token(Token = "0x6000BB5")]
		[Address(RVA = "0x12665EC", Offset = "0x12665EC", VA = "0x12665EC")]
		public static Transform NextPoolItemToSpawn(string itemName)
		{
			return null;
		}

		[Token(Token = "0x6000BB6")]
		[Address(RVA = "0x12667C4", Offset = "0x12667C4", VA = "0x12667C4")]
		public static PoolItemInstanceList PoolItemInfoByName(string poolItemName)
		{
			return null;
		}

		[Token(Token = "0x6000BB7")]
		[Address(RVA = "0x12668AC", Offset = "0x12668AC", VA = "0x12668AC")]
		public static bool PrefabIsInPool(Transform trans)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BB8")]
		[Address(RVA = "0x1266998", Offset = "0x1266998", VA = "0x1266998")]
		public static bool PrefabIsInPool(string transName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BB9")]
		[Address(RVA = "0x1266B18", Offset = "0x1266B18", VA = "0x1266B18")]
		public static int PrefabDespawnedCount(Transform transPrefab)
		{
			return default(int);
		}

		[Token(Token = "0x6000BBA")]
		[Address(RVA = "0x1266D1C", Offset = "0x1266D1C", VA = "0x1266D1C")]
		public static int PrefabSpawnedCount(Transform transPrefab)
		{
			return default(int);
		}

		[Token(Token = "0x6000BBB")]
		[Address(RVA = "0x1266F20", Offset = "0x1266F20", VA = "0x1266F20")]
		public static bool AllOfPrefabAreDespawned(Transform transPrefab)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BBC")]
		[Address(RVA = "0x1254C64", Offset = "0x1254C64", VA = "0x1254C64")]
		public static bool IsMyMultiplayerPrefab(Killable kill)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BBE")]
		[Address(RVA = "0x1254158", Offset = "0x1254158", VA = "0x1254158")]
		public static string GetPrefabName(Transform trans)
		{
			return null;
		}

		[Token(Token = "0x6000BBF")]
		[Address(RVA = "0x1267074", Offset = "0x1267074", VA = "0x1267074")]
		public static string GetPrefabName(GameObject go)
		{
			return null;
		}

		[Token(Token = "0x6000BC0")]
		[Address(RVA = "0x1266A90", Offset = "0x1266A90", VA = "0x1266A90")]
		public static string GetPrefabShortName(string prefabName)
		{
			return null;
		}

		[Token(Token = "0x6000BC1")]
		[Address(RVA = "0x1264250", Offset = "0x1264250", VA = "0x1264250")]
		private static int NumberOfClones(PoolItemInstanceList instList)
		{
			return default(int);
		}

		[Token(Token = "0x6000BC2")]
		[Address(RVA = "0x1264958", Offset = "0x1264958", VA = "0x1264958")]
		public static bool IsSpawned(GameObject go)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BC6")]
		[Address(RVA = "0x126717C", Offset = "0x126717C", VA = "0x126717C")]
		public PoolBoss()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001BE")]
	public class PoolBossCategory
	{
		[Token(Token = "0x4000C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string CatName;

		[Token(Token = "0x4000C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IsExpanded;

		[Token(Token = "0x4000C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool IsEditing;

		[Token(Token = "0x4000C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string ProspectiveName;

		[Token(Token = "0x6000BCF")]
		[Address(RVA = "0x11752C0", Offset = "0x11752C0", VA = "0x11752C0")]
		public PoolBossCategory()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001BF")]
	public class PoolBossItem
	{
		[Token(Token = "0x4000C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform prefabTransform;

		[Token(Token = "0x4000C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int instancesToPreload;

		[Token(Token = "0x4000C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool isExpanded;

		[Token(Token = "0x4000C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public bool logMessages;

		[Token(Token = "0x4000C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
		public bool allowInstantiateMore;

		[Token(Token = "0x4000C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
		public bool enableNavMeshAgentOnSpawn;

		[Token(Token = "0x4000C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int itemHardLimit;

		[Token(Token = "0x4000C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool allowRecycle;

		[Token(Token = "0x4000C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string categoryName;

		[Token(Token = "0x6000BD0")]
		[Address(RVA = "0x1175338", Offset = "0x1175338", VA = "0x1175338")]
		public PoolBossItem()
		{
		}
	}
	[Token(Token = "0x20001C0")]
	public class PoolBossListener : MonoBehaviour
	{
		[Token(Token = "0x4000C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string sourceTransName;

		[Token(Token = "0x6000BD1")]
		[Address(RVA = "0x11753AC", Offset = "0x11753AC", VA = "0x11753AC")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000BD2")]
		[Address(RVA = "0x1175478", Offset = "0x1175478", VA = "0x1175478", Slot = "4")]
		public virtual void PercentInitialized(float percentDone)
		{
		}

		[Token(Token = "0x6000BD3")]
		[Address(RVA = "0x117547C", Offset = "0x117547C", VA = "0x117547C", Slot = "5")]
		public virtual void InitializationComplete()
		{
		}

		[Token(Token = "0x6000BD4")]
		[Address(RVA = "0x1175480", Offset = "0x1175480", VA = "0x1175480", Slot = "6")]
		public virtual void ItemSpawned(Transform cloneSpawned)
		{
		}

		[Token(Token = "0x6000BD5")]
		[Address(RVA = "0x1175484", Offset = "0x1175484", VA = "0x1175484", Slot = "7")]
		public virtual void ItemDespawned(Transform transDespawned)
		{
		}

		[Token(Token = "0x6000BD6")]
		[Address(RVA = "0x1175488", Offset = "0x1175488", VA = "0x1175488")]
		public PoolBossListener()
		{
		}
	}
	[Token(Token = "0x20001C1")]
	public class PoolableInfo : MonoBehaviour
	{
		[Token(Token = "0x4000C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string poolItemName;

		[Token(Token = "0x17000182")]
		public string ItemName
		{
			[Token(Token = "0x6000BDD")]
			[Address(RVA = "0x11756B4", Offset = "0x11756B4", VA = "0x11756B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BD7")]
		[Address(RVA = "0x1175490", Offset = "0x1175490", VA = "0x1175490")]
		private void OnSpawned()
		{
		}

		[Token(Token = "0x6000BD8")]
		[Address(RVA = "0x11754F8", Offset = "0x11754F8", VA = "0x11754F8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000BD9")]
		[Address(RVA = "0x1175560", Offset = "0x1175560", VA = "0x1175560")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000BDA")]
		[Address(RVA = "0x11755C8", Offset = "0x11755C8", VA = "0x11755C8")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000BDB")]
		[Address(RVA = "0x1175600", Offset = "0x1175600", VA = "0x1175600")]
		public void FindPoolItemName()
		{
		}

		[Token(Token = "0x6000BDC")]
		[Address(RVA = "0x11756AC", Offset = "0x11756AC", VA = "0x11756AC")]
		public void SetPoolItemName(string itemName)
		{
		}

		[Token(Token = "0x6000BDE")]
		[Address(RVA = "0x11756EC", Offset = "0x11756EC", VA = "0x11756EC")]
		public PoolableInfo()
		{
		}
	}
	[Token(Token = "0x20001C2")]
	public class WavePrefabPool : MonoBehaviour
	{
		[Token(Token = "0x20001C3")]
		public enum PoolDispersalMode
		{
			[Token(Token = "0x4000C91")]
			Randomized,
			[Token(Token = "0x4000C92")]
			OriginalPoolOrder
		}

		[Token(Token = "0x20001C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE21AEC", Offset = "0xE21AEC")]
		private sealed class <>c__DisplayClass12_0
		{
			[Token(Token = "0x4000C93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int index;

			[Token(Token = "0x6000BE5")]
			[Address(RVA = "0xEFED14", Offset = "0xEFED14", VA = "0xEFED14")]
			public <>c__DisplayClass12_0()
			{
			}

			[Token(Token = "0x6000BE6")]
			[Address(RVA = "0xEFEDA0", Offset = "0xEFEDA0", VA = "0xEFEDA0")]
			internal bool <PoolInstancesOfIndex>b__0(int obj)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isExpanded;

		[Token(Token = "0x4000C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool exhaustiveList;

		[Token(Token = "0x4000C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public PoolDispersalMode dispersalMode;

		[Token(Token = "0x4000C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WavePrefabPoolListener listener;

		[Token(Token = "0x4000C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<WavePrefabPoolItem> poolItems;

		[Token(Token = "0x4000C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _isValid;

		[Token(Token = "0x4000C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly List<int> _poolItemIndexes;

		[Token(Token = "0x6000BDF")]
		[Address(RVA = "0xEFE1E0", Offset = "0xEFE1E0", VA = "0xEFE1E0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BE0")]
		[Address(RVA = "0xEFE20C", Offset = "0xEFE20C", VA = "0xEFE20C")]
		private void FillPool()
		{
		}

		[Token(Token = "0x6000BE1")]
		[Address(RVA = "0xEFE8F4", Offset = "0xEFE8F4", VA = "0xEFE8F4")]
		public Transform GetRandomWeightedTransform()
		{
			return null;
		}

		[Token(Token = "0x6000BE2")]
		[Address(RVA = "0xEFEBE4", Offset = "0xEFEBE4", VA = "0xEFEBE4")]
		public void ResetPool()
		{
		}

		[Token(Token = "0x6000BE3")]
		[Address(RVA = "0xEFEC44", Offset = "0xEFEC44", VA = "0xEFEC44")]
		public int PoolInstancesOfIndex(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6000BE4")]
		[Address(RVA = "0xEFED1C", Offset = "0xEFED1C", VA = "0xEFED1C")]
		public WavePrefabPool()
		{
		}
	}
	[Token(Token = "0x20001C5")]
	public class WavePrefabPoolGroup : MonoBehaviour
	{
		[Token(Token = "0x4000C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool newPrefabPoolExpanded;

		[Token(Token = "0x4000C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string newPrefabPoolName;

		[Token(Token = "0x6000BE7")]
		[Address(RVA = "0xEFEDD0", Offset = "0xEFEDD0", VA = "0xEFEDD0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0xEFEDDC", Offset = "0xEFEDDC", VA = "0xEFEDDC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0xEFF00C", Offset = "0xEFF00C", VA = "0xEFF00C")]
		public WavePrefabPoolGroup()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001C6")]
	public class WavePrefabPoolItem
	{
		[Token(Token = "0x4000C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform prefabToSpawn;

		[Token(Token = "0x4000C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string prefabPoolBossCategory;

		[Token(Token = "0x4000C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelSettings.ActiveItemMode activeMode;

		[Token(Token = "0x4000C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public WorldVariableRangeCollection activeItemCriteria;

		[Token(Token = "0x4000C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public KillerInt thisWeight;

		[Token(Token = "0x4000C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool isExpanded;

		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0xEFF074", Offset = "0xEFF074", VA = "0xEFF074")]
		public WavePrefabPoolItem()
		{
		}
	}
	[Token(Token = "0x20001C7")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE21AFC", Offset = "0xE21AFC")]
	public class WavePrefabPoolListener : MonoBehaviour
	{
		[Token(Token = "0x4000C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string sourcePrefabPoolName;

		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0xEFF1A8", Offset = "0xEFF1A8", VA = "0xEFF1A8")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0xEFF274", Offset = "0xEFF274", VA = "0xEFF274", Slot = "4")]
		public virtual void PrefabGrabbedFromPool(Transform transGrabbed)
		{
		}

		[Token(Token = "0x6000BED")]
		[Address(RVA = "0xEFF278", Offset = "0xEFF278", VA = "0xEFF278", Slot = "5")]
		public virtual void PoolRefilling()
		{
		}

		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0xEFF27C", Offset = "0xEFF27C", VA = "0xEFF27C")]
		public WavePrefabPoolListener()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001C8")]
	public class CGKCustomEventToFire
	{
		[Token(Token = "0x4000C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string CustomEventName;

		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0x124ABD4", Offset = "0x124ABD4", VA = "0x124ABD4")]
		public CGKCustomEventToFire()
		{
		}
	}
	[Token(Token = "0x20001C9")]
	public class CoreCustomEventAttribute : PropertyAttribute
	{
		[Token(Token = "0x6000BF0")]
		[Address(RVA = "0x124B258", Offset = "0x124B258", VA = "0x124B258")]
		public CoreCustomEventAttribute()
		{
		}
	}
	[Token(Token = "0x20001CA")]
	public class CoreScriptOrder : Attribute
	{
		[Token(Token = "0x4000C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Order;

		[Token(Token = "0x6000BF1")]
		[Address(RVA = "0x124B308", Offset = "0x124B308", VA = "0x124B308")]
		public CoreScriptOrder(int order)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001CB")]
	public class KillerFloat : KillerVariable
	{
		[Token(Token = "0x4000C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float selfValue;

		[Token(Token = "0x4000CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float minimum;

		[Token(Token = "0x4000CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float maximum;

		[Token(Token = "0x4000CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _isValid;

		[Token(Token = "0x17000183")]
		public float Value
		{
			[Token(Token = "0x6000BF4")]
			[Address(RVA = "0x124C6B0", Offset = "0x124C6B0", VA = "0x124C6B0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000184")]
		public static float DefaultValue
		{
			[Token(Token = "0x6000BF5")]
			[Address(RVA = "0x1255EC0", Offset = "0x1255EC0", VA = "0x1255EC0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000BF2")]
		[Address(RVA = "0x12553B0", Offset = "0x12553B0", VA = "0x12553B0")]
		public KillerFloat(float startingValue, float min, float max)
		{
		}

		[Token(Token = "0x6000BF3")]
		[Address(RVA = "0x124F510", Offset = "0x124F510", VA = "0x124F510")]
		public float LogIfInvalid(Transform trans, string fieldName, [Optional] int? levelNum, [Optional] int? waveNum, [Optional] string trigEventName)
		{
			return default(float);
		}
	}
	[Serializable]
	[Token(Token = "0x20001CC")]
	public class KillerInt : KillerVariable
	{
		[Token(Token = "0x4000CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int selfValue;

		[Token(Token = "0x4000CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int minimum;

		[Token(Token = "0x4000CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int maximum;

		[Token(Token = "0x4000CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _isValid;

		[Token(Token = "0x17000185")]
		public int Value
		{
			[Token(Token = "0x6000BF8")]
			[Address(RVA = "0x124C1FC", Offset = "0x124C1FC", VA = "0x124C1FC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000BF9")]
			[Address(RVA = "0x124E734", Offset = "0x124E734", VA = "0x124E734")]
			set
			{
			}
		}

		[Token(Token = "0x17000186")]
		public static int DefaultValue
		{
			[Token(Token = "0x6000BFA")]
			[Address(RVA = "0x1255EC8", Offset = "0x1255EC8", VA = "0x1255EC8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000BF6")]
		[Address(RVA = "0x125536C", Offset = "0x125536C", VA = "0x125536C")]
		public KillerInt(int startingValue, int min, int max)
		{
		}

		[Token(Token = "0x6000BF7")]
		[Address(RVA = "0x124F494", Offset = "0x124F494", VA = "0x124F494")]
		public int LogIfInvalid(Transform trans, string fieldName, [Optional] int? levelNum, [Optional] int? waveNum, [Optional] string trigEventName)
		{
			return default(int);
		}
	}
	[Serializable]
	[Token(Token = "0x20001CD")]
	public class KillerVariable
	{
		[Token(Token = "0x20001CE")]
		public enum ModMode
		{
			[Token(Token = "0x4000CAB")]
			Set,
			[Token(Token = "0x4000CAC")]
			Add,
			[Token(Token = "0x4000CAD")]
			Sub,
			[Token(Token = "0x4000CAE")]
			Mult
		}

		[Token(Token = "0x4000CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LevelSettings.VariableSource variableSource;

		[Token(Token = "0x4000CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string worldVariableName;

		[Token(Token = "0x4000CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ModMode curModMode;

		[Token(Token = "0x6000BFB")]
		[Address(RVA = "0x1255E4C", Offset = "0x1255E4C", VA = "0x1255E4C")]
		public KillerVariable()
		{
		}
	}
	[Token(Token = "0x20001CF")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE21B34", Offset = "0xE21B34")]
	public class PlayerSpawner : MonoBehaviour
	{
		[Token(Token = "0x4000CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform PlayerPrefab;

		[Token(Token = "0x4000CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform RespawnParticlePrefab;

		[Token(Token = "0x4000CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 RespawnParticleOffset;

		[Token(Token = "0x4000CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float RespawnDelay;

		[Token(Token = "0x4000CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 spawnPosition;

		[Token(Token = "0x4000CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool followPlayer;

		[Token(Token = "0x4000CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform _player;

		[Token(Token = "0x4000CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float? _nextSpawnTime;

		[Token(Token = "0x4000CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 _playerPosition;

		[Token(Token = "0x4000CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool _isDisabled;

		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0x126125C", Offset = "0x126125C", VA = "0x126125C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0x12616A0", Offset = "0x12616A0", VA = "0x12616A0")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0x1261488", Offset = "0x1261488", VA = "0x1261488")]
		private void SpawnPlayer()
		{
		}

		[Token(Token = "0x6000BFF")]
		[Address(RVA = "0x1261980", Offset = "0x1261980", VA = "0x1261980")]
		public void UpdateSpawnPosition(Vector3 newPosition)
		{
		}

		[Token(Token = "0x6000C00")]
		[Address(RVA = "0x126198C", Offset = "0x126198C", VA = "0x126198C")]
		public PlayerSpawner()
		{
		}
	}
	[Token(Token = "0x20001D0")]
	public class SpawnTracker : MonoBehaviour
	{
		[Token(Token = "0x4000CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform _trans;

		[Token(Token = "0x4000CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2ACFC", Offset = "0xE2ACFC")]
		private WaveSyncroPrefabSpawner <SourceSpawner>k__BackingField;

		[Token(Token = "0x17000187")]
		public WaveSyncroPrefabSpawner SourceSpawner
		{
			[Token(Token = "0x6000C02")]
			[Address(RVA = "0x11758BC", Offset = "0x11758BC", VA = "0x11758BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2EE34", Offset = "0xE2EE34")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C03")]
			[Address(RVA = "0x11758C4", Offset = "0x11758C4", VA = "0x11758C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2EE44", Offset = "0xE2EE44")]
			set
			{
			}
		}

		[Token(Token = "0x17000188")]
		public Transform Trans
		{
			[Token(Token = "0x6000C04")]
			[Address(RVA = "0x1175818", Offset = "0x1175818", VA = "0x1175818")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C01")]
		[Address(RVA = "0x1175754", Offset = "0x1175754", VA = "0x1175754")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000C05")]
		[Address(RVA = "0x11758CC", Offset = "0x11758CC", VA = "0x11758CC")]
		public SpawnTracker()
		{
		}
	}
	[Token(Token = "0x20001D1")]
	public class TrigSpawnTracker : MonoBehaviour
	{
		[Token(Token = "0x4000CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform _trans;

		[Token(Token = "0x4000CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TriggeredSpawnerV2 _sourceSpawner;

		[Token(Token = "0x4000CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TriggeredSpawner.EventType _waveEventType;

		[Token(Token = "0x4000CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TriggeredWaveMetaData _waveMeta;

		[Token(Token = "0x4000CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string _customEventName;

		[Token(Token = "0x17000189")]
		public Transform Trans
		{
			[Token(Token = "0x6000C08")]
			[Address(RVA = "0x1176760", Offset = "0x1176760", VA = "0x1176760")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C06")]
		[Address(RVA = "0x117665C", Offset = "0x117665C", VA = "0x117665C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000C07")]
		[Address(RVA = "0x1176A04", Offset = "0x1176A04", VA = "0x1176A04")]
		public void StartTracking(TriggeredSpawnerV2 sourceSpawner, TriggeredSpawner.EventType eType, string customEventName, TriggeredWaveMetaData waveMeta)
		{
		}

		[Token(Token = "0x6000C09")]
		[Address(RVA = "0x1176A5C", Offset = "0x1176A5C", VA = "0x1176A5C")]
		public TrigSpawnTracker()
		{
		}
	}
	[Token(Token = "0x20001D2")]
	[AttributeAttribute(Name = "CoreScriptOrder", RVA = "0xE21B6C", Offset = "0xE21B6C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE21B6C", Offset = "0xE21B6C")]
	public class TriggeredSpawner : MonoBehaviour, ICgkEventReceiver
	{
		[Token(Token = "0x20001D3")]
		public enum Unity_UIVersion
		{
			[Token(Token = "0x4000D24")]
			Legacy,
			[Token(Token = "0x4000D25")]
			uGUI
		}

		[Token(Token = "0x20001D4")]
		public enum EventType
		{
			[Token(Token = "0x4000D27")]
			OnEnabled,
			[Token(Token = "0x4000D28")]
			OnDisabled,
			[Token(Token = "0x4000D29")]
			Visible,
			[Token(Token = "0x4000D2A")]
			Invisible,
			[Token(Token = "0x4000D2B")]
			MouseOver_Legacy,
			[Token(Token = "0x4000D2C")]
			MouseClick_Legacy,
			[Token(Token = "0x4000D2D")]
			OnCollision,
			[Token(Token = "0x4000D2E")]
			OnTriggerEnter,
			[Token(Token = "0x4000D2F")]
			OnSpawned,
			[Token(Token = "0x4000D30")]
			OnDespawned,
			[Token(Token = "0x4000D31")]
			OnClick_NGUI,
			[Token(Token = "0x4000D32")]
			CodeTriggered1,
			[Token(Token = "0x4000D33")]
			CodeTriggered2,
			[Token(Token = "0x4000D34")]
			LostHitPoints,
			[Token(Token = "0x4000D35")]
			OnTriggerExit,
			[Token(Token = "0x4000D36")]
			OnCollision2D,
			[Token(Token = "0x4000D37")]
			OnTriggerEnter2D,
			[Token(Token = "0x4000D38")]
			OnTriggerExit2D,
			[Token(Token = "0x4000D39")]
			SpawnerDestroyed,
			[Token(Token = "0x4000D3A")]
			DeathTimer,
			[Token(Token = "0x4000D3B")]
			CustomEvent,
			[Token(Token = "0x4000D3C")]
			SliderChanged_uGUI,
			[Token(Token = "0x4000D3D")]
			ButtonClicked_uGUI,
			[Token(Token = "0x4000D3E")]
			PointerDown_uGUI,
			[Token(Token = "0x4000D3F")]
			PointerUp_uGUI,
			[Token(Token = "0x4000D40")]
			PointerEnter_uGUI,
			[Token(Token = "0x4000D41")]
			PointerExit_uGUI,
			[Token(Token = "0x4000D42")]
			Drag_uGUI,
			[Token(Token = "0x4000D43")]
			Drop_uGUI,
			[Token(Token = "0x4000D44")]
			Scroll_uGUI,
			[Token(Token = "0x4000D45")]
			UpdateSelected_uGUI,
			[Token(Token = "0x4000D46")]
			Select_uGUI,
			[Token(Token = "0x4000D47")]
			Deselect_uGUI,
			[Token(Token = "0x4000D48")]
			Move_uGUI,
			[Token(Token = "0x4000D49")]
			InitializePotentialDrag_uGUI,
			[Token(Token = "0x4000D4A")]
			BeginDrag_uGUI,
			[Token(Token = "0x4000D4B")]
			EndDrag_uGUI,
			[Token(Token = "0x4000D4C")]
			Submit_uGUI,
			[Token(Token = "0x4000D4D")]
			Cancel_uGUI,
			[Token(Token = "0x4000D4E")]
			ParentDestroyed,
			[Token(Token = "0x4000D4F")]
			DistanceDeath,
			[Token(Token = "0x4000D50")]
			OnTriggerStay,
			[Token(Token = "0x4000D51")]
			OnTriggerStay2D
		}

		[Token(Token = "0x20001D5")]
		public enum SpawnerEventSource
		{
			[Token(Token = "0x4000D53")]
			ReceiveFromParent,
			[Token(Token = "0x4000D54")]
			Self,
			[Token(Token = "0x4000D55")]
			None
		}

		[Token(Token = "0x20001D6")]
		public enum GameOverBehavior
		{
			[Token(Token = "0x4000D57")]
			BehaveAsNormal,
			[Token(Token = "0x4000D58")]
			Disable
		}

		[Token(Token = "0x20001D7")]
		public enum WavePauseBehavior
		{
			[Token(Token = "0x4000D5A")]
			BehaveAsNormal,
			[Token(Token = "0x4000D5B")]
			Disable
		}

		[Token(Token = "0x20001D8")]
		public enum RetriggerLimitMode
		{
			[Token(Token = "0x4000D5D")]
			None,
			[Token(Token = "0x4000D5E")]
			FrameBased,
			[Token(Token = "0x4000D5F")]
			TimeBased
		}

		[Token(Token = "0x20001D9")]
		public class TriggeredSpawnerUGUIHandler : MonoBehaviour
		{
			[Token(Token = "0x4000D60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2AD0C", Offset = "0xE2AD0C")]
			private TriggeredSpawner <trigSpawner>k__BackingField;

			[Token(Token = "0x17000193")]
			public TriggeredSpawner trigSpawner
			{
				[Token(Token = "0x6000C7F")]
				[Address(RVA = "0x1183F90", Offset = "0x1183F90", VA = "0x1183F90")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2EE54", Offset = "0xE2EE54")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000C80")]
				[Address(RVA = "0x1183F98", Offset = "0x1183F98", VA = "0x1183F98")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2EE64", Offset = "0xE2EE64")]
				set
				{
				}
			}

			[Token(Token = "0x6000C81")]
			[Address(RVA = "0x1183700", Offset = "0x1183700", VA = "0x1183700")]
			public TriggeredSpawnerUGUIHandler()
			{
			}
		}

		[Token(Token = "0x20001DA")]
		public class TriggeredSpawnerPointerEnterHandler : TriggeredSpawnerUGUIHandler, IPointerEnterHandler, IEventSystemHandler
		{
			[Token(Token = "0x6000C82")]
			[Address(RVA = "0x1183BE8", Offset = "0x1183BE8", VA = "0x1183BE8", Slot = "4")]
			public void OnPointerEnter(PointerEventData data)
			{
			}

			[Token(Token = "0x6000C83")]
			[Address(RVA = "0x1183C7C", Offset = "0x1183C7C", VA = "0x1183C7C")]
			public TriggeredSpawnerPointerEnterHandler()
			{
			}
		}

		[Token(Token = "0x20001DB")]
		public class TriggeredSpawnerPointerExitHandler : TriggeredSpawnerUGUIHandler, IPointerExitHandler, IEventSystemHandler
		{
			[Token(Token = "0x6000C84")]
			[Address(RVA = "0x1183C84", Offset = "0x1183C84", VA = "0x1183C84", Slot = "4")]
			public void OnPointerExit(PointerEventData data)
			{
			}

			[Token(Token = "0x6000C85")]
			[Address(RVA = "0x1183D18", Offset = "0x1183D18", VA = "0x1183D18")]
			public TriggeredSpawnerPointerExitHandler()
			{
			}
		}

		[Token(Token = "0x20001DC")]
		public class TriggeredSpawnerPointerDownHandler : TriggeredSpawnerUGUIHandler, IPointerDownHandler, IEventSystemHandler
		{
			[Token(Token = "0x6000C86")]
			[Address(RVA = "0x1183B4C", Offset = "0x1183B4C", VA = "0x1183B4C", Slot = "4")]
			public void OnPointerDown(PointerEventData data)
			{
			}

			[Token(Token = "0x6000C87")]
			[Address(RVA = "0x1183BE0", Offset = "0x1183BE0", VA = "0x1183BE0")]
			public TriggeredSpawnerPointerDownHandler()
			{
			}
		}

		[Token(Token = "0x20001DD")]
		public class TriggeredSpawnerPointerUpHandler : TriggeredSpawnerUGUIHandler, IPointerUpHandler, IEventSystemHandler
		{
			[Token(Token = "0x6000C88")]
			[Address(RVA = "0x1183D20", Offset = "0x1183D20", VA = "0x1183D20", Slot = "4")]
			public void OnPointerUp(PointerEventData data)
			{
			}

			[Token(Token = "0x6000C89")]
			[Address(RVA = "0x1183DB4", Offset = "0x1183DB4", VA = "0x1183DB4")]
			public TriggeredSpawnerPointerUpHandler()
			{
			}
		}

		[Token(Token = "0x20001DE")]
		public class TriggeredSpawnerDragHandler : TriggeredSpawnerUGUIHandler, IDragHandler, IEventSystemHandler
		{
			[Token(Token = "0x6000C8A")]
			[Address(RVA = "0x1183840", Offset = "0x1183840", VA = "0x1183840", Slot = "4")]
			public void OnDrag(PointerEventData data)
			{
			}

			[Token(Token = "0x6000C8B")]
			[Address(RVA = "0x11838D4", Offset = "0x11838D4", VA = "0x11838D4")]
			public TriggeredSpawnerDragHandler()
			{
			}
		}

		[Token(Token = "0x20001DF")]
		public class TriggeredSpawnerDropHandler : TriggeredSpawnerUGUIHandler, IDropHandler, IEventSystemHandler
		{
			[Token(Token = "0x6000C8C")]
			[Address(RVA = "0x11838DC", Offset = "0x11838DC", VA = "0x11838DC", Slot = "4")]
			public void OnDrop(PointerEventData data)
			{
			}

			[Token(Token = "0x6000C8D")]
			[Address(RVA = "0x1183970", Offset = "0x1183970", VA = "0x1183970")]
			public TriggeredSpawnerDropHandler()
			{
			}
		}

		[Token(Token = "0x20001E0")]
		public class TriggeredSpawnerScrollHandler : TriggeredSpawnerUGUIHandler, IScrollHandler, IEventSystemHandler
		{
			[Token(Token = "0x6000C8E")]
			[Address(RVA = "0x1183DBC", Offset = "0x1183DBC", VA = "0x1183DBC", Slot = "4")]
			public void OnScroll(PointerEventData data)
			{
			}

			[Token(Token = "0x6000C8F")]
			[Address(RVA = "0x1183E50", Offset = "0x1183E50", VA = "0x1183E50")]
			public TriggeredSpawnerScrollHandler()
			{
			}
		}

		[Token(Token = "0x20001E1")]
		public class TriggeredSpawnerUpdateSelectedHandler : TriggeredSpawnerUGUIHandler, IUpdateSelectedHandler, IEventSystemHandler
		{
			[Token(Token = "0x6000C90")]
			[Address(RVA = "0x1183FA0", Offset = "0x1183FA0", VA = "0x1183FA0", Slot = "4")]
			public void OnUpdateSelected(BaseEventData data)
			{
			}

			[Token(Token = "0x6000C91")]
			[Address(RVA = "0x1184034", Offset = "0x1184034", VA = "0x1184034")]
			public TriggeredSpawnerUpdateSelectedHandler()
			{
			}
		}

		[Token(Token = "0x20001E2")]
		public class TriggeredSpawnerSelectHandler : TriggeredSpawnerUGUIHandler, ISelectHandler, IEventSystemHandler
		{
			[Token(Token = "0x6000C92")]
			[Address(RVA = "0x1183E58", Offset = "0x1183E58", VA = "0x1183E58", Slot = "4")]
			public void OnSelect(BaseEventData data)
			{
			}

			[Token(Token = "0x6000C93")]
			[Address(RVA = "0x1183EEC", Offset = "0x1183EEC", VA = "0x1183EEC")]
			public TriggeredSpawnerSelectHandler()
			{
			}
		}

		[Token(Token = "0x20001E3")]
		public class TriggeredSpawnerDeselectHandler : TriggeredSpawnerUGUIHandler, IDeselectHandler, IEventSystemHandler
		{
			[Token(Token = "0x6000C94")]
			[Address(RVA = "0x11837A4", Offset = "0x11837A4", VA = "0x11837A4", Slot = "4")]
			public void OnDeselect(BaseEventData data)
			{
			}

			[Token(Token = "0x6000C95")]
			[Address(RVA = "0x1183838", Offset = "0x1183838", VA = "0x1183838")]
			public TriggeredSpawnerDeselectHandler()
			{
			}
		}

		[Token(Token = "0x20001E4")]
		public class TriggeredSpawnerMoveHandler : TriggeredSpawnerUGUIHandler, IMoveHandler, IEventSystemHandler
		{
			[Token(Token = "0x6000C96")]
			[Address(RVA = "0x1183AB0", Offset = "0x1183AB0", VA = "0x1183AB0", Slot = "4")]
			public void OnMove(AxisEventData data)
			{
			}

			[Token(Token = "0x6000C97")]
			[Address(RVA = "0x1183B44", Offset = "0x1183B44", VA = "0x1183B44")]
			public TriggeredSpawnerMoveHandler()
			{
			}
		}

		[Token(Token = "0x20001E5")]
		public class TriggeredSpawnerInitializePotentialDragHandler : TriggeredSpawnerUGUIHandler, IInitializePotentialDragHandler, IEventSystemHandler
		{
			[Token(Token = "0x6000C98")]
			[Address(RVA = "0x1183A14", Offset = "0x1183A14", VA = "0x1183A14", Slot = "4")]
			public void OnInitializePotentialDrag(PointerEventData data)
			{
			}

			[Token(Token = "0x6000C99")]
			[Address(RVA = "0x1183AA8", Offset = "0x1183AA8", VA = "0x1183AA8")]
			public TriggeredSpawnerInitializePotentialDragHandler()
			{
			}
		}

		[Token(Token = "0x20001E6")]
		public class TriggeredSpawnerBeginDragHandler : TriggeredSpawnerUGUIHandler, IBeginDragHandler, IEventSystemHandler
		{
			[Token(Token = "0x6000C9A")]
			[Address(RVA = "0x1183664", Offset = "0x1183664", VA = "0x1183664", Slot = "4")]
			public void OnBeginDrag(PointerEventData data)
			{
			}

			[Token(Token = "0x6000C9B")]
			[Address(RVA = "0x11836F8", Offset = "0x11836F8", VA = "0x11836F8")]
			public TriggeredSpawnerBeginDragHandler()
			{
			}
		}

		[Token(Token = "0x20001E7")]
		public class TriggeredSpawnerEndDragHandler : TriggeredSpawnerUGUIHandler, IEndDragHandler, IEventSystemHandler
		{
			[Token(Token = "0x6000C9C")]
			[Address(RVA = "0x1183978", Offset = "0x1183978", VA = "0x1183978", Slot = "4")]
			public void OnEndDrag(PointerEventData data)
			{
			}

			[Token(Token = "0x6000C9D")]
			[Address(RVA = "0x1183A0C", Offset = "0x1183A0C", VA = "0x1183A0C")]
			public TriggeredSpawnerEndDragHandler()
			{
			}
		}

		[Token(Token = "0x20001E8")]
		public class TriggeredSpawnerSubmitHandler : TriggeredSpawnerUGUIHandler, ISubmitHandler, IEventSystemHandler
		{
			[Token(Token = "0x6000C9E")]
			[Address(RVA = "0x1183EF4", Offset = "0x1183EF4", VA = "0x1183EF4", Slot = "4")]
			public void OnSubmit(BaseEventData data)
			{
			}

			[Token(Token = "0x6000C9F")]
			[Address(RVA = "0x1183F88", Offset = "0x1183F88", VA = "0x1183F88")]
			public TriggeredSpawnerSubmitHandler()
			{
			}
		}

		[Token(Token = "0x20001E9")]
		public class TriggeredSpawnerCancelHandler : TriggeredSpawnerUGUIHandler, ICancelHandler, IEventSystemHandler
		{
			[Token(Token = "0x6000CA0")]
			[Address(RVA = "0x1183708", Offset = "0x1183708", VA = "0x1183708", Slot = "4")]
			public void OnCancel(BaseEventData data)
			{
			}

			[Token(Token = "0x6000CA1")]
			[Address(RVA = "0x118379C", Offset = "0x118379C", VA = "0x118379C")]
			public TriggeredSpawnerCancelHandler()
			{
			}
		}

		[Token(Token = "0x4000CC0")]
		public const int MaxDistance = 5000;

		[Token(Token = "0x4000CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Unity_UIVersion unityUIMode;

		[Token(Token = "0x4000CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static List<EventType> eventsThatCanRepeatWave;

		[Token(Token = "0x4000CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static List<EventType> eventsWithTagLayerFilters;

		[Token(Token = "0x4000CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static List<EventType> eventsWithInflexibleWaveLength;

		[Token(Token = "0x4000CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static List<EventType> eventsThatCanTriggerDespawn;

		[Token(Token = "0x4000CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool logMissingEvents;

		[Token(Token = "0x4000CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelSettings.ActiveItemMode activeMode;

		[Token(Token = "0x4000CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public WorldVariableRangeCollection activeItemCriteria;

		[Token(Token = "0x4000CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameOverBehavior gameOverBehavior;

		[Token(Token = "0x4000CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public WavePauseBehavior wavePauseBehavior;

		[Token(Token = "0x4000CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SpawnerEventSource eventSourceType;

		[Token(Token = "0x4000CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool transmitEventsToChildren;

		[Token(Token = "0x4000CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		public bool spawnOutsidePool;

		[Token(Token = "0x4000CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public WaveSyncroPrefabSpawner.SpawnLayerTagMode spawnLayerMode;

		[Token(Token = "0x4000CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public WaveSyncroPrefabSpawner.SpawnLayerTagMode spawnTagMode;

		[Token(Token = "0x4000CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int spawnCustomLayer;

		[Token(Token = "0x4000CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string spawnCustomTag;

		[Token(Token = "0x4000CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool applyLayerRecursively;

		[Token(Token = "0x4000CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public TriggeredSpawnerListener listener;

		[Token(Token = "0x4000CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public TriggeredWaveSpecifics enableWave;

		[Token(Token = "0x4000CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public TriggeredWaveSpecifics disableWave;

		[Token(Token = "0x4000CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public TriggeredWaveSpecifics visibleWave;

		[Token(Token = "0x4000CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public TriggeredWaveSpecifics invisibleWave;

		[Token(Token = "0x4000CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public TriggeredWaveSpecifics mouseOverWave;

		[Token(Token = "0x4000CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public TriggeredWaveSpecifics mouseClickWave;

		[Token(Token = "0x4000CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public TriggeredWaveSpecifics collisionWave;

		[Token(Token = "0x4000CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public TriggeredWaveSpecifics triggerEnterWave;

		[Token(Token = "0x4000CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public TriggeredWaveSpecifics triggerExitWave;

		[Token(Token = "0x4000CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public TriggeredWaveSpecifics spawnedWave;

		[Token(Token = "0x4000CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public TriggeredWaveSpecifics despawnedWave;

		[Token(Token = "0x4000CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public TriggeredWaveSpecifics codeTriggeredWave1;

		[Token(Token = "0x4000CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public TriggeredWaveSpecifics codeTriggeredWave2;

		[Token(Token = "0x4000CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public TriggeredWaveSpecifics clickWave;

		[Token(Token = "0x4000CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public TriggeredWaveSpecifics collision2dWave;

		[Token(Token = "0x4000CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public TriggeredWaveSpecifics triggerEnter2dWave;

		[Token(Token = "0x4000CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public TriggeredWaveSpecifics triggerExit2dWave;

		[Token(Token = "0x4000CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public List<TriggeredWaveSpecifics> userDefinedEventWaves;

		[Token(Token = "0x4000CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public TriggeredWaveSpecifics unitySliderChangedWave;

		[Token(Token = "0x4000CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public TriggeredWaveSpecifics unityButtonClickedWave;

		[Token(Token = "0x4000CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public TriggeredWaveSpecifics unityPointerDownWave;

		[Token(Token = "0x4000CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public TriggeredWaveSpecifics unityPointerUpWave;

		[Token(Token = "0x4000CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public TriggeredWaveSpecifics unityPointerEnterWave;

		[Token(Token = "0x4000CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public TriggeredWaveSpecifics unityPointerExitWave;

		[Token(Token = "0x4000CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public TriggeredWaveSpecifics unityDragWave;

		[Token(Token = "0x4000CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public TriggeredWaveSpecifics unityDropWave;

		[Token(Token = "0x4000CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public TriggeredWaveSpecifics unityScrollWave;

		[Token(Token = "0x4000CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public TriggeredWaveSpecifics unityUpdateSelectedWave;

		[Token(Token = "0x4000CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public TriggeredWaveSpecifics unitySelectWave;

		[Token(Token = "0x4000CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public TriggeredWaveSpecifics unityDeselectWave;

		[Token(Token = "0x4000CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public TriggeredWaveSpecifics unityMoveWave;

		[Token(Token = "0x4000CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public TriggeredWaveSpecifics unityInitializePotentialDragWave;

		[Token(Token = "0x4000CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public TriggeredWaveSpecifics unityBeginDragWave;

		[Token(Token = "0x4000CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public TriggeredWaveSpecifics unityEndDragWave;

		[Token(Token = "0x4000CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public TriggeredWaveSpecifics unitySubmitWave;

		[Token(Token = "0x4000CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public TriggeredWaveSpecifics unityCancelWave;

		[Token(Token = "0x4000CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private TriggeredWaveMetaData _enableWaveMeta;

		[Token(Token = "0x4000CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private TriggeredWaveMetaData _disableWaveMeta;

		[Token(Token = "0x4000CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private TriggeredWaveMetaData _visibleWaveMeta;

		[Token(Token = "0x4000CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private TriggeredWaveMetaData _invisibleWaveMeta;

		[Token(Token = "0x4000CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private TriggeredWaveMetaData _mouseOverWaveMeta;

		[Token(Token = "0x4000CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private TriggeredWaveMetaData _mouseClickWaveMeta;

		[Token(Token = "0x4000CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private TriggeredWaveMetaData _collisionWaveMeta;

		[Token(Token = "0x4000CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private TriggeredWaveMetaData _triggerEnterWaveMeta;

		[Token(Token = "0x4000D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private TriggeredWaveMetaData _triggerExitWaveMeta;

		[Token(Token = "0x4000D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private TriggeredWaveMetaData _spawnedWaveMeta;

		[Token(Token = "0x4000D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private TriggeredWaveMetaData _despawnedWaveMeta;

		[Token(Token = "0x4000D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private TriggeredWaveMetaData _codeTriggeredWave1Meta;

		[Token(Token = "0x4000D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private TriggeredWaveMetaData _codeTriggeredWave2Meta;

		[Token(Token = "0x4000D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private TriggeredWaveMetaData _clickWaveMeta;

		[Token(Token = "0x4000D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private TriggeredWaveMetaData _collision2DWaveMeta;

		[Token(Token = "0x4000D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private TriggeredWaveMetaData _triggerEnter2DWaveMeta;

		[Token(Token = "0x4000D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private TriggeredWaveMetaData _triggerExit2DWaveMeta;

		[Token(Token = "0x4000D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private readonly List<TriggeredWaveMetaData> _userDefinedEventWaveMeta;

		[Token(Token = "0x4000D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private TriggeredWaveMetaData _unitySliderChangedWaveMeta;

		[Token(Token = "0x4000D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private TriggeredWaveMetaData _unityButtonClickedWaveMeta;

		[Token(Token = "0x4000D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private TriggeredWaveMetaData _unityPointerDownWaveMeta;

		[Token(Token = "0x4000D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private TriggeredWaveMetaData _unityPointerUpWaveMeta;

		[Token(Token = "0x4000D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		private TriggeredWaveMetaData _unityPointerEnterWaveMeta;

		[Token(Token = "0x4000D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		private TriggeredWaveMetaData _unityPointerExitWaveMeta;

		[Token(Token = "0x4000D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		private TriggeredWaveMetaData _unityDragWaveMeta;

		[Token(Token = "0x4000D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		private TriggeredWaveMetaData _unityDropWaveMeta;

		[Token(Token = "0x4000D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		private TriggeredWaveMetaData _unityScrollWaveMeta;

		[Token(Token = "0x4000D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		private TriggeredWaveMetaData _unityUpdateSelectedWaveMeta;

		[Token(Token = "0x4000D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		private TriggeredWaveMetaData _unitySelectWaveMeta;

		[Token(Token = "0x4000D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		private TriggeredWaveMetaData _unityDeselectWaveMeta;

		[Token(Token = "0x4000D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		private TriggeredWaveMetaData _unityMoveWaveMeta;

		[Token(Token = "0x4000D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		private TriggeredWaveMetaData _unityInitializePotentialDragWaveMeta;

		[Token(Token = "0x4000D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		private TriggeredWaveMetaData _unityBeginDragWaveMeta;

		[Token(Token = "0x4000D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		private TriggeredWaveMetaData _unityEndDragWaveMeta;

		[Token(Token = "0x4000D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		private TriggeredWaveMetaData _unitySubmitWaveMeta;

		[Token(Token = "0x4000D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		private TriggeredWaveMetaData _unityCancelWaveMeta;

		[Token(Token = "0x4000D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		private Button _button;

		[Token(Token = "0x4000D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		private Slider _slider;

		[Token(Token = "0x4000D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		private Transform _trans;

		[Token(Token = "0x4000D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		private GameObject _go;

		[Token(Token = "0x4000D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		private bool _isVisible;

		[Token(Token = "0x4000D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		private List<TriggeredSpawner> _childSpawners;

		[Token(Token = "0x4000D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		private readonly List<TriggeredWaveSpecifics> _allWaves;

		[Token(Token = "0x1700018A")]
		public List<TriggeredWaveSpecifics> AllWaves
		{
			[Token(Token = "0x6000C74")]
			[Address(RVA = "0x1182604", Offset = "0x1182604", VA = "0x1182604")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018B")]
		public bool SpawnerIsPaused
		{
			[Token(Token = "0x6000C75")]
			[Address(RVA = "0x1179A5C", Offset = "0x1179A5C", VA = "0x1179A5C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700018C")]
		public bool GameIsOverForSpawner
		{
			[Token(Token = "0x6000C76")]
			[Address(RVA = "0x1179994", Offset = "0x1179994", VA = "0x1179994")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700018D")]
		public bool IsVisible
		{
			[Token(Token = "0x6000C77")]
			[Address(RVA = "0x11829C0", Offset = "0x11829C0", VA = "0x11829C0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700018E")]
		public Transform Trans
		{
			[Token(Token = "0x6000C78")]
			[Address(RVA = "0x11795DC", Offset = "0x11795DC", VA = "0x11795DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018F")]
		private bool IsSetToUGUI
		{
			[Token(Token = "0x6000C79")]
			[Address(RVA = "0x11776FC", Offset = "0x11776FC", VA = "0x11776FC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000190")]
		private bool IsSetToLegacyUI
		{
			[Token(Token = "0x6000C7A")]
			[Address(RVA = "0x117E9D0", Offset = "0x117E9D0", VA = "0x117E9D0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000191")]
		private bool HasActiveSpawningWave
		{
			[Token(Token = "0x6000C7B")]
			[Address(RVA = "0x1179B24", Offset = "0x1179B24", VA = "0x1179B24")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000192")]
		public bool SpawnerIsActive
		{
			[Token(Token = "0x6000C7C")]
			[Address(RVA = "0x1179CE8", Offset = "0x1179CE8", VA = "0x1179CE8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0x11775C8", Offset = "0x11775C8", VA = "0x11775C8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C0B")]
		[Address(RVA = "0x117794C", Offset = "0x117794C", VA = "0x117794C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C0C")]
		[Address(RVA = "0x1179688", Offset = "0x1179688", VA = "0x1179688")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C0D")]
		[Address(RVA = "0x117A9C8", Offset = "0x117A9C8", VA = "0x117A9C8")]
		private void PropagateEventToChildSpawners(EventType eType)
		{
		}

		[Token(Token = "0x6000C0E")]
		[Address(RVA = "0x117AB00", Offset = "0x117AB00", VA = "0x117AB00")]
		public void PropagateEventTrigger(EventType eType, Transform transmitterTrans, bool calledFromInspector = false)
		{
		}

		[Token(Token = "0x6000C0F")]
		[Address(RVA = "0x117AFA4", Offset = "0x117AFA4", VA = "0x117AFA4")]
		public void ActivateCodeTriggeredEvent1()
		{
		}

		[Token(Token = "0x6000C10")]
		[Address(RVA = "0x117B09C", Offset = "0x117B09C", VA = "0x117B09C")]
		public void ActivateCodeTriggeredEvent2()
		{
		}

		[Token(Token = "0x6000C11")]
		[Address(RVA = "0x117E28C", Offset = "0x117E28C", VA = "0x117E28C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C12")]
		[Address(RVA = "0x117B964", Offset = "0x117B964", VA = "0x117B964")]
		private void _EnableEvent(bool calledFromSelf)
		{
		}

		[Token(Token = "0x6000C13")]
		[Address(RVA = "0x117E7C0", Offset = "0x117E7C0", VA = "0x117E7C0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000C14")]
		[Address(RVA = "0x117B828", Offset = "0x117B828", VA = "0x117B828")]
		private void _DisableEvent(bool calledFromSelf)
		{
		}

		[Token(Token = "0x6000C15")]
		[Address(RVA = "0x117E7C8", Offset = "0x117E7C8", VA = "0x117E7C8")]
		private void OnSpawned()
		{
		}

		[Token(Token = "0x6000C16")]
		[Address(RVA = "0x117BB0C", Offset = "0x117BB0C", VA = "0x117BB0C")]
		private void _OnSpawned(bool calledFromSelf)
		{
		}

		[Token(Token = "0x6000C17")]
		[Address(RVA = "0x117E878", Offset = "0x117E878", VA = "0x117E878")]
		private void OnDespawned()
		{
		}

		[Token(Token = "0x6000C18")]
		[Address(RVA = "0x117B700", Offset = "0x117B700", VA = "0x117B700")]
		private void _OnDespawned(bool calledFromSelf)
		{
		}

		[Token(Token = "0x6000C19")]
		[Address(RVA = "0x117E918", Offset = "0x117E918", VA = "0x117E918")]
		private void OnBecameVisible()
		{
		}

		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0x117BE64", Offset = "0x117BE64", VA = "0x117BE64")]
		private void _OnBecameVisible(bool calledFromSelf)
		{
		}

		[Token(Token = "0x6000C1B")]
		[Address(RVA = "0x117E92C", Offset = "0x117E92C", VA = "0x117E92C")]
		private void OnBecameInvisible()
		{
		}

		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0x117B194", Offset = "0x117B194", VA = "0x117B194")]
		private void _OnBecameInvisible(bool calledFromSelf)
		{
		}

		[Token(Token = "0x6000C1D")]
		[Address(RVA = "0x117E9C8", Offset = "0x117E9C8", VA = "0x117E9C8")]
		private void OnMouseEnter()
		{
		}

		[Token(Token = "0x6000C1E")]
		[Address(RVA = "0x117B3E0", Offset = "0x117B3E0", VA = "0x117B3E0")]
		private void _OnMouseEnter(bool calledFromSelf)
		{
		}

		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0x117E9E0", Offset = "0x117E9E0", VA = "0x117E9E0")]
		private void OnMouseDown()
		{
		}

		[Token(Token = "0x6000C20")]
		[Address(RVA = "0x117B2D0", Offset = "0x117B2D0", VA = "0x117B2D0")]
		private void _OnMouseDown(bool calledFromSelf)
		{
		}

		[Token(Token = "0x6000C21")]
		[Address(RVA = "0x117E9E8", Offset = "0x117E9E8", VA = "0x117E9E8")]
		private void OnClick()
		{
		}

		[Token(Token = "0x6000C22")]
		[Address(RVA = "0x117B4F0", Offset = "0x117B4F0", VA = "0x117B4F0")]
		private void _OnClick(bool calledFromSelf)
		{
		}

		[Token(Token = "0x6000C23")]
		[Address(RVA = "0x117E9F0", Offset = "0x117E9F0", VA = "0x117E9F0")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6000C24")]
		[Address(RVA = "0x117B5F8", Offset = "0x117B5F8", VA = "0x117B5F8")]
		private void _OnCollisionEnter(bool calledFromSelf)
		{
		}

		[Token(Token = "0x6000C25")]
		[Address(RVA = "0x117EAF8", Offset = "0x117EAF8", VA = "0x117EAF8")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000C26")]
		[Address(RVA = "0x117BC34", Offset = "0x117BC34", VA = "0x117BC34")]
		private void _OnTriggerEnter(bool calledFromSelf)
		{
		}

		[Token(Token = "0x6000C27")]
		[Address(RVA = "0x117EC74", Offset = "0x117EC74", VA = "0x117EC74")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000C28")]
		[Address(RVA = "0x117BD4C", Offset = "0x117BD4C", VA = "0x117BD4C")]
		private void _OnTriggerExit(bool calledFromSelf)
		{
		}

		[Token(Token = "0x6000C29")]
		[Address(RVA = "0x117EDF0", Offset = "0x117EDF0", VA = "0x117EDF0")]
		private void OnCollisionEnter2D(Collision2D collision)
		{
		}

		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0x117BF94", Offset = "0x117BF94", VA = "0x117BF94")]
		private void _OnCollision2dEnter(bool calledFromSelf)
		{
		}

		[Token(Token = "0x6000C2B")]
		[Address(RVA = "0x117EEF8", Offset = "0x117EEF8", VA = "0x117EEF8")]
		private void OnTriggerEnter2D(Collider2D other)
		{
		}

		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0x117C09C", Offset = "0x117C09C", VA = "0x117C09C")]
		private void _OnTriggerEnter2D(bool calledFromSelf)
		{
		}

		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0x117F074", Offset = "0x117F074", VA = "0x117F074")]
		private void OnTriggerExit2D(Collider2D other)
		{
		}

		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0x117C1B4", Offset = "0x117C1B4", VA = "0x117C1B4")]
		private void _OnTriggerExit2D(bool calledFromSelf)
		{
		}

		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0x117F1F0", Offset = "0x117F1F0", VA = "0x117F1F0")]
		public void OnPointerEnter(PointerEventData data)
		{
		}

		[Token(Token = "0x6000C30")]
		[Address(RVA = "0x117C6DC", Offset = "0x117C6DC", VA = "0x117C6DC")]
		private void _OnPointerEnter(bool calledFromSelf)
		{
		}

		[Token(Token = "0x6000C31")]
		[Address(RVA = "0x117F1F8", Offset = "0x117F1F8", VA = "0x117F1F8")]
		public void OnPointerExit(PointerEventData data)
		{
		}

		[Token(Token = "0x6000C32")]
		[Address(RVA = "0x117C7DC", Offset = "0x117C7DC", VA = "0x117C7DC")]
		private void _OnPointerExit(bool calledFromSelf)
		{
		}

		[Token(Token = "0x6000C33")]
		[Address(RVA = "0x117F200", Offset = "0x117F200", VA = "0x117F200")]
		public void OnPointerDown(PointerEventData data)
		{
		}

		[Token(Token = "0x6000C34")]
		[Address(RVA = "0x117C4DC", Offset = "0x117C4DC", VA = "0x117C4DC")]
		private void _OnPointerDown(bool calledFromSelf)
		{
		}

		[Token(Token = "0x6000C35")]
		[Address(RVA = "0x117F208", Offset = "0x117F208", VA = "0x117F208")]
		public void OnPointerUp(PointerEventData data)
		{
		}

		[Token(Token = "0x6000C36")]
		[Address(RVA = "0x117C5DC", Offset = "0x117C5DC", VA = "0x117C5DC")]
		private void _OnPointerUp(bool calledFromSelf)
		{
		}

		[Token(Token = "0x6000C37")]
		[Address(RVA = "0x117F210", Offset = "0x117F210", VA = "0x117F210")]
		public void OnDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x6000C38")]
		[Address(RVA = "0x117C8DC", Offset = "0x117C8DC", VA = "0x117C8DC")]
		private void _OnDrag(bool calledFromSelf)
		{
		}

		[Token(Token = "0x6000C39")]
		[Address(RVA = "0x117F218", Offset = "0x117F218", VA = "0x117F218")]
		public void OnDrop(PointerEventData data)
		{
		}

		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0x117C9DC", Offset = "0x117C9DC", VA = "0x117C9DC")]
		private void _OnDrop(bool calledFromSelf)
		{
		}

		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0x117F220", Offset = "0x117F220", VA = "0x117F220")]
		public void OnScroll(PointerEventData data)
		{
		}

		[Token(Token = "0x6000C3C")]
		[Address(RVA = "0x117CADC", Offset = "0x117CADC", VA = "0x117CADC")]
		private void _OnScroll(bool calledFromSelf)
		{
		}

		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0x117F228", Offset = "0x117F228", VA = "0x117F228")]
		public void OnUpdateSelected(BaseEventData data)
		{
		}

		[Token(Token = "0x6000C3E")]
		[Address(RVA = "0x117CBDC", Offset = "0x117CBDC", VA = "0x117CBDC")]
		private void _OnUpdateSelected(bool calledFromSelf)
		{
		}

		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0x117F230", Offset = "0x117F230", VA = "0x117F230")]
		public void OnSelect(BaseEventData data)
		{
		}

		[Token(Token = "0x6000C40")]
		[Address(RVA = "0x117CCDC", Offset = "0x117CCDC", VA = "0x117CCDC")]
		private void _OnSelect(bool calledFromSelf)
		{
		}

		[Token(Token = "0x6000C41")]
		[Address(RVA = "0x117F238", Offset = "0x117F238", VA = "0x117F238")]
		public void OnDeselect(BaseEventData data)
		{
		}

		[Token(Token = "0x6000C42")]
		[Address(RVA = "0x117CDDC", Offset = "0x117CDDC", VA = "0x117CDDC")]
		private void _OnDeselect(bool calledFromSelf)
		{
		}

		[Token(Token = "0x6000C43")]
		[Address(RVA = "0x117F240", Offset = "0x117F240", VA = "0x117F240")]
		public void OnMove(AxisEventData data)
		{
		}

		[Token(Token = "0x6000C44")]
		[Address(RVA = "0x117CEDC", Offset = "0x117CEDC", VA = "0x117CEDC")]
		private void _OnMove(bool calledFromSelf)
		{
		}

		[Token(Token = "0x6000C45")]
		[Address(RVA = "0x117F248", Offset = "0x117F248", VA = "0x117F248")]
		public void OnInitializePotentialDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x6000C46")]
		[Address(RVA = "0x117CFDC", Offset = "0x117CFDC", VA = "0x117CFDC")]
		private void _OnInitializePotentialDrag(bool calledFromSelf)
		{
		}

		[Token(Token = "0x6000C47")]
		[Address(RVA = "0x117F250", Offset = "0x117F250", VA = "0x117F250")]
		public void OnBeginDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x6000C48")]
		[Address(RVA = "0x117D0DC", Offset = "0x117D0DC", VA = "0x117D0DC")]
		private void _OnBeginDrag(bool calledFromSelf)
		{
		}

		[Token(Token = "0x6000C49")]
		[Address(RVA = "0x117F258", Offset = "0x117F258", VA = "0x117F258")]
		public void OnEndDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0x117D1DC", Offset = "0x117D1DC", VA = "0x117D1DC")]
		private void _OnEndDrag(bool calledFromSelf)
		{
		}

		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0x117F260", Offset = "0x117F260", VA = "0x117F260")]
		public void OnSubmit(BaseEventData data)
		{
		}

		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0x117D2DC", Offset = "0x117D2DC", VA = "0x117D2DC")]
		private void _OnSubmit(bool calledFromSelf)
		{
		}

		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0x117F268", Offset = "0x117F268", VA = "0x117F268")]
		public void OnCancel(BaseEventData data)
		{
		}

		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0x117D3DC", Offset = "0x117D3DC", VA = "0x117D3DC")]
		private void _OnCancel(bool calledFromSelf)
		{
		}

		[Token(Token = "0x6000C4F")]
		[Address(RVA = "0x117F270", Offset = "0x117F270", VA = "0x117F270")]
		private void SliderChanged(float newValue)
		{
		}

		[Token(Token = "0x6000C50")]
		[Address(RVA = "0x117C2CC", Offset = "0x117C2CC", VA = "0x117C2CC")]
		private void _SliderChanged(bool calledFromSelf)
		{
		}

		[Token(Token = "0x6000C51")]
		[Address(RVA = "0x117F278", Offset = "0x117F278", VA = "0x117F278")]
		private void ButtonClicked()
		{
		}

		[Token(Token = "0x6000C52")]
		[Address(RVA = "0x117C3CC", Offset = "0x117C3CC", VA = "0x117C3CC")]
		private void _ButtonClicked(bool calledFromSelf)
		{
		}

		[Token(Token = "0x6000C53")]
		[Address(RVA = "0x117F280", Offset = "0x117F280", VA = "0x117F280")]
		public static List<TriggeredSpawner> GetChildSpawners(Transform trans)
		{
			return null;
		}

		[Token(Token = "0x6000C54")]
		[Address(RVA = "0x117F3D4", Offset = "0x117F3D4", VA = "0x117F3D4")]
		public bool HasActiveWaveOfType(EventType eType, string customEventName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C55")]
		[Address(RVA = "0x117E3F0", Offset = "0x117E3F0", VA = "0x117E3F0")]
		public void EndWave(EventType eType, string customEventName)
		{
		}

		[Token(Token = "0x6000C56")]
		[Address(RVA = "0x117F7AC", Offset = "0x117F7AC", VA = "0x117F7AC")]
		public bool IsUsingPrefabPool(Transform poolTrans)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C57")]
		[Address(RVA = "0x117FEE8", Offset = "0x117FEE8", VA = "0x117FEE8")]
		public void SpawnWaveVisual(TriggeredWaveSpecifics wave)
		{
		}

		[Token(Token = "0x6000C58")]
		[Address(RVA = "0x11801AC", Offset = "0x11801AC", VA = "0x11801AC")]
		private static Vector3 GetSpawnPositionForVisualization(TriggeredWaveSpecifics wave, Vector3 pos, int itemSpawnedIndex)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C59")]
		[Address(RVA = "0x1180568", Offset = "0x1180568", VA = "0x1180568")]
		private static Quaternion GetSpawnRotationForVisualization(TriggeredWaveSpecifics wave, Transform spawner, int itemSpawnedIndex)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0x11808FC", Offset = "0x11808FC", VA = "0x11808FC")]
		private void AfterSpawnForVisualization(TriggeredWaveSpecifics wave, Transform spawnedTrans)
		{
		}

		[Token(Token = "0x6000C5B")]
		[Address(RVA = "0x1180A78", Offset = "0x1180A78", VA = "0x1180A78", Slot = "6")]
		protected virtual Transform SpawnWaveItem(Transform prefabToSpawn, Vector3 spawnPosition, Quaternion rotation)
		{
			return null;
		}

		[Token(Token = "0x6000C5C")]
		[Address(RVA = "0x1180BA0", Offset = "0x1180BA0", VA = "0x1180BA0", Slot = "7")]
		protected virtual void DespawnSpawner()
		{
		}

		[Token(Token = "0x6000C5D")]
		[Address(RVA = "0x1180C1C", Offset = "0x1180C1C", VA = "0x1180C1C", Slot = "8")]
		protected virtual void SpawnedOrAwake()
		{
		}

		[Token(Token = "0x6000C5E")]
		[Address(RVA = "0x1180ED4", Offset = "0x1180ED4", VA = "0x1180ED4", Slot = "9")]
		protected virtual Transform GetSpawnable(TriggeredWaveMetaData wave)
		{
			return null;
		}

		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0x1180F24", Offset = "0x1180F24", VA = "0x1180F24", Slot = "10")]
		protected virtual bool CanSpawnOne()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C60")]
		[Address(RVA = "0x1180F2C", Offset = "0x1180F2C", VA = "0x1180F2C", Slot = "11")]
		protected virtual Vector3 GetSpawnPosition(Vector3 pos, int itemSpawnedIndex, TriggeredWaveMetaData wave)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C61")]
		[Address(RVA = "0x1181398", Offset = "0x1181398", VA = "0x1181398", Slot = "12")]
		protected virtual Quaternion GetSpawnRotation(Transform prefabToSpawn, int itemSpawnedIndex, TriggeredWaveMetaData wave)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000C62")]
		[Address(RVA = "0x118177C", Offset = "0x118177C", VA = "0x118177C", Slot = "13")]
		protected virtual void AfterSpawn(Transform spawnedTrans, TriggeredWaveMetaData wave, EventType eType)
		{
		}

		[Token(Token = "0x6000C63")]
		[Address(RVA = "0x1181A7C", Offset = "0x1181A7C", VA = "0x1181A7C", Slot = "14")]
		public virtual void CheckForIllegalCustomEvents()
		{
		}

		[Token(Token = "0x6000C64")]
		[Address(RVA = "0x1181DA0", Offset = "0x1181DA0", VA = "0x1181DA0", Slot = "15")]
		public virtual void ReceiveEvent(string customEventName, Vector3 eventOrigin)
		{
		}

		[Token(Token = "0x6000C65")]
		[Address(RVA = "0x1182038", Offset = "0x1182038", VA = "0x1182038", Slot = "16")]
		public virtual bool SubscribesToEvent(string customEventName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C66")]
		[Address(RVA = "0x1182108", Offset = "0x1182108", VA = "0x1182108", Slot = "17")]
		public virtual void RegisterReceiver()
		{
		}

		[Token(Token = "0x6000C67")]
		[Address(RVA = "0x11821A8", Offset = "0x11821A8", VA = "0x11821A8", Slot = "18")]
		public virtual void UnregisterReceiver()
		{
		}

		[Token(Token = "0x6000C68")]
		[Address(RVA = "0x117770C", Offset = "0x117770C", VA = "0x117770C")]
		private void AddUGUIComponents()
		{
		}

		[Token(Token = "0x6000C69")]
		private void AddUGUIHandler<T>(bool useEvent) where T : TriggeredSpawnerUGUIHandler
		{
		}

		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0x117D4DC", Offset = "0x117D4DC", VA = "0x117D4DC")]
		private bool IsWaveValid(TriggeredWaveSpecifics wave, EventType eType, bool calledFromSelf)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0x1182234", Offset = "0x1182234", VA = "0x1182234")]
		private bool CanRepeatWave(TriggeredWaveMetaData wave)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0x117F674", Offset = "0x117F674", VA = "0x117F674")]
		private void PropagateEndWaveToChildSpawners(EventType eType, string customEventName)
		{
		}

		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0x1179F60", Offset = "0x1179F60", VA = "0x1179F60")]
		private void SpawnFromWaveMeta(TriggeredWaveMetaData wave, EventType eType)
		{
		}

		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0x1182524", Offset = "0x1182524", VA = "0x1182524")]
		private void AfterSpawnWave(TriggeredWaveMetaData newWave)
		{
		}

		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0x117D764", Offset = "0x117D764", VA = "0x117D764")]
		private bool SetupNextWave(TriggeredWaveSpecifics newWave, EventType eventType, int repetitionNumber = 0, int repetitionNumberWithReset = 0)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C70")]
		[Address(RVA = "0x1181B14", Offset = "0x1181B14", VA = "0x1181B14")]
		private void LogIfCustomEventMissing(TriggeredWaveSpecifics eventGroup)
		{
		}

		[Token(Token = "0x6000C71")]
		[Address(RVA = "0x1177C2C", Offset = "0x1177C2C", VA = "0x1177C2C")]
		private void CheckForValidVariablesForWave(TriggeredWaveSpecifics wave, EventType eType)
		{
		}

		[Token(Token = "0x6000C72")]
		[Address(RVA = "0x117FEA0", Offset = "0x117FEA0", VA = "0x117FEA0")]
		private static bool WaveIsUsingPrefabPool(TriggeredWaveSpecifics spec, string poolName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C73")]
		[Address(RVA = "0x117E934", Offset = "0x117E934", VA = "0x117E934")]
		private void StopOppositeWaveIfActive(TriggeredWaveSpecifics wave, EventType eType)
		{
		}

		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0x11829C8", Offset = "0x11829C8", VA = "0x11829C8")]
		public TriggeredSpawner()
		{
		}
	}
	[Token(Token = "0x20001EA")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE21BBC", Offset = "0xE21BBC")]
	public class TriggeredSpawnerListener : MonoBehaviour
	{
		[Token(Token = "0x4000D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string sourceSpawnerName;

		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0x118403C", Offset = "0x118403C", VA = "0x118403C")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0x1184108", Offset = "0x1184108", VA = "0x1184108", Slot = "4")]
		public virtual void EventPropagating(TriggeredSpawner.EventType eType, Transform transmitterTrans, int receiverSpawnerCount)
		{
		}

		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0x118410C", Offset = "0x118410C", VA = "0x118410C", Slot = "5")]
		public virtual void PropagatedEventReceived(TriggeredSpawner.EventType eType, Transform transmitterTrans)
		{
		}

		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0x1184110", Offset = "0x1184110", VA = "0x1184110", Slot = "6")]
		public virtual void WaveEndedEarly(TriggeredSpawner.EventType eType)
		{
		}

		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0x1184114", Offset = "0x1184114", VA = "0x1184114", Slot = "7")]
		public virtual void PropagatedWaveEndedEarly(TriggeredSpawner.EventType eType, string customEventName, Transform transmitterTrans, int receiverSpawnerCount)
		{
		}

		[Token(Token = "0x6000CA7")]
		[Address(RVA = "0x1184118", Offset = "0x1184118", VA = "0x1184118", Slot = "8")]
		public virtual void ItemFailedToSpawn(TriggeredSpawner.EventType eType, Transform failedPrefabTrans)
		{
		}

		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0x118411C", Offset = "0x118411C", VA = "0x118411C", Slot = "9")]
		public virtual void ItemSpawned(TriggeredSpawner.EventType eType, Transform spawnedTrans)
		{
		}

		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0x1184120", Offset = "0x1184120", VA = "0x1184120", Slot = "10")]
		public virtual void WaveFinishedSpawning(TriggeredSpawner.EventType eType, TriggeredWaveSpecifics spec)
		{
		}

		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0x1184124", Offset = "0x1184124", VA = "0x1184124", Slot = "11")]
		public virtual void WaveEliminated(TriggeredSpawner.EventType eType, TriggeredWaveSpecifics spec)
		{
		}

		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0x1184128", Offset = "0x1184128", VA = "0x1184128", Slot = "12")]
		public virtual void WaveStart(TriggeredSpawner.EventType eType, TriggeredWaveSpecifics spec)
		{
		}

		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0x118412C", Offset = "0x118412C", VA = "0x118412C", Slot = "13")]
		public virtual void WaveRepeat(TriggeredSpawner.EventType eType, TriggeredWaveSpecifics spec)
		{
		}

		[Token(Token = "0x6000CAD")]
		[Address(RVA = "0x1184130", Offset = "0x1184130", VA = "0x1184130", Slot = "14")]
		public virtual void SpawnerDespawning(Transform transDespawning)
		{
		}

		[Token(Token = "0x6000CAE")]
		[Address(RVA = "0x1184134", Offset = "0x1184134", VA = "0x1184134", Slot = "15")]
		public virtual void CustomEventReceived(string customEventName, Vector3 eventOrigin)
		{
		}

		[Token(Token = "0x6000CAF")]
		[Address(RVA = "0x1184138", Offset = "0x1184138", VA = "0x1184138", Slot = "16")]
		public virtual void Spawned(MonoBehaviour spawner)
		{
		}

		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0x118413C", Offset = "0x118413C", VA = "0x118413C", Slot = "17")]
		public virtual void Despawned(MonoBehaviour spawner)
		{
		}

		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0x1184140", Offset = "0x1184140", VA = "0x1184140")]
		public TriggeredSpawnerListener()
		{
		}
	}
	[Token(Token = "0x20001EB")]
	[AttributeAttribute(Name = "CoreScriptOrder", RVA = "0xE21BF4", Offset = "0xE21BF4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE21BF4", Offset = "0xE21BF4")]
	public class TriggeredSpawnerV2 : MonoBehaviour, ICgkEventReceiver
	{
		[Token(Token = "0x20001EC")]
		public enum RepeatWaitFor
		{
			[Token(Token = "0x4000DCC")]
			ItemsDoneSpawning,
			[Token(Token = "0x4000DCD")]
			ItemsEliminated
		}

		[Token(Token = "0x20001ED")]
		public class TriggeredSpawnerUGUIHandler : MonoBehaviour
		{
			[Token(Token = "0x4000DCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2AD1C", Offset = "0xE2AD1C")]
			private TriggeredSpawnerV2 <trigSpawner>k__BackingField;

			[Token(Token = "0x1700019E")]
			public TriggeredSpawnerV2 trigSpawner
			{
				[Token(Token = "0x6000D39")]
				[Address(RVA = "0xEFC0A0", Offset = "0xEFC0A0", VA = "0xEFC0A0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2EE74", Offset = "0xE2EE74")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000D3A")]
				[Address(RVA = "0xEFC0A8", Offset = "0xEFC0A8", VA = "0xEFC0A8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xE2EE84", Offset = "0xE2EE84")]
				set
				{
				}
			}

			[Token(Token = "0x6000D3B")]
			[Address(RVA = "0xEFB6F8", Offset = "0xEFB6F8", VA = "0xEFB6F8")]
			public TriggeredSpawnerUGUIHandler()
			{
			}
		}

		[Token(Token = "0x20001EE")]
		public class TriggeredSpawnerPointerEnterHandler : TriggeredSpawnerUGUIHandler, IPointerEnterHandler, IEventSystemHandler
		{
			[Token(Token = "0x6000D3C")]
			[Address(RVA = "0xEFBC80", Offset = "0xEFBC80", VA = "0xEFBC80", Slot = "4")]
			public void OnPointerEnter(PointerEventData data)
			{
			}

			[Token(Token = "0x6000D3D")]
			[Address(RVA = "0xEFBD28", Offset = "0xEFBD28", VA = "0xEFBD28")]
			public TriggeredSpawnerPointerEnterHandler()
			{
			}
		}

		[Token(Token = "0x20001EF")]
		public class TriggeredSpawnerPointerExitHandler : TriggeredSpawnerUGUIHandler, IPointerExitHandler, IEventSystemHandler
		{
			[Token(Token = "0x6000D3E")]
			[Address(RVA = "0xEFBD30", Offset = "0xEFBD30", VA = "0xEFBD30", Slot = "4")]
			public void OnPointerExit(PointerEventData data)
			{
			}

			[Token(Token = "0x6000D3F")]
			[Address(RVA = "0xEFBDD8", Offset = "0xEFBDD8", VA = "0xEFBDD8")]
			public TriggeredSpawnerPointerExitHandler()
			{
			}
		}

		[Token(Token = "0x20001F0")]
		public class TriggeredSpawnerPointerDownHandler : TriggeredSpawnerUGUIHandler, IPointerDownHandler, IEventSystemHandler
		{
			[Token(Token = "0x6000D40")]
			[Address(RVA = "0xEFBBD0", Offset = "0xEFBBD0", VA = "0xEFBBD0", Slot = "4")]
			public void OnPointerDown(PointerEventData data)
			{
			}

			[Token(Token = "0x6000D41")]
			[Address(RVA = "0xEFBC78", Offset = "0xEFBC78", VA = "0xEFBC78")]
			public TriggeredSpawnerPointerDownHandler()
			{
			}
		}

		[Token(Token = "0x20001F1")]
		public class TriggeredSpawnerPointerUpHandler : TriggeredSpawnerUGUIHandler, IPointerUpHandler, IEventSystemHandler
		{
			[Token(Token = "0x6000D42")]
			[Address(RVA = "0xEFBDE0", Offset = "0xEFBDE0", VA = "0xEFBDE0", Slot = "4")]
			public void OnPointerUp(PointerEventData data)
			{
			}

			[Token(Token = "0x6000D43")]
			[Address(RVA = "0xEFBE88", Offset = "0xEFBE88", VA = "0xEFBE88")]
			public TriggeredSpawnerPointerUpHandler()
			{
			}
		}

		[Token(Token = "0x20001F2")]
		public class TriggeredSpawnerDragHandler : TriggeredSpawnerUGUIHandler, IDragHandler, IEventSystemHandler
		{
			[Token(Token = "0x6000D44")]
			[Address(RVA = "0xEFB860", Offset = "0xEFB860", VA = "0xEFB860", Slot = "4")]
			public void OnDrag(PointerEventData data)
			{
			}

			[Token(Token = "0x6000D45")]
			[Address(RVA = "0xEFB908", Offset = "0xEFB908", VA = "0xEFB908")]
			public TriggeredSpawnerDragHandler()
			{
			}
		}

		[Token(Token = "0x20001F3")]
		public class TriggeredSpawnerDropHandler : TriggeredSpawnerUGUIHandler, IDropHandler, IEventSystemHandler
		{
			[Token(Token = "0x6000D46")]
			[Address(RVA = "0xEFB910", Offset = "0xEFB910", VA = "0xEFB910", Slot = "4")]
			public void OnDrop(PointerEventData data)
			{
			}

			[Token(Token = "0x6000D47")]
			[Address(RVA = "0xEFB9B8", Offset = "0xEFB9B8", VA = "0xEFB9B8")]
			public TriggeredSpawnerDropHandler()
			{
			}
		}

		[Token(Token = "0x20001F4")]
		public class TriggeredSpawnerScrollHandler : TriggeredSpawnerUGUIHandler, IScrollHandler, IEventSystemHandler
		{
			[Token(Token = "0x6000D48")]
			[Address(RVA = "0xEFBE90", Offset = "0xEFBE90", VA = "0xEFBE90", Slot = "4")]
			public void OnScroll(PointerEventData data)
			{
			}

			[Token(Token = "0x6000D49")]
			[Address(RVA = "0xEFBF38", Offset = "0xEFBF38", VA = "0xEFBF38")]
			public TriggeredSpawnerScrollHandler()
			{
			}
		}

		[Token(Token = "0x20001F5")]
		public class TriggeredSpawnerUpdateSelectedHandler : TriggeredSpawnerUGUIHandler, IUpdateSelectedHandler, IEventSystemHandler
		{
			[Token(Token = "0x6000D4A")]
			[Address(RVA = "0xEFC0B0", Offset = "0xEFC0B0", VA = "0xEFC0B0", Slot = "4")]
			public void OnUpdateSelected(BaseEventData data)
			{
			}

			[Token(Token = "0x6000D4B")]
			[Address(RVA = "0xEFC158", Offset = "0xEFC158", VA = "0xEFC158")]
			public TriggeredSpawnerUpdateSelectedHandler()
			{
			}
		}

		[Token(Token = "0x20001F6")]
		public class TriggeredSpawnerSelectHandler : TriggeredSpawnerUGUIHandler, ISelectHandler, IEventSystemHandler
		{
			[Token(Token = "0x6000D4C")]
			[Address(RVA = "0xEFBF40", Offset = "0xEFBF40", VA = "0xEFBF40", Slot = "4")]
			public void OnSelect(BaseEventData data)
			{
			}

			[Token(Token = "0x6000D4D")]
			[Address(RVA = "0xEFBFE8", Offset = "0xEFBFE8", VA = "0xEFBFE8")]
			public TriggeredSpawnerSelectHandler()
			{
			}
		}

		[Token(Token = "0x20001F7")]
		public class TriggeredSpawnerDeselectHandler : TriggeredSpawnerUGUIHandler, IDeselectHandler, IEventSystemHandler
		{
			[Token(Token = "0x6000D4E")]
			[Address(RVA = "0xEFB7B0", Offset = "0xEFB7B0", VA = "0xEFB7B0", Slot = "4")]
			public void OnDeselect(BaseEventData data)
			{
			}

			[Token(Token = "0x6000D4F")]
			[Address(RVA = "0xEFB858", Offset = "0xEFB858", VA = "0xEFB858")]
			public TriggeredSpawnerDeselectHandler()
			{
			}
		}

		[Token(Token = "0x20001F8")]
		public class TriggeredSpawnerMoveHandler : TriggeredSpawnerUGUIHandler, IMoveHandler, IEventSystemHandler
		{
			[Token(Token = "0x6000D50")]
			[Address(RVA = "0xEFBB20", Offset = "0xEFBB20", VA = "0xEFBB20", Slot = "4")]
			public void OnMove(AxisEventData data)
			{
			}

			[Token(Token = "0x6000D51")]
			[Address(RVA = "0xEFBBC8", Offset = "0xEFBBC8", VA = "0xEFBBC8")]
			public TriggeredSpawnerMoveHandler()
			{
			}
		}

		[Token(Token = "0x20001F9")]
		public class TriggeredSpawnerInitializePotentialDragHandler : TriggeredSpawnerUGUIHandler, IInitializePotentialDragHandler, IEventSystemHandler
		{
			[Token(Token = "0x6000D52")]
			[Address(RVA = "0xEFBA70", Offset = "0xEFBA70", VA = "0xEFBA70", Slot = "4")]
			public void OnInitializePotentialDrag(PointerEventData data)
			{
			}

			[Token(Token = "0x6000D53")]
			[Address(RVA = "0xEFBB18", Offset = "0xEFBB18", VA = "0xEFBB18")]
			public TriggeredSpawnerInitializePotentialDragHandler()
			{
			}
		}

		[Token(Token = "0x20001FA")]
		public class TriggeredSpawnerBeginDragHandler : TriggeredSpawnerUGUIHandler, IBeginDragHandler, IEventSystemHandler
		{
			[Token(Token = "0x6000D54")]
			[Address(RVA = "0xEFB648", Offset = "0xEFB648", VA = "0xEFB648", Slot = "4")]
			public void OnBeginDrag(PointerEventData data)
			{
			}

			[Token(Token = "0x6000D55")]
			[Address(RVA = "0xEFB6F0", Offset = "0xEFB6F0", VA = "0xEFB6F0")]
			public TriggeredSpawnerBeginDragHandler()
			{
			}
		}

		[Token(Token = "0x20001FB")]
		public class TriggeredSpawnerEndDragHandler : TriggeredSpawnerUGUIHandler, IEndDragHandler, IEventSystemHandler
		{
			[Token(Token = "0x6000D56")]
			[Address(RVA = "0xEFB9C0", Offset = "0xEFB9C0", VA = "0xEFB9C0", Slot = "4")]
			public void OnEndDrag(PointerEventData data)
			{
			}

			[Token(Token = "0x6000D57")]
			[Address(RVA = "0xEFBA68", Offset = "0xEFBA68", VA = "0xEFBA68")]
			public TriggeredSpawnerEndDragHandler()
			{
			}
		}

		[Token(Token = "0x20001FC")]
		public class TriggeredSpawnerSubmitHandler : TriggeredSpawnerUGUIHandler, ISubmitHandler, IEventSystemHandler
		{
			[Token(Token = "0x6000D58")]
			[Address(RVA = "0xEFBFF0", Offset = "0xEFBFF0", VA = "0xEFBFF0", Slot = "4")]
			public void OnSubmit(BaseEventData data)
			{
			}

			[Token(Token = "0x6000D59")]
			[Address(RVA = "0xEFC098", Offset = "0xEFC098", VA = "0xEFC098")]
			public TriggeredSpawnerSubmitHandler()
			{
			}
		}

		[Token(Token = "0x20001FD")]
		public class TriggeredSpawnerCancelHandler : TriggeredSpawnerUGUIHandler, ICancelHandler, IEventSystemHandler
		{
			[Token(Token = "0x6000D5A")]
			[Address(RVA = "0xEFB700", Offset = "0xEFB700", VA = "0xEFB700", Slot = "4")]
			public void OnCancel(BaseEventData data)
			{
			}

			[Token(Token = "0x6000D5B")]
			[Address(RVA = "0xEFB7A8", Offset = "0xEFB7A8", VA = "0xEFB7A8")]
			public TriggeredSpawnerCancelHandler()
			{
			}
		}

		[Token(Token = "0x4000D62")]
		public const int MaxDistance = 5000;

		[Token(Token = "0x4000D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TriggeredSpawner.Unity_UIVersion unityUIMode;

		[Token(Token = "0x4000D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static List<TriggeredSpawner.EventType> eventsThatCanRepeatWave;

		[Token(Token = "0x4000D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static List<TriggeredSpawner.EventType> eventsWithTagLayerFilters;

		[Token(Token = "0x4000D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static List<TriggeredSpawner.EventType> eventsWithInflexibleWaveLength;

		[Token(Token = "0x4000D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static List<TriggeredSpawner.EventType> eventsThatCanTriggerDespawn;

		[Token(Token = "0x4000D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool logMissingEvents;

		[Token(Token = "0x4000D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelSettings.ActiveItemMode activeMode;

		[Token(Token = "0x4000D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public WorldVariableRangeCollection activeItemCriteria;

		[Token(Token = "0x4000D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TriggeredSpawner.GameOverBehavior gameOverBehavior;

		[Token(Token = "0x4000D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public TriggeredSpawner.WavePauseBehavior wavePauseBehavior;

		[Token(Token = "0x4000D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TriggeredSpawner.SpawnerEventSource eventSourceType;

		[Token(Token = "0x4000D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool transmitEventsToChildren;

		[Token(Token = "0x4000D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		public bool spawnOutsidePool;

		[Token(Token = "0x4000D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public WaveSyncroPrefabSpawner.SpawnLayerTagMode spawnLayerMode;

		[Token(Token = "0x4000D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public WaveSyncroPrefabSpawner.SpawnLayerTagMode spawnTagMode;

		[Token(Token = "0x4000D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int spawnCustomLayer;

		[Token(Token = "0x4000D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string spawnCustomTag;

		[Token(Token = "0x4000D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool applyLayerRecursively;

		[Token(Token = "0x4000D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public TriggeredSpawnerListener listener;

		[Token(Token = "0x4000D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<TriggeredWaveSpecifics> enableWaves;

		[Token(Token = "0x4000D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<TriggeredWaveSpecifics> disableWaves;

		[Token(Token = "0x4000D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public List<TriggeredWaveSpecifics> visibleWaves;

		[Token(Token = "0x4000D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public List<TriggeredWaveSpecifics> invisibleWaves;

		[Token(Token = "0x4000D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public List<TriggeredWaveSpecifics> mouseOverWaves;

		[Token(Token = "0x4000D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public List<TriggeredWaveSpecifics> mouseClickWaves;

		[Token(Token = "0x4000D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public List<TriggeredWaveSpecifics> collisionWaves;

		[Token(Token = "0x4000D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public List<TriggeredWaveSpecifics> triggerEnterWaves;

		[Token(Token = "0x4000D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public List<TriggeredWaveSpecifics> triggerStayWaves;

		[Token(Token = "0x4000D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public List<TriggeredWaveSpecifics> triggerExitWaves;

		[Token(Token = "0x4000D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public List<TriggeredWaveSpecifics> spawnedWaves;

		[Token(Token = "0x4000D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public List<TriggeredWaveSpecifics> despawnedWaves;

		[Token(Token = "0x4000D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public List<TriggeredWaveSpecifics> codeTriggeredWaves1;

		[Token(Token = "0x4000D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public List<TriggeredWaveSpecifics> codeTriggeredWaves2;

		[Token(Token = "0x4000D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public List<TriggeredWaveSpecifics> clickWaves;

		[Token(Token = "0x4000D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public List<TriggeredWaveSpecifics> collision2dWaves;

		[Token(Token = "0x4000D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public List<TriggeredWaveSpecifics> triggerEnter2dWaves;

		[Token(Token = "0x4000D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public List<TriggeredWaveSpecifics> triggerStay2dWaves;

		[Token(Token = "0x4000D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public List<TriggeredWaveSpecifics> triggerExit2dWaves;

		[Token(Token = "0x4000D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public List<TriggeredWaveSpecifics> userDefinedEventWaves;

		[Token(Token = "0x4000D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public List<TriggeredWaveSpecifics> unitySliderChangedWaves;

		[Token(Token = "0x4000D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public List<TriggeredWaveSpecifics> unityButtonClickedWaves;

		[Token(Token = "0x4000D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public List<TriggeredWaveSpecifics> unityPointerDownWaves;

		[Token(Token = "0x4000D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public List<TriggeredWaveSpecifics> unityPointerUpWaves;

		[Token(Token = "0x4000D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public List<TriggeredWaveSpecifics> unityPointerEnterWaves;

		[Token(Token = "0x4000D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public List<TriggeredWaveSpecifics> unityPointerExitWaves;

		[Token(Token = "0x4000D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public List<TriggeredWaveSpecifics> unityDragWaves;

		[Token(Token = "0x4000D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public List<TriggeredWaveSpecifics> unityDropWaves;

		[Token(Token = "0x4000D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public List<TriggeredWaveSpecifics> unityScrollWaves;

		[Token(Token = "0x4000D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public List<TriggeredWaveSpecifics> unityUpdateSelectedWaves;

		[Token(Token = "0x4000D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public List<TriggeredWaveSpecifics> unitySelectWaves;

		[Token(Token = "0x4000D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public List<TriggeredWaveSpecifics> unityDeselectWaves;

		[Token(Token = "0x4000D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public List<TriggeredWaveSpecifics> unityMoveWaves;

		[Token(Token = "0x4000D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public List<TriggeredWaveSpecifics> unityInitializePotentialDragWaves;

		[Token(Token = "0x4000D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public List<TriggeredWaveSpecifics> unityBeginDragWaves;

		[Token(Token = "0x4000D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public List<TriggeredWaveSpecifics> unityEndDragWaves;

		[Token(Token = "0x4000D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public List<TriggeredWaveSpecifics> unitySubmitWaves;

		[Token(Token = "0x4000D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public List<TriggeredWaveSpecifics> unityCancelWaves;

		[Token(Token = "0x4000D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private TriggeredWaveMetaData _enableWaveMeta;

		[Token(Token = "0x4000D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private TriggeredWaveMetaData _disableWaveMeta;

		[Token(Token = "0x4000D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private TriggeredWaveMetaData _visibleWaveMeta;

		[Token(Token = "0x4000D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private TriggeredWaveMetaData _invisibleWaveMeta;

		[Token(Token = "0x4000DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private TriggeredWaveMetaData _mouseOverWaveMeta;

		[Token(Token = "0x4000DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private TriggeredWaveMetaData _mouseClickWaveMeta;

		[Token(Token = "0x4000DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private TriggeredWaveMetaData _collisionWaveMeta;

		[Token(Token = "0x4000DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private TriggeredWaveMetaData _triggerEnterWaveMeta;

		[Token(Token = "0x4000DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private TriggeredWaveMetaData _triggerStayWaveMeta;

		[Token(Token = "0x4000DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private TriggeredWaveMetaData _triggerExitWaveMeta;

		[Token(Token = "0x4000DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private TriggeredWaveMetaData _spawnedWaveMeta;

		[Token(Token = "0x4000DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private TriggeredWaveMetaData _despawnedWaveMeta;

		[Token(Token = "0x4000DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private TriggeredWaveMetaData _codeTriggeredWave1Meta;

		[Token(Token = "0x4000DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private TriggeredWaveMetaData _codeTriggeredWave2Meta;

		[Token(Token = "0x4000DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private TriggeredWaveMetaData _clickWaveMeta;

		[Token(Token = "0x4000DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private TriggeredWaveMetaData _collision2DWaveMeta;

		[Token(Token = "0x4000DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private TriggeredWaveMetaData _triggerEnter2DWaveMeta;

		[Token(Token = "0x4000DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private TriggeredWaveMetaData _triggerStay2DWaveMeta;

		[Token(Token = "0x4000DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private TriggeredWaveMetaData _triggerExit2DWaveMeta;

		[Token(Token = "0x4000DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private readonly List<TriggeredWaveMetaData> _userDefinedEventWaveMeta;

		[Token(Token = "0x4000DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		private TriggeredWaveMetaData _unitySliderChangedWaveMeta;

		[Token(Token = "0x4000DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		private TriggeredWaveMetaData _unityButtonClickedWaveMeta;

		[Token(Token = "0x4000DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		private TriggeredWaveMetaData _unityPointerDownWaveMeta;

		[Token(Token = "0x4000DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		private TriggeredWaveMetaData _unityPointerUpWaveMeta;

		[Token(Token = "0x4000DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		private TriggeredWaveMetaData _unityPointerEnterWaveMeta;

		[Token(Token = "0x4000DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		private TriggeredWaveMetaData _unityPointerExitWaveMeta;

		[Token(Token = "0x4000DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		private TriggeredWaveMetaData _unityDragWaveMeta;

		[Token(Token = "0x4000DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		private TriggeredWaveMetaData _unityDropWaveMeta;

		[Token(Token = "0x4000DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		private TriggeredWaveMetaData _unityScrollWaveMeta;

		[Token(Token = "0x4000DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		private TriggeredWaveMetaData _unityUpdateSelectedWaveMeta;

		[Token(Token = "0x4000DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		private TriggeredWaveMetaData _unitySelectWaveMeta;

		[Token(Token = "0x4000DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		private TriggeredWaveMetaData _unityDeselectWaveMeta;

		[Token(Token = "0x4000DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		private TriggeredWaveMetaData _unityMoveWaveMeta;

		[Token(Token = "0x4000DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		private TriggeredWaveMetaData _unityInitializePotentialDragWaveMeta;

		[Token(Token = "0x4000DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		private TriggeredWaveMetaData _unityBeginDragWaveMeta;

		[Token(Token = "0x4000DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		private TriggeredWaveMetaData _unityEndDragWaveMeta;

		[Token(Token = "0x4000DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		private TriggeredWaveMetaData _unitySubmitWaveMeta;

		[Token(Token = "0x4000DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		private TriggeredWaveMetaData _unityCancelWaveMeta;

		[Token(Token = "0x4000DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		private Button _button;

		[Token(Token = "0x4000DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		private Slider _slider;

		[Token(Token = "0x4000DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		private Transform _trans;

		[Token(Token = "0x4000DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		private GameObject _go;

		[Token(Token = "0x4000DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		private bool _isVisible;

		[Token(Token = "0x4000DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		private List<TriggeredSpawnerV2> _childSpawners;

		[Token(Token = "0x4000DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		private Dictionary<TriggeredSpawner.EventType, List<TriggeredWaveSpecifics>> _allWaves;

		[Token(Token = "0x4000DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		private float? _triggerEnterTime;

		[Token(Token = "0x4000DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		private float? _triggerEnter2dTime;

		[Token(Token = "0x17000194")]
		public List<TrigSpawnerWaiterSpecifics> ActiveEliminationWaves
		{
			[Token(Token = "0x6000D2D")]
			[Address(RVA = "0x1191B04", Offset = "0x1191B04", VA = "0x1191B04")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000195")]
		public Dictionary<TriggeredSpawner.EventType, List<TriggeredWaveSpecifics>> AllWaves
		{
			[Token(Token = "0x6000D2E")]
			[Address(RVA = "0x1191E18", Offset = "0x1191E18", VA = "0x1191E18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000196")]
		public bool SpawnerIsPaused
		{
			[Token(Token = "0x6000D2F")]
			[Address(RVA = "0x1186964", Offset = "0x1186964", VA = "0x1186964")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000197")]
		public bool GameIsOverForSpawner
		{
			[Token(Token = "0x6000D30")]
			[Address(RVA = "0x118689C", Offset = "0x118689C", VA = "0x118689C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000198")]
		public bool IsVisible
		{
			[Token(Token = "0x6000D31")]
			[Address(RVA = "0x1192118", Offset = "0x1192118", VA = "0x1192118")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000199")]
		public Transform Trans
		{
			[Token(Token = "0x6000D32")]
			[Address(RVA = "0x11864C4", Offset = "0x11864C4", VA = "0x11864C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019A")]
		private bool IsSetToUGUI
		{
			[Token(Token = "0x6000D33")]
			[Address(RVA = "0x1184270", Offset = "0x1184270", VA = "0x1184270")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700019B")]
		private bool IsSetToLegacyUI
		{
			[Token(Token = "0x6000D34")]
			[Address(RVA = "0x118BE10", Offset = "0x118BE10", VA = "0x118BE10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700019C")]
		private bool HasActiveSpawningWave
		{
			[Token(Token = "0x6000D35")]
			[Address(RVA = "0x1186A2C", Offset = "0x1186A2C", VA = "0x1186A2C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700019D")]
		public bool SpawnerIsActive
		{
			[Token(Token = "0x6000D36")]
			[Address(RVA = "0x1186BF0", Offset = "0x1186BF0", VA = "0x1186BF0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0x11841A8", Offset = "0x11841A8", VA = "0x11841A8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0x1184680", Offset = "0x1184680", VA = "0x1184680")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0x1186570", Offset = "0x1186570", VA = "0x1186570")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0x118793C", Offset = "0x118793C", VA = "0x118793C")]
		private void PropagateEventToChildSpawners(TriggeredSpawner.EventType eType)
		{
		}

		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0x1187A74", Offset = "0x1187A74", VA = "0x1187A74")]
		public void PropagateEventTrigger(TriggeredSpawner.EventType eType, Transform transmitterTrans, bool calledFromInspector = false)
		{
		}

		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0x1187F50", Offset = "0x1187F50", VA = "0x1187F50")]
		public void ActivateCodeTriggeredEvent1()
		{
		}

		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0x1188054", Offset = "0x1188054", VA = "0x1188054")]
		public void ActivateCodeTriggeredEvent2()
		{
		}

		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0x118B6B8", Offset = "0x118B6B8", VA = "0x118B6B8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0x1188984", Offset = "0x1188984", VA = "0x1188984")]
		private void _EnableEvent(bool calledFromSelf)
		{
		}

		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0x118BC04", Offset = "0x118BC04", VA = "0x118BC04")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0x118883C", Offset = "0x118883C", VA = "0x118883C")]
		private void _DisableEvent(bool calledFromSelf)
		{
		}

		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0x118BC0C", Offset = "0x118BC0C", VA = "0x118BC0C")]
		private void OnSpawned()
		{
		}

		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0x1188B38", Offset = "0x1188B38", VA = "0x1188B38")]
		private void _OnSpawned(bool calledFromSelf)
		{
		}

		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0x118BCBC", Offset = "0x118BCBC", VA = "0x118BCBC")]
		private void OnDespawned()
		{
		}

		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0x1188708", Offset = "0x1188708", VA = "0x1188708")]
		private void _OnDespawned(bool calledFromSelf)
		{
		}

		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0x118BD5C", Offset = "0x118BD5C", VA = "0x118BD5C")]
		private void OnBecameVisible()
		{
		}

		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0x1188FDC", Offset = "0x1188FDC", VA = "0x1188FDC")]
		private void _OnBecameVisible(bool calledFromSelf)
		{
		}

		[Token(Token = "0x6000CC3")]
		[Address(RVA = "0x118BD70", Offset = "0x118BD70", VA = "0x118BD70")]
		private void OnBecameInvisible()
		{
		}

		[Token(Token = "0x6000CC4")]
		[Address(RVA = "0x1188158", Offset = "0x1188158", VA = "0x1188158")]
		private void _OnBecameInvisible(bool calledFromSelf)
		{
		}

		[Token(Token = "0x6000CC5")]
		[Address(RVA = "0x118BE08", Offset = "0x118BE08", VA = "0x118BE08")]
		private void OnMouseEnter()
		{
		}

		[Token(Token = "0x6000CC6")]
		[Address(RVA = "0x11883C4", Offset = "0x11883C4", VA = "0x11883C4")]
		private void _OnMouseEnter(bool calledFromSelf)
		{
		}

		[Token(Token = "0x6000CC7")]
		[Address(RVA = "0x118BE20", Offset = "0x118BE20", VA = "0x118BE20")]
		private void OnMouseDown()
		{
		}

		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0x11882A8", Offset = "0x11882A8", VA = "0x11882A8")]
		private void _OnMouseDown(bool calledFromSelf)
		{
		}

		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0x118BE28", Offset = "0x118BE28", VA = "0x118BE28")]
		private void OnClick()
		{
		}

		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0x11884E0", Offset = "0x11884E0", VA = "0x11884E0")]
		private void _OnClick(bool calledFromSelf)
		{
		}

		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0x118BE30", Offset = "0x118BE30", VA = "0x118BE30")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6000CCC")]
		[Address(RVA = "0x11885F4", Offset = "0x11885F4", VA = "0x11885F4")]
		private void _OnCollisionEnter(bool calledFromSelf)
		{
		}

		[Token(Token = "0x6000CCD")]
		[Address(RVA = "0x118BF38", Offset = "0x118BF38", VA = "0x118BF38")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000CCE")]
		[Address(RVA = "0x1188C6C", Offset = "0x1188C6C", VA = "0x1188C6C")]
		private void _OnTriggerEnter(bool calledFromSelf)
		{
		}

		[Token(Token = "0x6000CCF")]
		[Address(RVA = "0x118C0E8", Offset = "0x118C0E8", VA = "0x118C0E8")]
		private void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x6000CD0")]
		[Address(RVA = "0x1188D9C", Offset = "0x1188D9C", VA = "0x1188D9C")]
		private void _OnTriggerStay(bool calledFromSelf)
		{
		}

		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0x118C250", Offset = "0x118C250", VA = "0x118C250")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000CD2")]
		[Address(RVA = "0x1188EB0", Offset = "0x1188EB0", VA = "0x1188EB0")]
		private void _OnTriggerExit(bool calledFromSelf)
		{
		}

		[Token(Token = "0x6000CD3")]
		[Address(RVA = "0x118C468", Offset = "0x118C468", VA = "0x118C468")]
		private void OnCollisionEnter2D(Collision2D collision)
		{
		}

		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0x1189118", Offset = "0x1189118", VA = "0x1189118")]
		private void _OnCollision2dEnter(bool calledFromSelf)
		{
		}

		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0x118C570", Offset = "0x118C570", VA = "0x118C570")]
		private void OnTriggerEnter2D(Collider2D other)
		{
		}

		[Token(Token = "0x6000CD6")]
		[Address(RVA = "0x118922C", Offset = "0x118922C", VA = "0x118922C")]
		private void _OnTriggerEnter2D(bool calledFromSelf)
		{
		}

		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0x118C720", Offset = "0x118C720", VA = "0x118C720")]
		private void OnTriggerStay2D(Collider2D other)
		{
		}

		[Token(Token = "0x6000CD8")]
		[Address(RVA = "0x1189358", Offset = "0x1189358", VA = "0x1189358")]
		private void _OnTriggerStay2D(bool calledFromSelf)
		{
		}

		[Token(Token = "0x6000CD9")]
		[Address(RVA = "0x118C884", Offset = "0x118C884", VA = "0x118C884")]
		private void OnTriggerExit2D(Collider2D other)
		{
		}

		[Token(Token = "0x6000CDA")]
		[Address(RVA = "0x118946C", Offset = "0x118946C", VA = "0x118946C")]
		private void _OnTriggerExit2D(bool calledFromSelf)
		{
		}

		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0x118CA9C", Offset = "0x118CA9C", VA = "0x118CA9C")]
		public void OnPointerEnter(PointerEventData data)
		{
		}

		[Token(Token = "0x6000CDC")]
		[Address(RVA = "0x11899D8", Offset = "0x11899D8", VA = "0x11899D8")]
		private void _OnPointerEnter(bool calledFromSelf)
		{
		}

		[Token(Token = "0x6000CDD")]
		[Address(RVA = "0x118CAA4", Offset = "0x118CAA4", VA = "0x118CAA4")]
		public void OnPointerExit(PointerEventData data)
		{
		}

		[Token(Token = "0x6000CDE")]
		[Address(RVA = "0x1189AE4", Offset = "0x1189AE4", VA = "0x1189AE4")]
		private void _OnPointerExit(bool calledFromSelf)
		{
		}

		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0x118CAAC", Offset = "0x118CAAC", VA = "0x118CAAC")]
		public void OnPointerDown(PointerEventData data)
		{
		}

		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0x11897C0", Offset = "0x11897C0", VA = "0x11897C0")]
		private void _OnPointerDown(bool calledFromSelf)
		{
		}

		[Token(Token = "0x6000CE1")]
		[Address(RVA = "0x118CAB4", Offset = "0x118CAB4", VA = "0x118CAB4")]
		public void OnPointerUp(PointerEventData data)
		{
		}

		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0x11898CC", Offset = "0x11898CC", VA = "0x11898CC")]
		private void _OnPointerUp(bool calledFromSelf)
		{
		}

		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0x118CABC", Offset = "0x118CABC", VA = "0x118CABC")]
		public void OnDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0x1189BF0", Offset = "0x1189BF0", VA = "0x1189BF0")]
		private void _OnDrag(bool calledFromSelf)
		{
		}

		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0x118CAC4", Offset = "0x118CAC4", VA = "0x118CAC4")]
		public void OnDrop(PointerEventData data)
		{
		}

		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0x1189CFC", Offset = "0x1189CFC", VA = "0x1189CFC")]
		private void _OnDrop(bool calledFromSelf)
		{
		}

		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0x118CACC", Offset = "0x118CACC", VA = "0x118CACC")]
		public void OnScroll(PointerEventData data)
		{
		}

		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0x1189E08", Offset = "0x1189E08", VA = "0x1189E08")]
		private void _OnScroll(bool calledFromSelf)
		{
		}

		[Token(Token = "0x6000CE9")]
		[Address(RVA = "0x118CAD4", Offset = "0x118CAD4", VA = "0x118CAD4")]
		public void OnUpdateSelected(BaseEventData data)
		{
		}

		[Token(Token = "0x6000CEA")]
		[Address(RVA = "0x1189F14", Offset = "0x1189F14", VA = "0x1189F14")]
		private void _OnUpdateSelected(bool calledFromSelf)
		{
		}

		[Token(Token = "0x6000CEB")]
		[Address(RVA = "0x118CADC", Offset = "0x118CADC", VA = "0x118CADC")]
		public void OnSelect(BaseEventData data)
		{
		}

		[Token(Token = "0x6000CEC")]
		[Address(RVA = "0x118A020", Offset = "0x118A020", VA = "0x118A020")]
		private void _OnSelect(bool calledFromSelf)
		{
		}

		[Token(Token = "0x6000CED")]
		[Address(RVA = "0x118CAE4", Offset = "0x118CAE4", VA = "0x118CAE4")]
		public void OnDeselect(BaseEventData data)
		{
		}

		[Token(Token = "0x6000CEE")]
		[Address(RVA = "0x118A12C", Offset = "0x118A12C", VA = "0x118A12C")]
		private void _OnDeselect(bool calledFromSelf)
		{
		}

		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0x118CAEC", Offset = "0x118CAEC", VA = "0x118CAEC")]
		public void OnMove(AxisEventData data)
		{
		}

		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0x118A238", Offset = "0x118A238", VA = "0x118A238")]
		private void _OnMove(bool calledFromSelf)
		{
		}

		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0x118CAF4", Offset = "0x118CAF4", VA = "0x118CAF4")]
		public void OnInitializePotentialDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0x118A344", Offset = "0x118A344", VA = "0x118A344")]
		private void _OnInitializePotentialDrag(bool calledFromSelf)
		{
		}

		[Token(Token = "0x6000CF3")]
		[Address(RVA = "0x118CAFC", Offset = "0x118CAFC", VA = "0x118CAFC")]
		public void OnBeginDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0x118A450", Offset = "0x118A450", VA = "0x118A450")]
		private void _OnBeginDrag(bool calledFromSelf)
		{
		}

		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0x118CB04", Offset = "0x118CB04", VA = "0x118CB04")]
		public void OnEndDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0x118A55C", Offset = "0x118A55C", VA = "0x118A55C")]
		private void _OnEndDrag(bool calledFromSelf)
		{
		}

		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0x118CB0C", Offset = "0x118CB0C", VA = "0x118CB0C")]
		public void OnSubmit(BaseEventData data)
		{
		}

		[Token(Token = "0x6000CF8")]
		[Address(RVA = "0x118A668", Offset = "0x118A668", VA = "0x118A668")]
		private void _OnSubmit(bool calledFromSelf)
		{
		}

		[Token(Token = "0x6000CF9")]
		[Address(RVA = "0x118CB14", Offset = "0x118CB14", VA = "0x118CB14")]
		public void OnCancel(BaseEventData data)
		{
		}

		[Token(Token = "0x6000CFA")]
		[Address(RVA = "0x118A774", Offset = "0x118A774", VA = "0x118A774")]
		private void _OnCancel(bool calledFromSelf)
		{
		}

		[Token(Token = "0x6000CFB")]
		[Address(RVA = "0x118CB1C", Offset = "0x118CB1C", VA = "0x118CB1C")]
		private void SliderChanged(float newValue)
		{
		}

		[Token(Token = "0x6000CFC")]
		[Address(RVA = "0x1189598", Offset = "0x1189598", VA = "0x1189598")]
		private void _SliderChanged(bool calledFromSelf)
		{
		}

		[Token(Token = "0x6000CFD")]
		[Address(RVA = "0x118CB24", Offset = "0x118CB24", VA = "0x118CB24")]
		private void ButtonClicked()
		{
		}

		[Token(Token = "0x6000CFE")]
		[Address(RVA = "0x11896A4", Offset = "0x11896A4", VA = "0x11896A4")]
		private void _ButtonClicked(bool calledFromSelf)
		{
		}

		[Token(Token = "0x6000CFF")]
		[Address(RVA = "0x118CB2C", Offset = "0x118CB2C", VA = "0x118CB2C")]
		public static List<TriggeredSpawnerV2> GetChildSpawners(Transform trans)
		{
			return null;
		}

		[Token(Token = "0x6000D00")]
		[Address(RVA = "0x118CC80", Offset = "0x118CC80", VA = "0x118CC80")]
		public bool HasActiveWaveOfType(TriggeredSpawner.EventType eType, string customEventName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D01")]
		[Address(RVA = "0x118B81C", Offset = "0x118B81C", VA = "0x118B81C")]
		public void EndWave(TriggeredSpawner.EventType eType, string customEventName)
		{
		}

		[Token(Token = "0x6000D02")]
		[Address(RVA = "0x118D060", Offset = "0x118D060", VA = "0x118D060")]
		public bool IsUsingPrefabPool(Transform poolTrans)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D03")]
		[Address(RVA = "0x118D938", Offset = "0x118D938", VA = "0x118D938")]
		public void SpawnWaveVisual(TriggeredWaveSpecifics wave)
		{
		}

		[Token(Token = "0x6000D04")]
		[Address(RVA = "0x118E768", Offset = "0x118E768", VA = "0x118E768", Slot = "6")]
		protected virtual Transform SpawnWaveItem(Transform prefabToSpawn, Vector3 spawnPosition, Quaternion rotation, TriggeredWaveMetaData wave)
		{
			return null;
		}

		[Token(Token = "0x6000D05")]
		[Address(RVA = "0x118E8F0", Offset = "0x118E8F0", VA = "0x118E8F0", Slot = "7")]
		protected virtual void DespawnSpawner()
		{
		}

		[Token(Token = "0x6000D06")]
		[Address(RVA = "0x118E96C", Offset = "0x118E96C", VA = "0x118E96C", Slot = "8")]
		protected virtual void SpawnedOrAwake()
		{
		}

		[Token(Token = "0x6000D07")]
		[Address(RVA = "0x118EC24", Offset = "0x118EC24", VA = "0x118EC24", Slot = "9")]
		protected virtual Transform GetSpawnable(TriggeredWaveMetaData wave)
		{
			return null;
		}

		[Token(Token = "0x6000D08")]
		[Address(RVA = "0x118EC74", Offset = "0x118EC74", VA = "0x118EC74", Slot = "10")]
		protected virtual bool CanSpawnOne()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D09")]
		[Address(RVA = "0x118EC7C", Offset = "0x118EC7C", VA = "0x118EC7C", Slot = "11")]
		protected virtual Vector3 GetSpawnPosition(Vector3 pos, int itemSpawnedIndex, TriggeredWaveMetaData wave)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0x118F16C", Offset = "0x118F16C", VA = "0x118F16C", Slot = "12")]
		protected virtual Quaternion GetSpawnRotation(Transform prefabToSpawn, int itemSpawnedIndex, TriggeredWaveMetaData wave)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0x118F550", Offset = "0x118F550", VA = "0x118F550", Slot = "13")]
		protected virtual void AffectScale(Transform spawnedTrans, TriggeredWaveMetaData wave)
		{
		}

		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0x118F6E4", Offset = "0x118F6E4", VA = "0x118F6E4", Slot = "14")]
		protected virtual void AfterSpawn(Transform spawnedTrans, TriggeredWaveMetaData wave, TriggeredSpawner.EventType eType)
		{
		}

		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0x118F9E4", Offset = "0x118F9E4", VA = "0x118F9E4", Slot = "15")]
		public virtual void CheckForIllegalCustomEvents()
		{
		}

		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0x118FD08", Offset = "0x118FD08", VA = "0x118FD08", Slot = "16")]
		public virtual void ReceiveEvent(string customEventName, Vector3 eventOrigin)
		{
		}

		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0x118FFA0", Offset = "0x118FFA0", VA = "0x118FFA0", Slot = "17")]
		public virtual bool SubscribesToEvent(string customEventName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D10")]
		[Address(RVA = "0x1190070", Offset = "0x1190070", VA = "0x1190070", Slot = "18")]
		public virtual void RegisterReceiver()
		{
		}

		[Token(Token = "0x6000D11")]
		[Address(RVA = "0x1190110", Offset = "0x1190110", VA = "0x1190110", Slot = "19")]
		public virtual void UnregisterReceiver()
		{
		}

		[Token(Token = "0x6000D12")]
		[Address(RVA = "0x1184280", Offset = "0x1184280", VA = "0x1184280")]
		private void AddUGUIComponents()
		{
		}

		[Token(Token = "0x6000D13")]
		private void AddUGUIHandler<T>(bool useEvent) where T : TriggeredSpawnerUGUIHandler
		{
		}

		[Token(Token = "0x6000D14")]
		[Address(RVA = "0x118DC00", Offset = "0x118DC00", VA = "0x118DC00")]
		private static Vector3 GetSpawnPositionForVisualization(TriggeredWaveSpecifics wave, Transform spawnerTrans, int itemSpawnedIndex)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D15")]
		[Address(RVA = "0x118E0DC", Offset = "0x118E0DC", VA = "0x118E0DC")]
		private static Quaternion GetSpawnRotationForVisualization(TriggeredWaveSpecifics wave, Transform spawner, int itemSpawnedIndex)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000D16")]
		[Address(RVA = "0x118E470", Offset = "0x118E470", VA = "0x118E470")]
		private void AffectScaleforVisualization(TriggeredWaveSpecifics wave, Transform spawnedTrans)
		{
		}

		[Token(Token = "0x6000D17")]
		[Address(RVA = "0x118E5EC", Offset = "0x118E5EC", VA = "0x118E5EC")]
		private void AfterSpawnForVisualization(TriggeredWaveSpecifics wave, Transform spawnedTrans)
		{
		}

		[Token(Token = "0x6000D18")]
		[Address(RVA = "0x119019C", Offset = "0x119019C", VA = "0x119019C")]
		public void DeleteAllWaves()
		{
		}

		[Token(Token = "0x6000D19")]
		[Address(RVA = "0x1176804", Offset = "0x1176804", VA = "0x1176804")]
		public void RemoveItemFromWave(Transform transDeadItem, TriggeredSpawner.EventType eType, string customEventName, TriggeredWaveMetaData waveMeta)
		{
		}

		[Token(Token = "0x6000D1A")]
		[Address(RVA = "0x119123C", Offset = "0x119123C", VA = "0x119123C")]
		private void AwardEliminationBonusesAndFireEventsIfAny(TriggeredWaveSpecifics wave)
		{
		}

		[Token(Token = "0x6000D1B")]
		[Address(RVA = "0x11907AC", Offset = "0x11907AC", VA = "0x11907AC")]
		private TriggeredWaveMetaData GetWaveMetaByType(TriggeredSpawner.EventType eType, string customEventName)
		{
			return null;
		}

		[Token(Token = "0x6000D1C")]
		[Address(RVA = "0x1191398", Offset = "0x1191398", VA = "0x1191398")]
		private void AddFirstWaveIfAny(TriggeredSpawner.EventType eType, List<TriggeredWaveSpecifics> listOfSingleWaveType, ref Dictionary<TriggeredSpawner.EventType, List<TriggeredWaveSpecifics>> allWaves)
		{
		}

		[Token(Token = "0x6000D1D")]
		[Address(RVA = "0x1184A40", Offset = "0x1184A40", VA = "0x1184A40")]
		private TriggeredWaveSpecifics GetFirstWaveIfAny(List<TriggeredWaveSpecifics> waveList)
		{
			return null;
		}

		[Token(Token = "0x6000D1E")]
		[Address(RVA = "0x118A880", Offset = "0x118A880", VA = "0x118A880")]
		private bool IsWaveValid(TriggeredWaveSpecifics wave, TriggeredSpawner.EventType eType, bool calledFromSelf)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0x119146C", Offset = "0x119146C", VA = "0x119146C")]
		private float WaveEndTime(TriggeredWaveMetaData wave)
		{
			return default(float);
		}

		[Token(Token = "0x6000D20")]
		[Address(RVA = "0x11914A4", Offset = "0x11914A4", VA = "0x11914A4")]
		private bool WaveEliminatedIfRequired(TriggeredWaveMetaData wave)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D21")]
		[Address(RVA = "0x1191518", Offset = "0x1191518", VA = "0x1191518")]
		private bool CanRepeatWave(TriggeredWaveMetaData wave)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D22")]
		[Address(RVA = "0x118CF28", Offset = "0x118CF28", VA = "0x118CF28")]
		private void PropagateEndWaveToChildSpawners(TriggeredSpawner.EventType eType, string customEventName)
		{
		}

		[Token(Token = "0x6000D23")]
		[Address(RVA = "0x1186E68", Offset = "0x1186E68", VA = "0x1186E68")]
		private void SpawnFromWaveMeta(TriggeredWaveMetaData wave, TriggeredSpawner.EventType eType)
		{
		}

		[Token(Token = "0x6000D24")]
		[Address(RVA = "0x1191868", Offset = "0x1191868", VA = "0x1191868")]
		private void AddSpawnTracker(Transform spawnedTrans, TriggeredSpawner.EventType eType, TriggeredWaveMetaData waveMeta)
		{
		}

		[Token(Token = "0x6000D25")]
		[Address(RVA = "0x1191A24", Offset = "0x1191A24", VA = "0x1191A24")]
		private void AfterSpawnWave(TriggeredWaveMetaData newWave)
		{
		}

		[Token(Token = "0x6000D26")]
		[Address(RVA = "0x118AB14", Offset = "0x118AB14", VA = "0x118AB14")]
		private bool SetupNextWave(TriggeredWaveSpecifics newWave, TriggeredSpawner.EventType eventType, int repetitionNumber = 0, int repetitionNumberWithReset = 0)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D27")]
		[Address(RVA = "0x118FA7C", Offset = "0x118FA7C", VA = "0x118FA7C")]
		private void LogIfCustomEventMissing(TriggeredWaveSpecifics eventGroup)
		{
		}

		[Token(Token = "0x6000D28")]
		[Address(RVA = "0x1184AA0", Offset = "0x1184AA0", VA = "0x1184AA0")]
		private void CheckForValidVariablesForWave(TriggeredWaveSpecifics wave, TriggeredSpawner.EventType eType)
		{
		}

		[Token(Token = "0x6000D29")]
		[Address(RVA = "0x118D8F4", Offset = "0x118D8F4", VA = "0x118D8F4")]
		private static bool WaveIsUsingPrefabPool(TriggeredWaveSpecifics spec, string poolName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D2A")]
		[Address(RVA = "0x118BD78", Offset = "0x118BD78", VA = "0x118BD78")]
		private void StopOppositeWaveIfActive(TriggeredWaveSpecifics wave, TriggeredSpawner.EventType eType)
		{
		}

		[Token(Token = "0x6000D2B")]
		[Address(RVA = "0x1191808", Offset = "0x1191808", VA = "0x1191808")]
		private float WaveDelay(TriggeredWaveMetaData wave)
		{
			return default(float);
		}

		[Token(Token = "0x6000D2C")]
		[Address(RVA = "0x1190A50", Offset = "0x1190A50", VA = "0x1190A50")]
		private void SpawnBonusPrefabIfAny(TriggeredWaveSpecifics currentWave, Vector3 spawnPosition)
		{
		}

		[Token(Token = "0x6000D37")]
		[Address(RVA = "0x1192120", Offset = "0x1192120", VA = "0x1192120")]
		public TriggeredSpawnerV2()
		{
		}
	}
	[Token(Token = "0x20001FE")]
	public class VisualizationMarker : MonoBehaviour
	{
		[Token(Token = "0x6000D5C")]
		[Address(RVA = "0xEFD5D8", Offset = "0xEFD5D8", VA = "0xEFD5D8")]
		public VisualizationMarker()
		{
		}
	}
	[Token(Token = "0x20001FF")]
	public class WaveSyncroPrefabSpawner : MonoBehaviour
	{
		[Token(Token = "0x2000200")]
		public enum SpawnLayerTagMode
		{
			[Token(Token = "0x4000DF9")]
			UseSpawnPrefabSettings,
			[Token(Token = "0x4000DFA")]
			UseSpawnerSettings,
			[Token(Token = "0x4000DFB")]
			Custom
		}

		[Token(Token = "0x4000DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<WaveSpecifics> waveSpecs;

		[Token(Token = "0x4000DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isExpanded;

		[Token(Token = "0x4000DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public LevelSettings.ActiveItemMode activeMode;

		[Token(Token = "0x4000DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public WorldVariableRangeCollection activeItemCriteria;

		[Token(Token = "0x4000DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int randomSortKey;

		[Token(Token = "0x4000DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool spawnOutsidePool;

		[Token(Token = "0x4000DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TriggeredSpawner.GameOverBehavior gameOverBehavior;

		[Token(Token = "0x4000DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public TriggeredSpawner.WavePauseBehavior wavePauseBehavior;

		[Token(Token = "0x4000DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public WaveSyncroSpawnerListener listener;

		[Token(Token = "0x4000DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public SpawnLayerTagMode spawnLayerMode;

		[Token(Token = "0x4000DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public SpawnLayerTagMode spawnTagMode;

		[Token(Token = "0x4000DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int spawnCustomLayer;

		[Token(Token = "0x4000DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool applyLayerRecursively;

		[Token(Token = "0x4000DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string spawnCustomTag;

		[Token(Token = "0x4000DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool useLevelFilter;

		[Token(Token = "0x4000DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int levelFilter;

		[Token(Token = "0x4000DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool useCopyWave;

		[Token(Token = "0x4000DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		public bool isSpawnerSelectedAsTarget;

		[Token(Token = "0x4000DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int _currentWaveSize;

		[Token(Token = "0x4000DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int _itemsToCompleteWave;

		[Token(Token = "0x4000DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float _currentWaveLength;

		[Token(Token = "0x4000DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool _waveFinishedSpawning;

		[Token(Token = "0x4000DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		private bool _levelSettingsNotifiedOfCompletion;

		[Token(Token = "0x4000DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int _countSpawned;

		[Token(Token = "0x4000DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float _singleSpawnTime;

		[Token(Token = "0x4000DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float _lastSpawnTime;

		[Token(Token = "0x4000DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private WaveSpecifics _currentWave;

		[Token(Token = "0x4000DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float _waveStartTime;

		[Token(Token = "0x4000DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Transform _trans;

		[Token(Token = "0x4000DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private GameObject _go;

		[Token(Token = "0x4000DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private readonly List<Transform> _spawnedWaveMembers;

		[Token(Token = "0x4000DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float? _repeatTimer;

		[Token(Token = "0x4000DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float _repeatWaitTime;

		[Token(Token = "0x4000DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int _waveRepetitionNumber;

		[Token(Token = "0x4000DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int _waveRepetitionNumberWithReset;

		[Token(Token = "0x4000DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private bool _spawnerValid;

		[Token(Token = "0x4000DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private WavePrefabPool _wavePool;

		[Token(Token = "0x4000DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private int _instanceId;

		[Token(Token = "0x4000DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private bool _settingUpWave;

		[Token(Token = "0x4000DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Transform _lastPrefabKilled;

		[Token(Token = "0x4000DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float _currentRandomLimitDistance;

		[Token(Token = "0x1700019F")]
		public List<Transform> SpawnedWaveMembers
		{
			[Token(Token = "0x6000D6D")]
			[Address(RVA = "0xF04AB0", Offset = "0xF04AB0", VA = "0xF04AB0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A0")]
		private float WaveDelay
		{
			[Token(Token = "0x6000D82")]
			[Address(RVA = "0xF02910", Offset = "0xF02910", VA = "0xF02910")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001A1")]
		public bool GameIsOverForSpawner
		{
			[Token(Token = "0x6000D89")]
			[Address(RVA = "0xF02254", Offset = "0xF02254", VA = "0xF02254")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A2")]
		public bool SpawnerIsPaused
		{
			[Token(Token = "0x6000D8A")]
			[Address(RVA = "0xF0231C", Offset = "0xF0231C", VA = "0xF0231C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000D5D")]
		[Address(RVA = "0xEFFD70", Offset = "0xEFFD70", VA = "0xEFFD70")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D5E")]
		[Address(RVA = "0xF00118", Offset = "0xF00118", VA = "0xF00118")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D5F")]
		[Address(RVA = "0xF01F48", Offset = "0xF01F48", VA = "0xF01F48")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D60")]
		[Address(RVA = "0xF02E08", Offset = "0xF02E08", VA = "0xF02E08")]
		public void DeleteLevel(int level)
		{
		}

		[Token(Token = "0x6000D61")]
		[Address(RVA = "0xF03240", Offset = "0xF03240", VA = "0xF03240")]
		public void ShiftUpLevel(int level)
		{
		}

		[Token(Token = "0x6000D62")]
		[Address(RVA = "0xF0363C", Offset = "0xF0363C", VA = "0xF0363C")]
		public void ShiftDownLevel(int level)
		{
		}

		[Token(Token = "0x6000D63")]
		[Address(RVA = "0xF03A38", Offset = "0xF03A38", VA = "0xF03A38")]
		public void ShiftUpWave(int level, int waveNum)
		{
		}

		[Token(Token = "0x6000D64")]
		[Address(RVA = "0xF03FCC", Offset = "0xF03FCC", VA = "0xF03FCC")]
		public void ShiftDownWave(int level, int waveNum)
		{
		}

		[Token(Token = "0x6000D65")]
		[Address(RVA = "0xF0443C", Offset = "0xF0443C", VA = "0xF0443C")]
		public void DeleteWave(int level, int wav)
		{
		}

		[Token(Token = "0x6000D66")]
		[Address(RVA = "0xF03EA8", Offset = "0xF03EA8", VA = "0xF03EA8")]
		public WaveSpecifics FindWave(int levelToMatch, int waveToMatch)
		{
			return null;
		}

		[Token(Token = "0x6000D67")]
		[Address(RVA = "0xF04600", Offset = "0xF04600", VA = "0xF04600")]
		public void InsertLevel(int level)
		{
		}

		[Token(Token = "0x6000D68")]
		[Address(RVA = "0xF04720", Offset = "0xF04720", VA = "0xF04720")]
		public void InsertWave(int newWaveNumber, int level)
		{
		}

		[Token(Token = "0x6000D69")]
		[Address(RVA = "0xF04858", Offset = "0xF04858", VA = "0xF04858")]
		public bool IsUsingPrefabPool(Transform poolTrans)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0xF049A0", Offset = "0xF049A0", VA = "0xF049A0")]
		public void RemoveSpawnedMember(Transform transMember)
		{
		}

		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0xEFFDF4", Offset = "0xEFFDF4", VA = "0xEFFDF4")]
		public string CheckForDuplicateWaveLevelSettings()
		{
			return null;
		}

		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0xF04AA8", Offset = "0xF04AA8", VA = "0xF04AA8")]
		public Transform SpawnOneItem()
		{
			return null;
		}

		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0xF04AB8", Offset = "0xF04AB8", VA = "0xF04AB8")]
		public bool WaveChange(bool isRestart)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0xF0591C", Offset = "0xF0591C", VA = "0xF0591C")]
		public void WaveRepeat()
		{
		}

		[Token(Token = "0x6000D70")]
		[Address(RVA = "0xF05CB0", Offset = "0xF05CB0", VA = "0xF05CB0")]
		public void SpawnWaveVisual(WaveSpecifics wave)
		{
		}

		[Token(Token = "0x6000D71")]
		[Address(RVA = "0xF06BA8", Offset = "0xF06BA8", VA = "0xF06BA8")]
		public void ResetWaveIncrementCounter()
		{
		}

		[Token(Token = "0x6000D72")]
		[Address(RVA = "0xF06C14", Offset = "0xF06C14", VA = "0xF06C14", Slot = "4")]
		protected virtual void AffectScale(Transform spawnedTrans)
		{
		}

		[Token(Token = "0x6000D73")]
		[Address(RVA = "0xF06DA8", Offset = "0xF06DA8", VA = "0xF06DA8", Slot = "5")]
		protected virtual void AfterSpawn(Transform spawnedTrans)
		{
		}

		[Token(Token = "0x6000D74")]
		[Address(RVA = "0xF070A4", Offset = "0xF070A4", VA = "0xF070A4", Slot = "6")]
		protected virtual bool CanSpawnOne()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D75")]
		[Address(RVA = "0xF0711C", Offset = "0xF0711C", VA = "0xF0711C", Slot = "7")]
		protected virtual Transform GetSpawnable(WaveSpecifics wave)
		{
			return null;
		}

		[Token(Token = "0x6000D76")]
		[Address(RVA = "0xF07158", Offset = "0xF07158", VA = "0xF07158", Slot = "8")]
		protected virtual Vector3 GetSpawnPosition(Vector3 pos, int itemSpawnedIndex)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D77")]
		[Address(RVA = "0xF0765C", Offset = "0xF0765C", VA = "0xF0765C", Slot = "9")]
		protected virtual Quaternion GetSpawnRotation(Transform prefabToSpawn, int itemSpawnedIndex)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000D78")]
		[Address(RVA = "0xF07A04", Offset = "0xF07A04", VA = "0xF07A04", Slot = "10")]
		protected virtual Transform SpawnWaveItem(Transform prefabToSpawn, Vector3 spawnPosition, Quaternion rotation)
		{
			return null;
		}

		[Token(Token = "0x6000D79")]
		[Address(RVA = "0xF07B44", Offset = "0xF07B44", VA = "0xF07B44")]
		private void SpawnBonusPrefabIfSelected(Transform transOfLastKilled)
		{
		}

		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0xF07BF0", Offset = "0xF07BF0", VA = "0xF07BF0")]
		private void SpawnBonusPrefabIfAny(Transform transOfLastKilled)
		{
		}

		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0xF08468", Offset = "0xF08468", VA = "0xF08468")]
		private void AddSpawnTracker(Transform spawnedTrans)
		{
		}

		[Token(Token = "0x6000D7C")]
		[Address(RVA = "0xF001B4", Offset = "0xF001B4", VA = "0xF001B4")]
		private void CheckForValidVariablesForWave(WaveSpecifics wave)
		{
		}

		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0xF01578", Offset = "0xF01578", VA = "0xF01578")]
		private void CheckForValidWorldVariables()
		{
		}

		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0xF03170", Offset = "0xF03170", VA = "0xF03170")]
		private void LogAdjustments(int adjustments)
		{
		}

		[Token(Token = "0x6000D7F")]
		[Address(RVA = "0xF08684", Offset = "0xF08684", VA = "0xF08684")]
		private bool WillRepeatWave()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D80")]
		[Address(RVA = "0xF08968", Offset = "0xF08968", VA = "0xF08968")]
		private void MaybeRepeatWave()
		{
		}

		[Token(Token = "0x6000D81")]
		[Address(RVA = "0xF04B94", Offset = "0xF04B94", VA = "0xF04B94")]
		private bool SetupNextWave(bool scanForWave, bool isRestart)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D83")]
		[Address(RVA = "0xF0296C", Offset = "0xF0296C", VA = "0xF0296C")]
		private Transform SpawnOne(bool fromExternalScript = false)
		{
			return null;
		}

		[Token(Token = "0x6000D84")]
		[Address(RVA = "0xF023E4", Offset = "0xF023E4", VA = "0xF023E4")]
		private void CheckForWaveRepeat()
		{
		}

		[Token(Token = "0x6000D85")]
		[Address(RVA = "0xF05F58", Offset = "0xF05F58", VA = "0xF05F58")]
		private static Vector3 GetSpawnPositionForVisualization(WaveSpecifics wave, Transform spawnerTrans, int itemSpawnedIndex)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D86")]
		[Address(RVA = "0xF06430", Offset = "0xF06430", VA = "0xF06430")]
		private static Quaternion GetSpawnRotationForVisualization(WaveSpecifics wave, Transform spawner, int itemSpawnedIndex)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000D87")]
		[Address(RVA = "0xF067C4", Offset = "0xF067C4", VA = "0xF067C4")]
		private void AffectScaleforVisualization(WaveSpecifics wave, Transform spawnedTrans)
		{
		}

		[Token(Token = "0x6000D88")]
		[Address(RVA = "0xF06948", Offset = "0xF06948", VA = "0xF06948")]
		private void AfterSpawnForVisualization(WaveSpecifics wave, Transform spawnedTrans)
		{
		}

		[Token(Token = "0x6000D8B")]
		[Address(RVA = "0xF08DDC", Offset = "0xF08DDC", VA = "0xF08DDC")]
		public WaveSyncroPrefabSpawner()
		{
		}
	}
	[Token(Token = "0x2000201")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE21C44", Offset = "0xE21C44")]
	public class WaveSyncroSpawnerListener : MonoBehaviour
	{
		[Token(Token = "0x4000DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string sourceSpawnerName;

		[Token(Token = "0x6000D8C")]
		[Address(RVA = "0xF08EDC", Offset = "0xF08EDC", VA = "0xF08EDC")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0xF08FA8", Offset = "0xF08FA8", VA = "0xF08FA8", Slot = "4")]
		public virtual void ItemFailedToSpawn(Transform failedPrefabTrans)
		{
		}

		[Token(Token = "0x6000D8E")]
		[Address(RVA = "0xF08FAC", Offset = "0xF08FAC", VA = "0xF08FAC", Slot = "5")]
		public virtual void ItemSpawned(Transform spawnedTrans)
		{
		}

		[Token(Token = "0x6000D8F")]
		[Address(RVA = "0xF08FB0", Offset = "0xF08FB0", VA = "0xF08FB0", Slot = "6")]
		public virtual void WaveFinishedSpawning(WaveSpecifics spec)
		{
		}

		[Token(Token = "0x6000D90")]
		[Address(RVA = "0xF08FB4", Offset = "0xF08FB4", VA = "0xF08FB4", Slot = "7")]
		public virtual void WaveStart(WaveSpecifics spec)
		{
		}

		[Token(Token = "0x6000D91")]
		[Address(RVA = "0xF08FB8", Offset = "0xF08FB8", VA = "0xF08FB8", Slot = "8")]
		public virtual void EliminationWaveCompleted(WaveSpecifics spec)
		{
		}

		[Token(Token = "0x6000D92")]
		[Address(RVA = "0xF08FBC", Offset = "0xF08FBC", VA = "0xF08FBC", Slot = "9")]
		public virtual void WaveRepeat(WaveSpecifics spec)
		{
		}

		[Token(Token = "0x6000D93")]
		[Address(RVA = "0xF08FC0", Offset = "0xF08FC0", VA = "0xF08FC0")]
		public WaveSyncroSpawnerListener()
		{
		}
	}
	[Token(Token = "0x2000202")]
	public static class CoreMonoHelper
	{
		[Token(Token = "0x6000D94")]
		[Address(RVA = "0x124B260", Offset = "0x124B260", VA = "0x124B260")]
		public static Transform GetChildTransform(this Transform transParent, string childName)
		{
			return null;
		}

		[Token(Token = "0x6000D95")]
		[Address(RVA = "0x124B278", Offset = "0x124B278", VA = "0x124B278")]
		public static void SetLayerOnAllChildren(this Transform trans, int layer)
		{
		}
	}
	[Token(Token = "0x2000203")]
	public class MechanimStateCoreCustomEvents : StateMachineBehaviour
	{
		[Token(Token = "0x4000DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE2AD2C", Offset = "0xE2AD2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2AD2C", Offset = "0xE2AD2C")]
		public bool RetriggerWhenStateLoops;

		[Token(Token = "0x4000DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2AD8C", Offset = "0xE2AD8C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE2AD8C", Offset = "0xE2AD8C")]
		public bool fireEnterEvent;

		[Token(Token = "0x4000DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[CoreCustomEvent]
		public string EnterCustomEvent;

		[Token(Token = "0x4000E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE2ADFC", Offset = "0xE2ADFC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2ADFC", Offset = "0xE2ADFC")]
		public bool fireExitEvent;

		[Token(Token = "0x4000E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[CoreCustomEvent]
		public string ExitCustomEvent;

		[Token(Token = "0x4000E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE2AE6C", Offset = "0xE2AE6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2AE6C", Offset = "0xE2AE6C")]
		public bool fireAnimTimeEvent;

		[Token(Token = "0x4000E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2AECC", Offset = "0xE2AECC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE2AECC", Offset = "0xE2AECC")]
		public float whenToFireEvent;

		[Token(Token = "0x4000E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[CoreCustomEvent]
		public string timedCustomEvent;

		[Token(Token = "0x4000E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2AF30", Offset = "0xE2AF30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xE2AF30", Offset = "0xE2AF30")]
		public bool fireMultiAnimTimeEvent;

		[Token(Token = "0x4000E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE2AF90", Offset = "0xE2AF90")]
		public int numOfMultiEventsToFire;

		[Token(Token = "0x4000E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2AFA8", Offset = "0xE2AFA8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE2AFA8", Offset = "0xE2AFA8")]
		public float whenToFireMultiEvent1;

		[Token(Token = "0x4000E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2AFFC", Offset = "0xE2AFFC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE2AFFC", Offset = "0xE2AFFC")]
		public float whenToFireMultiEvent2;

		[Token(Token = "0x4000E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE2B050", Offset = "0xE2B050")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2B050", Offset = "0xE2B050")]
		public float whenToFireMultiEvent3;

		[Token(Token = "0x4000E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xE2B0A4", Offset = "0xE2B0A4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xE2B0A4", Offset = "0xE2B0A4")]
		public float whenToFireMultiEvent4;

		[Token(Token = "0x4000E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[CoreCustomEvent]
		public string MultiTimedEvent;

		[Token(Token = "0x4000E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool _playMultiEvent1;

		[Token(Token = "0x4000E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		private bool _playMultiEvent2;

		[Token(Token = "0x4000E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		private bool _playMultiEvent3;

		[Token(Token = "0x4000E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
		private bool _playMultiEvent4;

		[Token(Token = "0x4000E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Transform _actorTrans;

		[Token(Token = "0x4000E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int _lastRepetition;

		[Token(Token = "0x6000D96")]
		[Address(RVA = "0x1260B28", Offset = "0x1260B28", VA = "0x1260B28", Slot = "4")]
		public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6000D97")]
		[Address(RVA = "0x1260CB8", Offset = "0x1260CB8", VA = "0x1260CB8", Slot = "5")]
		public override void OnStateUpdate(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6000D98")]
		[Address(RVA = "0x1260FD0", Offset = "0x1260FD0", VA = "0x1260FD0", Slot = "6")]
		public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6000D99")]
		[Address(RVA = "0x1260C0C", Offset = "0x1260C0C", VA = "0x1260C0C")]
		private Transform ActorTrans(Animator anim)
		{
			return null;
		}

		[Token(Token = "0x6000D9A")]
		[Address(RVA = "0x1261094", Offset = "0x1261094", VA = "0x1261094")]
		public MechanimStateCoreCustomEvents()
		{
		}
	}
	[Token(Token = "0x2000204")]
	public static class SpawnUtility
	{
		[Token(Token = "0x6000D9B")]
		[Address(RVA = "0x11758D4", Offset = "0x11758D4", VA = "0x11758D4")]
		public static bool SpawnedMembersAreAllBeyondDistance(Transform spawnerTrans, List<Transform> members, float minDist)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D9C")]
		[Address(RVA = "0x1175B40", Offset = "0x1175B40", VA = "0x1175B40")]
		public static void RecordSpawnerObjectIfKillable(Transform spawnedObject, GameObject spawnerObject)
		{
		}

		[Token(Token = "0x6000D9D")]
		[Address(RVA = "0x1175C04", Offset = "0x1175C04", VA = "0x1175C04")]
		public static bool IsDespawnedOrDestroyed(GameObject objectToCheck)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D9E")]
		[Address(RVA = "0x1175B28", Offset = "0x1175B28", VA = "0x1175B28")]
		public static bool IsActive(GameObject go)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D9F")]
		[Address(RVA = "0x1175C9C", Offset = "0x1175C9C", VA = "0x1175C9C")]
		public static void SetActive(GameObject go, bool isActive)
		{
		}
	}
	[Token(Token = "0x2000205")]
	public static class SpawnerUtility
	{
		[Token(Token = "0x6000DA0")]
		[Address(RVA = "0x1175CB8", Offset = "0x1175CB8", VA = "0x1175CB8")]
		public static void DestroyChildrenWithoutMarker(this GameObject go)
		{
		}

		[Token(Token = "0x6000DA1")]
		[Address(RVA = "0x1176068", Offset = "0x1176068", VA = "0x1176068")]
		public static int GetMaxVisualizeItems(KillerInt kInt)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000206")]
	public static class TransformHelper
	{
		[Token(Token = "0x6000DA2")]
		[Address(RVA = "0x1176538", Offset = "0x1176538", VA = "0x1176538")]
		public static Vector3 GetGlobalScale(this Transform trans)
		{
			return default(Vector3);
		}
	}
	[Serializable]
	[Token(Token = "0x2000207")]
	public class EventDespawnSpecifics
	{
		[Token(Token = "0x4000E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool eventEnabled;

		[Token(Token = "0x4000E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool useLayerFilter;

		[Token(Token = "0x4000E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool useTagFilter;

		[Token(Token = "0x4000E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<string> matchingTags;

		[Token(Token = "0x4000E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<int> matchingLayers;

		[Token(Token = "0x6000DA3")]
		[Address(RVA = "0x124B334", Offset = "0x124B334", VA = "0x124B334")]
		public EventDespawnSpecifics()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000208")]
	public class TrigSpawnerWaiterSpecifics
	{
		[Token(Token = "0x4000E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TriggeredSpawner.EventType EventType;

		[Token(Token = "0x4000E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TriggeredWaveSpecifics Wave;

		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0x1176A64", Offset = "0x1176A64", VA = "0x1176A64")]
		public TrigSpawnerWaiterSpecifics()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000209")]
	public class TrigSpawnerWaveWaiter
	{
		[Token(Token = "0x4000E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TriggeredSpawnerV2 TrigSpawner;

		[Token(Token = "0x4000E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TriggeredSpawner.EventType EventType;

		[Token(Token = "0x4000E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string CustomEventName;

		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0x1176A6C", Offset = "0x1176A6C", VA = "0x1176A6C")]
		public TrigSpawnerWaveWaiter()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200020A")]
	public class TriggeredWaveMetaData
	{
		[Token(Token = "0x4000E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WavePrefabPool wavePool;

		[Token(Token = "0x4000E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Transform> spawnedWaveMembers;

		[Token(Token = "0x4000E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int currentWaveSize;

		[Token(Token = "0x4000E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float waveStartTime;

		[Token(Token = "0x4000E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool waveFinishedSpawning;

		[Token(Token = "0x4000E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int countSpawned;

		[Token(Token = "0x4000E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float singleSpawnTime;

		[Token(Token = "0x4000E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float lastSpawnTime;

		[Token(Token = "0x4000E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TriggeredWaveSpecifics waveSpec;

		[Token(Token = "0x4000E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int waveRepetitionNumber;

		[Token(Token = "0x4000E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int waveRepetitionWithResetNum;

		[Token(Token = "0x4000E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float previousWaveEndTime;

		[Token(Token = "0x4000E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float eliminationTime;

		[Token(Token = "0x4000E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform lastPrefabKilled;

		[Token(Token = "0x4000E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float wavePauseTime;

		[Token(Token = "0x6000DA6")]
		[Address(RVA = "0xEFC160", Offset = "0xEFC160", VA = "0xEFC160")]
		public TriggeredWaveMetaData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200020B")]
	public class TriggeredWaveSpecifics
	{
		[Token(Token = "0x4000E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool isExpanded;

		[Token(Token = "0x4000E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool enableWave;

		[Token(Token = "0x4000E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public KillerInt NumberToSpwn;

		[Token(Token = "0x4000E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public KillerInt MaxToSpawn;

		[Token(Token = "0x4000E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public KillerFloat WaveDelaySec;

		[Token(Token = "0x4000E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool doesRepeatUseWaveDelay;

		[Token(Token = "0x4000E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public KillerFloat TimeToSpawnEntireWave;

		[Token(Token = "0x4000E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform prefabToSpawn;

		[Token(Token = "0x4000E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string prefabToSpawnCategoryName;

		[Token(Token = "0x4000E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool visualizeWave;

		[Token(Token = "0x4000E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public WaveSpecifics.SpawnOrigin spawnSource;

		[Token(Token = "0x4000E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int prefabPoolIndex;

		[Token(Token = "0x4000E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string prefabPoolName;

		[Token(Token = "0x4000E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool enableRepeatWave;

		[Token(Token = "0x4000E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public TriggeredSpawnerV2.RepeatWaitFor repeatWaitsForType;

		[Token(Token = "0x4000E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public WaveSpecifics.RepeatWaveMode curWaveRepeatMode;

		[Token(Token = "0x4000E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public KillerFloat repeatWavePauseSec;

		[Token(Token = "0x4000E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public KillerFloat repeatWavePauseMax;

		[Token(Token = "0x4000E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public KillerInt maxRepeat;

		[Token(Token = "0x4000E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public KillerInt repeatItemInc;

		[Token(Token = "0x4000E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public KillerInt repeatItemMinLmt;

		[Token(Token = "0x4000E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public KillerInt repeatItemLmt;

		[Token(Token = "0x4000E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public bool resetOnItemLimitReached;

		[Token(Token = "0x4000E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public KillerFloat repeatTimeInc;

		[Token(Token = "0x4000E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public KillerFloat repeatTimeMinLmt;

		[Token(Token = "0x4000E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public KillerFloat repeatTimeLmt;

		[Token(Token = "0x4000E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public bool resetOnTimeLimitReached;

		[Token(Token = "0x4000E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
		public bool useWaveSpawnBonusForRepeats;

		[Token(Token = "0x4000E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCA")]
		public bool useWaveSpawnBonusForBeginning;

		[Token(Token = "0x4000E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCB")]
		public bool waveSpawnFireEvents;

		[Token(Token = "0x4000E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public List<CGKCustomEventToFire> waveSpawnCustomEvents;

		[Token(Token = "0x4000E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public bool waveRepeatFireEvents;

		[Token(Token = "0x4000E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public List<CGKCustomEventToFire> waveRepeatCustomEvents;

		[Token(Token = "0x4000E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public WorldVariableCollection repeatPassCriteria;

		[Token(Token = "0x4000E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public bool willDespawnOnEvent;

		[Token(Token = "0x4000E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public WaveSpecifics.WaveOffsetChoiceMode offsetChoiceMode;

		[Token(Token = "0x4000E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public List<Vector3> waveOffsetList;

		[Token(Token = "0x4000E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public bool waveSpawnBonusesEnabled;

		[Token(Token = "0x4000E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public WorldVariableCollection waveSpawnVariableModifiers;

		[Token(Token = "0x4000E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public bool waveElimBonusesEnabled;

		[Token(Token = "0x4000E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public WorldVariableCollection waveElimVariableModifiers;

		[Token(Token = "0x4000E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public bool waveElimFireEvents;

		[Token(Token = "0x4000E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public List<CGKCustomEventToFire> waveElimCustomEvents;

		[Token(Token = "0x4000E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public bool useSpawnBonusPrefab;

		[Token(Token = "0x4000E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		public WaveSpecifics.SpawnOrigin bonusPrefabSource;

		[Token(Token = "0x4000E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public int bonusPrefabPoolIndex;

		[Token(Token = "0x4000E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public string bonusPrefabPoolName;

		[Token(Token = "0x4000E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public Transform bonusPrefabSpecific;

		[Token(Token = "0x4000E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public KillerInt bonusPrefabSpawnPercent;

		[Token(Token = "0x4000E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public KillerInt bonusPrefabQty;

		[Token(Token = "0x4000E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public string bonusPrefabCategoryName;

		[Token(Token = "0x4000E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public bool useLayerFilter;

		[Token(Token = "0x4000E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x169")]
		public bool useTagFilter;

		[Token(Token = "0x4000E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public List<string> matchingTags;

		[Token(Token = "0x4000E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public List<int> matchingLayers;

		[Token(Token = "0x4000E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public bool positionExpanded;

		[Token(Token = "0x4000E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		public WaveSpecifics.PositionMode positionXmode;

		[Token(Token = "0x4000E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public WaveSpecifics.PositionMode positionYmode;

		[Token(Token = "0x4000E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		public WaveSpecifics.PositionMode positionZmode;

		[Token(Token = "0x4000E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public KillerFloat customPosX;

		[Token(Token = "0x4000E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public KillerFloat customPosY;

		[Token(Token = "0x4000E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public KillerFloat customPosZ;

		[Token(Token = "0x4000E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public Transform otherObjectX;

		[Token(Token = "0x4000E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public Transform otherObjectY;

		[Token(Token = "0x4000E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public Transform otherObjectZ;

		[Token(Token = "0x4000E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public WaveSpecifics.RotationMode curRotationMode;

		[Token(Token = "0x4000E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		public Vector3 customRotation;

		[Token(Token = "0x4000E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		public Vector3 keepCenterRotation;

		[Token(Token = "0x4000E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		public WaveSpecifics.ScaleMode curScaleMode;

		[Token(Token = "0x4000E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		public Vector3 customScale;

		[Token(Token = "0x4000E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		public float percentOfSpawnerScale;

		[Token(Token = "0x4000E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		public WaveSpecifics.SpawnerRotationMode curSpawnerRotMode;

		[Token(Token = "0x4000E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		public bool eventOriginIgnoreX;

		[Token(Token = "0x4000E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F5")]
		public bool eventOriginIgnoreY;

		[Token(Token = "0x4000E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F6")]
		public bool eventOriginIgnoreZ;

		[Token(Token = "0x4000E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F7")]
		public bool customEventActive;

		[Token(Token = "0x4000E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		public bool isCustomEvent;

		[Token(Token = "0x4000E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		public string customEventName;

		[Token(Token = "0x4000E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		public Vector3 customEventLookRotation;

		[Token(Token = "0x4000E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		public bool enableRandomizations;

		[Token(Token = "0x4000E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x215")]
		public bool randomXRotation;

		[Token(Token = "0x4000E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x216")]
		public bool randomYRotation;

		[Token(Token = "0x4000E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x217")]
		public bool randomZRotation;

		[Token(Token = "0x4000E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		public LevelSettings.DistanceType randomDistanceType;

		[Token(Token = "0x4000E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		public KillerFloat randomDistX;

		[Token(Token = "0x4000E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		public KillerFloat randomDistY;

		[Token(Token = "0x4000E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		public KillerFloat randomDistZ;

		[Token(Token = "0x4000E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		public KillerFloat randomXRotMin;

		[Token(Token = "0x4000E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		public KillerFloat randomXRotMax;

		[Token(Token = "0x4000E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		public KillerFloat randomYRotMin;

		[Token(Token = "0x4000E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		public KillerFloat randomYRotMax;

		[Token(Token = "0x4000E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		public KillerFloat randomZRotMin;

		[Token(Token = "0x4000E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		public KillerFloat randomZRotMax;

		[Token(Token = "0x4000E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		public bool enableIncrements;

		[Token(Token = "0x4000E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x269")]
		public bool enableKeepCenter;

		[Token(Token = "0x4000E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		public KillerFloat incrementPositionX;

		[Token(Token = "0x4000E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		public KillerFloat incrementPositionY;

		[Token(Token = "0x4000E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		public KillerFloat incrementPositionZ;

		[Token(Token = "0x4000E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		public KillerFloat incrementRotX;

		[Token(Token = "0x4000E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		public KillerFloat incrementRotY;

		[Token(Token = "0x4000E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		public KillerFloat incrementRotZ;

		[Token(Token = "0x4000E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		public bool enablePostSpawnNudge;

		[Token(Token = "0x4000E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		public KillerFloat postSpawnNudgeFwd;

		[Token(Token = "0x4000E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		public KillerFloat postSpawnNudgeRgt;

		[Token(Token = "0x4000E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		public KillerFloat postSpawnNudgeDwn;

		[Token(Token = "0x4000E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		public bool stopWaveOnOppositeEvent;

		[Token(Token = "0x4000E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C1")]
		public bool disableAfterFirstTrigger;

		[Token(Token = "0x4000E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C4")]
		public TriggeredSpawner.RetriggerLimitMode retriggerLimitMode;

		[Token(Token = "0x4000E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		public KillerInt limitPerXFrm;

		[Token(Token = "0x4000E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		public KillerFloat limitPerXSec;

		[Token(Token = "0x4000E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		public float triggerStayForTime;

		[Token(Token = "0x4000E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2DC")]
		public int trigLastFrame;

		[Token(Token = "0x4000E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		public float trigLastTime;

		[Token(Token = "0x4000E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E4")]
		private int waveOffsetIndex;

		[Token(Token = "0x170001A3")]
		public Vector3 WaveOffset
		{
			[Token(Token = "0x6000DA7")]
			[Address(RVA = "0xEFC1E4", Offset = "0xEFC1E4", VA = "0xEFC1E4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0xEFC300", Offset = "0xEFC300", VA = "0xEFC300")]
		public TriggeredWaveSpecifics()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200020C")]
	public class WaveSpecifics
	{
		[Token(Token = "0x200020D")]
		public enum WaveOffsetChoiceMode
		{
			[Token(Token = "0x4000EFA")]
			RandomlyChosen,
			[Token(Token = "0x4000EFB")]
			UseInOrder
		}

		[Token(Token = "0x200020E")]
		public enum RepeatWaveMode
		{
			[Token(Token = "0x4000EFD")]
			Endless,
			[Token(Token = "0x4000EFE")]
			NumberOfRepetitions,
			[Token(Token = "0x4000EFF")]
			UntilWorldVariableAbove,
			[Token(Token = "0x4000F00")]
			UntilWorldVariableBelow
		}

		[Token(Token = "0x200020F")]
		public enum TimedRepeatWaveMode
		{
			[Token(Token = "0x4000F02")]
			EliminationStyle,
			[Token(Token = "0x4000F03")]
			StrictTimeStyle
		}

		[Token(Token = "0x2000210")]
		public enum SpawnOrigin
		{
			[Token(Token = "0x4000F05")]
			Specific,
			[Token(Token = "0x4000F06")]
			PrefabPool
		}

		[Token(Token = "0x2000211")]
		public enum PositionMode
		{
			[Token(Token = "0x4000F08")]
			SpawnerPosition,
			[Token(Token = "0x4000F09")]
			CustomPosition,
			[Token(Token = "0x4000F0A")]
			OtherObjectPosition
		}

		[Token(Token = "0x2000212")]
		public enum SpawnerRotationMode
		{
			[Token(Token = "0x4000F0C")]
			KeepRotation,
			[Token(Token = "0x4000F0D")]
			LookAtCustomEventOrigin
		}

		[Token(Token = "0x2000213")]
		public enum RotationMode
		{
			[Token(Token = "0x4000F0F")]
			UsePrefabRotation,
			[Token(Token = "0x4000F10")]
			UseSpawnerRotation,
			[Token(Token = "0x4000F11")]
			CustomRotation,
			[Token(Token = "0x4000F12")]
			LookAtCustomEventOrigin
		}

		[Token(Token = "0x2000214")]
		public enum ScaleMode
		{
			[Token(Token = "0x4000F14")]
			UsePrefabScale,
			[Token(Token = "0x4000F15")]
			UseSpawnerScale,
			[Token(Token = "0x4000F16")]
			PercentOfSpawnerScale,
			[Token(Token = "0x4000F17")]
			CustomScale
		}

		[Token(Token = "0x4000E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool isExpanded;

		[Token(Token = "0x4000E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool enableWave;

		[Token(Token = "0x4000E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool visualizeWave;

		[Token(Token = "0x4000EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		public bool isSelectedToCopyFrom;

		[Token(Token = "0x4000EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int SpawnLevelNumber;

		[Token(Token = "0x4000EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int SpawnWaveNumber;

		[Token(Token = "0x4000EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public KillerInt MinToSpwn;

		[Token(Token = "0x4000EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public KillerInt MaxToSpwn;

		[Token(Token = "0x4000EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public LevelSettings.DistanceType randomDistanceType;

		[Token(Token = "0x4000EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public KillerFloat WaveDelaySec;

		[Token(Token = "0x4000EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool doesRepeatUseWaveDelay;

		[Token(Token = "0x4000EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public KillerFloat TimeToSpawnEntireWave;

		[Token(Token = "0x4000EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform prefabToSpawn;

		[Token(Token = "0x4000EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string prefabToSpawnCategoryName;

		[Token(Token = "0x4000EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public SpawnOrigin spawnSource;

		[Token(Token = "0x4000EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int prefabPoolIndex;

		[Token(Token = "0x4000EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string prefabPoolName;

		[Token(Token = "0x4000EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool repeatWaveUntilNew;

		[Token(Token = "0x4000EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public int waveCompletePercentage;

		[Token(Token = "0x4000EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool useSpawnBonusPrefab;

		[Token(Token = "0x4000EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public SpawnOrigin bonusPrefabSource;

		[Token(Token = "0x4000EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public int bonusPrefabPoolIndex;

		[Token(Token = "0x4000EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public string bonusPrefabPoolName;

		[Token(Token = "0x4000EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Transform bonusPrefabSpecific;

		[Token(Token = "0x4000EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public KillerInt bonusPrefabSpawnPercent;

		[Token(Token = "0x4000EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public KillerInt bonusPrefabQty;

		[Token(Token = "0x4000EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public string bonusPrefabCategoryName;

		[Token(Token = "0x4000EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public LevelSettings.RepeatToUseItem bonusRepeatToUseItem;

		[Token(Token = "0x4000EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public RepeatWaveMode curWaveRepeatMode;

		[Token(Token = "0x4000EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public TimedRepeatWaveMode curTimedRepeatWaveMode;

		[Token(Token = "0x4000EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public KillerFloat repeatPauseMinimum;

		[Token(Token = "0x4000EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public KillerFloat repeatPauseMaximum;

		[Token(Token = "0x4000EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public KillerInt repeatItemInc;

		[Token(Token = "0x4000EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public KillerInt repeatItemMinLmt;

		[Token(Token = "0x4000EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public KillerInt repeatItemLmt;

		[Token(Token = "0x4000EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public bool resetOnItemLimitReached;

		[Token(Token = "0x4000EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public KillerFloat repeatTimeInc;

		[Token(Token = "0x4000EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public KillerFloat repeatTimeMinLmt;

		[Token(Token = "0x4000EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public KillerFloat repeatTimeLmt;

		[Token(Token = "0x4000EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public bool resetOnTimeLimitReached;

		[Token(Token = "0x4000EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public KillerInt repetitionsToDo;

		[Token(Token = "0x4000EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public WorldVariableCollection repeatPassCriteria;

		[Token(Token = "0x4000EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public bool waveRepeatBonusesEnabled;

		[Token(Token = "0x4000EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public WorldVariableCollection waveRepeatVariableModifiers;

		[Token(Token = "0x4000EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public bool waveRepeatFireEvents;

		[Token(Token = "0x4000ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public List<CGKCustomEventToFire> waveRepeatCustomEvents;

		[Token(Token = "0x4000ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public bool positionExpanded;

		[Token(Token = "0x4000ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		public PositionMode positionXmode;

		[Token(Token = "0x4000ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public PositionMode positionYmode;

		[Token(Token = "0x4000ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		public PositionMode positionZmode;

		[Token(Token = "0x4000ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public KillerFloat customPosX;

		[Token(Token = "0x4000ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public KillerFloat customPosY;

		[Token(Token = "0x4000ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public KillerFloat customPosZ;

		[Token(Token = "0x4000ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public Transform otherObjectX;

		[Token(Token = "0x4000ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public Transform otherObjectY;

		[Token(Token = "0x4000ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public Transform otherObjectZ;

		[Token(Token = "0x4000ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public RotationMode curRotationMode;

		[Token(Token = "0x4000ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		public Vector3 customRotation;

		[Token(Token = "0x4000ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public ScaleMode curScaleMode;

		[Token(Token = "0x4000ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		public Vector3 customScale;

		[Token(Token = "0x4000ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public float percentOfSpawnerScale;

		[Token(Token = "0x4000EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		public bool enableLimits;

		[Token(Token = "0x4000EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public KillerFloat doNotSpawnIfMbrCloserThan;

		[Token(Token = "0x4000EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public KillerFloat doNotSpawnRandomDist;

		[Token(Token = "0x4000EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public bool enableRandomizations;

		[Token(Token = "0x4000EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B9")]
		public bool randomXRotation;

		[Token(Token = "0x4000EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BA")]
		public bool randomYRotation;

		[Token(Token = "0x4000EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BB")]
		public bool randomZRotation;

		[Token(Token = "0x4000EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public KillerFloat randomDistX;

		[Token(Token = "0x4000EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		public KillerFloat randomDistY;

		[Token(Token = "0x4000EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		public KillerFloat randomDistZ;

		[Token(Token = "0x4000EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		public KillerFloat randomXRotMin;

		[Token(Token = "0x4000EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		public KillerFloat randomXRotMax;

		[Token(Token = "0x4000EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		public KillerFloat randomYRotMin;

		[Token(Token = "0x4000EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		public KillerFloat randomYRotMax;

		[Token(Token = "0x4000EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		public KillerFloat randomZRotMin;

		[Token(Token = "0x4000EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		public KillerFloat randomZRotMax;

		[Token(Token = "0x4000EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		public bool enableIncrements;

		[Token(Token = "0x4000EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x209")]
		public bool enableKeepCenter;

		[Token(Token = "0x4000EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		public KillerFloat incrementPositionX;

		[Token(Token = "0x4000EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		public KillerFloat incrementPositionY;

		[Token(Token = "0x4000EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		public KillerFloat incrementPositionZ;

		[Token(Token = "0x4000EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		public KillerFloat incrementRotX;

		[Token(Token = "0x4000EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		public KillerFloat incrementRotY;

		[Token(Token = "0x4000EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		public KillerFloat incrementRotZ;

		[Token(Token = "0x4000EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		public WaveOffsetChoiceMode offsetChoiceMode;

		[Token(Token = "0x4000EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		public List<Vector3> waveOffsetList;

		[Token(Token = "0x4000EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		public bool enablePostSpawnNudge;

		[Token(Token = "0x4000EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		public KillerFloat postSpawnNudgeFwd;

		[Token(Token = "0x4000EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		public KillerFloat postSpawnNudgeRgt;

		[Token(Token = "0x4000EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		public KillerFloat postSpawnNudgeDwn;

		[Token(Token = "0x4000EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		private int waveOffsetIndex;

		[Token(Token = "0x170001A4")]
		public bool IsValid
		{
			[Token(Token = "0x6000DA9")]
			[Address(RVA = "0xEFF284", Offset = "0xEFF284", VA = "0xEFF284")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A5")]
		public Vector3 WaveOffset
		{
			[Token(Token = "0x6000DAA")]
			[Address(RVA = "0xEFF318", Offset = "0xEFF318", VA = "0xEFF318")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000DAB")]
		[Address(RVA = "0xEFF434", Offset = "0xEFF434", VA = "0xEFF434")]
		public WaveSpecifics()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000215")]
	public class InGameWorldVariable
	{
		[Token(Token = "0x4000F18")]
		private const string PlayerPrefStatToken = "~KWStat_{0}~";

		[Token(Token = "0x4000F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly string _statName;

		[Token(Token = "0x4000F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly WorldVariable _sourceStat;

		[Token(Token = "0x4000F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly WorldVariableTracker.VariableType _varType;

		[Token(Token = "0x4000F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string _tokenizedPrefsKey;

		[Token(Token = "0x170001A6")]
		public WorldVariableTracker.VariableType VariableType
		{
			[Token(Token = "0x6000DAD")]
			[Address(RVA = "0x124B4D4", Offset = "0x124B4D4", VA = "0x124B4D4")]
			get
			{
				return default(WorldVariableTracker.VariableType);
			}
		}

		[Token(Token = "0x170001A7")]
		public int CurrentIntValue
		{
			[Token(Token = "0x6000DAE")]
			[Address(RVA = "0x124B4DC", Offset = "0x124B4DC", VA = "0x124B4DC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000DAF")]
			[Address(RVA = "0x124B65C", Offset = "0x124B65C", VA = "0x124B65C")]
			set
			{
			}
		}

		[Token(Token = "0x170001A8")]
		public float CurrentFloatValue
		{
			[Token(Token = "0x6000DB1")]
			[Address(RVA = "0x124BC14", Offset = "0x124BC14", VA = "0x124BC14")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DB2")]
			[Address(RVA = "0x124BD18", Offset = "0x124BD18", VA = "0x124BD18")]
			set
			{
			}
		}

		[Token(Token = "0x170001A9")]
		private string TokenizedPrefsKey
		{
			[Token(Token = "0x6000DBE")]
			[Address(RVA = "0x124B5D8", Offset = "0x124B5D8", VA = "0x124B5D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DAC")]
		[Address(RVA = "0x124B428", Offset = "0x124B428", VA = "0x124B428")]
		public InGameWorldVariable(WorldVariable srcStat, string statName, WorldVariableTracker.VariableType varType)
		{
		}

		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0x124B8C0", Offset = "0x124B8C0", VA = "0x124B8C0")]
		private void FireCustomEvents()
		{
		}

		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0x124BF90", Offset = "0x124BF90", VA = "0x124BF90")]
		public void ModifyVariable(WorldVariableModifier mod)
		{
		}

		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0x124B804", Offset = "0x124B804", VA = "0x124B804")]
		private void EndGameIfIntInRange()
		{
		}

		[Token(Token = "0x6000DB5")]
		[Address(RVA = "0x124BECC", Offset = "0x124BECC", VA = "0x124BECC")]
		private void EndGameIfFloatInRange()
		{
		}

		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0x124C3F8", Offset = "0x124C3F8", VA = "0x124C3F8")]
		public void SetIntValueIfAllowed(int newVal)
		{
		}

		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0x124C8AC", Offset = "0x124C8AC", VA = "0x124C8AC")]
		public void SetFloatValueIfAllowed(float newVal)
		{
		}

		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0x124BE00", Offset = "0x124BE00", VA = "0x124BE00")]
		private void UpdateFloatValue(float val, float oldVal)
		{
		}

		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0x124B738", Offset = "0x124B738", VA = "0x124B738")]
		private void UpdateIntValue(int val, int oldVal)
		{
		}

		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0x124C398", Offset = "0x124C398", VA = "0x124C398")]
		private void AddToIntValue(int valueToAdd)
		{
		}

		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0x124C468", Offset = "0x124C468", VA = "0x124C468")]
		private void MultiplyByIntValue(int valueToMultiplyBy)
		{
		}

		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0x124C850", Offset = "0x124C850", VA = "0x124C850")]
		private void AddToFloatValue(float valueToAdd)
		{
		}

		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0x124C928", Offset = "0x124C928", VA = "0x124C928")]
		private void MultiplyByFloatValue(float valueToMultiplyBy)
		{
		}

		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0x124CCE8", Offset = "0x124CCE8", VA = "0x124CCE8")]
		public static string GetTokenPrefsKey(string myStatName)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000216")]
	public class WorldVariable : MonoBehaviour
	{
		[Token(Token = "0x2000217")]
		public enum StatPersistanceMode
		{
			[Token(Token = "0x4000F32")]
			ResetToStartingValue,
			[Token(Token = "0x4000F33")]
			KeepFromPrevious
		}

		[Token(Token = "0x2000218")]
		public enum VariableChangeMode
		{
			[Token(Token = "0x4000F35")]
			OnlyIncrease,
			[Token(Token = "0x4000F36")]
			OnlyDecrease,
			[Token(Token = "0x4000F37")]
			Any
		}

		[Token(Token = "0x4000F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isExpanded;

		[Token(Token = "0x4000F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public WorldVariableTracker.VariableType varType;

		[Token(Token = "0x4000F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool allowNegative;

		[Token(Token = "0x4000F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool canEndGame;

		[Token(Token = "0x4000F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public bool hasMaxValue;

		[Token(Token = "0x4000F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int startingValue;

		[Token(Token = "0x4000F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int endGameMinValue;

		[Token(Token = "0x4000F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int endGameMaxValue;

		[Token(Token = "0x4000F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int prospectiveValue;

		[Token(Token = "0x4000F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int intMaxValue;

		[Token(Token = "0x4000F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float startingValueFloat;

		[Token(Token = "0x4000F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float endGameMinValueFloat;

		[Token(Token = "0x4000F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float endGameMaxValueFloat;

		[Token(Token = "0x4000F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float prospectiveFloatValue;

		[Token(Token = "0x4000F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float floatMaxValue;

		[Token(Token = "0x4000F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public StatPersistanceMode persistanceMode;

		[Token(Token = "0x4000F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public WorldVariableListener listenerPrefab;

		[Token(Token = "0x4000F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public VariableChangeMode changeMode;

		[Token(Token = "0x4000F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public bool fireEventsOnChange;

		[Token(Token = "0x4000F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<CGKCustomEventToFire> changeCustomEventsToFire;

		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0xF09028", Offset = "0xF09028", VA = "0xF09028")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0xF09034", Offset = "0xF09034", VA = "0xF09034")]
		private void Start()
		{
		}

		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0xF090F4", Offset = "0xF090F4", VA = "0xF090F4")]
		public WorldVariable()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000219")]
	public class WorldVariableCollection
	{
		[Token(Token = "0x4000F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string scenarioName;

		[Token(Token = "0x4000F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<WorldVariableModifier> statMods;

		[Token(Token = "0x6000DC3")]
		[Address(RVA = "0xEFCD9C", Offset = "0xEFCD9C", VA = "0xEFCD9C")]
		public WorldVariableCollection()
		{
		}
	}
	[Token(Token = "0x200021A")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xE21CAC", Offset = "0xE21CAC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xE21CAC", Offset = "0xE21CAC")]
	public class WorldVariableListener : MonoBehaviour
	{
		[Token(Token = "0x4000F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string variableName;

		[Token(Token = "0x4000F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WorldVariableTracker.VariableType vType;

		[Token(Token = "0x4000F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool displayVariableName;

		[Token(Token = "0x4000F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int decimalPlaces;

		[Token(Token = "0x4000F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool useCommaFormatting;

		[Token(Token = "0x4000F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool useFixedNumberOfDigits;

		[Token(Token = "0x4000F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int fixedDigitCount;

		[Token(Token = "0x4000F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int _variableValue;

		[Token(Token = "0x4000F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _variableFloatValue;

		[Token(Token = "0x4000F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Text _text;

		[Token(Token = "0x6000DC4")]
		[Address(RVA = "0xF09190", Offset = "0xF09190", VA = "0xF09190")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DC5")]
		[Address(RVA = "0xF091F0", Offset = "0xF091F0", VA = "0xF091F0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000DC6")]
		[Address(RVA = "0xF0945C", Offset = "0xF0945C", VA = "0xF0945C", Slot = "4")]
		public virtual void UpdateValue(int newValue, int oldVal)
		{
		}

		[Token(Token = "0x6000DC7")]
		[Address(RVA = "0xF09668", Offset = "0xF09668", VA = "0xF09668", Slot = "5")]
		public virtual void UpdateFloatValue(float newValue, float oldVal)
		{
		}

		[Token(Token = "0x6000DC8")]
		[Address(RVA = "0xF0984C", Offset = "0xF0984C", VA = "0xF0984C")]
		public WorldVariableListener()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200021B")]
	public class WorldVariableModifier
	{
		[Token(Token = "0x4000F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string _statName;

		[Token(Token = "0x4000F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public KillerInt _modValueIntAmt;

		[Token(Token = "0x4000F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public KillerFloat _modValueFloatAmt;

		[Token(Token = "0x4000F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public WorldVariableTracker.VariableType _varTypeToUse;
	}
	[Serializable]
	[Token(Token = "0x200021C")]
	public class WorldVariableRange
	{
		[Token(Token = "0x4000F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int _modValueIntMin;

		[Token(Token = "0x4000F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int _modValueIntMax;

		[Token(Token = "0x4000F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float _modValueFloatMin;

		[Token(Token = "0x4000F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float _modValueFloatMax;

		[Token(Token = "0x4000F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string _statName;

		[Token(Token = "0x4000F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public WorldVariableTracker.VariableType _varTypeToUse;
	}
	[Serializable]
	[Token(Token = "0x200021D")]
	public class WorldVariableRangeCollection
	{
		[Token(Token = "0x4000F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<WorldVariableRange> statMods;

		[Token(Token = "0x6000DC9")]
		[Address(RVA = "0xEFF12C", Offset = "0xEFF12C", VA = "0xEFF12C")]
		public WorldVariableRangeCollection()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200021E")]
	public class WorldVariableTracker : MonoBehaviour
	{
		[Token(Token = "0x200021F")]
		public enum VariableType
		{
			[Token(Token = "0x4000F5C")]
			_integer,
			[Token(Token = "0x4000F5D")]
			_float
		}

		[Token(Token = "0x4000F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<string, InGameWorldVariable> _inGamePlayerStats;

		[Token(Token = "0x4000F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static bool _doneInitializing;

		[Token(Token = "0x4000F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform statPrefab;

		[Token(Token = "0x4000F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string newVariableName;

		[Token(Token = "0x4000F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool showNewVarSection;

		[Token(Token = "0x4000F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public VariableType newVarType;

		[Token(Token = "0x4000F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool worldVariablesExpanded;

		[Token(Token = "0x4000F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool showIntVars;

		[Token(Token = "0x4000F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool showFloatVars;

		[Token(Token = "0x4000F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int frames;

		[Token(Token = "0x4000F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Transform _trans;

		[Token(Token = "0x4000F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static WorldVariableTracker _instance;

		[Token(Token = "0x170001AA")]
		public static WorldVariableTracker Instance
		{
			[Token(Token = "0x6000DCC")]
			[Address(RVA = "0xF09D68", Offset = "0xF09D68", VA = "0xF09D68")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AB")]
		public static Dictionary<string, InGameWorldVariable> InGamePlayerStats
		{
			[Token(Token = "0x6000DDA")]
			[Address(RVA = "0xF0A0D0", Offset = "0xF0A0D0", VA = "0xF0A0D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AC")]
		public static Transform TrackerTransform
		{
			[Token(Token = "0x6000DDC")]
			[Address(RVA = "0xF09EC4", Offset = "0xF09EC4", VA = "0xF09EC4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AD")]
		public static bool IsInitializing
		{
			[Token(Token = "0x6000DDD")]
			[Address(RVA = "0xF0AB78", Offset = "0xF0AB78", VA = "0xF0AB78")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000DCA")]
		[Address(RVA = "0xF098C0", Offset = "0xF098C0", VA = "0xF098C0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DCB")]
		[Address(RVA = "0xF09D14", Offset = "0xF09D14", VA = "0xF09D14")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000DCD")]
		[Address(RVA = "0xF09EB4", Offset = "0xF09EB4", VA = "0xF09EB4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DCE")]
		[Address(RVA = "0xF098DC", Offset = "0xF098DC", VA = "0xF098DC")]
		private static void Init()
		{
		}

		[Token(Token = "0x6000DCF")]
		[Address(RVA = "0xEFE790", Offset = "0xEFE790", VA = "0xEFE790")]
		public static bool VariableExistsInScene(string statName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DD0")]
		[Address(RVA = "0xF08600", Offset = "0xF08600", VA = "0xF08600")]
		public static bool IsBlankVariableName(string statName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DD1")]
		[Address(RVA = "0xF0A134", Offset = "0xF0A134", VA = "0xF0A134")]
		public static void ForceReInit()
		{
		}

		[Token(Token = "0x6000DD2")]
		[Address(RVA = "0xF05AF0", Offset = "0xF05AF0", VA = "0xF05AF0")]
		public static void ModifyPlayerStat(WorldVariableModifier modifier, [Optional] Transform sourceTrans)
		{
		}

		[Token(Token = "0x6000DD3")]
		[Address(RVA = "0xEFE7EC", Offset = "0xEFE7EC", VA = "0xEFE7EC")]
		public static InGameWorldVariable GetWorldVariable(string statName)
		{
			return null;
		}

		[Token(Token = "0x6000DD4")]
		[Address(RVA = "0xF09FC0", Offset = "0xF09FC0", VA = "0xF09FC0")]
		public static int? GetExistingWorldVariableIntValue(string variableName, int startingValue)
		{
			return null;
		}

		[Token(Token = "0x6000DD5")]
		[Address(RVA = "0xF0A18C", Offset = "0xF0A18C", VA = "0xF0A18C")]
		public static float? GetExistingWorldVariableFloatValue(string variableName, float startingValue)
		{
			return null;
		}

		[Token(Token = "0x6000DD6")]
		[Address(RVA = "0xF091F4", Offset = "0xF091F4", VA = "0xF091F4")]
		public static void UpdateAllListeners()
		{
		}

		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0xF0A298", Offset = "0xF0A298", VA = "0xF0A298")]
		public static string GetVariableTypeFriendlyString(VariableType varType)
		{
			return null;
		}

		[Token(Token = "0x6000DD8")]
		[Address(RVA = "0xF0A37C", Offset = "0xF0A37C", VA = "0xF0A37C")]
		public static WorldVariable GetWorldVariableScript(string varName)
		{
			return null;
		}

		[Token(Token = "0x6000DD9")]
		[Address(RVA = "0xF0A4BC", Offset = "0xF0A4BC", VA = "0xF0A4BC")]
		public static void LogIfInvalidWorldVariable(string worldVariableName, Transform trans, string fieldName, [Optional] int? levelNum, [Optional] int? waveNum, [Optional] string trigEventName)
		{
		}

		[Token(Token = "0x6000DDB")]
		[Address(RVA = "0xF0AB0C", Offset = "0xF0AB0C", VA = "0xF0AB0C")]
		public static void ClearInGamePlayerStats()
		{
		}

		[Token(Token = "0x6000DDE")]
		[Address(RVA = "0xF0ABD0", Offset = "0xF0ABD0", VA = "0xF0ABD0")]
		public static void FlushAll()
		{
		}

		[Token(Token = "0x6000DDF")]
		[Address(RVA = "0xF0AC30", Offset = "0xF0AC30", VA = "0xF0AC30")]
		public WorldVariableTracker()
		{
		}
	}
}
