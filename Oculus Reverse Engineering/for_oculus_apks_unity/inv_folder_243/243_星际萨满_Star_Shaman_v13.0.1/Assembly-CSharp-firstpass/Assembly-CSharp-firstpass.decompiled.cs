using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.Diagnostics;
using System.Globalization;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.Text;
using System.Threading;
using Cinemachine;
using ES3Internal;
using ES3Types;
using Febucci.Attributes;
using Febucci.UI.Core;
using Il2CppDummyDll;
using TMPro;
using UnityEngine;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Networking;
using UnityEngine.Scripting;
using UnityEngine.UI;
using Valve.VR;
using Viveport;
using Viveport.Internal;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCA7CCC", Offset = "0xCA7CCC")]
internal sealed class <>f__AnonymousType0<<assembly>j__TPar, <type>j__TPar>
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xCB0AE4", Offset = "0xCB0AE4")]
	private readonly <assembly>j__TPar <assembly>i__Field;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xCB0AF8", Offset = "0xCB0AF8")]
	private readonly <type>j__TPar <type>i__Field;

	[Token(Token = "0x17000001")]
	public <assembly>j__TPar assembly
	{
		[Token(Token = "0x6000001")]
		get
		{
			return (<assembly>j__TPar)null;
		}
	}

	[Token(Token = "0x17000002")]
	public <type>j__TPar type
	{
		[Token(Token = "0x6000002")]
		get
		{
			return (<type>j__TPar)null;
		}
	}

	[Token(Token = "0x6000003")]
	[DebuggerHidden]
	public <>f__AnonymousType0(<assembly>j__TPar assembly, <type>j__TPar type)
	{
	}

	[Token(Token = "0x6000004")]
	[DebuggerHidden]
	public override bool Equals(object value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000005")]
	[DebuggerHidden]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x6000006")]
	[DebuggerHidden]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x2000003")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xCA7CDC", Offset = "0xCA7CDC")]
[ImageEffectAllowedInSceneView]
[ExecuteInEditMode]
public class Pixelize : MonoBehaviour
{
	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Shader _screenAndMaskShader;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material _screenAndMaskMaterial;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RenderTexture _temporaryRenderTexture;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Shader _combineLayersShader;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material _combineLayersMaterial;

	[Token(Token = "0x17000003")]
	private Shader ScreenAndMaskShader
	{
		[Token(Token = "0x6000007")]
		[Address(RVA = "0x16D073C", Offset = "0x16D073C", VA = "0x16D073C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000004")]
	private Material ScreenAndMaskMaterial
	{
		[Token(Token = "0x6000008")]
		[Address(RVA = "0x16D07DC", Offset = "0x16D07DC", VA = "0x16D07DC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000005")]
	private RenderTexture TemporaryRenderTarget
	{
		[Token(Token = "0x6000009")]
		[Address(RVA = "0x16D08A4", Offset = "0x16D08A4", VA = "0x16D08A4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000006")]
	private Shader CombineLayersShader
	{
		[Token(Token = "0x600000A")]
		[Address(RVA = "0x16D0A2C", Offset = "0x16D0A2C", VA = "0x16D0A2C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000007")]
	private Material CombineLayersMaterial
	{
		[Token(Token = "0x600000B")]
		[Address(RVA = "0x16D0ACC", Offset = "0x16D0ACC", VA = "0x16D0ACC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0x16D0B94", Offset = "0x16D0B94", VA = "0x16D0B94")]
	private void OnRenderImage(RenderTexture src, RenderTexture dest)
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0x16D0928", Offset = "0x16D0928", VA = "0x16D0928")]
	private void CreateTemporaryRenderTarget()
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0x16D0C68", Offset = "0x16D0C68", VA = "0x16D0C68")]
	private void CheckTemporaryRenderTarget()
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0x16D0CEC", Offset = "0x16D0CEC", VA = "0x16D0CEC")]
	private void ReleaseTemporaryRenderTarget()
	{
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0x16D0D28", Offset = "0x16D0D28", VA = "0x16D0D28")]
	public Pixelize()
	{
	}
}
[Token(Token = "0x2000004")]
[ExecuteInEditMode]
public class VolumetricSphere : MonoBehaviour
{
	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCB0B0C", Offset = "0xCB0B0C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCB0B0C", Offset = "0xCB0B0C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCB0B0C", Offset = "0xCB0B0C")]
	public float radius;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCB0B88", Offset = "0xCB0B88")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCB0B88", Offset = "0xCB0B88")]
	public float density;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCB0BDC", Offset = "0xCB0BDC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCB0BDC", Offset = "0xCB0BDC")]
	public float exponent;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCB0C34", Offset = "0xCB0C34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCB0C34", Offset = "0xCB0C34")]
	public int maxPixelizationLevel;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCB0C88", Offset = "0xCB0C88")]
	public bool enableLayersInterpolation;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCB0CC0", Offset = "0xCB0CC0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCB0CC0", Offset = "0xCB0CC0")]
	public bool debugSphere;

	[Token(Token = "0x6000011")]
	[Address(RVA = "0x1F10B08", Offset = "0x1F10B08", VA = "0x1F10B08")]
	private void Update()
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0x1F10C78", Offset = "0x1F10C78", VA = "0x1F10C78")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0x1F10CC8", Offset = "0x1F10CC8", VA = "0x1F10CC8")]
	public VolumetricSphere()
	{
	}
}
[Token(Token = "0x2000005")]
public class SimpleGPUInstancingExample : MonoBehaviour
{
	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Prefab;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material InstancedMaterial;

	[Token(Token = "0x6000014")]
	[Address(RVA = "0x16D2020", Offset = "0x16D2020", VA = "0x16D2020")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0x16D2280", Offset = "0x16D2280", VA = "0x16D2280")]
	public SimpleGPUInstancingExample()
	{
	}
}
[Token(Token = "0x2000006")]
public class SimpleMoveExample : MonoBehaviour
{
	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 m_previous;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 m_target;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 m_originalPosition;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 BoundingVolume;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float Speed;

	[Token(Token = "0x6000016")]
	[Address(RVA = "0x16D2288", Offset = "0x16D2288", VA = "0x16D2288")]
	private void Start()
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0x16D2304", Offset = "0x16D2304", VA = "0x16D2304")]
	private void Update()
	{
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0x16D25C0", Offset = "0x16D25C0", VA = "0x16D25C0")]
	public SimpleMoveExample()
	{
	}
}
[Token(Token = "0x2000007")]
public class Smear : MonoBehaviour
{
	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Queue<Vector3> m_recentPositions;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int FramesBufferSize;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer Renderer;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material m_instancedMaterial;

	[Token(Token = "0x17000008")]
	private Material InstancedMaterial
	{
		[Token(Token = "0x6000019")]
		[Address(RVA = "0x16D2624", Offset = "0x16D2624", VA = "0x16D2624")]
		get
		{
			return null;
		}
		[Token(Token = "0x600001A")]
		[Address(RVA = "0x16D262C", Offset = "0x16D262C", VA = "0x16D262C")]
		set
		{
		}
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x16D2634", Offset = "0x16D2634", VA = "0x16D2634")]
	private void Start()
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0x16D2670", Offset = "0x16D2670", VA = "0x16D2670")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0x16D27F4", Offset = "0x16D27F4", VA = "0x16D27F4")]
	public Smear()
	{
	}
}
[Token(Token = "0x2000008")]
[ExecuteInEditMode]
public class PostProcessExample : MonoBehaviour
{
	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material PostProcessMat;

	[Token(Token = "0x600001E")]
	[Address(RVA = "0x16D0D30", Offset = "0x16D0D30", VA = "0x16D0D30")]
	private void Awake()
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0x16D0DE4", Offset = "0x16D0DE4", VA = "0x16D0DE4")]
	private void OnRenderImage(RenderTexture src, RenderTexture dest)
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0x16D0E68", Offset = "0x16D0E68", VA = "0x16D0E68")]
	public PostProcessExample()
	{
	}
}
[Token(Token = "0x2000009")]
[ExecuteInEditMode]
public class SpriteMaskController : MonoBehaviour
{
	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SpriteRenderer m_spriteRenderer;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector4 m_uvs;

	[Token(Token = "0x6000021")]
	[Address(RVA = "0x16D2870", Offset = "0x16D2870", VA = "0x16D2870")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0x16D2924", Offset = "0x16D2924", VA = "0x16D2924")]
	public SpriteMaskController()
	{
	}
}
[Token(Token = "0x200000A")]
[ExecuteInEditMode]
public class CurvedUIInputModule : StandaloneInputModule
{
	[Token(Token = "0x2000244")]
	public enum CUIControlMethod
	{
		[Token(Token = "0x4000BF1")]
		MOUSE = 0,
		[Token(Token = "0x4000BF2")]
		GAZE = 1,
		[Token(Token = "0x4000BF3")]
		WORLD_MOUSE = 2,
		[Token(Token = "0x4000BF4")]
		CUSTOM_RAY = 3,
		[Token(Token = "0x4000BF5")]
		STEAMVR_LEGACY = 4,
		[Token(Token = "0x4000BF6")]
		OCULUSVR = 5,
		[Token(Token = "0x4000BF7")]
		GOOGLEVR = 7,
		[Token(Token = "0x4000BF8")]
		STEAMVR_2 = 8,
		[Token(Token = "0x4000BF9")]
		UNITY_XR = 9
	}

	[Token(Token = "0x2000245")]
	public enum Hand
	{
		[Token(Token = "0x4000BFB")]
		Both,
		[Token(Token = "0x4000BFC")]
		Right,
		[Token(Token = "0x4000BFD")]
		Left
	}

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[SerializeField]
	private CUIControlMethod controlMethod;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private string submitButtonName;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private Camera mainEventCamera;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private LayerMask raycastLayerMask;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[SerializeField]
	private bool gazeUseTimedClick;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private float gazeClickTimer;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[SerializeField]
	private float gazeClickTimerDelay;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private Image gazeTimedClickProgressImage;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private float worldSpaceMouseSensitivity;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	[SerializeField]
	private Hand usedHand;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xCB0DC0", Offset = "0xCB0DC0")]
	[SerializeField]
	private Transform pointerTransformOverride;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool disableOtherInputModulesOnStart;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static CurvedUIInputModule instance;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private GameObject currentDragging;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private GameObject currentPointedAt;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private GameObject m_rightController;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private GameObject m_leftController;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private float gazeTimerProgress;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private Ray customControllerRay;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private float dragThreshold;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private bool pressedDown;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x131")]
	private bool pressedLastFrame;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private Vector3 lastMouseOnScreenPos;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Vector2 worldSpaceMouseInCanvasSpace;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private Vector2 lastWorldSpaceMouseOnCanvas;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private Vector2 worldSpaceMouseOnCanvasDelta;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[SerializeField]
	private Transform TouchControllerTransform;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[SerializeField]
	private OVRInput.Button InteractionButton;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[SerializeField]
	private OVRCameraRig oculusCameraRig;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private OVRInput.Controller activeCont;

	[Token(Token = "0x17000009")]
	public static CurvedUIInputModule Instance
	{
		[Token(Token = "0x6000030")]
		[Address(RVA = "0x10DFE74", Offset = "0x10DFE74", VA = "0x10DFE74")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000031")]
		[Address(RVA = "0x10F4178", Offset = "0x10F4178", VA = "0x10F4178")]
		private set
		{
		}
	}

	[Token(Token = "0x1700000A")]
	public static CUIControlMethod ControlMethod
	{
		[Token(Token = "0x6000032")]
		[Address(RVA = "0x10DFE08", Offset = "0x10DFE08", VA = "0x10DFE08")]
		get
		{
			return default(CUIControlMethod);
		}
		[Token(Token = "0x6000033")]
		[Address(RVA = "0x10EC8D8", Offset = "0x10EC8D8", VA = "0x10EC8D8")]
		set
		{
		}
	}

	[Token(Token = "0x1700000B")]
	public LayerMask RaycastLayerMask
	{
		[Token(Token = "0x6000034")]
		[Address(RVA = "0x10F41E8", Offset = "0x10F41E8", VA = "0x10F41E8")]
		get
		{
			return default(LayerMask);
		}
		[Token(Token = "0x6000035")]
		[Address(RVA = "0x10F41F0", Offset = "0x10F41F0", VA = "0x10F41F0")]
		set
		{
		}
	}

	[Token(Token = "0x1700000C")]
	public Hand UsedHand
	{
		[Token(Token = "0x6000036")]
		[Address(RVA = "0x10F41F8", Offset = "0x10F41F8", VA = "0x10F41F8")]
		get
		{
			return default(Hand);
		}
		[Token(Token = "0x6000037")]
		[Address(RVA = "0x10F4200", Offset = "0x10F4200", VA = "0x10F4200")]
		set
		{
		}
	}

	[Token(Token = "0x1700000D")]
	public Transform ControllerTransform
	{
		[Token(Token = "0x6000038")]
		[Address(RVA = "0x10E03C4", Offset = "0x10E03C4", VA = "0x10E03C4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700000E")]
	public Vector3 ControllerPointingDirection
	{
		[Token(Token = "0x6000039")]
		[Address(RVA = "0x10E04F0", Offset = "0x10E04F0", VA = "0x10E04F0")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700000F")]
	public Vector3 ControllerPointingOrigin
	{
		[Token(Token = "0x600003A")]
		[Address(RVA = "0x10F427C", Offset = "0x10F427C", VA = "0x10F427C")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000010")]
	public Transform PointerTransformOverride
	{
		[Token(Token = "0x600003B")]
		[Address(RVA = "0x10F4208", Offset = "0x10F4208", VA = "0x10F4208")]
		get
		{
			return null;
		}
		[Token(Token = "0x600003C")]
		[Address(RVA = "0x10E0474", Offset = "0x10E0474", VA = "0x10E0474")]
		set
		{
		}
	}

	[Token(Token = "0x17000011")]
	public GameObject CurrentPointedAt
	{
		[Token(Token = "0x600003D")]
		[Address(RVA = "0x10F429C", Offset = "0x10F429C", VA = "0x10F429C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000012")]
	public Camera EventCamera
	{
		[Token(Token = "0x600003E")]
		[Address(RVA = "0x10F42A4", Offset = "0x10F42A4", VA = "0x10F42A4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600003F")]
		[Address(RVA = "0x10F3260", Offset = "0x10F3260", VA = "0x10F3260")]
		set
		{
		}
	}

	[Token(Token = "0x17000013")]
	public static Ray CustomControllerRay
	{
		[Token(Token = "0x6000041")]
		[Address(RVA = "0x10F42AC", Offset = "0x10F42AC", VA = "0x10F42AC")]
		get
		{
			return default(Ray);
		}
		[Token(Token = "0x6000042")]
		[Address(RVA = "0x10F4064", Offset = "0x10F4064", VA = "0x10F4064")]
		set
		{
		}
	}

	[Token(Token = "0x17000014")]
	public static bool CustomControllerButtonState
	{
		[Token(Token = "0x6000043")]
		[Address(RVA = "0x10F4330", Offset = "0x10F4330", VA = "0x10F4330")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000044")]
		[Address(RVA = "0x10F4100", Offset = "0x10F4100", VA = "0x10F4100")]
		set
		{
		}
	}

	[Token(Token = "0x17000015")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xCB69B4", Offset = "0xCB69B4")]
	public static bool CustomControllerButtonDown
	{
		[Token(Token = "0x6000045")]
		[Address(RVA = "0x10F439C", Offset = "0x10F439C", VA = "0x10F439C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000046")]
		[Address(RVA = "0x10F4408", Offset = "0x10F4408", VA = "0x10F4408")]
		set
		{
		}
	}

	[Token(Token = "0x17000016")]
	public Vector2 WorldSpaceMouseInCanvasSpace
	{
		[Token(Token = "0x6000047")]
		[Address(RVA = "0x10F447C", Offset = "0x10F447C", VA = "0x10F447C")]
		get
		{
			return default(Vector2);
		}
		[Token(Token = "0x6000048")]
		[Address(RVA = "0x10F4488", Offset = "0x10F4488", VA = "0x10F4488")]
		set
		{
		}
	}

	[Token(Token = "0x17000017")]
	public Vector2 WorldSpaceMouseInCanvasSpaceDelta
	{
		[Token(Token = "0x6000049")]
		[Address(RVA = "0x10F449C", Offset = "0x10F449C", VA = "0x10F449C")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x17000018")]
	public float WorldSpaceMouseSensitivity
	{
		[Token(Token = "0x600004A")]
		[Address(RVA = "0x10F4530", Offset = "0x10F4530", VA = "0x10F4530")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600004B")]
		[Address(RVA = "0x10F4538", Offset = "0x10F4538", VA = "0x10F4538")]
		set
		{
		}
	}

	[Token(Token = "0x17000019")]
	public bool GazeUseTimedClick
	{
		[Token(Token = "0x600004C")]
		[Address(RVA = "0x10F4540", Offset = "0x10F4540", VA = "0x10F4540")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600004D")]
		[Address(RVA = "0x10F4548", Offset = "0x10F4548", VA = "0x10F4548")]
		set
		{
		}
	}

	[Token(Token = "0x1700001A")]
	public float GazeClickTimer
	{
		[Token(Token = "0x600004E")]
		[Address(RVA = "0x10F4554", Offset = "0x10F4554", VA = "0x10F4554")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600004F")]
		[Address(RVA = "0x10ECD90", Offset = "0x10ECD90", VA = "0x10ECD90")]
		set
		{
		}
	}

	[Token(Token = "0x1700001B")]
	public float GazeClickTimerDelay
	{
		[Token(Token = "0x6000050")]
		[Address(RVA = "0x10F455C", Offset = "0x10F455C", VA = "0x10F455C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000051")]
		[Address(RVA = "0x10ECEF4", Offset = "0x10ECEF4", VA = "0x10ECEF4")]
		set
		{
		}
	}

	[Token(Token = "0x1700001C")]
	public float GazeTimerProgress
	{
		[Token(Token = "0x6000052")]
		[Address(RVA = "0x10F4564", Offset = "0x10F4564", VA = "0x10F4564")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700001D")]
	public Image GazeTimedClickProgressImage
	{
		[Token(Token = "0x6000053")]
		[Address(RVA = "0x10F456C", Offset = "0x10F456C", VA = "0x10F456C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000054")]
		[Address(RVA = "0x10F4574", Offset = "0x10F4574", VA = "0x10F4574")]
		set
		{
		}
	}

	[Token(Token = "0x1700001E")]
	public OVRCameraRig OculusCameraRig
	{
		[Token(Token = "0x6000055")]
		[Address(RVA = "0x10F457C", Offset = "0x10F457C", VA = "0x10F457C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000056")]
		[Address(RVA = "0x10F4584", Offset = "0x10F4584", VA = "0x10F4584")]
		set
		{
		}
	}

	[Token(Token = "0x1700001F")]
	public OVRInput.Button OculusTouchInteractionButton
	{
		[Token(Token = "0x6000057")]
		[Address(RVA = "0x10F4594", Offset = "0x10F4594", VA = "0x10F4594")]
		get
		{
			return default(OVRInput.Button);
		}
		[Token(Token = "0x6000058")]
		[Address(RVA = "0x10F459C", Offset = "0x10F459C", VA = "0x10F459C")]
		set
		{
		}
	}

	[Token(Token = "0x17000020")]
	public Transform OculusTouchUsedControllerTransform
	{
		[Token(Token = "0x6000059")]
		[Address(RVA = "0x10DFF78", Offset = "0x10DFF78", VA = "0x10DFF78")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0x10F30E0", Offset = "0x10F30E0", VA = "0x10F30E0", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0x10F3314", Offset = "0x10F3314", VA = "0x10F3314", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0x10F35DC", Offset = "0x10F35DC", VA = "0x10F35DC", Slot = "31")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0x10F37F4", Offset = "0x10F37F4", VA = "0x10F37F4", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0x10F3AC4", Offset = "0x10F3AC4", VA = "0x10F3AC4", Slot = "32")]
	protected virtual void ProcessGaze()
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0x10F3B2C", Offset = "0x10F3B2C", VA = "0x10F3B2C", Slot = "33")]
	protected virtual void ProcessCustomRayController()
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0x10F3B34", Offset = "0x10F3B34", VA = "0x10F3B34", Slot = "27")]
	protected override MouseState GetMousePointerEventData(int id)
	{
		return null;
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0x10F3C54", Offset = "0x10F3C54", VA = "0x10F3C54")]
	private PointerEventData.FramePressState CustomRayFramePressedState()
	{
		return default(PointerEventData.FramePressState);
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x10F3C80", Offset = "0x10F3C80", VA = "0x10F3C80", Slot = "34")]
	protected virtual void ProcessViveControllers()
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0x10F3C84", Offset = "0x10F3C84", VA = "0x10F3C84", Slot = "35")]
	protected virtual void ProcessOculusVRController()
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0x10F3AC0", Offset = "0x10F3AC0", VA = "0x10F3AC0")]
	private void ProcessSteamVR2Controllers()
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0x10F4174", Offset = "0x10F4174", VA = "0x10F4174", Slot = "36")]
	protected virtual void ProcessUnityXRController()
	{
	}

	[Token(Token = "0x600002F")]
	private static T EnableInputModule<T>() where T : BaseInputModule
	{
		return null;
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0x10E1B78", Offset = "0x10E1B78", VA = "0x10E1B78")]
	public Ray GetEventRay([Optional] Camera eventCam)
	{
		return default(Ray);
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0x10F45A4", Offset = "0x10F45A4", VA = "0x10F45A4")]
	public CurvedUIInputModule()
	{
	}
}
[Token(Token = "0x200000B")]
[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xCA7DA0", Offset = "0xCA7DA0")]
public class ES3Serializable : Attribute
{
	[Token(Token = "0x600005C")]
	[Address(RVA = "0x1AA6C0C", Offset = "0x1AA6C0C", VA = "0x1AA6C0C")]
	public ES3Serializable()
	{
	}
}
[Token(Token = "0x200000C")]
[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xCA7DB4", Offset = "0xCA7DB4")]
public class ES3NonSerializable : Attribute
{
	[Token(Token = "0x600005D")]
	[Address(RVA = "0x1AA5AD4", Offset = "0x1AA5AD4", VA = "0x1AA5AD4")]
	public ES3NonSerializable()
	{
	}
}
[Token(Token = "0x200000D")]
public class ES3AutoSave : MonoBehaviour
{
	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool saveChildren;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool isQuitting;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public List<Component> componentsToSave;

	[Token(Token = "0x600005E")]
	[Address(RVA = "0x181FB20", Offset = "0x181FB20", VA = "0x181FB20")]
	public void Awake()
	{
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0x182016C", Offset = "0x182016C", VA = "0x182016C")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0x1820178", Offset = "0x1820178", VA = "0x1820178")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0x18202E4", Offset = "0x18202E4", VA = "0x18202E4")]
	public ES3AutoSave()
	{
	}
}
[Token(Token = "0x200000E")]
public class ES3AutoSaveMgr : MonoBehaviour
{
	[Token(Token = "0x2000246")]
	public enum LoadEvent
	{
		[Token(Token = "0x4000BFF")]
		None,
		[Token(Token = "0x4000C00")]
		Awake,
		[Token(Token = "0x4000C01")]
		Start
	}

	[Token(Token = "0x2000247")]
	public enum SaveEvent
	{
		[Token(Token = "0x4000C03")]
		None,
		[Token(Token = "0x4000C04")]
		OnApplicationQuit,
		[Token(Token = "0x4000C05")]
		OnApplicationPause
	}

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ES3AutoSaveMgr _current;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string key;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SaveEvent saveEvent;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LoadEvent loadEvent;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ES3SerializableSettings settings;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public HashSet<ES3AutoSave> autoSaves;

	[Token(Token = "0x17000021")]
	public static ES3AutoSaveMgr Current
	{
		[Token(Token = "0x6000062")]
		[Address(RVA = "0x181FC08", Offset = "0x181FC08", VA = "0x181FC08")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000022")]
	public static ES3AutoSaveMgr Instance
	{
		[Token(Token = "0x6000063")]
		[Address(RVA = "0x1820360", Offset = "0x1820360", VA = "0x1820360")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0x18203BC", Offset = "0x18203BC", VA = "0x18203BC")]
	public void Save()
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0x18205F8", Offset = "0x18205F8", VA = "0x18205F8")]
	public void Load()
	{
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0x18206A0", Offset = "0x18206A0", VA = "0x18206A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0x18206B4", Offset = "0x18206B4", VA = "0x18206B4")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0x1820838", Offset = "0x1820838", VA = "0x1820838")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0x182084C", Offset = "0x182084C", VA = "0x182084C")]
	private void OnApplicationPause(bool paused)
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0x1820078", Offset = "0x1820078", VA = "0x1820078")]
	public static void AddAutoSave(ES3AutoSave autoSave)
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0x18201F0", Offset = "0x18201F0", VA = "0x18201F0")]
	public static void RemoveAutoSave(ES3AutoSave autoSave)
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0x18208B8", Offset = "0x18208B8", VA = "0x18208B8")]
	public ES3AutoSaveMgr()
	{
	}
}
[Token(Token = "0x200000F")]
public static class ES3
{
	[Token(Token = "0x2000248")]
	public enum Location
	{
		[Token(Token = "0x4000C07")]
		File,
		[Token(Token = "0x4000C08")]
		PlayerPrefs,
		[Token(Token = "0x4000C09")]
		InternalMS,
		[Token(Token = "0x4000C0A")]
		Resources,
		[Token(Token = "0x4000C0B")]
		Cache
	}

	[Token(Token = "0x2000249")]
	public enum Directory
	{
		[Token(Token = "0x4000C0D")]
		PersistentDataPath,
		[Token(Token = "0x4000C0E")]
		DataPath
	}

	[Token(Token = "0x200024A")]
	public enum EncryptionType
	{
		[Token(Token = "0x4000C10")]
		None,
		[Token(Token = "0x4000C11")]
		AES
	}

	[Token(Token = "0x200024B")]
	public enum CompressionType
	{
		[Token(Token = "0x4000C13")]
		None,
		[Token(Token = "0x4000C14")]
		Gzip
	}

	[Token(Token = "0x200024C")]
	public enum Format
	{
		[Token(Token = "0x4000C16")]
		JSON,
		[Token(Token = "0x4000C17")]
		Binary_Alpha
	}

	[Token(Token = "0x200024D")]
	public enum ReferenceMode
	{
		[Token(Token = "0x4000C19")]
		ByRef,
		[Token(Token = "0x4000C1A")]
		ByValue,
		[Token(Token = "0x4000C1B")]
		ByRefAndValue
	}

	[Token(Token = "0x600006E")]
	public static void Save<T>(string key, T value)
	{
	}

	[Token(Token = "0x600006F")]
	public static void Save<T>(string key, T value, string filePath)
	{
	}

	[Token(Token = "0x6000070")]
	public static void Save<T>(string key, T value, string filePath, ES3Settings settings)
	{
	}

	[Token(Token = "0x6000071")]
	public static void Save<T>(string key, T value, ES3Settings settings)
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0x10F4700", Offset = "0x10F4700", VA = "0x10F4700")]
	public static void SaveRaw(byte[] bytes)
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0x10F4938", Offset = "0x10F4938", VA = "0x10F4938")]
	public static void SaveRaw(byte[] bytes, string filePath)
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0x10F49B0", Offset = "0x10F49B0", VA = "0x10F49B0")]
	public static void SaveRaw(byte[] bytes, string filePath, ES3Settings settings)
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0x10F476C", Offset = "0x10F476C", VA = "0x10F476C")]
	public static void SaveRaw(byte[] bytes, ES3Settings settings)
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0x10F4A2C", Offset = "0x10F4A2C", VA = "0x10F4A2C")]
	public static void SaveRaw(string str)
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0x10F4ADC", Offset = "0x10F4ADC", VA = "0x10F4ADC")]
	public static void SaveRaw(string str, string filePath)
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0x10F4B54", Offset = "0x10F4B54", VA = "0x10F4B54")]
	public static void SaveRaw(string str, string filePath, ES3Settings settings)
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0x10F4A98", Offset = "0x10F4A98", VA = "0x10F4A98")]
	public static void SaveRaw(string str, ES3Settings settings)
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0x10F4BD0", Offset = "0x10F4BD0", VA = "0x10F4BD0")]
	public static void AppendRaw(byte[] bytes)
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0x10F4E10", Offset = "0x10F4E10", VA = "0x10F4E10")]
	public static void AppendRaw(byte[] bytes, string filePath, ES3Settings settings)
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0x10F4C3C", Offset = "0x10F4C3C", VA = "0x10F4C3C")]
	public static void AppendRaw(byte[] bytes, ES3Settings settings)
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0x10F4E8C", Offset = "0x10F4E8C", VA = "0x10F4E8C")]
	public static void AppendRaw(string str)
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x10F50F0", Offset = "0x10F50F0", VA = "0x10F50F0")]
	public static void AppendRaw(string str, string filePath, ES3Settings settings)
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x10F4EF8", Offset = "0x10F4EF8", VA = "0x10F4EF8")]
	public static void AppendRaw(string str, ES3Settings settings)
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x10F516C", Offset = "0x10F516C", VA = "0x10F516C")]
	public static void SaveImage(Texture2D texture, string imagePath)
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x10F5350", Offset = "0x10F5350", VA = "0x10F5350")]
	public static void SaveImage(Texture2D texture, string imagePath, ES3Settings settings)
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x10F51E4", Offset = "0x10F51E4", VA = "0x10F51E4")]
	public static void SaveImage(Texture2D texture, ES3Settings settings)
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0x10F53CC", Offset = "0x10F53CC", VA = "0x10F53CC")]
	public static object Load(string key)
	{
		return null;
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0x10F5444", Offset = "0x10F5444", VA = "0x10F5444")]
	public static object Load(string key, string filePath)
	{
		return null;
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x10F54C8", Offset = "0x10F54C8", VA = "0x10F54C8")]
	public static object Load(string key, string filePath, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0x10F5550", Offset = "0x10F5550", VA = "0x10F5550")]
	public static object Load(string key, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000087")]
	public static T Load<T>(string key)
	{
		return (T)null;
	}

	[Token(Token = "0x6000088")]
	public static T Load<T>(string key, string filePath)
	{
		return (T)null;
	}

	[Token(Token = "0x6000089")]
	public static T Load<T>(string key, string filePath, ES3Settings settings)
	{
		return (T)null;
	}

	[Token(Token = "0x600008A")]
	public static T Load<T>(string key, ES3Settings settings)
	{
		return (T)null;
	}

	[Token(Token = "0x600008B")]
	public static T Load<T>(string key, T defaultValue)
	{
		return (T)null;
	}

	[Token(Token = "0x600008C")]
	public static T Load<T>(string key, string filePath, T defaultValue)
	{
		return (T)null;
	}

	[Token(Token = "0x600008D")]
	public static T Load<T>(string key, string filePath, T defaultValue, ES3Settings settings)
	{
		return (T)null;
	}

	[Token(Token = "0x600008E")]
	public static T Load<T>(string key, T defaultValue, ES3Settings settings)
	{
		return (T)null;
	}

	[Token(Token = "0x600008F")]
	public static void LoadInto<T>(string key, object obj)
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0x10F55B0", Offset = "0x10F55B0", VA = "0x10F55B0")]
	public static void LoadInto(string key, string filePath, object obj)
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0x10F563C", Offset = "0x10F563C", VA = "0x10F563C")]
	public static void LoadInto(string key, string filePath, object obj, ES3Settings settings)
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0x10F56D4", Offset = "0x10F56D4", VA = "0x10F56D4")]
	public static void LoadInto(string key, object obj, ES3Settings settings)
	{
	}

	[Token(Token = "0x6000093")]
	public static void LoadInto<T>(string key, T obj) where T : class
	{
	}

	[Token(Token = "0x6000094")]
	public static void LoadInto<T>(string key, string filePath, T obj) where T : class
	{
	}

	[Token(Token = "0x6000095")]
	public static void LoadInto<T>(string key, string filePath, T obj, ES3Settings settings) where T : class
	{
	}

	[Token(Token = "0x6000096")]
	public static void LoadInto<T>(string key, T obj, ES3Settings settings) where T : class
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0x10F573C", Offset = "0x10F573C", VA = "0x10F573C")]
	public static string LoadString(string key, string defaultValue, string filePath = "")
	{
		return null;
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0x10F57C8", Offset = "0x10F57C8", VA = "0x10F57C8")]
	public static byte[] LoadRawBytes()
	{
		return null;
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0x10F5A00", Offset = "0x10F5A00", VA = "0x10F5A00")]
	public static byte[] LoadRawBytes(string filePath)
	{
		return null;
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0x10F5A68", Offset = "0x10F5A68", VA = "0x10F5A68")]
	public static byte[] LoadRawBytes(string filePath, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0x10F582C", Offset = "0x10F582C", VA = "0x10F582C")]
	public static byte[] LoadRawBytes(ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0x10F5ADC", Offset = "0x10F5ADC", VA = "0x10F5ADC")]
	public static string LoadRawString()
	{
		return null;
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0x10F5B8C", Offset = "0x10F5B8C", VA = "0x10F5B8C")]
	public static string LoadRawString(string filePath)
	{
		return null;
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0x10F5BF4", Offset = "0x10F5BF4", VA = "0x10F5BF4")]
	public static string LoadRawString(string filePath, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0x10F5B40", Offset = "0x10F5B40", VA = "0x10F5B40")]
	public static string LoadRawString(ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0x10F5C68", Offset = "0x10F5C68", VA = "0x10F5C68")]
	public static Texture2D LoadImage(string imagePath)
	{
		return null;
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0x10F5CE8", Offset = "0x10F5CE8", VA = "0x10F5CE8")]
	public static Texture2D LoadImage(string imagePath, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0x10F5CD4", Offset = "0x10F5CD4", VA = "0x10F5CD4")]
	public static Texture2D LoadImage(ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x10F5D60", Offset = "0x10F5D60", VA = "0x10F5D60")]
	public static Texture2D LoadImage(byte[] bytes)
	{
		return null;
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x10F5DD8", Offset = "0x10F5DD8", VA = "0x10F5DD8")]
	public static AudioClip LoadAudio(string audioFilePath, AudioType audioType)
	{
		return null;
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x10F5E54", Offset = "0x10F5E54", VA = "0x10F5E54")]
	public static AudioClip LoadAudio(string audioFilePath, AudioType audioType, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x60000A6")]
	public static byte[] Serialize<T>(T value, [Optional] ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x60000A7")]
	public static T Deserialize<T>(byte[] bytes, [Optional] ES3Settings settings)
	{
		return (T)null;
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0x10F61D0", Offset = "0x10F61D0", VA = "0x10F61D0")]
	internal static object Deserialize(ES3Type type, byte[] bytes, [Optional] ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x60000A9")]
	public static void DeserializeInto<T>(byte[] bytes, T obj, [Optional] ES3Settings settings) where T : class
	{
	}

	[Token(Token = "0x60000AA")]
	public static void DeserializeInto<T>(ES3Type type, byte[] bytes, T obj, [Optional] ES3Settings settings) where T : class
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0x10F643C", Offset = "0x10F643C", VA = "0x10F643C")]
	public static void DeleteFile()
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0x10F6608", Offset = "0x10F6608", VA = "0x10F6608")]
	public static void DeleteFile(string filePath)
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0x10F6670", Offset = "0x10F6670", VA = "0x10F6670")]
	public static void DeleteFile(string filePath, ES3Settings settings)
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0x10F64A0", Offset = "0x10F64A0", VA = "0x10F64A0")]
	public static void DeleteFile(ES3Settings settings)
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x10F66E4", Offset = "0x10F66E4", VA = "0x10F66E4")]
	public static void CopyFile(string oldFilePath, string newFilePath)
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x10F6B48", Offset = "0x10F6B48", VA = "0x10F6B48")]
	public static void CopyFile(string oldFilePath, string newFilePath, ES3Settings oldSettings, ES3Settings newSettings)
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x10F6778", Offset = "0x10F6778", VA = "0x10F6778")]
	public static void CopyFile(ES3Settings oldSettings, ES3Settings newSettings)
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x10F6BEC", Offset = "0x10F6BEC", VA = "0x10F6BEC")]
	public static void RenameFile(string oldFilePath, string newFilePath)
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x10F7070", Offset = "0x10F7070", VA = "0x10F7070")]
	public static void RenameFile(string oldFilePath, string newFilePath, ES3Settings oldSettings, ES3Settings newSettings)
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0x10F6C80", Offset = "0x10F6C80", VA = "0x10F6C80")]
	public static void RenameFile(ES3Settings oldSettings, ES3Settings newSettings)
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0x10F7114", Offset = "0x10F7114", VA = "0x10F7114")]
	public static void CopyDirectory(string oldDirectoryPath, string newDirectoryPath)
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0x10F7470", Offset = "0x10F7470", VA = "0x10F7470")]
	public static void CopyDirectory(string oldDirectoryPath, string newDirectoryPath, ES3Settings oldSettings, ES3Settings newSettings)
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0x10F71A8", Offset = "0x10F71A8", VA = "0x10F71A8")]
	public static void CopyDirectory(ES3Settings oldSettings, ES3Settings newSettings)
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0x10F7838", Offset = "0x10F7838", VA = "0x10F7838")]
	public static void RenameDirectory(string oldDirectoryPath, string newDirectoryPath)
	{
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0x10F7A7C", Offset = "0x10F7A7C", VA = "0x10F7A7C")]
	public static void RenameDirectory(string oldDirectoryPath, string newDirectoryPath, ES3Settings oldSettings, ES3Settings newSettings)
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0x10F78CC", Offset = "0x10F78CC", VA = "0x10F78CC")]
	public static void RenameDirectory(ES3Settings oldSettings, ES3Settings newSettings)
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0x10F7B20", Offset = "0x10F7B20", VA = "0x10F7B20")]
	public static void DeleteDirectory(string directoryPath)
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0x10F7CBC", Offset = "0x10F7CBC", VA = "0x10F7CBC")]
	public static void DeleteDirectory(string directoryPath, ES3Settings settings)
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0x10F7B88", Offset = "0x10F7B88", VA = "0x10F7B88")]
	public static void DeleteDirectory(ES3Settings settings)
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0x10F7D30", Offset = "0x10F7D30", VA = "0x10F7D30")]
	public static void DeleteKey(string key)
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0x10F7F90", Offset = "0x10F7F90", VA = "0x10F7F90")]
	public static void DeleteKey(string key, string filePath)
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0x10F8008", Offset = "0x10F8008", VA = "0x10F8008")]
	public static void DeleteKey(string key, string filePath, ES3Settings settings)
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0x10F7D9C", Offset = "0x10F7D9C", VA = "0x10F7D9C")]
	public static void DeleteKey(string key, ES3Settings settings)
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0x10F8208", Offset = "0x10F8208", VA = "0x10F8208")]
	public static bool KeyExists(string key)
	{
		return default(bool);
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0x10F8434", Offset = "0x10F8434", VA = "0x10F8434")]
	public static bool KeyExists(string key, string filePath)
	{
		return default(bool);
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0x10F84AC", Offset = "0x10F84AC", VA = "0x10F84AC")]
	public static bool KeyExists(string key, string filePath, ES3Settings settings)
	{
		return default(bool);
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0x10F8274", Offset = "0x10F8274", VA = "0x10F8274")]
	public static bool KeyExists(string key, ES3Settings settings)
	{
		return default(bool);
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0x10F8528", Offset = "0x10F8528", VA = "0x10F8528")]
	public static bool FileExists()
	{
		return default(bool);
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0x10F858C", Offset = "0x10F858C", VA = "0x10F858C")]
	public static bool FileExists(string filePath)
	{
		return default(bool);
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0x10F85F4", Offset = "0x10F85F4", VA = "0x10F85F4")]
	public static bool FileExists(string filePath, ES3Settings settings)
	{
		return default(bool);
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0x10F8084", Offset = "0x10F8084", VA = "0x10F8084")]
	public static bool FileExists(ES3Settings settings)
	{
		return default(bool);
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0x10F8668", Offset = "0x10F8668", VA = "0x10F8668")]
	public static bool DirectoryExists(string folderPath)
	{
		return default(bool);
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0x10F86D0", Offset = "0x10F86D0", VA = "0x10F86D0")]
	public static bool DirectoryExists(string folderPath, ES3Settings settings)
	{
		return default(bool);
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0x10F7514", Offset = "0x10F7514", VA = "0x10F7514")]
	public static bool DirectoryExists(ES3Settings settings)
	{
		return default(bool);
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0x10F8744", Offset = "0x10F8744", VA = "0x10F8744")]
	public static string[] GetKeys()
	{
		return null;
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0x10F8B94", Offset = "0x10F8B94", VA = "0x10F8B94")]
	public static string[] GetKeys(string filePath)
	{
		return null;
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0x10F8BFC", Offset = "0x10F8BFC", VA = "0x10F8BFC")]
	public static string[] GetKeys(string filePath, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0x10F87A8", Offset = "0x10F87A8", VA = "0x10F87A8")]
	public static string[] GetKeys(ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0x10F8C70", Offset = "0x10F8C70", VA = "0x10F8C70")]
	public static string[] GetFiles()
	{
		return null;
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0x10F8CD4", Offset = "0x10F8CD4", VA = "0x10F8CD4")]
	public static string[] GetFiles(string directoryPath)
	{
		return null;
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0x10F8D3C", Offset = "0x10F8D3C", VA = "0x10F8D3C")]
	public static string[] GetFiles(string directoryPath, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0x10F764C", Offset = "0x10F764C", VA = "0x10F764C")]
	public static string[] GetFiles(ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0x10F8DB0", Offset = "0x10F8DB0", VA = "0x10F8DB0")]
	public static string[] GetDirectories()
	{
		return null;
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0x10F8E14", Offset = "0x10F8E14", VA = "0x10F8E14")]
	public static string[] GetDirectories(string directoryPath)
	{
		return null;
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0x10F8E7C", Offset = "0x10F8E7C", VA = "0x10F8E7C")]
	public static string[] GetDirectories(string directoryPath, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0x10F7764", Offset = "0x10F7764", VA = "0x10F7764")]
	public static string[] GetDirectories(ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0x10F8EF0", Offset = "0x10F8EF0", VA = "0x10F8EF0")]
	public static void CreateBackup()
	{
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0x10F8FF0", Offset = "0x10F8FF0", VA = "0x10F8FF0")]
	public static void CreateBackup(string filePath)
	{
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0x10F9058", Offset = "0x10F9058", VA = "0x10F9058")]
	public static void CreateBackup(string filePath, ES3Settings settings)
	{
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0x10F8F54", Offset = "0x10F8F54", VA = "0x10F8F54")]
	public static void CreateBackup(ES3Settings settings)
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0x10F90CC", Offset = "0x10F90CC", VA = "0x10F90CC")]
	public static bool RestoreBackup(string filePath)
	{
		return default(bool);
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0x10F91EC", Offset = "0x10F91EC", VA = "0x10F91EC")]
	public static bool RestoreBackup(string filePath, ES3Settings settings)
	{
		return default(bool);
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0x10F9134", Offset = "0x10F9134", VA = "0x10F9134")]
	public static bool RestoreBackup(ES3Settings settings)
	{
		return default(bool);
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0x10F9260", Offset = "0x10F9260", VA = "0x10F9260")]
	public static DateTime GetTimestamp()
	{
		return default(DateTime);
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0x10F945C", Offset = "0x10F945C", VA = "0x10F945C")]
	public static DateTime GetTimestamp(string filePath)
	{
		return default(DateTime);
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0x10F94C4", Offset = "0x10F94C4", VA = "0x10F94C4")]
	public static DateTime GetTimestamp(string filePath, ES3Settings settings)
	{
		return default(DateTime);
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0x10F92C4", Offset = "0x10F92C4", VA = "0x10F92C4")]
	public static DateTime GetTimestamp(ES3Settings settings)
	{
		return default(DateTime);
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0x10F9538", Offset = "0x10F9538", VA = "0x10F9538")]
	public static void StoreCachedFile()
	{
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0x10F959C", Offset = "0x10F959C", VA = "0x10F959C")]
	public static void StoreCachedFile(string filePath)
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0x10F966C", Offset = "0x10F966C", VA = "0x10F966C")]
	public static void StoreCachedFile(string filePath, ES3Settings settings)
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0x10F9604", Offset = "0x10F9604", VA = "0x10F9604")]
	public static void StoreCachedFile(ES3Settings settings)
	{
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0x10F96E0", Offset = "0x10F96E0", VA = "0x10F96E0")]
	public static void CacheFile()
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0x10F97AC", Offset = "0x10F97AC", VA = "0x10F97AC")]
	public static void CacheFile(string filePath)
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0x10F9814", Offset = "0x10F9814", VA = "0x10F9814")]
	public static void CacheFile(string filePath, ES3Settings settings)
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0x10F9744", Offset = "0x10F9744", VA = "0x10F9744")]
	public static void CacheFile(ES3Settings settings)
	{
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0x10F9888", Offset = "0x10F9888", VA = "0x10F9888")]
	public static void Init()
	{
	}
}
[Token(Token = "0x2000010")]
public class ES3File
{
	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xCB0E4C", Offset = "0xCB0E4C")]
	internal static Dictionary<string, ES3File> cachedFiles;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ES3Settings settings;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<string, ES3Data> cache;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool syncWithFile;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private DateTime timestamp;

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0x1825C8C", Offset = "0x1825C8C", VA = "0x1825C8C")]
	public ES3File()
	{
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0x182616C", Offset = "0x182616C", VA = "0x182616C")]
	public ES3File(string filePath)
	{
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0x18261E8", Offset = "0x18261E8", VA = "0x18261E8")]
	public ES3File(string filePath, ES3Settings settings)
	{
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0x1826268", Offset = "0x1826268", VA = "0x1826268")]
	public ES3File(ES3Settings settings)
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0x1826270", Offset = "0x1826270", VA = "0x1826270")]
	public ES3File(bool syncWithFile)
	{
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0x18262EC", Offset = "0x18262EC", VA = "0x18262EC")]
	public ES3File(string filePath, bool syncWithFile)
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0x182636C", Offset = "0x182636C", VA = "0x182636C")]
	public ES3File(string filePath, ES3Settings settings, bool syncWithFile)
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0x1825CFC", Offset = "0x1825CFC", VA = "0x1825CFC")]
	public ES3File(ES3Settings settings, bool syncWithFile)
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0x18263F8", Offset = "0x18263F8", VA = "0x18263F8")]
	public ES3File(byte[] bytes, [Optional] ES3Settings settings)
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0x1826508", Offset = "0x1826508", VA = "0x1826508")]
	public void Sync()
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0x1826854", Offset = "0x1826854", VA = "0x1826854")]
	public void Sync(string filePath, [Optional] ES3Settings settings)
	{
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0x1826510", Offset = "0x1826510", VA = "0x1826510")]
	public void Sync([Optional] ES3Settings settings)
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x1823EA0", Offset = "0x1823EA0", VA = "0x1823EA0")]
	public void Clear()
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x18268D0", Offset = "0x18268D0", VA = "0x18268D0")]
	public string[] GetKeys()
	{
		return null;
	}

	[Token(Token = "0x60000FB")]
	public void Save<T>(string key, T value)
	{
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0x1823EF8", Offset = "0x1823EF8", VA = "0x1823EF8")]
	public void SaveRaw(byte[] bytes, [Optional] ES3Settings settings)
	{
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0x1826980", Offset = "0x1826980", VA = "0x1826980")]
	public void AppendRaw(byte[] bytes, [Optional] ES3Settings settings)
	{
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0x1826A04", Offset = "0x1826A04", VA = "0x1826A04")]
	public object Load(string key)
	{
		return null;
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0x1826A64", Offset = "0x1826A64", VA = "0x1826A64")]
	public object Load(string key, object defaultValue)
	{
		return null;
	}

	[Token(Token = "0x6000100")]
	public T Load<T>(string key)
	{
		return (T)null;
	}

	[Token(Token = "0x6000101")]
	public T Load<T>(string key, T defaultValue)
	{
		return (T)null;
	}

	[Token(Token = "0x6000102")]
	public void LoadInto<T>(string key, T obj) where T : class
	{
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0x18216E8", Offset = "0x18216E8", VA = "0x18216E8")]
	public byte[] LoadRawBytes()
	{
		return null;
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0x1826E48", Offset = "0x1826E48", VA = "0x1826E48")]
	public string LoadRawString()
	{
		return null;
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0x1826EEC", Offset = "0x1826EEC", VA = "0x1826EEC")]
	public void DeleteKey(string key)
	{
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0x1826F54", Offset = "0x1826F54", VA = "0x1826F54")]
	public bool KeyExists(string key)
	{
		return default(bool);
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0x1826FBC", Offset = "0x1826FBC", VA = "0x1826FBC")]
	public int Size()
	{
		return default(int);
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0x18270BC", Offset = "0x18270BC", VA = "0x18270BC")]
	public Type GetKeyType(string key)
	{
		return null;
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0x18271A8", Offset = "0x18271A8", VA = "0x18271A8")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xCB28E8", Offset = "0xCB28E8")]
	internal static ES3File GetOrCreateCachedFile(ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0x18272BC", Offset = "0x18272BC", VA = "0x18272BC")]
	internal static void CacheFile(ES3Settings settings)
	{
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0x1827410", Offset = "0x1827410", VA = "0x1827410")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xCB28FC", Offset = "0xCB28FC")]
	internal static void Store([Optional] ES3Settings settings)
	{
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0x18275BC", Offset = "0x18275BC", VA = "0x18275BC")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xCB2910", Offset = "0xCB2910")]
	internal static void RemoveCachedFile(ES3Settings settings)
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0x1827644", Offset = "0x1827644", VA = "0x1827644")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xCB2924", Offset = "0xCB2924")]
	internal static void CopyCachedFile(ES3Settings oldSettings, ES3Settings newSettings)
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0x18279C0", Offset = "0x18279C0", VA = "0x18279C0")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xCB2938", Offset = "0xCB2938")]
	internal static void DeleteKey(string key, ES3Settings settings)
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0x1827A74", Offset = "0x1827A74", VA = "0x1827A74")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xCB294C", Offset = "0xCB294C")]
	internal static bool KeyExists(string key, ES3Settings settings)
	{
		return default(bool);
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0x1827B34", Offset = "0x1827B34", VA = "0x1827B34")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xCB2960", Offset = "0xCB2960")]
	internal static bool FileExists(ES3Settings settings)
	{
		return default(bool);
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0x1827BBC", Offset = "0x1827BBC", VA = "0x1827BBC")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xCB2974", Offset = "0xCB2974")]
	internal static string[] GetKeys(ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0x1827CF4", Offset = "0x1827CF4", VA = "0x1827CF4")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xCB2988", Offset = "0xCB2988")]
	internal static string[] GetFiles()
	{
		return null;
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0x1827D80", Offset = "0x1827D80", VA = "0x1827D80")]
	internal static DateTime GetTimestamp(ES3Settings settings)
	{
		return default(DateTime);
	}
}
[Token(Token = "0x2000011")]
public class ES3InspectorInfo : MonoBehaviour
{
	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string message;

	[Token(Token = "0x6000115")]
	[Address(RVA = "0x1827F0C", Offset = "0x1827F0C", VA = "0x1827F0C")]
	public ES3InspectorInfo()
	{
	}
}
[Token(Token = "0x2000012")]
public class ES3ReferenceMgr : ES3ReferenceMgrBase
{
	[Token(Token = "0x6000116")]
	[Address(RVA = "0x1AA6BA4", Offset = "0x1AA6BA4", VA = "0x1AA6BA4")]
	public ES3ReferenceMgr()
	{
	}
}
[Token(Token = "0x2000013")]
public class ES3Spreadsheet
{
	[Token(Token = "0x200024E")]
	protected struct Index
	{
		[Token(Token = "0x4000C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int col;

		[Token(Token = "0x4000C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int row;

		[Token(Token = "0x6000EAD")]
		[Address(RVA = "0xE02954", Offset = "0xE02954", VA = "0xE02954")]
		public Index(int col, int row)
		{
		}
	}

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int cols;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int rows;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<Index, string> cells;

	[Token(Token = "0x400004C")]
	private const string QUOTE = "\"";

	[Token(Token = "0x400004D")]
	private const char QUOTE_CHAR = '"';

	[Token(Token = "0x400004E")]
	private const char COMMA_CHAR = ',';

	[Token(Token = "0x400004F")]
	private const char NEWLINE_CHAR = '\n';

	[Token(Token = "0x4000050")]
	private const string ESCAPED_QUOTE = "\"\"";

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static char[] CHARS_TO_ESCAPE;

	[Token(Token = "0x17000023")]
	public int ColumnCount
	{
		[Token(Token = "0x6000118")]
		[Address(RVA = "0x1AA7F3C", Offset = "0x1AA7F3C", VA = "0x1AA7F3C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000024")]
	public int RowCount
	{
		[Token(Token = "0x6000119")]
		[Address(RVA = "0x1AA7F44", Offset = "0x1AA7F44", VA = "0x1AA7F44")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0x1AA7EA4", Offset = "0x1AA7EA4", VA = "0x1AA7EA4")]
	public ES3Spreadsheet()
	{
	}

	[Token(Token = "0x600011A")]
	public void SetCell<T>(int col, int row, T value)
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x1AA7F4C", Offset = "0x1AA7F4C", VA = "0x1AA7F4C")]
	private void SetCellString(int col, int row, string value)
	{
	}

	[Token(Token = "0x600011C")]
	public T GetCell<T>(int col, int row)
	{
		return (T)null;
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0x1AA8000", Offset = "0x1AA8000", VA = "0x1AA8000")]
	internal object GetCell(Type type, int col, int row)
	{
		return null;
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0x1AA8BB4", Offset = "0x1AA8BB4", VA = "0x1AA8BB4")]
	public void Load(string filePath)
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x1AA8C78", Offset = "0x1AA8C78", VA = "0x1AA8C78")]
	public void Load(string filePath, ES3Settings settings)
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0x1AA8C3C", Offset = "0x1AA8C3C", VA = "0x1AA8C3C")]
	public void Load(ES3Settings settings)
	{
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0x1AA92EC", Offset = "0x1AA92EC", VA = "0x1AA92EC")]
	public void LoadRaw(string str)
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0x1AA93C0", Offset = "0x1AA93C0", VA = "0x1AA93C0")]
	public void LoadRaw(string str, ES3Settings settings)
	{
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0x1AA8D04", Offset = "0x1AA8D04", VA = "0x1AA8D04")]
	private void Load(Stream stream, ES3Settings settings)
	{
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0x1AA9468", Offset = "0x1AA9468", VA = "0x1AA9468")]
	public void Save(string filePath)
	{
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0x1AA9AF4", Offset = "0x1AA9AF4", VA = "0x1AA9AF4")]
	public void Save(string filePath, ES3Settings settings)
	{
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0x1AA9B70", Offset = "0x1AA9B70", VA = "0x1AA9B70")]
	public void Save(ES3Settings settings)
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0x1AA9B78", Offset = "0x1AA9B78", VA = "0x1AA9B78")]
	public void Save(string filePath, bool append)
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0x1AA9BF4", Offset = "0x1AA9BF4", VA = "0x1AA9BF4")]
	public void Save(string filePath, ES3Settings settings, bool append)
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0x1AA94E0", Offset = "0x1AA94E0", VA = "0x1AA94E0")]
	public void Save(ES3Settings settings, bool append)
	{
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0x1AA9DF4", Offset = "0x1AA9DF4", VA = "0x1AA9DF4")]
	private static string Escape(string str, bool isAlreadyWrappedInQuotes = false)
	{
		return null;
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0x1AA9EFC", Offset = "0x1AA9EFC", VA = "0x1AA9EFC")]
	private static string Unescape(string str)
	{
		return null;
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0x1AA9C7C", Offset = "0x1AA9C7C", VA = "0x1AA9C7C")]
	private string[,] ToArray()
	{
		return null;
	}
}
[Token(Token = "0x2000014")]
public abstract class ES3Reader : IDisposable
{
	[Token(Token = "0x200024F")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xCAEED0", Offset = "0xCAEED0")]
	public class ES3ReaderPropertyEnumerator
	{
		[Token(Token = "0x2000420")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB0A34", Offset = "0xCB0A34")]
		private sealed class <GetEnumerator>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000EBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000EBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000EBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ES3ReaderPropertyEnumerator <>4__this;

			[Token(Token = "0x170001BE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001625")]
				[Address(RVA = "0x1AA6880", Offset = "0x1AA6880", VA = "0x1AA6880", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001BF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001627")]
				[Address(RVA = "0x1AA68E8", Offset = "0x1AA68E8", VA = "0x1AA68E8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001622")]
			[Address(RVA = "0x1AA679C", Offset = "0x1AA679C", VA = "0x1AA679C")]
			[DebuggerHidden]
			public <GetEnumerator>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6001623")]
			[Address(RVA = "0x1AA67C8", Offset = "0x1AA67C8", VA = "0x1AA67C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001624")]
			[Address(RVA = "0x1AA67CC", Offset = "0x1AA67CC", VA = "0x1AA67CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001626")]
			[Address(RVA = "0x1AA6888", Offset = "0x1AA6888", VA = "0x1AA6888", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ES3Reader reader;

		[Token(Token = "0x6000EAE")]
		[Address(RVA = "0x1AA5BA4", Offset = "0x1AA5BA4", VA = "0x1AA5BA4")]
		public ES3ReaderPropertyEnumerator(ES3Reader reader)
		{
		}

		[Token(Token = "0x6000EAF")]
		[Address(RVA = "0x1AA6720", Offset = "0x1AA6720", VA = "0x1AA6720")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCB53E8", Offset = "0xCB53E8")]
		public IEnumerator GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x2000250")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xCAEEE4", Offset = "0xCAEEE4")]
	public class ES3ReaderRawEnumerator
	{
		[Token(Token = "0x2000421")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB0A44", Offset = "0xCB0A44")]
		private sealed class <GetEnumerator>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000EBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000EC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000EC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ES3ReaderRawEnumerator <>4__this;

			[Token(Token = "0x170001C0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600162B")]
				[Address(RVA = "0x1AA6B08", Offset = "0x1AA6B08", VA = "0x1AA6B08", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001C1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600162D")]
				[Address(RVA = "0x1AA6B70", Offset = "0x1AA6B70", VA = "0x1AA6B70", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001628")]
			[Address(RVA = "0x1AA696C", Offset = "0x1AA696C", VA = "0x1AA696C")]
			[DebuggerHidden]
			public <GetEnumerator>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6001629")]
			[Address(RVA = "0x1AA6998", Offset = "0x1AA6998", VA = "0x1AA6998", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600162A")]
			[Address(RVA = "0x1AA699C", Offset = "0x1AA699C", VA = "0x1AA699C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600162C")]
			[Address(RVA = "0x1AA6B10", Offset = "0x1AA6B10", VA = "0x1AA6B10", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ES3Reader reader;

		[Token(Token = "0x6000EB0")]
		[Address(RVA = "0x1AA5C48", Offset = "0x1AA5C48", VA = "0x1AA5C48")]
		public ES3ReaderRawEnumerator(ES3Reader reader)
		{
		}

		[Token(Token = "0x6000EB1")]
		[Address(RVA = "0x1AA68F0", Offset = "0x1AA68F0", VA = "0x1AA68F0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCB544C", Offset = "0xCB544C")]
		public IEnumerator GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ES3Settings settings;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected int serializationDepth;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	internal string overridePropertiesName;

	[Token(Token = "0x17000025")]
	public virtual ES3ReaderPropertyEnumerator Properties
	{
		[Token(Token = "0x6000151")]
		[Address(RVA = "0x1AA5B34", Offset = "0x1AA5B34", VA = "0x1AA5B34", Slot = "39")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000026")]
	internal virtual ES3ReaderRawEnumerator RawEnumerator
	{
		[Token(Token = "0x6000152")]
		[Address(RVA = "0x1AA5BD8", Offset = "0x1AA5BD8", VA = "0x1AA5BD8", Slot = "40")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600012E")]
	internal abstract int Read_int();

	[Token(Token = "0x600012F")]
	internal abstract float Read_float();

	[Token(Token = "0x6000130")]
	internal abstract bool Read_bool();

	[Token(Token = "0x6000131")]
	internal abstract char Read_char();

	[Token(Token = "0x6000132")]
	internal abstract decimal Read_decimal();

	[Token(Token = "0x6000133")]
	internal abstract double Read_double();

	[Token(Token = "0x6000134")]
	internal abstract long Read_long();

	[Token(Token = "0x6000135")]
	internal abstract ulong Read_ulong();

	[Token(Token = "0x6000136")]
	internal abstract byte Read_byte();

	[Token(Token = "0x6000137")]
	internal abstract sbyte Read_sbyte();

	[Token(Token = "0x6000138")]
	internal abstract short Read_short();

	[Token(Token = "0x6000139")]
	internal abstract ushort Read_ushort();

	[Token(Token = "0x600013A")]
	internal abstract uint Read_uint();

	[Token(Token = "0x600013B")]
	internal abstract string Read_string();

	[Token(Token = "0x600013C")]
	internal abstract byte[] Read_byteArray();

	[Token(Token = "0x600013D")]
	internal abstract long Read_ref();

	[Token(Token = "0x600013E")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xCB299C", Offset = "0xCB299C")]
	public abstract string ReadPropertyName();

	[Token(Token = "0x600013F")]
	protected abstract Type ReadKeyPrefix(bool ignore = false);

	[Token(Token = "0x6000140")]
	protected abstract void ReadKeySuffix();

	[Token(Token = "0x6000141")]
	internal abstract byte[] ReadElement(bool skip = false);

	[Token(Token = "0x6000142")]
	internal abstract bool Goto(string key);

	[Token(Token = "0x6000143")]
	public abstract void Dispose();

	[Token(Token = "0x6000144")]
	[Address(RVA = "0x1AA5ADC", Offset = "0x1AA5ADC", VA = "0x1AA5ADC", Slot = "27")]
	internal virtual bool StartReadObject()
	{
		return default(bool);
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0x1AA5AF0", Offset = "0x1AA5AF0", VA = "0x1AA5AF0", Slot = "28")]
	internal virtual void EndReadObject()
	{
	}

	[Token(Token = "0x6000146")]
	internal abstract bool StartReadDictionary();

	[Token(Token = "0x6000147")]
	internal abstract void EndReadDictionary();

	[Token(Token = "0x6000148")]
	internal abstract bool StartReadDictionaryKey();

	[Token(Token = "0x6000149")]
	internal abstract void EndReadDictionaryKey();

	[Token(Token = "0x600014A")]
	internal abstract void StartReadDictionaryValue();

	[Token(Token = "0x600014B")]
	internal abstract bool EndReadDictionaryValue();

	[Token(Token = "0x600014C")]
	internal abstract bool StartReadCollection();

	[Token(Token = "0x600014D")]
	internal abstract void EndReadCollection();

	[Token(Token = "0x600014E")]
	internal abstract bool StartReadCollectionItem();

	[Token(Token = "0x600014F")]
	internal abstract bool EndReadCollectionItem();

	[Token(Token = "0x6000150")]
	[Address(RVA = "0x1AA5B00", Offset = "0x1AA5B00", VA = "0x1AA5B00")]
	internal ES3Reader(ES3Settings settings, bool readHeaderAndFooter = true)
	{
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0x1AA5C7C", Offset = "0x1AA5C7C", VA = "0x1AA5C7C", Slot = "41")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xCB29B0", Offset = "0xCB29B0")]
	public virtual void Skip()
	{
	}

	[Token(Token = "0x6000154")]
	public virtual T Read<T>()
	{
		return (T)null;
	}

	[Token(Token = "0x6000155")]
	public virtual void ReadInto<T>(object obj)
	{
	}

	[Token(Token = "0x6000156")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xCB29C4", Offset = "0xCB29C4")]
	public T ReadProperty<T>()
	{
		return (T)null;
	}

	[Token(Token = "0x6000157")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xCB29D8", Offset = "0xCB29D8")]
	public T ReadProperty<T>(ES3Type type)
	{
		return (T)null;
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0x1AA5C90", Offset = "0x1AA5C90", VA = "0x1AA5C90")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xCB29EC", Offset = "0xCB29EC")]
	public long ReadRefProperty()
	{
		return default(long);
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0x1AA5CCC", Offset = "0x1AA5CCC", VA = "0x1AA5CCC")]
	internal Type ReadType()
	{
		return null;
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0x1AA5DBC", Offset = "0x1AA5DBC", VA = "0x1AA5DBC")]
	public void SetPrivateProperty(string name, object value, object objectContainingProperty)
	{
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0x1AA5FB4", Offset = "0x1AA5FB4", VA = "0x1AA5FB4")]
	public void SetPrivateField(string name, object value, object objectContainingField)
	{
	}

	[Token(Token = "0x600015C")]
	public virtual T Read<T>(string key)
	{
		return (T)null;
	}

	[Token(Token = "0x600015D")]
	public virtual T Read<T>(string key, T defaultValue)
	{
		return (T)null;
	}

	[Token(Token = "0x600015E")]
	public virtual void ReadInto<T>(string key, T obj) where T : class
	{
	}

	[Token(Token = "0x600015F")]
	protected virtual void ReadObject<T>(object obj, ES3Type type)
	{
	}

	[Token(Token = "0x6000160")]
	protected virtual T ReadObject<T>(ES3Type type)
	{
		return (T)null;
	}

	[Token(Token = "0x6000161")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xCB2A00", Offset = "0xCB2A00")]
	public virtual T Read<T>(ES3Type type)
	{
		return (T)null;
	}

	[Token(Token = "0x6000162")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xCB2A14", Offset = "0xCB2A14")]
	public virtual void ReadInto<T>(object obj, ES3Type type)
	{
	}

	[Token(Token = "0x6000163")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xCB2A28", Offset = "0xCB2A28")]
	internal Type ReadTypeFromHeader<T>()
	{
		return null;
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0x1AA61AC", Offset = "0x1AA61AC", VA = "0x1AA61AC")]
	public static ES3Reader Create()
	{
		return null;
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0x1AA6344", Offset = "0x1AA6344", VA = "0x1AA6344")]
	public static ES3Reader Create(string filePath)
	{
		return null;
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0x1AA63A8", Offset = "0x1AA63A8", VA = "0x1AA63A8")]
	public static ES3Reader Create(string filePath, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0x1AA626C", Offset = "0x1AA626C", VA = "0x1AA626C")]
	public static ES3Reader Create(ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0x1AA6418", Offset = "0x1AA6418", VA = "0x1AA6418")]
	public static ES3Reader Create(byte[] bytes)
	{
		return null;
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0x1AA647C", Offset = "0x1AA647C", VA = "0x1AA647C")]
	public static ES3Reader Create(byte[] bytes, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0x1AA657C", Offset = "0x1AA657C", VA = "0x1AA657C")]
	internal static ES3Reader Create(Stream stream, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0x1AA6658", Offset = "0x1AA6658", VA = "0x1AA6658")]
	internal static ES3Reader Create(Stream stream, ES3Settings settings, bool readHeaderAndFooter)
	{
		return null;
	}
}
[Token(Token = "0x2000015")]
public class ES3XMLReader
{
	[Token(Token = "0x600016C")]
	[Address(RVA = "0x19CC87C", Offset = "0x19CC87C", VA = "0x19CC87C")]
	public ES3XMLReader()
	{
	}
}
[Token(Token = "0x2000016")]
public class ES3Defaults : ScriptableObject
{
	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public ES3SerializableSettings settings;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool addMgrToSceneAutomatically;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool autoUpdateReferences;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool logDebugInfo;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	public bool logWarnings;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool logErrors;

	[Token(Token = "0x600016D")]
	[Address(RVA = "0x1825C08", Offset = "0x1825C08", VA = "0x1825C08")]
	public ES3Defaults()
	{
	}
}
[Token(Token = "0x2000017")]
public class ES3Settings : ICloneable
{
	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ES3Settings _defaults;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ES3Defaults _defaultSettingsScriptableObject;

	[Token(Token = "0x400005D")]
	private const string defaultSettingsPath = "ES3/ES3Defaults";

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static ES3Settings _unencryptedUncompressedSettings;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly string[] resourcesExtensions;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private ES3.Location _location;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string path;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ES3.EncryptionType encryptionType;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ES3.CompressionType compressionType;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string encryptionPassword;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ES3.Directory directory;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ES3.Format format;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool prettyPrint;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int bufferSize;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Encoding encoding;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool saveChildren;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xCB0E80", Offset = "0xCB0E80")]
	public bool typeChecking;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xCB0E94", Offset = "0xCB0E94")]
	public bool safeReflection;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xCB0EA8", Offset = "0xCB0EA8")]
	public ES3.ReferenceMode memberReferenceMode;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xCB0EBC", Offset = "0xCB0EBC")]
	public ES3.ReferenceMode referenceMode;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xCB0ED0", Offset = "0xCB0ED0")]
	public int serializationDepthLimit;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xCB0EE4", Offset = "0xCB0EE4")]
	public string[] assemblyNames;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string pathToEasySaveFolder;

	[Token(Token = "0x17000027")]
	public static ES3Defaults defaultSettingsScriptableObject
	{
		[Token(Token = "0x600016E")]
		[Address(RVA = "0x1AA6FF0", Offset = "0x1AA6FF0", VA = "0x1AA6FF0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000028")]
	public static ES3Settings defaultSettings
	{
		[Token(Token = "0x600016F")]
		[Address(RVA = "0x1AA7104", Offset = "0x1AA7104", VA = "0x1AA7104")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000029")]
	internal static ES3Settings unencryptedUncompressedSettings
	{
		[Token(Token = "0x6000170")]
		[Address(RVA = "0x1AA7220", Offset = "0x1AA7220", VA = "0x1AA7220")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700002A")]
	public ES3.Location location
	{
		[Token(Token = "0x6000171")]
		[Address(RVA = "0x1AA7560", Offset = "0x1AA7560", VA = "0x1AA7560")]
		get
		{
			return default(ES3.Location);
		}
		[Token(Token = "0x6000172")]
		[Address(RVA = "0x1AA75B0", Offset = "0x1AA75B0", VA = "0x1AA75B0")]
		set
		{
		}
	}

	[Token(Token = "0x1700002B")]
	public string FullPath
	{
		[Token(Token = "0x6000173")]
		[Address(RVA = "0x1AA75B8", Offset = "0x1AA75B8", VA = "0x1AA75B8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0x1AA6208", Offset = "0x1AA6208", VA = "0x1AA6208")]
	public ES3Settings([Optional] string path, [Optional] ES3Settings settings)
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0x1AA7A3C", Offset = "0x1AA7A3C", VA = "0x1AA7A3C")]
	public ES3Settings(string path, params Enum[] enums)
	{
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0x1AA73CC", Offset = "0x1AA73CC", VA = "0x1AA73CC")]
	public ES3Settings(params Enum[] enums)
	{
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0x1AA7A80", Offset = "0x1AA7A80", VA = "0x1AA7A80")]
	public ES3Settings(ES3.EncryptionType encryptionType, string encryptionPassword)
	{
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0x1AA7AC4", Offset = "0x1AA7AC4", VA = "0x1AA7AC4")]
	public ES3Settings(string path, ES3.EncryptionType encryptionType, string encryptionPassword, [Optional] ES3Settings settings)
	{
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0x1AA6C7C", Offset = "0x1AA6C7C", VA = "0x1AA6C7C")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xCB2A3C", Offset = "0xCB2A3C")]
	public ES3Settings(bool applyDefaults)
	{
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0x1AA78D0", Offset = "0x1AA78D0", VA = "0x1AA78D0")]
	private static bool IsAbsolute(string path)
	{
		return default(bool);
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0x1AA7B08", Offset = "0x1AA7B08", VA = "0x1AA7B08", Slot = "4")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xCB2A50", Offset = "0xCB2A50")]
	public object Clone()
	{
		return null;
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0x1AA7974", Offset = "0x1AA7974", VA = "0x1AA7974")]
	private void CopyInto(ES3Settings newSettings)
	{
	}
}
[Serializable]
[Token(Token = "0x2000018")]
[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xCA7DC8", Offset = "0xCA7DC8")]
public class ES3SerializableSettings : ES3Settings
{
	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool showAdvancedSettings;

	[Token(Token = "0x600017E")]
	[Address(RVA = "0x1AA6C14", Offset = "0x1AA6C14", VA = "0x1AA6C14")]
	public ES3SerializableSettings()
	{
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0x1AA6E7C", Offset = "0x1AA6E7C", VA = "0x1AA6E7C")]
	public ES3SerializableSettings(bool applyDefaults)
	{
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0x1AA6EF0", Offset = "0x1AA6EF0", VA = "0x1AA6EF0")]
	public ES3SerializableSettings(string path)
	{
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0x1AA6F74", Offset = "0x1AA6F74", VA = "0x1AA6F74")]
	public ES3SerializableSettings(string path, ES3.Location location)
	{
	}
}
[Token(Token = "0x2000019")]
public class ES3Ref
{
	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public long id;

	[Token(Token = "0x6000182")]
	[Address(RVA = "0x1AA6B78", Offset = "0x1AA6B78", VA = "0x1AA6B78")]
	public ES3Ref(long id)
	{
	}
}
[Token(Token = "0x200001A")]
public class ES3Cloud : ES3WebClass
{
	[Token(Token = "0x2000251")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCAEEF8", Offset = "0xCAEEF8")]
	private sealed class <Sync>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ES3Cloud <>4__this;

		[Token(Token = "0x4000C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ES3Settings settings;

		[Token(Token = "0x4000C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string user;

		[Token(Token = "0x4000C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string password;

		[Token(Token = "0x17000121")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EB5")]
			[Address(RVA = "0x18257D8", Offset = "0x18257D8", VA = "0x18257D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000122")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EB7")]
			[Address(RVA = "0x1825840", Offset = "0x1825840", VA = "0x1825840", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EB2")]
		[Address(RVA = "0x1821150", Offset = "0x1821150", VA = "0x1821150")]
		[DebuggerHidden]
		public <Sync>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6000EB3")]
		[Address(RVA = "0x1825678", Offset = "0x1825678", VA = "0x1825678", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EB4")]
		[Address(RVA = "0x182567C", Offset = "0x182567C", VA = "0x182567C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EB6")]
		[Address(RVA = "0x18257E0", Offset = "0x18257E0", VA = "0x18257E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000252")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCAEF08", Offset = "0xCAEF08")]
	private sealed class <UploadFile>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ES3Cloud <>4__this;

		[Token(Token = "0x4000C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ES3Settings settings;

		[Token(Token = "0x4000C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public long fileTimestamp;

		[Token(Token = "0x4000C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string user;

		[Token(Token = "0x4000C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string password;

		[Token(Token = "0x4000C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public byte[] bytes;

		[Token(Token = "0x4000C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private UnityWebRequest <webRequest>5__2;

		[Token(Token = "0x17000123")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EBC")]
			[Address(RVA = "0x1825B98", Offset = "0x1825B98", VA = "0x1825B98", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000124")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EBE")]
			[Address(RVA = "0x1825C00", Offset = "0x1825C00", VA = "0x1825C00", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EB8")]
		[Address(RVA = "0x1821F14", Offset = "0x1821F14", VA = "0x1821F14")]
		[DebuggerHidden]
		public <UploadFile>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x6000EB9")]
		[Address(RVA = "0x1825848", Offset = "0x1825848", VA = "0x1825848", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EBA")]
		[Address(RVA = "0x1825924", Offset = "0x1825924", VA = "0x1825924", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EBB")]
		[Address(RVA = "0x1825864", Offset = "0x1825864", VA = "0x1825864")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000EBD")]
		[Address(RVA = "0x1825BA0", Offset = "0x1825BA0", VA = "0x1825BA0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000253")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCAEF18", Offset = "0xCAEF18")]
	private sealed class <DownloadFile>d__42 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ES3Cloud <>4__this;

		[Token(Token = "0x4000C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ES3File es3File;

		[Token(Token = "0x4000C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string user;

		[Token(Token = "0x4000C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string password;

		[Token(Token = "0x4000C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public long timestamp;

		[Token(Token = "0x4000C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private UnityWebRequest <webRequest>5__2;

		[Token(Token = "0x17000125")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EC3")]
			[Address(RVA = "0x1824314", Offset = "0x1824314", VA = "0x1824314", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000126")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EC5")]
			[Address(RVA = "0x182437C", Offset = "0x182437C", VA = "0x182437C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EBF")]
		[Address(RVA = "0x18225B0", Offset = "0x18225B0", VA = "0x18225B0")]
		[DebuggerHidden]
		public <DownloadFile>d__42(int <>1__state)
		{
		}

		[Token(Token = "0x6000EC0")]
		[Address(RVA = "0x1823A84", Offset = "0x1823A84", VA = "0x1823A84", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EC1")]
		[Address(RVA = "0x1823B60", Offset = "0x1823B60", VA = "0x1823B60", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EC2")]
		[Address(RVA = "0x1823AA0", Offset = "0x1823AA0", VA = "0x1823AA0")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000EC4")]
		[Address(RVA = "0x182431C", Offset = "0x182431C", VA = "0x182431C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000254")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCAEF28", Offset = "0xCAEF28")]
	private sealed class <DownloadFile>d__43 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ES3Cloud <>4__this;

		[Token(Token = "0x4000C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ES3Settings settings;

		[Token(Token = "0x4000C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string user;

		[Token(Token = "0x4000C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string password;

		[Token(Token = "0x4000C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public long timestamp;

		[Token(Token = "0x4000C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private UnityWebRequest <webRequest>5__2;

		[Token(Token = "0x17000127")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000ECA")]
			[Address(RVA = "0x1824760", Offset = "0x1824760", VA = "0x1824760", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000128")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000ECC")]
			[Address(RVA = "0x18247C8", Offset = "0x18247C8", VA = "0x18247C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EC6")]
		[Address(RVA = "0x18225DC", Offset = "0x18225DC", VA = "0x18225DC")]
		[DebuggerHidden]
		public <DownloadFile>d__43(int <>1__state)
		{
		}

		[Token(Token = "0x6000EC7")]
		[Address(RVA = "0x1824384", Offset = "0x1824384", VA = "0x1824384", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EC8")]
		[Address(RVA = "0x1824460", Offset = "0x1824460", VA = "0x1824460", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EC9")]
		[Address(RVA = "0x18243A0", Offset = "0x18243A0", VA = "0x18243A0")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000ECB")]
		[Address(RVA = "0x1824768", Offset = "0x1824768", VA = "0x1824768", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000255")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCAEF38", Offset = "0xCAEF38")]
	private sealed class <DeleteFile>d__51 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ES3Cloud <>4__this;

		[Token(Token = "0x4000C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ES3Settings settings;

		[Token(Token = "0x4000C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string user;

		[Token(Token = "0x4000C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string password;

		[Token(Token = "0x4000C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private UnityWebRequest <webRequest>5__2;

		[Token(Token = "0x17000129")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000ED1")]
			[Address(RVA = "0x1823A14", Offset = "0x1823A14", VA = "0x1823A14", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000ED3")]
			[Address(RVA = "0x1823A7C", Offset = "0x1823A7C", VA = "0x1823A7C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000ECD")]
		[Address(RVA = "0x1822AA8", Offset = "0x1822AA8", VA = "0x1822AA8")]
		[DebuggerHidden]
		public <DeleteFile>d__51(int <>1__state)
		{
		}

		[Token(Token = "0x6000ECE")]
		[Address(RVA = "0x1823728", Offset = "0x1823728", VA = "0x1823728", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000ECF")]
		[Address(RVA = "0x1823804", Offset = "0x1823804", VA = "0x1823804", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ED0")]
		[Address(RVA = "0x1823744", Offset = "0x1823744", VA = "0x1823744")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000ED2")]
		[Address(RVA = "0x1823A1C", Offset = "0x1823A1C", VA = "0x1823A1C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000256")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCAEF48", Offset = "0xCAEF48")]
	private sealed class <RenameFile>d__58 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ES3Cloud <>4__this;

		[Token(Token = "0x4000C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ES3Settings settings;

		[Token(Token = "0x4000C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ES3Settings newSettings;

		[Token(Token = "0x4000C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string user;

		[Token(Token = "0x4000C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string password;

		[Token(Token = "0x4000C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private UnityWebRequest <webRequest>5__2;

		[Token(Token = "0x1700012B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000ED8")]
			[Address(RVA = "0x1825234", Offset = "0x1825234", VA = "0x1825234", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EDA")]
			[Address(RVA = "0x182529C", Offset = "0x182529C", VA = "0x182529C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000ED4")]
		[Address(RVA = "0x1823014", Offset = "0x1823014", VA = "0x1823014")]
		[DebuggerHidden]
		public <RenameFile>d__58(int <>1__state)
		{
		}

		[Token(Token = "0x6000ED5")]
		[Address(RVA = "0x1824F18", Offset = "0x1824F18", VA = "0x1824F18", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000ED6")]
		[Address(RVA = "0x1824FF4", Offset = "0x1824FF4", VA = "0x1824FF4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ED7")]
		[Address(RVA = "0x1824F34", Offset = "0x1824F34", VA = "0x1824F34")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000ED9")]
		[Address(RVA = "0x182523C", Offset = "0x182523C", VA = "0x182523C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000257")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCAEF58", Offset = "0xCAEF58")]
	private sealed class <DownloadFilenames>d__59 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ES3Cloud <>4__this;

		[Token(Token = "0x4000C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string user;

		[Token(Token = "0x4000C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string password;

		[Token(Token = "0x4000C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UnityWebRequest <webRequest>5__2;

		[Token(Token = "0x1700012D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EDF")]
			[Address(RVA = "0x1824B00", Offset = "0x1824B00", VA = "0x1824B00", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EE1")]
			[Address(RVA = "0x1824B68", Offset = "0x1824B68", VA = "0x1824B68", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EDB")]
		[Address(RVA = "0x18230EC", Offset = "0x18230EC", VA = "0x18230EC")]
		[DebuggerHidden]
		public <DownloadFilenames>d__59(int <>1__state)
		{
		}

		[Token(Token = "0x6000EDC")]
		[Address(RVA = "0x18247D0", Offset = "0x18247D0", VA = "0x18247D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EDD")]
		[Address(RVA = "0x18248AC", Offset = "0x18248AC", VA = "0x18248AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EDE")]
		[Address(RVA = "0x18247EC", Offset = "0x18247EC", VA = "0x18247EC")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000EE0")]
		[Address(RVA = "0x1824B08", Offset = "0x1824B08", VA = "0x1824B08", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000258")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCAEF68", Offset = "0xCAEF68")]
	private sealed class <SearchFilenames>d__60 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ES3Cloud <>4__this;

		[Token(Token = "0x4000C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string user;

		[Token(Token = "0x4000C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string password;

		[Token(Token = "0x4000C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string searchPattern;

		[Token(Token = "0x4000C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private UnityWebRequest <webRequest>5__2;

		[Token(Token = "0x1700012F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EE6")]
			[Address(RVA = "0x1825608", Offset = "0x1825608", VA = "0x1825608", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000130")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EE8")]
			[Address(RVA = "0x1825670", Offset = "0x1825670", VA = "0x1825670", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EE2")]
		[Address(RVA = "0x18231E0", Offset = "0x18231E0", VA = "0x18231E0")]
		[DebuggerHidden]
		public <SearchFilenames>d__60(int <>1__state)
		{
		}

		[Token(Token = "0x6000EE3")]
		[Address(RVA = "0x18252A4", Offset = "0x18252A4", VA = "0x18252A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EE4")]
		[Address(RVA = "0x1825380", Offset = "0x1825380", VA = "0x1825380", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EE5")]
		[Address(RVA = "0x18252C0", Offset = "0x18252C0", VA = "0x18252C0")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000EE7")]
		[Address(RVA = "0x1825610", Offset = "0x1825610", VA = "0x1825610", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000259")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCAEF78", Offset = "0xCAEF78")]
	private sealed class <DownloadTimestamp>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ES3Cloud <>4__this;

		[Token(Token = "0x4000C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ES3Settings settings;

		[Token(Token = "0x4000C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string user;

		[Token(Token = "0x4000C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string password;

		[Token(Token = "0x4000C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private UnityWebRequest <webRequest>5__2;

		[Token(Token = "0x17000131")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EED")]
			[Address(RVA = "0x1824EA8", Offset = "0x1824EA8", VA = "0x1824EA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000132")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EEF")]
			[Address(RVA = "0x1824F10", Offset = "0x1824F10", VA = "0x1824F10", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EE9")]
		[Address(RVA = "0x18236AC", Offset = "0x18236AC", VA = "0x18236AC")]
		[DebuggerHidden]
		public <DownloadTimestamp>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x6000EEA")]
		[Address(RVA = "0x1824B70", Offset = "0x1824B70", VA = "0x1824B70", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EEB")]
		[Address(RVA = "0x1824C4C", Offset = "0x1824C4C", VA = "0x1824C4C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EEC")]
		[Address(RVA = "0x1824B8C", Offset = "0x1824B8C", VA = "0x1824B8C")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000EEE")]
		[Address(RVA = "0x1824EB0", Offset = "0x1824EB0", VA = "0x1824EB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Encoding encoding;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private byte[] _data;

	[Token(Token = "0x1700002C")]
	public byte[] data
	{
		[Token(Token = "0x6000184")]
		[Address(RVA = "0x1820A28", Offset = "0x1820A28", VA = "0x1820A28")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700002D")]
	public string text
	{
		[Token(Token = "0x6000185")]
		[Address(RVA = "0x1820A30", Offset = "0x1820A30", VA = "0x1820A30")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700002E")]
	public string[] filenames
	{
		[Token(Token = "0x6000186")]
		[Address(RVA = "0x1820A64", Offset = "0x1820A64", VA = "0x1820A64")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700002F")]
	public DateTime timestamp
	{
		[Token(Token = "0x6000187")]
		[Address(RVA = "0x1820B28", Offset = "0x1820B28", VA = "0x1820B28")]
		get
		{
			return default(DateTime);
		}
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0x18209D4", Offset = "0x18209D4", VA = "0x18209D4")]
	public ES3Cloud(string url, string apiKey)
	{
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0x1820CB0", Offset = "0x1820CB0", VA = "0x1820CB0")]
	public IEnumerator Sync()
	{
		return null;
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0x1820DF4", Offset = "0x1820DF4", VA = "0x1820DF4")]
	public IEnumerator Sync(string filePath)
	{
		return null;
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0x1820E7C", Offset = "0x1820E7C", VA = "0x1820E7C")]
	public IEnumerator Sync(string filePath, string user)
	{
		return null;
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0x1820F08", Offset = "0x1820F08", VA = "0x1820F08")]
	public IEnumerator Sync(string filePath, string user, string password)
	{
		return null;
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0x1820F98", Offset = "0x1820F98", VA = "0x1820F98")]
	public IEnumerator Sync(string filePath, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0x1821024", Offset = "0x1821024", VA = "0x1821024")]
	public IEnumerator Sync(string filePath, string user, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0x18210BC", Offset = "0x18210BC", VA = "0x18210BC")]
	public IEnumerator Sync(string filePath, string user, string password, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0x1820D2C", Offset = "0x1820D2C", VA = "0x1820D2C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCB2A64", Offset = "0xCB2A64")]
	private IEnumerator Sync(ES3Settings settings, string user, string password)
	{
		return null;
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0x182117C", Offset = "0x182117C", VA = "0x182117C")]
	public IEnumerator UploadFile()
	{
		return null;
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0x1821264", Offset = "0x1821264", VA = "0x1821264")]
	public IEnumerator UploadFile(string filePath)
	{
		return null;
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0x1821300", Offset = "0x1821300", VA = "0x1821300")]
	public IEnumerator UploadFile(string filePath, string user)
	{
		return null;
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0x18213A0", Offset = "0x18213A0", VA = "0x18213A0")]
	public IEnumerator UploadFile(string filePath, string user, string password)
	{
		return null;
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0x1821440", Offset = "0x1821440", VA = "0x1821440")]
	public IEnumerator UploadFile(string filePath, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0x18214E0", Offset = "0x18214E0", VA = "0x18214E0")]
	public IEnumerator UploadFile(string filePath, string user, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0x182158C", Offset = "0x182158C", VA = "0x182158C")]
	public IEnumerator UploadFile(string filePath, string user, string password, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0x1821630", Offset = "0x1821630", VA = "0x1821630")]
	public IEnumerator UploadFile(ES3File es3File)
	{
		return null;
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0x1821D30", Offset = "0x1821D30", VA = "0x1821D30")]
	public IEnumerator UploadFile(ES3File es3File, string user)
	{
		return null;
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0x1821DEC", Offset = "0x1821DEC", VA = "0x1821DEC")]
	public IEnumerator UploadFile(ES3File es3File, string user, string password)
	{
		return null;
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0x1821214", Offset = "0x1821214", VA = "0x1821214")]
	public IEnumerator UploadFile(ES3Settings settings, string user, string password)
	{
		return null;
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0x1821EAC", Offset = "0x1821EAC", VA = "0x1821EAC")]
	private IEnumerator UploadFile(byte[] bytes, ES3Settings settings, string user, string password)
	{
		return null;
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0x1821C44", Offset = "0x1821C44", VA = "0x1821C44")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCB2AC8", Offset = "0xCB2AC8")]
	private IEnumerator UploadFile(byte[] bytes, ES3Settings settings, string user, string password, long fileTimestamp)
	{
		return null;
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0x1821F40", Offset = "0x1821F40", VA = "0x1821F40")]
	public IEnumerator DownloadFile()
	{
		return null;
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0x1822090", Offset = "0x1822090", VA = "0x1822090")]
	public IEnumerator DownloadFile(string filePath)
	{
		return null;
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0x182211C", Offset = "0x182211C", VA = "0x182211C")]
	public IEnumerator DownloadFile(string filePath, string user)
	{
		return null;
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0x18221AC", Offset = "0x18221AC", VA = "0x18221AC")]
	public IEnumerator DownloadFile(string filePath, string user, string password)
	{
		return null;
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0x1822240", Offset = "0x1822240", VA = "0x1822240")]
	public IEnumerator DownloadFile(string filePath, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0x18222D0", Offset = "0x18222D0", VA = "0x18222D0")]
	public IEnumerator DownloadFile(string filePath, string user, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0x182236C", Offset = "0x182236C", VA = "0x182236C")]
	public IEnumerator DownloadFile(string filePath, string user, string password, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0x1822404", Offset = "0x1822404", VA = "0x1822404")]
	public IEnumerator DownloadFile(ES3File es3File)
	{
		return null;
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0x182253C", Offset = "0x182253C", VA = "0x182253C")]
	public IEnumerator DownloadFile(ES3File es3File, string user)
	{
		return null;
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0x18225A8", Offset = "0x18225A8", VA = "0x18225A8")]
	public IEnumerator DownloadFile(ES3File es3File, string user, string password)
	{
		return null;
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0x182246C", Offset = "0x182246C", VA = "0x182246C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCB2B2C", Offset = "0xCB2B2C")]
	private IEnumerator DownloadFile(ES3File es3File, string user, string password, long timestamp)
	{
		return null;
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0x1821FC0", Offset = "0x1821FC0", VA = "0x1821FC0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCB2B90", Offset = "0xCB2B90")]
	private IEnumerator DownloadFile(ES3Settings settings, string user, string password, long timestamp)
	{
		return null;
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0x1822608", Offset = "0x1822608", VA = "0x1822608")]
	public IEnumerator DeleteFile()
	{
		return null;
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0x182274C", Offset = "0x182274C", VA = "0x182274C")]
	public IEnumerator DeleteFile(string filePath)
	{
		return null;
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0x18227D4", Offset = "0x18227D4", VA = "0x18227D4")]
	public IEnumerator DeleteFile(string filePath, string user)
	{
		return null;
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0x1822860", Offset = "0x1822860", VA = "0x1822860")]
	public IEnumerator DeleteFile(string filePath, string user, string password)
	{
		return null;
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0x18228F0", Offset = "0x18228F0", VA = "0x18228F0")]
	public IEnumerator DeleteFile(string filePath, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0x182297C", Offset = "0x182297C", VA = "0x182297C")]
	public IEnumerator DeleteFile(string filePath, string user, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0x1822A14", Offset = "0x1822A14", VA = "0x1822A14")]
	public IEnumerator DeleteFile(string filePath, string user, string password, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0x1822684", Offset = "0x1822684", VA = "0x1822684")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCB2BF4", Offset = "0xCB2BF4")]
	private IEnumerator DeleteFile(ES3Settings settings, string user, string password)
	{
		return null;
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0x1822AD4", Offset = "0x1822AD4", VA = "0x1822AD4")]
	public IEnumerator RenameFile(string filePath, string newFilePath)
	{
		return null;
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0x1822C64", Offset = "0x1822C64", VA = "0x1822C64")]
	public IEnumerator RenameFile(string filePath, string newFilePath, string user)
	{
		return null;
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0x1822D1C", Offset = "0x1822D1C", VA = "0x1822D1C")]
	public IEnumerator RenameFile(string filePath, string newFilePath, string user, string password)
	{
		return null;
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0x1822DD8", Offset = "0x1822DD8", VA = "0x1822DD8")]
	public IEnumerator RenameFile(string filePath, string newFilePath, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0x1822E90", Offset = "0x1822E90", VA = "0x1822E90")]
	public IEnumerator RenameFile(string filePath, string newFilePath, string user, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0x1822F54", Offset = "0x1822F54", VA = "0x1822F54")]
	public IEnumerator RenameFile(string filePath, string newFilePath, string user, string password, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0x1822B88", Offset = "0x1822B88", VA = "0x1822B88")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCB2C58", Offset = "0xCB2C58")]
	private IEnumerator RenameFile(ES3Settings settings, ES3Settings newSettings, string user, string password)
	{
		return null;
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0x1823040", Offset = "0x1823040", VA = "0x1823040")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCB2CBC", Offset = "0xCB2CBC")]
	public IEnumerator DownloadFilenames(string user = "", string password = "")
	{
		return null;
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0x1823118", Offset = "0x1823118", VA = "0x1823118")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCB2D20", Offset = "0xCB2D20")]
	public IEnumerator SearchFilenames(string searchPattern, string user = "", string password = "")
	{
		return null;
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0x182320C", Offset = "0x182320C", VA = "0x182320C")]
	public IEnumerator DownloadTimestamp()
	{
		return null;
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0x1823350", Offset = "0x1823350", VA = "0x1823350")]
	public IEnumerator DownloadTimestamp(string filePath)
	{
		return null;
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0x18233D8", Offset = "0x18233D8", VA = "0x18233D8")]
	public IEnumerator DownloadTimestamp(string filePath, string user)
	{
		return null;
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0x1823464", Offset = "0x1823464", VA = "0x1823464")]
	public IEnumerator DownloadTimestamp(string filePath, string user, string password)
	{
		return null;
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0x18234F4", Offset = "0x18234F4", VA = "0x18234F4")]
	public IEnumerator DownloadTimestamp(string filePath, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0x1823580", Offset = "0x1823580", VA = "0x1823580")]
	public IEnumerator DownloadTimestamp(string filePath, string user, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0x1823618", Offset = "0x1823618", VA = "0x1823618")]
	public IEnumerator DownloadTimestamp(string filePath, string user, string password, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0x1823288", Offset = "0x1823288", VA = "0x1823288")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCB2D84", Offset = "0xCB2D84")]
	private IEnumerator DownloadTimestamp(ES3Settings settings, string user, string password)
	{
		return null;
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0x1821B3C", Offset = "0x1821B3C", VA = "0x1821B3C")]
	private long DateTimeToUnixTimestamp(DateTime dt)
	{
		return default(long);
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0x18236D8", Offset = "0x18236D8", VA = "0x18236D8")]
	private long GetFileTimestamp(ES3Settings settings)
	{
		return default(long);
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0x18236F8", Offset = "0x18236F8", VA = "0x18236F8", Slot = "4")]
	protected override void Reset()
	{
	}
}
[Token(Token = "0x200001B")]
public abstract class ES3Writer : IDisposable
{
	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ES3Settings settings;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected HashSet<string> keysToDelete;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	internal bool writeHeaderAndFooter;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	internal bool overwriteKeys;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	protected int serializationDepth;

	[Token(Token = "0x60001C5")]
	internal abstract void WriteNull();

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0x19CAA1C", Offset = "0x19CAA1C", VA = "0x19CAA1C", Slot = "6")]
	internal virtual void StartWriteFile()
	{
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0x19CAA2C", Offset = "0x19CAA2C", VA = "0x19CAA2C", Slot = "7")]
	internal virtual void EndWriteFile()
	{
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0x19CAA3C", Offset = "0x19CAA3C", VA = "0x19CAA3C", Slot = "8")]
	internal virtual void StartWriteObject(string name)
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0x19CAA4C", Offset = "0x19CAA4C", VA = "0x19CAA4C", Slot = "9")]
	internal virtual void EndWriteObject(string name)
	{
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0x19CAA5C", Offset = "0x19CAA5C", VA = "0x19CAA5C", Slot = "10")]
	internal virtual void StartWriteProperty(string name)
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0x19CAAD8", Offset = "0x19CAAD8", VA = "0x19CAAD8", Slot = "11")]
	internal virtual void EndWriteProperty(string name)
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0x19CAADC", Offset = "0x19CAADC", VA = "0x19CAADC", Slot = "12")]
	internal virtual void StartWriteCollection()
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0x19CAAEC", Offset = "0x19CAAEC", VA = "0x19CAAEC", Slot = "13")]
	internal virtual void EndWriteCollection()
	{
	}

	[Token(Token = "0x60001CE")]
	internal abstract void StartWriteCollectionItem(int index);

	[Token(Token = "0x60001CF")]
	internal abstract void EndWriteCollectionItem(int index);

	[Token(Token = "0x60001D0")]
	internal abstract void StartWriteDictionary();

	[Token(Token = "0x60001D1")]
	internal abstract void EndWriteDictionary();

	[Token(Token = "0x60001D2")]
	internal abstract void StartWriteDictionaryKey(int index);

	[Token(Token = "0x60001D3")]
	internal abstract void EndWriteDictionaryKey(int index);

	[Token(Token = "0x60001D4")]
	internal abstract void StartWriteDictionaryValue(int index);

	[Token(Token = "0x60001D5")]
	internal abstract void EndWriteDictionaryValue(int index);

	[Token(Token = "0x60001D6")]
	public abstract void Dispose();

	[Token(Token = "0x60001D7")]
	internal abstract void WriteRawProperty(string name, byte[] bytes);

	[Token(Token = "0x60001D8")]
	internal abstract void WritePrimitive(int value);

	[Token(Token = "0x60001D9")]
	internal abstract void WritePrimitive(float value);

	[Token(Token = "0x60001DA")]
	internal abstract void WritePrimitive(bool value);

	[Token(Token = "0x60001DB")]
	internal abstract void WritePrimitive(decimal value);

	[Token(Token = "0x60001DC")]
	internal abstract void WritePrimitive(double value);

	[Token(Token = "0x60001DD")]
	internal abstract void WritePrimitive(long value);

	[Token(Token = "0x60001DE")]
	internal abstract void WritePrimitive(ulong value);

	[Token(Token = "0x60001DF")]
	internal abstract void WritePrimitive(uint value);

	[Token(Token = "0x60001E0")]
	internal abstract void WritePrimitive(byte value);

	[Token(Token = "0x60001E1")]
	internal abstract void WritePrimitive(sbyte value);

	[Token(Token = "0x60001E2")]
	internal abstract void WritePrimitive(short value);

	[Token(Token = "0x60001E3")]
	internal abstract void WritePrimitive(ushort value);

	[Token(Token = "0x60001E4")]
	internal abstract void WritePrimitive(char value);

	[Token(Token = "0x60001E5")]
	internal abstract void WritePrimitive(string value);

	[Token(Token = "0x60001E6")]
	internal abstract void WritePrimitive(byte[] value);

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0x19CAAFC", Offset = "0x19CAAFC", VA = "0x19CAAFC")]
	protected ES3Writer(ES3Settings settings, bool writeHeaderAndFooter, bool overwriteKeys)
	{
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0x19CABC4", Offset = "0x19CABC4", VA = "0x19CABC4", Slot = "39")]
	internal virtual void Write(string key, Type type, byte[] value)
	{
	}

	[Token(Token = "0x60001E9")]
	public virtual void Write<T>(string key, object value)
	{
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0x19CACB4", Offset = "0x19CACB4", VA = "0x19CACB4", Slot = "41")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xCB2DE8", Offset = "0xCB2DE8")]
	public virtual void Write(Type type, string key, object value)
	{
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0x19CADE8", Offset = "0x19CADE8", VA = "0x19CADE8", Slot = "42")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xCB2DFC", Offset = "0xCB2DFC")]
	public virtual void Write(object value, ES3.ReferenceMode memberReferenceMode = ES3.ReferenceMode.ByRef)
	{
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0x19CAEB8", Offset = "0x19CAEB8", VA = "0x19CAEB8", Slot = "43")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xCB2E10", Offset = "0xCB2E10")]
	public virtual void Write(object value, ES3Type type, ES3.ReferenceMode memberReferenceMode = ES3.ReferenceMode.ByRef)
	{
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0x19CB344", Offset = "0x19CB344", VA = "0x19CB344", Slot = "44")]
	internal virtual void WriteRef(UnityEngine.Object obj)
	{
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0x19CB49C", Offset = "0x19CB49C", VA = "0x19CB49C", Slot = "45")]
	public virtual void WriteProperty(string name, object value)
	{
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0x19CB4C4", Offset = "0x19CB4C4", VA = "0x19CB4C4", Slot = "46")]
	public virtual void WriteProperty(string name, object value, ES3.ReferenceMode memberReferenceMode)
	{
	}

	[Token(Token = "0x60001F0")]
	public virtual void WriteProperty<T>(string name, object value)
	{
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0x19CB60C", Offset = "0x19CB60C", VA = "0x19CB60C", Slot = "48")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xCB2E24", Offset = "0xCB2E24")]
	public virtual void WriteProperty(string name, object value, ES3Type type)
	{
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0x19CB634", Offset = "0x19CB634", VA = "0x19CB634", Slot = "49")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xCB2E38", Offset = "0xCB2E38")]
	public virtual void WriteProperty(string name, object value, ES3Type type, ES3.ReferenceMode memberReferenceMode)
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0x19CB6D0", Offset = "0x19CB6D0", VA = "0x19CB6D0", Slot = "50")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xCB2E4C", Offset = "0xCB2E4C")]
	public virtual void WritePropertyByRef(string name, UnityEngine.Object value)
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0x19BF928", Offset = "0x19BF928", VA = "0x19BF928")]
	public void WritePrivateProperty(string name, object objectContainingProperty)
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0x19BF0B4", Offset = "0x19BF0B4", VA = "0x19BF0B4")]
	public void WritePrivateField(string name, object objectContainingField)
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0x19CB7EC", Offset = "0x19CB7EC", VA = "0x19CB7EC")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xCB2E60", Offset = "0xCB2E60")]
	public void WritePrivateProperty(string name, object objectContainingProperty, ES3Type type)
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0x19CBA0C", Offset = "0x19CBA0C", VA = "0x19CBA0C")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xCB2E74", Offset = "0xCB2E74")]
	public void WritePrivateField(string name, object objectContainingField, ES3Type type)
	{
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0x19CBC2C", Offset = "0x19CBC2C", VA = "0x19CBC2C")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xCB2E88", Offset = "0xCB2E88")]
	public void WritePrivatePropertyByRef(string name, object objectContainingProperty)
	{
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0x19CBE7C", Offset = "0x19CBE7C", VA = "0x19CBE7C")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xCB2E9C", Offset = "0xCB2E9C")]
	public void WritePrivateFieldByRef(string name, object objectContainingField)
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0x19CA984", Offset = "0x19CA984", VA = "0x19CA984")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xCB2EB0", Offset = "0xCB2EB0")]
	public void WriteType(Type type)
	{
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0x19CC0CC", Offset = "0x19CC0CC", VA = "0x19CC0CC")]
	public static ES3Writer Create(string filePath, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0x19CC14C", Offset = "0x19CC14C", VA = "0x19CC14C")]
	public static ES3Writer Create(ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x19CC15C", Offset = "0x19CC15C", VA = "0x19CC15C")]
	internal static ES3Writer Create(ES3Settings settings, bool writeHeaderAndFooter, bool overwriteKeys, bool append)
	{
		return null;
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x19CC1BC", Offset = "0x19CC1BC", VA = "0x19CC1BC")]
	internal static ES3Writer Create(Stream stream, ES3Settings settings, bool writeHeaderAndFooter, bool overwriteKeys)
	{
		return null;
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0x19CB54C", Offset = "0x19CB54C", VA = "0x19CB54C")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xCB2EC4", Offset = "0xCB2EC4")]
	protected bool SerializationDepthLimitExceeded()
	{
		return default(bool);
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0x19CC358", Offset = "0x19CC358", VA = "0x19CC358", Slot = "51")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xCB2ED8", Offset = "0xCB2ED8")]
	public virtual void MarkKeyForDeletion(string key)
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0x19CC3C0", Offset = "0x19CC3C0", VA = "0x19CC3C0")]
	protected void Merge()
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0x19CC4FC", Offset = "0x19CC4FC", VA = "0x19CC4FC")]
	protected void Merge(ES3Reader reader)
	{
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0x19CC7C0", Offset = "0x19CC7C0", VA = "0x19CC7C0", Slot = "52")]
	public virtual void Save()
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x19CC7D4", Offset = "0x19CC7D4", VA = "0x19CC7D4", Slot = "53")]
	public virtual void Save(bool overwriteKeys)
	{
	}
}
[Token(Token = "0x200001C")]
public class ES3XMLWriter
{
	[Token(Token = "0x6000205")]
	[Address(RVA = "0x19CC884", Offset = "0x19CC884", VA = "0x19CC884")]
	public ES3XMLWriter()
	{
	}
}
[Token(Token = "0x200001D")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xCA7DDC", Offset = "0xCA7DDC")]
public class JSONObject : IEnumerable
{
	[Token(Token = "0x200025A")]
	public enum Type
	{
		[Token(Token = "0x4000C63")]
		NULL,
		[Token(Token = "0x4000C64")]
		STRING,
		[Token(Token = "0x4000C65")]
		NUMBER,
		[Token(Token = "0x4000C66")]
		OBJECT,
		[Token(Token = "0x4000C67")]
		ARRAY,
		[Token(Token = "0x4000C68")]
		BOOL,
		[Token(Token = "0x4000C69")]
		BAKED
	}

	[Token(Token = "0x200025B")]
	public delegate void AddJSONContents(JSONObject self);

	[Token(Token = "0x200025C")]
	public delegate void FieldNotFound(string name);

	[Token(Token = "0x200025D")]
	public delegate void GetFieldResponse(JSONObject obj);

	[Token(Token = "0x200025E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCAEF88", Offset = "0xCAEF88")]
	private sealed class <BakeAsync>d__109 : IEnumerable<object>, IEnumerable, IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x4000C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public JSONObject <>4__this;

		[Token(Token = "0x4000C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private IEnumerator<string> <>7__wrap1;

		[Token(Token = "0x17000133")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F00")]
			[Address(RVA = "0x1339508", Offset = "0x1339508", VA = "0x1339508", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000134")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F02")]
			[Address(RVA = "0x1339570", Offset = "0x1339570", VA = "0x1339570", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EFC")]
		[Address(RVA = "0x1338210", Offset = "0x1338210", VA = "0x1338210")]
		[DebuggerHidden]
		public <BakeAsync>d__109(int <>1__state)
		{
		}

		[Token(Token = "0x6000EFD")]
		[Address(RVA = "0x1339130", Offset = "0x1339130", VA = "0x1339130", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EFE")]
		[Address(RVA = "0x133920C", Offset = "0x133920C", VA = "0x133920C", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EFF")]
		[Address(RVA = "0x133914C", Offset = "0x133914C", VA = "0x133914C")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000F01")]
		[Address(RVA = "0x1339510", Offset = "0x1339510", VA = "0x1339510", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x6000F03")]
		[Address(RVA = "0x1339578", Offset = "0x1339578", VA = "0x1339578", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<object> System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000F04")]
		[Address(RVA = "0x133962C", Offset = "0x133962C", VA = "0x133962C", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x200025F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCAEF98", Offset = "0xCAEF98")]
	private sealed class <PrintAsync>d__111 : IEnumerable<string>, IEnumerable, IEnumerator<string>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string <>2__current;

		[Token(Token = "0x4000C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x4000C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public JSONObject <>4__this;

		[Token(Token = "0x4000C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool pretty;

		[Token(Token = "0x4000C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool <>3__pretty;

		[Token(Token = "0x4000C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private StringBuilder <builder>5__2;

		[Token(Token = "0x4000C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private IEnumerator <>7__wrap2;

		[Token(Token = "0x17000135")]
		private string System.Collections.Generic.IEnumerator<System.String>.Current
		{
			[Token(Token = "0x6000F09")]
			[Address(RVA = "0x1339A98", Offset = "0x1339A98", VA = "0x1339A98", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000136")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F0B")]
			[Address(RVA = "0x1339B00", Offset = "0x1339B00", VA = "0x1339B00", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F05")]
		[Address(RVA = "0x13389CC", Offset = "0x13389CC", VA = "0x13389CC")]
		[DebuggerHidden]
		public <PrintAsync>d__111(int <>1__state)
		{
		}

		[Token(Token = "0x6000F06")]
		[Address(RVA = "0x1339630", Offset = "0x1339630", VA = "0x1339630", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F07")]
		[Address(RVA = "0x1339718", Offset = "0x1339718", VA = "0x1339718", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F08")]
		[Address(RVA = "0x133964C", Offset = "0x133964C", VA = "0x133964C")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000F0A")]
		[Address(RVA = "0x1339AA0", Offset = "0x1339AA0", VA = "0x1339AA0", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x6000F0C")]
		[Address(RVA = "0x1339B08", Offset = "0x1339B08", VA = "0x1339B08", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<string> System.Collections.Generic.IEnumerable<System.String>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000F0D")]
		[Address(RVA = "0x1339BC4", Offset = "0x1339BC4", VA = "0x1339BC4", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x2000260")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCAEFA8", Offset = "0xCAEFA8")]
	private sealed class <StringifyAsync>d__114 : IEnumerable<object>, IEnumerable, IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x4000C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int depth;

		[Token(Token = "0x4000C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int <>3__depth;

		[Token(Token = "0x4000C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public JSONObject <>4__this;

		[Token(Token = "0x4000C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private StringBuilder builder;

		[Token(Token = "0x4000C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public StringBuilder <>3__builder;

		[Token(Token = "0x4000C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool pretty;

		[Token(Token = "0x4000C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool <>3__pretty;

		[Token(Token = "0x4000C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int <i>5__2;

		[Token(Token = "0x4000C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private IEnumerator <>7__wrap2;

		[Token(Token = "0x17000137")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F13")]
			[Address(RVA = "0x133ACC4", Offset = "0x133ACC4", VA = "0x133ACC4", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000138")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F15")]
			[Address(RVA = "0x133AD2C", Offset = "0x133AD2C", VA = "0x133AD2C", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F0E")]
		[Address(RVA = "0x1338AC8", Offset = "0x1338AC8", VA = "0x1338AC8")]
		[DebuggerHidden]
		public <StringifyAsync>d__114(int <>1__state)
		{
		}

		[Token(Token = "0x6000F0F")]
		[Address(RVA = "0x1339BC8", Offset = "0x1339BC8", VA = "0x1339BC8", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F10")]
		[Address(RVA = "0x1339D98", Offset = "0x1339D98", VA = "0x1339D98", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F11")]
		[Address(RVA = "0x1339C00", Offset = "0x1339C00", VA = "0x1339C00")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000F12")]
		[Address(RVA = "0x1339CCC", Offset = "0x1339CCC", VA = "0x1339CCC")]
		private void <>m__Finally2()
		{
		}

		[Token(Token = "0x6000F14")]
		[Address(RVA = "0x133ACCC", Offset = "0x133ACCC", VA = "0x133ACCC", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x6000F16")]
		[Address(RVA = "0x133AD34", Offset = "0x133AD34", VA = "0x133AD34", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<object> System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000F17")]
		[Address(RVA = "0x133AE08", Offset = "0x133AE08", VA = "0x133AE08", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x400007B")]
	private const int MAX_DEPTH = 100;

	[Token(Token = "0x400007C")]
	private const string INFINITY = "\"INFINITY\"";

	[Token(Token = "0x400007D")]
	private const string NEGINFINITY = "\"NEGINFINITY\"";

	[Token(Token = "0x400007E")]
	private const string NaN = "\"NaN\"";

	[Token(Token = "0x400007F")]
	private const string NEWLINE = "\r\n";

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly char[] WHITESPACE;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Type type;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<JSONObject> list;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<string> keys;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string str;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float n;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool useInt;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public long i;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool b;

	[Token(Token = "0x4000089")]
	private const float maxFrameTime = 0.008f;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly Stopwatch printWatch;

	[Token(Token = "0x17000030")]
	public bool isContainer
	{
		[Token(Token = "0x6000206")]
		[Address(RVA = "0x1333DC4", Offset = "0x1333DC4", VA = "0x1333DC4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000031")]
	public int Count
	{
		[Token(Token = "0x6000207")]
		[Address(RVA = "0x1333DD8", Offset = "0x1333DD8", VA = "0x1333DD8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000032")]
	public float f
	{
		[Token(Token = "0x6000208")]
		[Address(RVA = "0x1333E2C", Offset = "0x1333E2C", VA = "0x1333E2C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000033")]
	public static JSONObject nullJO
	{
		[Token(Token = "0x6000209")]
		[Address(RVA = "0x1333E34", Offset = "0x1333E34", VA = "0x1333E34")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000034")]
	public static JSONObject obj
	{
		[Token(Token = "0x600020A")]
		[Address(RVA = "0x1333FC0", Offset = "0x1333FC0", VA = "0x1333FC0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000035")]
	public static JSONObject arr
	{
		[Token(Token = "0x600020B")]
		[Address(RVA = "0x1334020", Offset = "0x1334020", VA = "0x1334020")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000036")]
	public bool IsNumber
	{
		[Token(Token = "0x6000225")]
		[Address(RVA = "0x1335C58", Offset = "0x1335C58", VA = "0x1335C58")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000037")]
	public bool IsNull
	{
		[Token(Token = "0x6000226")]
		[Address(RVA = "0x1335C68", Offset = "0x1335C68", VA = "0x1335C68")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000038")]
	public bool IsString
	{
		[Token(Token = "0x6000227")]
		[Address(RVA = "0x1335C78", Offset = "0x1335C78", VA = "0x1335C78")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000039")]
	public bool IsBool
	{
		[Token(Token = "0x6000228")]
		[Address(RVA = "0x1335C88", Offset = "0x1335C88", VA = "0x1335C88")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700003A")]
	public bool IsArray
	{
		[Token(Token = "0x6000229")]
		[Address(RVA = "0x1335C98", Offset = "0x1335C98", VA = "0x1335C98")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700003B")]
	public bool IsObject
	{
		[Token(Token = "0x600022A")]
		[Address(RVA = "0x1335CA8", Offset = "0x1335CA8", VA = "0x1335CA8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700003C")]
	public JSONObject Item
	{
		[Token(Token = "0x600025B")]
		[Address(RVA = "0x133802C", Offset = "0x133802C", VA = "0x133802C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600025C")]
		[Address(RVA = "0x13380B0", Offset = "0x13380B0", VA = "0x13380B0")]
		set
		{
		}
	}

	[Token(Token = "0x1700003D")]
	public JSONObject Item
	{
		[Token(Token = "0x600025D")]
		[Address(RVA = "0x13369E0", Offset = "0x13369E0", VA = "0x13369E0")]
		get
		{
			return null;
		}
		[Token(Token = "0x600025E")]
		[Address(RVA = "0x1338CF0", Offset = "0x1338CF0", VA = "0x1338CF0")]
		set
		{
		}
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0x1334080", Offset = "0x1334080", VA = "0x1334080")]
	public JSONObject(Type t)
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0x1334190", Offset = "0x1334190", VA = "0x1334190")]
	public JSONObject(bool b)
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0x13341C8", Offset = "0x13341C8", VA = "0x13341C8")]
	public JSONObject(float f)
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0x1334204", Offset = "0x1334204", VA = "0x1334204")]
	public JSONObject(int i)
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0x133424C", Offset = "0x133424C", VA = "0x133424C")]
	public JSONObject(long l)
	{
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0x1334290", Offset = "0x1334290", VA = "0x1334290")]
	public JSONObject(Dictionary<string, string> dic)
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0x133451C", Offset = "0x133451C", VA = "0x133451C")]
	public JSONObject(Dictionary<string, JSONObject> dic)
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0x13346E8", Offset = "0x13346E8", VA = "0x13346E8")]
	public JSONObject(AddJSONContents content)
	{
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0x1334AD8", Offset = "0x1334AD8", VA = "0x1334AD8")]
	public JSONObject(JSONObject[] objs)
	{
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0x1334B6C", Offset = "0x1334B6C", VA = "0x1334B6C")]
	public static JSONObject StringObject(string val)
	{
		return null;
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0x1334BD0", Offset = "0x1334BD0", VA = "0x1334BD0")]
	public void Absorb(JSONObject obj)
	{
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0x1334C94", Offset = "0x1334C94", VA = "0x1334C94")]
	public static JSONObject Create()
	{
		return null;
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0x1333E94", Offset = "0x1333E94", VA = "0x1333E94")]
	public static JSONObject Create(Type t)
	{
		return null;
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0x1334CF8", Offset = "0x1334CF8", VA = "0x1334CF8")]
	public static JSONObject Create(bool val)
	{
		return null;
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0x1334D74", Offset = "0x1334D74", VA = "0x1334D74")]
	public static JSONObject Create(float val)
	{
		return null;
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0x1334DF4", Offset = "0x1334DF4", VA = "0x1334DF4")]
	public static JSONObject Create(int val)
	{
		return null;
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0x1334E80", Offset = "0x1334E80", VA = "0x1334E80")]
	public static JSONObject Create(long val)
	{
		return null;
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0x1334494", Offset = "0x1334494", VA = "0x1334494")]
	public static JSONObject CreateStringObject(string val)
	{
		return null;
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0x1334F08", Offset = "0x1334F08", VA = "0x1334F08")]
	public static JSONObject CreateBakedObject(string val)
	{
		return null;
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0x1334F90", Offset = "0x1334F90", VA = "0x1334F90")]
	public static JSONObject Create(string val, int maxDepth = -2, bool storeExcessLevels = false, bool strict = false)
	{
		return null;
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0x133595C", Offset = "0x133595C", VA = "0x133595C")]
	public static JSONObject Create(AddJSONContents content)
	{
		return null;
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0x13359DC", Offset = "0x13359DC", VA = "0x13359DC")]
	public static JSONObject Create(Dictionary<string, string> dic)
	{
		return null;
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0x1334CF0", Offset = "0x1334CF0", VA = "0x1334CF0")]
	public JSONObject()
	{
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0x1335C00", Offset = "0x1335C00", VA = "0x1335C00")]
	public JSONObject(string str, int maxDepth = -2, bool storeExcessLevels = false, bool strict = false)
	{
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0x1335034", Offset = "0x1335034", VA = "0x1335034")]
	private void Parse(string str, int maxDepth = -2, bool storeExcessLevels = false, bool strict = false)
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0x1335CC4", Offset = "0x1335CC4", VA = "0x1335CC4")]
	public void Add(bool val)
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0x1335E38", Offset = "0x1335E38", VA = "0x1335E38")]
	public void Add(float val)
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0x1335EB4", Offset = "0x1335EB4", VA = "0x1335EB4")]
	public void Add(long val)
	{
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0x1335F30", Offset = "0x1335F30", VA = "0x1335F30")]
	public void Add(int val)
	{
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0x1335FAC", Offset = "0x1335FAC", VA = "0x1335FAC")]
	public void Add(string str)
	{
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0x1336028", Offset = "0x1336028", VA = "0x1336028")]
	public void Add(AddJSONContents content)
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0x1335D40", Offset = "0x1335D40", VA = "0x1335D40")]
	public void Add(JSONObject obj)
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0x13360B0", Offset = "0x13360B0", VA = "0x13360B0")]
	public void AddField(string name, bool val)
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0x133632C", Offset = "0x133632C", VA = "0x133632C")]
	public void AddField(string name, float val)
	{
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0x13363B8", Offset = "0x13363B8", VA = "0x13363B8")]
	public void AddField(string name, int val)
	{
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0x133643C", Offset = "0x133643C", VA = "0x133643C")]
	public void AddField(string name, long val)
	{
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0x13364C0", Offset = "0x13364C0", VA = "0x13364C0")]
	public void AddField(string name, AddJSONContents content)
	{
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0x1336544", Offset = "0x1336544", VA = "0x1336544")]
	public void AddField(string name, string val)
	{
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0x1336134", Offset = "0x1336134", VA = "0x1336134")]
	public void AddField(string name, JSONObject obj)
	{
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0x13365C8", Offset = "0x13365C8", VA = "0x13365C8")]
	public void SetField(string name, string val)
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0x1336704", Offset = "0x1336704", VA = "0x1336704")]
	public void SetField(string name, bool val)
	{
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0x1336788", Offset = "0x1336788", VA = "0x1336788")]
	public void SetField(string name, float val)
	{
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0x1336814", Offset = "0x1336814", VA = "0x1336814")]
	public void SetField(string name, long val)
	{
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0x1336898", Offset = "0x1336898", VA = "0x1336898")]
	public void SetField(string name, int val)
	{
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0x133664C", Offset = "0x133664C", VA = "0x133664C")]
	public void SetField(string name, JSONObject obj)
	{
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0x13369E4", Offset = "0x13369E4", VA = "0x13369E4")]
	public void RemoveField(string name)
	{
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0x1336AB0", Offset = "0x1336AB0", VA = "0x1336AB0")]
	public bool GetField(out bool field, string name, bool fallback)
	{
		return default(bool);
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0x1336AC0", Offset = "0x1336AC0", VA = "0x1336AC0")]
	public bool GetField(ref bool field, string name, [Optional] FieldNotFound fail)
	{
		return default(bool);
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0x1336F58", Offset = "0x1336F58", VA = "0x1336F58")]
	public bool GetField(out float field, string name, float fallback)
	{
		return default(bool);
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0x1336F64", Offset = "0x1336F64", VA = "0x1336F64")]
	public bool GetField(ref float field, string name, [Optional] FieldNotFound fail)
	{
		return default(bool);
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0x1337044", Offset = "0x1337044", VA = "0x1337044")]
	public bool GetField(out int field, string name, int fallback)
	{
		return default(bool);
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0x1337050", Offset = "0x1337050", VA = "0x1337050")]
	public bool GetField(ref int field, string name, [Optional] FieldNotFound fail)
	{
		return default(bool);
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0x1337138", Offset = "0x1337138", VA = "0x1337138")]
	public bool GetField(out long field, string name, long fallback)
	{
		return default(bool);
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0x1337144", Offset = "0x1337144", VA = "0x1337144")]
	public bool GetField(ref long field, string name, [Optional] FieldNotFound fail)
	{
		return default(bool);
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0x133722C", Offset = "0x133722C", VA = "0x133722C")]
	public bool GetField(out uint field, string name, uint fallback)
	{
		return default(bool);
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0x1337238", Offset = "0x1337238", VA = "0x1337238")]
	public bool GetField(ref uint field, string name, [Optional] FieldNotFound fail)
	{
		return default(bool);
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0x1337320", Offset = "0x1337320", VA = "0x1337320")]
	public bool GetField(out string field, string name, string fallback)
	{
		return default(bool);
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0x133736C", Offset = "0x133736C", VA = "0x133736C")]
	public bool GetField(ref string field, string name, [Optional] FieldNotFound fail)
	{
		return default(bool);
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0x133745C", Offset = "0x133745C", VA = "0x133745C")]
	public void GetField(string name, GetFieldResponse response, [Optional] FieldNotFound fail)
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0x1337910", Offset = "0x1337910", VA = "0x1337910")]
	public JSONObject GetField(string name)
	{
		return null;
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0x13379F8", Offset = "0x13379F8", VA = "0x13379F8")]
	public bool HasFields(string[] names)
	{
		return default(bool);
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0x133691C", Offset = "0x133691C", VA = "0x133691C")]
	public bool HasField(string name)
	{
		return default(bool);
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0x1337AD0", Offset = "0x1337AD0", VA = "0x1337AD0")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0x1337B64", Offset = "0x1337B64", VA = "0x1337B64")]
	public JSONObject Copy()
	{
		return null;
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0x1337C78", Offset = "0x1337C78", VA = "0x1337C78")]
	public void Merge(JSONObject obj)
	{
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0x1337CEC", Offset = "0x1337CEC", VA = "0x1337CEC")]
	private static void MergeRecur(JSONObject left, JSONObject right)
	{
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0x133813C", Offset = "0x133813C", VA = "0x133813C")]
	public void Bake()
	{
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0x1338184", Offset = "0x1338184", VA = "0x1338184")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCB2EEC", Offset = "0xCB2EEC")]
	public IEnumerable BakeAsync()
	{
		return null;
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0x1337BE8", Offset = "0x1337BE8", VA = "0x1337BE8")]
	public string Print(bool pretty = false)
	{
		return null;
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0x133892C", Offset = "0x133892C", VA = "0x133892C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCB2F50", Offset = "0xCB2F50")]
	public IEnumerable<string> PrintAsync(bool pretty = false)
	{
		return null;
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0x1338A04", Offset = "0x1338A04", VA = "0x1338A04")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCB2FB4", Offset = "0xCB2FB4")]
	private IEnumerable StringifyAsync(int depth, StringBuilder builder, bool pretty = false)
	{
		return null;
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0x1338248", Offset = "0x1338248", VA = "0x1338248")]
	private void Stringify(int depth, StringBuilder builder, bool pretty = false)
	{
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0x1338B00", Offset = "0x1338B00", VA = "0x1338B00")]
	public static implicit operator WWWForm(JSONObject obj)
	{
		return null;
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0x1338CF4", Offset = "0x1338CF4", VA = "0x1338CF4", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0x1338CFC", Offset = "0x1338CFC", VA = "0x1338CFC")]
	public string ToString(bool pretty)
	{
		return null;
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0x1338D04", Offset = "0x1338D04", VA = "0x1338D04")]
	public Dictionary<string, string> ToDictionary()
	{
		return null;
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0x13360A4", Offset = "0x13360A4", VA = "0x13360A4")]
	public static implicit operator bool(JSONObject o)
	{
		return default(bool);
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0x1338FC8", Offset = "0x1338FC8", VA = "0x1338FC8", Slot = "4")]
	private IEnumerator System.Collections.IEnumerable.GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0x1338FCC", Offset = "0x1338FCC", VA = "0x1338FCC")]
	public JSONObjectEnumer GetEnumerator()
	{
		return null;
	}
}
[Token(Token = "0x200001E")]
public class JSONObjectEnumer : IEnumerator
{
	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public JSONObject _jobj;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int position;

	[Token(Token = "0x1700003E")]
	private object System.Collections.IEnumerator.Current
	{
		[Token(Token = "0x6000269")]
		[Address(RVA = "0x133AF5C", Offset = "0x133AF5C", VA = "0x133AF5C", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700003F")]
	public JSONObject Current
	{
		[Token(Token = "0x600026A")]
		[Address(RVA = "0x133AF60", Offset = "0x133AF60", VA = "0x133AF60")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0x1339044", Offset = "0x1339044", VA = "0x1339044")]
	public JSONObjectEnumer(JSONObject jsonObject)
	{
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0x133AED8", Offset = "0x133AED8", VA = "0x133AED8", Slot = "4")]
	public bool MoveNext()
	{
		return default(bool);
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0x133AF50", Offset = "0x133AF50", VA = "0x133AF50", Slot = "6")]
	public void Reset()
	{
	}
}
[Token(Token = "0x200001F")]
public static class JSONTemplates
{
	[Token(Token = "0x600026B")]
	[Address(RVA = "0x133B008", Offset = "0x133B008", VA = "0x133B008")]
	public static Vector2 ToVector2(JSONObject obj)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0x133B130", Offset = "0x133B130", VA = "0x133B130")]
	public static JSONObject FromVector2(Vector2 v)
	{
		return null;
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0x133B1F4", Offset = "0x133B1F4", VA = "0x133B1F4")]
	public static JSONObject FromVector3(Vector3 v)
	{
		return null;
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0x133B2E8", Offset = "0x133B2E8", VA = "0x133B2E8")]
	public static Vector3 ToVector3(JSONObject obj)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0x133B47C", Offset = "0x133B47C", VA = "0x133B47C")]
	public static JSONObject FromVector4(Vector4 v)
	{
		return null;
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0x133B598", Offset = "0x133B598", VA = "0x133B598")]
	public static Vector4 ToVector4(JSONObject obj)
	{
		return default(Vector4);
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0x133B78C", Offset = "0x133B78C", VA = "0x133B78C")]
	public static JSONObject FromMatrix4x4(Matrix4x4 m)
	{
		return null;
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0x133BA3C", Offset = "0x133BA3C", VA = "0x133BA3C")]
	public static Matrix4x4 ToMatrix4x4(JSONObject obj)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0x133C0A4", Offset = "0x133C0A4", VA = "0x133C0A4")]
	public static JSONObject FromQuaternion(Quaternion q)
	{
		return null;
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0x133C1C0", Offset = "0x133C1C0", VA = "0x133C1C0")]
	public static Quaternion ToQuaternion(JSONObject obj)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0x133C3B4", Offset = "0x133C3B4", VA = "0x133C3B4")]
	public static JSONObject FromColor(Color c)
	{
		return null;
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0x133C4D0", Offset = "0x133C4D0", VA = "0x133C4D0")]
	public static Color ToColor(JSONObject obj)
	{
		return default(Color);
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0x133C6AC", Offset = "0x133C6AC", VA = "0x133C6AC")]
	public static JSONObject FromLayerMask(LayerMask l)
	{
		return null;
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0x133C744", Offset = "0x133C744", VA = "0x133C744")]
	public static LayerMask ToLayerMask(JSONObject obj)
	{
		return default(LayerMask);
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0x133C7C8", Offset = "0x133C7C8", VA = "0x133C7C8")]
	public static JSONObject FromRect(Rect r)
	{
		return null;
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0x133C924", Offset = "0x133C924", VA = "0x133C924")]
	public static Rect ToRect(JSONObject obj)
	{
		return default(Rect);
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0x133CB14", Offset = "0x133CB14", VA = "0x133CB14")]
	public static JSONObject FromRectOffset(RectOffset r)
	{
		return null;
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0x133CC68", Offset = "0x133CC68", VA = "0x133CC68")]
	public static RectOffset ToRectOffset(JSONObject obj)
	{
		return null;
	}
}
[Token(Token = "0x2000020")]
[ExecuteInEditMode]
public class ShurikenToSpritesheetGameViewGuide : MonoBehaviour
{
	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2 position;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 size;

	[Token(Token = "0x600027D")]
	[Address(RVA = "0x16D1E60", Offset = "0x16D1E60", VA = "0x16D1E60")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0x16D2018", Offset = "0x16D2018", VA = "0x16D2018")]
	public ShurikenToSpritesheetGameViewGuide()
	{
	}
}
[Token(Token = "0x2000021")]
public class iTween : MonoBehaviour
{
	[Token(Token = "0x2000261")]
	private delegate float EasingFunction(float start, float end, float Value);

	[Token(Token = "0x2000262")]
	private delegate void ApplyTween();

	[Token(Token = "0x2000263")]
	public enum EaseType
	{
		[Token(Token = "0x4000C84")]
		easeInQuad,
		[Token(Token = "0x4000C85")]
		easeOutQuad,
		[Token(Token = "0x4000C86")]
		easeInOutQuad,
		[Token(Token = "0x4000C87")]
		easeInCubic,
		[Token(Token = "0x4000C88")]
		easeOutCubic,
		[Token(Token = "0x4000C89")]
		easeInOutCubic,
		[Token(Token = "0x4000C8A")]
		easeInQuart,
		[Token(Token = "0x4000C8B")]
		easeOutQuart,
		[Token(Token = "0x4000C8C")]
		easeInOutQuart,
		[Token(Token = "0x4000C8D")]
		easeInQuint,
		[Token(Token = "0x4000C8E")]
		easeOutQuint,
		[Token(Token = "0x4000C8F")]
		easeInOutQuint,
		[Token(Token = "0x4000C90")]
		easeInSine,
		[Token(Token = "0x4000C91")]
		easeOutSine,
		[Token(Token = "0x4000C92")]
		easeInOutSine,
		[Token(Token = "0x4000C93")]
		easeInExpo,
		[Token(Token = "0x4000C94")]
		easeOutExpo,
		[Token(Token = "0x4000C95")]
		easeInOutExpo,
		[Token(Token = "0x4000C96")]
		easeInCirc,
		[Token(Token = "0x4000C97")]
		easeOutCirc,
		[Token(Token = "0x4000C98")]
		easeInOutCirc,
		[Token(Token = "0x4000C99")]
		linear,
		[Token(Token = "0x4000C9A")]
		spring,
		[Token(Token = "0x4000C9B")]
		easeInBounce,
		[Token(Token = "0x4000C9C")]
		easeOutBounce,
		[Token(Token = "0x4000C9D")]
		easeInOutBounce,
		[Token(Token = "0x4000C9E")]
		easeInBack,
		[Token(Token = "0x4000C9F")]
		easeOutBack,
		[Token(Token = "0x4000CA0")]
		easeInOutBack,
		[Token(Token = "0x4000CA1")]
		easeInElastic,
		[Token(Token = "0x4000CA2")]
		easeOutElastic,
		[Token(Token = "0x4000CA3")]
		easeInOutElastic,
		[Token(Token = "0x4000CA4")]
		punch
	}

	[Token(Token = "0x2000264")]
	public enum LoopType
	{
		[Token(Token = "0x4000CA6")]
		none,
		[Token(Token = "0x4000CA7")]
		loop,
		[Token(Token = "0x4000CA8")]
		pingPong
	}

	[Token(Token = "0x2000265")]
	public enum NamedValueColor
	{
		[Token(Token = "0x4000CAA")]
		_Color,
		[Token(Token = "0x4000CAB")]
		_SpecColor,
		[Token(Token = "0x4000CAC")]
		_Emission,
		[Token(Token = "0x4000CAD")]
		_ReflectColor
	}

	[Token(Token = "0x2000266")]
	public static class Defaults
	{
		[Token(Token = "0x4000CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float time;

		[Token(Token = "0x4000CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static float delay;

		[Token(Token = "0x4000CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static NamedValueColor namedColorValue;

		[Token(Token = "0x4000CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static LoopType loopType;

		[Token(Token = "0x4000CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static EaseType easeType;

		[Token(Token = "0x4000CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static float lookSpeed;

		[Token(Token = "0x4000CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static bool isLocal;

		[Token(Token = "0x4000CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public static Space space;

		[Token(Token = "0x4000CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static bool orientToPath;

		[Token(Token = "0x4000CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public static Color color;

		[Token(Token = "0x4000CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public static float updateTimePercentage;

		[Token(Token = "0x4000CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static float updateTime;

		[Token(Token = "0x4000CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public static float lookAhead;

		[Token(Token = "0x4000CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static bool useRealTime;

		[Token(Token = "0x4000CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public static Vector3 up;
	}

	[Token(Token = "0x2000267")]
	private class CRSpline
	{
		[Token(Token = "0x4000CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3[] pts;

		[Token(Token = "0x6000F21")]
		[Address(RVA = "0x2821C10", Offset = "0x2821C10", VA = "0x2821C10")]
		public CRSpline(params Vector3[] pts)
		{
		}

		[Token(Token = "0x6000F22")]
		[Address(RVA = "0x2821CA4", Offset = "0x2821CA4", VA = "0x2821CA4")]
		public Vector3 Interp(float t)
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x2000268")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCAEFB8", Offset = "0xCAEFB8")]
	private sealed class <TweenDelay>d__145 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public iTween <>4__this;

		[Token(Token = "0x17000139")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F26")]
			[Address(RVA = "0x28217C0", Offset = "0x28217C0", VA = "0x28217C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F28")]
			[Address(RVA = "0x2821828", Offset = "0x2821828", VA = "0x2821828", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F23")]
		[Address(RVA = "0x28216B0", Offset = "0x28216B0", VA = "0x28216B0")]
		[DebuggerHidden]
		public <TweenDelay>d__145(int <>1__state)
		{
		}

		[Token(Token = "0x6000F24")]
		[Address(RVA = "0x28216DC", Offset = "0x28216DC", VA = "0x28216DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F25")]
		[Address(RVA = "0x28216E0", Offset = "0x28216E0", VA = "0x28216E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F27")]
		[Address(RVA = "0x28217C8", Offset = "0x28217C8", VA = "0x28217C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000269")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCAEFC8", Offset = "0xCAEFC8")]
	private sealed class <TweenRestart>d__147 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public iTween <>4__this;

		[Token(Token = "0x1700013B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F2C")]
			[Address(RVA = "0x2821948", Offset = "0x2821948", VA = "0x2821948", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F2E")]
			[Address(RVA = "0x28219B0", Offset = "0x28219B0", VA = "0x28219B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F29")]
		[Address(RVA = "0x2821830", Offset = "0x2821830", VA = "0x2821830")]
		[DebuggerHidden]
		public <TweenRestart>d__147(int <>1__state)
		{
		}

		[Token(Token = "0x6000F2A")]
		[Address(RVA = "0x282185C", Offset = "0x282185C", VA = "0x282185C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F2B")]
		[Address(RVA = "0x2821860", Offset = "0x2821860", VA = "0x2821860", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F2D")]
		[Address(RVA = "0x2821950", Offset = "0x2821950", VA = "0x2821950", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200026A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCAEFD8", Offset = "0xCAEFD8")]
	private sealed class <Start>d__229 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public iTween <>4__this;

		[Token(Token = "0x1700013D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F32")]
			[Address(RVA = "0x2821640", Offset = "0x2821640", VA = "0x2821640", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F34")]
			[Address(RVA = "0x28216A8", Offset = "0x28216A8", VA = "0x28216A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F2F")]
		[Address(RVA = "0x2821558", Offset = "0x2821558", VA = "0x2821558")]
		[DebuggerHidden]
		public <Start>d__229(int <>1__state)
		{
		}

		[Token(Token = "0x6000F30")]
		[Address(RVA = "0x2821584", Offset = "0x2821584", VA = "0x2821584", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F31")]
		[Address(RVA = "0x2821588", Offset = "0x2821588", VA = "0x2821588", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F33")]
		[Address(RVA = "0x2821648", Offset = "0x2821648", VA = "0x2821648", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<Hashtable> tweens;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string id;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string type;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string method;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public EaseType easeType;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float time;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float delay;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public LoopType loopType;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isRunning;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool isPaused;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string _name;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float runningTime;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float percentage;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float delayStarted;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool kinematic;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	private bool isLocal;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
	private bool loop;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5F")]
	private bool reverse;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool wasPaused;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool physics;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Hashtable tweenArguments;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Space space;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private EasingFunction ease;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private ApplyTween apply;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private AudioSource audioSource;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3[] vector3s;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector2[] vector2s;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Color[,] colors;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float[] floats;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Rect[] rects;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private CRSpline path;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Vector3 preUpdate;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private Vector3 postUpdate;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private NamedValueColor namedcolorvalue;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float lastRealTime;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool useRealTime;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Transform thisTransform;

	[Token(Token = "0x600027F")]
	[Address(RVA = "0x1F10CF4", Offset = "0x1F10CF4", VA = "0x1F10CF4")]
	public static void Init(GameObject target)
	{
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0x1F10FB0", Offset = "0x1F10FB0", VA = "0x1F10FB0")]
	public static void ValueTo(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0x1F11F78", Offset = "0x1F11F78", VA = "0x1F11F78")]
	public static void FadeFrom(GameObject target, float alpha, float time)
	{
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0x1F12290", Offset = "0x1F12290", VA = "0x1F12290")]
	public static void FadeFrom(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0x1F12CF4", Offset = "0x1F12CF4", VA = "0x1F12CF4")]
	public static void FadeTo(GameObject target, float alpha, float time)
	{
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0x1F12EDC", Offset = "0x1F12EDC", VA = "0x1F12EDC")]
	public static void FadeTo(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0x1F1344C", Offset = "0x1F1344C", VA = "0x1F1344C")]
	public static void ColorFrom(GameObject target, Color color, float time)
	{
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0x1F12304", Offset = "0x1F12304", VA = "0x1F12304")]
	public static void ColorFrom(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0x1F13660", Offset = "0x1F13660", VA = "0x1F13660")]
	public static void ColorTo(GameObject target, Color color, float time)
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0x1F12F50", Offset = "0x1F12F50", VA = "0x1F12F50")]
	public static void ColorTo(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0x1F13874", Offset = "0x1F13874", VA = "0x1F13874")]
	public static void AudioFrom(GameObject target, float volume, float pitch, float time)
	{
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0x1F13AF4", Offset = "0x1F13AF4", VA = "0x1F13AF4")]
	public static void AudioFrom(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0x1F13EFC", Offset = "0x1F13EFC", VA = "0x1F13EFC")]
	public static void AudioTo(GameObject target, float volume, float pitch, float time)
	{
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0x1F1417C", Offset = "0x1F1417C", VA = "0x1F1417C")]
	public static void AudioTo(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0x1F142D8", Offset = "0x1F142D8", VA = "0x1F142D8")]
	public static void Stab(GameObject target, AudioClip audioclip, float delay)
	{
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0x1F144A4", Offset = "0x1F144A4", VA = "0x1F144A4")]
	public static void Stab(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0x1F14554", Offset = "0x1F14554", VA = "0x1F14554")]
	public static void LookFrom(GameObject target, Vector3 looktarget, float time)
	{
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0x1F14758", Offset = "0x1F14758", VA = "0x1F14758")]
	public static void LookFrom(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0x1F14DB8", Offset = "0x1F14DB8", VA = "0x1F14DB8")]
	public static void LookTo(GameObject target, Vector3 looktarget, float time)
	{
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0x1F14FBC", Offset = "0x1F14FBC", VA = "0x1F14FBC")]
	public static void LookTo(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0x1F152DC", Offset = "0x1F152DC", VA = "0x1F152DC")]
	public static void MoveTo(GameObject target, Vector3 position, float time)
	{
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0x1F154E0", Offset = "0x1F154E0", VA = "0x1F154E0")]
	public static void MoveTo(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0x1F15880", Offset = "0x1F15880", VA = "0x1F15880")]
	public static void MoveFrom(GameObject target, Vector3 position, float time)
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0x1F15A84", Offset = "0x1F15A84", VA = "0x1F15A84")]
	public static void MoveFrom(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0x1F16384", Offset = "0x1F16384", VA = "0x1F16384")]
	public static void MoveAdd(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0x1F16588", Offset = "0x1F16588", VA = "0x1F16588")]
	public static void MoveAdd(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0x1F10DAC", Offset = "0x1F10DAC", VA = "0x1F10DAC")]
	public static void MoveBy(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0x1F16664", Offset = "0x1F16664", VA = "0x1F16664")]
	public static void MoveBy(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0x1F16740", Offset = "0x1F16740", VA = "0x1F16740")]
	public static void ScaleTo(GameObject target, Vector3 scale, float time)
	{
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0x1F16944", Offset = "0x1F16944", VA = "0x1F16944")]
	public static void ScaleTo(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0x1F16CDC", Offset = "0x1F16CDC", VA = "0x1F16CDC")]
	public static void ScaleFrom(GameObject target, Vector3 scale, float time)
	{
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0x1F16EE0", Offset = "0x1F16EE0", VA = "0x1F16EE0")]
	public static void ScaleFrom(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0x1F1738C", Offset = "0x1F1738C", VA = "0x1F1738C")]
	public static void ScaleAdd(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0x1F17590", Offset = "0x1F17590", VA = "0x1F17590")]
	public static void ScaleAdd(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0x1F1766C", Offset = "0x1F1766C", VA = "0x1F1766C")]
	public static void ScaleBy(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0x1F17870", Offset = "0x1F17870", VA = "0x1F17870")]
	public static void ScaleBy(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0x1F1794C", Offset = "0x1F1794C", VA = "0x1F1794C")]
	public static void RotateTo(GameObject target, Vector3 rotation, float time)
	{
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0x1F17B50", Offset = "0x1F17B50", VA = "0x1F17B50")]
	public static void RotateTo(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0x1F17EF0", Offset = "0x1F17EF0", VA = "0x1F17EF0")]
	public static void RotateFrom(GameObject target, Vector3 rotation, float time)
	{
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0x1F180F4", Offset = "0x1F180F4", VA = "0x1F180F4")]
	public static void RotateFrom(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0x1F18658", Offset = "0x1F18658", VA = "0x1F18658")]
	public static void RotateAdd(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0x1F1885C", Offset = "0x1F1885C", VA = "0x1F1885C")]
	public static void RotateAdd(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0x1F18938", Offset = "0x1F18938", VA = "0x1F18938")]
	public static void RotateBy(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0x1F18B3C", Offset = "0x1F18B3C", VA = "0x1F18B3C")]
	public static void RotateBy(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0x1F18C18", Offset = "0x1F18C18", VA = "0x1F18C18")]
	public static void ShakePosition(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0x1F18E1C", Offset = "0x1F18E1C", VA = "0x1F18E1C")]
	public static void ShakePosition(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0x1F18EF8", Offset = "0x1F18EF8", VA = "0x1F18EF8")]
	public static void ShakeScale(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0x1F190FC", Offset = "0x1F190FC", VA = "0x1F190FC")]
	public static void ShakeScale(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0x1F191D8", Offset = "0x1F191D8", VA = "0x1F191D8")]
	public static void ShakeRotation(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0x1F193DC", Offset = "0x1F193DC", VA = "0x1F193DC")]
	public static void ShakeRotation(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0x1F194B8", Offset = "0x1F194B8", VA = "0x1F194B8")]
	public static void PunchPosition(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0x1F196BC", Offset = "0x1F196BC", VA = "0x1F196BC")]
	public static void PunchPosition(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0x1F197DC", Offset = "0x1F197DC", VA = "0x1F197DC")]
	public static void PunchRotation(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0x1F199E0", Offset = "0x1F199E0", VA = "0x1F199E0")]
	public static void PunchRotation(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0x1F19B00", Offset = "0x1F19B00", VA = "0x1F19B00")]
	public static void PunchScale(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0x1F19D04", Offset = "0x1F19D04", VA = "0x1F19D04")]
	public static void PunchScale(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0x1F19E24", Offset = "0x1F19E24", VA = "0x1F19E24")]
	private void GenerateTargets()
	{
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0x1F1AEE8", Offset = "0x1F1AEE8", VA = "0x1F1AEE8")]
	private void GenerateRectTargets()
	{
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0x1F1AD70", Offset = "0x1F1AD70", VA = "0x1F1AD70")]
	private void GenerateColorTargets()
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0x1F1AB04", Offset = "0x1F1AB04", VA = "0x1F1AB04")]
	private void GenerateVector3Targets()
	{
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0x1F1A864", Offset = "0x1F1A864", VA = "0x1F1A864")]
	private void GenerateVector2Targets()
	{
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0x1F1A664", Offset = "0x1F1A664", VA = "0x1F1A664")]
	private void GenerateFloatTargets()
	{
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0x1F1B030", Offset = "0x1F1B030", VA = "0x1F1B030")]
	private void GenerateColorToTargets()
	{
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0x1F1B9B0", Offset = "0x1F1B9B0", VA = "0x1F1B9B0")]
	private void GenerateAudioToTargets()
	{
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0x1F20860", Offset = "0x1F20860", VA = "0x1F20860")]
	private void GenerateStabTargets()
	{
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0x1F20028", Offset = "0x1F20028", VA = "0x1F20028")]
	private void GenerateLookToTargets()
	{
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0x1F1BCD8", Offset = "0x1F1BCD8", VA = "0x1F1BCD8")]
	private void GenerateMoveToPathTargets()
	{
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0x1F1C42C", Offset = "0x1F1C42C", VA = "0x1F1C42C")]
	private void GenerateMoveToTargets()
	{
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0x1F1CA7C", Offset = "0x1F1CA7C", VA = "0x1F1CA7C")]
	private void GenerateMoveByTargets()
	{
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0x1F1D08C", Offset = "0x1F1D08C", VA = "0x1F1D08C")]
	private void GenerateScaleToTargets()
	{
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0x1F1D5E8", Offset = "0x1F1D5E8", VA = "0x1F1D5E8")]
	private void GenerateScaleByTargets()
	{
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0x1F1DA50", Offset = "0x1F1DA50", VA = "0x1F1DA50")]
	private void GenerateScaleAddTargets()
	{
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0x1F1DEAC", Offset = "0x1F1DEAC", VA = "0x1F1DEAC")]
	private void GenerateRotateToTargets()
	{
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0x1F1E4E0", Offset = "0x1F1E4E0", VA = "0x1F1E4E0")]
	private void GenerateRotateAddTargets()
	{
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0x1F1E944", Offset = "0x1F1E944", VA = "0x1F1E944")]
	private void GenerateRotateByTargets()
	{
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0x1F1EE14", Offset = "0x1F1EE14", VA = "0x1F1EE14")]
	private void GenerateShakePositionTargets()
	{
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0x1F1F114", Offset = "0x1F1F114", VA = "0x1F1F114")]
	private void GenerateShakeScaleTargets()
	{
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0x1F1F3E8", Offset = "0x1F1F3E8", VA = "0x1F1F3E8")]
	private void GenerateShakeRotationTargets()
	{
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0x1F1F6BC", Offset = "0x1F1F6BC", VA = "0x1F1F6BC")]
	private void GeneratePunchPositionTargets()
	{
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0x1F1FA00", Offset = "0x1F1FA00", VA = "0x1F1FA00")]
	private void GeneratePunchRotationTargets()
	{
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0x1F1FD18", Offset = "0x1F1FD18", VA = "0x1F1FD18")]
	private void GeneratePunchScaleTargets()
	{
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0x1F20F7C", Offset = "0x1F20F7C", VA = "0x1F20F7C")]
	private void ApplyRectTargets()
	{
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0x1F2127C", Offset = "0x1F2127C", VA = "0x1F2127C")]
	private void ApplyColorTargets()
	{
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0x1F214AC", Offset = "0x1F214AC", VA = "0x1F214AC")]
	private void ApplyVector3Targets()
	{
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0x1F216A0", Offset = "0x1F216A0", VA = "0x1F216A0")]
	private void ApplyVector2Targets()
	{
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0x1F21840", Offset = "0x1F21840", VA = "0x1F21840")]
	private void ApplyFloatTargets()
	{
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0x1F21998", Offset = "0x1F21998", VA = "0x1F21998")]
	private void ApplyColorToTargets()
	{
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0x1F21EF8", Offset = "0x1F21EF8", VA = "0x1F21EF8")]
	private void ApplyAudioToTargets()
	{
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0x1F22064", Offset = "0x1F22064", VA = "0x1F22064")]
	private void ApplyStabTargets()
	{
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0x1F22068", Offset = "0x1F22068", VA = "0x1F22068")]
	private void ApplyMoveToPathTargets()
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0x1F223C8", Offset = "0x1F223C8", VA = "0x1F223C8")]
	private void ApplyMoveToTargets()
	{
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0x1F225D4", Offset = "0x1F225D4", VA = "0x1F225D4")]
	private void ApplyMoveByTargets()
	{
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0x1F22914", Offset = "0x1F22914", VA = "0x1F22914")]
	private void ApplyScaleToTargets()
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0x1F22A7C", Offset = "0x1F22A7C", VA = "0x1F22A7C")]
	private void ApplyLookToTargets()
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0x1F22C54", Offset = "0x1F22C54", VA = "0x1F22C54")]
	private void ApplyRotateToTargets()
	{
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0x1F22F84", Offset = "0x1F22F84", VA = "0x1F22F84")]
	private void ApplyRotateAddTargets()
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0x1F23218", Offset = "0x1F23218", VA = "0x1F23218")]
	private void ApplyShakePositionTargets()
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0x1F23630", Offset = "0x1F23630", VA = "0x1F23630")]
	private void ApplyShakeScaleTargets()
	{
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0x1F23844", Offset = "0x1F23844", VA = "0x1F23844")]
	private void ApplyShakeRotationTargets()
	{
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0x1F23AB4", Offset = "0x1F23AB4", VA = "0x1F23AB4")]
	private void ApplyPunchPositionTargets()
	{
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0x1F23F68", Offset = "0x1F23F68", VA = "0x1F23F68")]
	private void ApplyPunchRotationTargets()
	{
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0x1F242B0", Offset = "0x1F242B0", VA = "0x1F242B0")]
	private void ApplyPunchScaleTargets()
	{
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0x1F24510", Offset = "0x1F24510", VA = "0x1F24510")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCB3018", Offset = "0xCB3018")]
	private IEnumerator TweenDelay()
	{
		return null;
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0x1F2458C", Offset = "0x1F2458C", VA = "0x1F2458C")]
	private void TweenStart()
	{
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0x1F24F28", Offset = "0x1F24F28", VA = "0x1F24F28")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCB307C", Offset = "0xCB307C")]
	private IEnumerator TweenRestart()
	{
		return null;
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0x1F24FA4", Offset = "0x1F24FA4", VA = "0x1F24FA4")]
	private void TweenUpdate()
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0x1F25088", Offset = "0x1F25088", VA = "0x1F25088")]
	private void TweenComplete()
	{
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0x1F25158", Offset = "0x1F25158", VA = "0x1F25158")]
	private void TweenLoop()
	{
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0x1F251FC", Offset = "0x1F251FC", VA = "0x1F251FC")]
	public static Rect RectUpdate(Rect currentValue, Rect targetValue, float speed)
	{
		return default(Rect);
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0x1F253C4", Offset = "0x1F253C4", VA = "0x1F253C4")]
	public static Vector3 Vector3Update(Vector3 currentValue, Vector3 targetValue, float speed)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0x1F254D0", Offset = "0x1F254D0", VA = "0x1F254D0")]
	public static Vector2 Vector2Update(Vector2 currentValue, Vector2 targetValue, float speed)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0x1F25384", Offset = "0x1F25384", VA = "0x1F25384")]
	public static float FloatUpdate(float currentValue, float targetValue, float speed)
	{
		return default(float);
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0x1F255B4", Offset = "0x1F255B4", VA = "0x1F255B4")]
	public static void FadeUpdate(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0x1F26040", Offset = "0x1F26040", VA = "0x1F26040")]
	public static void FadeUpdate(GameObject target, float alpha, float time)
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0x1F25674", Offset = "0x1F25674", VA = "0x1F25674")]
	public static void ColorUpdate(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0x1F26228", Offset = "0x1F26228", VA = "0x1F26228")]
	public static void ColorUpdate(GameObject target, Color color, float time)
	{
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0x1F2643C", Offset = "0x1F2643C", VA = "0x1F2643C")]
	public static void AudioUpdate(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0x1F268EC", Offset = "0x1F268EC", VA = "0x1F268EC")]
	public static void AudioUpdate(GameObject target, float volume, float pitch, float time)
	{
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0x1F26B6C", Offset = "0x1F26B6C", VA = "0x1F26B6C")]
	public static void RotateUpdate(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0x1F27194", Offset = "0x1F27194", VA = "0x1F27194")]
	public static void RotateUpdate(GameObject target, Vector3 rotation, float time)
	{
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0x1F27398", Offset = "0x1F27398", VA = "0x1F27398")]
	public static void ScaleUpdate(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0x1F27980", Offset = "0x1F27980", VA = "0x1F27980")]
	public static void ScaleUpdate(GameObject target, Vector3 scale, float time)
	{
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0x1F27B84", Offset = "0x1F27B84", VA = "0x1F27B84")]
	public static void MoveUpdate(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0x1F28CF4", Offset = "0x1F28CF4", VA = "0x1F28CF4")]
	public static void MoveUpdate(GameObject target, Vector3 position, float time)
	{
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0x1F283E8", Offset = "0x1F283E8", VA = "0x1F283E8")]
	public static void LookUpdate(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0x1F28EF8", Offset = "0x1F28EF8", VA = "0x1F28EF8")]
	public static void LookUpdate(GameObject target, Vector3 looktarget, float time)
	{
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0x1F290FC", Offset = "0x1F290FC", VA = "0x1F290FC")]
	public static float PathLength(Transform[] path)
	{
		return default(float);
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0x1F20E04", Offset = "0x1F20E04", VA = "0x1F20E04")]
	public static float PathLength(Vector3[] path)
	{
		return default(float);
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0x1F299E0", Offset = "0x1F299E0", VA = "0x1F299E0")]
	public static void PutOnPath(GameObject target, Vector3[] path, float percent)
	{
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0x1F29A90", Offset = "0x1F29A90", VA = "0x1F29A90")]
	public static void PutOnPath(Transform target, Vector3[] path, float percent)
	{
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0x1F29B28", Offset = "0x1F29B28", VA = "0x1F29B28")]
	public static void PutOnPath(GameObject target, Transform[] path, float percent)
	{
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0x1F29C60", Offset = "0x1F29C60", VA = "0x1F29C60")]
	public static void PutOnPath(Transform target, Transform[] path, float percent)
	{
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0x1F29D80", Offset = "0x1F29D80", VA = "0x1F29D80")]
	public static Vector3 PointOnPath(Transform[] path, float percent)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0x1F29E8C", Offset = "0x1F29E8C", VA = "0x1F29E8C")]
	public static void DrawLine(Vector3[] line)
	{
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0x1F2A0F0", Offset = "0x1F2A0F0", VA = "0x1F2A0F0")]
	public static void DrawLine(Vector3[] line, Color color)
	{
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0x1F2A1B4", Offset = "0x1F2A1B4", VA = "0x1F2A1B4")]
	public static void DrawLine(Transform[] line)
	{
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0x1F2A328", Offset = "0x1F2A328", VA = "0x1F2A328")]
	public static void DrawLine(Transform[] line, Color color)
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0x1F2A47C", Offset = "0x1F2A47C", VA = "0x1F2A47C")]
	public static void DrawLineGizmos(Vector3[] line)
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0x1F2A560", Offset = "0x1F2A560", VA = "0x1F2A560")]
	public static void DrawLineGizmos(Vector3[] line, Color color)
	{
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0x1F2A624", Offset = "0x1F2A624", VA = "0x1F2A624")]
	public static void DrawLineGizmos(Transform[] line)
	{
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0x1F2A798", Offset = "0x1F2A798", VA = "0x1F2A798")]
	public static void DrawLineGizmos(Transform[] line, Color color)
	{
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0x1F2A8EC", Offset = "0x1F2A8EC", VA = "0x1F2A8EC")]
	public static void DrawLineHandles(Vector3[] line)
	{
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0x1F2A9D0", Offset = "0x1F2A9D0", VA = "0x1F2A9D0")]
	public static void DrawLineHandles(Vector3[] line, Color color)
	{
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0x1F2AA94", Offset = "0x1F2AA94", VA = "0x1F2AA94")]
	public static void DrawLineHandles(Transform[] line)
	{
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0x1F2AC08", Offset = "0x1F2AC08", VA = "0x1F2AC08")]
	public static void DrawLineHandles(Transform[] line, Color color)
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0x1F2AD5C", Offset = "0x1F2AD5C", VA = "0x1F2AD5C")]
	public static Vector3 PointOnPath(Vector3[] path, float percent)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0x1F2ADD4", Offset = "0x1F2ADD4", VA = "0x1F2ADD4")]
	public static void DrawPath(Vector3[] path)
	{
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0x1F2B0AC", Offset = "0x1F2B0AC", VA = "0x1F2B0AC")]
	public static void DrawPath(Vector3[] path, Color color)
	{
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0x1F2B170", Offset = "0x1F2B170", VA = "0x1F2B170")]
	public static void DrawPath(Transform[] path)
	{
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0x1F2B2E4", Offset = "0x1F2B2E4", VA = "0x1F2B2E4")]
	public static void DrawPath(Transform[] path, Color color)
	{
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0x1F2B438", Offset = "0x1F2B438", VA = "0x1F2B438")]
	public static void DrawPathGizmos(Vector3[] path)
	{
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0x1F2B51C", Offset = "0x1F2B51C", VA = "0x1F2B51C")]
	public static void DrawPathGizmos(Vector3[] path, Color color)
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0x1F2B5E0", Offset = "0x1F2B5E0", VA = "0x1F2B5E0")]
	public static void DrawPathGizmos(Transform[] path)
	{
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0x1F2B754", Offset = "0x1F2B754", VA = "0x1F2B754")]
	public static void DrawPathGizmos(Transform[] path, Color color)
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0x1F2B8A8", Offset = "0x1F2B8A8", VA = "0x1F2B8A8")]
	public static void DrawPathHandles(Vector3[] path)
	{
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0x1F2B98C", Offset = "0x1F2B98C", VA = "0x1F2B98C")]
	public static void DrawPathHandles(Vector3[] path, Color color)
	{
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0x1F2BA50", Offset = "0x1F2BA50", VA = "0x1F2BA50")]
	public static void DrawPathHandles(Transform[] path)
	{
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0x1F2BBC4", Offset = "0x1F2BBC4", VA = "0x1F2BBC4")]
	public static void DrawPathHandles(Transform[] path, Color color)
	{
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0x1F2BD18", Offset = "0x1F2BD18", VA = "0x1F2BD18")]
	public static void Resume(GameObject target)
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0x1F2BE08", Offset = "0x1F2BE08", VA = "0x1F2BE08")]
	public static void Resume(GameObject target, bool includechildren)
	{
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0x1F2C0C4", Offset = "0x1F2C0C4", VA = "0x1F2C0C4")]
	public static void Resume(GameObject target, string type)
	{
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0x1F2C21C", Offset = "0x1F2C21C", VA = "0x1F2C21C")]
	public static void Resume(GameObject target, string type, bool includechildren)
	{
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0x1F2C5C8", Offset = "0x1F2C5C8", VA = "0x1F2C5C8")]
	public static void Resume()
	{
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0x1F2C6E8", Offset = "0x1F2C6E8", VA = "0x1F2C6E8")]
	public static void Resume(string type)
	{
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0x1F2C918", Offset = "0x1F2C918", VA = "0x1F2C918")]
	public static void Pause(GameObject target)
	{
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0x1F2CA64", Offset = "0x1F2CA64", VA = "0x1F2CA64")]
	public static void Pause(GameObject target, bool includechildren)
	{
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0x1F2CD20", Offset = "0x1F2CD20", VA = "0x1F2CD20")]
	public static void Pause(GameObject target, string type)
	{
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0x1F2CECC", Offset = "0x1F2CECC", VA = "0x1F2CECC")]
	public static void Pause(GameObject target, string type, bool includechildren)
	{
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0x1F2D2CC", Offset = "0x1F2D2CC", VA = "0x1F2D2CC")]
	public static void Pause()
	{
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0x1F2D3EC", Offset = "0x1F2D3EC", VA = "0x1F2D3EC")]
	public static void Pause(string type)
	{
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0x1F2D61C", Offset = "0x1F2D61C", VA = "0x1F2D61C")]
	public static int Count()
	{
		return default(int);
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0x1F2D690", Offset = "0x1F2D690", VA = "0x1F2D690")]
	public static int Count(string type)
	{
		return default(int);
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0x1F2D86C", Offset = "0x1F2D86C", VA = "0x1F2D86C")]
	public static int Count(GameObject target)
	{
		return default(int);
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0x1F2D8D0", Offset = "0x1F2D8D0", VA = "0x1F2D8D0")]
	public static int Count(GameObject target, string type)
	{
		return default(int);
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0x1F2DA2C", Offset = "0x1F2DA2C", VA = "0x1F2DA2C")]
	public static void Stop()
	{
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0x1F2DC64", Offset = "0x1F2DC64", VA = "0x1F2DC64")]
	public static void Stop(string type)
	{
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0x1F2DFE4", Offset = "0x1F2DFE4", VA = "0x1F2DFE4")]
	public static void StopByName(string name)
	{
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0x1F2DB7C", Offset = "0x1F2DB7C", VA = "0x1F2DB7C")]
	public static void Stop(GameObject target)
	{
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0x1F2E3C8", Offset = "0x1F2E3C8", VA = "0x1F2E3C8")]
	public static void Stop(GameObject target, bool includechildren)
	{
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0x1F2DE94", Offset = "0x1F2DE94", VA = "0x1F2DE94")]
	public static void Stop(GameObject target, string type)
	{
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0x1F2E270", Offset = "0x1F2E270", VA = "0x1F2E270")]
	public static void StopByName(GameObject target, string name)
	{
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0x1F2E684", Offset = "0x1F2E684", VA = "0x1F2E684")]
	public static void Stop(GameObject target, string type, bool includechildren)
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0x1F2EA28", Offset = "0x1F2EA28", VA = "0x1F2EA28")]
	public static void StopByName(GameObject target, string name, bool includechildren)
	{
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0x1F12160", Offset = "0x1F12160", VA = "0x1F12160")]
	public static Hashtable Hash(params object[] args)
	{
		return null;
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0x1F2ED8C", Offset = "0x1F2ED8C", VA = "0x1F2ED8C")]
	private iTween(Hashtable h)
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0x1F2EDC0", Offset = "0x1F2EDC0", VA = "0x1F2EDC0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0x1F2FE8C", Offset = "0x1F2FE8C", VA = "0x1F2FE8C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCB30E0", Offset = "0xCB30E0")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0x1F2FF08", Offset = "0x1F2FF08", VA = "0x1F2FF08")]
	private void Update()
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0x1F2FF48", Offset = "0x1F2FF48", VA = "0x1F2FF48")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0x1F2FF88", Offset = "0x1F2FF88", VA = "0x1F2FF88")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0x1F3009C", Offset = "0x1F3009C", VA = "0x1F3009C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0x1F30118", Offset = "0x1F30118", VA = "0x1F30118")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0x1F29F70", Offset = "0x1F29F70", VA = "0x1F29F70")]
	private static void DrawLineHelper(Vector3[] line, Color color, string method)
	{
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0x1F2AEB8", Offset = "0x1F2AEB8", VA = "0x1F2AEB8")]
	private static void DrawPathHelper(Vector3[] path, Color color, string method)
	{
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0x1F292F0", Offset = "0x1F292F0", VA = "0x1F292F0")]
	private static Vector3[] PathControlPointGenerator(Vector3[] path)
	{
		return null;
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0x1F295B4", Offset = "0x1F295B4", VA = "0x1F295B4")]
	private static Vector3 Interp(Vector3[] pts, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0x1F11E24", Offset = "0x1F11E24", VA = "0x1F11E24")]
	private static void Launch(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0x1F1148C", Offset = "0x1F1148C", VA = "0x1F1148C")]
	private static Hashtable CleanArgs(Hashtable args)
	{
		return null;
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0x1F3011C", Offset = "0x1F3011C", VA = "0x1F3011C")]
	private static string GenerateID()
	{
		return null;
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0x1F2EE08", Offset = "0x1F2EE08", VA = "0x1F2EE08")]
	private void RetrieveArgs()
	{
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0x1F3019C", Offset = "0x1F3019C", VA = "0x1F3019C")]
	private void GetEasingFunction()
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0x1F25010", Offset = "0x1F25010", VA = "0x1F25010")]
	private void UpdatePercentage()
	{
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0x1F24704", Offset = "0x1F24704", VA = "0x1F24704")]
	private void CallBack(string callbackType)
	{
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0x1F20B94", Offset = "0x1F20B94", VA = "0x1F20B94")]
	private void Dispose()
	{
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0x1F249DC", Offset = "0x1F249DC", VA = "0x1F249DC")]
	private void ConflictCheck()
	{
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0x1F24F24", Offset = "0x1F24F24", VA = "0x1F24F24")]
	private void EnableKinematic()
	{
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0x1F251F8", Offset = "0x1F251F8", VA = "0x1F251F8")]
	private void DisableKinematic()
	{
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0x1F300C4", Offset = "0x1F300C4", VA = "0x1F300C4")]
	private void ResumeDelay()
	{
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0x1F305A4", Offset = "0x1F305A4", VA = "0x1F305A4")]
	private float linear(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0x1F20D30", Offset = "0x1F20D30", VA = "0x1F20D30")]
	private float clerp(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0x1F3062C", Offset = "0x1F3062C", VA = "0x1F3062C")]
	private float spring(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0x1F30730", Offset = "0x1F30730", VA = "0x1F30730")]
	private float easeInQuad(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0x1F30744", Offset = "0x1F30744", VA = "0x1F30744")]
	private float easeOutQuad(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0x1F30760", Offset = "0x1F30760", VA = "0x1F30760")]
	private float easeInOutQuad(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0x1F307B4", Offset = "0x1F307B4", VA = "0x1F307B4")]
	private float easeInCubic(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0x1F307CC", Offset = "0x1F307CC", VA = "0x1F307CC")]
	private float easeOutCubic(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0x1F307F4", Offset = "0x1F307F4", VA = "0x1F307F4")]
	private float easeInOutCubic(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0x1F3084C", Offset = "0x1F3084C", VA = "0x1F3084C")]
	private float easeInQuart(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0x1F30868", Offset = "0x1F30868", VA = "0x1F30868")]
	private float easeOutQuart(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0x1F30890", Offset = "0x1F30890", VA = "0x1F30890")]
	private float easeInOutQuart(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0x1F308EC", Offset = "0x1F308EC", VA = "0x1F308EC")]
	private float easeInQuint(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0x1F3090C", Offset = "0x1F3090C", VA = "0x1F3090C")]
	private float easeOutQuint(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0x1F3093C", Offset = "0x1F3093C", VA = "0x1F3093C")]
	private float easeInOutQuint(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0x1F309A4", Offset = "0x1F309A4", VA = "0x1F309A4")]
	private float easeInSine(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0x1F30A3C", Offset = "0x1F30A3C", VA = "0x1F30A3C")]
	private float easeOutSine(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0x1F30AD0", Offset = "0x1F30AD0", VA = "0x1F30AD0")]
	private float easeInOutSine(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0x1F30B74", Offset = "0x1F30B74", VA = "0x1F30B74")]
	private float easeInExpo(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0x1F30C0C", Offset = "0x1F30C0C", VA = "0x1F30C0C")]
	private float easeOutExpo(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0x1F30CA4", Offset = "0x1F30CA4", VA = "0x1F30CA4")]
	private float easeInOutExpo(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0x1F30D94", Offset = "0x1F30D94", VA = "0x1F30D94")]
	private float easeInCirc(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0x1F30E40", Offset = "0x1F30E40", VA = "0x1F30E40")]
	private float easeOutCirc(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0x1F30EEC", Offset = "0x1F30EEC", VA = "0x1F30EEC")]
	private float easeInOutCirc(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0x1F30FE4", Offset = "0x1F30FE4", VA = "0x1F30FE4")]
	private float easeInBounce(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0x1F31020", Offset = "0x1F31020", VA = "0x1F31020")]
	private float easeOutBounce(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0x1F310EC", Offset = "0x1F310EC", VA = "0x1F310EC")]
	private float easeInOutBounce(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0x1F31170", Offset = "0x1F31170", VA = "0x1F31170")]
	private float easeInBack(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0x1F311A0", Offset = "0x1F311A0", VA = "0x1F311A0")]
	private float easeOutBack(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x1F311E0", Offset = "0x1F311E0", VA = "0x1F311E0")]
	private float easeInOutBack(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x1F23EA8", Offset = "0x1F23EA8", VA = "0x1F23EA8")]
	private float punch(float amplitude, float value)
	{
		return default(float);
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x1F31264", Offset = "0x1F31264", VA = "0x1F31264")]
	private float easeInElastic(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0x1F3134C", Offset = "0x1F3134C", VA = "0x1F3134C")]
	private float easeOutElastic(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0x1F31430", Offset = "0x1F31430", VA = "0x1F31430")]
	private float easeInOutElastic(float start, float end, float value)
	{
		return default(float);
	}
}
[Token(Token = "0x2000022")]
public class SteamVR : IDisposable
{
	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool _enabled;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static SteamVR _instance;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB0EF8", Offset = "0xCB0EF8")]
	private CVRSystem <hmd>k__BackingField;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB0F08", Offset = "0xCB0F08")]
	private CVRCompositor <compositor>k__BackingField;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB0F18", Offset = "0xCB0F18")]
	private CVROverlay <overlay>k__BackingField;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB0F28", Offset = "0xCB0F28")]
	private static bool <initializing>k__BackingField;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB0F38", Offset = "0xCB0F38")]
	private static bool <calibrating>k__BackingField;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB0F48", Offset = "0xCB0F48")]
	private static bool <outOfRange>k__BackingField;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static bool[] connected;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB0F58", Offset = "0xCB0F58")]
	private float <sceneWidth>k__BackingField;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB0F68", Offset = "0xCB0F68")]
	private float <sceneHeight>k__BackingField;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB0F78", Offset = "0xCB0F78")]
	private float <aspect>k__BackingField;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB0F88", Offset = "0xCB0F88")]
	private float <fieldOfView>k__BackingField;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB0F98", Offset = "0xCB0F98")]
	private Vector2 <tanHalfFov>k__BackingField;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB0FA8", Offset = "0xCB0FA8")]
	private VRTextureBounds_t[] <textureBounds>k__BackingField;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB0FB8", Offset = "0xCB0FB8")]
	private SteamVR_Utils.RigidTransform[] <eyes>k__BackingField;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ETextureType textureType;

	[Token(Token = "0x17000040")]
	public static bool active
	{
		[Token(Token = "0x6000372")]
		[Address(RVA = "0x16D292C", Offset = "0x16D292C", VA = "0x16D292C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000041")]
	public static bool enabled
	{
		[Token(Token = "0x6000373")]
		[Address(RVA = "0x16D299C", Offset = "0x16D299C", VA = "0x16D299C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000374")]
		[Address(RVA = "0x16D2A38", Offset = "0x16D2A38", VA = "0x16D2A38")]
		set
		{
		}
	}

	[Token(Token = "0x17000042")]
	public static SteamVR instance
	{
		[Token(Token = "0x6000375")]
		[Address(RVA = "0x16D2B7C", Offset = "0x16D2B7C", VA = "0x16D2B7C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000043")]
	public static bool usingNativeSupport
	{
		[Token(Token = "0x6000376")]
		[Address(RVA = "0x16D2EBC", Offset = "0x16D2EBC", VA = "0x16D2EBC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000044")]
	public CVRSystem hmd
	{
		[Token(Token = "0x6000379")]
		[Address(RVA = "0x16D38D4", Offset = "0x16D38D4", VA = "0x16D38D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB3144", Offset = "0xCB3144")]
		get
		{
			return null;
		}
		[Token(Token = "0x600037A")]
		[Address(RVA = "0x16D38DC", Offset = "0x16D38DC", VA = "0x16D38DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB3154", Offset = "0xCB3154")]
		private set
		{
		}
	}

	[Token(Token = "0x17000045")]
	public CVRCompositor compositor
	{
		[Token(Token = "0x600037B")]
		[Address(RVA = "0x16D38E4", Offset = "0x16D38E4", VA = "0x16D38E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB3164", Offset = "0xCB3164")]
		get
		{
			return null;
		}
		[Token(Token = "0x600037C")]
		[Address(RVA = "0x16D38EC", Offset = "0x16D38EC", VA = "0x16D38EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB3174", Offset = "0xCB3174")]
		private set
		{
		}
	}

	[Token(Token = "0x17000046")]
	public CVROverlay overlay
	{
		[Token(Token = "0x600037D")]
		[Address(RVA = "0x16D38F4", Offset = "0x16D38F4", VA = "0x16D38F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB3184", Offset = "0xCB3184")]
		get
		{
			return null;
		}
		[Token(Token = "0x600037E")]
		[Address(RVA = "0x16D38FC", Offset = "0x16D38FC", VA = "0x16D38FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB3194", Offset = "0xCB3194")]
		private set
		{
		}
	}

	[Token(Token = "0x17000047")]
	public static bool initializing
	{
		[Token(Token = "0x600037F")]
		[Address(RVA = "0x16D3904", Offset = "0x16D3904", VA = "0x16D3904")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB31A4", Offset = "0xCB31A4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000380")]
		[Address(RVA = "0x16D396C", Offset = "0x16D396C", VA = "0x16D396C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB31B4", Offset = "0xCB31B4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000048")]
	public static bool calibrating
	{
		[Token(Token = "0x6000381")]
		[Address(RVA = "0x16D39DC", Offset = "0x16D39DC", VA = "0x16D39DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB31C4", Offset = "0xCB31C4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000382")]
		[Address(RVA = "0x16D3A44", Offset = "0x16D3A44", VA = "0x16D3A44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB31D4", Offset = "0xCB31D4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000049")]
	public static bool outOfRange
	{
		[Token(Token = "0x6000383")]
		[Address(RVA = "0x16D3AB4", Offset = "0x16D3AB4", VA = "0x16D3AB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB31E4", Offset = "0xCB31E4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000384")]
		[Address(RVA = "0x16D3B1C", Offset = "0x16D3B1C", VA = "0x16D3B1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB31F4", Offset = "0xCB31F4")]
		private set
		{
		}
	}

	[Token(Token = "0x1700004A")]
	public float sceneWidth
	{
		[Token(Token = "0x6000385")]
		[Address(RVA = "0x16D3B8C", Offset = "0x16D3B8C", VA = "0x16D3B8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB3204", Offset = "0xCB3204")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000386")]
		[Address(RVA = "0x16D3B94", Offset = "0x16D3B94", VA = "0x16D3B94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB3214", Offset = "0xCB3214")]
		private set
		{
		}
	}

	[Token(Token = "0x1700004B")]
	public float sceneHeight
	{
		[Token(Token = "0x6000387")]
		[Address(RVA = "0x16D3B9C", Offset = "0x16D3B9C", VA = "0x16D3B9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB3224", Offset = "0xCB3224")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000388")]
		[Address(RVA = "0x16D3BA4", Offset = "0x16D3BA4", VA = "0x16D3BA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB3234", Offset = "0xCB3234")]
		private set
		{
		}
	}

	[Token(Token = "0x1700004C")]
	public float aspect
	{
		[Token(Token = "0x6000389")]
		[Address(RVA = "0x16D3BAC", Offset = "0x16D3BAC", VA = "0x16D3BAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB3244", Offset = "0xCB3244")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600038A")]
		[Address(RVA = "0x16D3BB4", Offset = "0x16D3BB4", VA = "0x16D3BB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB3254", Offset = "0xCB3254")]
		private set
		{
		}
	}

	[Token(Token = "0x1700004D")]
	public float fieldOfView
	{
		[Token(Token = "0x600038B")]
		[Address(RVA = "0x16D3BBC", Offset = "0x16D3BBC", VA = "0x16D3BBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB3264", Offset = "0xCB3264")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600038C")]
		[Address(RVA = "0x16D3BC4", Offset = "0x16D3BC4", VA = "0x16D3BC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB3274", Offset = "0xCB3274")]
		private set
		{
		}
	}

	[Token(Token = "0x1700004E")]
	public Vector2 tanHalfFov
	{
		[Token(Token = "0x600038D")]
		[Address(RVA = "0x16D3BCC", Offset = "0x16D3BCC", VA = "0x16D3BCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB3284", Offset = "0xCB3284")]
		get
		{
			return default(Vector2);
		}
		[Token(Token = "0x600038E")]
		[Address(RVA = "0x16D3BD4", Offset = "0x16D3BD4", VA = "0x16D3BD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB3294", Offset = "0xCB3294")]
		private set
		{
		}
	}

	[Token(Token = "0x1700004F")]
	public VRTextureBounds_t[] textureBounds
	{
		[Token(Token = "0x600038F")]
		[Address(RVA = "0x16D3BDC", Offset = "0x16D3BDC", VA = "0x16D3BDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB32A4", Offset = "0xCB32A4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000390")]
		[Address(RVA = "0x16D3BE4", Offset = "0x16D3BE4", VA = "0x16D3BE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB32B4", Offset = "0xCB32B4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000050")]
	public SteamVR_Utils.RigidTransform[] eyes
	{
		[Token(Token = "0x6000391")]
		[Address(RVA = "0x16D3BEC", Offset = "0x16D3BEC", VA = "0x16D3BEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB32C4", Offset = "0xCB32C4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000392")]
		[Address(RVA = "0x16D3BF4", Offset = "0x16D3BF4", VA = "0x16D3BF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB32D4", Offset = "0xCB32D4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000051")]
	public string hmd_TrackingSystemName
	{
		[Token(Token = "0x6000393")]
		[Address(RVA = "0x16D3BFC", Offset = "0x16D3BFC", VA = "0x16D3BFC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000052")]
	public string hmd_ModelNumber
	{
		[Token(Token = "0x6000394")]
		[Address(RVA = "0x16D3D50", Offset = "0x16D3D50", VA = "0x16D3D50")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000053")]
	public string hmd_SerialNumber
	{
		[Token(Token = "0x6000395")]
		[Address(RVA = "0x16D3D5C", Offset = "0x16D3D5C", VA = "0x16D3D5C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000054")]
	public float hmd_SecondsFromVsyncToPhotons
	{
		[Token(Token = "0x6000396")]
		[Address(RVA = "0x16D3D68", Offset = "0x16D3D68", VA = "0x16D3D68")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000055")]
	public float hmd_DisplayFrequency
	{
		[Token(Token = "0x6000397")]
		[Address(RVA = "0x16D3DB4", Offset = "0x16D3DB4", VA = "0x16D3DB4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0x16D2C94", Offset = "0x16D2C94", VA = "0x16D2C94")]
	private static SteamVR CreateInstance()
	{
		return null;
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0x16D2F28", Offset = "0x16D2F28", VA = "0x16D2F28")]
	private static void ReportError(EVRInitError error)
	{
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0x16D3DC0", Offset = "0x16D3DC0", VA = "0x16D3DC0")]
	public string GetTrackedDeviceString(uint deviceId)
	{
		return null;
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0x16D3C08", Offset = "0x16D3C08", VA = "0x16D3C08")]
	public string GetStringProperty(ETrackedDeviceProperty prop, uint deviceId = 0u)
	{
		return null;
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0x16D3D74", Offset = "0x16D3D74", VA = "0x16D3D74")]
	public float GetFloatProperty(ETrackedDeviceProperty prop, uint deviceId = 0u)
	{
		return default(float);
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0x16D3EA8", Offset = "0x16D3EA8", VA = "0x16D3EA8")]
	private void OnInitializing(bool initializing)
	{
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0x16D3F5C", Offset = "0x16D3F5C", VA = "0x16D3F5C")]
	private void OnCalibrating(bool calibrating)
	{
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0x16D4010", Offset = "0x16D4010", VA = "0x16D4010")]
	private void OnOutOfRange(bool outOfRange)
	{
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0x16D40C4", Offset = "0x16D40C4", VA = "0x16D40C4")]
	private void OnDeviceConnected(int i, bool connected)
	{
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0x16D4168", Offset = "0x16D4168", VA = "0x16D4168")]
	private void OnNewPoses(TrackedDevicePose_t[] poses)
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0x16D307C", Offset = "0x16D307C", VA = "0x16D307C")]
	private SteamVR()
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0x16D4614", Offset = "0x16D4614", VA = "0x16D4614", Slot = "1")]
	~SteamVR()
	{
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0x16D48C8", Offset = "0x16D48C8", VA = "0x16D48C8", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0x16D4680", Offset = "0x16D4680", VA = "0x16D4680")]
	private void Dispose(bool disposing)
	{
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0x16D2AD8", Offset = "0x16D2AD8", VA = "0x16D2AD8")]
	public static void SafeDispose()
	{
	}
}
[Token(Token = "0x2000023")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xCA7E24", Offset = "0xCA7E24")]
public class SteamVR_Camera : MonoBehaviour
{
	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform _head;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB0FD8", Offset = "0xCB0FD8")]
	private Camera <camera>k__BackingField;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform _ears;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool wireframe;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Hashtable values;

	[Token(Token = "0x40000CA")]
	private const string eyeSuffix = " (eye)";

	[Token(Token = "0x40000CB")]
	private const string earsSuffix = " (ears)";

	[Token(Token = "0x40000CC")]
	private const string headSuffix = " (head)";

	[Token(Token = "0x40000CD")]
	private const string originSuffix = " (origin)";

	[Token(Token = "0x17000056")]
	public Transform head
	{
		[Token(Token = "0x60003A6")]
		[Address(RVA = "0x1291A7C", Offset = "0x1291A7C", VA = "0x1291A7C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000057")]
	public Transform offset
	{
		[Token(Token = "0x60003A7")]
		[Address(RVA = "0x1291A84", Offset = "0x1291A84", VA = "0x1291A84")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000058")]
	public Transform origin
	{
		[Token(Token = "0x60003A8")]
		[Address(RVA = "0x1291A8C", Offset = "0x1291A8C", VA = "0x1291A8C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000059")]
	public Camera camera
	{
		[Token(Token = "0x60003A9")]
		[Address(RVA = "0x1291AA8", Offset = "0x1291AA8", VA = "0x1291AA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB32E4", Offset = "0xCB32E4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003AA")]
		[Address(RVA = "0x1291AB0", Offset = "0x1291AB0", VA = "0x1291AB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB32F4", Offset = "0xCB32F4")]
		private set
		{
		}
	}

	[Token(Token = "0x1700005A")]
	public Transform ears
	{
		[Token(Token = "0x60003AB")]
		[Address(RVA = "0x1291AB8", Offset = "0x1291AB8", VA = "0x1291AB8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005B")]
	public static float sceneResolutionScale
	{
		[Token(Token = "0x60003AD")]
		[Address(RVA = "0x1291B48", Offset = "0x1291B48", VA = "0x1291B48")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003AE")]
		[Address(RVA = "0x1291B50", Offset = "0x1291B50", VA = "0x1291B50")]
		set
		{
		}
	}

	[Token(Token = "0x1700005C")]
	public string baseName
	{
		[Token(Token = "0x60003B3")]
		[Address(RVA = "0x1292E1C", Offset = "0x1292E1C", VA = "0x1292E1C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0x1291AC0", Offset = "0x1291AC0", VA = "0x1291AC0")]
	public Ray GetRay()
	{
		return default(Ray);
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0x1291B58", Offset = "0x1291B58", VA = "0x1291B58")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0x1291C08", Offset = "0x1291C08", VA = "0x1291C08")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0x1292778", Offset = "0x1292778", VA = "0x1292778")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0x12927E0", Offset = "0x12927E0", VA = "0x12927E0")]
	public void ForceLast()
	{
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0x1291F98", Offset = "0x1291F98", VA = "0x1291F98")]
	public void Expand()
	{
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0x1292EEC", Offset = "0x1292EEC", VA = "0x1292EEC")]
	public void Collapse()
	{
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0x1293328", Offset = "0x1293328", VA = "0x1293328")]
	public SteamVR_Camera()
	{
	}
}
[Token(Token = "0x2000024")]
[ExecuteInEditMode]
public class SteamVR_CameraFlip : MonoBehaviour
{
	[Token(Token = "0x60003B7")]
	[Address(RVA = "0x1293330", Offset = "0x1293330", VA = "0x1293330")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0x12933CC", Offset = "0x12933CC", VA = "0x12933CC")]
	public SteamVR_CameraFlip()
	{
	}
}
[Token(Token = "0x2000025")]
[ExecuteInEditMode]
public class SteamVR_CameraMask : MonoBehaviour
{
	[Token(Token = "0x60003B9")]
	[Address(RVA = "0x12933D4", Offset = "0x12933D4", VA = "0x12933D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0x1293470", Offset = "0x1293470", VA = "0x1293470")]
	public SteamVR_CameraMask()
	{
	}
}
[Token(Token = "0x2000026")]
public class SteamVR_Controller
{
	[Token(Token = "0x200026B")]
	public class ButtonMask
	{
		[Token(Token = "0x4000CC7")]
		public const ulong System = 1uL;

		[Token(Token = "0x4000CC8")]
		public const ulong ApplicationMenu = 2uL;

		[Token(Token = "0x4000CC9")]
		public const ulong Grip = 4uL;

		[Token(Token = "0x4000CCA")]
		public const ulong Axis0 = 4294967296uL;

		[Token(Token = "0x4000CCB")]
		public const ulong Axis1 = 8589934592uL;

		[Token(Token = "0x4000CCC")]
		public const ulong Axis2 = 17179869184uL;

		[Token(Token = "0x4000CCD")]
		public const ulong Axis3 = 34359738368uL;

		[Token(Token = "0x4000CCE")]
		public const ulong Axis4 = 68719476736uL;

		[Token(Token = "0x4000CCF")]
		public const ulong Touchpad = 4294967296uL;

		[Token(Token = "0x4000CD0")]
		public const ulong Trigger = 8589934592uL;

		[Token(Token = "0x6000F35")]
		[Address(RVA = "0x1293BC0", Offset = "0x1293BC0", VA = "0x1293BC0")]
		public ButtonMask()
		{
		}
	}

	[Token(Token = "0x200026C")]
	public class Device
	{
		[Token(Token = "0x4000CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB2404", Offset = "0xCB2404")]
		private uint <index>k__BackingField;

		[Token(Token = "0x4000CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB2414", Offset = "0xCB2414")]
		private bool <valid>k__BackingField;

		[Token(Token = "0x4000CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private VRControllerState_t state;

		[Token(Token = "0x4000CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private VRControllerState_t prevState;

		[Token(Token = "0x4000CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private TrackedDevicePose_t pose;

		[Token(Token = "0x4000CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private int prevFrameCount;

		[Token(Token = "0x4000CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public float hairTriggerDelta;

		[Token(Token = "0x4000CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private float hairTriggerLimit;

		[Token(Token = "0x4000CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private bool hairTriggerState;

		[Token(Token = "0x4000CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF5")]
		private bool hairTriggerPrevState;

		[Token(Token = "0x1700013F")]
		public uint index
		{
			[Token(Token = "0x6000F37")]
			[Address(RVA = "0x1293BC8", Offset = "0x1293BC8", VA = "0x1293BC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB59C0", Offset = "0xCB59C0")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6000F38")]
			[Address(RVA = "0x1293BD0", Offset = "0x1293BD0", VA = "0x1293BD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB59D0", Offset = "0xCB59D0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000140")]
		public bool valid
		{
			[Token(Token = "0x6000F39")]
			[Address(RVA = "0x1293BD8", Offset = "0x1293BD8", VA = "0x1293BD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB59E0", Offset = "0xCB59E0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F3A")]
			[Address(RVA = "0x1293BE0", Offset = "0x1293BE0", VA = "0x1293BE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB59F0", Offset = "0xCB59F0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000141")]
		public bool connected
		{
			[Token(Token = "0x6000F3B")]
			[Address(RVA = "0x1293B94", Offset = "0x1293B94", VA = "0x1293B94")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000142")]
		public bool hasTracking
		{
			[Token(Token = "0x6000F3C")]
			[Address(RVA = "0x1293BEC", Offset = "0x1293BEC", VA = "0x1293BEC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000143")]
		public bool outOfRange
		{
			[Token(Token = "0x6000F3D")]
			[Address(RVA = "0x1293C10", Offset = "0x1293C10", VA = "0x1293C10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000144")]
		public bool calibrating
		{
			[Token(Token = "0x6000F3E")]
			[Address(RVA = "0x1293C48", Offset = "0x1293C48", VA = "0x1293C48")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000145")]
		public bool uninitialized
		{
			[Token(Token = "0x6000F3F")]
			[Address(RVA = "0x1293C78", Offset = "0x1293C78", VA = "0x1293C78")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000146")]
		public SteamVR_Utils.RigidTransform transform
		{
			[Token(Token = "0x6000F40")]
			[Address(RVA = "0x1293B38", Offset = "0x1293B38", VA = "0x1293B38")]
			get
			{
				return default(SteamVR_Utils.RigidTransform);
			}
		}

		[Token(Token = "0x17000147")]
		public Vector3 velocity
		{
			[Token(Token = "0x6000F41")]
			[Address(RVA = "0x1293CA4", Offset = "0x1293CA4", VA = "0x1293CA4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000148")]
		public Vector3 angularVelocity
		{
			[Token(Token = "0x6000F42")]
			[Address(RVA = "0x1293CF4", Offset = "0x1293CF4", VA = "0x1293CF4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000F36")]
		[Address(RVA = "0x12935E0", Offset = "0x12935E0", VA = "0x12935E0")]
		public Device(uint i)
		{
		}

		[Token(Token = "0x6000F43")]
		[Address(RVA = "0x1293D48", Offset = "0x1293D48", VA = "0x1293D48")]
		public VRControllerState_t GetState()
		{
			return default(VRControllerState_t);
		}

		[Token(Token = "0x6000F44")]
		[Address(RVA = "0x1293D84", Offset = "0x1293D84", VA = "0x1293D84")]
		public VRControllerState_t GetPrevState()
		{
			return default(VRControllerState_t);
		}

		[Token(Token = "0x6000F45")]
		[Address(RVA = "0x1293DC0", Offset = "0x1293DC0", VA = "0x1293DC0")]
		public TrackedDevicePose_t GetPose()
		{
			return default(TrackedDevicePose_t);
		}

		[Token(Token = "0x6000F46")]
		[Address(RVA = "0x1293654", Offset = "0x1293654", VA = "0x1293654")]
		public void Update()
		{
		}

		[Token(Token = "0x6000F47")]
		[Address(RVA = "0x1294040", Offset = "0x1294040", VA = "0x1294040")]
		public bool GetPress(ulong buttonMask)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F48")]
		[Address(RVA = "0x1294070", Offset = "0x1294070", VA = "0x1294070")]
		public bool GetPressDown(ulong buttonMask)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F49")]
		[Address(RVA = "0x12940B4", Offset = "0x12940B4", VA = "0x12940B4")]
		public bool GetPressUp(ulong buttonMask)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F4A")]
		[Address(RVA = "0x12940F8", Offset = "0x12940F8", VA = "0x12940F8")]
		public bool GetPress(EVRButtonId buttonId)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F4B")]
		[Address(RVA = "0x129412C", Offset = "0x129412C", VA = "0x129412C")]
		public bool GetPressDown(EVRButtonId buttonId)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F4C")]
		[Address(RVA = "0x1294174", Offset = "0x1294174", VA = "0x1294174")]
		public bool GetPressUp(EVRButtonId buttonId)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F4D")]
		[Address(RVA = "0x12941BC", Offset = "0x12941BC", VA = "0x12941BC")]
		public bool GetTouch(ulong buttonMask)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F4E")]
		[Address(RVA = "0x12941EC", Offset = "0x12941EC", VA = "0x12941EC")]
		public bool GetTouchDown(ulong buttonMask)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F4F")]
		[Address(RVA = "0x1294230", Offset = "0x1294230", VA = "0x1294230")]
		public bool GetTouchUp(ulong buttonMask)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F50")]
		[Address(RVA = "0x1294274", Offset = "0x1294274", VA = "0x1294274")]
		public bool GetTouch(EVRButtonId buttonId)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F51")]
		[Address(RVA = "0x12942A8", Offset = "0x12942A8", VA = "0x12942A8")]
		public bool GetTouchDown(EVRButtonId buttonId)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F52")]
		[Address(RVA = "0x12942F0", Offset = "0x12942F0", VA = "0x12942F0")]
		public bool GetTouchUp(EVRButtonId buttonId)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F53")]
		[Address(RVA = "0x1294338", Offset = "0x1294338", VA = "0x1294338")]
		public Vector2 GetAxis(EVRButtonId buttonId = EVRButtonId.k_EButton_Axis0)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000F54")]
		[Address(RVA = "0x1294414", Offset = "0x1294414", VA = "0x1294414")]
		public void TriggerHapticPulse(ushort durationMicroSec = 500, EVRButtonId buttonId = EVRButtonId.k_EButton_Axis0)
		{
		}

		[Token(Token = "0x6000F55")]
		[Address(RVA = "0x1293F40", Offset = "0x1293F40", VA = "0x1293F40")]
		private void UpdateHairTrigger()
		{
		}

		[Token(Token = "0x6000F56")]
		[Address(RVA = "0x12944B0", Offset = "0x12944B0", VA = "0x12944B0")]
		public bool GetHairTrigger()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F57")]
		[Address(RVA = "0x12944D4", Offset = "0x12944D4", VA = "0x12944D4")]
		public bool GetHairTriggerDown()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F58")]
		[Address(RVA = "0x1294510", Offset = "0x1294510", VA = "0x1294510")]
		public bool GetHairTriggerUp()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200026D")]
	public enum DeviceRelation
	{
		[Token(Token = "0x4000CDC")]
		First,
		[Token(Token = "0x4000CDD")]
		Leftmost,
		[Token(Token = "0x4000CDE")]
		Rightmost,
		[Token(Token = "0x4000CDF")]
		FarthestLeft,
		[Token(Token = "0x4000CE0")]
		FarthestRight
	}

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Device[] devices;

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0x1293478", Offset = "0x1293478", VA = "0x1293478")]
	public static Device Input(int deviceIndex)
	{
		return null;
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0x1293618", Offset = "0x1293618", VA = "0x1293618")]
	public static void Update()
	{
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0x12937DC", Offset = "0x12937DC", VA = "0x12937DC")]
	public static int GetDeviceIndex(DeviceRelation relation, ETrackedDeviceClass deviceClass = ETrackedDeviceClass.Controller, int relativeTo = 0)
	{
		return default(int);
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0x1293BB8", Offset = "0x1293BB8", VA = "0x1293BB8")]
	public SteamVR_Controller()
	{
	}
}
[Token(Token = "0x2000027")]
public class SteamVR_ControllerManager : MonoBehaviour
{
	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject left;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject right;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCB0FF8", Offset = "0xCB0FF8")]
	public GameObject[] objects;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCB1030", Offset = "0xCB1030")]
	public bool assignAllBeforeIdentified;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private uint[] indices;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool[] connected;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private uint leftIndex;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private uint rightIndex;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SteamVR_Events.Action inputFocusAction;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private SteamVR_Events.Action deviceConnectedAction;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private SteamVR_Events.Action trackedDeviceRoleChangedAction;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string hiddenPrefix;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string hiddenPostfix;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static string[] labels;

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0x129454C", Offset = "0x129454C", VA = "0x129454C")]
	private void SetUniqueObject(GameObject o, int index)
	{
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0x129467C", Offset = "0x129467C", VA = "0x129467C")]
	public void UpdateTargets()
	{
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0x12947D8", Offset = "0x12947D8", VA = "0x12947D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0x12947DC", Offset = "0x12947DC", VA = "0x12947DC")]
	private SteamVR_ControllerManager()
	{
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0x1294B4C", Offset = "0x1294B4C", VA = "0x1294B4C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0x12950EC", Offset = "0x12950EC", VA = "0x12950EC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0x1295150", Offset = "0x1295150", VA = "0x1295150")]
	private void OnInputFocus(bool hasFocus)
	{
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0x1295500", Offset = "0x1295500", VA = "0x1295500")]
	private void HideObject(Transform t, string name)
	{
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0x129540C", Offset = "0x129540C", VA = "0x129540C")]
	private void ShowObject(Transform t, string name)
	{
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0x1295670", Offset = "0x1295670", VA = "0x1295670")]
	private void SetTrackedDeviceIndex(int objectIndex, uint trackedDeviceIndex)
	{
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0x12958BC", Offset = "0x12958BC", VA = "0x12958BC")]
	private void OnTrackedDeviceRoleChanged(VREvent_t vrEvent)
	{
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0x1294FC8", Offset = "0x1294FC8", VA = "0x1294FC8")]
	private void OnDeviceConnected(int index, bool connected)
	{
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0x1294D2C", Offset = "0x1294D2C", VA = "0x1294D2C")]
	public void Refresh()
	{
	}
}
[Token(Token = "0x2000028")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xCA7EA8", Offset = "0xCA7EA8")]
public class SteamVR_Ears : MonoBehaviour
{
	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SteamVR_Camera vrcam;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool usingSpeakers;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Quaternion offset;

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0x1295A10", Offset = "0x1295A10", VA = "0x1295A10")]
	private void OnNewPosesApplied()
	{
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0x1295B84", Offset = "0x1295B84", VA = "0x1295B84")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0x1295D28", Offset = "0x1295D28", VA = "0x1295D28")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0x1295DFC", Offset = "0x1295DFC", VA = "0x1295DFC")]
	public SteamVR_Ears()
	{
	}
}
[Token(Token = "0x2000029")]
public static class SteamVR_Events
{
	[Token(Token = "0x200026E")]
	public abstract class Action
	{
		[Token(Token = "0x17000149")]
		public bool enabled
		{
			[Token(Token = "0x6000F5A")]
			[Address(RVA = "0x12950DC", Offset = "0x12950DC", VA = "0x12950DC")]
			set
			{
			}
		}

		[Token(Token = "0x6000F59")]
		public abstract void Enable(bool enabled);

		[Token(Token = "0x6000F5B")]
		[Address(RVA = "0x1296A24", Offset = "0x1296A24", VA = "0x1296A24")]
		protected Action()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200026F")]
	public class ActionNoArgs : Action
	{
		[Token(Token = "0x4000CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Event _event;

		[Token(Token = "0x4000CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private UnityAction action;

		[Token(Token = "0x6000F5C")]
		[Address(RVA = "0x1295FE4", Offset = "0x1295FE4", VA = "0x1295FE4")]
		public ActionNoArgs(Event _event, UnityAction action)
		{
		}

		[Token(Token = "0x6000F5D")]
		[Address(RVA = "0x1296A2C", Offset = "0x1296A2C", VA = "0x1296A2C", Slot = "4")]
		public override void Enable(bool enabled)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000270")]
	public class Action<T> : Action
	{
		[Token(Token = "0x4000CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Event<T> _event;

		[Token(Token = "0x4000CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private UnityAction<T> action;

		[Token(Token = "0x6000F5E")]
		public Action(Event<T> _event, UnityAction<T> action)
		{
		}

		[Token(Token = "0x6000F5F")]
		public override void Enable(bool enabled)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000271")]
	public class Action<T0, T1> : Action
	{
		[Token(Token = "0x4000CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Event<T0, T1> _event;

		[Token(Token = "0x4000CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private UnityAction<T0, T1> action;

		[Token(Token = "0x6000F60")]
		public Action(Event<T0, T1> _event, UnityAction<T0, T1> action)
		{
		}

		[Token(Token = "0x6000F61")]
		public override void Enable(bool enabled)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000272")]
	public class Action<T0, T1, T2> : Action
	{
		[Token(Token = "0x4000CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Event<T0, T1, T2> _event;

		[Token(Token = "0x4000CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private UnityAction<T0, T1, T2> action;

		[Token(Token = "0x6000F62")]
		public Action(Event<T0, T1, T2> _event, UnityAction<T0, T1, T2> action)
		{
		}

		[Token(Token = "0x6000F63")]
		public override void Enable(bool enabled)
		{
		}
	}

	[Token(Token = "0x2000273")]
	public class Event : UnityEvent
	{
		[Token(Token = "0x6000F64")]
		[Address(RVA = "0x1295D20", Offset = "0x1295D20", VA = "0x1295D20")]
		public void Listen(UnityAction action)
		{
		}

		[Token(Token = "0x6000F65")]
		[Address(RVA = "0x1295DF4", Offset = "0x1295DF4", VA = "0x1295DF4")]
		public void Remove(UnityAction action)
		{
		}

		[Token(Token = "0x6000F66")]
		[Address(RVA = "0x1296A5C", Offset = "0x1296A5C", VA = "0x1296A5C")]
		public void Send()
		{
		}

		[Token(Token = "0x6000F67")]
		[Address(RVA = "0x1296A1C", Offset = "0x1296A1C", VA = "0x1296A1C")]
		public Event()
		{
		}
	}

	[Token(Token = "0x2000274")]
	public class Event<T> : UnityEvent<T>
	{
		[Token(Token = "0x6000F68")]
		public void Listen(UnityAction<T> action)
		{
		}

		[Token(Token = "0x6000F69")]
		public void Remove(UnityAction<T> action)
		{
		}

		[Token(Token = "0x6000F6A")]
		public void Send(T arg0)
		{
		}

		[Token(Token = "0x6000F6B")]
		public Event()
		{
		}
	}

	[Token(Token = "0x2000275")]
	public class Event<T0, T1> : UnityEvent<T0, T1>
	{
		[Token(Token = "0x6000F6C")]
		public void Listen(UnityAction<T0, T1> action)
		{
		}

		[Token(Token = "0x6000F6D")]
		public void Remove(UnityAction<T0, T1> action)
		{
		}

		[Token(Token = "0x6000F6E")]
		public void Send(T0 arg0, T1 arg1)
		{
		}

		[Token(Token = "0x6000F6F")]
		public Event()
		{
		}
	}

	[Token(Token = "0x2000276")]
	public class Event<T0, T1, T2> : UnityEvent<T0, T1, T2>
	{
		[Token(Token = "0x6000F70")]
		public void Listen(UnityAction<T0, T1, T2> action)
		{
		}

		[Token(Token = "0x6000F71")]
		public void Remove(UnityAction<T0, T1, T2> action)
		{
		}

		[Token(Token = "0x6000F72")]
		public void Send(T0 arg0, T1 arg1, T2 arg2)
		{
		}

		[Token(Token = "0x6000F73")]
		public Event()
		{
		}
	}

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Event<bool> Calibrating;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Event<int, bool> DeviceConnected;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Event<Color, float, bool> Fade;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static Event FadeReady;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static Event<bool> HideRenderModels;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static Event<bool> Initializing;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static Event<bool> InputFocus;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static Event<bool> Loading;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static Event<float> LoadingFadeIn;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static Event<float> LoadingFadeOut;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static Event<TrackedDevicePose_t[]> NewPoses;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static Event NewPosesApplied;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static Event<bool> OutOfRange;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static Event<SteamVR_RenderModel, bool> RenderModelLoaded;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static Dictionary<EVREventType, Event<VREvent_t>> systemEvents;

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0x1295E04", Offset = "0x1295E04", VA = "0x1295E04")]
	public static Action CalibratingAction(UnityAction<bool> action)
	{
		return null;
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0x12949FC", Offset = "0x12949FC", VA = "0x12949FC")]
	public static Action DeviceConnectedAction(UnityAction<int, bool> action)
	{
		return null;
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0x1295EA8", Offset = "0x1295EA8", VA = "0x1295EA8")]
	public static Action FadeAction(UnityAction<Color, float, bool> action)
	{
		return null;
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0x1295F4C", Offset = "0x1295F4C", VA = "0x1295F4C")]
	public static Action FadeReadyAction(UnityAction action)
	{
		return null;
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0x1296034", Offset = "0x1296034", VA = "0x1296034")]
	public static Action HideRenderModelsAction(UnityAction<bool> action)
	{
		return null;
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0x12960D8", Offset = "0x12960D8", VA = "0x12960D8")]
	public static Action InitializingAction(UnityAction<bool> action)
	{
		return null;
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0x1294958", Offset = "0x1294958", VA = "0x1294958")]
	public static Action InputFocusAction(UnityAction<bool> action)
	{
		return null;
	}

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0x129617C", Offset = "0x129617C", VA = "0x129617C")]
	public static Action LoadingAction(UnityAction<bool> action)
	{
		return null;
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0x1296220", Offset = "0x1296220", VA = "0x1296220")]
	public static Action LoadingFadeInAction(UnityAction<float> action)
	{
		return null;
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0x12962C4", Offset = "0x12962C4", VA = "0x12962C4")]
	public static Action LoadingFadeOutAction(UnityAction<float> action)
	{
		return null;
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0x1296368", Offset = "0x1296368", VA = "0x1296368")]
	public static Action NewPosesAction(UnityAction<TrackedDevicePose_t[]> action)
	{
		return null;
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0x129640C", Offset = "0x129640C", VA = "0x129640C")]
	public static Action NewPosesAppliedAction(UnityAction action)
	{
		return null;
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0x12964A4", Offset = "0x12964A4", VA = "0x12964A4")]
	public static Action OutOfRangeAction(UnityAction<bool> action)
	{
		return null;
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0x1296548", Offset = "0x1296548", VA = "0x1296548")]
	public static Action RenderModelLoadedAction(UnityAction<SteamVR_RenderModel, bool> action)
	{
		return null;
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0x12965EC", Offset = "0x12965EC", VA = "0x12965EC")]
	public static Event<VREvent_t> System(EVREventType eventType)
	{
		return null;
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0x1294AA0", Offset = "0x1294AA0", VA = "0x1294AA0")]
	public static Action SystemAction(EVREventType eventType, UnityAction<VREvent_t> action)
	{
		return null;
	}
}
[Token(Token = "0x200002A")]
public class SteamVR_ExternalCamera : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000277")]
	public struct Config
	{
		[Token(Token = "0x4000CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4000CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x4000CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float z;

		[Token(Token = "0x4000CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float rx;

		[Token(Token = "0x4000CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float ry;

		[Token(Token = "0x4000CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float rz;

		[Token(Token = "0x4000CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float fov;

		[Token(Token = "0x4000CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float near;

		[Token(Token = "0x4000CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float far;

		[Token(Token = "0x4000CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float sceneResolutionScale;

		[Token(Token = "0x4000CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float frameSkip;

		[Token(Token = "0x4000CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float nearOffset;

		[Token(Token = "0x4000CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float farOffset;

		[Token(Token = "0x4000CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float hmdOffset;

		[Token(Token = "0x4000CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float r;

		[Token(Token = "0x4000CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float g;

		[Token(Token = "0x4000CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float b;

		[Token(Token = "0x4000CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float a;

		[Token(Token = "0x4000CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool disableStandardAssets;
	}

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Config config;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string configPath;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private FileSystemWatcher watcher;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Camera cam;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Transform target;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GameObject clipQuad;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Material clipMaterial;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Material colorMat;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Material alphaMat;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Camera[] cameras;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Rect[] cameraRects;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float sceneResolutionScale;

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0x1296A64", Offset = "0x1296A64", VA = "0x1296A64")]
	public void ReadConfig()
	{
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0x1297388", Offset = "0x1297388", VA = "0x1297388")]
	private void OnChanged(object source, FileSystemEventArgs e)
	{
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0x129738C", Offset = "0x129738C", VA = "0x129738C")]
	public void AttachToCamera(SteamVR_Camera vrcam)
	{
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0x1297994", Offset = "0x1297994", VA = "0x1297994")]
	public float GetTargetDistance()
	{
		return default(float);
	}

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0x1297C40", Offset = "0x1297C40", VA = "0x1297C40")]
	public void RenderNear()
	{
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0x1298398", Offset = "0x1298398", VA = "0x1298398")]
	public void RenderFar()
	{
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0x12984B8", Offset = "0x12984B8", VA = "0x12984B8")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0x12984BC", Offset = "0x12984BC", VA = "0x12984BC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0x1298738", Offset = "0x1298738", VA = "0x1298738")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0x12988A4", Offset = "0x12988A4", VA = "0x12988A4")]
	public SteamVR_ExternalCamera()
	{
	}
}
[Token(Token = "0x200002B")]
public class SteamVR_Fade : MonoBehaviour
{
	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Color currentColor;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Color targetColor;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Color deltaColor;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool fadeOverlay;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Material fadeMaterial;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int fadeMaterialColorID;

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0x12988AC", Offset = "0x12988AC", VA = "0x12988AC")]
	public static void Start(Color newColor, float duration, bool fadeOverlay = false)
	{
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0x1298970", Offset = "0x1298970", VA = "0x1298970")]
	public static void View(Color newColor, float duration)
	{
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0x1298A38", Offset = "0x1298A38", VA = "0x1298A38")]
	public void OnStartFade(Color newColor, float duration, bool fadeOverlay)
	{
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0x1298AA0", Offset = "0x1298AA0", VA = "0x1298AA0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0x1298C68", Offset = "0x1298C68", VA = "0x1298C68")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0x1298D2C", Offset = "0x1298D2C", VA = "0x1298D2C")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0x1299054", Offset = "0x1299054", VA = "0x1299054")]
	public SteamVR_Fade()
	{
	}
}
[Token(Token = "0x200002C")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xCA7F0C", Offset = "0xCA7F0C")]
public class SteamVR_Frustum : MonoBehaviour
{
	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SteamVR_TrackedObject.EIndex index;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fovLeft;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fovRight;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float fovTop;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float fovBottom;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float nearZ;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float farZ;

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0x1299164", Offset = "0x1299164", VA = "0x1299164")]
	public void UpdateModel()
	{
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0x129994C", Offset = "0x129994C", VA = "0x129994C")]
	private void OnDeviceConnected(int i, bool connected)
	{
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0x1299B08", Offset = "0x1299B08", VA = "0x1299B08")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0x1299BF0", Offset = "0x1299BF0", VA = "0x1299BF0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0x1299CD8", Offset = "0x1299CD8", VA = "0x1299CD8")]
	public SteamVR_Frustum()
	{
	}
}
[Token(Token = "0x200002D")]
[ExecuteInEditMode]
public class SteamVR_GameView : MonoBehaviour
{
	[Token(Token = "0x60003F9")]
	[Address(RVA = "0x1299CF8", Offset = "0x1299CF8", VA = "0x1299CF8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0x1299D94", Offset = "0x1299D94", VA = "0x1299D94")]
	public SteamVR_GameView()
	{
	}
}
[Token(Token = "0x200002E")]
public class SteamVR_IK : MonoBehaviour
{
	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform start;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform joint;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform end;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform poleVector;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform upVector;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float blendPct;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public Transform startXform;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public Transform jointXform;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public Transform endXform;

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0x1299D9C", Offset = "0x1299D9C", VA = "0x1299D9C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0x129A784", Offset = "0x129A784", VA = "0x129A784")]
	public static bool Solve(Vector3 start, Vector3 end, Vector3 poleVector, float jointDist, float targetDist, ref Vector3 result, out Vector3 forward, out Vector3 up)
	{
		return default(bool);
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0x129AC9C", Offset = "0x129AC9C", VA = "0x129AC9C")]
	public SteamVR_IK()
	{
	}
}
[Token(Token = "0x200002F")]
public class SteamVR_LoadLevel : MonoBehaviour
{
	[Token(Token = "0x2000278")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCAEFE8", Offset = "0xCAEFE8")]
	private sealed class <LoadLevel>d__45 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SteamVR_LoadLevel <>4__this;

		[Token(Token = "0x4000CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CVROverlay <overlay>5__2;

		[Token(Token = "0x4000D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <fadedForeground>5__3;

		[Token(Token = "0x4000D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CVRCompositor <compositor>5__4;

		[Token(Token = "0x4000D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private SteamVR_Controller.Device <hmd>5__5;

		[Token(Token = "0x1700014A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F77")]
			[Address(RVA = "0x129CFBC", Offset = "0x129CFBC", VA = "0x129CFBC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F79")]
			[Address(RVA = "0x129D024", Offset = "0x129D024", VA = "0x129D024", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F74")]
		[Address(RVA = "0x129BAD0", Offset = "0x129BAD0", VA = "0x129BAD0")]
		[DebuggerHidden]
		public <LoadLevel>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x6000F75")]
		[Address(RVA = "0x129BC4C", Offset = "0x129BC4C", VA = "0x129BC4C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F76")]
		[Address(RVA = "0x129BC50", Offset = "0x129BC50", VA = "0x129BC50", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F78")]
		[Address(RVA = "0x129CFC4", Offset = "0x129CFC4", VA = "0x129CFC4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SteamVR_LoadLevel _active;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string levelName;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string internalProcessPath;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string internalProcessArgs;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool loadAdditive;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool loadAsync;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture loadingScreen;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture progressBarEmpty;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture progressBarFull;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float loadingScreenWidthInMeters;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float progressBarWidthInMeters;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float loadingScreenDistance;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform loadingScreenTransform;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform progressBarTransform;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Texture front;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Texture back;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Texture left;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Texture right;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Texture top;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Texture bottom;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Color backgroundColor;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public bool showGrid;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float fadeOutTime;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float fadeInTime;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float postLoadSettleTime;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float loadingScreenFadeInTime;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float loadingScreenFadeOutTime;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float fadeRate;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float alpha;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private AsyncOperation async;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private RenderTexture renderTexture;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private ulong loadingScreenOverlayHandle;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private ulong progressBarOverlayHandle;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public bool autoTriggerOnEnable;

	[Token(Token = "0x1700005D")]
	public static bool loading
	{
		[Token(Token = "0x60003FE")]
		[Address(RVA = "0x129ACAC", Offset = "0x129ACAC", VA = "0x129ACAC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700005E")]
	public static float progress
	{
		[Token(Token = "0x60003FF")]
		[Address(RVA = "0x129AD44", Offset = "0x129AD44", VA = "0x129AD44")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700005F")]
	public static Texture progressTexture
	{
		[Token(Token = "0x6000400")]
		[Address(RVA = "0x129AE58", Offset = "0x129AE58", VA = "0x129AE58")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0x129AF30", Offset = "0x129AF30", VA = "0x129AF30")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0x129AF40", Offset = "0x129AF40", VA = "0x129AF40")]
	public void Trigger()
	{
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0x129B054", Offset = "0x129B054", VA = "0x129B054")]
	public static void Begin(string levelName, bool showGrid = false, float fadeOutTime = 0.5f, float r = 0f, float g = 0f, float b = 0f, float a = 1f)
	{
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0x129B168", Offset = "0x129B168", VA = "0x129B168")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0x129B968", Offset = "0x129B968", VA = "0x129B968")]
	private void Update()
	{
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0x129AFD8", Offset = "0x129AFD8", VA = "0x129AFD8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCB3304", Offset = "0xCB3304")]
	private IEnumerator LoadLevel()
	{
		return null;
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0x129B5C8", Offset = "0x129B5C8", VA = "0x129B5C8")]
	private ulong GetOverlayHandle(string overlayName, Transform transform, float widthInMeters = 1f)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0x129BBE4", Offset = "0x129BBE4", VA = "0x129BBE4")]
	public SteamVR_LoadLevel()
	{
	}
}
[Token(Token = "0x2000030")]
public class SteamVR_Menu : MonoBehaviour
{
	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture cursor;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture background;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture logo;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float logoHeight;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float menuOffset;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector2 scaleLimits;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float scaleRate;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SteamVR_Overlay overlay;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Camera overlayCam;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector4 uvOffset;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float distance;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB1098", Offset = "0xCB1098")]
	private float <scale>k__BackingField;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string scaleLimitX;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string scaleLimitY;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string scaleRateText;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private CursorLockMode savedCursorLockState;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool savedCursorVisible;

	[Token(Token = "0x17000060")]
	public RenderTexture texture
	{
		[Token(Token = "0x600040A")]
		[Address(RVA = "0x129D02C", Offset = "0x129D02C", VA = "0x129D02C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000061")]
	public float scale
	{
		[Token(Token = "0x600040B")]
		[Address(RVA = "0x129D0F8", Offset = "0x129D0F8", VA = "0x129D0F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB3368", Offset = "0xCB3368")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600040C")]
		[Address(RVA = "0x129D100", Offset = "0x129D100", VA = "0x129D100")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB3378", Offset = "0xCB3378")]
		private set
		{
		}
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0x129D108", Offset = "0x129D108", VA = "0x129D108")]
	private void Awake()
	{
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0x129D294", Offset = "0x129D294", VA = "0x129D294")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0x129EE7C", Offset = "0x129EE7C", VA = "0x129EE7C")]
	public void ShowMenu()
	{
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0x129ED5C", Offset = "0x129ED5C", VA = "0x129ED5C")]
	public void HideMenu()
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0x129F258", Offset = "0x129F258", VA = "0x129F258")]
	private void Update()
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0x129EC70", Offset = "0x129EC70", VA = "0x129EC70")]
	private void SetScale(float scale)
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0x129F1F0", Offset = "0x129F1F0", VA = "0x129F1F0")]
	private void SaveCursorState()
	{
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0x129F228", Offset = "0x129F228", VA = "0x129F228")]
	private void RestoreCursorState()
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0x129F428", Offset = "0x129F428", VA = "0x129F428")]
	public SteamVR_Menu()
	{
	}
}
[Token(Token = "0x2000031")]
public class SteamVR_Overlay : MonoBehaviour
{
	[Token(Token = "0x2000279")]
	public struct IntersectionResults
	{
		[Token(Token = "0x4000D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 point;

		[Token(Token = "0x4000D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 normal;

		[Token(Token = "0x4000D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2 UVs;

		[Token(Token = "0x4000D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float distance;
	}

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture texture;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool curved;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool antialias;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool highquality;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCB10A8", Offset = "0xCB10A8")]
	public float scale;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCB10E0", Offset = "0xCB10E0")]
	public float distance;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCB1118", Offset = "0xCB1118")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCB1118", Offset = "0xCB1118")]
	public float alpha;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector4 uvOffset;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector2 mouseScale;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector2 curvedRange;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public VROverlayInputMethod inputMethod;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB116C", Offset = "0xCB116C")]
	private static SteamVR_Overlay <instance>k__BackingField;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ulong handle;

	[Token(Token = "0x17000062")]
	public static SteamVR_Overlay instance
	{
		[Token(Token = "0x6000416")]
		[Address(RVA = "0x129F47C", Offset = "0x129F47C", VA = "0x129F47C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB3388", Offset = "0xCB3388")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000417")]
		[Address(RVA = "0x129F4CC", Offset = "0x129F4CC", VA = "0x129F4CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB3398", Offset = "0xCB3398")]
		private set
		{
		}
	}

	[Token(Token = "0x17000063")]
	public static string key
	{
		[Token(Token = "0x6000418")]
		[Address(RVA = "0x129BAFC", Offset = "0x129BAFC", VA = "0x129BAFC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0x129F524", Offset = "0x129F524", VA = "0x129F524")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0x129F678", Offset = "0x129F678", VA = "0x129F678")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0x129F738", Offset = "0x129F738", VA = "0x129F738")]
	public void UpdateOverlay()
	{
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0x129FB78", Offset = "0x129FB78", VA = "0x129FB78")]
	public bool PollNextEvent(ref VREvent_t pEvent)
	{
		return default(bool);
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0x129FC84", Offset = "0x129FC84", VA = "0x129FC84")]
	public bool ComputeIntersection(Vector3 source, Vector3 direction, ref IntersectionResults results)
	{
		return default(bool);
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0x129FE40", Offset = "0x129FE40", VA = "0x129FE40")]
	public SteamVR_Overlay()
	{
	}
}
[Token(Token = "0x2000032")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xCA7FAC", Offset = "0xCA7FAC")]
public class SteamVR_PlayArea : MonoBehaviour
{
	[Token(Token = "0x200027A")]
	public enum Size
	{
		[Token(Token = "0x4000D08")]
		Calibrated,
		[Token(Token = "0x4000D09")]
		_400x300,
		[Token(Token = "0x4000D0A")]
		_300x225,
		[Token(Token = "0x4000D0B")]
		_200x150
	}

	[Token(Token = "0x200027B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCAEFF8", Offset = "0xCAEFF8")]
	private sealed class <UpdateBounds>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SteamVR_PlayArea <>4__this;

		[Token(Token = "0x4000D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CVRChaperone <chaperone>5__2;

		[Token(Token = "0x1700014C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F7D")]
			[Address(RVA = "0x12A105C", Offset = "0x12A105C", VA = "0x12A105C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F7F")]
			[Address(RVA = "0x12A10C4", Offset = "0x12A10C4", VA = "0x12A10C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F7A")]
		[Address(RVA = "0x12A0EC0", Offset = "0x12A0EC0", VA = "0x12A0EC0")]
		[DebuggerHidden]
		public <UpdateBounds>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6000F7B")]
		[Address(RVA = "0x12A0F34", Offset = "0x12A0F34", VA = "0x12A0F34", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F7C")]
		[Address(RVA = "0x12A0F38", Offset = "0x12A0F38", VA = "0x12A0F38", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F7E")]
		[Address(RVA = "0x12A1064", Offset = "0x12A1064", VA = "0x12A1064", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float borderThickness;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float wireframeHeight;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool drawWireframeWhenSelectedOnly;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool drawInGame;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Size size;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color color;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public Vector3[] vertices;

	[Token(Token = "0x600041F")]
	[Address(RVA = "0x129FF08", Offset = "0x129FF08", VA = "0x129FF08")]
	public static bool GetBounds(Size size, ref HmdQuad_t pRect)
	{
		return default(bool);
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0x12A0294", Offset = "0x12A0294", VA = "0x12A0294")]
	public void BuildMesh()
	{
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0x12A0AEC", Offset = "0x12A0AEC", VA = "0x12A0AEC")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0x12A0D80", Offset = "0x12A0D80", VA = "0x12A0D80")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0x12A0AFC", Offset = "0x12A0AFC", VA = "0x12A0AFC")]
	public void DrawWireframe()
	{
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0x12A0D90", Offset = "0x12A0D90", VA = "0x12A0D90")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0x12A0E44", Offset = "0x12A0E44", VA = "0x12A0E44")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCB33A8", Offset = "0xCB33A8")]
	private IEnumerator UpdateBounds()
	{
		return null;
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0x12A0EEC", Offset = "0x12A0EEC", VA = "0x12A0EEC")]
	public SteamVR_PlayArea()
	{
	}
}
[Token(Token = "0x2000033")]
public class SteamVR_Render : MonoBehaviour
{
	[Token(Token = "0x200027C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCAF008", Offset = "0xCAF008")]
	private sealed class <RenderLoop>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SteamVR_Render <>4__this;

		[Token(Token = "0x1700014E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F83")]
			[Address(RVA = "0x12A3B54", Offset = "0x12A3B54", VA = "0x12A3B54", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F85")]
			[Address(RVA = "0x12A3BBC", Offset = "0x12A3BBC", VA = "0x12A3BBC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F80")]
		[Address(RVA = "0x12A1768", Offset = "0x12A1768", VA = "0x12A1768")]
		[DebuggerHidden]
		public <RenderLoop>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x6000F81")]
		[Address(RVA = "0x12A399C", Offset = "0x12A399C", VA = "0x12A399C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F82")]
		[Address(RVA = "0x12A39A0", Offset = "0x12A39A0", VA = "0x12A39A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F84")]
		[Address(RVA = "0x12A3B5C", Offset = "0x12A3B5C", VA = "0x12A3B5C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool pauseGameWhenDashboardIsVisible;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool lockPhysicsUpdateRateToRenderFrequency;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SteamVR_ExternalCamera externalCamera;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string externalCameraConfigPath;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ETrackingUniverseOrigin trackingSpace;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB118C", Offset = "0xCB118C")]
	private static EVREye <eye>k__BackingField;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static SteamVR_Render _instance;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool isQuitting;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SteamVR_Camera[] cameras;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TrackedDevicePose_t[] poses;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TrackedDevicePose_t[] gamePoses;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private static bool _pauseRendering;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private WaitForEndOfFrame waitForEndOfFrame;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float sceneResolutionScale;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float timeScale;

	[Token(Token = "0x17000064")]
	public static EVREye eye
	{
		[Token(Token = "0x6000427")]
		[Address(RVA = "0x12A10CC", Offset = "0x12A10CC", VA = "0x12A10CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB340C", Offset = "0xCB340C")]
		get
		{
			return default(EVREye);
		}
		[Token(Token = "0x6000428")]
		[Address(RVA = "0x12A111C", Offset = "0x12A111C", VA = "0x12A111C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB341C", Offset = "0xCB341C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000065")]
	public static SteamVR_Render instance
	{
		[Token(Token = "0x6000429")]
		[Address(RVA = "0x1293DF0", Offset = "0x1293DF0", VA = "0x1293DF0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000066")]
	public static bool pauseRendering
	{
		[Token(Token = "0x6000432")]
		[Address(RVA = "0x12A169C", Offset = "0x12A169C", VA = "0x12A169C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000433")]
		[Address(RVA = "0x129CEAC", Offset = "0x129CEAC", VA = "0x129CEAC")]
		set
		{
		}
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0x12A1170", Offset = "0x12A1170", VA = "0x12A1170")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0x12A11C4", Offset = "0x12A11C4", VA = "0x12A11C4")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0x1292704", Offset = "0x1292704", VA = "0x1292704")]
	public static void Add(SteamVR_Camera vrcam)
	{
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0x1291B5C", Offset = "0x1291B5C", VA = "0x1291B5C")]
	public static void Remove(SteamVR_Camera vrcam)
	{
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0x129BB74", Offset = "0x129BB74", VA = "0x129BB74")]
	public static SteamVR_Camera Top()
	{
		return null;
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0x12A123C", Offset = "0x12A123C", VA = "0x12A123C")]
	private void AddInternal(SteamVR_Camera vrcam)
	{
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0x12A1464", Offset = "0x12A1464", VA = "0x12A1464")]
	private void RemoveInternal(SteamVR_Camera vrcam)
	{
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0x12A1650", Offset = "0x12A1650", VA = "0x12A1650")]
	private SteamVR_Camera TopInternal()
	{
		return null;
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0x12A16EC", Offset = "0x12A16EC", VA = "0x12A16EC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCB342C", Offset = "0xCB342C")]
	private IEnumerator RenderLoop()
	{
		return null;
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0x12A1794", Offset = "0x12A1794", VA = "0x12A1794")]
	private void RenderExternalCamera()
	{
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0x12A18D0", Offset = "0x12A18D0", VA = "0x12A18D0")]
	private void OnInputFocus(bool hasFocus)
	{
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0x12A1940", Offset = "0x12A1940", VA = "0x12A1940")]
	private void OnQuit(VREvent_t vrEvent)
	{
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0x12A1948", Offset = "0x12A1948", VA = "0x12A1948")]
	private string GetScreenshotFilename(uint screenshotHandle, EVRScreenshotPropertyFilenames screenshotPropertyFilename)
	{
		return null;
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0x12A1A94", Offset = "0x12A1A94", VA = "0x12A1A94")]
	private void OnRequestScreenshot(VREvent_t vrEvent)
	{
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0x12A2DF8", Offset = "0x12A2DF8", VA = "0x12A2DF8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0x12A3078", Offset = "0x12A3078", VA = "0x12A3078")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0x12A3230", Offset = "0x12A3230", VA = "0x12A3230")]
	private void Awake()
	{
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0x12A33AC", Offset = "0x12A33AC", VA = "0x12A33AC")]
	public void UpdatePoses()
	{
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0x12A348C", Offset = "0x12A348C", VA = "0x12A348C")]
	private void OnBeforeRender()
	{
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0x12A3490", Offset = "0x12A3490", VA = "0x12A3490")]
	private void Update()
	{
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0x12A3894", Offset = "0x12A3894", VA = "0x12A3894")]
	public SteamVR_Render()
	{
	}
}
[Token(Token = "0x2000034")]
[ExecuteInEditMode]
public class SteamVR_RenderModel : MonoBehaviour
{
	[Token(Token = "0x200027D")]
	public class RenderModel
	{
		[Token(Token = "0x4000D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB2424", Offset = "0xCB2424")]
		private Mesh <mesh>k__BackingField;

		[Token(Token = "0x4000D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB2434", Offset = "0xCB2434")]
		private Material <material>k__BackingField;

		[Token(Token = "0x17000150")]
		public Mesh mesh
		{
			[Token(Token = "0x6000F87")]
			[Address(RVA = "0x12A7478", Offset = "0x12A7478", VA = "0x12A7478")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB5AF0", Offset = "0xCB5AF0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F88")]
			[Address(RVA = "0x12A7480", Offset = "0x12A7480", VA = "0x12A7480")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB5B00", Offset = "0xCB5B00")]
			private set
			{
			}
		}

		[Token(Token = "0x17000151")]
		public Material material
		{
			[Token(Token = "0x6000F89")]
			[Address(RVA = "0x12A7488", Offset = "0x12A7488", VA = "0x12A7488")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB5B10", Offset = "0xCB5B10")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F8A")]
			[Address(RVA = "0x12A7490", Offset = "0x12A7490", VA = "0x12A7490")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB5B20", Offset = "0xCB5B20")]
			private set
			{
			}
		}

		[Token(Token = "0x6000F86")]
		[Address(RVA = "0x12A620C", Offset = "0x12A620C", VA = "0x12A620C")]
		public RenderModel(Mesh mesh, Material material)
		{
		}
	}

	[Token(Token = "0x200027E")]
	public sealed class RenderModelInterfaceHolder : IDisposable
	{
		[Token(Token = "0x4000D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool needsShutdown;

		[Token(Token = "0x4000D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool failedLoadInterface;

		[Token(Token = "0x4000D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CVRRenderModels _instance;

		[Token(Token = "0x17000152")]
		public CVRRenderModels instance
		{
			[Token(Token = "0x6000F8B")]
			[Address(RVA = "0x12A4CEC", Offset = "0x12A4CEC", VA = "0x12A4CEC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F8C")]
		[Address(RVA = "0x12A7498", Offset = "0x12A7498", VA = "0x12A7498", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6000F8D")]
		[Address(RVA = "0x12A4628", Offset = "0x12A4628", VA = "0x12A4628")]
		public RenderModelInterfaceHolder()
		{
		}
	}

	[Token(Token = "0x200027F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCAF018", Offset = "0xCAF018")]
	private sealed class <SetModelAsync>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string renderModelName;

		[Token(Token = "0x4000D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SteamVR_RenderModel <>4__this;

		[Token(Token = "0x4000D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RenderModelInterfaceHolder <holder>5__2;

		[Token(Token = "0x4000D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CVRRenderModels <renderModels>5__3;

		[Token(Token = "0x4000D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string[] <renderModelNames>5__4;

		[Token(Token = "0x17000153")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F92")]
			[Address(RVA = "0x12A7408", Offset = "0x12A7408", VA = "0x12A7408", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000154")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F94")]
			[Address(RVA = "0x12A7470", Offset = "0x12A7470", VA = "0x12A7470", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F8E")]
		[Address(RVA = "0x12A3FF8", Offset = "0x12A3FF8", VA = "0x12A3FF8")]
		[DebuggerHidden]
		public <SetModelAsync>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0x12A69D0", Offset = "0x12A69D0", VA = "0x12A69D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F90")]
		[Address(RVA = "0x12A6AAC", Offset = "0x12A6AAC", VA = "0x12A6AAC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F91")]
		[Address(RVA = "0x12A69EC", Offset = "0x12A69EC", VA = "0x12A69EC")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000F93")]
		[Address(RVA = "0x12A7410", Offset = "0x12A7410", VA = "0x12A7410", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000280")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCAF028", Offset = "0xCAF028")]
	private sealed class <FreeRenderModel>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IntPtr pRenderModel;

		[Token(Token = "0x17000155")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F98")]
			[Address(RVA = "0x12A6960", Offset = "0x12A6960", VA = "0x12A6960", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000156")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F9A")]
			[Address(RVA = "0x12A69C8", Offset = "0x12A69C8", VA = "0x12A69C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F95")]
		[Address(RVA = "0x12A625C", Offset = "0x12A625C", VA = "0x12A625C")]
		[DebuggerHidden]
		public <FreeRenderModel>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000F96")]
		[Address(RVA = "0x12A67C0", Offset = "0x12A67C0", VA = "0x12A67C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F97")]
		[Address(RVA = "0x12A67C4", Offset = "0x12A67C4", VA = "0x12A67C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F99")]
		[Address(RVA = "0x12A6968", Offset = "0x12A6968", VA = "0x12A6968", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SteamVR_TrackedObject.EIndex index;

	[Token(Token = "0x4000169")]
	public const string modelOverrideWarning = "Model override is really only meant to be used in the scene view for lining things up; using it at runtime is discouraged.  Use tracked device index instead to ensure the correct model is displayed for all users.";

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCB119C", Offset = "0xCB119C")]
	public string modelOverride;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCB11D4", Offset = "0xCB11D4")]
	public Shader shader;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCB120C", Offset = "0xCB120C")]
	public bool verbose;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCB1244", Offset = "0xCB1244")]
	public bool createComponents;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCB127C", Offset = "0xCB127C")]
	public bool updateDynamically;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public RenderModel_ControllerMode_State_t controllerModeState;

	[Token(Token = "0x4000170")]
	public const string k_localTransformName = "attach";

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB12B4", Offset = "0xCB12B4")]
	private string <renderModelName>k__BackingField;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Hashtable models;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Hashtable materials;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private SteamVR_Events.Action deviceConnectedAction;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SteamVR_Events.Action hideRenderModelsAction;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SteamVR_Events.Action modelSkinSettingsHaveChangedAction;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Dictionary<int, string> nameCache;

	[Token(Token = "0x17000067")]
	public string renderModelName
	{
		[Token(Token = "0x6000441")]
		[Address(RVA = "0x12A3BC4", Offset = "0x12A3BC4", VA = "0x12A3BC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB3490", Offset = "0xCB3490")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000442")]
		[Address(RVA = "0x12A3BCC", Offset = "0x12A3BCC", VA = "0x12A3BCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB34A0", Offset = "0xCB34A0")]
		private set
		{
		}
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0x12A3BD4", Offset = "0x12A3BD4", VA = "0x12A3BD4")]
	private void OnModelSkinSettingsHaveChanged(VREvent_t vrEvent)
	{
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0x12A3E14", Offset = "0x12A3E14", VA = "0x12A3E14")]
	private void OnHideRenderModels(bool hidden)
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0x12A3F48", Offset = "0x12A3F48", VA = "0x12A3F48")]
	private void OnDeviceConnected(int i, bool connected)
	{
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0x12A3C50", Offset = "0x12A3C50", VA = "0x12A3C50")]
	public void UpdateModel()
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0x12A3F60", Offset = "0x12A3F60", VA = "0x12A3F60")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCB34B0", Offset = "0xCB34B0")]
	private IEnumerator SetModelAsync(string renderModelName)
	{
		return null;
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0x12A4024", Offset = "0x12A4024", VA = "0x12A4024")]
	private bool SetModel(string renderModelName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0x12A52B4", Offset = "0x12A52B4", VA = "0x12A52B4")]
	private RenderModel LoadRenderModel(CVRRenderModels renderModels, string renderModelName, string baseName)
	{
		return null;
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0x12A619C", Offset = "0x12A619C", VA = "0x12A619C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCB3514", Offset = "0xCB3514")]
	private IEnumerator FreeRenderModel(IntPtr pRenderModel)
	{
		return null;
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0x12A6288", Offset = "0x12A6288", VA = "0x12A6288")]
	public Transform FindComponent(string componentName)
	{
		return null;
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0x12A44EC", Offset = "0x12A44EC", VA = "0x12A44EC")]
	private void StripMesh(GameObject go)
	{
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0x12A4630", Offset = "0x12A4630", VA = "0x12A4630")]
	private bool LoadComponents(RenderModelInterfaceHolder holder, string renderModelName)
	{
		return default(bool);
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0x12A6324", Offset = "0x12A6324", VA = "0x12A6324")]
	private SteamVR_RenderModel()
	{
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0x12A6484", Offset = "0x12A6484", VA = "0x12A6484")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0x12A65AC", Offset = "0x12A65AC", VA = "0x12A65AC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0x12A6610", Offset = "0x12A6610", VA = "0x12A6610")]
	private void Update()
	{
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0x12A4E60", Offset = "0x12A4E60", VA = "0x12A4E60")]
	public void UpdateComponents(CVRRenderModels renderModels)
	{
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0x12A6694", Offset = "0x12A6694", VA = "0x12A6694")]
	public void SetDeviceIndex(int index)
	{
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0x12A5D98", Offset = "0x12A5D98", VA = "0x12A5D98")]
	private static void Sleep()
	{
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0x12A5DA4", Offset = "0x12A5DA4", VA = "0x12A5DA4")]
	private RenderModel_t MarshalRenderModel(IntPtr pRenderModel)
	{
		return default(RenderModel_t);
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0x12A5FAC", Offset = "0x12A5FAC", VA = "0x12A5FAC")]
	private RenderModel_TextureMap_t MarshalRenderModel_TextureMap(IntPtr pRenderModel)
	{
		return default(RenderModel_TextureMap_t);
	}
}
[Token(Token = "0x2000035")]
public class SteamVR_Skybox : MonoBehaviour
{
	[Token(Token = "0x2000281")]
	public enum CellSize
	{
		[Token(Token = "0x4000D23")]
		x1024,
		[Token(Token = "0x4000D24")]
		x64,
		[Token(Token = "0x4000D25")]
		x32,
		[Token(Token = "0x4000D26")]
		x16,
		[Token(Token = "0x4000D27")]
		x8
	}

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture front;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture back;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture left;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture right;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture top;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture bottom;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public CellSize StereoCellSize;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float StereoIpdMm;

	[Token(Token = "0x6000458")]
	[Address(RVA = "0x12A7510", Offset = "0x12A7510", VA = "0x12A7510")]
	public void SetTextureByIndex(int i, Texture t)
	{
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0x12A757C", Offset = "0x12A757C", VA = "0x12A757C")]
	public Texture GetTextureByIndex(int i)
	{
		return null;
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0x129CACC", Offset = "0x129CACC", VA = "0x129CACC")]
	public static void SetOverride([Optional] Texture front, [Optional] Texture back, [Optional] Texture left, [Optional] Texture right, [Optional] Texture top, [Optional] Texture bottom)
	{
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0x129CF44", Offset = "0x129CF44", VA = "0x129CF44")]
	public static void ClearOverride()
	{
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0x12A75D8", Offset = "0x12A75D8", VA = "0x12A75D8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0x12A75EC", Offset = "0x12A75EC", VA = "0x12A75EC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0x12A75F0", Offset = "0x12A75F0", VA = "0x12A75F0")]
	public SteamVR_Skybox()
	{
	}
}
[Token(Token = "0x2000036")]
[ExecuteInEditMode]
public class SteamVR_SphericalProjection : MonoBehaviour
{
	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Material material;

	[Token(Token = "0x600045F")]
	[Address(RVA = "0x12A7604", Offset = "0x12A7604", VA = "0x12A7604")]
	public void Set(Vector3 N, float phi0, float phi1, float theta0, float theta1, Vector3 uAxis, Vector3 uOrigin, float uScale, Vector3 vAxis, Vector3 vOrigin, float vScale)
	{
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0x12A79AC", Offset = "0x12A79AC", VA = "0x12A79AC")]
	private void OnRenderImage(RenderTexture src, RenderTexture dest)
	{
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0x12A7A3C", Offset = "0x12A7A3C", VA = "0x12A7A3C")]
	public SteamVR_SphericalProjection()
	{
	}
}
[Token(Token = "0x2000037")]
[ExecuteInEditMode]
public class SteamVR_Stats : MonoBehaviour
{
	[Token(Token = "0x6000462")]
	[Address(RVA = "0x12A7A44", Offset = "0x12A7A44", VA = "0x12A7A44")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0x12A7AE0", Offset = "0x12A7AE0", VA = "0x12A7AE0")]
	public SteamVR_Stats()
	{
	}
}
[Token(Token = "0x2000038")]
public class SteamVR_TestController : MonoBehaviour
{
	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<int> controllerIndices;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private EVRButtonId[] buttonIds;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private EVRButtonId[] axisIds;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform point;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform pointer;

	[Token(Token = "0x6000464")]
	[Address(RVA = "0x12A7AE8", Offset = "0x12A7AE8", VA = "0x12A7AE8")]
	private void OnDeviceConnected(int index, bool connected)
	{
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0x12A80EC", Offset = "0x12A80EC", VA = "0x12A80EC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0x12A81B0", Offset = "0x12A81B0", VA = "0x12A81B0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0x12A7C9C", Offset = "0x12A7C9C", VA = "0x12A7C9C")]
	private void PrintControllerStatus(int index)
	{
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0x12A8274", Offset = "0x12A8274", VA = "0x12A8274")]
	private void Update()
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0x12A8BC4", Offset = "0x12A8BC4", VA = "0x12A8BC4")]
	public SteamVR_TestController()
	{
	}
}
[Token(Token = "0x2000039")]
public class SteamVR_TrackedCamera
{
	[Token(Token = "0x2000282")]
	public class VideoStreamTexture
	{
		[Token(Token = "0x4000D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB2444", Offset = "0xCB2444")]
		private bool <undistorted>k__BackingField;

		[Token(Token = "0x4000D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB2454", Offset = "0xCB2454")]
		private VRTextureBounds_t <frameBounds>k__BackingField;

		[Token(Token = "0x4000D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Texture2D _texture;

		[Token(Token = "0x4000D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int prevFrameCount;

		[Token(Token = "0x4000D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private uint glTextureId;

		[Token(Token = "0x4000D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private VideoStream videostream;

		[Token(Token = "0x4000D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CameraVideoStreamFrameHeader_t header;

		[Token(Token = "0x17000157")]
		public bool undistorted
		{
			[Token(Token = "0x6000F9C")]
			[Address(RVA = "0x12A934C", Offset = "0x12A934C", VA = "0x12A934C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB5BD0", Offset = "0xCB5BD0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F9D")]
			[Address(RVA = "0x12A9354", Offset = "0x12A9354", VA = "0x12A9354")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB5BE0", Offset = "0xCB5BE0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000158")]
		public uint deviceIndex
		{
			[Token(Token = "0x6000F9E")]
			[Address(RVA = "0x12A9360", Offset = "0x12A9360", VA = "0x12A9360")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x17000159")]
		public bool hasCamera
		{
			[Token(Token = "0x6000F9F")]
			[Address(RVA = "0x12A937C", Offset = "0x12A937C", VA = "0x12A937C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700015A")]
		public bool hasTracking
		{
			[Token(Token = "0x6000FA0")]
			[Address(RVA = "0x12A9398", Offset = "0x12A9398", VA = "0x12A9398")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700015B")]
		public uint frameId
		{
			[Token(Token = "0x6000FA1")]
			[Address(RVA = "0x12A9734", Offset = "0x12A9734", VA = "0x12A9734")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x1700015C")]
		public VRTextureBounds_t frameBounds
		{
			[Token(Token = "0x6000FA2")]
			[Address(RVA = "0x12A9758", Offset = "0x12A9758", VA = "0x12A9758")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB5BF0", Offset = "0xCB5BF0")]
			get
			{
				return default(VRTextureBounds_t);
			}
			[Token(Token = "0x6000FA3")]
			[Address(RVA = "0x12A9764", Offset = "0x12A9764", VA = "0x12A9764")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB5C00", Offset = "0xCB5C00")]
			private set
			{
			}
		}

		[Token(Token = "0x1700015D")]
		public EVRTrackedCameraFrameType frameType
		{
			[Token(Token = "0x6000FA4")]
			[Address(RVA = "0x12A9770", Offset = "0x12A9770", VA = "0x12A9770")]
			get
			{
				return default(EVRTrackedCameraFrameType);
			}
		}

		[Token(Token = "0x1700015E")]
		public Texture2D texture
		{
			[Token(Token = "0x6000FA5")]
			[Address(RVA = "0x12A9778", Offset = "0x12A9778", VA = "0x12A9778")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015F")]
		public SteamVR_Utils.RigidTransform transform
		{
			[Token(Token = "0x6000FA6")]
			[Address(RVA = "0x12A979C", Offset = "0x12A979C", VA = "0x12A979C")]
			get
			{
				return default(SteamVR_Utils.RigidTransform);
			}
		}

		[Token(Token = "0x17000160")]
		public Vector3 velocity
		{
			[Token(Token = "0x6000FA7")]
			[Address(RVA = "0x12A97F8", Offset = "0x12A97F8", VA = "0x12A97F8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000161")]
		public Vector3 angularVelocity
		{
			[Token(Token = "0x6000FA8")]
			[Address(RVA = "0x12A9848", Offset = "0x12A9848", VA = "0x12A9848")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000F9B")]
		[Address(RVA = "0x12A8E2C", Offset = "0x12A8E2C", VA = "0x12A8E2C")]
		public VideoStreamTexture(uint deviceIndex, bool undistorted)
		{
		}

		[Token(Token = "0x6000FA9")]
		[Address(RVA = "0x12A989C", Offset = "0x12A989C", VA = "0x12A989C")]
		public TrackedDevicePose_t GetPose()
		{
			return default(TrackedDevicePose_t);
		}

		[Token(Token = "0x6000FAA")]
		[Address(RVA = "0x12A98CC", Offset = "0x12A98CC", VA = "0x12A98CC")]
		public ulong Acquire()
		{
			return default(ulong);
		}

		[Token(Token = "0x6000FAB")]
		[Address(RVA = "0x12A98E4", Offset = "0x12A98E4", VA = "0x12A98E4")]
		public ulong Release()
		{
			return default(ulong);
		}

		[Token(Token = "0x6000FAC")]
		[Address(RVA = "0x12A93BC", Offset = "0x12A93BC", VA = "0x12A93BC")]
		private void Update()
		{
		}
	}

	[Token(Token = "0x2000283")]
	private class VideoStream
	{
		[Token(Token = "0x4000D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB2464", Offset = "0xCB2464")]
		private uint <deviceIndex>k__BackingField;

		[Token(Token = "0x4000D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ulong _handle;

		[Token(Token = "0x4000D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _hasCamera;

		[Token(Token = "0x4000D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ulong refCount;

		[Token(Token = "0x17000162")]
		public uint deviceIndex
		{
			[Token(Token = "0x6000FAE")]
			[Address(RVA = "0x12A91E8", Offset = "0x12A91E8", VA = "0x12A91E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB5C10", Offset = "0xCB5C10")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6000FAF")]
			[Address(RVA = "0x12A91F0", Offset = "0x12A91F0", VA = "0x12A91F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB5C20", Offset = "0xCB5C20")]
			private set
			{
			}
		}

		[Token(Token = "0x17000163")]
		public ulong handle
		{
			[Token(Token = "0x6000FB0")]
			[Address(RVA = "0x12A91F8", Offset = "0x12A91F8", VA = "0x12A91F8")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000164")]
		public bool hasCamera
		{
			[Token(Token = "0x6000FB1")]
			[Address(RVA = "0x12A9200", Offset = "0x12A9200", VA = "0x12A9200")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000FAD")]
		[Address(RVA = "0x12A913C", Offset = "0x12A913C", VA = "0x12A913C")]
		public VideoStream(uint deviceIndex)
		{
		}

		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0x12A9208", Offset = "0x12A9208", VA = "0x12A9208")]
		public ulong Acquire()
		{
			return default(ulong);
		}

		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0x12A92A8", Offset = "0x12A92A8", VA = "0x12A92A8")]
		public ulong Release()
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static VideoStreamTexture[] distorted;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static VideoStreamTexture[] undistorted;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static VideoStream[] videostreams;

	[Token(Token = "0x600046A")]
	[Address(RVA = "0x12A8CD8", Offset = "0x12A8CD8", VA = "0x12A8CD8")]
	public static VideoStreamTexture Distorted(int deviceIndex = 0)
	{
		return null;
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0x12A8E84", Offset = "0x12A8E84", VA = "0x12A8E84")]
	public static VideoStreamTexture Undistorted(int deviceIndex = 0)
	{
		return null;
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0x12A8FD8", Offset = "0x12A8FD8", VA = "0x12A8FD8")]
	public static VideoStreamTexture Source(bool undistorted, int deviceIndex = 0)
	{
		return null;
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0x12A8FEC", Offset = "0x12A8FEC", VA = "0x12A8FEC")]
	private static VideoStream Stream(uint deviceIndex)
	{
		return null;
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0x12A91E0", Offset = "0x12A91E0", VA = "0x12A91E0")]
	public SteamVR_TrackedCamera()
	{
	}
}
[Token(Token = "0x200003A")]
public class SteamVR_TrackedObject : MonoBehaviour
{
	[Token(Token = "0x2000284")]
	public enum EIndex
	{
		[Token(Token = "0x4000D34")]
		None = -1,
		[Token(Token = "0x4000D35")]
		Hmd,
		[Token(Token = "0x4000D36")]
		Device1,
		[Token(Token = "0x4000D37")]
		Device2,
		[Token(Token = "0x4000D38")]
		Device3,
		[Token(Token = "0x4000D39")]
		Device4,
		[Token(Token = "0x4000D3A")]
		Device5,
		[Token(Token = "0x4000D3B")]
		Device6,
		[Token(Token = "0x4000D3C")]
		Device7,
		[Token(Token = "0x4000D3D")]
		Device8,
		[Token(Token = "0x4000D3E")]
		Device9,
		[Token(Token = "0x4000D3F")]
		Device10,
		[Token(Token = "0x4000D40")]
		Device11,
		[Token(Token = "0x4000D41")]
		Device12,
		[Token(Token = "0x4000D42")]
		Device13,
		[Token(Token = "0x4000D43")]
		Device14,
		[Token(Token = "0x4000D44")]
		Device15
	}

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EIndex index;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCB12C4", Offset = "0xCB12C4")]
	public Transform origin;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB12FC", Offset = "0xCB12FC")]
	private bool <isValid>k__BackingField;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SteamVR_Events.Action newPosesAction;

	[Token(Token = "0x17000068")]
	public bool isValid
	{
		[Token(Token = "0x600046F")]
		[Address(RVA = "0x12A9994", Offset = "0x12A9994", VA = "0x12A9994")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB3578", Offset = "0xCB3578")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000470")]
		[Address(RVA = "0x12A999C", Offset = "0x12A999C", VA = "0x12A999C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB3588", Offset = "0xCB3588")]
		private set
		{
		}
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0x12A99A8", Offset = "0x12A99A8", VA = "0x12A99A8")]
	private void OnNewPoses(TrackedDevicePose_t[] poses)
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0x12A9C08", Offset = "0x12A9C08", VA = "0x12A9C08")]
	private SteamVR_TrackedObject()
	{
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0x12A9CBC", Offset = "0x12A9CBC", VA = "0x12A9CBC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0x12A9D6C", Offset = "0x12A9D6C", VA = "0x12A9D6C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0x12A9DA8", Offset = "0x12A9DA8", VA = "0x12A9DA8")]
	public void SetDeviceIndex(int index)
	{
	}
}
[Token(Token = "0x200003B")]
[ExecuteInEditMode]
public class SteamVR_UpdatePoses : MonoBehaviour
{
	[Token(Token = "0x6000476")]
	[Address(RVA = "0x12A9E90", Offset = "0x12A9E90", VA = "0x12A9E90")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0x12A9F2C", Offset = "0x12A9F2C", VA = "0x12A9F2C")]
	public SteamVR_UpdatePoses()
	{
	}
}
[Token(Token = "0x200003C")]
public static class SteamVR_Utils
{
	[Serializable]
	[Token(Token = "0x2000285")]
	public struct RigidTransform
	{
		[Token(Token = "0x4000D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 pos;

		[Token(Token = "0x4000D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion rot;

		[Token(Token = "0x17000165")]
		public static RigidTransform identity
		{
			[Token(Token = "0x6000FB4")]
			[Address(RVA = "0x124E298", Offset = "0x124E298", VA = "0x124E298")]
			get
			{
				return default(RigidTransform);
			}
		}

		[Token(Token = "0x6000FB5")]
		[Address(RVA = "0x124E368", Offset = "0x124E368", VA = "0x124E368")]
		public static RigidTransform FromLocal(Transform t)
		{
			return default(RigidTransform);
		}

		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0xDDB550", Offset = "0xDDB550", VA = "0xDDB550")]
		public RigidTransform(Vector3 pos, Quaternion rot)
		{
		}

		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0xDDB564", Offset = "0xDDB564", VA = "0xDDB564")]
		public RigidTransform(Transform t)
		{
		}

		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0xDDB56C", Offset = "0xDDB56C", VA = "0xDDB56C")]
		public RigidTransform(Transform from, Transform to)
		{
		}

		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0xDDB574", Offset = "0xDDB574", VA = "0xDDB574")]
		public RigidTransform(HmdMatrix34_t pose)
		{
		}

		[Token(Token = "0x6000FBA")]
		[Address(RVA = "0xDDB5A8", Offset = "0xDDB5A8", VA = "0xDDB5A8")]
		public RigidTransform(HmdMatrix44_t pose)
		{
		}

		[Token(Token = "0x6000FBB")]
		[Address(RVA = "0xDDB5DC", Offset = "0xDDB5DC", VA = "0xDDB5DC")]
		public HmdMatrix44_t ToHmdMatrix44()
		{
			return default(HmdMatrix44_t);
		}

		[Token(Token = "0x6000FBC")]
		[Address(RVA = "0xDDB5E4", Offset = "0xDDB5E4", VA = "0xDDB5E4")]
		public HmdMatrix34_t ToHmdMatrix34()
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x6000FBD")]
		[Address(RVA = "0xDDB5EC", Offset = "0xDDB5EC", VA = "0xDDB5EC", Slot = "0")]
		public override bool Equals(object o)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FBE")]
		[Address(RVA = "0xDDB5F4", Offset = "0xDDB5F4", VA = "0xDDB5F4", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000FBF")]
		[Address(RVA = "0x124F178", Offset = "0x124F178", VA = "0x124F178")]
		public static bool operator ==(RigidTransform a, RigidTransform b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FC0")]
		[Address(RVA = "0x124F2B0", Offset = "0x124F2B0", VA = "0x124F2B0")]
		public static bool operator !=(RigidTransform a, RigidTransform b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FC1")]
		[Address(RVA = "0x124F3E8", Offset = "0x124F3E8", VA = "0x124F3E8")]
		public static RigidTransform operator *(RigidTransform a, RigidTransform b)
		{
			return default(RigidTransform);
		}

		[Token(Token = "0x6000FC2")]
		[Address(RVA = "0xDDB630", Offset = "0xDDB630", VA = "0xDDB630")]
		public void Inverse()
		{
		}

		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0xDDB638", Offset = "0xDDB638", VA = "0xDDB638")]
		public RigidTransform GetInverse()
		{
			return default(RigidTransform);
		}

		[Token(Token = "0x6000FC4")]
		[Address(RVA = "0xDDB640", Offset = "0xDDB640", VA = "0xDDB640")]
		public void Multiply(RigidTransform a, RigidTransform b)
		{
		}

		[Token(Token = "0x6000FC5")]
		[Address(RVA = "0xDDB688", Offset = "0xDDB688", VA = "0xDDB688")]
		public Vector3 InverseTransformPoint(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000FC6")]
		[Address(RVA = "0xDDB690", Offset = "0xDDB690", VA = "0xDDB690")]
		public Vector3 TransformPoint(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000FC7")]
		[Address(RVA = "0x124FA0C", Offset = "0x124FA0C", VA = "0x124FA0C")]
		public static Vector3 operator *(RigidTransform t, Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000FC8")]
		[Address(RVA = "0x124FA10", Offset = "0x124FA10", VA = "0x124FA10")]
		public static RigidTransform Interpolate(RigidTransform a, RigidTransform b, float t)
		{
			return default(RigidTransform);
		}

		[Token(Token = "0x6000FC9")]
		[Address(RVA = "0xDDB698", Offset = "0xDDB698", VA = "0xDDB698")]
		public void Interpolate(RigidTransform to, float t)
		{
		}
	}

	[Token(Token = "0x2000286")]
	public delegate object SystemFn(CVRSystem system, params object[] args);

	[Token(Token = "0x6000478")]
	[Address(RVA = "0x12A9F34", Offset = "0x12A9F34", VA = "0x12A9F34")]
	public static Quaternion Slerp(Quaternion A, Quaternion B, float t)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0x12AA0FC", Offset = "0x12AA0FC", VA = "0x12AA0FC")]
	public static Vector3 Lerp(Vector3 A, Vector3 B, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0x12AA154", Offset = "0x12AA154", VA = "0x12AA154")]
	public static float Lerp(float A, float B, float t)
	{
		return default(float);
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0x12AA164", Offset = "0x12AA164", VA = "0x12AA164")]
	public static double Lerp(double A, double B, double t)
	{
		return default(double);
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0x12AA174", Offset = "0x12AA174", VA = "0x12AA174")]
	public static float InverseLerp(Vector3 A, Vector3 B, Vector3 result)
	{
		return default(float);
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0x12AA278", Offset = "0x12AA278", VA = "0x12AA278")]
	public static float InverseLerp(float A, float B, float result)
	{
		return default(float);
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0x12AA288", Offset = "0x12AA288", VA = "0x12AA288")]
	public static double InverseLerp(double A, double B, double result)
	{
		return default(double);
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0x12AA298", Offset = "0x12AA298", VA = "0x12AA298")]
	public static float Saturate(float A)
	{
		return default(float);
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0x12AA2B4", Offset = "0x12AA2B4", VA = "0x12AA2B4")]
	public static Vector2 Saturate(Vector2 A)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0x12AA300", Offset = "0x12AA300", VA = "0x12AA300")]
	public static float Abs(float A)
	{
		return default(float);
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0x12AA310", Offset = "0x12AA310", VA = "0x12AA310")]
	public static Vector2 Abs(Vector2 A)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0x12AA354", Offset = "0x12AA354", VA = "0x12AA354")]
	private static float _copysign(float sizeval, float signval)
	{
		return default(float);
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0x12AA410", Offset = "0x12AA410", VA = "0x12AA410")]
	public static Quaternion GetRotation(this Matrix4x4 matrix)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0x12AA5DC", Offset = "0x12AA5DC", VA = "0x12AA5DC")]
	public static Vector3 GetPosition(this Matrix4x4 matrix)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0x12AA618", Offset = "0x12AA618", VA = "0x12AA618")]
	public static Vector3 GetScale(this Matrix4x4 m)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0x12AA750", Offset = "0x12AA750", VA = "0x12AA750")]
	public static object CallSystemFn(SystemFn fn, params object[] args)
	{
		return null;
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0x12A1C70", Offset = "0x12A1C70", VA = "0x12A1C70")]
	public static void TakeStereoScreenshot(uint screenshotHandle, GameObject target, int cellSize, float ipd, ref string previewFilename, ref string VRFilename)
	{
	}
}
[Token(Token = "0x200003D")]
public static class MECExtensionMethods
{
	[Token(Token = "0x2000287")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCAF038", Offset = "0xCAF038")]
	private sealed class <CancelWith>d__0 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4000D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IEnumerator<float> coroutine;

		[Token(Token = "0x4000D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject gameObject;

		[Token(Token = "0x17000166")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000FD1")]
			[Address(RVA = "0x16CFFD0", Offset = "0x16CFFD0", VA = "0x16CFFD0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000167")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FD3")]
			[Address(RVA = "0x16D0038", Offset = "0x16D0038", VA = "0x16D0038", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FCE")]
		[Address(RVA = "0x16CFBB4", Offset = "0x16CFBB4", VA = "0x16CFBB4")]
		[DebuggerHidden]
		public <CancelWith>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x6000FCF")]
		[Address(RVA = "0x16CFDAC", Offset = "0x16CFDAC", VA = "0x16CFDAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FD0")]
		[Address(RVA = "0x16CFDB0", Offset = "0x16CFDB0", VA = "0x16CFDB0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FD2")]
		[Address(RVA = "0x16CFFD8", Offset = "0x16CFFD8", VA = "0x16CFFD8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000288")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCAF048", Offset = "0xCAF048")]
	private sealed class <CancelWith>d__1 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4000D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IEnumerator<float> coroutine;

		[Token(Token = "0x4000D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject gameObject1;

		[Token(Token = "0x4000D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject gameObject2;

		[Token(Token = "0x17000168")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000FD7")]
			[Address(RVA = "0x16D0300", Offset = "0x16D0300", VA = "0x16D0300", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000169")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FD9")]
			[Address(RVA = "0x16D0368", Offset = "0x16D0368", VA = "0x16D0368", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FD4")]
		[Address(RVA = "0x16CFC8C", Offset = "0x16CFC8C", VA = "0x16CFC8C")]
		[DebuggerHidden]
		public <CancelWith>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6000FD5")]
		[Address(RVA = "0x16D009C", Offset = "0x16D009C", VA = "0x16D009C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FD6")]
		[Address(RVA = "0x16D00A0", Offset = "0x16D00A0", VA = "0x16D00A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FD8")]
		[Address(RVA = "0x16D0308", Offset = "0x16D0308", VA = "0x16D0308", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000289")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCAF058", Offset = "0xCAF058")]
	private sealed class <CancelWith>d__2 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4000D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IEnumerator<float> coroutine;

		[Token(Token = "0x4000D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject gameObject1;

		[Token(Token = "0x4000D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject gameObject2;

		[Token(Token = "0x4000D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject gameObject3;

		[Token(Token = "0x1700016A")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000FDD")]
			[Address(RVA = "0x16D0670", Offset = "0x16D0670", VA = "0x16D0670", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700016B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FDF")]
			[Address(RVA = "0x16D06D8", Offset = "0x16D06D8", VA = "0x16D06D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FDA")]
		[Address(RVA = "0x16CFD80", Offset = "0x16CFD80", VA = "0x16CFD80")]
		[DebuggerHidden]
		public <CancelWith>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6000FDB")]
		[Address(RVA = "0x16D03CC", Offset = "0x16D03CC", VA = "0x16D03CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FDC")]
		[Address(RVA = "0x16D03D0", Offset = "0x16D03D0", VA = "0x16D03D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FDE")]
		[Address(RVA = "0x16D0678", Offset = "0x16D0678", VA = "0x16D0678", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0x16CFB1C", Offset = "0x16CFB1C", VA = "0x16CFB1C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCB35C8", Offset = "0xCB35C8")]
	public static IEnumerator<float> CancelWith(this IEnumerator<float> coroutine, GameObject gameObject)
	{
		return null;
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0x16CFBE0", Offset = "0x16CFBE0", VA = "0x16CFBE0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCB363C", Offset = "0xCB363C")]
	public static IEnumerator<float> CancelWith(this IEnumerator<float> coroutine, GameObject gameObject1, GameObject gameObject2)
	{
		return null;
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0x16CFCB8", Offset = "0x16CFCB8", VA = "0x16CFCB8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCB36B0", Offset = "0xCB36B0")]
	public static IEnumerator<float> CancelWith(this IEnumerator<float> coroutine, GameObject gameObject1, GameObject gameObject2, GameObject gameObject3)
	{
		return null;
	}
}
[Token(Token = "0x200003E")]
public class ViveportDemo : MonoBehaviour
{
	[Token(Token = "0x200028A")]
	private class MyLicenseChecker : Viveport.Api.LicenseChecker
	{
		[Token(Token = "0x6000FE0")]
		[Address(RVA = "0x1578C14", Offset = "0x1578C14", VA = "0x1578C14", Slot = "4")]
		public override void OnSuccess(long issueTime, long expirationTime, int latestVersion, bool updateRequired)
		{
		}

		[Token(Token = "0x6000FE1")]
		[Address(RVA = "0x1578D6C", Offset = "0x1578D6C", VA = "0x1578D6C", Slot = "5")]
		public override void OnFailure(int errorCode, string errorMessage)
		{
		}

		[Token(Token = "0x6000FE2")]
		[Address(RVA = "0x1577AF8", Offset = "0x1577AF8", VA = "0x1577AF8")]
		public MyLicenseChecker()
		{
		}
	}

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int nInitValue;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int nResult;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int nWidth;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int nHeight;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int nXStart;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int nYStart;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string stringToEdit;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string StatsCount;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string achivToEdit;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string leaderboardToEdit;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string leaderboardUserName;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string leaderboardScore;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool bInit;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	private static bool bIsReady;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	private static bool bUserProfileIsReady;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
	private static bool bArcadeIsReady;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static bool bTokenIsReady;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string msgBuffer;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static string APP_ID;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static string APP_KEY;

	[Token(Token = "0x600048C")]
	[Address(RVA = "0x1574FBC", Offset = "0x1574FBC", VA = "0x1574FBC")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0x157507C", Offset = "0x157507C", VA = "0x157507C")]
	private void Start()
	{
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0x1575148", Offset = "0x1575148", VA = "0x1575148")]
	private void Update()
	{
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0x157514C", Offset = "0x157514C", VA = "0x157514C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0x1577B00", Offset = "0x1577B00", VA = "0x1577B00")]
	private static void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0x1577C50", Offset = "0x1577C50", VA = "0x1577C50")]
	private static void IsReadyHandler(int nResult)
	{
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0x1577D94", Offset = "0x1577D94", VA = "0x1577D94")]
	private static void IsTokenReadyHandler(int nResult)
	{
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0x1577ECC", Offset = "0x1577ECC", VA = "0x1577ECC")]
	private static void UserProfileIsReadyHandler(int nResult)
	{
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0x1577FB8", Offset = "0x1577FB8", VA = "0x1577FB8")]
	private static void GetSessionTokenHandler(int nResult, string message)
	{
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0x1578224", Offset = "0x1578224", VA = "0x1578224")]
	private static void QueryRunTimeHandler(int nResult, int nMode)
	{
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0x1578444", Offset = "0x1578444", VA = "0x1578444")]
	private static void IsArcadeLeaderboardReadyHandler(int nResult)
	{
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0x1578588", Offset = "0x1578588", VA = "0x1578588")]
	private static void ShutdownHandler(int nResult)
	{
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0x15786AC", Offset = "0x15786AC", VA = "0x15786AC")]
	private static void DownloadStatsHandler(int nResult)
	{
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0x1578798", Offset = "0x1578798", VA = "0x1578798")]
	private static void UploadStatsHandler(int nResult)
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0x1578884", Offset = "0x1578884", VA = "0x1578884")]
	private static void DownloadLeaderboardHandler(int nResult)
	{
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0x1578970", Offset = "0x1578970", VA = "0x1578970")]
	private static void UploadLeaderboardScoreHandler(int nResult)
	{
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0x1578A5C", Offset = "0x1578A5C", VA = "0x1578A5C")]
	public ViveportDemo()
	{
	}
}
[Token(Token = "0x200003F")]
public class ViveportDemo_ArcadeSession : MonoBehaviour
{
	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int nWidth;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int nHeight;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int nXStart;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int nYStart;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string VIVEPORT_ARCADE_APP_TEST_ID;

	[Token(Token = "0x600049E")]
	[Address(RVA = "0x1578E38", Offset = "0x1578E38", VA = "0x1578E38")]
	private void Start()
	{
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0x1578F08", Offset = "0x1578F08", VA = "0x1578F08")]
	private void Update()
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0x1578F0C", Offset = "0x1578F0C", VA = "0x1578F0C")]
	private void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0x1579000", Offset = "0x1579000", VA = "0x1579000")]
	public ViveportDemo_ArcadeSession()
	{
	}
}
[Token(Token = "0x2000040")]
public class ViveportDemo_DLC : MonoBehaviour
{
	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int nWidth;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int nHeight;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int nXStart;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int nYStart;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string APP_ID;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool bInit;

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0x1579070", Offset = "0x1579070", VA = "0x1579070")]
	private void Start()
	{
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0x157913C", Offset = "0x157913C", VA = "0x157913C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0x1579534", Offset = "0x1579534", VA = "0x1579534")]
	private static void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0x1579538", Offset = "0x1579538", VA = "0x1579538")]
	private static void ShutdownHandler(int nResult)
	{
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0x157953C", Offset = "0x157953C", VA = "0x157953C")]
	private static void IsDLCReadyHandler(int nResult)
	{
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0x1579540", Offset = "0x1579540", VA = "0x1579540")]
	public ViveportDemo_DLC()
	{
	}
}
[Token(Token = "0x2000041")]
public class ViveportDemo_Deeplink : MonoBehaviour
{
	[Token(Token = "0x200028B")]
	private class GotoAppDeeplinkChecker : Viveport.Deeplink.DeeplinkChecker
	{
		[Serializable]
		[Token(Token = "0x2000422")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB0A54", Offset = "0xCB0A54")]
		private sealed class <>c
		{
			[Token(Token = "0x4000EC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000EC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__0_0;

			[Token(Token = "0x600162F")]
			[Address(RVA = "0x157A54C", Offset = "0x157A54C", VA = "0x157A54C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001630")]
			[Address(RVA = "0x157A554", Offset = "0x157A554", VA = "0x157A554")]
			internal void <OnSuccess>b__0_0()
			{
			}
		}

		[Token(Token = "0x2000423")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB0A64", Offset = "0xCB0A64")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4000EC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int errorCode;

			[Token(Token = "0x4000EC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string errorMessage;

			[Token(Token = "0x6001631")]
			[Address(RVA = "0x157A4DC", Offset = "0x157A4DC", VA = "0x157A4DC")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6001632")]
			[Address(RVA = "0x157A5C0", Offset = "0x157A5C0", VA = "0x157A5C0")]
			internal void <OnFailure>b__0()
			{
			}
		}

		[Token(Token = "0x6000FE3")]
		[Address(RVA = "0x157A2D0", Offset = "0x157A2D0", VA = "0x157A2D0", Slot = "4")]
		public override void OnSuccess()
		{
		}

		[Token(Token = "0x6000FE4")]
		[Address(RVA = "0x157A3EC", Offset = "0x157A3EC", VA = "0x157A3EC", Slot = "5")]
		public override void OnFailure(int errorCode, string errorMessage)
		{
		}

		[Token(Token = "0x6000FE5")]
		[Address(RVA = "0x1579CD0", Offset = "0x1579CD0", VA = "0x1579CD0")]
		public GotoAppDeeplinkChecker()
		{
		}
	}

	[Token(Token = "0x200028C")]
	private class GotoStoreDeeplinkChecker : Viveport.Deeplink.DeeplinkChecker
	{
		[Serializable]
		[Token(Token = "0x2000424")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB0A74", Offset = "0xCB0A74")]
		private sealed class <>c
		{
			[Token(Token = "0x4000EC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000EC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__0_0;

			[Token(Token = "0x6001634")]
			[Address(RVA = "0x157AA0C", Offset = "0x157AA0C", VA = "0x157AA0C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001635")]
			[Address(RVA = "0x157AA14", Offset = "0x157AA14", VA = "0x157AA14")]
			internal void <OnSuccess>b__0_0()
			{
			}
		}

		[Token(Token = "0x2000425")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB0A84", Offset = "0xCB0A84")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4000EC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int errorCode;

			[Token(Token = "0x4000EC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string errorMessage;

			[Token(Token = "0x6001636")]
			[Address(RVA = "0x157A99C", Offset = "0x157A99C", VA = "0x157A99C")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6001637")]
			[Address(RVA = "0x157AA80", Offset = "0x157AA80", VA = "0x157AA80")]
			internal void <OnFailure>b__0()
			{
			}
		}

		[Token(Token = "0x6000FE6")]
		[Address(RVA = "0x157A790", Offset = "0x157A790", VA = "0x157A790", Slot = "4")]
		public override void OnSuccess()
		{
		}

		[Token(Token = "0x6000FE7")]
		[Address(RVA = "0x157A8AC", Offset = "0x157A8AC", VA = "0x157A8AC", Slot = "5")]
		public override void OnFailure(int errorCode, string errorMessage)
		{
		}

		[Token(Token = "0x6000FE8")]
		[Address(RVA = "0x1579CD8", Offset = "0x1579CD8", VA = "0x1579CD8")]
		public GotoStoreDeeplinkChecker()
		{
		}
	}

	[Token(Token = "0x200028D")]
	private class GoToAppOrGoToStoreDeeplinkChecker : Viveport.Deeplink.DeeplinkChecker
	{
		[Serializable]
		[Token(Token = "0x2000426")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB0A94", Offset = "0xCB0A94")]
		private sealed class <>c
		{
			[Token(Token = "0x4000ECA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000ECB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__0_0;

			[Token(Token = "0x6001639")]
			[Address(RVA = "0x157A08C", Offset = "0x157A08C", VA = "0x157A08C")]
			public <>c()
			{
			}

			[Token(Token = "0x600163A")]
			[Address(RVA = "0x157A094", Offset = "0x157A094", VA = "0x157A094")]
			internal void <OnSuccess>b__0_0()
			{
			}
		}

		[Token(Token = "0x2000427")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB0AA4", Offset = "0xCB0AA4")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4000ECC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int errorCode;

			[Token(Token = "0x4000ECD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string errorMessage;

			[Token(Token = "0x600163B")]
			[Address(RVA = "0x157A01C", Offset = "0x157A01C", VA = "0x157A01C")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x600163C")]
			[Address(RVA = "0x157A100", Offset = "0x157A100", VA = "0x157A100")]
			internal void <OnFailure>b__0()
			{
			}
		}

		[Token(Token = "0x6000FE9")]
		[Address(RVA = "0x1579E10", Offset = "0x1579E10", VA = "0x1579E10", Slot = "4")]
		public override void OnSuccess()
		{
		}

		[Token(Token = "0x6000FEA")]
		[Address(RVA = "0x1579F2C", Offset = "0x1579F2C", VA = "0x1579F2C", Slot = "5")]
		public override void OnFailure(int errorCode, string errorMessage)
		{
		}

		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0x1579CE0", Offset = "0x1579CE0", VA = "0x1579CE0")]
		public GoToAppOrGoToStoreDeeplinkChecker()
		{
		}
	}

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string VIVEPORT_ID;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string VIVEPORT_KEY;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string GoToApp_Viveport_ID;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string GoToStore_Viveport_ID;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string LaunchData;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string LaunchBranchName;

	[Token(Token = "0x40001B2")]
	private const int SUCCESS = 0;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool bInitComplete;

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0x15795C4", Offset = "0x15795C4", VA = "0x15795C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0x1579694", Offset = "0x1579694", VA = "0x1579694")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0x157973C", Offset = "0x157973C", VA = "0x157973C")]
	private void Start()
	{
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0x1579808", Offset = "0x1579808", VA = "0x1579808")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0x15798A0", Offset = "0x15798A0", VA = "0x15798A0")]
	private static void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0x1579988", Offset = "0x1579988", VA = "0x1579988")]
	private static void IsReadyHandler(int nResult)
	{
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0x1579A64", Offset = "0x1579A64", VA = "0x1579A64")]
	private static void ShutdownHandler(int nResult)
	{
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0x1579A68", Offset = "0x1579A68", VA = "0x1579A68")]
	private void Update()
	{
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0x1579CE8", Offset = "0x1579CE8", VA = "0x1579CE8")]
	public ViveportDemo_Deeplink()
	{
	}
}
[Token(Token = "0x2000042")]
public class ViveportDemo_IAP : MonoBehaviour
{
	[Token(Token = "0x200028E")]
	public class Item
	{
		[Token(Token = "0x4000D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string ticket;

		[Token(Token = "0x4000D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] items;

		[Token(Token = "0x4000D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string subscription_ticket;

		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0x157BD18", Offset = "0x157BD18", VA = "0x157BD18")]
		public Item()
		{
		}
	}

	[Token(Token = "0x200028F")]
	private class Result : Viveport.IAPurchase.IAPurchaseListener
	{
		[Token(Token = "0x4000D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Item mItem;

		[Token(Token = "0x6000FED")]
		[Address(RVA = "0x157BD90", Offset = "0x157BD90", VA = "0x157BD90", Slot = "4")]
		public override void OnSuccess(string pchCurrencyName)
		{
		}

		[Token(Token = "0x6000FEE")]
		[Address(RVA = "0x157BE44", Offset = "0x157BE44", VA = "0x157BE44", Slot = "5")]
		public override void OnRequestSuccess(string pchPurchaseId)
		{
		}

		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0x157BF04", Offset = "0x157BF04", VA = "0x157BF04", Slot = "6")]
		public override void OnPurchaseSuccess(string pchPurchaseId)
		{
		}

		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0x157BFEC", Offset = "0x157BFEC", VA = "0x157BFEC", Slot = "7")]
		public override void OnQuerySuccess(Viveport.IAPurchase.QueryResponse response)
		{
		}

		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0x157C084", Offset = "0x157C084", VA = "0x157C084", Slot = "8")]
		public override void OnQuerySuccess(Viveport.IAPurchase.QueryListResponse response)
		{
		}

		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0x157C7F4", Offset = "0x157C7F4", VA = "0x157C7F4", Slot = "9")]
		public override void OnBalanceSuccess(string pchBalance)
		{
		}

		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0x157C878", Offset = "0x157C878", VA = "0x157C878", Slot = "11")]
		public override void OnRequestSubscriptionSuccess(string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0x157C938", Offset = "0x157C938", VA = "0x157C938", Slot = "12")]
		public override void OnRequestSubscriptionWithPlanIDSuccess(string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0x157C9F8", Offset = "0x157C9F8", VA = "0x157C9F8", Slot = "13")]
		public override void OnSubscribeSuccess(string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6000FF6")]
		[Address(RVA = "0x157CAE0", Offset = "0x157CAE0", VA = "0x157CAE0", Slot = "14")]
		public override void OnQuerySubscriptionSuccess(Viveport.IAPurchase.Subscription[] subscriptionlist)
		{
		}

		[Token(Token = "0x6000FF7")]
		[Address(RVA = "0x157CF18", Offset = "0x157CF18", VA = "0x157CF18", Slot = "15")]
		public override void OnQuerySubscriptionListSuccess(Viveport.IAPurchase.Subscription[] subscriptionlist)
		{
		}

		[Token(Token = "0x6000FF8")]
		[Address(RVA = "0x157D350", Offset = "0x157D350", VA = "0x157D350", Slot = "16")]
		public override void OnCancelSubscriptionSuccess(bool bCanceled)
		{
		}

		[Token(Token = "0x6000FF9")]
		[Address(RVA = "0x157D3EC", Offset = "0x157D3EC", VA = "0x157D3EC", Slot = "10")]
		public override void OnFailure(int nCode, string pchMessage)
		{
		}

		[Token(Token = "0x6000FFA")]
		[Address(RVA = "0x157ADAC", Offset = "0x157ADAC", VA = "0x157ADAC")]
		public Result()
		{
		}
	}

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int nWidth;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int nHeight;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int nXStart;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int nYStart;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string IAP_APP_TEST_ID;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string IAP_APP_TEST_KEY;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Result mListener;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool bIsDuplicatedSubscription;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private static bool bInit_Done;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	private static bool bIsReady_Done;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
	private static bool bShutdown_Done;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Text winText;

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0x157AC50", Offset = "0x157AC50", VA = "0x157AC50")]
	private void Start()
	{
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0x157AE1C", Offset = "0x157AE1C", VA = "0x157AE1C")]
	private void Update()
	{
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0x157AE20", Offset = "0x157AE20", VA = "0x157AE20")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0x157BA94", Offset = "0x157BA94", VA = "0x157BA94")]
	private static void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0x157BB78", Offset = "0x157BB78", VA = "0x157BB78")]
	private static void ShutdownStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0x157BC64", Offset = "0x157BC64", VA = "0x157BC64")]
	public ViveportDemo_IAP()
	{
	}
}
[Token(Token = "0x2000043")]
public class ViveportDemo_MainThreadDispatcher : MonoBehaviour
{
	[Token(Token = "0x2000290")]
	private class ThisCallbackWillNotWorkFine : Viveport.IAPurchase.IAPurchaseListener
	{
		[Token(Token = "0x6000FFB")]
		[Address(RVA = "0x157D7CC", Offset = "0x157D7CC", VA = "0x157D7CC", Slot = "4")]
		public override void OnSuccess(string pchCurrencyName)
		{
		}

		[Token(Token = "0x6000FFC")]
		[Address(RVA = "0x157D86C", Offset = "0x157D86C", VA = "0x157D86C")]
		public ThisCallbackWillNotWorkFine()
		{
		}
	}

	[Token(Token = "0x2000291")]
	private class ThisCallbackWillWorkFine_01 : Viveport.IAPurchase.IAPurchaseListener
	{
		[Token(Token = "0x2000428")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB0AB4", Offset = "0xCB0AB4")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4000ECE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string pchCurrencyName;

			[Token(Token = "0x600163D")]
			[Address(RVA = "0x157D950", Offset = "0x157D950", VA = "0x157D950")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x600163E")]
			[Address(RVA = "0x157D958", Offset = "0x157D958", VA = "0x157D958")]
			internal void <OnSuccess>b__0()
			{
			}
		}

		[Token(Token = "0x6000FFD")]
		[Address(RVA = "0x157D874", Offset = "0x157D874", VA = "0x157D874", Slot = "4")]
		public override void OnSuccess(string pchCurrencyName)
		{
		}

		[Token(Token = "0x6000FFE")]
		[Address(RVA = "0x157D744", Offset = "0x157D744", VA = "0x157D744")]
		public ThisCallbackWillWorkFine_01()
		{
		}
	}

	[Token(Token = "0x2000292")]
	private class ThisCallbackWillWorkFine_02 : Viveport.IAPurchase.IAPurchaseListener
	{
		[Token(Token = "0x2000429")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB0AC4", Offset = "0xCB0AC4")]
		private sealed class <ShowResult>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000ECF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000ED0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000ED1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string pchCurrencyName;

			[Token(Token = "0x170001C2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001642")]
				[Address(RVA = "0x1F0FDC8", Offset = "0x1F0FDC8", VA = "0x1F0FDC8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001C3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001644")]
				[Address(RVA = "0x1F0FE30", Offset = "0x1F0FE30", VA = "0x1F0FE30", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600163F")]
			[Address(RVA = "0x1F0FCB4", Offset = "0x1F0FCB4", VA = "0x1F0FCB4")]
			[DebuggerHidden]
			public <ShowResult>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x6001640")]
			[Address(RVA = "0x1F0FCE0", Offset = "0x1F0FCE0", VA = "0x1F0FCE0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001641")]
			[Address(RVA = "0x1F0FCE4", Offset = "0x1F0FCE4", VA = "0x1F0FCE4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001643")]
			[Address(RVA = "0x1F0FDD0", Offset = "0x1F0FDD0", VA = "0x1F0FDD0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6000FFF")]
		[Address(RVA = "0x157D9F8", Offset = "0x157D9F8", VA = "0x157D9F8", Slot = "4")]
		public override void OnSuccess(string pchCurrencyName)
		{
		}

		[Token(Token = "0x6001000")]
		[Address(RVA = "0x157DA78", Offset = "0x157DA78", VA = "0x157DA78")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCB5D20", Offset = "0xCB5D20")]
		private IEnumerator ShowResult(string pchCurrencyName)
		{
			return null;
		}

		[Token(Token = "0x6001001")]
		[Address(RVA = "0x157DAF4", Offset = "0x157DAF4", VA = "0x157DAF4")]
		public ThisCallbackWillWorkFine_02()
		{
		}
	}

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text uiText;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Text myApiResultText;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly string appId;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly string apiKey;

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0x157D5BC", Offset = "0x157D5BC", VA = "0x157D5BC")]
	private void Start()
	{
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0x157D6A8", Offset = "0x157D6A8", VA = "0x157D6A8")]
	private void InitCallback(int errorCode)
	{
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0x157D74C", Offset = "0x157D74C", VA = "0x157D74C")]
	public ViveportDemo_MainThreadDispatcher()
	{
	}
}
[Token(Token = "0x2000044")]
public class ViveportDemo_Subscription : MonoBehaviour
{
	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int nWidth;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int nHeight;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool bIsReady;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int nXStart;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int nYStart;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string APP_ID;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool bInit;

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0x1F0FE38", Offset = "0x1F0FE38", VA = "0x1F0FE38")]
	private void Start()
	{
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0x1F0FEFC", Offset = "0x1F0FEFC", VA = "0x1F0FEFC")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0x1F106EC", Offset = "0x1F106EC", VA = "0x1F106EC")]
	private static void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0x1F10834", Offset = "0x1F10834", VA = "0x1F10834")]
	private static void ShutdownHandler(int nResult)
	{
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0x1F10838", Offset = "0x1F10838", VA = "0x1F10838")]
	private static void IsReadyHandler(int nResult, string message)
	{
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0x1F10A78", Offset = "0x1F10A78", VA = "0x1F10A78")]
	public ViveportDemo_Subscription()
	{
	}
}
namespace PublicKeyConvert
{
	[Token(Token = "0x2000045")]
	public class PEMKeyLoader
	{
		[Token(Token = "0x40001CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static byte[] SeqOID;

		[Token(Token = "0x60004C6")]
		[Address(RVA = "0x16D0E70", Offset = "0x16D0E70", VA = "0x16D0E70")]
		private static bool CompareBytearrays(byte[] a, byte[] b)
		{
			return default(bool);
		}

		[Token(Token = "0x60004C7")]
		[Address(RVA = "0x16D0EEC", Offset = "0x16D0EEC", VA = "0x16D0EEC")]
		public static RSACryptoServiceProvider CryptoServiceProviderFromPublicKeyInfo(byte[] x509key)
		{
			return null;
		}

		[Token(Token = "0x60004C8")]
		[Address(RVA = "0x16D143C", Offset = "0x16D143C", VA = "0x16D143C")]
		public static RSACryptoServiceProvider CryptoServiceProviderFromPublicKeyInfo(string base64EncodedKey)
		{
			return null;
		}

		[Token(Token = "0x60004C9")]
		[Address(RVA = "0x16D1550", Offset = "0x16D1550", VA = "0x16D1550")]
		public PEMKeyLoader()
		{
		}
	}
}
namespace Viveport
{
	[Token(Token = "0x2000046")]
	public class MainThreadDispatcher : MonoBehaviour
	{
		[Token(Token = "0x2000293")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCAF068", Offset = "0xCAF068")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4000D5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MainThreadDispatcher <>4__this;

			[Token(Token = "0x4000D5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public IEnumerator action;

			[Token(Token = "0x6001002")]
			[Address(RVA = "0x1573398", Offset = "0x1573398", VA = "0x1573398")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x6001003")]
			[Address(RVA = "0x1573504", Offset = "0x1573504", VA = "0x1573504")]
			internal void <Enqueue>b__0()
			{
			}
		}

		[Token(Token = "0x2000294")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCAF078", Offset = "0xCAF078")]
		private sealed class <ActionWrapper>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action action;

			[Token(Token = "0x1700016C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001007")]
				[Address(RVA = "0x157359C", Offset = "0x157359C", VA = "0x157359C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700016D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001009")]
				[Address(RVA = "0x1573604", Offset = "0x1573604", VA = "0x1573604", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001004")]
			[Address(RVA = "0x1573444", Offset = "0x1573444", VA = "0x1573444")]
			[DebuggerHidden]
			public <ActionWrapper>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6001005")]
			[Address(RVA = "0x1573528", Offset = "0x1573528", VA = "0x1573528", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001006")]
			[Address(RVA = "0x157352C", Offset = "0x157352C", VA = "0x157352C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001008")]
			[Address(RVA = "0x15735A4", Offset = "0x15735A4", VA = "0x15735A4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000295")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCAF088", Offset = "0xCAF088")]
		private sealed class <ActionWrapper>d__13<T1> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4000D60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4000D61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1> action;

			[Token(Token = "0x4000D62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x1700016E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600100D")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700016F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600100F")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600100A")]
			[DebuggerHidden]
			public <ActionWrapper>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x600100B")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600100C")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600100E")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000296")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCAF098", Offset = "0xCAF098")]
		private sealed class <ActionWrapper>d__14<T1, T2> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4000D64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4000D65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1, T2> action;

			[Token(Token = "0x4000D66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x4000D67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T2 param2;

			[Token(Token = "0x17000170")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001013")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000171")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001015")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001010")]
			[DebuggerHidden]
			public <ActionWrapper>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6001011")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001012")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001014")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000297")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCAF0A8", Offset = "0xCAF0A8")]
		private sealed class <ActionWrapper>d__15<T1, T2, T3> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4000D69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4000D6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1, T2, T3> action;

			[Token(Token = "0x4000D6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x4000D6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T2 param2;

			[Token(Token = "0x4000D6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T3 param3;

			[Token(Token = "0x17000172")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001019")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000173")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600101B")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001016")]
			[DebuggerHidden]
			public <ActionWrapper>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6001017")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001018")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600101A")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000298")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCAF0B8", Offset = "0xCAF0B8")]
		private sealed class <ActionWrapper>d__16<T1, T2, T3, T4> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4000D6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4000D70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1, T2, T3, T4> action;

			[Token(Token = "0x4000D71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x4000D72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T2 param2;

			[Token(Token = "0x4000D73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T3 param3;

			[Token(Token = "0x4000D74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T4 param4;

			[Token(Token = "0x17000174")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600101F")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000175")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001021")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600101C")]
			[DebuggerHidden]
			public <ActionWrapper>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x600101D")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600101E")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001020")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40001CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Queue<Action> actions;

		[Token(Token = "0x40001CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static MainThreadDispatcher instance;

		[Token(Token = "0x60004CB")]
		[Address(RVA = "0x1572DF4", Offset = "0x1572DF4", VA = "0x1572DF4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60004CC")]
		[Address(RVA = "0x1572F10", Offset = "0x1572F10", VA = "0x1572F10")]
		public void Update()
		{
		}

		[Token(Token = "0x60004CD")]
		[Address(RVA = "0x1573088", Offset = "0x1573088", VA = "0x1573088")]
		public static MainThreadDispatcher Instance()
		{
			return null;
		}

		[Token(Token = "0x60004CE")]
		[Address(RVA = "0x1573188", Offset = "0x1573188", VA = "0x1573188")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60004CF")]
		[Address(RVA = "0x15731F4", Offset = "0x15731F4", VA = "0x15731F4")]
		public void Enqueue(IEnumerator action)
		{
		}

		[Token(Token = "0x60004D0")]
		[Address(RVA = "0x15733A0", Offset = "0x15733A0", VA = "0x15733A0")]
		public void Enqueue(Action action)
		{
		}

		[Token(Token = "0x60004D1")]
		public void Enqueue<T1>(Action<T1> action, T1 param1)
		{
		}

		[Token(Token = "0x60004D2")]
		public void Enqueue<T1, T2>(Action<T1, T2> action, T1 param1, T2 param2)
		{
		}

		[Token(Token = "0x60004D3")]
		public void Enqueue<T1, T2, T3>(Action<T1, T2, T3> action, T1 param1, T2 param2, T3 param3)
		{
		}

		[Token(Token = "0x60004D4")]
		public void Enqueue<T1, T2, T3, T4>(Action<T1, T2, T3, T4> action, T1 param1, T2 param2, T3 param3, T4 param4)
		{
		}

		[Token(Token = "0x60004D5")]
		[Address(RVA = "0x15733C8", Offset = "0x15733C8", VA = "0x15733C8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCB3724", Offset = "0xCB3724")]
		private IEnumerator ActionWrapper(Action action)
		{
			return null;
		}

		[Token(Token = "0x60004D6")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCB3788", Offset = "0xCB3788")]
		private IEnumerator ActionWrapper<T1>(Action<T1> action, T1 param1)
		{
			return null;
		}

		[Token(Token = "0x60004D7")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCB37EC", Offset = "0xCB37EC")]
		private IEnumerator ActionWrapper<T1, T2>(Action<T1, T2> action, T1 param1, T2 param2)
		{
			return null;
		}

		[Token(Token = "0x60004D8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCB3850", Offset = "0xCB3850")]
		private IEnumerator ActionWrapper<T1, T2, T3>(Action<T1, T2, T3> action, T1 param1, T2 param2, T3 param3)
		{
			return null;
		}

		[Token(Token = "0x60004D9")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCB38B4", Offset = "0xCB38B4")]
		private IEnumerator ActionWrapper<T1, T2, T3, T4>(Action<T1, T2, T3, T4> action, T1 param1, T2 param2, T3 param3, T4 param4)
		{
			return null;
		}

		[Token(Token = "0x60004DA")]
		[Address(RVA = "0x1573470", Offset = "0x1573470", VA = "0x1573470")]
		public MainThreadDispatcher()
		{
		}
	}
	[Token(Token = "0x2000047")]
	public enum Locale
	{
		[Token(Token = "0x40001CF")]
		US,
		[Token(Token = "0x40001D0")]
		DE,
		[Token(Token = "0x40001D1")]
		JP,
		[Token(Token = "0x40001D2")]
		KR,
		[Token(Token = "0x40001D3")]
		RU,
		[Token(Token = "0x40001D4")]
		CN,
		[Token(Token = "0x40001D5")]
		TW,
		[Token(Token = "0x40001D6")]
		FR
	}
	[Token(Token = "0x2000048")]
	public delegate void StatusCallback(int nResult);
	[Token(Token = "0x2000049")]
	public delegate void StatusCallback2(int nResult, string message);
	[Token(Token = "0x200004A")]
	public delegate void QueryRuntimeModeCallback(int nResult, int emu);
	[Token(Token = "0x200004B")]
	public class Leaderboard
	{
		[Token(Token = "0x40001D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB130C", Offset = "0xCB130C")]
		private int <Rank>k__BackingField;

		[Token(Token = "0x40001D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB131C", Offset = "0xCB131C")]
		private int <Score>k__BackingField;

		[Token(Token = "0x40001D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB132C", Offset = "0xCB132C")]
		private string <UserName>k__BackingField;

		[Token(Token = "0x17000069")]
		public int Rank
		{
			[Token(Token = "0x60004E8")]
			[Address(RVA = "0x1572DC4", Offset = "0x1572DC4", VA = "0x1572DC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB3918", Offset = "0xCB3918")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60004E9")]
			[Address(RVA = "0x1572DCC", Offset = "0x1572DCC", VA = "0x1572DCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB3928", Offset = "0xCB3928")]
			set
			{
			}
		}

		[Token(Token = "0x1700006A")]
		public int Score
		{
			[Token(Token = "0x60004EA")]
			[Address(RVA = "0x1572DD4", Offset = "0x1572DD4", VA = "0x1572DD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB3938", Offset = "0xCB3938")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60004EB")]
			[Address(RVA = "0x1572DDC", Offset = "0x1572DDC", VA = "0x1572DDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB3948", Offset = "0xCB3948")]
			set
			{
			}
		}

		[Token(Token = "0x1700006B")]
		public string UserName
		{
			[Token(Token = "0x60004EC")]
			[Address(RVA = "0x1572DE4", Offset = "0x1572DE4", VA = "0x1572DE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB3958", Offset = "0xCB3958")]
			get
			{
				return null;
			}
			[Token(Token = "0x60004ED")]
			[Address(RVA = "0x1572DEC", Offset = "0x1572DEC", VA = "0x1572DEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB3968", Offset = "0xCB3968")]
			set
			{
			}
		}

		[Token(Token = "0x60004EE")]
		[Address(RVA = "0x1572AC0", Offset = "0x1572AC0", VA = "0x1572AC0")]
		public Leaderboard()
		{
		}
	}
	[Token(Token = "0x200004C")]
	public class SubscriptionStatus
	{
		[Token(Token = "0x2000299")]
		public enum Platform
		{
			[Token(Token = "0x4000D76")]
			Windows,
			[Token(Token = "0x4000D77")]
			Android
		}

		[Token(Token = "0x200029A")]
		public enum TransactionType
		{
			[Token(Token = "0x4000D79")]
			Unknown,
			[Token(Token = "0x4000D7A")]
			Paid,
			[Token(Token = "0x4000D7B")]
			Redeem,
			[Token(Token = "0x4000D7C")]
			FreeTrial
		}

		[Token(Token = "0x40001DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB133C", Offset = "0xCB133C")]
		private List<Platform> <Platforms>k__BackingField;

		[Token(Token = "0x40001DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB134C", Offset = "0xCB134C")]
		private TransactionType <Type>k__BackingField;

		[Token(Token = "0x1700006C")]
		public List<Platform> Platforms
		{
			[Token(Token = "0x60004EF")]
			[Address(RVA = "0x157432C", Offset = "0x157432C", VA = "0x157432C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB3978", Offset = "0xCB3978")]
			get
			{
				return null;
			}
			[Token(Token = "0x60004F0")]
			[Address(RVA = "0x1574334", Offset = "0x1574334", VA = "0x1574334")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB3988", Offset = "0xCB3988")]
			set
			{
			}
		}

		[Token(Token = "0x1700006D")]
		public TransactionType Type
		{
			[Token(Token = "0x60004F1")]
			[Address(RVA = "0x157433C", Offset = "0x157433C", VA = "0x157433C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB3998", Offset = "0xCB3998")]
			get
			{
				return default(TransactionType);
			}
			[Token(Token = "0x60004F2")]
			[Address(RVA = "0x1574344", Offset = "0x1574344", VA = "0x1574344")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB39A8", Offset = "0xCB39A8")]
			set
			{
			}
		}

		[Token(Token = "0x60004F3")]
		[Address(RVA = "0x15742A0", Offset = "0x15742A0", VA = "0x15742A0")]
		public SubscriptionStatus()
		{
		}
	}
	[Token(Token = "0x200004D")]
	public class Api
	{
		[Token(Token = "0x200029B")]
		public abstract class LicenseChecker
		{
			[Token(Token = "0x6001022")]
			public abstract void OnSuccess(long issueTime, long expirationTime, int latestVersion, bool updateRequired);

			[Token(Token = "0x6001023")]
			public abstract void OnFailure(int errorCode, string errorMessage);

			[Token(Token = "0x6001024")]
			[Address(RVA = "0x15658FC", Offset = "0x15658FC", VA = "0x15658FC")]
			protected LicenseChecker()
			{
			}
		}

		[Token(Token = "0x40001DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static readonly List<GetLicenseCallback> InternalGetLicenseCallbacks;

		[Token(Token = "0x40001DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal static readonly List<Viveport.Internal.StatusCallback> InternalStatusCallbacks;

		[Token(Token = "0x40001DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal static readonly List<Viveport.Internal.QueryRuntimeModeCallback> InternalQueryRunTimeCallbacks;

		[Token(Token = "0x40001DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal static readonly List<Viveport.Internal.StatusCallback2> InternalStatusCallback2s;

		[Token(Token = "0x40001E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal static readonly List<LicenseChecker> InternalLicenseCheckers;

		[Token(Token = "0x40001E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Viveport.Internal.StatusCallback initIl2cppCallback;

		[Token(Token = "0x40001E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Viveport.Internal.StatusCallback shutdownIl2cppCallback;

		[Token(Token = "0x40001E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Viveport.Internal.QueryRuntimeModeCallback queryRuntimeModeIl2cppCallback;

		[Token(Token = "0x40001E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly string VERSION;

		[Token(Token = "0x40001E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static string _appId;

		[Token(Token = "0x40001E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static string _appKey;

		[Token(Token = "0x60004F4")]
		[Address(RVA = "0x1564B00", Offset = "0x1564B00", VA = "0x1564B00")]
		public static void GetLicense(LicenseChecker checker, string appId, string appKey)
		{
		}

		[Token(Token = "0x60004F5")]
		[Address(RVA = "0x1564A10", Offset = "0x1564A10", VA = "0x1564A10")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xCB39B8", Offset = "0xCB39B8")]
		private static void InitIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x60004F6")]
		[Address(RVA = "0x156501C", Offset = "0x156501C", VA = "0x156501C")]
		public static int Init(StatusCallback callback, string appId)
		{
			return default(int);
		}

		[Token(Token = "0x60004F7")]
		[Address(RVA = "0x1564A88", Offset = "0x1564A88", VA = "0x1564A88")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xCB3A1C", Offset = "0xCB3A1C")]
		private static void ShutdownIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x60004F8")]
		[Address(RVA = "0x1565344", Offset = "0x1565344", VA = "0x1565344")]
		public static int Shutdown(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x60004F9")]
		[Address(RVA = "0x15655C0", Offset = "0x15655C0", VA = "0x15655C0")]
		public static string Version()
		{
			return null;
		}

		[Token(Token = "0x60004FA")]
		[Address(RVA = "0x1565750", Offset = "0x1565750", VA = "0x1565750")]
		public Api()
		{
		}
	}
	[Token(Token = "0x200004E")]
	public class User
	{
		[Token(Token = "0x40001E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Viveport.Internal.StatusCallback isReadyIl2cppCallback;

		[Token(Token = "0x60004FC")]
		[Address(RVA = "0x1574354", Offset = "0x1574354", VA = "0x1574354")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xCB3A80", Offset = "0xCB3A80")]
		private static void IsReadyIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x60004FD")]
		[Address(RVA = "0x15743B4", Offset = "0x15743B4", VA = "0x15743B4")]
		public static int IsReady(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x60004FE")]
		[Address(RVA = "0x1574538", Offset = "0x1574538", VA = "0x1574538")]
		public static string GetUserId()
		{
			return null;
		}

		[Token(Token = "0x60004FF")]
		[Address(RVA = "0x157455C", Offset = "0x157455C", VA = "0x157455C")]
		public static string GetUserName()
		{
			return null;
		}

		[Token(Token = "0x6000500")]
		[Address(RVA = "0x1574580", Offset = "0x1574580", VA = "0x1574580")]
		public static string GetUserAvatarUrl()
		{
			return null;
		}

		[Token(Token = "0x6000501")]
		[Address(RVA = "0x15745A4", Offset = "0x15745A4", VA = "0x15745A4")]
		public User()
		{
		}
	}
	[Token(Token = "0x200004F")]
	public class UserStats
	{
		[Token(Token = "0x200029C")]
		public enum LeaderBoardRequestType
		{
			[Token(Token = "0x4000D7E")]
			GlobalData,
			[Token(Token = "0x4000D7F")]
			GlobalDataAroundUser,
			[Token(Token = "0x4000D80")]
			LocalData,
			[Token(Token = "0x4000D81")]
			LocalDataAroundUser
		}

		[Token(Token = "0x200029D")]
		public enum LeaderBoardTimeRange
		{
			[Token(Token = "0x4000D83")]
			AllTime,
			[Token(Token = "0x4000D84")]
			Daily,
			[Token(Token = "0x4000D85")]
			Weekly,
			[Token(Token = "0x4000D86")]
			Monthly
		}

		[Token(Token = "0x200029E")]
		public enum LeaderBoardSortMethod
		{
			[Token(Token = "0x4000D88")]
			None,
			[Token(Token = "0x4000D89")]
			Ascending,
			[Token(Token = "0x4000D8A")]
			Descending
		}

		[Token(Token = "0x200029F")]
		public enum LeaderBoardDiaplayType
		{
			[Token(Token = "0x4000D8C")]
			None,
			[Token(Token = "0x4000D8D")]
			Numeric,
			[Token(Token = "0x4000D8E")]
			TimeSeconds,
			[Token(Token = "0x4000D8F")]
			TimeMilliSeconds
		}

		[Token(Token = "0x20002A0")]
		public enum LeaderBoardScoreMethod
		{
			[Token(Token = "0x4000D91")]
			None,
			[Token(Token = "0x4000D92")]
			KeepBest,
			[Token(Token = "0x4000D93")]
			ForceUpdate
		}

		[Token(Token = "0x20002A1")]
		public enum AchievementDisplayAttribute
		{
			[Token(Token = "0x4000D95")]
			Name,
			[Token(Token = "0x4000D96")]
			Desc,
			[Token(Token = "0x4000D97")]
			Hidden
		}

		[Token(Token = "0x40001E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Viveport.Internal.StatusCallback isReadyIl2cppCallback;

		[Token(Token = "0x40001E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Viveport.Internal.StatusCallback downloadStatsIl2cppCallback;

		[Token(Token = "0x40001EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Viveport.Internal.StatusCallback uploadStatsIl2cppCallback;

		[Token(Token = "0x40001EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Viveport.Internal.StatusCallback downloadLeaderboardScoresIl2cppCallback;

		[Token(Token = "0x40001EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Viveport.Internal.StatusCallback uploadLeaderboardScoreIl2cppCallback;

		[Token(Token = "0x6000502")]
		[Address(RVA = "0x15745AC", Offset = "0x15745AC", VA = "0x15745AC")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xCB3AE4", Offset = "0xCB3AE4")]
		private static void IsReadyIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x6000503")]
		[Address(RVA = "0x157478C", Offset = "0x157478C", VA = "0x157478C")]
		public static int IsReady(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6000504")]
		[Address(RVA = "0x157460C", Offset = "0x157460C", VA = "0x157460C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xCB3B48", Offset = "0xCB3B48")]
		private static void DownloadStatsIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x6000505")]
		[Address(RVA = "0x1574910", Offset = "0x1574910", VA = "0x1574910")]
		public static int DownloadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6000506")]
		[Address(RVA = "0x1574A94", Offset = "0x1574A94", VA = "0x1574A94")]
		public static int GetStat(string name, int defaultValue)
		{
			return default(int);
		}

		[Token(Token = "0x6000507")]
		[Address(RVA = "0x1574A98", Offset = "0x1574A98", VA = "0x1574A98")]
		public static float GetStat(string name, float defaultValue)
		{
			return default(float);
		}

		[Token(Token = "0x6000508")]
		[Address(RVA = "0x1574A9C", Offset = "0x1574A9C", VA = "0x1574A9C")]
		public static void SetStat(string name, int value)
		{
		}

		[Token(Token = "0x6000509")]
		[Address(RVA = "0x1574AA0", Offset = "0x1574AA0", VA = "0x1574AA0")]
		public static void SetStat(string name, float value)
		{
		}

		[Token(Token = "0x600050A")]
		[Address(RVA = "0x157466C", Offset = "0x157466C", VA = "0x157466C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xCB3BAC", Offset = "0xCB3BAC")]
		private static void UploadStatsIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x600050B")]
		[Address(RVA = "0x1574AA4", Offset = "0x1574AA4", VA = "0x1574AA4")]
		public static int UploadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x600050C")]
		[Address(RVA = "0x1574C28", Offset = "0x1574C28", VA = "0x1574C28")]
		public static bool GetAchievement(string pchName)
		{
			return default(bool);
		}

		[Token(Token = "0x600050D")]
		[Address(RVA = "0x1574C2C", Offset = "0x1574C2C", VA = "0x1574C2C")]
		public static int GetAchievementUnlockTime(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x600050E")]
		[Address(RVA = "0x1574C30", Offset = "0x1574C30", VA = "0x1574C30")]
		public static string GetAchievementIcon(string pchName)
		{
			return null;
		}

		[Token(Token = "0x600050F")]
		[Address(RVA = "0x1574C34", Offset = "0x1574C34", VA = "0x1574C34")]
		public static string GetAchievementDisplayAttribute(string pchName, AchievementDisplayAttribute attr)
		{
			return null;
		}

		[Token(Token = "0x6000510")]
		[Address(RVA = "0x1574C38", Offset = "0x1574C38", VA = "0x1574C38")]
		public static string GetAchievementDisplayAttribute(string pchName, AchievementDisplayAttribute attr, Locale locale)
		{
			return null;
		}

		[Token(Token = "0x6000511")]
		[Address(RVA = "0x1574C3C", Offset = "0x1574C3C", VA = "0x1574C3C")]
		public static int SetAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x6000512")]
		[Address(RVA = "0x1574C40", Offset = "0x1574C40", VA = "0x1574C40")]
		public static int ClearAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x6000513")]
		[Address(RVA = "0x15746CC", Offset = "0x15746CC", VA = "0x15746CC")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xCB3C10", Offset = "0xCB3C10")]
		private static void DownloadLeaderboardScoresIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x6000514")]
		[Address(RVA = "0x1574C44", Offset = "0x1574C44", VA = "0x1574C44")]
		public static int DownloadLeaderboardScores(StatusCallback callback, string pchLeaderboardName, LeaderBoardRequestType eLeaderboardDataRequest, LeaderBoardTimeRange eLeaderboardDataTimeRange, int nRangeStart, int nRangeEnd)
		{
			return default(int);
		}

		[Token(Token = "0x6000515")]
		[Address(RVA = "0x157472C", Offset = "0x157472C", VA = "0x157472C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xCB3C74", Offset = "0xCB3C74")]
		private static void UploadLeaderboardScoreIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x6000516")]
		[Address(RVA = "0x1574E08", Offset = "0x1574E08", VA = "0x1574E08")]
		public static int UploadLeaderboardScore(StatusCallback callback, string pchLeaderboardName, int nScore)
		{
			return default(int);
		}

		[Token(Token = "0x6000517")]
		[Address(RVA = "0x1574FA4", Offset = "0x1574FA4", VA = "0x1574FA4")]
		public static Leaderboard GetLeaderboardScore(int index)
		{
			return null;
		}

		[Token(Token = "0x6000518")]
		[Address(RVA = "0x1574FA8", Offset = "0x1574FA8", VA = "0x1574FA8")]
		public static int GetLeaderboardScoreCount()
		{
			return default(int);
		}

		[Token(Token = "0x6000519")]
		[Address(RVA = "0x1574FAC", Offset = "0x1574FAC", VA = "0x1574FAC")]
		public static LeaderBoardSortMethod GetLeaderboardSortMethod()
		{
			return default(LeaderBoardSortMethod);
		}

		[Token(Token = "0x600051A")]
		[Address(RVA = "0x1574FB0", Offset = "0x1574FB0", VA = "0x1574FB0")]
		public static LeaderBoardDiaplayType GetLeaderboardDisplayType()
		{
			return default(LeaderBoardDiaplayType);
		}

		[Token(Token = "0x600051B")]
		[Address(RVA = "0x1574FB4", Offset = "0x1574FB4", VA = "0x1574FB4")]
		public UserStats()
		{
		}
	}
	[Token(Token = "0x2000050")]
	public class ArcadeLeaderboard
	{
		[Token(Token = "0x600051C")]
		[Address(RVA = "0x156590C", Offset = "0x156590C", VA = "0x156590C")]
		public ArcadeLeaderboard()
		{
		}
	}
	[Token(Token = "0x2000051")]
	public class IAPurchase
	{
		[Token(Token = "0x20002A2")]
		private class IAPHandler : BaseHandler
		{
			[Token(Token = "0x4000D98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static IAPurchaseListener listener;

			[Token(Token = "0x6001025")]
			[Address(RVA = "0x15673F8", Offset = "0x15673F8", VA = "0x15673F8")]
			public IAPHandler(IAPurchaseListener cb)
			{
			}

			[Token(Token = "0x6001026")]
			[Address(RVA = "0x1567468", Offset = "0x1567468", VA = "0x1567468")]
			public IAPurchaseCallback getIsReadyHandler()
			{
				return null;
			}

			[Token(Token = "0x6001027")]
			[Address(RVA = "0x15698A8", Offset = "0x15698A8", VA = "0x15698A8", Slot = "4")]
			protected override void IsReadyHandler(int code, string message)
			{
			}

			[Token(Token = "0x6001028")]
			[Address(RVA = "0x1567744", Offset = "0x1567744", VA = "0x1567744")]
			public IAPurchaseCallback getRequestHandler()
			{
				return null;
			}

			[Token(Token = "0x6001029")]
			[Address(RVA = "0x1569DB0", Offset = "0x1569DB0", VA = "0x1569DB0", Slot = "5")]
			protected override void RequestHandler(int code, string message)
			{
			}

			[Token(Token = "0x600102A")]
			[Address(RVA = "0x1567C94", Offset = "0x1567C94", VA = "0x1567C94")]
			public IAPurchaseCallback getPurchaseHandler()
			{
				return null;
			}

			[Token(Token = "0x600102B")]
			[Address(RVA = "0x156A2B8", Offset = "0x156A2B8", VA = "0x156A2B8", Slot = "6")]
			protected override void PurchaseHandler(int code, string message)
			{
			}

			[Token(Token = "0x600102C")]
			[Address(RVA = "0x1567F5C", Offset = "0x1567F5C", VA = "0x1567F5C")]
			public IAPurchaseCallback getQueryHandler()
			{
				return null;
			}

			[Token(Token = "0x600102D")]
			[Address(RVA = "0x156A910", Offset = "0x156A910", VA = "0x156A910", Slot = "7")]
			protected override void QueryHandler(int code, string message)
			{
			}

			[Token(Token = "0x600102E")]
			[Address(RVA = "0x1568214", Offset = "0x1568214", VA = "0x1568214")]
			public IAPurchaseCallback getQueryListHandler()
			{
				return null;
			}

			[Token(Token = "0x600102F")]
			[Address(RVA = "0x156B350", Offset = "0x156B350", VA = "0x156B350", Slot = "8")]
			protected override void QueryListHandler(int code, string message)
			{
			}

			[Token(Token = "0x6001030")]
			[Address(RVA = "0x156848C", Offset = "0x156848C", VA = "0x156848C")]
			public IAPurchaseCallback getBalanceHandler()
			{
				return null;
			}

			[Token(Token = "0x6001031")]
			[Address(RVA = "0x156C294", Offset = "0x156C294", VA = "0x156C294", Slot = "9")]
			protected override void BalanceHandler(int code, string message)
			{
			}

			[Token(Token = "0x6001032")]
			[Address(RVA = "0x156875C", Offset = "0x156875C", VA = "0x156875C")]
			public IAPurchaseCallback getRequestSubscriptionHandler()
			{
				return null;
			}

			[Token(Token = "0x6001033")]
			[Address(RVA = "0x156C8F0", Offset = "0x156C8F0", VA = "0x156C8F0", Slot = "10")]
			protected override void RequestSubscriptionHandler(int code, string message)
			{
			}

			[Token(Token = "0x6001034")]
			[Address(RVA = "0x1568BD8", Offset = "0x1568BD8", VA = "0x1568BD8")]
			public IAPurchaseCallback getRequestSubscriptionWithPlanIDHandler()
			{
				return null;
			}

			[Token(Token = "0x6001035")]
			[Address(RVA = "0x156CDE0", Offset = "0x156CDE0", VA = "0x156CDE0", Slot = "11")]
			protected override void RequestSubscriptionWithPlanIDHandler(int code, string message)
			{
			}

			[Token(Token = "0x6001036")]
			[Address(RVA = "0x1568EA0", Offset = "0x1568EA0", VA = "0x1568EA0")]
			public IAPurchaseCallback getSubscribeHandler()
			{
				return null;
			}

			[Token(Token = "0x6001037")]
			[Address(RVA = "0x156D2D0", Offset = "0x156D2D0", VA = "0x156D2D0", Slot = "12")]
			protected override void SubscribeHandler(int code, string message)
			{
			}

			[Token(Token = "0x6001038")]
			[Address(RVA = "0x1569168", Offset = "0x1569168", VA = "0x1569168")]
			public IAPurchaseCallback getQuerySubscriptionHandler()
			{
				return null;
			}

			[Token(Token = "0x6001039")]
			[Address(RVA = "0x156D9EC", Offset = "0x156D9EC", VA = "0x156D9EC", Slot = "13")]
			protected override void QuerySubscriptionHandler(int code, string message)
			{
			}

			[Token(Token = "0x600103A")]
			[Address(RVA = "0x1569420", Offset = "0x1569420", VA = "0x1569420")]
			public IAPurchaseCallback getQuerySubscriptionListHandler()
			{
				return null;
			}

			[Token(Token = "0x600103B")]
			[Address(RVA = "0x156DEF8", Offset = "0x156DEF8", VA = "0x156DEF8", Slot = "14")]
			protected override void QuerySubscriptionListHandler(int code, string message)
			{
			}

			[Token(Token = "0x600103C")]
			[Address(RVA = "0x15696A8", Offset = "0x15696A8", VA = "0x15696A8")]
			public IAPurchaseCallback getCancelSubscriptionHandler()
			{
				return null;
			}

			[Token(Token = "0x600103D")]
			[Address(RVA = "0x156E404", Offset = "0x156E404", VA = "0x156E404", Slot = "15")]
			protected override void CancelSubscriptionHandler(int code, string message)
			{
			}
		}

		[Token(Token = "0x20002A3")]
		private abstract class BaseHandler
		{
			[Token(Token = "0x600103E")]
			protected abstract void IsReadyHandler(int code, string message);

			[Token(Token = "0x600103F")]
			protected abstract void RequestHandler(int code, string message);

			[Token(Token = "0x6001040")]
			protected abstract void PurchaseHandler(int code, string message);

			[Token(Token = "0x6001041")]
			protected abstract void QueryHandler(int code, string message);

			[Token(Token = "0x6001042")]
			protected abstract void QueryListHandler(int code, string message);

			[Token(Token = "0x6001043")]
			protected abstract void BalanceHandler(int code, string message);

			[Token(Token = "0x6001044")]
			protected abstract void RequestSubscriptionHandler(int code, string message);

			[Token(Token = "0x6001045")]
			protected abstract void RequestSubscriptionWithPlanIDHandler(int code, string message);

			[Token(Token = "0x6001046")]
			protected abstract void SubscribeHandler(int code, string message);

			[Token(Token = "0x6001047")]
			protected abstract void QuerySubscriptionHandler(int code, string message);

			[Token(Token = "0x6001048")]
			protected abstract void QuerySubscriptionListHandler(int code, string message);

			[Token(Token = "0x6001049")]
			protected abstract void CancelSubscriptionHandler(int code, string message);

			[Token(Token = "0x600104A")]
			[Address(RVA = "0x15698A0", Offset = "0x15698A0", VA = "0x15698A0")]
			protected BaseHandler()
			{
			}
		}

		[Token(Token = "0x20002A4")]
		public class IAPurchaseListener
		{
			[Token(Token = "0x600104B")]
			[Address(RVA = "0x156E840", Offset = "0x156E840", VA = "0x156E840", Slot = "4")]
			public virtual void OnSuccess(string pchCurrencyName)
			{
			}

			[Token(Token = "0x600104C")]
			[Address(RVA = "0x156E844", Offset = "0x156E844", VA = "0x156E844", Slot = "5")]
			public virtual void OnRequestSuccess(string pchPurchaseId)
			{
			}

			[Token(Token = "0x600104D")]
			[Address(RVA = "0x156E848", Offset = "0x156E848", VA = "0x156E848", Slot = "6")]
			public virtual void OnPurchaseSuccess(string pchPurchaseId)
			{
			}

			[Token(Token = "0x600104E")]
			[Address(RVA = "0x156E84C", Offset = "0x156E84C", VA = "0x156E84C", Slot = "7")]
			public virtual void OnQuerySuccess(QueryResponse response)
			{
			}

			[Token(Token = "0x600104F")]
			[Address(RVA = "0x156E850", Offset = "0x156E850", VA = "0x156E850", Slot = "8")]
			public virtual void OnQuerySuccess(QueryListResponse response)
			{
			}

			[Token(Token = "0x6001050")]
			[Address(RVA = "0x156E854", Offset = "0x156E854", VA = "0x156E854", Slot = "9")]
			public virtual void OnBalanceSuccess(string pchBalance)
			{
			}

			[Token(Token = "0x6001051")]
			[Address(RVA = "0x156E858", Offset = "0x156E858", VA = "0x156E858", Slot = "10")]
			public virtual void OnFailure(int nCode, string pchMessage)
			{
			}

			[Token(Token = "0x6001052")]
			[Address(RVA = "0x156E85C", Offset = "0x156E85C", VA = "0x156E85C", Slot = "11")]
			public virtual void OnRequestSubscriptionSuccess(string pchSubscriptionId)
			{
			}

			[Token(Token = "0x6001053")]
			[Address(RVA = "0x156E860", Offset = "0x156E860", VA = "0x156E860", Slot = "12")]
			public virtual void OnRequestSubscriptionWithPlanIDSuccess(string pchSubscriptionId)
			{
			}

			[Token(Token = "0x6001054")]
			[Address(RVA = "0x156E864", Offset = "0x156E864", VA = "0x156E864", Slot = "13")]
			public virtual void OnSubscribeSuccess(string pchSubscriptionId)
			{
			}

			[Token(Token = "0x6001055")]
			[Address(RVA = "0x156E868", Offset = "0x156E868", VA = "0x156E868", Slot = "14")]
			public virtual void OnQuerySubscriptionSuccess(Subscription[] subscriptionlist)
			{
			}

			[Token(Token = "0x6001056")]
			[Address(RVA = "0x156E86C", Offset = "0x156E86C", VA = "0x156E86C", Slot = "15")]
			public virtual void OnQuerySubscriptionListSuccess(Subscription[] subscriptionlist)
			{
			}

			[Token(Token = "0x6001057")]
			[Address(RVA = "0x156E870", Offset = "0x156E870", VA = "0x156E870", Slot = "16")]
			public virtual void OnCancelSubscriptionSuccess(bool bCanceled)
			{
			}

			[Token(Token = "0x6001058")]
			[Address(RVA = "0x156E874", Offset = "0x156E874", VA = "0x156E874")]
			public IAPurchaseListener()
			{
			}
		}

		[Token(Token = "0x20002A5")]
		public class QueryResponse
		{
			[Token(Token = "0x4000D99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB2474", Offset = "0xCB2474")]
			private string <order_id>k__BackingField;

			[Token(Token = "0x4000D9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB2484", Offset = "0xCB2484")]
			private string <purchase_id>k__BackingField;

			[Token(Token = "0x4000D9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB2494", Offset = "0xCB2494")]
			private string <status>k__BackingField;

			[Token(Token = "0x4000D9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB24A4", Offset = "0xCB24A4")]
			private string <price>k__BackingField;

			[Token(Token = "0x4000D9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB24B4", Offset = "0xCB24B4")]
			private string <currency>k__BackingField;

			[Token(Token = "0x4000D9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB24C4", Offset = "0xCB24C4")]
			private long <paid_timestamp>k__BackingField;

			[Token(Token = "0x17000176")]
			public string order_id
			{
				[Token(Token = "0x6001059")]
				[Address(RVA = "0x156E8AC", Offset = "0x156E8AC", VA = "0x156E8AC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB5F14", Offset = "0xCB5F14")]
				get
				{
					return null;
				}
				[Token(Token = "0x600105A")]
				[Address(RVA = "0x156E8B4", Offset = "0x156E8B4", VA = "0x156E8B4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB5F24", Offset = "0xCB5F24")]
				set
				{
				}
			}

			[Token(Token = "0x17000177")]
			public string purchase_id
			{
				[Token(Token = "0x600105B")]
				[Address(RVA = "0x156E8BC", Offset = "0x156E8BC", VA = "0x156E8BC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB5F34", Offset = "0xCB5F34")]
				get
				{
					return null;
				}
				[Token(Token = "0x600105C")]
				[Address(RVA = "0x156E8C4", Offset = "0x156E8C4", VA = "0x156E8C4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB5F44", Offset = "0xCB5F44")]
				set
				{
				}
			}

			[Token(Token = "0x17000178")]
			public string status
			{
				[Token(Token = "0x600105D")]
				[Address(RVA = "0x156E8CC", Offset = "0x156E8CC", VA = "0x156E8CC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB5F54", Offset = "0xCB5F54")]
				get
				{
					return null;
				}
				[Token(Token = "0x600105E")]
				[Address(RVA = "0x156E8D4", Offset = "0x156E8D4", VA = "0x156E8D4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB5F64", Offset = "0xCB5F64")]
				set
				{
				}
			}

			[Token(Token = "0x17000179")]
			public string price
			{
				[Token(Token = "0x600105F")]
				[Address(RVA = "0x156E8DC", Offset = "0x156E8DC", VA = "0x156E8DC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB5F74", Offset = "0xCB5F74")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001060")]
				[Address(RVA = "0x156E8E4", Offset = "0x156E8E4", VA = "0x156E8E4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB5F84", Offset = "0xCB5F84")]
				set
				{
				}
			}

			[Token(Token = "0x1700017A")]
			public string currency
			{
				[Token(Token = "0x6001061")]
				[Address(RVA = "0x156E8EC", Offset = "0x156E8EC", VA = "0x156E8EC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB5F94", Offset = "0xCB5F94")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001062")]
				[Address(RVA = "0x156E8F4", Offset = "0x156E8F4", VA = "0x156E8F4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB5FA4", Offset = "0xCB5FA4")]
				set
				{
				}
			}

			[Token(Token = "0x1700017B")]
			public long paid_timestamp
			{
				[Token(Token = "0x6001063")]
				[Address(RVA = "0x156E8FC", Offset = "0x156E8FC", VA = "0x156E8FC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB5FB4", Offset = "0xCB5FB4")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x6001064")]
				[Address(RVA = "0x156E904", Offset = "0x156E904", VA = "0x156E904")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB5FC4", Offset = "0xCB5FC4")]
				set
				{
				}
			}

			[Token(Token = "0x6001065")]
			[Address(RVA = "0x156B348", Offset = "0x156B348", VA = "0x156B348")]
			public QueryResponse()
			{
			}
		}

		[Token(Token = "0x20002A6")]
		public class QueryResponse2
		{
			[Token(Token = "0x4000D9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB24D4", Offset = "0xCB24D4")]
			private string <order_id>k__BackingField;

			[Token(Token = "0x4000DA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB24E4", Offset = "0xCB24E4")]
			private string <app_id>k__BackingField;

			[Token(Token = "0x4000DA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB24F4", Offset = "0xCB24F4")]
			private string <purchase_id>k__BackingField;

			[Token(Token = "0x4000DA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB2504", Offset = "0xCB2504")]
			private string <user_data>k__BackingField;

			[Token(Token = "0x4000DA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB2514", Offset = "0xCB2514")]
			private string <price>k__BackingField;

			[Token(Token = "0x4000DA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB2524", Offset = "0xCB2524")]
			private string <currency>k__BackingField;

			[Token(Token = "0x4000DA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB2534", Offset = "0xCB2534")]
			private long <paid_timestamp>k__BackingField;

			[Token(Token = "0x1700017C")]
			public string order_id
			{
				[Token(Token = "0x6001066")]
				[Address(RVA = "0x156E90C", Offset = "0x156E90C", VA = "0x156E90C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB5FD4", Offset = "0xCB5FD4")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001067")]
				[Address(RVA = "0x156E914", Offset = "0x156E914", VA = "0x156E914")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB5FE4", Offset = "0xCB5FE4")]
				set
				{
				}
			}

			[Token(Token = "0x1700017D")]
			public string app_id
			{
				[Token(Token = "0x6001068")]
				[Address(RVA = "0x156E91C", Offset = "0x156E91C", VA = "0x156E91C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB5FF4", Offset = "0xCB5FF4")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001069")]
				[Address(RVA = "0x156E924", Offset = "0x156E924", VA = "0x156E924")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB6004", Offset = "0xCB6004")]
				set
				{
				}
			}

			[Token(Token = "0x1700017E")]
			public string purchase_id
			{
				[Token(Token = "0x600106A")]
				[Address(RVA = "0x156E92C", Offset = "0x156E92C", VA = "0x156E92C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB6014", Offset = "0xCB6014")]
				get
				{
					return null;
				}
				[Token(Token = "0x600106B")]
				[Address(RVA = "0x156E934", Offset = "0x156E934", VA = "0x156E934")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB6024", Offset = "0xCB6024")]
				set
				{
				}
			}

			[Token(Token = "0x1700017F")]
			public string user_data
			{
				[Token(Token = "0x600106C")]
				[Address(RVA = "0x156E93C", Offset = "0x156E93C", VA = "0x156E93C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB6034", Offset = "0xCB6034")]
				get
				{
					return null;
				}
				[Token(Token = "0x600106D")]
				[Address(RVA = "0x156E944", Offset = "0x156E944", VA = "0x156E944")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB6044", Offset = "0xCB6044")]
				set
				{
				}
			}

			[Token(Token = "0x17000180")]
			public string price
			{
				[Token(Token = "0x600106E")]
				[Address(RVA = "0x156E94C", Offset = "0x156E94C", VA = "0x156E94C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB6054", Offset = "0xCB6054")]
				get
				{
					return null;
				}
				[Token(Token = "0x600106F")]
				[Address(RVA = "0x156E954", Offset = "0x156E954", VA = "0x156E954")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB6064", Offset = "0xCB6064")]
				set
				{
				}
			}

			[Token(Token = "0x17000181")]
			public string currency
			{
				[Token(Token = "0x6001070")]
				[Address(RVA = "0x156E95C", Offset = "0x156E95C", VA = "0x156E95C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB6074", Offset = "0xCB6074")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001071")]
				[Address(RVA = "0x156E964", Offset = "0x156E964", VA = "0x156E964")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB6084", Offset = "0xCB6084")]
				set
				{
				}
			}

			[Token(Token = "0x17000182")]
			public long paid_timestamp
			{
				[Token(Token = "0x6001072")]
				[Address(RVA = "0x156E96C", Offset = "0x156E96C", VA = "0x156E96C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB6094", Offset = "0xCB6094")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x6001073")]
				[Address(RVA = "0x156E974", Offset = "0x156E974", VA = "0x156E974")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB60A4", Offset = "0xCB60A4")]
				set
				{
				}
			}

			[Token(Token = "0x6001074")]
			[Address(RVA = "0x156C284", Offset = "0x156C284", VA = "0x156C284")]
			public QueryResponse2()
			{
			}
		}

		[Token(Token = "0x20002A7")]
		public class QueryListResponse
		{
			[Token(Token = "0x4000DA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB2544", Offset = "0xCB2544")]
			private int <total>k__BackingField;

			[Token(Token = "0x4000DA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB2554", Offset = "0xCB2554")]
			private int <from>k__BackingField;

			[Token(Token = "0x4000DA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB2564", Offset = "0xCB2564")]
			private int <to>k__BackingField;

			[Token(Token = "0x4000DA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<QueryResponse2> purchaseList;

			[Token(Token = "0x17000183")]
			public int total
			{
				[Token(Token = "0x6001075")]
				[Address(RVA = "0x156E87C", Offset = "0x156E87C", VA = "0x156E87C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB60B4", Offset = "0xCB60B4")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6001076")]
				[Address(RVA = "0x156E884", Offset = "0x156E884", VA = "0x156E884")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB60C4", Offset = "0xCB60C4")]
				set
				{
				}
			}

			[Token(Token = "0x17000184")]
			public int from
			{
				[Token(Token = "0x6001077")]
				[Address(RVA = "0x156E88C", Offset = "0x156E88C", VA = "0x156E88C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB60D4", Offset = "0xCB60D4")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6001078")]
				[Address(RVA = "0x156E894", Offset = "0x156E894", VA = "0x156E894")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB60E4", Offset = "0xCB60E4")]
				set
				{
				}
			}

			[Token(Token = "0x17000185")]
			public int to
			{
				[Token(Token = "0x6001079")]
				[Address(RVA = "0x156E89C", Offset = "0x156E89C", VA = "0x156E89C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB60F4", Offset = "0xCB60F4")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x600107A")]
				[Address(RVA = "0x156E8A4", Offset = "0x156E8A4", VA = "0x156E8A4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB6104", Offset = "0xCB6104")]
				set
				{
				}
			}

			[Token(Token = "0x600107B")]
			[Address(RVA = "0x156C28C", Offset = "0x156C28C", VA = "0x156C28C")]
			public QueryListResponse()
			{
			}
		}

		[Token(Token = "0x20002A8")]
		public class StatusDetailTransaction
		{
			[Token(Token = "0x4000DAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB2574", Offset = "0xCB2574")]
			private long <create_time>k__BackingField;

			[Token(Token = "0x4000DAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB2584", Offset = "0xCB2584")]
			private string <payment_method>k__BackingField;

			[Token(Token = "0x4000DAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB2594", Offset = "0xCB2594")]
			private string <status>k__BackingField;

			[Token(Token = "0x17000186")]
			public long create_time
			{
				[Token(Token = "0x600107C")]
				[Address(RVA = "0x156E9EC", Offset = "0x156E9EC", VA = "0x156E9EC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB6114", Offset = "0xCB6114")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x600107D")]
				[Address(RVA = "0x156E9F4", Offset = "0x156E9F4", VA = "0x156E9F4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB6124", Offset = "0xCB6124")]
				set
				{
				}
			}

			[Token(Token = "0x17000187")]
			public string payment_method
			{
				[Token(Token = "0x600107E")]
				[Address(RVA = "0x156E9FC", Offset = "0x156E9FC", VA = "0x156E9FC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB6134", Offset = "0xCB6134")]
				get
				{
					return null;
				}
				[Token(Token = "0x600107F")]
				[Address(RVA = "0x156EA04", Offset = "0x156EA04", VA = "0x156EA04")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB6144", Offset = "0xCB6144")]
				set
				{
				}
			}

			[Token(Token = "0x17000188")]
			public string status
			{
				[Token(Token = "0x6001080")]
				[Address(RVA = "0x156EA0C", Offset = "0x156EA0C", VA = "0x156EA0C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB6154", Offset = "0xCB6154")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001081")]
				[Address(RVA = "0x156EA14", Offset = "0x156EA14", VA = "0x156EA14")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB6164", Offset = "0xCB6164")]
				set
				{
				}
			}

			[Token(Token = "0x6001082")]
			[Address(RVA = "0x156EA1C", Offset = "0x156EA1C", VA = "0x156EA1C")]
			public StatusDetailTransaction()
			{
			}
		}

		[Token(Token = "0x20002A9")]
		public class StatusDetail
		{
			[Token(Token = "0x4000DAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB25A4", Offset = "0xCB25A4")]
			private long <date_next_charge>k__BackingField;

			[Token(Token = "0x4000DAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB25B4", Offset = "0xCB25B4")]
			private StatusDetailTransaction[] <transactions>k__BackingField;

			[Token(Token = "0x4000DAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB25C4", Offset = "0xCB25C4")]
			private string <cancel_reason>k__BackingField;

			[Token(Token = "0x17000189")]
			public long date_next_charge
			{
				[Token(Token = "0x6001083")]
				[Address(RVA = "0x156E9B4", Offset = "0x156E9B4", VA = "0x156E9B4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB6174", Offset = "0xCB6174")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x6001084")]
				[Address(RVA = "0x156E9BC", Offset = "0x156E9BC", VA = "0x156E9BC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB6184", Offset = "0xCB6184")]
				set
				{
				}
			}

			[Token(Token = "0x1700018A")]
			public StatusDetailTransaction[] transactions
			{
				[Token(Token = "0x6001085")]
				[Address(RVA = "0x156E9C4", Offset = "0x156E9C4", VA = "0x156E9C4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB6194", Offset = "0xCB6194")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001086")]
				[Address(RVA = "0x156E9CC", Offset = "0x156E9CC", VA = "0x156E9CC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB61A4", Offset = "0xCB61A4")]
				set
				{
				}
			}

			[Token(Token = "0x1700018B")]
			public string cancel_reason
			{
				[Token(Token = "0x6001087")]
				[Address(RVA = "0x156E9D4", Offset = "0x156E9D4", VA = "0x156E9D4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB61B4", Offset = "0xCB61B4")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001088")]
				[Address(RVA = "0x156E9DC", Offset = "0x156E9DC", VA = "0x156E9DC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB61C4", Offset = "0xCB61C4")]
				set
				{
				}
			}

			[Token(Token = "0x6001089")]
			[Address(RVA = "0x156E9E4", Offset = "0x156E9E4", VA = "0x156E9E4")]
			public StatusDetail()
			{
			}
		}

		[Token(Token = "0x20002AA")]
		public class TimePeriod
		{
			[Token(Token = "0x4000DB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB25D4", Offset = "0xCB25D4")]
			private string <time_type>k__BackingField;

			[Token(Token = "0x4000DB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB25E4", Offset = "0xCB25E4")]
			private int <value>k__BackingField;

			[Token(Token = "0x1700018C")]
			public string time_type
			{
				[Token(Token = "0x600108A")]
				[Address(RVA = "0x156EAFC", Offset = "0x156EAFC", VA = "0x156EAFC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB61D4", Offset = "0xCB61D4")]
				get
				{
					return null;
				}
				[Token(Token = "0x600108B")]
				[Address(RVA = "0x156EB04", Offset = "0x156EB04", VA = "0x156EB04")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB61E4", Offset = "0xCB61E4")]
				set
				{
				}
			}

			[Token(Token = "0x1700018D")]
			public int value
			{
				[Token(Token = "0x600108C")]
				[Address(RVA = "0x156EB0C", Offset = "0x156EB0C", VA = "0x156EB0C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB61F4", Offset = "0xCB61F4")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x600108D")]
				[Address(RVA = "0x156EB14", Offset = "0x156EB14", VA = "0x156EB14")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB6204", Offset = "0xCB6204")]
				set
				{
				}
			}

			[Token(Token = "0x600108E")]
			[Address(RVA = "0x156EB1C", Offset = "0x156EB1C", VA = "0x156EB1C")]
			public TimePeriod()
			{
			}
		}

		[Token(Token = "0x20002AB")]
		public class Subscription
		{
			[Token(Token = "0x4000DB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB25F4", Offset = "0xCB25F4")]
			private string <app_id>k__BackingField;

			[Token(Token = "0x4000DB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB2604", Offset = "0xCB2604")]
			private string <order_id>k__BackingField;

			[Token(Token = "0x4000DB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB2614", Offset = "0xCB2614")]
			private string <subscription_id>k__BackingField;

			[Token(Token = "0x4000DB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB2624", Offset = "0xCB2624")]
			private string <price>k__BackingField;

			[Token(Token = "0x4000DB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB2634", Offset = "0xCB2634")]
			private string <currency>k__BackingField;

			[Token(Token = "0x4000DB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB2644", Offset = "0xCB2644")]
			private long <subscribed_timestamp>k__BackingField;

			[Token(Token = "0x4000DB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB2654", Offset = "0xCB2654")]
			private TimePeriod <free_trial_period>k__BackingField;

			[Token(Token = "0x4000DB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB2664", Offset = "0xCB2664")]
			private TimePeriod <charge_period>k__BackingField;

			[Token(Token = "0x4000DBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB2674", Offset = "0xCB2674")]
			private int <number_of_charge_period>k__BackingField;

			[Token(Token = "0x4000DBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB2684", Offset = "0xCB2684")]
			private string <plan_id>k__BackingField;

			[Token(Token = "0x4000DBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB2694", Offset = "0xCB2694")]
			private string <plan_name>k__BackingField;

			[Token(Token = "0x4000DBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB26A4", Offset = "0xCB26A4")]
			private string <status>k__BackingField;

			[Token(Token = "0x4000DBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB26B4", Offset = "0xCB26B4")]
			private StatusDetail <status_detail>k__BackingField;

			[Token(Token = "0x1700018E")]
			public string app_id
			{
				[Token(Token = "0x600108F")]
				[Address(RVA = "0x156EA24", Offset = "0x156EA24", VA = "0x156EA24")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB6214", Offset = "0xCB6214")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001090")]
				[Address(RVA = "0x156EA2C", Offset = "0x156EA2C", VA = "0x156EA2C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB6224", Offset = "0xCB6224")]
				set
				{
				}
			}

			[Token(Token = "0x1700018F")]
			public string order_id
			{
				[Token(Token = "0x6001091")]
				[Address(RVA = "0x156EA34", Offset = "0x156EA34", VA = "0x156EA34")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB6234", Offset = "0xCB6234")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001092")]
				[Address(RVA = "0x156EA3C", Offset = "0x156EA3C", VA = "0x156EA3C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB6244", Offset = "0xCB6244")]
				set
				{
				}
			}

			[Token(Token = "0x17000190")]
			public string subscription_id
			{
				[Token(Token = "0x6001093")]
				[Address(RVA = "0x156EA44", Offset = "0x156EA44", VA = "0x156EA44")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB6254", Offset = "0xCB6254")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001094")]
				[Address(RVA = "0x156EA4C", Offset = "0x156EA4C", VA = "0x156EA4C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB6264", Offset = "0xCB6264")]
				set
				{
				}
			}

			[Token(Token = "0x17000191")]
			public string price
			{
				[Token(Token = "0x6001095")]
				[Address(RVA = "0x156EA54", Offset = "0x156EA54", VA = "0x156EA54")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB6274", Offset = "0xCB6274")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001096")]
				[Address(RVA = "0x156EA5C", Offset = "0x156EA5C", VA = "0x156EA5C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB6284", Offset = "0xCB6284")]
				set
				{
				}
			}

			[Token(Token = "0x17000192")]
			public string currency
			{
				[Token(Token = "0x6001097")]
				[Address(RVA = "0x156EA64", Offset = "0x156EA64", VA = "0x156EA64")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB6294", Offset = "0xCB6294")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001098")]
				[Address(RVA = "0x156EA6C", Offset = "0x156EA6C", VA = "0x156EA6C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB62A4", Offset = "0xCB62A4")]
				set
				{
				}
			}

			[Token(Token = "0x17000193")]
			public long subscribed_timestamp
			{
				[Token(Token = "0x6001099")]
				[Address(RVA = "0x156EA74", Offset = "0x156EA74", VA = "0x156EA74")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB62B4", Offset = "0xCB62B4")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x600109A")]
				[Address(RVA = "0x156EA7C", Offset = "0x156EA7C", VA = "0x156EA7C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB62C4", Offset = "0xCB62C4")]
				set
				{
				}
			}

			[Token(Token = "0x17000194")]
			public TimePeriod free_trial_period
			{
				[Token(Token = "0x600109B")]
				[Address(RVA = "0x156EA84", Offset = "0x156EA84", VA = "0x156EA84")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB62D4", Offset = "0xCB62D4")]
				get
				{
					return null;
				}
				[Token(Token = "0x600109C")]
				[Address(RVA = "0x156EA8C", Offset = "0x156EA8C", VA = "0x156EA8C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB62E4", Offset = "0xCB62E4")]
				set
				{
				}
			}

			[Token(Token = "0x17000195")]
			public TimePeriod charge_period
			{
				[Token(Token = "0x600109D")]
				[Address(RVA = "0x156EA94", Offset = "0x156EA94", VA = "0x156EA94")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB62F4", Offset = "0xCB62F4")]
				get
				{
					return null;
				}
				[Token(Token = "0x600109E")]
				[Address(RVA = "0x156EA9C", Offset = "0x156EA9C", VA = "0x156EA9C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB6304", Offset = "0xCB6304")]
				set
				{
				}
			}

			[Token(Token = "0x17000196")]
			public int number_of_charge_period
			{
				[Token(Token = "0x600109F")]
				[Address(RVA = "0x156EAA4", Offset = "0x156EAA4", VA = "0x156EAA4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB6314", Offset = "0xCB6314")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60010A0")]
				[Address(RVA = "0x156EAAC", Offset = "0x156EAAC", VA = "0x156EAAC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB6324", Offset = "0xCB6324")]
				set
				{
				}
			}

			[Token(Token = "0x17000197")]
			public string plan_id
			{
				[Token(Token = "0x60010A1")]
				[Address(RVA = "0x156EAB4", Offset = "0x156EAB4", VA = "0x156EAB4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB6334", Offset = "0xCB6334")]
				get
				{
					return null;
				}
				[Token(Token = "0x60010A2")]
				[Address(RVA = "0x156EABC", Offset = "0x156EABC", VA = "0x156EABC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB6344", Offset = "0xCB6344")]
				set
				{
				}
			}

			[Token(Token = "0x17000198")]
			public string plan_name
			{
				[Token(Token = "0x60010A3")]
				[Address(RVA = "0x156EAC4", Offset = "0x156EAC4", VA = "0x156EAC4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB6354", Offset = "0xCB6354")]
				get
				{
					return null;
				}
				[Token(Token = "0x60010A4")]
				[Address(RVA = "0x156EACC", Offset = "0x156EACC", VA = "0x156EACC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB6364", Offset = "0xCB6364")]
				set
				{
				}
			}

			[Token(Token = "0x17000199")]
			public string status
			{
				[Token(Token = "0x60010A5")]
				[Address(RVA = "0x156EAD4", Offset = "0x156EAD4", VA = "0x156EAD4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB6374", Offset = "0xCB6374")]
				get
				{
					return null;
				}
				[Token(Token = "0x60010A6")]
				[Address(RVA = "0x156EADC", Offset = "0x156EADC", VA = "0x156EADC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB6384", Offset = "0xCB6384")]
				set
				{
				}
			}

			[Token(Token = "0x1700019A")]
			public StatusDetail status_detail
			{
				[Token(Token = "0x60010A7")]
				[Address(RVA = "0x156EAE4", Offset = "0x156EAE4", VA = "0x156EAE4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB6394", Offset = "0xCB6394")]
				get
				{
					return null;
				}
				[Token(Token = "0x60010A8")]
				[Address(RVA = "0x156EAEC", Offset = "0x156EAEC", VA = "0x156EAEC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB63A4", Offset = "0xCB63A4")]
				set
				{
				}
			}

			[Token(Token = "0x60010A9")]
			[Address(RVA = "0x156EAF4", Offset = "0x156EAF4", VA = "0x156EAF4")]
			public Subscription()
			{
			}
		}

		[Token(Token = "0x20002AC")]
		public class QuerySubscritionResponse
		{
			[Token(Token = "0x4000DBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB26C4", Offset = "0xCB26C4")]
			private int <statusCode>k__BackingField;

			[Token(Token = "0x4000DC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB26D4", Offset = "0xCB26D4")]
			private string <message>k__BackingField;

			[Token(Token = "0x4000DC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB26E4", Offset = "0xCB26E4")]
			private List<Subscription> <subscriptions>k__BackingField;

			[Token(Token = "0x1700019B")]
			public int statusCode
			{
				[Token(Token = "0x60010AA")]
				[Address(RVA = "0x156E97C", Offset = "0x156E97C", VA = "0x156E97C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB63B4", Offset = "0xCB63B4")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60010AB")]
				[Address(RVA = "0x156E984", Offset = "0x156E984", VA = "0x156E984")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB63C4", Offset = "0xCB63C4")]
				set
				{
				}
			}

			[Token(Token = "0x1700019C")]
			public string message
			{
				[Token(Token = "0x60010AC")]
				[Address(RVA = "0x156E98C", Offset = "0x156E98C", VA = "0x156E98C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB63D4", Offset = "0xCB63D4")]
				get
				{
					return null;
				}
				[Token(Token = "0x60010AD")]
				[Address(RVA = "0x156E994", Offset = "0x156E994", VA = "0x156E994")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB63E4", Offset = "0xCB63E4")]
				set
				{
				}
			}

			[Token(Token = "0x1700019D")]
			public List<Subscription> subscriptions
			{
				[Token(Token = "0x60010AE")]
				[Address(RVA = "0x156E99C", Offset = "0x156E99C", VA = "0x156E99C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB63F4", Offset = "0xCB63F4")]
				get
				{
					return null;
				}
				[Token(Token = "0x60010AF")]
				[Address(RVA = "0x156E9A4", Offset = "0x156E9A4", VA = "0x156E9A4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB6404", Offset = "0xCB6404")]
				set
				{
				}
			}

			[Token(Token = "0x60010B0")]
			[Address(RVA = "0x156E9AC", Offset = "0x156E9AC", VA = "0x156E9AC")]
			public QuerySubscritionResponse()
			{
			}
		}

		[Token(Token = "0x40001ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IAPurchaseCallback isReadyIl2cppCallback;

		[Token(Token = "0x40001EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IAPurchaseCallback request01Il2cppCallback;

		[Token(Token = "0x40001EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IAPurchaseCallback request02Il2cppCallback;

		[Token(Token = "0x40001F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IAPurchaseCallback purchaseIl2cppCallback;

		[Token(Token = "0x40001F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static IAPurchaseCallback query01Il2cppCallback;

		[Token(Token = "0x40001F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static IAPurchaseCallback query02Il2cppCallback;

		[Token(Token = "0x40001F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static IAPurchaseCallback getBalanceIl2cppCallback;

		[Token(Token = "0x40001F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static IAPurchaseCallback requestSubscriptionIl2cppCallback;

		[Token(Token = "0x40001F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static IAPurchaseCallback requestSubscriptionWithPlanIDIl2cppCallback;

		[Token(Token = "0x40001F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static IAPurchaseCallback subscribeIl2cppCallback;

		[Token(Token = "0x40001F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static IAPurchaseCallback querySubscriptionIl2cppCallback;

		[Token(Token = "0x40001F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static IAPurchaseCallback querySubscriptionListIl2cppCallback;

		[Token(Token = "0x40001F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private static IAPurchaseCallback cancelSubscriptionIl2cppCallback;

		[Token(Token = "0x600051D")]
		[Address(RVA = "0x1566AE8", Offset = "0x1566AE8", VA = "0x1566AE8")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xCB3CD8", Offset = "0xCB3CD8")]
		private static void IsReadyIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x600051E")]
		[Address(RVA = "0x1567320", Offset = "0x1567320", VA = "0x1567320")]
		public static void IsReady(IAPurchaseListener listener, string pchAppKey)
		{
		}

		[Token(Token = "0x600051F")]
		[Address(RVA = "0x1566B58", Offset = "0x1566B58", VA = "0x1566B58")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xCB3D3C", Offset = "0xCB3D3C")]
		private static void Request01Il2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6000520")]
		[Address(RVA = "0x156766C", Offset = "0x156766C", VA = "0x156766C")]
		public static void Request(IAPurchaseListener listener, string pchPrice)
		{
		}

		[Token(Token = "0x6000521")]
		[Address(RVA = "0x1566BC8", Offset = "0x1566BC8", VA = "0x1566BC8")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xCB3DA0", Offset = "0xCB3DA0")]
		private static void Request02Il2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6000522")]
		[Address(RVA = "0x1567934", Offset = "0x1567934", VA = "0x1567934")]
		public static void Request(IAPurchaseListener listener, string pchPrice, string pchUserData)
		{
		}

		[Token(Token = "0x6000523")]
		[Address(RVA = "0x1566C38", Offset = "0x1566C38", VA = "0x1566C38")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xCB3E04", Offset = "0xCB3E04")]
		private static void PurchaseIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6000524")]
		[Address(RVA = "0x1567BBC", Offset = "0x1567BBC", VA = "0x1567BBC")]
		public static void Purchase(IAPurchaseListener listener, string pchPurchaseId)
		{
		}

		[Token(Token = "0x6000525")]
		[Address(RVA = "0x1566CA8", Offset = "0x1566CA8", VA = "0x1566CA8")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xCB3E68", Offset = "0xCB3E68")]
		private static void Query01Il2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6000526")]
		[Address(RVA = "0x1567E84", Offset = "0x1567E84", VA = "0x1567E84")]
		public static void Query(IAPurchaseListener listener, string pchPurchaseId)
		{
		}

		[Token(Token = "0x6000527")]
		[Address(RVA = "0x1566D18", Offset = "0x1566D18", VA = "0x1566D18")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xCB3ECC", Offset = "0xCB3ECC")]
		private static void Query02Il2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6000528")]
		[Address(RVA = "0x156814C", Offset = "0x156814C", VA = "0x156814C")]
		public static void Query(IAPurchaseListener listener)
		{
		}

		[Token(Token = "0x6000529")]
		[Address(RVA = "0x1566D88", Offset = "0x1566D88", VA = "0x1566D88")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xCB3F30", Offset = "0xCB3F30")]
		private static void GetBalanceIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x600052A")]
		[Address(RVA = "0x15683C4", Offset = "0x15683C4", VA = "0x15683C4")]
		public static void GetBalance(IAPurchaseListener listener)
		{
		}

		[Token(Token = "0x600052B")]
		[Address(RVA = "0x1566DF8", Offset = "0x1566DF8", VA = "0x1566DF8")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xCB3F94", Offset = "0xCB3F94")]
		private static void RequestSubscriptionIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x600052C")]
		[Address(RVA = "0x156863C", Offset = "0x156863C", VA = "0x156863C")]
		public static void RequestSubscription(IAPurchaseListener listener, string pchPrice, string pchFreeTrialType, int nFreeTrialValue, string pchChargePeriodType, int nChargePeriodValue, int nNumberOfChargePeriod, string pchPlanId)
		{
		}

		[Token(Token = "0x600052D")]
		[Address(RVA = "0x1566E68", Offset = "0x1566E68", VA = "0x1566E68")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xCB3FF8", Offset = "0xCB3FF8")]
		private static void RequestSubscriptionWithPlanIDIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x600052E")]
		[Address(RVA = "0x1568B00", Offset = "0x1568B00", VA = "0x1568B00")]
		public static void RequestSubscriptionWithPlanID(IAPurchaseListener listener, string pchPlanId)
		{
		}

		[Token(Token = "0x600052F")]
		[Address(RVA = "0x1566ED8", Offset = "0x1566ED8", VA = "0x1566ED8")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xCB405C", Offset = "0xCB405C")]
		private static void SubscribeIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6000530")]
		[Address(RVA = "0x1568DC8", Offset = "0x1568DC8", VA = "0x1568DC8")]
		public static void Subscribe(IAPurchaseListener listener, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6000531")]
		[Address(RVA = "0x1566F48", Offset = "0x1566F48", VA = "0x1566F48")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xCB40C0", Offset = "0xCB40C0")]
		private static void QuerySubscriptionIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6000532")]
		[Address(RVA = "0x1569090", Offset = "0x1569090", VA = "0x1569090")]
		public static void QuerySubscription(IAPurchaseListener listener, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6000533")]
		[Address(RVA = "0x1566FB8", Offset = "0x1566FB8", VA = "0x1566FB8")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xCB4124", Offset = "0xCB4124")]
		private static void QuerySubscriptionListIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6000534")]
		[Address(RVA = "0x1569358", Offset = "0x1569358", VA = "0x1569358")]
		public static void QuerySubscriptionList(IAPurchaseListener listener)
		{
		}

		[Token(Token = "0x6000535")]
		[Address(RVA = "0x1567028", Offset = "0x1567028", VA = "0x1567028")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xCB4188", Offset = "0xCB4188")]
		private static void CancelSubscriptionIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6000536")]
		[Address(RVA = "0x15695D0", Offset = "0x15695D0", VA = "0x15695D0")]
		public static void CancelSubscription(IAPurchaseListener listener, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6000537")]
		[Address(RVA = "0x1569898", Offset = "0x1569898", VA = "0x1569898")]
		public IAPurchase()
		{
		}
	}
	[Token(Token = "0x2000052")]
	public class DLC
	{
		[Token(Token = "0x6000538")]
		[Address(RVA = "0x1565F84", Offset = "0x1565F84", VA = "0x1565F84")]
		public DLC()
		{
		}
	}
	[Token(Token = "0x2000053")]
	public class Subscription
	{
		[Token(Token = "0x40001FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Viveport.Internal.StatusCallback2 isReadyIl2cppCallback;

		[Token(Token = "0x6000539")]
		[Address(RVA = "0x1573FAC", Offset = "0x1573FAC", VA = "0x1573FAC")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xCB41EC", Offset = "0xCB41EC")]
		private static void IsReadyIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x600053A")]
		[Address(RVA = "0x157401C", Offset = "0x157401C", VA = "0x157401C")]
		public static void IsReady(StatusCallback2 callback)
		{
		}

		[Token(Token = "0x600053B")]
		[Address(RVA = "0x15741A0", Offset = "0x15741A0", VA = "0x15741A0")]
		public static SubscriptionStatus GetUserStatus()
		{
			return null;
		}

		[Token(Token = "0x600053C")]
		[Address(RVA = "0x1574324", Offset = "0x1574324", VA = "0x1574324")]
		public Subscription()
		{
		}
	}
	[Token(Token = "0x2000054")]
	public class Deeplink
	{
		[Token(Token = "0x20002AD")]
		public abstract class DeeplinkChecker
		{
			[Token(Token = "0x60010B1")]
			public abstract void OnSuccess();

			[Token(Token = "0x60010B2")]
			public abstract void OnFailure(int errorCode, string errorMessage);

			[Token(Token = "0x60010B3")]
			[Address(RVA = "0x1566AE0", Offset = "0x1566AE0", VA = "0x1566AE0")]
			protected DeeplinkChecker()
			{
			}
		}

		[Token(Token = "0x40001FB")]
		private const int MaxIdLength = 256;

		[Token(Token = "0x40001FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Viveport.Internal.StatusCallback isReadyIl2cppCallback;

		[Token(Token = "0x40001FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Viveport.Internal.StatusCallback2 goToAppIl2cppCallback;

		[Token(Token = "0x40001FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Viveport.Internal.StatusCallback2 goToAppWithBranchNameIl2cppCallback;

		[Token(Token = "0x40001FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Viveport.Internal.StatusCallback2 goToStoreIl2cppCallback;

		[Token(Token = "0x4000200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Viveport.Internal.StatusCallback2 goToAppOrGoToStoreIl2cppCallback;

		[Token(Token = "0x600053D")]
		[Address(RVA = "0x1565F8C", Offset = "0x1565F8C", VA = "0x1565F8C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xCB4250", Offset = "0xCB4250")]
		private static void IsReadyIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x600053E")]
		[Address(RVA = "0x1565FEC", Offset = "0x1565FEC", VA = "0x1565FEC")]
		public static void IsReady(StatusCallback callback)
		{
		}

		[Token(Token = "0x600053F")]
		[Address(RVA = "0x1566268", Offset = "0x1566268", VA = "0x1566268")]
		public static void GoToApp(DeeplinkChecker checker, string appId, string launchData)
		{
		}

		[Token(Token = "0x6000540")]
		[Address(RVA = "0x15664CC", Offset = "0x15664CC", VA = "0x15664CC")]
		public static void GoToApp(DeeplinkChecker checker, string appId, string launchData, string branchName)
		{
		}

		[Token(Token = "0x6000541")]
		[Address(RVA = "0x1566588", Offset = "0x1566588", VA = "0x1566588")]
		public static void GoToStore(DeeplinkChecker checker, string appId = "")
		{
		}

		[Token(Token = "0x6000542")]
		[Address(RVA = "0x156678C", Offset = "0x156678C", VA = "0x156678C")]
		public static void GoToAppOrGoToStore(DeeplinkChecker checker, string appId, string launchData)
		{
		}

		[Token(Token = "0x6000543")]
		[Address(RVA = "0x15669F0", Offset = "0x15669F0", VA = "0x15669F0")]
		public static string GetAppLaunchData()
		{
			return null;
		}

		[Token(Token = "0x6000544")]
		[Address(RVA = "0x1566AD8", Offset = "0x1566AD8", VA = "0x1566AD8")]
		public Deeplink()
		{
		}
	}
	[Token(Token = "0x2000055")]
	internal class Token
	{
		[Token(Token = "0x6000545")]
		[Address(RVA = "0x157434C", Offset = "0x157434C", VA = "0x157434C")]
		public Token()
		{
		}
	}
}
namespace Viveport.Internal
{
	[Token(Token = "0x2000056")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCA809C", Offset = "0xCA809C")]
	internal delegate void GetLicenseCallback(string message, string signature);
	[Token(Token = "0x2000057")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCA80B0", Offset = "0xCA80B0")]
	internal delegate void StatusCallback(int nResult);
	[Token(Token = "0x2000058")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCA80C4", Offset = "0xCA80C4")]
	internal delegate void StatusCallback2(int nResult, string message);
	[Token(Token = "0x2000059")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCA80D8", Offset = "0xCA80D8")]
	internal delegate void QueryRuntimeModeCallback(int nResult, int nMode);
	[Token(Token = "0x200005A")]
	internal enum ELeaderboardDataRequest
	{
		[Token(Token = "0x4000202")]
		k_ELeaderboardDataRequestGlobal,
		[Token(Token = "0x4000203")]
		k_ELeaderboardDataRequestGlobalAroundUser,
		[Token(Token = "0x4000204")]
		k_ELeaderboardDataRequestLocal,
		[Token(Token = "0x4000205")]
		k_ELeaderboardDataRequestLocaleAroundUser
	}
	[Token(Token = "0x200005B")]
	internal enum ELeaderboardDataTimeRange
	{
		[Token(Token = "0x4000207")]
		k_ELeaderboardDataScropeAllTime,
		[Token(Token = "0x4000208")]
		k_ELeaderboardDataScropeDaily,
		[Token(Token = "0x4000209")]
		k_ELeaderboardDataScropeWeekly,
		[Token(Token = "0x400020A")]
		k_ELeaderboardDataScropeMonthly
	}
	[Token(Token = "0x200005C")]
	internal enum ELeaderboardSortMethod
	{
		[Token(Token = "0x400020C")]
		k_ELeaderboardSortMethodNone,
		[Token(Token = "0x400020D")]
		k_ELeaderboardSortMethodAscending,
		[Token(Token = "0x400020E")]
		k_ELeaderboardSortMethodDescending
	}
	[Token(Token = "0x200005D")]
	internal enum ELeaderboardDisplayType
	{
		[Token(Token = "0x4000210")]
		k_ELeaderboardDisplayTypeNone,
		[Token(Token = "0x4000211")]
		k_ELeaderboardDisplayTypeNumeric,
		[Token(Token = "0x4000212")]
		k_ELeaderboardDisplayTypeTimeSeconds,
		[Token(Token = "0x4000213")]
		k_ELeaderboardDisplayTypeTimeMilliSeconds
	}
	[Token(Token = "0x200005E")]
	internal enum ELeaderboardUploadScoreMethod
	{
		[Token(Token = "0x4000215")]
		k_ELeaderboardUploadScoreMethodNone,
		[Token(Token = "0x4000216")]
		k_ELeaderboardUploadScoreMethodKeepBest,
		[Token(Token = "0x4000217")]
		k_ELeaderboardUploadScoreMethodForceUpdate
	}
	[Token(Token = "0x200005F")]
	internal enum ESubscriptionTransactionType
	{
		[Token(Token = "0x4000219")]
		UNKNOWN,
		[Token(Token = "0x400021A")]
		PAID,
		[Token(Token = "0x400021B")]
		REDEEM,
		[Token(Token = "0x400021C")]
		FREEE_TRIAL
	}
	[Token(Token = "0x2000060")]
	internal enum ELocale
	{
		[Token(Token = "0x400021E")]
		k_ELocaleUS,
		[Token(Token = "0x400021F")]
		k_ELocaleDE,
		[Token(Token = "0x4000220")]
		k_ELocaleJP,
		[Token(Token = "0x4000221")]
		k_ELocaleKR,
		[Token(Token = "0x4000222")]
		k_ELocaleRU,
		[Token(Token = "0x4000223")]
		k_ELocaleCN,
		[Token(Token = "0x4000224")]
		k_ELocaleTW,
		[Token(Token = "0x4000225")]
		k_ELocaleFR
	}
	[Token(Token = "0x2000061")]
	internal enum EAchievementDisplayAttribute
	{
		[Token(Token = "0x4000227")]
		k_EAchievementDisplayAttributeName,
		[Token(Token = "0x4000228")]
		k_EAchievementDisplayAttributeDesc,
		[Token(Token = "0x4000229")]
		k_EAchievementDisplayAttributeHidden
	}
	[Token(Token = "0x2000062")]
	internal struct LeaderboardEntry_t
	{
		[Token(Token = "0x400022A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal int m_nGlobalRank;

		[Token(Token = "0x400022B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal int m_nScore;

		[Token(Token = "0x400022C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal string m_pUserName;
	}
	[Token(Token = "0x2000063")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCA80EC", Offset = "0xCA80EC")]
	internal delegate void IAPurchaseCallback(int code, string message);
	[Token(Token = "0x2000064")]
	internal struct IAPCurrency_t
	{
		[Token(Token = "0x400022D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal string m_pName;

		[Token(Token = "0x400022E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal string m_pSymbol;
	}
	[Token(Token = "0x2000065")]
	internal class Api
	{
		[Token(Token = "0x20002AE")]
		internal class AndroidLicenseChecker : AndroidJavaProxy
		{
			[Token(Token = "0x4000DC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Viveport.Api.LicenseChecker checker;

			[Token(Token = "0x60010B4")]
			[Address(RVA = "0x156F9A8", Offset = "0x156F9A8", VA = "0x156F9A8")]
			internal AndroidLicenseChecker(Viveport.Api.LicenseChecker checker)
			{
			}

			[Token(Token = "0x60010B5")]
			[Address(RVA = "0x156FA40", Offset = "0x156FA40", VA = "0x156FA40")]
			internal void onSuccess(long issueTime, long expirationTime, int latestVersion, bool updateRequired)
			{
			}

			[Token(Token = "0x60010B6")]
			[Address(RVA = "0x156FC5C", Offset = "0x156FC5C", VA = "0x156FC5C")]
			internal void onFailure(int errorCode, string errorMessage)
			{
			}
		}

		[Token(Token = "0x600055A")]
		[Address(RVA = "0x15651CC", Offset = "0x15651CC", VA = "0x15651CC")]
		internal static int Init(StatusCallback callback, string pchAppKey)
		{
			return default(int);
		}

		[Token(Token = "0x600055B")]
		[Address(RVA = "0x15654C0", Offset = "0x15654C0", VA = "0x15654C0")]
		internal static int Shutdown(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x600055C")]
		[Address(RVA = "0x1565654", Offset = "0x1565654", VA = "0x1565654")]
		internal static string Version()
		{
			return null;
		}

		[Token(Token = "0x600055D")]
		[Address(RVA = "0x1564C08", Offset = "0x1564C08", VA = "0x1564C08")]
		internal static void GetLicense(Viveport.Api.LicenseChecker checker, string appId, string appKey)
		{
		}

		[Token(Token = "0x600055E")]
		[Address(RVA = "0x156FA38", Offset = "0x156FA38", VA = "0x156FA38")]
		public Api()
		{
		}
	}
	[Token(Token = "0x2000066")]
	internal class User
	{
		[Token(Token = "0x600055F")]
		[Address(RVA = "0x1570FE8", Offset = "0x1570FE8", VA = "0x1570FE8")]
		internal static int IsReady(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6000560")]
		[Address(RVA = "0x1571120", Offset = "0x1571120", VA = "0x1571120")]
		internal static string GetUserId()
		{
			return null;
		}

		[Token(Token = "0x6000561")]
		[Address(RVA = "0x1571204", Offset = "0x1571204", VA = "0x1571204")]
		internal static string GetUserName()
		{
			return null;
		}

		[Token(Token = "0x6000562")]
		[Address(RVA = "0x15712E8", Offset = "0x15712E8", VA = "0x15712E8")]
		internal static string GetUserAvatarUrl()
		{
			return null;
		}

		[Token(Token = "0x6000563")]
		[Address(RVA = "0x15713CC", Offset = "0x15713CC", VA = "0x15713CC")]
		public User()
		{
		}
	}
	[Token(Token = "0x2000067")]
	internal class UserStats
	{
		[Token(Token = "0x6000564")]
		[Address(RVA = "0x15713D4", Offset = "0x15713D4", VA = "0x15713D4")]
		internal static int IsReady(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6000565")]
		[Address(RVA = "0x157150C", Offset = "0x157150C", VA = "0x157150C")]
		internal static int DownloadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6000566")]
		[Address(RVA = "0x1571644", Offset = "0x1571644", VA = "0x1571644")]
		internal static int UploadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6000567")]
		[Address(RVA = "0x157177C", Offset = "0x157177C", VA = "0x157177C")]
		internal static int SetStat(string pchName, int nData)
		{
			return default(int);
		}

		[Token(Token = "0x6000568")]
		[Address(RVA = "0x15718BC", Offset = "0x15718BC", VA = "0x15718BC")]
		internal static int SetStat(string pchName, float fData)
		{
			return default(int);
		}

		[Token(Token = "0x6000569")]
		[Address(RVA = "0x1571A04", Offset = "0x1571A04", VA = "0x1571A04")]
		internal static int GetStat(string pchName, int nData)
		{
			return default(int);
		}

		[Token(Token = "0x600056A")]
		[Address(RVA = "0x1571B44", Offset = "0x1571B44", VA = "0x1571B44")]
		internal static float GetStat(string pchName, float fData)
		{
			return default(float);
		}

		[Token(Token = "0x600056B")]
		[Address(RVA = "0x1571C8C", Offset = "0x1571C8C", VA = "0x1571C8C")]
		internal static bool GetAchievement(string pchName)
		{
			return default(bool);
		}

		[Token(Token = "0x600056C")]
		[Address(RVA = "0x1571D6C", Offset = "0x1571D6C", VA = "0x1571D6C")]
		internal static int GetAchievementUnlockTime(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x600056D")]
		[Address(RVA = "0x1571E4C", Offset = "0x1571E4C", VA = "0x1571E4C")]
		internal static int SetAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x600056E")]
		[Address(RVA = "0x1571F2C", Offset = "0x1571F2C", VA = "0x1571F2C")]
		internal static int ClearAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x600056F")]
		[Address(RVA = "0x157200C", Offset = "0x157200C", VA = "0x157200C")]
		internal static string GetAchievementDisplayAttribute(string pchName, EAchievementDisplayAttribute attr)
		{
			return null;
		}

		[Token(Token = "0x6000570")]
		[Address(RVA = "0x157214C", Offset = "0x157214C", VA = "0x157214C")]
		internal static string GetAchievementDisplayAttribute(string pchName, EAchievementDisplayAttribute attr, ELocale locale)
		{
			return null;
		}

		[Token(Token = "0x6000571")]
		[Address(RVA = "0x15722D8", Offset = "0x15722D8", VA = "0x15722D8")]
		internal static string GetAchievementIcon(string pchName)
		{
			return null;
		}

		[Token(Token = "0x6000572")]
		[Address(RVA = "0x15723B8", Offset = "0x15723B8", VA = "0x15723B8")]
		internal static int DownloadLeaderboardScores(StatusCallback callback, string pchLeaderboardName, ELeaderboardDataRequest nDataRequest, ELeaderboardDataTimeRange nTimeRange, int nRangeStart, int nRangeEnd)
		{
			return default(int);
		}

		[Token(Token = "0x6000573")]
		[Address(RVA = "0x1572684", Offset = "0x1572684", VA = "0x1572684")]
		internal static int UploadLeaderboardScore(StatusCallback callback, string pchLeaderboardName, int nScores)
		{
			return default(int);
		}

		[Token(Token = "0x6000574")]
		[Address(RVA = "0x157285C", Offset = "0x157285C", VA = "0x157285C")]
		internal static Leaderboard GetLeaderboardScore(int nIndex)
		{
			return null;
		}

		[Token(Token = "0x6000575")]
		[Address(RVA = "0x1572AC8", Offset = "0x1572AC8", VA = "0x1572AC8")]
		internal static int GetLeaderboardScoreCount()
		{
			return default(int);
		}

		[Token(Token = "0x6000576")]
		[Address(RVA = "0x1572BC4", Offset = "0x1572BC4", VA = "0x1572BC4")]
		internal static ELeaderboardSortMethod GetLeaderboardSortMethod()
		{
			return default(ELeaderboardSortMethod);
		}

		[Token(Token = "0x6000577")]
		[Address(RVA = "0x1572CC0", Offset = "0x1572CC0", VA = "0x1572CC0")]
		internal static ELeaderboardDisplayType GetLeaderboardDisplayType()
		{
			return default(ELeaderboardDisplayType);
		}

		[Token(Token = "0x6000578")]
		[Address(RVA = "0x1572DBC", Offset = "0x1572DBC", VA = "0x1572DBC")]
		public UserStats()
		{
		}
	}
	[Token(Token = "0x2000068")]
	internal class Deeplink
	{
		[Token(Token = "0x20002AF")]
		internal class AndroidDeeplinkChecker : AndroidJavaProxy
		{
			[Token(Token = "0x4000DC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Viveport.Deeplink.DeeplinkChecker checker;

			[Token(Token = "0x60010B7")]
			[Address(RVA = "0x156FE4C", Offset = "0x156FE4C", VA = "0x156FE4C")]
			internal AndroidDeeplinkChecker(Viveport.Deeplink.DeeplinkChecker checker)
			{
			}

			[Token(Token = "0x60010B8")]
			[Address(RVA = "0x156FEE4", Offset = "0x156FEE4", VA = "0x156FEE4")]
			internal void onSuccess()
			{
			}

			[Token(Token = "0x60010B9")]
			[Address(RVA = "0x156FF70", Offset = "0x156FF70", VA = "0x156FF70")]
			internal void onFailure(int errorCode, string errorMessage)
			{
			}
		}

		[Token(Token = "0x6000579")]
		[Address(RVA = "0x1566170", Offset = "0x1566170", VA = "0x1566170")]
		internal static void IsReady(StatusCallback callback)
		{
		}

		[Token(Token = "0x600057A")]
		[Address(RVA = "0x1566324", Offset = "0x1566324", VA = "0x1566324")]
		internal static void GoToApp(Viveport.Deeplink.DeeplinkChecker checker, string appId, string launchData)
		{
		}

		[Token(Token = "0x600057B")]
		[Address(RVA = "0x156661C", Offset = "0x156661C", VA = "0x156661C")]
		internal static void GoToStore(Viveport.Deeplink.DeeplinkChecker checker, string appId)
		{
		}

		[Token(Token = "0x600057C")]
		[Address(RVA = "0x1566848", Offset = "0x1566848", VA = "0x1566848")]
		internal static void GoToAppOrGoToStore(Viveport.Deeplink.DeeplinkChecker checker, string appId, string launchData)
		{
		}

		[Token(Token = "0x600057D")]
		[Address(RVA = "0x15669F4", Offset = "0x15669F4", VA = "0x15669F4")]
		internal static string GetAppLaunchData()
		{
			return null;
		}

		[Token(Token = "0x600057E")]
		[Address(RVA = "0x156FEDC", Offset = "0x156FEDC", VA = "0x156FEDC")]
		public Deeplink()
		{
		}
	}
	[Token(Token = "0x2000069")]
	internal class IAPurchase
	{
		[Token(Token = "0x600057F")]
		[Address(RVA = "0x15674FC", Offset = "0x15674FC", VA = "0x15674FC")]
		internal static void IsReady(IAPurchaseCallback callback, string pchAppKey)
		{
		}

		[Token(Token = "0x6000580")]
		[Address(RVA = "0x15677C4", Offset = "0x15677C4", VA = "0x15677C4")]
		internal static void Request(IAPurchaseCallback callback, string pchPrice)
		{
		}

		[Token(Token = "0x6000581")]
		[Address(RVA = "0x1567A14", Offset = "0x1567A14", VA = "0x1567A14")]
		internal static void Request(IAPurchaseCallback callback, string pchPrice, string pchUserData)
		{
		}

		[Token(Token = "0x6000582")]
		[Address(RVA = "0x1567D14", Offset = "0x1567D14", VA = "0x1567D14")]
		internal static void Purchase(IAPurchaseCallback callback, string pchPurchaseId)
		{
		}

		[Token(Token = "0x6000583")]
		[Address(RVA = "0x1567FDC", Offset = "0x1567FDC", VA = "0x1567FDC")]
		internal static void Query(IAPurchaseCallback callback, string pchPurchaseId)
		{
		}

		[Token(Token = "0x6000584")]
		[Address(RVA = "0x1568294", Offset = "0x1568294", VA = "0x1568294")]
		internal static void Query(IAPurchaseCallback callback)
		{
		}

		[Token(Token = "0x6000585")]
		[Address(RVA = "0x156850C", Offset = "0x156850C", VA = "0x156850C")]
		internal static void GetBalance(IAPurchaseCallback callback)
		{
		}

		[Token(Token = "0x6000586")]
		[Address(RVA = "0x15687DC", Offset = "0x15687DC", VA = "0x15687DC")]
		internal static void RequestSubscription(IAPurchaseCallback callback, string pchPrice, string pchFreeTrialType, int nFreeTrialValue, string pchChargePeriodType, int nChargePeriodValue, int nNumberOfChargePeriod, string pchPlanId)
		{
		}

		[Token(Token = "0x6000587")]
		[Address(RVA = "0x1568C58", Offset = "0x1568C58", VA = "0x1568C58")]
		internal static void RequestSubscriptionWithPlanID(IAPurchaseCallback callback, string pchPlanId)
		{
		}

		[Token(Token = "0x6000588")]
		[Address(RVA = "0x1568F20", Offset = "0x1568F20", VA = "0x1568F20")]
		internal static void Subscribe(IAPurchaseCallback callback, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6000589")]
		[Address(RVA = "0x15691E8", Offset = "0x15691E8", VA = "0x15691E8")]
		internal static void QuerySubscription(IAPurchaseCallback callback, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x600058A")]
		[Address(RVA = "0x15694A0", Offset = "0x15694A0", VA = "0x15694A0")]
		internal static void QuerySubscriptionList(IAPurchaseCallback callback)
		{
		}

		[Token(Token = "0x600058B")]
		[Address(RVA = "0x1569728", Offset = "0x1569728", VA = "0x1569728")]
		internal static void CancelSubscription(IAPurchaseCallback callback, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x600058C")]
		[Address(RVA = "0x15705B4", Offset = "0x15705B4", VA = "0x15705B4")]
		public IAPurchase()
		{
		}
	}
	[Token(Token = "0x200006A")]
	internal class Subscription
	{
		[Token(Token = "0x600058D")]
		[Address(RVA = "0x1570AF8", Offset = "0x1570AF8", VA = "0x1570AF8")]
		internal static int IsReady(StatusCallback2 callback)
		{
			return default(int);
		}

		[Token(Token = "0x600058E")]
		[Address(RVA = "0x1570C30", Offset = "0x1570C30", VA = "0x1570C30")]
		internal static bool IsWindowsSubscriber()
		{
			return default(bool);
		}

		[Token(Token = "0x600058F")]
		[Address(RVA = "0x1570D2C", Offset = "0x1570D2C", VA = "0x1570D2C")]
		internal static bool IsAndroidSubscriber()
		{
			return default(bool);
		}

		[Token(Token = "0x6000590")]
		[Address(RVA = "0x1570E28", Offset = "0x1570E28", VA = "0x1570E28")]
		internal static ESubscriptionTransactionType GetTransactionType()
		{
			return default(ESubscriptionTransactionType);
		}

		[Token(Token = "0x6000591")]
		[Address(RVA = "0x1570FE0", Offset = "0x1570FE0", VA = "0x1570FE0")]
		public Subscription()
		{
		}
	}
	[Token(Token = "0x200006B")]
	internal class Android
	{
		[Token(Token = "0x400022F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AndroidJavaObject _api;

		[Token(Token = "0x4000230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static AndroidJavaObject _iAPurchase;

		[Token(Token = "0x4000231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static AndroidJavaClass _unityPlayer;

		[Token(Token = "0x4000232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static AndroidJavaObject _user;

		[Token(Token = "0x4000233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static AndroidJavaObject _userStats;

		[Token(Token = "0x4000234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static AndroidJavaObject _subscription;

		[Token(Token = "0x4000235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static AndroidJavaObject _deeplink;

		[Token(Token = "0x1700006E")]
		internal static AndroidJavaClass UnityPlayer
		{
			[Token(Token = "0x6000598")]
			[Address(RVA = "0x156F25C", Offset = "0x156F25C", VA = "0x156F25C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006F")]
		internal static AndroidJavaObject CurrentActivity
		{
			[Token(Token = "0x6000599")]
			[Address(RVA = "0x156F2F8", Offset = "0x156F2F8", VA = "0x156F2F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000070")]
		internal static AndroidJavaObject CurrentContext
		{
			[Token(Token = "0x600059A")]
			[Address(RVA = "0x156F358", Offset = "0x156F358", VA = "0x156F358")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000592")]
		[Address(RVA = "0x156EB24", Offset = "0x156EB24", VA = "0x156EB24")]
		internal static AndroidJavaObject GetJavaAPI()
		{
			return null;
		}

		[Token(Token = "0x6000593")]
		[Address(RVA = "0x156EC58", Offset = "0x156EC58", VA = "0x156EC58")]
		internal static AndroidJavaObject GetJavaUser()
		{
			return null;
		}

		[Token(Token = "0x6000594")]
		[Address(RVA = "0x156ED8C", Offset = "0x156ED8C", VA = "0x156ED8C")]
		internal static AndroidJavaObject GetJavaUserStats()
		{
			return null;
		}

		[Token(Token = "0x6000595")]
		[Address(RVA = "0x156EEC0", Offset = "0x156EEC0", VA = "0x156EEC0")]
		internal static AndroidJavaObject GetJavaIAPurchase()
		{
			return null;
		}

		[Token(Token = "0x6000596")]
		[Address(RVA = "0x156EFF4", Offset = "0x156EFF4", VA = "0x156EFF4")]
		internal static AndroidJavaObject GetJavaSubscription()
		{
			return null;
		}

		[Token(Token = "0x6000597")]
		[Address(RVA = "0x156F128", Offset = "0x156F128", VA = "0x156F128")]
		internal static AndroidJavaObject GetDeeplink()
		{
			return null;
		}

		[Token(Token = "0x600059B")]
		[Address(RVA = "0x156F35C", Offset = "0x156F35C", VA = "0x156F35C")]
		public Android()
		{
		}
	}
	[Token(Token = "0x200006C")]
	internal class AndroidPluginCallback : AndroidJavaProxy
	{
		[Token(Token = "0x4000236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IAPurchaseCallback callback;

		[Token(Token = "0x4000237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private StatusCallback statusCallback;

		[Token(Token = "0x4000238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private StatusCallback2 statusCallback2;

		[Token(Token = "0x600059C")]
		[Address(RVA = "0x156F364", Offset = "0x156F364", VA = "0x156F364")]
		internal AndroidPluginCallback(IAPurchaseCallback callback)
		{
		}

		[Token(Token = "0x600059D")]
		[Address(RVA = "0x156F3F4", Offset = "0x156F3F4", VA = "0x156F3F4")]
		internal AndroidPluginCallback(StatusCallback callback)
		{
		}

		[Token(Token = "0x600059E")]
		[Address(RVA = "0x156F484", Offset = "0x156F484", VA = "0x156F484")]
		internal AndroidPluginCallback(StatusCallback2 callback)
		{
		}

		[Token(Token = "0x600059F")]
		[Address(RVA = "0x156F514", Offset = "0x156F514", VA = "0x156F514")]
		internal void onResult(int statusCode, string result)
		{
		}
	}
}
namespace Viveport.Arcade
{
	[Token(Token = "0x200006D")]
	internal class Session
	{
		[Token(Token = "0x60005A0")]
		[Address(RVA = "0x1565904", Offset = "0x1565904", VA = "0x1565904")]
		public Session()
		{
		}
	}
}
namespace Viveport.Core
{
	[Token(Token = "0x200006E")]
	public class Logger
	{
		[Token(Token = "0x4000239")]
		private const string LoggerTypeNameUnity = "UnityEngine.Debug";

		[Token(Token = "0x400023A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool _hasDetected;

		[Token(Token = "0x400023B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		private static bool _usingUnityLog;

		[Token(Token = "0x400023C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Type _unityLogType;

		[Token(Token = "0x60005A1")]
		[Address(RVA = "0x1565914", Offset = "0x1565914", VA = "0x1565914")]
		public static void Log(string message)
		{
		}

		[Token(Token = "0x60005A2")]
		[Address(RVA = "0x1565D30", Offset = "0x1565D30", VA = "0x1565D30")]
		private static void ConsoleLog(string message)
		{
		}

		[Token(Token = "0x60005A3")]
		[Address(RVA = "0x15659E4", Offset = "0x15659E4", VA = "0x15659E4")]
		private static void UnityLog(string message)
		{
		}

		[Token(Token = "0x60005A4")]
		[Address(RVA = "0x1565DCC", Offset = "0x1565DCC", VA = "0x1565DCC")]
		private static Type GetType(string typeName)
		{
			return null;
		}

		[Token(Token = "0x60005A5")]
		[Address(RVA = "0x1565F28", Offset = "0x1565F28", VA = "0x1565F28")]
		public Logger()
		{
		}
	}
}
namespace LitJson
{
	[Token(Token = "0x200006F")]
	public enum JsonType
	{
		[Token(Token = "0x400023E")]
		None,
		[Token(Token = "0x400023F")]
		Object,
		[Token(Token = "0x4000240")]
		Array,
		[Token(Token = "0x4000241")]
		String,
		[Token(Token = "0x4000242")]
		Int,
		[Token(Token = "0x4000243")]
		Long,
		[Token(Token = "0x4000244")]
		Double,
		[Token(Token = "0x4000245")]
		Boolean
	}
	[Token(Token = "0x2000070")]
	public interface IJsonWrapper : IList, ICollection, IEnumerable, IOrderedDictionary, IDictionary
	{
		[Token(Token = "0x17000071")]
		bool IsArray
		{
			[Token(Token = "0x60005A7")]
			get;
		}

		[Token(Token = "0x17000072")]
		bool IsBoolean
		{
			[Token(Token = "0x60005A8")]
			get;
		}

		[Token(Token = "0x17000073")]
		bool IsDouble
		{
			[Token(Token = "0x60005A9")]
			get;
		}

		[Token(Token = "0x17000074")]
		bool IsInt
		{
			[Token(Token = "0x60005AA")]
			get;
		}

		[Token(Token = "0x17000075")]
		bool IsLong
		{
			[Token(Token = "0x60005AB")]
			get;
		}

		[Token(Token = "0x17000076")]
		bool IsObject
		{
			[Token(Token = "0x60005AC")]
			get;
		}

		[Token(Token = "0x17000077")]
		bool IsString
		{
			[Token(Token = "0x60005AD")]
			get;
		}

		[Token(Token = "0x60005AE")]
		bool GetBoolean();

		[Token(Token = "0x60005AF")]
		double GetDouble();

		[Token(Token = "0x60005B0")]
		int GetInt();

		[Token(Token = "0x60005B1")]
		JsonType GetJsonType();

		[Token(Token = "0x60005B2")]
		long GetLong();

		[Token(Token = "0x60005B3")]
		string GetString();

		[Token(Token = "0x60005B4")]
		void SetBoolean(bool val);

		[Token(Token = "0x60005B5")]
		void SetDouble(double val);

		[Token(Token = "0x60005B6")]
		void SetInt(int val);

		[Token(Token = "0x60005B7")]
		void SetJsonType(JsonType type);

		[Token(Token = "0x60005B8")]
		void SetLong(long val);

		[Token(Token = "0x60005B9")]
		void SetString(string val);

		[Token(Token = "0x60005BA")]
		string ToJson();

		[Token(Token = "0x60005BB")]
		void ToJson(JsonWriter writer);
	}
	[Token(Token = "0x2000071")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xCA8100", Offset = "0xCA8100")]
	public class JsonData : IJsonWrapper, IList, ICollection, IEnumerable, IOrderedDictionary, IDictionary, IEquatable<JsonData>
	{
		[Token(Token = "0x4000246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IList<JsonData> inst_array;

		[Token(Token = "0x4000247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inst_boolean;

		[Token(Token = "0x4000248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private double inst_double;

		[Token(Token = "0x4000249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int inst_int;

		[Token(Token = "0x400024A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private long inst_long;

		[Token(Token = "0x400024B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private IDictionary<string, JsonData> inst_object;

		[Token(Token = "0x400024C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string inst_string;

		[Token(Token = "0x400024D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string json;

		[Token(Token = "0x400024E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private JsonType type;

		[Token(Token = "0x400024F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private IList<KeyValuePair<string, JsonData>> object_list;

		[Token(Token = "0x17000078")]
		public int Count
		{
			[Token(Token = "0x60005BC")]
			[Address(RVA = "0x133D7D4", Offset = "0x133D7D4", VA = "0x133D7D4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000079")]
		public bool IsArray
		{
			[Token(Token = "0x60005BD")]
			[Address(RVA = "0x133D95C", Offset = "0x133D95C", VA = "0x133D95C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700007A")]
		public bool IsBoolean
		{
			[Token(Token = "0x60005BE")]
			[Address(RVA = "0x133D96C", Offset = "0x133D96C", VA = "0x133D96C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700007B")]
		public bool IsDouble
		{
			[Token(Token = "0x60005BF")]
			[Address(RVA = "0x133D97C", Offset = "0x133D97C", VA = "0x133D97C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700007C")]
		public bool IsInt
		{
			[Token(Token = "0x60005C0")]
			[Address(RVA = "0x133D98C", Offset = "0x133D98C", VA = "0x133D98C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700007D")]
		public bool IsLong
		{
			[Token(Token = "0x60005C1")]
			[Address(RVA = "0x133D99C", Offset = "0x133D99C", VA = "0x133D99C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700007E")]
		public bool IsObject
		{
			[Token(Token = "0x60005C2")]
			[Address(RVA = "0x133D9AC", Offset = "0x133D9AC", VA = "0x133D9AC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700007F")]
		public bool IsString
		{
			[Token(Token = "0x60005C3")]
			[Address(RVA = "0x133D9BC", Offset = "0x133D9BC", VA = "0x133D9BC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000080")]
		private int System.Collections.ICollection.Count
		{
			[Token(Token = "0x60005C4")]
			[Address(RVA = "0x133D9CC", Offset = "0x133D9CC", VA = "0x133D9CC", Slot = "37")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000081")]
		private bool System.Collections.ICollection.IsSynchronized
		{
			[Token(Token = "0x60005C5")]
			[Address(RVA = "0x133D9D0", Offset = "0x133D9D0", VA = "0x133D9D0", Slot = "39")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000082")]
		private object System.Collections.ICollection.SyncRoot
		{
			[Token(Token = "0x60005C6")]
			[Address(RVA = "0x133DA8C", Offset = "0x133DA8C", VA = "0x133DA8C", Slot = "38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000083")]
		private bool System.Collections.IDictionary.IsFixedSize
		{
			[Token(Token = "0x60005C7")]
			[Address(RVA = "0x133DB48", Offset = "0x133DB48", VA = "0x133DB48", Slot = "54")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000084")]
		private bool System.Collections.IDictionary.IsReadOnly
		{
			[Token(Token = "0x60005C8")]
			[Address(RVA = "0x133DD34", Offset = "0x133DD34", VA = "0x133DD34", Slot = "53")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000085")]
		private ICollection System.Collections.IDictionary.Keys
		{
			[Token(Token = "0x60005C9")]
			[Address(RVA = "0x133DDF0", Offset = "0x133DDF0", VA = "0x133DDF0", Slot = "48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000086")]
		private ICollection System.Collections.IDictionary.Values
		{
			[Token(Token = "0x60005CA")]
			[Address(RVA = "0x133E130", Offset = "0x133E130", VA = "0x133E130", Slot = "49")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000087")]
		private bool LitJson.IJsonWrapper.IsArray
		{
			[Token(Token = "0x60005CB")]
			[Address(RVA = "0x133E470", Offset = "0x133E470", VA = "0x133E470", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000088")]
		private bool LitJson.IJsonWrapper.IsBoolean
		{
			[Token(Token = "0x60005CC")]
			[Address(RVA = "0x133E480", Offset = "0x133E480", VA = "0x133E480", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000089")]
		private bool LitJson.IJsonWrapper.IsDouble
		{
			[Token(Token = "0x60005CD")]
			[Address(RVA = "0x133E490", Offset = "0x133E490", VA = "0x133E490", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700008A")]
		private bool LitJson.IJsonWrapper.IsInt
		{
			[Token(Token = "0x60005CE")]
			[Address(RVA = "0x133E4A0", Offset = "0x133E4A0", VA = "0x133E4A0", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700008B")]
		private bool LitJson.IJsonWrapper.IsLong
		{
			[Token(Token = "0x60005CF")]
			[Address(RVA = "0x133E4B0", Offset = "0x133E4B0", VA = "0x133E4B0", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700008C")]
		private bool LitJson.IJsonWrapper.IsObject
		{
			[Token(Token = "0x60005D0")]
			[Address(RVA = "0x133E4C0", Offset = "0x133E4C0", VA = "0x133E4C0", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700008D")]
		private bool LitJson.IJsonWrapper.IsString
		{
			[Token(Token = "0x60005D1")]
			[Address(RVA = "0x133E4D0", Offset = "0x133E4D0", VA = "0x133E4D0", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700008E")]
		private bool System.Collections.IList.IsFixedSize
		{
			[Token(Token = "0x60005D2")]
			[Address(RVA = "0x133E4E0", Offset = "0x133E4E0", VA = "0x133E4E0", Slot = "31")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700008F")]
		private bool System.Collections.IList.IsReadOnly
		{
			[Token(Token = "0x60005D3")]
			[Address(RVA = "0x133E698", Offset = "0x133E698", VA = "0x133E698", Slot = "30")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000090")]
		private object System.Collections.IDictionary.Item
		{
			[Token(Token = "0x60005D4")]
			[Address(RVA = "0x133E754", Offset = "0x133E754", VA = "0x133E754", Slot = "46")]
			get
			{
				return null;
			}
			[Token(Token = "0x60005D5")]
			[Address(RVA = "0x133E81C", Offset = "0x133E81C", VA = "0x133E81C", Slot = "47")]
			set
			{
			}
		}

		[Token(Token = "0x17000091")]
		private object System.Collections.Specialized.IOrderedDictionary.Item
		{
			[Token(Token = "0x60005D6")]
			[Address(RVA = "0x133ED34", Offset = "0x133ED34", VA = "0x133ED34", Slot = "41")]
			get
			{
				return null;
			}
			[Token(Token = "0x60005D7")]
			[Address(RVA = "0x133EE04", Offset = "0x133EE04", VA = "0x133EE04", Slot = "42")]
			set
			{
			}
		}

		[Token(Token = "0x17000092")]
		private object System.Collections.IList.Item
		{
			[Token(Token = "0x60005D8")]
			[Address(RVA = "0x133F00C", Offset = "0x133F00C", VA = "0x133F00C", Slot = "25")]
			get
			{
				return null;
			}
			[Token(Token = "0x60005D9")]
			[Address(RVA = "0x133F0D4", Offset = "0x133F0D4", VA = "0x133F0D4", Slot = "26")]
			set
			{
			}
		}

		[Token(Token = "0x17000093")]
		public JsonData Item
		{
			[Token(Token = "0x60005DA")]
			[Address(RVA = "0x133F3B8", Offset = "0x133F3B8", VA = "0x133F3B8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60005DB")]
			[Address(RVA = "0x133E98C", Offset = "0x133E98C", VA = "0x133E98C")]
			set
			{
			}
		}

		[Token(Token = "0x17000094")]
		public JsonData Item
		{
			[Token(Token = "0x60005DC")]
			[Address(RVA = "0x133F480", Offset = "0x133F480", VA = "0x133F480")]
			get
			{
				return null;
			}
			[Token(Token = "0x60005DD")]
			[Address(RVA = "0x133F118", Offset = "0x133F118", VA = "0x133F118")]
			set
			{
			}
		}

		[Token(Token = "0x60005DE")]
		[Address(RVA = "0x133F5DC", Offset = "0x133F5DC", VA = "0x133F5DC")]
		public JsonData()
		{
		}

		[Token(Token = "0x60005DF")]
		[Address(RVA = "0x133F5E4", Offset = "0x133F5E4", VA = "0x133F5E4")]
		public JsonData(bool boolean)
		{
		}

		[Token(Token = "0x60005E0")]
		[Address(RVA = "0x133F61C", Offset = "0x133F61C", VA = "0x133F61C")]
		public JsonData(double number)
		{
		}

		[Token(Token = "0x60005E1")]
		[Address(RVA = "0x133F658", Offset = "0x133F658", VA = "0x133F658")]
		public JsonData(int number)
		{
		}

		[Token(Token = "0x60005E2")]
		[Address(RVA = "0x133F68C", Offset = "0x133F68C", VA = "0x133F68C")]
		public JsonData(long number)
		{
		}

		[Token(Token = "0x60005E3")]
		[Address(RVA = "0x133F6C0", Offset = "0x133F6C0", VA = "0x133F6C0")]
		public JsonData(object obj)
		{
		}

		[Token(Token = "0x60005E4")]
		[Address(RVA = "0x133F8BC", Offset = "0x133F8BC", VA = "0x133F8BC")]
		public JsonData(string str)
		{
		}

		[Token(Token = "0x60005E5")]
		[Address(RVA = "0x133F8F8", Offset = "0x133F8F8", VA = "0x133F8F8")]
		public static implicit operator JsonData(bool data)
		{
			return null;
		}

		[Token(Token = "0x60005E6")]
		[Address(RVA = "0x133F968", Offset = "0x133F968", VA = "0x133F968")]
		public static implicit operator JsonData(double data)
		{
			return null;
		}

		[Token(Token = "0x60005E7")]
		[Address(RVA = "0x133F9DC", Offset = "0x133F9DC", VA = "0x133F9DC")]
		public static implicit operator JsonData(int data)
		{
			return null;
		}

		[Token(Token = "0x60005E8")]
		[Address(RVA = "0x133FA48", Offset = "0x133FA48", VA = "0x133FA48")]
		public static implicit operator JsonData(long data)
		{
			return null;
		}

		[Token(Token = "0x60005E9")]
		[Address(RVA = "0x133FAB4", Offset = "0x133FAB4", VA = "0x133FAB4")]
		public static implicit operator JsonData(string data)
		{
			return null;
		}

		[Token(Token = "0x60005EA")]
		[Address(RVA = "0x133FB2C", Offset = "0x133FB2C", VA = "0x133FB2C")]
		public static explicit operator bool(JsonData data)
		{
			return default(bool);
		}

		[Token(Token = "0x60005EB")]
		[Address(RVA = "0x133FBC0", Offset = "0x133FBC0", VA = "0x133FBC0")]
		public static explicit operator double(JsonData data)
		{
			return default(double);
		}

		[Token(Token = "0x60005EC")]
		[Address(RVA = "0x133FC54", Offset = "0x133FC54", VA = "0x133FC54")]
		public static explicit operator int(JsonData data)
		{
			return default(int);
		}

		[Token(Token = "0x60005ED")]
		[Address(RVA = "0x133FCE8", Offset = "0x133FCE8", VA = "0x133FCE8")]
		public static explicit operator long(JsonData data)
		{
			return default(long);
		}

		[Token(Token = "0x60005EE")]
		[Address(RVA = "0x133FD7C", Offset = "0x133FD7C", VA = "0x133FD7C")]
		public static explicit operator string(JsonData data)
		{
			return null;
		}

		[Token(Token = "0x60005EF")]
		[Address(RVA = "0x133FE10", Offset = "0x133FE10", VA = "0x133FE10", Slot = "36")]
		private void System.Collections.ICollection.CopyTo(Array array, int index)
		{
		}

		[Token(Token = "0x60005F0")]
		[Address(RVA = "0x133FEE0", Offset = "0x133FEE0", VA = "0x133FEE0", Slot = "51")]
		private void System.Collections.IDictionary.Add(object key, object value)
		{
		}

		[Token(Token = "0x60005F1")]
		[Address(RVA = "0x13400A0", Offset = "0x13400A0", VA = "0x13400A0", Slot = "52")]
		private void System.Collections.IDictionary.Clear()
		{
		}

		[Token(Token = "0x60005F2")]
		[Address(RVA = "0x13401E0", Offset = "0x13401E0", VA = "0x13401E0", Slot = "50")]
		private bool System.Collections.IDictionary.Contains(object key)
		{
			return default(bool);
		}

		[Token(Token = "0x60005F3")]
		[Address(RVA = "0x13402AC", Offset = "0x13402AC", VA = "0x13402AC", Slot = "55")]
		private IDictionaryEnumerator System.Collections.IDictionary.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60005F4")]
		[Address(RVA = "0x1340354", Offset = "0x1340354", VA = "0x1340354", Slot = "56")]
		private void System.Collections.IDictionary.Remove(object key)
		{
		}

		[Token(Token = "0x60005F5")]
		[Address(RVA = "0x13405E0", Offset = "0x13405E0", VA = "0x13405E0", Slot = "40")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60005F6")]
		[Address(RVA = "0x1340698", Offset = "0x1340698", VA = "0x1340698", Slot = "11")]
		private bool LitJson.IJsonWrapper.GetBoolean()
		{
			return default(bool);
		}

		[Token(Token = "0x60005F7")]
		[Address(RVA = "0x1340724", Offset = "0x1340724", VA = "0x1340724", Slot = "12")]
		private double LitJson.IJsonWrapper.GetDouble()
		{
			return default(double);
		}

		[Token(Token = "0x60005F8")]
		[Address(RVA = "0x13407B0", Offset = "0x13407B0", VA = "0x13407B0", Slot = "13")]
		private int LitJson.IJsonWrapper.GetInt()
		{
			return default(int);
		}

		[Token(Token = "0x60005F9")]
		[Address(RVA = "0x134083C", Offset = "0x134083C", VA = "0x134083C", Slot = "15")]
		private long LitJson.IJsonWrapper.GetLong()
		{
			return default(long);
		}

		[Token(Token = "0x60005FA")]
		[Address(RVA = "0x13408C8", Offset = "0x13408C8", VA = "0x13408C8", Slot = "16")]
		private string LitJson.IJsonWrapper.GetString()
		{
			return null;
		}

		[Token(Token = "0x60005FB")]
		[Address(RVA = "0x1340954", Offset = "0x1340954", VA = "0x1340954", Slot = "17")]
		private void LitJson.IJsonWrapper.SetBoolean(bool val)
		{
		}

		[Token(Token = "0x60005FC")]
		[Address(RVA = "0x1340970", Offset = "0x1340970", VA = "0x1340970", Slot = "18")]
		private void LitJson.IJsonWrapper.SetDouble(double val)
		{
		}

		[Token(Token = "0x60005FD")]
		[Address(RVA = "0x1340988", Offset = "0x1340988", VA = "0x1340988", Slot = "19")]
		private void LitJson.IJsonWrapper.SetInt(int val)
		{
		}

		[Token(Token = "0x60005FE")]
		[Address(RVA = "0x13409A0", Offset = "0x13409A0", VA = "0x13409A0", Slot = "21")]
		private void LitJson.IJsonWrapper.SetLong(long val)
		{
		}

		[Token(Token = "0x60005FF")]
		[Address(RVA = "0x13409B8", Offset = "0x13409B8", VA = "0x13409B8", Slot = "22")]
		private void LitJson.IJsonWrapper.SetString(string val)
		{
		}

		[Token(Token = "0x6000600")]
		[Address(RVA = "0x13409F0", Offset = "0x13409F0", VA = "0x13409F0", Slot = "23")]
		private string LitJson.IJsonWrapper.ToJson()
		{
			return null;
		}

		[Token(Token = "0x6000601")]
		[Address(RVA = "0x1340AC4", Offset = "0x1340AC4", VA = "0x1340AC4", Slot = "24")]
		private void LitJson.IJsonWrapper.ToJson(JsonWriter writer)
		{
		}

		[Token(Token = "0x6000602")]
		[Address(RVA = "0x1340AFC", Offset = "0x1340AFC", VA = "0x1340AFC", Slot = "27")]
		private int System.Collections.IList.Add(object value)
		{
			return default(int);
		}

		[Token(Token = "0x6000603")]
		[Address(RVA = "0x1340BE8", Offset = "0x1340BE8", VA = "0x1340BE8", Slot = "29")]
		private void System.Collections.IList.Clear()
		{
		}

		[Token(Token = "0x6000604")]
		[Address(RVA = "0x1340CB4", Offset = "0x1340CB4", VA = "0x1340CB4", Slot = "28")]
		private bool System.Collections.IList.Contains(object value)
		{
			return default(bool);
		}

		[Token(Token = "0x6000605")]
		[Address(RVA = "0x1340D80", Offset = "0x1340D80", VA = "0x1340D80", Slot = "32")]
		private int System.Collections.IList.IndexOf(object value)
		{
			return default(int);
		}

		[Token(Token = "0x6000606")]
		[Address(RVA = "0x1340E4C", Offset = "0x1340E4C", VA = "0x1340E4C", Slot = "33")]
		private void System.Collections.IList.Insert(int index, object value)
		{
		}

		[Token(Token = "0x6000607")]
		[Address(RVA = "0x1340F30", Offset = "0x1340F30", VA = "0x1340F30", Slot = "34")]
		private void System.Collections.IList.Remove(object value)
		{
		}

		[Token(Token = "0x6000608")]
		[Address(RVA = "0x134100C", Offset = "0x134100C", VA = "0x134100C", Slot = "35")]
		private void System.Collections.IList.RemoveAt(int index)
		{
		}

		[Token(Token = "0x6000609")]
		[Address(RVA = "0x13410E8", Offset = "0x13410E8", VA = "0x13410E8", Slot = "43")]
		private IDictionaryEnumerator System.Collections.Specialized.IOrderedDictionary.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x600060A")]
		[Address(RVA = "0x13411D0", Offset = "0x13411D0", VA = "0x13411D0", Slot = "44")]
		private void System.Collections.Specialized.IOrderedDictionary.Insert(int idx, object key, object value)
		{
		}

		[Token(Token = "0x600060B")]
		[Address(RVA = "0x134131C", Offset = "0x134131C", VA = "0x134131C", Slot = "45")]
		private void System.Collections.Specialized.IOrderedDictionary.RemoveAt(int idx)
		{
		}

		[Token(Token = "0x600060C")]
		[Address(RVA = "0x133D890", Offset = "0x133D890", VA = "0x133D890")]
		private ICollection EnsureCollection()
		{
			return null;
		}

		[Token(Token = "0x600060D")]
		[Address(RVA = "0x133DC04", Offset = "0x133DC04", VA = "0x133DC04")]
		private IDictionary EnsureDictionary()
		{
			return null;
		}

		[Token(Token = "0x600060E")]
		[Address(RVA = "0x133E59C", Offset = "0x133E59C", VA = "0x133E59C")]
		private IList EnsureList()
		{
			return null;
		}

		[Token(Token = "0x600060F")]
		[Address(RVA = "0x133E8F0", Offset = "0x133E8F0", VA = "0x133E8F0")]
		private JsonData ToJsonData(object obj)
		{
			return null;
		}

		[Token(Token = "0x6000610")]
		[Address(RVA = "0x13414D8", Offset = "0x13414D8", VA = "0x13414D8")]
		private static void WriteJson(IJsonWrapper obj, JsonWriter writer)
		{
		}

		[Token(Token = "0x6000611")]
		[Address(RVA = "0x1340B00", Offset = "0x1340B00", VA = "0x1340B00")]
		public int Add(object value)
		{
			return default(int);
		}

		[Token(Token = "0x6000612")]
		[Address(RVA = "0x1342070", Offset = "0x1342070", VA = "0x1342070")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000613")]
		[Address(RVA = "0x134218C", Offset = "0x134218C", VA = "0x134218C", Slot = "57")]
		public bool Equals(JsonData x)
		{
			return default(bool);
		}

		[Token(Token = "0x6000614")]
		[Address(RVA = "0x1342278", Offset = "0x1342278", VA = "0x1342278", Slot = "14")]
		public JsonType GetJsonType()
		{
			return default(JsonType);
		}

		[Token(Token = "0x6000615")]
		[Address(RVA = "0x1342280", Offset = "0x1342280", VA = "0x1342280", Slot = "20")]
		public void SetJsonType(JsonType type)
		{
		}

		[Token(Token = "0x6000616")]
		[Address(RVA = "0x13409F4", Offset = "0x13409F4", VA = "0x13409F4")]
		public string ToJson()
		{
			return null;
		}

		[Token(Token = "0x6000617")]
		[Address(RVA = "0x1340AC8", Offset = "0x1340AC8", VA = "0x1340AC8")]
		public void ToJson(JsonWriter writer)
		{
		}

		[Token(Token = "0x6000618")]
		[Address(RVA = "0x13423C8", Offset = "0x13423C8", VA = "0x13423C8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000072")]
	internal class OrderedDictionaryEnumerator : IDictionaryEnumerator, IEnumerator
	{
		[Token(Token = "0x4000250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IEnumerator<KeyValuePair<string, JsonData>> list_enumerator;

		[Token(Token = "0x17000095")]
		public object Current
		{
			[Token(Token = "0x6000619")]
			[Address(RVA = "0x16C3E14", Offset = "0x16C3E14", VA = "0x16C3E14", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000096")]
		public DictionaryEntry Entry
		{
			[Token(Token = "0x600061A")]
			[Address(RVA = "0x16C3E80", Offset = "0x16C3E80", VA = "0x16C3E80", Slot = "6")]
			get
			{
				return default(DictionaryEntry);
			}
		}

		[Token(Token = "0x17000097")]
		public object Key
		{
			[Token(Token = "0x600061B")]
			[Address(RVA = "0x16C3F60", Offset = "0x16C3F60", VA = "0x16C3F60", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000098")]
		public object Value
		{
			[Token(Token = "0x600061C")]
			[Address(RVA = "0x16C4010", Offset = "0x16C4010", VA = "0x16C4010", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600061D")]
		[Address(RVA = "0x16C40C8", Offset = "0x16C40C8", VA = "0x16C40C8")]
		public OrderedDictionaryEnumerator(IEnumerator<KeyValuePair<string, JsonData>> enumerator)
		{
		}

		[Token(Token = "0x600061E")]
		[Address(RVA = "0x16C40FC", Offset = "0x16C40FC", VA = "0x16C40FC", Slot = "7")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600061F")]
		[Address(RVA = "0x16C41AC", Offset = "0x16C41AC", VA = "0x16C41AC", Slot = "9")]
		public void Reset()
		{
		}
	}
	[Token(Token = "0x2000073")]
	public class JsonException : ApplicationException
	{
		[Token(Token = "0x6000620")]
		[Address(RVA = "0x13424A8", Offset = "0x13424A8", VA = "0x13424A8")]
		public JsonException()
		{
		}

		[Token(Token = "0x6000621")]
		[Address(RVA = "0x13424B0", Offset = "0x13424B0", VA = "0x13424B0")]
		internal JsonException(ParserToken token)
		{
		}

		[Token(Token = "0x6000622")]
		[Address(RVA = "0x1342540", Offset = "0x1342540", VA = "0x1342540")]
		internal JsonException(ParserToken token, Exception inner_exception)
		{
		}

		[Token(Token = "0x6000623")]
		[Address(RVA = "0x13425E0", Offset = "0x13425E0", VA = "0x13425E0")]
		internal JsonException(int c)
		{
		}

		[Token(Token = "0x6000624")]
		[Address(RVA = "0x1342670", Offset = "0x1342670", VA = "0x1342670")]
		internal JsonException(int c, Exception inner_exception)
		{
		}

		[Token(Token = "0x6000625")]
		[Address(RVA = "0x1342710", Offset = "0x1342710", VA = "0x1342710")]
		public JsonException(string message)
		{
		}

		[Token(Token = "0x6000626")]
		[Address(RVA = "0x1342718", Offset = "0x1342718", VA = "0x1342718")]
		public JsonException(string message, Exception inner_exception)
		{
		}
	}
	[Token(Token = "0x2000074")]
	internal struct PropertyMetadata
	{
		[Token(Token = "0x4000251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MemberInfo Info;

		[Token(Token = "0x4000252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsField;

		[Token(Token = "0x4000253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Type Type;
	}
	[Token(Token = "0x2000075")]
	internal struct ArrayMetadata
	{
		[Token(Token = "0x4000254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Type element_type;

		[Token(Token = "0x4000255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private bool is_array;

		[Token(Token = "0x4000256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		private bool is_list;

		[Token(Token = "0x17000099")]
		public Type ElementType
		{
			[Token(Token = "0x6000627")]
			[Address(RVA = "0xDDFC68", Offset = "0xDDFC68", VA = "0xDDFC68")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000628")]
			[Address(RVA = "0xDDFC70", Offset = "0xDDFC70", VA = "0xDDFC70")]
			set
			{
			}
		}

		[Token(Token = "0x1700009A")]
		public bool IsArray
		{
			[Token(Token = "0x6000629")]
			[Address(RVA = "0xDDFC78", Offset = "0xDDFC78", VA = "0xDDFC78")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600062A")]
			[Address(RVA = "0xDDFC80", Offset = "0xDDFC80", VA = "0xDDFC80")]
			set
			{
			}
		}

		[Token(Token = "0x1700009B")]
		public bool IsList
		{
			[Token(Token = "0x600062B")]
			[Address(RVA = "0xDDFC8C", Offset = "0xDDFC8C", VA = "0xDDFC8C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600062C")]
			[Address(RVA = "0xDDFC94", Offset = "0xDDFC94", VA = "0xDDFC94")]
			set
			{
			}
		}
	}
	[Token(Token = "0x2000076")]
	internal struct ObjectMetadata
	{
		[Token(Token = "0x4000257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Type element_type;

		[Token(Token = "0x4000258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private bool is_dictionary;

		[Token(Token = "0x4000259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IDictionary<string, PropertyMetadata> properties;

		[Token(Token = "0x1700009C")]
		public Type ElementType
		{
			[Token(Token = "0x600062D")]
			[Address(RVA = "0xDF6990", Offset = "0xDF6990", VA = "0xDF6990")]
			get
			{
				return null;
			}
			[Token(Token = "0x600062E")]
			[Address(RVA = "0xDF6998", Offset = "0xDF6998", VA = "0xDF6998")]
			set
			{
			}
		}

		[Token(Token = "0x1700009D")]
		public bool IsDictionary
		{
			[Token(Token = "0x600062F")]
			[Address(RVA = "0xDF69A0", Offset = "0xDF69A0", VA = "0xDF69A0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000630")]
			[Address(RVA = "0xDF69A8", Offset = "0xDF69A8", VA = "0xDF69A8")]
			set
			{
			}
		}

		[Token(Token = "0x1700009E")]
		public IDictionary<string, PropertyMetadata> Properties
		{
			[Token(Token = "0x6000631")]
			[Address(RVA = "0xDF69B4", Offset = "0xDF69B4", VA = "0xDF69B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000632")]
			[Address(RVA = "0xDF69BC", Offset = "0xDF69BC", VA = "0xDF69BC")]
			set
			{
			}
		}
	}
	[Token(Token = "0x2000077")]
	internal delegate void ExporterFunc(object obj, JsonWriter writer);
	[Token(Token = "0x2000078")]
	public delegate void ExporterFunc<T>(T obj, JsonWriter writer);
	[Token(Token = "0x2000079")]
	internal delegate object ImporterFunc(object input);
	[Token(Token = "0x200007A")]
	public delegate TValue ImporterFunc<TJson, TValue>(TJson input);
	[Token(Token = "0x200007B")]
	public delegate IJsonWrapper WrapperFactory();
	[Token(Token = "0x200007C")]
	public class JsonMapper
	{
		[Serializable]
		[Token(Token = "0x20002B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCAF0C8", Offset = "0xCAF0C8")]
		private sealed class <>c
		{
			[Token(Token = "0x4000DC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000DC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static ExporterFunc <>9__23_0;

			[Token(Token = "0x4000DC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static ExporterFunc <>9__23_1;

			[Token(Token = "0x4000DC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static ExporterFunc <>9__23_2;

			[Token(Token = "0x4000DC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static ExporterFunc <>9__23_3;

			[Token(Token = "0x4000DC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static ExporterFunc <>9__23_4;

			[Token(Token = "0x4000DCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static ExporterFunc <>9__23_5;

			[Token(Token = "0x4000DCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static ExporterFunc <>9__23_6;

			[Token(Token = "0x4000DCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static ExporterFunc <>9__23_7;

			[Token(Token = "0x4000DCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public static ExporterFunc <>9__23_8;

			[Token(Token = "0x4000DCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public static ExporterFunc <>9__23_9;

			[Token(Token = "0x4000DCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public static ImporterFunc <>9__24_0;

			[Token(Token = "0x4000DD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public static ImporterFunc <>9__24_1;

			[Token(Token = "0x4000DD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public static ImporterFunc <>9__24_2;

			[Token(Token = "0x4000DD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public static ImporterFunc <>9__24_3;

			[Token(Token = "0x4000DD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public static ImporterFunc <>9__24_4;

			[Token(Token = "0x4000DD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public static ImporterFunc <>9__24_5;

			[Token(Token = "0x4000DD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public static ImporterFunc <>9__24_6;

			[Token(Token = "0x4000DD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public static ImporterFunc <>9__24_7;

			[Token(Token = "0x4000DD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			public static ImporterFunc <>9__24_8;

			[Token(Token = "0x4000DD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			public static ImporterFunc <>9__24_9;

			[Token(Token = "0x4000DD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			public static ImporterFunc <>9__24_10;

			[Token(Token = "0x4000DDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			public static ImporterFunc <>9__24_11;

			[Token(Token = "0x4000DDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public static ImporterFunc <>9__24_12;

			[Token(Token = "0x4000DDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public static WrapperFactory <>9__29_0;

			[Token(Token = "0x4000DDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			public static WrapperFactory <>9__30_0;

			[Token(Token = "0x4000DDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			public static WrapperFactory <>9__31_0;

			[Token(Token = "0x60010BB")]
			[Address(RVA = "0x16BD940", Offset = "0x16BD940", VA = "0x16BD940")]
			public <>c()
			{
			}

			[Token(Token = "0x60010BC")]
			[Address(RVA = "0x16BD948", Offset = "0x16BD948", VA = "0x16BD948")]
			internal void <RegisterBaseExporters>b__23_0(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x60010BD")]
			[Address(RVA = "0x16BDAE0", Offset = "0x16BDAE0", VA = "0x16BDAE0")]
			internal void <RegisterBaseExporters>b__23_1(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x60010BE")]
			[Address(RVA = "0x16BDC34", Offset = "0x16BDC34", VA = "0x16BDC34")]
			internal void <RegisterBaseExporters>b__23_2(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x60010BF")]
			[Address(RVA = "0x16BDD20", Offset = "0x16BDD20", VA = "0x16BDD20")]
			internal void <RegisterBaseExporters>b__23_3(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x60010C0")]
			[Address(RVA = "0x16BDE94", Offset = "0x16BDE94", VA = "0x16BDE94")]
			internal void <RegisterBaseExporters>b__23_4(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x60010C1")]
			[Address(RVA = "0x16BDF4C", Offset = "0x16BDF4C", VA = "0x16BDF4C")]
			internal void <RegisterBaseExporters>b__23_5(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x60010C2")]
			[Address(RVA = "0x16BE004", Offset = "0x16BE004", VA = "0x16BE004")]
			internal void <RegisterBaseExporters>b__23_6(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x60010C3")]
			[Address(RVA = "0x16BE0BC", Offset = "0x16BE0BC", VA = "0x16BE0BC")]
			internal void <RegisterBaseExporters>b__23_7(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x60010C4")]
			[Address(RVA = "0x16BE254", Offset = "0x16BE254", VA = "0x16BE254")]
			internal void <RegisterBaseExporters>b__23_8(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x60010C5")]
			[Address(RVA = "0x16BE2E0", Offset = "0x16BE2E0", VA = "0x16BE2E0")]
			internal void <RegisterBaseExporters>b__23_9(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x60010C6")]
			[Address(RVA = "0x16BE4AC", Offset = "0x16BE4AC", VA = "0x16BE4AC")]
			internal object <RegisterBaseImporters>b__24_0(object input)
			{
				return null;
			}

			[Token(Token = "0x60010C7")]
			[Address(RVA = "0x16BE570", Offset = "0x16BE570", VA = "0x16BE570")]
			internal object <RegisterBaseImporters>b__24_1(object input)
			{
				return null;
			}

			[Token(Token = "0x60010C8")]
			[Address(RVA = "0x16BE634", Offset = "0x16BE634", VA = "0x16BE634")]
			internal object <RegisterBaseImporters>b__24_2(object input)
			{
				return null;
			}

			[Token(Token = "0x60010C9")]
			[Address(RVA = "0x16BE6F8", Offset = "0x16BE6F8", VA = "0x16BE6F8")]
			internal object <RegisterBaseImporters>b__24_3(object input)
			{
				return null;
			}

			[Token(Token = "0x60010CA")]
			[Address(RVA = "0x16BE7BC", Offset = "0x16BE7BC", VA = "0x16BE7BC")]
			internal object <RegisterBaseImporters>b__24_4(object input)
			{
				return null;
			}

			[Token(Token = "0x60010CB")]
			[Address(RVA = "0x16BE880", Offset = "0x16BE880", VA = "0x16BE880")]
			internal object <RegisterBaseImporters>b__24_5(object input)
			{
				return null;
			}

			[Token(Token = "0x60010CC")]
			[Address(RVA = "0x16BE944", Offset = "0x16BE944", VA = "0x16BE944")]
			internal object <RegisterBaseImporters>b__24_6(object input)
			{
				return null;
			}

			[Token(Token = "0x60010CD")]
			[Address(RVA = "0x16BEA04", Offset = "0x16BEA04", VA = "0x16BEA04")]
			internal object <RegisterBaseImporters>b__24_7(object input)
			{
				return null;
			}

			[Token(Token = "0x60010CE")]
			[Address(RVA = "0x16BEAC8", Offset = "0x16BEAC8", VA = "0x16BEAC8")]
			internal object <RegisterBaseImporters>b__24_8(object input)
			{
				return null;
			}

			[Token(Token = "0x60010CF")]
			[Address(RVA = "0x16BEB88", Offset = "0x16BEB88", VA = "0x16BEB88")]
			internal object <RegisterBaseImporters>b__24_9(object input)
			{
				return null;
			}

			[Token(Token = "0x60010D0")]
			[Address(RVA = "0x16BEC4C", Offset = "0x16BEC4C", VA = "0x16BEC4C")]
			internal object <RegisterBaseImporters>b__24_10(object input)
			{
				return null;
			}

			[Token(Token = "0x60010D1")]
			[Address(RVA = "0x16BED10", Offset = "0x16BED10", VA = "0x16BED10")]
			internal object <RegisterBaseImporters>b__24_11(object input)
			{
				return null;
			}

			[Token(Token = "0x60010D2")]
			[Address(RVA = "0x16BEDCC", Offset = "0x16BEDCC", VA = "0x16BEDCC")]
			internal object <RegisterBaseImporters>b__24_12(object input)
			{
				return null;
			}

			[Token(Token = "0x60010D3")]
			[Address(RVA = "0x16BEEBC", Offset = "0x16BEEBC", VA = "0x16BEEBC")]
			internal IJsonWrapper <ToObject>b__29_0()
			{
				return null;
			}

			[Token(Token = "0x60010D4")]
			[Address(RVA = "0x16BEF18", Offset = "0x16BEF18", VA = "0x16BEF18")]
			internal IJsonWrapper <ToObject>b__30_0()
			{
				return null;
			}

			[Token(Token = "0x60010D5")]
			[Address(RVA = "0x16BEF74", Offset = "0x16BEF74", VA = "0x16BEF74")]
			internal IJsonWrapper <ToObject>b__31_0()
			{
				return null;
			}
		}

		[Token(Token = "0x20002B1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCAF0D8", Offset = "0xCAF0D8")]
		private sealed class <>c__DisplayClass37_0<T>
		{
			[Token(Token = "0x4000DDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ExporterFunc<T> exporter;

			[Token(Token = "0x60010D6")]
			public <>c__DisplayClass37_0()
			{
			}

			[Token(Token = "0x60010D7")]
			internal void <RegisterExporter>b__0(object obj, JsonWriter writer)
			{
			}
		}

		[Token(Token = "0x20002B2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCAF0E8", Offset = "0xCAF0E8")]
		private sealed class <>c__DisplayClass38_0<TJson, TValue>
		{
			[Token(Token = "0x4000DE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ImporterFunc<TJson, TValue> importer;

			[Token(Token = "0x60010D8")]
			public <>c__DisplayClass38_0()
			{
			}

			[Token(Token = "0x60010D9")]
			internal object <RegisterImporter>b__0(object input)
			{
				return null;
			}
		}

		[Token(Token = "0x400025A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int max_nesting_depth;

		[Token(Token = "0x400025B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IFormatProvider datetime_format;

		[Token(Token = "0x400025C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IDictionary<Type, ExporterFunc> base_exporters_table;

		[Token(Token = "0x400025D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IDictionary<Type, ExporterFunc> custom_exporters_table;

		[Token(Token = "0x400025E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static IDictionary<Type, IDictionary<Type, ImporterFunc>> base_importers_table;

		[Token(Token = "0x400025F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static IDictionary<Type, IDictionary<Type, ImporterFunc>> custom_importers_table;

		[Token(Token = "0x4000260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static IDictionary<Type, ArrayMetadata> array_metadata;

		[Token(Token = "0x4000261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static readonly object array_metadata_lock;

		[Token(Token = "0x4000262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static IDictionary<Type, IDictionary<Type, MethodInfo>> conv_ops;

		[Token(Token = "0x4000263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static readonly object conv_ops_lock;

		[Token(Token = "0x4000264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static IDictionary<Type, ObjectMetadata> object_metadata;

		[Token(Token = "0x4000265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static readonly object object_metadata_lock;

		[Token(Token = "0x4000266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private static IDictionary<Type, IList<PropertyMetadata>> type_properties;

		[Token(Token = "0x4000267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private static readonly object type_properties_lock;

		[Token(Token = "0x4000268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private static JsonWriter static_writer;

		[Token(Token = "0x4000269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private static readonly object static_writer_lock;

		[Token(Token = "0x6000647")]
		[Address(RVA = "0x1342720", Offset = "0x1342720", VA = "0x1342720")]
		static JsonMapper()
		{
		}

		[Token(Token = "0x6000648")]
		[Address(RVA = "0x1344704", Offset = "0x1344704", VA = "0x1344704")]
		private static void AddArrayMetadata(Type type)
		{
		}

		[Token(Token = "0x6000649")]
		[Address(RVA = "0x1344BB4", Offset = "0x1344BB4", VA = "0x1344BB4")]
		private static void AddObjectMetadata(Type type)
		{
		}

		[Token(Token = "0x600064A")]
		[Address(RVA = "0x134537C", Offset = "0x134537C", VA = "0x134537C")]
		private static void AddTypeProperties(Type type)
		{
		}

		[Token(Token = "0x600064B")]
		[Address(RVA = "0x1345900", Offset = "0x1345900", VA = "0x1345900")]
		private static MethodInfo GetConvOp(Type t1, Type t2)
		{
			return null;
		}

		[Token(Token = "0x600064C")]
		[Address(RVA = "0x13461D4", Offset = "0x13461D4", VA = "0x13461D4")]
		private static object ReadValue(Type inst_type, JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x600064D")]
		[Address(RVA = "0x1347164", Offset = "0x1347164", VA = "0x1347164")]
		private static IJsonWrapper ReadValue(WrapperFactory factory, JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x600064E")]
		[Address(RVA = "0x1342A60", Offset = "0x1342A60", VA = "0x1342A60")]
		private static void RegisterBaseExporters()
		{
		}

		[Token(Token = "0x600064F")]
		[Address(RVA = "0x13438BC", Offset = "0x13438BC", VA = "0x13438BC")]
		private static void RegisterBaseImporters()
		{
		}

		[Token(Token = "0x6000650")]
		[Address(RVA = "0x1347804", Offset = "0x1347804", VA = "0x1347804")]
		private static void RegisterImporter(IDictionary<Type, IDictionary<Type, ImporterFunc>> table, Type json_type, Type value_type, ImporterFunc importer)
		{
		}

		[Token(Token = "0x6000651")]
		[Address(RVA = "0x1347A48", Offset = "0x1347A48", VA = "0x1347A48")]
		private static void WriteValue(object obj, JsonWriter writer, bool writer_is_private, int depth)
		{
		}

		[Token(Token = "0x6000652")]
		[Address(RVA = "0x1348FA4", Offset = "0x1348FA4", VA = "0x1348FA4")]
		public static string ToJson(object obj)
		{
			return null;
		}

		[Token(Token = "0x6000653")]
		[Address(RVA = "0x1349118", Offset = "0x1349118", VA = "0x1349118")]
		public static void ToJson(object obj, JsonWriter writer)
		{
		}

		[Token(Token = "0x6000654")]
		[Address(RVA = "0x1349194", Offset = "0x1349194", VA = "0x1349194")]
		public static JsonData ToObject(JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x6000655")]
		[Address(RVA = "0x1349348", Offset = "0x1349348", VA = "0x1349348")]
		public static JsonData ToObject(TextReader reader)
		{
			return null;
		}

		[Token(Token = "0x6000656")]
		[Address(RVA = "0x13494A8", Offset = "0x13494A8", VA = "0x13494A8")]
		public static JsonData ToObject(string json)
		{
			return null;
		}

		[Token(Token = "0x6000657")]
		public static T ToObject<T>(JsonReader reader)
		{
			return (T)null;
		}

		[Token(Token = "0x6000658")]
		public static T ToObject<T>(TextReader reader)
		{
			return (T)null;
		}

		[Token(Token = "0x6000659")]
		public static T ToObject<T>(string json)
		{
			return (T)null;
		}

		[Token(Token = "0x600065A")]
		[Address(RVA = "0x13492D4", Offset = "0x13492D4", VA = "0x13492D4")]
		public static IJsonWrapper ToWrapper(WrapperFactory factory, JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x600065B")]
		[Address(RVA = "0x13495E8", Offset = "0x13495E8", VA = "0x13495E8")]
		public static IJsonWrapper ToWrapper(WrapperFactory factory, string json)
		{
			return null;
		}

		[Token(Token = "0x600065C")]
		public static void RegisterExporter<T>(ExporterFunc<T> exporter)
		{
		}

		[Token(Token = "0x600065D")]
		public static void RegisterImporter<TJson, TValue>(ImporterFunc<TJson, TValue> importer)
		{
		}

		[Token(Token = "0x600065E")]
		[Address(RVA = "0x134967C", Offset = "0x134967C", VA = "0x134967C")]
		public static void UnregisterExporters()
		{
		}

		[Token(Token = "0x600065F")]
		[Address(RVA = "0x1349754", Offset = "0x1349754", VA = "0x1349754")]
		public static void UnregisterImporters()
		{
		}

		[Token(Token = "0x6000660")]
		[Address(RVA = "0x134982C", Offset = "0x134982C", VA = "0x134982C")]
		public JsonMapper()
		{
		}
	}
	[Token(Token = "0x200007D")]
	public enum JsonToken
	{
		[Token(Token = "0x400026B")]
		None,
		[Token(Token = "0x400026C")]
		ObjectStart,
		[Token(Token = "0x400026D")]
		PropertyName,
		[Token(Token = "0x400026E")]
		ObjectEnd,
		[Token(Token = "0x400026F")]
		ArrayStart,
		[Token(Token = "0x4000270")]
		ArrayEnd,
		[Token(Token = "0x4000271")]
		Int,
		[Token(Token = "0x4000272")]
		Long,
		[Token(Token = "0x4000273")]
		Double,
		[Token(Token = "0x4000274")]
		String,
		[Token(Token = "0x4000275")]
		Boolean,
		[Token(Token = "0x4000276")]
		Null
	}
	[Token(Token = "0x200007E")]
	public class JsonReader
	{
		[Token(Token = "0x4000277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IDictionary<int, IDictionary<int, int[]>> parse_table;

		[Token(Token = "0x4000278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Stack<int> automaton_stack;

		[Token(Token = "0x4000279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int current_input;

		[Token(Token = "0x400027A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int current_symbol;

		[Token(Token = "0x400027B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool end_of_json;

		[Token(Token = "0x400027C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool end_of_input;

		[Token(Token = "0x400027D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Lexer lexer;

		[Token(Token = "0x400027E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool parser_in_string;

		[Token(Token = "0x400027F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool parser_return;

		[Token(Token = "0x4000280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		private bool read_started;

		[Token(Token = "0x4000281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TextReader reader;

		[Token(Token = "0x4000282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool reader_is_owned;

		[Token(Token = "0x4000283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private object token_value;

		[Token(Token = "0x4000284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private JsonToken token;

		[Token(Token = "0x1700009F")]
		public bool AllowComments
		{
			[Token(Token = "0x6000661")]
			[Address(RVA = "0x16BEFD0", Offset = "0x16BEFD0", VA = "0x16BEFD0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000662")]
			[Address(RVA = "0x16BEFEC", Offset = "0x16BEFEC", VA = "0x16BEFEC")]
			set
			{
			}
		}

		[Token(Token = "0x170000A0")]
		public bool AllowSingleQuotedStrings
		{
			[Token(Token = "0x6000663")]
			[Address(RVA = "0x16BF00C", Offset = "0x16BF00C", VA = "0x16BF00C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000664")]
			[Address(RVA = "0x16BF028", Offset = "0x16BF028", VA = "0x16BF028")]
			set
			{
			}
		}

		[Token(Token = "0x170000A1")]
		public bool EndOfInput
		{
			[Token(Token = "0x6000665")]
			[Address(RVA = "0x16BF048", Offset = "0x16BF048", VA = "0x16BF048")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000A2")]
		public bool EndOfJson
		{
			[Token(Token = "0x6000666")]
			[Address(RVA = "0x16BF050", Offset = "0x16BF050", VA = "0x16BF050")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000A3")]
		public JsonToken Token
		{
			[Token(Token = "0x6000667")]
			[Address(RVA = "0x16BF058", Offset = "0x16BF058", VA = "0x16BF058")]
			get
			{
				return default(JsonToken);
			}
		}

		[Token(Token = "0x170000A4")]
		public object Value
		{
			[Token(Token = "0x6000668")]
			[Address(RVA = "0x16BF060", Offset = "0x16BF060", VA = "0x16BF060")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000669")]
		[Address(RVA = "0x16BF068", Offset = "0x16BF068", VA = "0x16BF068")]
		static JsonReader()
		{
		}

		[Token(Token = "0x600066A")]
		[Address(RVA = "0x16BF6E8", Offset = "0x16BF6E8", VA = "0x16BF6E8")]
		public JsonReader(string json_text)
		{
		}

		[Token(Token = "0x600066B")]
		[Address(RVA = "0x16BF8CC", Offset = "0x16BF8CC", VA = "0x16BF8CC")]
		public JsonReader(TextReader reader)
		{
		}

		[Token(Token = "0x600066C")]
		[Address(RVA = "0x16BF760", Offset = "0x16BF760", VA = "0x16BF760")]
		private JsonReader(TextReader reader, bool owned)
		{
		}

		[Token(Token = "0x600066D")]
		[Address(RVA = "0x16BF06C", Offset = "0x16BF06C", VA = "0x16BF06C")]
		private static void PopulateParseTable()
		{
		}

		[Token(Token = "0x600066E")]
		[Address(RVA = "0x16BFAD8", Offset = "0x16BFAD8", VA = "0x16BFAD8")]
		private static void TableAddCol(ParserToken row, int col, params int[] symbols)
		{
		}

		[Token(Token = "0x600066F")]
		[Address(RVA = "0x16BF9C8", Offset = "0x16BF9C8", VA = "0x16BF9C8")]
		private static void TableAddRow(ParserToken rule)
		{
		}

		[Token(Token = "0x6000670")]
		[Address(RVA = "0x16BFC40", Offset = "0x16BFC40", VA = "0x16BFC40")]
		private void ProcessNumber(string number)
		{
		}

		[Token(Token = "0x6000671")]
		[Address(RVA = "0x16BFDCC", Offset = "0x16BFDCC", VA = "0x16BFDCC")]
		private void ProcessSymbol()
		{
		}

		[Token(Token = "0x6000672")]
		[Address(RVA = "0x16BFF94", Offset = "0x16BFF94", VA = "0x16BFF94")]
		private bool ReadToken()
		{
			return default(bool);
		}

		[Token(Token = "0x6000673")]
		[Address(RVA = "0x16C01DC", Offset = "0x16C01DC", VA = "0x16C01DC")]
		public void Close()
		{
		}

		[Token(Token = "0x6000674")]
		[Address(RVA = "0x16C0240", Offset = "0x16C0240", VA = "0x16C0240")]
		public bool Read()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200007F")]
	internal enum Condition
	{
		[Token(Token = "0x4000286")]
		InArray,
		[Token(Token = "0x4000287")]
		InObject,
		[Token(Token = "0x4000288")]
		NotAProperty,
		[Token(Token = "0x4000289")]
		Property,
		[Token(Token = "0x400028A")]
		Value
	}
	[Token(Token = "0x2000080")]
	internal class WriterContext
	{
		[Token(Token = "0x400028B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Count;

		[Token(Token = "0x400028C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool InArray;

		[Token(Token = "0x400028D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public bool InObject;

		[Token(Token = "0x400028E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		public bool ExpectingValue;

		[Token(Token = "0x400028F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Padding;

		[Token(Token = "0x6000675")]
		[Address(RVA = "0x16C0BE8", Offset = "0x16C0BE8", VA = "0x16C0BE8")]
		public WriterContext()
		{
		}
	}
	[Token(Token = "0x2000081")]
	public class JsonWriter
	{
		[Token(Token = "0x4000290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static NumberFormatInfo number_format;

		[Token(Token = "0x4000291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private WriterContext context;

		[Token(Token = "0x4000292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Stack<WriterContext> ctx_stack;

		[Token(Token = "0x4000293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool has_reached_end;

		[Token(Token = "0x4000294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private char[] hex_seq;

		[Token(Token = "0x4000295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int indentation;

		[Token(Token = "0x4000296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int indent_value;

		[Token(Token = "0x4000297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private StringBuilder inst_string_builder;

		[Token(Token = "0x4000298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool pretty_print;

		[Token(Token = "0x4000299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool validate;

		[Token(Token = "0x400029A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TextWriter writer;

		[Token(Token = "0x170000A5")]
		public int IndentValue
		{
			[Token(Token = "0x6000676")]
			[Address(RVA = "0x16C0684", Offset = "0x16C0684", VA = "0x16C0684")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000677")]
			[Address(RVA = "0x16C068C", Offset = "0x16C068C", VA = "0x16C068C")]
			set
			{
			}
		}

		[Token(Token = "0x170000A6")]
		public bool PrettyPrint
		{
			[Token(Token = "0x6000678")]
			[Address(RVA = "0x16C06A0", Offset = "0x16C06A0", VA = "0x16C06A0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000679")]
			[Address(RVA = "0x16C06A8", Offset = "0x16C06A8", VA = "0x16C06A8")]
			set
			{
			}
		}

		[Token(Token = "0x170000A7")]
		public TextWriter TextWriter
		{
			[Token(Token = "0x600067A")]
			[Address(RVA = "0x16C06B4", Offset = "0x16C06B4", VA = "0x16C06B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A8")]
		public bool Validate
		{
			[Token(Token = "0x600067B")]
			[Address(RVA = "0x16C06BC", Offset = "0x16C06BC", VA = "0x16C06BC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600067C")]
			[Address(RVA = "0x16C06C4", Offset = "0x16C06C4", VA = "0x16C06C4")]
			set
			{
			}
		}

		[Token(Token = "0x600067D")]
		[Address(RVA = "0x16C06D0", Offset = "0x16C06D0", VA = "0x16C06D0")]
		static JsonWriter()
		{
		}

		[Token(Token = "0x600067E")]
		[Address(RVA = "0x16C0730", Offset = "0x16C0730", VA = "0x16C0730")]
		public JsonWriter()
		{
		}

		[Token(Token = "0x600067F")]
		[Address(RVA = "0x16C08EC", Offset = "0x16C08EC", VA = "0x16C08EC")]
		public JsonWriter(StringBuilder sb)
		{
		}

		[Token(Token = "0x6000680")]
		[Address(RVA = "0x16C0960", Offset = "0x16C0960", VA = "0x16C0960")]
		public JsonWriter(TextWriter writer)
		{
		}

		[Token(Token = "0x6000681")]
		[Address(RVA = "0x16C0A0C", Offset = "0x16C0A0C", VA = "0x16C0A0C")]
		private void DoValidation(Condition cond)
		{
		}

		[Token(Token = "0x6000682")]
		[Address(RVA = "0x16C07E8", Offset = "0x16C07E8", VA = "0x16C07E8")]
		private void Init()
		{
		}

		[Token(Token = "0x6000683")]
		[Address(RVA = "0x16C0BF0", Offset = "0x16C0BF0", VA = "0x16C0BF0")]
		private static void IntToHex(int n, char[] hex)
		{
		}

		[Token(Token = "0x6000684")]
		[Address(RVA = "0x16C0C78", Offset = "0x16C0C78", VA = "0x16C0C78")]
		private void Indent()
		{
		}

		[Token(Token = "0x6000685")]
		[Address(RVA = "0x16C0C90", Offset = "0x16C0C90", VA = "0x16C0C90")]
		private void Put(string str)
		{
		}

		[Token(Token = "0x6000686")]
		[Address(RVA = "0x16C0D24", Offset = "0x16C0D24", VA = "0x16C0D24")]
		private void PutNewline()
		{
		}

		[Token(Token = "0x6000687")]
		[Address(RVA = "0x16C0D2C", Offset = "0x16C0D2C", VA = "0x16C0D2C")]
		private void PutNewline(bool add_comma)
		{
		}

		[Token(Token = "0x6000688")]
		[Address(RVA = "0x16C0DBC", Offset = "0x16C0DBC", VA = "0x16C0DBC")]
		private void PutString(string str)
		{
		}

		[Token(Token = "0x6000689")]
		[Address(RVA = "0x16C1064", Offset = "0x16C1064", VA = "0x16C1064")]
		private void Unindent()
		{
		}

		[Token(Token = "0x600068A")]
		[Address(RVA = "0x16C107C", Offset = "0x16C107C", VA = "0x16C107C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600068B")]
		[Address(RVA = "0x16C10EC", Offset = "0x16C10EC", VA = "0x16C10EC")]
		public void Reset()
		{
		}

		[Token(Token = "0x600068C")]
		[Address(RVA = "0x16C11D4", Offset = "0x16C11D4", VA = "0x16C11D4")]
		public void Write(bool boolean)
		{
		}

		[Token(Token = "0x600068D")]
		[Address(RVA = "0x16BDDAC", Offset = "0x16BDDAC", VA = "0x16BDDAC")]
		public void Write(decimal number)
		{
		}

		[Token(Token = "0x600068E")]
		[Address(RVA = "0x16BE370", Offset = "0x16BE370", VA = "0x16BE370")]
		public void Write(double number)
		{
		}

		[Token(Token = "0x600068F")]
		[Address(RVA = "0x16BDA00", Offset = "0x16BDA00", VA = "0x16BDA00")]
		public void Write(int number)
		{
		}

		[Token(Token = "0x6000690")]
		[Address(RVA = "0x16C1270", Offset = "0x16C1270", VA = "0x16C1270")]
		public void Write(long number)
		{
		}

		[Token(Token = "0x6000691")]
		[Address(RVA = "0x16BDB98", Offset = "0x16BDB98", VA = "0x16BDB98")]
		public void Write(string str)
		{
		}

		[Token(Token = "0x6000692")]
		[Address(RVA = "0x16BE174", Offset = "0x16BE174", VA = "0x16BE174")]
		public void Write(ulong number)
		{
		}

		[Token(Token = "0x6000693")]
		[Address(RVA = "0x16C1350", Offset = "0x16C1350", VA = "0x16C1350")]
		public void WriteArrayEnd()
		{
		}

		[Token(Token = "0x6000694")]
		[Address(RVA = "0x16C1434", Offset = "0x16C1434", VA = "0x16C1434")]
		public void WriteArrayStart()
		{
		}

		[Token(Token = "0x6000695")]
		[Address(RVA = "0x16C1518", Offset = "0x16C1518", VA = "0x16C1518")]
		public void WriteObjectEnd()
		{
		}

		[Token(Token = "0x6000696")]
		[Address(RVA = "0x16C15FC", Offset = "0x16C15FC", VA = "0x16C15FC")]
		public void WriteObjectStart()
		{
		}

		[Token(Token = "0x6000697")]
		[Address(RVA = "0x16C16E0", Offset = "0x16C16E0", VA = "0x16C16E0")]
		public void WritePropertyName(string property_name)
		{
		}
	}
	[Token(Token = "0x2000082")]
	internal class FsmContext
	{
		[Token(Token = "0x400029B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool Return;

		[Token(Token = "0x400029C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int NextState;

		[Token(Token = "0x400029D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Lexer L;

		[Token(Token = "0x400029E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int StateStack;

		[Token(Token = "0x6000698")]
		[Address(RVA = "0x133D3C8", Offset = "0x133D3C8", VA = "0x133D3C8")]
		public FsmContext()
		{
		}
	}
	[Token(Token = "0x2000083")]
	internal class Lexer
	{
		[Token(Token = "0x20002B3")]
		private delegate bool StateHandler(FsmContext ctx);

		[Token(Token = "0x400029F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int[] fsm_return_table;

		[Token(Token = "0x40002A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static StateHandler[] fsm_handler_table;

		[Token(Token = "0x40002A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool allow_comments;

		[Token(Token = "0x40002A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool allow_single_quoted_strings;

		[Token(Token = "0x40002A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		private bool end_of_input;

		[Token(Token = "0x40002A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private FsmContext fsm_context;

		[Token(Token = "0x40002A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int input_buffer;

		[Token(Token = "0x40002A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int input_char;

		[Token(Token = "0x40002A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextReader reader;

		[Token(Token = "0x40002A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int state;

		[Token(Token = "0x40002A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private StringBuilder string_buffer;

		[Token(Token = "0x40002AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string string_value;

		[Token(Token = "0x40002AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int token;

		[Token(Token = "0x40002AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int unichar;

		[Token(Token = "0x170000A9")]
		public bool AllowComments
		{
			[Token(Token = "0x6000699")]
			[Address(RVA = "0x16C180C", Offset = "0x16C180C", VA = "0x16C180C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600069A")]
			[Address(RVA = "0x16C1814", Offset = "0x16C1814", VA = "0x16C1814")]
			set
			{
			}
		}

		[Token(Token = "0x170000AA")]
		public bool AllowSingleQuotedStrings
		{
			[Token(Token = "0x600069B")]
			[Address(RVA = "0x16C1820", Offset = "0x16C1820", VA = "0x16C1820")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600069C")]
			[Address(RVA = "0x16C1828", Offset = "0x16C1828", VA = "0x16C1828")]
			set
			{
			}
		}

		[Token(Token = "0x170000AB")]
		public bool EndOfInput
		{
			[Token(Token = "0x600069D")]
			[Address(RVA = "0x16C1834", Offset = "0x16C1834", VA = "0x16C1834")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000AC")]
		public int Token
		{
			[Token(Token = "0x600069E")]
			[Address(RVA = "0x16C183C", Offset = "0x16C183C", VA = "0x16C183C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000AD")]
		public string StringValue
		{
			[Token(Token = "0x600069F")]
			[Address(RVA = "0x16C1844", Offset = "0x16C1844", VA = "0x16C1844")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006A0")]
		[Address(RVA = "0x16C184C", Offset = "0x16C184C", VA = "0x16C184C")]
		static Lexer()
		{
		}

		[Token(Token = "0x60006A1")]
		[Address(RVA = "0x16BF8D4", Offset = "0x16BF8D4", VA = "0x16BF8D4")]
		public Lexer(TextReader reader)
		{
		}

		[Token(Token = "0x60006A2")]
		[Address(RVA = "0x16C2438", Offset = "0x16C2438", VA = "0x16C2438")]
		private static int HexValue(int digit)
		{
			return default(int);
		}

		[Token(Token = "0x60006A3")]
		[Address(RVA = "0x16C1850", Offset = "0x16C1850", VA = "0x16C1850")]
		private static void PopulateFsmTables()
		{
		}

		[Token(Token = "0x60006A4")]
		[Address(RVA = "0x16C24C8", Offset = "0x16C24C8", VA = "0x16C24C8")]
		private static char ProcessEscChar(int esc_char)
		{
			return default(char);
		}

		[Token(Token = "0x60006A5")]
		[Address(RVA = "0x16C25C8", Offset = "0x16C25C8", VA = "0x16C25C8")]
		private static bool State1(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60006A6")]
		[Address(RVA = "0x16C27D8", Offset = "0x16C27D8", VA = "0x16C27D8")]
		private static bool State2(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60006A7")]
		[Address(RVA = "0x16C2884", Offset = "0x16C2884", VA = "0x16C2884")]
		private static bool State3(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60006A8")]
		[Address(RVA = "0x16C29C4", Offset = "0x16C29C4", VA = "0x16C29C4")]
		private static bool State4(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60006A9")]
		[Address(RVA = "0x16C2AC4", Offset = "0x16C2AC4", VA = "0x16C2AC4")]
		private static bool State5(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60006AA")]
		[Address(RVA = "0x16C2B48", Offset = "0x16C2B48", VA = "0x16C2B48")]
		private static bool State6(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60006AB")]
		[Address(RVA = "0x16C2C44", Offset = "0x16C2C44", VA = "0x16C2C44")]
		private static bool State7(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60006AC")]
		[Address(RVA = "0x16C2CDC", Offset = "0x16C2CDC", VA = "0x16C2CDC")]
		private static bool State8(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60006AD")]
		[Address(RVA = "0x16C2D9C", Offset = "0x16C2D9C", VA = "0x16C2D9C")]
		private static bool State9(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60006AE")]
		[Address(RVA = "0x16C2E0C", Offset = "0x16C2E0C", VA = "0x16C2E0C")]
		private static bool State10(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60006AF")]
		[Address(RVA = "0x16C2E7C", Offset = "0x16C2E7C", VA = "0x16C2E7C")]
		private static bool State11(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60006B0")]
		[Address(RVA = "0x16C2EEC", Offset = "0x16C2EEC", VA = "0x16C2EEC")]
		private static bool State12(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60006B1")]
		[Address(RVA = "0x16C2F5C", Offset = "0x16C2F5C", VA = "0x16C2F5C")]
		private static bool State13(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60006B2")]
		[Address(RVA = "0x16C2FCC", Offset = "0x16C2FCC", VA = "0x16C2FCC")]
		private static bool State14(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60006B3")]
		[Address(RVA = "0x16C303C", Offset = "0x16C303C", VA = "0x16C303C")]
		private static bool State15(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60006B4")]
		[Address(RVA = "0x16C30AC", Offset = "0x16C30AC", VA = "0x16C30AC")]
		private static bool State16(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60006B5")]
		[Address(RVA = "0x16C311C", Offset = "0x16C311C", VA = "0x16C311C")]
		private static bool State17(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60006B6")]
		[Address(RVA = "0x16C318C", Offset = "0x16C318C", VA = "0x16C318C")]
		private static bool State18(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60006B7")]
		[Address(RVA = "0x16C31FC", Offset = "0x16C31FC", VA = "0x16C31FC")]
		private static bool State19(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60006B8")]
		[Address(RVA = "0x16C32A8", Offset = "0x16C32A8", VA = "0x16C32A8")]
		private static bool State20(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60006B9")]
		[Address(RVA = "0x16C3318", Offset = "0x16C3318", VA = "0x16C3318")]
		private static bool State21(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60006BA")]
		[Address(RVA = "0x16C3464", Offset = "0x16C3464", VA = "0x16C3464")]
		private static bool State22(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60006BB")]
		[Address(RVA = "0x16C35E8", Offset = "0x16C35E8", VA = "0x16C35E8")]
		private static bool State23(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60006BC")]
		[Address(RVA = "0x16C3694", Offset = "0x16C3694", VA = "0x16C3694")]
		private static bool State24(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60006BD")]
		[Address(RVA = "0x16C370C", Offset = "0x16C370C", VA = "0x16C370C")]
		private static bool State25(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60006BE")]
		[Address(RVA = "0x16C378C", Offset = "0x16C378C", VA = "0x16C378C")]
		private static bool State26(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60006BF")]
		[Address(RVA = "0x16C37F8", Offset = "0x16C37F8", VA = "0x16C37F8")]
		private static bool State27(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60006C0")]
		[Address(RVA = "0x16C3864", Offset = "0x16C3864", VA = "0x16C3864")]
		private static bool State28(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60006C1")]
		[Address(RVA = "0x16C27A0", Offset = "0x16C27A0", VA = "0x16C27A0")]
		private bool GetChar()
		{
			return default(bool);
		}

		[Token(Token = "0x60006C2")]
		[Address(RVA = "0x16C38E0", Offset = "0x16C38E0", VA = "0x16C38E0")]
		private int NextChar()
		{
			return default(int);
		}

		[Token(Token = "0x60006C3")]
		[Address(RVA = "0x16BFFF4", Offset = "0x16BFFF4", VA = "0x16BFFF4")]
		public bool NextToken()
		{
			return default(bool);
		}

		[Token(Token = "0x60006C4")]
		[Address(RVA = "0x16C29B8", Offset = "0x16C29B8", VA = "0x16C29B8")]
		private void UngetChar()
		{
		}
	}
	[Token(Token = "0x2000084")]
	internal enum ParserToken
	{
		[Token(Token = "0x40002AE")]
		None = 65536,
		[Token(Token = "0x40002AF")]
		Number,
		[Token(Token = "0x40002B0")]
		True,
		[Token(Token = "0x40002B1")]
		False,
		[Token(Token = "0x40002B2")]
		Null,
		[Token(Token = "0x40002B3")]
		CharSeq,
		[Token(Token = "0x40002B4")]
		Char,
		[Token(Token = "0x40002B5")]
		Text,
		[Token(Token = "0x40002B6")]
		Object,
		[Token(Token = "0x40002B7")]
		ObjectPrime,
		[Token(Token = "0x40002B8")]
		Pair,
		[Token(Token = "0x40002B9")]
		PairRest,
		[Token(Token = "0x40002BA")]
		Array,
		[Token(Token = "0x40002BB")]
		ArrayPrime,
		[Token(Token = "0x40002BC")]
		Value,
		[Token(Token = "0x40002BD")]
		ValueRest,
		[Token(Token = "0x40002BE")]
		String,
		[Token(Token = "0x40002BF")]
		End,
		[Token(Token = "0x40002C0")]
		Epsilon
	}
}
namespace UnityToolbag
{
	[Token(Token = "0x2000085")]
	public abstract class CacheBehaviour : MonoBehaviour
	{
		[Token(Token = "0x20002B4")]
		public class LoggerConfig
		{
			[Token(Token = "0x4000DE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public readonly string className;

			[Token(Token = "0x60010DE")]
			[Address(RVA = "0x1250998", Offset = "0x1250998", VA = "0x1250998")]
			public LoggerConfig(string className, bool logClassName = true, bool logGameObjectName = true, bool logThreadId = true, bool logGameTime = true)
			{
			}
		}

		[Token(Token = "0x40002C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCB135C", Offset = "0xCB135C")]
		public bool m_isDebug;

		[Token(Token = "0x40002C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool m_verboseConsole;

		[Token(Token = "0x40002C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Dictionary<Type, (Logger, LoggerConfig)> loggers;

		[NonSerialized]
		[Token(Token = "0x40002C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		private Animator _animator;

		[NonSerialized]
		[Token(Token = "0x40002C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		private Animation _animation;

		[NonSerialized]
		[Token(Token = "0x40002C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		private AudioSource _audio;

		[NonSerialized]
		[Token(Token = "0x40002C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		private Camera _camera;

		[NonSerialized]
		[Token(Token = "0x40002C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		private CinemachinePathBase _cinemachinePathBase;

		[NonSerialized]
		[Token(Token = "0x40002C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		private Collider _collider;

		[NonSerialized]
		[Token(Token = "0x40002CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		private Collider2D _collider2D;

		[NonSerialized]
		[Token(Token = "0x40002CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		private ConstantForce _constantForce;

		[NonSerialized]
		[Token(Token = "0x40002CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		private HingeJoint _hingeJoint;

		[NonSerialized]
		[Token(Token = "0x40002CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		private Light _light;

		[NonSerialized]
		[Token(Token = "0x40002CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		private ParticleSystem _particleSystem;

		[NonSerialized]
		[Token(Token = "0x40002CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		private Renderer _renderer;

		[NonSerialized]
		[Token(Token = "0x40002D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[HideInInspector]
		private SkinnedMeshRenderer _skinnedMeshRenderer;

		[NonSerialized]
		[Token(Token = "0x40002D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[HideInInspector]
		private Rigidbody _rigidbody;

		[NonSerialized]
		[Token(Token = "0x40002D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		private Rigidbody2D _rigidbody2D;

		[NonSerialized]
		[Token(Token = "0x40002D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[HideInInspector]
		private Transform _transform;

		[NonSerialized]
		[Token(Token = "0x40002D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[HideInInspector]
		private TextMeshPro _textMeshPro;

		[NonSerialized]
		[Token(Token = "0x40002D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		private TextMeshProUGUI _textMeshProUGUI;

		[Token(Token = "0x170000AE")]
		public Logger logger
		{
			[Token(Token = "0x60006C5")]
			[Address(RVA = "0x12506DC", Offset = "0x12506DC", VA = "0x12506DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AF")]
		public LoggerConfig loggerConfig
		{
			[Token(Token = "0x60006C6")]
			[Address(RVA = "0x125077C", Offset = "0x125077C", VA = "0x125077C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B0")]
		public Animator animator
		{
			[Token(Token = "0x60006CE")]
			[Address(RVA = "0x1250DD8", Offset = "0x1250DD8", VA = "0x1250DD8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B1")]
		public Animation animation
		{
			[Token(Token = "0x60006CF")]
			[Address(RVA = "0x1250E8C", Offset = "0x1250E8C", VA = "0x1250E8C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B2")]
		public AudioSource audio
		{
			[Token(Token = "0x60006D0")]
			[Address(RVA = "0x1250F40", Offset = "0x1250F40", VA = "0x1250F40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B3")]
		public Camera camera
		{
			[Token(Token = "0x60006D1")]
			[Address(RVA = "0x1250FF4", Offset = "0x1250FF4", VA = "0x1250FF4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B4")]
		public CinemachinePathBase cinemachinePathBase
		{
			[Token(Token = "0x60006D2")]
			[Address(RVA = "0x12510A8", Offset = "0x12510A8", VA = "0x12510A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B5")]
		public Collider collider
		{
			[Token(Token = "0x60006D3")]
			[Address(RVA = "0x125115C", Offset = "0x125115C", VA = "0x125115C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B6")]
		public Collider2D collider2D
		{
			[Token(Token = "0x60006D4")]
			[Address(RVA = "0x1251210", Offset = "0x1251210", VA = "0x1251210")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B7")]
		public ConstantForce constantForce
		{
			[Token(Token = "0x60006D5")]
			[Address(RVA = "0x12512C4", Offset = "0x12512C4", VA = "0x12512C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B8")]
		public HingeJoint hingeJoint
		{
			[Token(Token = "0x60006D6")]
			[Address(RVA = "0x1251378", Offset = "0x1251378", VA = "0x1251378")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B9")]
		public Light light
		{
			[Token(Token = "0x60006D7")]
			[Address(RVA = "0x125142C", Offset = "0x125142C", VA = "0x125142C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BA")]
		public ParticleSystem particleSystem
		{
			[Token(Token = "0x60006D8")]
			[Address(RVA = "0x12514E0", Offset = "0x12514E0", VA = "0x12514E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BB")]
		public Renderer renderer
		{
			[Token(Token = "0x60006D9")]
			[Address(RVA = "0x1251594", Offset = "0x1251594", VA = "0x1251594")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BC")]
		public SkinnedMeshRenderer skinnedMeshRenderer
		{
			[Token(Token = "0x60006DA")]
			[Address(RVA = "0x1251648", Offset = "0x1251648", VA = "0x1251648")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BD")]
		public Rigidbody rigidbody
		{
			[Token(Token = "0x60006DB")]
			[Address(RVA = "0x12516FC", Offset = "0x12516FC", VA = "0x12516FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BE")]
		public Rigidbody2D rigidbody2D
		{
			[Token(Token = "0x60006DC")]
			[Address(RVA = "0x12517B0", Offset = "0x12517B0", VA = "0x12517B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BF")]
		public new Transform transform
		{
			[Token(Token = "0x60006DD")]
			[Address(RVA = "0x1251864", Offset = "0x1251864", VA = "0x1251864")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C0")]
		public TextMeshPro textMeshPro
		{
			[Token(Token = "0x60006DE")]
			[Address(RVA = "0x1251918", Offset = "0x1251918", VA = "0x1251918")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C1")]
		public TextMeshProUGUI textMeshProUGUI
		{
			[Token(Token = "0x60006DF")]
			[Address(RVA = "0x12519CC", Offset = "0x12519CC", VA = "0x12519CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006C7")]
		[Address(RVA = "0x1250708", Offset = "0x1250708", VA = "0x1250708")]
		public (Logger, LoggerConfig) GetLoggerByType(Type type)
		{
			return default((Logger, LoggerConfig));
		}

		[Token(Token = "0x60006C8")]
		[Address(RVA = "0x12507B0", Offset = "0x12507B0", VA = "0x12507B0")]
		private void AddType(Type type)
		{
		}

		[Token(Token = "0x60006C9")]
		[Address(RVA = "0x12509CC", Offset = "0x12509CC", VA = "0x12509CC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xCB42B4", Offset = "0xCB42B4")]
		protected void VerboseLog(string textToShow)
		{
		}

		[Token(Token = "0x60006CA")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xCB42EC", Offset = "0xCB42EC")]
		protected void VerboseLog<T>(string message, T val)
		{
		}

		[Token(Token = "0x60006CB")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xCB4324", Offset = "0xCB4324")]
		protected void VerboseLog<T>(string message, List<T> values)
		{
		}

		[Token(Token = "0x60006CC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xCB435C", Offset = "0xCB435C")]
		protected void VerboseLog<T>(string message, T[] values)
		{
		}

		[Token(Token = "0x60006CD")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xCB4394", Offset = "0xCB4394")]
		protected void Log<T>(string message, Dictionary<T, T> values)
		{
		}

		[Token(Token = "0x60006E0")]
		[Address(RVA = "0x1251A80", Offset = "0x1251A80", VA = "0x1251A80")]
		protected CacheBehaviour()
		{
		}
	}
	[Token(Token = "0x2000086")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCA8138", Offset = "0xCA8138")]
	public class Dispatcher : MonoBehaviour
	{
		[Token(Token = "0x20002B5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCAF0F8", Offset = "0xCAF0F8")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4000DE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action action;

			[Token(Token = "0x4000DE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool hasRun;

			[Token(Token = "0x60010DF")]
			[Address(RVA = "0x1251E88", Offset = "0x1251E88", VA = "0x1251E88")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x60010E0")]
			[Address(RVA = "0x12522CC", Offset = "0x12522CC", VA = "0x12522CC")]
			internal void <Invoke>b__0()
			{
			}
		}

		[Token(Token = "0x40002D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dispatcher _instance;

		[Token(Token = "0x40002D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static bool _instanceExists;

		[Token(Token = "0x40002D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Thread _mainThread;

		[Token(Token = "0x40002D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static object _lockObject;

		[Token(Token = "0x40002DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly Queue<Action> _actions;

		[Token(Token = "0x170000C2")]
		public static bool isMainThread
		{
			[Token(Token = "0x60006E1")]
			[Address(RVA = "0x1251AFC", Offset = "0x1251AFC", VA = "0x1251AFC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60006E2")]
		[Address(RVA = "0x1251B7C", Offset = "0x1251B7C", VA = "0x1251B7C")]
		public static void InvokeAsync(Action action)
		{
		}

		[Token(Token = "0x60006E3")]
		[Address(RVA = "0x1251D34", Offset = "0x1251D34", VA = "0x1251D34")]
		public static void Invoke(Action action)
		{
		}

		[Token(Token = "0x60006E4")]
		[Address(RVA = "0x1251E90", Offset = "0x1251E90", VA = "0x1251E90")]
		private void Awake()
		{
		}

		[Token(Token = "0x60006E5")]
		[Address(RVA = "0x1251FC0", Offset = "0x1251FC0", VA = "0x1251FC0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60006E6")]
		[Address(RVA = "0x12520A4", Offset = "0x12520A4", VA = "0x12520A4")]
		private void Update()
		{
		}

		[Token(Token = "0x60006E7")]
		[Address(RVA = "0x125221C", Offset = "0x125221C", VA = "0x125221C")]
		public Dispatcher()
		{
		}
	}
	[Token(Token = "0x2000087")]
	public enum TitleSafeSizeMode
	{
		[Token(Token = "0x40002DC")]
		Pixels,
		[Token(Token = "0x40002DD")]
		Percentage
	}
	[Token(Token = "0x2000088")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCA8170", Offset = "0xCA8170")]
	public class DrawTitleSafeArea : MonoBehaviour
	{
		[Token(Token = "0x40002DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Color _innerColor;

		[Token(Token = "0x40002DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Color _outerColor;

		[Token(Token = "0x40002E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TitleSafeSizeMode _sizeMode;

		[Token(Token = "0x40002E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private int _sizeX;

		[Token(Token = "0x40002E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private int _sizeY;

		[Token(Token = "0x60006E9")]
		[Address(RVA = "0x1252304", Offset = "0x1252304", VA = "0x1252304")]
		public DrawTitleSafeArea()
		{
		}
	}
	[Token(Token = "0x2000089")]
	public enum FutureState
	{
		[Token(Token = "0x40002E4")]
		Pending,
		[Token(Token = "0x40002E5")]
		Processing,
		[Token(Token = "0x40002E6")]
		Success,
		[Token(Token = "0x40002E7")]
		Error
	}
	[Token(Token = "0x200008A")]
	public interface IFuture<T>
	{
		[Token(Token = "0x170000C3")]
		FutureState state
		{
			[Token(Token = "0x60006EA")]
			get;
		}

		[Token(Token = "0x170000C4")]
		T value
		{
			[Token(Token = "0x60006EB")]
			get;
		}

		[Token(Token = "0x170000C5")]
		Exception error
		{
			[Token(Token = "0x60006EC")]
			get;
		}

		[Token(Token = "0x60006ED")]
		IFuture<T> OnSuccess(FutureCallback<T> callback);

		[Token(Token = "0x60006EE")]
		IFuture<T> OnError(FutureCallback<T> callback);

		[Token(Token = "0x60006EF")]
		IFuture<T> OnComplete(FutureCallback<T> callback);
	}
	[Token(Token = "0x200008B")]
	public delegate void FutureCallback<T>(IFuture<T> future);
	[Token(Token = "0x200008C")]
	public sealed class Future<T> : IFuture<T>
	{
		[Token(Token = "0x20002B6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCAF108", Offset = "0xCAF108")]
		private sealed class <>c__DisplayClass12_0
		{
			[Token(Token = "0x4000DE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FutureCallback<T> callback;

			[Token(Token = "0x4000DE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Future<T> <>4__this;

			[Token(Token = "0x60010E1")]
			public <>c__DisplayClass12_0()
			{
			}

			[Token(Token = "0x60010E2")]
			internal void <OnSuccess>b__0()
			{
			}
		}

		[Token(Token = "0x20002B7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCAF118", Offset = "0xCAF118")]
		private sealed class <>c__DisplayClass13_0
		{
			[Token(Token = "0x4000DE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FutureCallback<T> callback;

			[Token(Token = "0x4000DE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Future<T> <>4__this;

			[Token(Token = "0x60010E3")]
			public <>c__DisplayClass13_0()
			{
			}

			[Token(Token = "0x60010E4")]
			internal void <OnError>b__0()
			{
			}
		}

		[Token(Token = "0x20002B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCAF128", Offset = "0xCAF128")]
		private sealed class <>c__DisplayClass14_0
		{
			[Token(Token = "0x4000DE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FutureCallback<T> callback;

			[Token(Token = "0x4000DE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Future<T> <>4__this;

			[Token(Token = "0x60010E5")]
			public <>c__DisplayClass14_0()
			{
			}

			[Token(Token = "0x60010E6")]
			internal void <OnComplete>b__0()
			{
			}
		}

		[Token(Token = "0x20002B9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCAF138", Offset = "0xCAF138")]
		private sealed class <>c__DisplayClass15_0
		{
			[Token(Token = "0x4000DEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Future<T> <>4__this;

			[Token(Token = "0x4000DEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<T> func;

			[Token(Token = "0x60010E7")]
			public <>c__DisplayClass15_0()
			{
			}

			[Token(Token = "0x60010E8")]
			internal void <Process>b__0(object _)
			{
			}
		}

		[Token(Token = "0x40002E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private FutureState _state;

		[Token(Token = "0x40002E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T _value;

		[Token(Token = "0x40002EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Exception _error;

		[Token(Token = "0x40002EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly List<FutureCallback<T>> _successCallbacks;

		[Token(Token = "0x40002EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly List<FutureCallback<T>> _errorCallbacks;

		[Token(Token = "0x170000C6")]
		public FutureState state
		{
			[Token(Token = "0x60006F4")]
			get
			{
				return default(FutureState);
			}
		}

		[Token(Token = "0x170000C7")]
		public T value
		{
			[Token(Token = "0x60006F5")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x170000C8")]
		public Exception error
		{
			[Token(Token = "0x60006F6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006F7")]
		public Future()
		{
		}

		[Token(Token = "0x60006F8")]
		public IFuture<T> OnSuccess(FutureCallback<T> callback)
		{
			return null;
		}

		[Token(Token = "0x60006F9")]
		public IFuture<T> OnError(FutureCallback<T> callback)
		{
			return null;
		}

		[Token(Token = "0x60006FA")]
		public IFuture<T> OnComplete(FutureCallback<T> callback)
		{
			return null;
		}

		[Token(Token = "0x60006FB")]
		public IFuture<T> Process(Func<T> func)
		{
			return null;
		}

		[Token(Token = "0x60006FC")]
		public void Assign(T value)
		{
		}

		[Token(Token = "0x60006FD")]
		public void Fail(Exception error)
		{
		}

		[Token(Token = "0x60006FE")]
		private void AssignImpl(T value)
		{
		}

		[Token(Token = "0x60006FF")]
		private void FailImpl(Exception error)
		{
		}

		[Token(Token = "0x6000700")]
		private void FlushSuccessCallbacks()
		{
		}

		[Token(Token = "0x6000701")]
		private void FlushErrorCallbacks()
		{
		}
	}
	[Token(Token = "0x200008D")]
	public class SortingLayerAttribute : PropertyAttribute
	{
		[Token(Token = "0x6000702")]
		[Address(RVA = "0x12523AC", Offset = "0x12523AC", VA = "0x12523AC")]
		public SortingLayerAttribute()
		{
		}
	}
	[Token(Token = "0x200008E")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCA81BC", Offset = "0xCA81BC")]
	public class SortingLayerExposed : MonoBehaviour
	{
		[Token(Token = "0x6000703")]
		[Address(RVA = "0x12523B4", Offset = "0x12523B4", VA = "0x12523B4")]
		public SortingLayerExposed()
		{
		}
	}
	[Token(Token = "0x200008F")]
	public static class StandardPaths
	{
		[Token(Token = "0x20002BA")]
		private static class Windows
		{
			[Token(Token = "0x60010E9")]
			[Address(RVA = "0x1252544", Offset = "0x1252544", VA = "0x1252544")]
			public static string GetPath(string subdirectory)
			{
				return null;
			}
		}

		[Token(Token = "0x20002BB")]
		private static class OSX
		{
			[Token(Token = "0x60010EA")]
			[Address(RVA = "0x1252604", Offset = "0x1252604", VA = "0x1252604")]
			public static string GetApplicationSupportPath(string subdirectory)
			{
				return null;
			}

			[Token(Token = "0x60010EB")]
			[Address(RVA = "0x12529D8", Offset = "0x12529D8", VA = "0x12529D8")]
			public static string GetLogsPath()
			{
				return null;
			}
		}

		[Token(Token = "0x20002BC")]
		private static class Linux
		{
			[Token(Token = "0x60010EC")]
			[Address(RVA = "0x12526CC", Offset = "0x12526CC", VA = "0x12526CC")]
			public static string GetSaveDirectory()
			{
				return null;
			}

			[Token(Token = "0x60010ED")]
			[Address(RVA = "0x1252858", Offset = "0x1252858", VA = "0x1252858")]
			public static string GetConfigDirectory()
			{
				return null;
			}

			[Token(Token = "0x60010EE")]
			[Address(RVA = "0x1252A94", Offset = "0x1252A94", VA = "0x1252A94")]
			public static string GetLogDirectory()
			{
				return null;
			}
		}

		[Token(Token = "0x40002ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB1504", Offset = "0xCB1504")]
		private static bool <includeCompanyName>k__BackingField;

		[Token(Token = "0x170000C9")]
		public static bool includeCompanyName
		{
			[Token(Token = "0x6000704")]
			[Address(RVA = "0x12523BC", Offset = "0x12523BC", VA = "0x12523BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB43CC", Offset = "0xCB43CC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000705")]
			[Address(RVA = "0x1252424", Offset = "0x1252424", VA = "0x1252424")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB43DC", Offset = "0xCB43DC")]
			set
			{
			}
		}

		[Token(Token = "0x170000CA")]
		public static string saveDataDirectory
		{
			[Token(Token = "0x6000706")]
			[Address(RVA = "0x1252494", Offset = "0x1252494", VA = "0x1252494")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CB")]
		public static string configDirectory
		{
			[Token(Token = "0x6000707")]
			[Address(RVA = "0x12527A8", Offset = "0x12527A8", VA = "0x12527A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CC")]
		public static string logDirectory
		{
			[Token(Token = "0x6000708")]
			[Address(RVA = "0x1252934", Offset = "0x1252934", VA = "0x1252934")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000709")]
		[Address(RVA = "0x1252AFC", Offset = "0x1252AFC", VA = "0x1252AFC")]
		static StandardPaths()
		{
		}

		[Token(Token = "0x600070A")]
		[Address(RVA = "0x1252B64", Offset = "0x1252B64", VA = "0x1252B64")]
		private static string AppendProductPath(string path)
		{
			return null;
		}

		[Token(Token = "0x600070B")]
		[Address(RVA = "0x1252C80", Offset = "0x1252C80", VA = "0x1252C80")]
		private static string AppendDirectory(string path, string dir)
		{
			return null;
		}

		[Token(Token = "0x600070C")]
		[Address(RVA = "0x1252D4C", Offset = "0x1252D4C", VA = "0x1252D4C")]
		private static string CleanForPath(string str)
		{
			return null;
		}
	}
}
namespace MEC
{
	[Token(Token = "0x2000090")]
	public class Timing : MonoBehaviour
	{
		[Token(Token = "0x20002BD")]
		private struct ProcessIndex : IEquatable<ProcessIndex>
		{
			[Token(Token = "0x4000DEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Segment seg;

			[Token(Token = "0x4000DED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int i;

			[Token(Token = "0x60010EF")]
			[Address(RVA = "0xDF6A44", Offset = "0xDF6A44", VA = "0xDF6A44", Slot = "4")]
			public bool Equals(ProcessIndex other)
			{
				return default(bool);
			}

			[Token(Token = "0x60010F0")]
			[Address(RVA = "0xDF6A6C", Offset = "0xDF6A6C", VA = "0xDF6A6C", Slot = "0")]
			public override bool Equals(object other)
			{
				return default(bool);
			}

			[Token(Token = "0x60010F1")]
			[Address(RVA = "0x16CFABC", Offset = "0x16CFABC", VA = "0x16CFABC")]
			public static bool operator ==(ProcessIndex a, ProcessIndex b)
			{
				return default(bool);
			}

			[Token(Token = "0x60010F2")]
			[Address(RVA = "0x16CFADC", Offset = "0x16CFADC", VA = "0x16CFADC")]
			public static bool operator !=(ProcessIndex a, ProcessIndex b)
			{
				return default(bool);
			}

			[Token(Token = "0x60010F3")]
			[Address(RVA = "0xDF6A74", Offset = "0xDF6A74", VA = "0xDF6A74", Slot = "2")]
			public override int GetHashCode()
			{
				return default(int);
			}
		}

		[Token(Token = "0x20002BE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCAF148", Offset = "0xCAF148")]
		private sealed class <_InjectDelay>d__123 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000DEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000DEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x4000DF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Timing <>4__this;

			[Token(Token = "0x4000DF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delayTime;

			[Token(Token = "0x4000DF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IEnumerator<float> proc;

			[Token(Token = "0x1700019E")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x60010F7")]
				[Address(RVA = "0x16CF0E0", Offset = "0x16CF0E0", VA = "0x16CF0E0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x1700019F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010F9")]
				[Address(RVA = "0x16CF148", Offset = "0x16CF148", VA = "0x16CF148", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010F4")]
			[Address(RVA = "0x16CCD90", Offset = "0x16CCD90", VA = "0x16CCD90")]
			[DebuggerHidden]
			public <_InjectDelay>d__123(int <>1__state)
			{
			}

			[Token(Token = "0x60010F5")]
			[Address(RVA = "0x16CEF88", Offset = "0x16CEF88", VA = "0x16CEF88", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010F6")]
			[Address(RVA = "0x16CEF8C", Offset = "0x16CEF8C", VA = "0x16CEF8C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010F8")]
			[Address(RVA = "0x16CF0E8", Offset = "0x16CF0E8", VA = "0x16CF0E8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002BF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCAF158", Offset = "0xCAF158")]
		private sealed class <_StartWhenDone>d__131 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000DF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000DF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x4000DF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Timing <>4__this;

			[Token(Token = "0x4000DF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CoroutineHandle handle;

			[Token(Token = "0x4000DF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IEnumerator<float> proc;

			[Token(Token = "0x170001A0")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x60010FE")]
				[Address(RVA = "0x16CF52C", Offset = "0x16CF52C", VA = "0x16CF52C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x170001A1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001100")]
				[Address(RVA = "0x16CF594", Offset = "0x16CF594", VA = "0x16CF594", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010FA")]
			[Address(RVA = "0x16CD7D0", Offset = "0x16CD7D0", VA = "0x16CD7D0")]
			[DebuggerHidden]
			public <_StartWhenDone>d__131(int <>1__state)
			{
			}

			[Token(Token = "0x60010FB")]
			[Address(RVA = "0x16CF1AC", Offset = "0x16CF1AC", VA = "0x16CF1AC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010FC")]
			[Address(RVA = "0x16CF200", Offset = "0x16CF200", VA = "0x16CF200", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010FD")]
			[Address(RVA = "0x16CF1D8", Offset = "0x16CF1D8", VA = "0x16CF1D8")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60010FF")]
			[Address(RVA = "0x16CF534", Offset = "0x16CF534", VA = "0x16CF534", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCAF168", Offset = "0xCAF168")]
		private sealed class <_StartWhenDone>d__137 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000DF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000DF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x4000DFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AsyncOperation operation;

			[Token(Token = "0x4000DFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IEnumerator<float> pausedProc;

			[Token(Token = "0x170001A2")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x6001104")]
				[Address(RVA = "0x16CF72C", Offset = "0x16CF72C", VA = "0x16CF72C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x170001A3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001106")]
				[Address(RVA = "0x16CF794", Offset = "0x16CF794", VA = "0x16CF794", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001101")]
			[Address(RVA = "0x16CDB64", Offset = "0x16CDB64", VA = "0x16CDB64")]
			[DebuggerHidden]
			public <_StartWhenDone>d__137(int <>1__state)
			{
			}

			[Token(Token = "0x6001102")]
			[Address(RVA = "0x16CF5F8", Offset = "0x16CF5F8", VA = "0x16CF5F8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001103")]
			[Address(RVA = "0x16CF5FC", Offset = "0x16CF5FC", VA = "0x16CF5FC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001105")]
			[Address(RVA = "0x16CF734", Offset = "0x16CF734", VA = "0x16CF734", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002C1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCAF178", Offset = "0xCAF178")]
		private sealed class <_StartWhenDone>d__139 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000DFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000DFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x4000DFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CustomYieldInstruction operation;

			[Token(Token = "0x4000DFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IEnumerator<float> pausedProc;

			[Token(Token = "0x170001A4")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x600110A")]
				[Address(RVA = "0x16CF930", Offset = "0x16CF930", VA = "0x16CF930", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x170001A5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600110C")]
				[Address(RVA = "0x16CF998", Offset = "0x16CF998", VA = "0x16CF998", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001107")]
			[Address(RVA = "0x16CDDBC", Offset = "0x16CDDBC", VA = "0x16CDDBC")]
			[DebuggerHidden]
			public <_StartWhenDone>d__139(int <>1__state)
			{
			}

			[Token(Token = "0x6001108")]
			[Address(RVA = "0x16CF7F8", Offset = "0x16CF7F8", VA = "0x16CF7F8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001109")]
			[Address(RVA = "0x16CF7FC", Offset = "0x16CF7FC", VA = "0x16CF7FC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600110B")]
			[Address(RVA = "0x16CF938", Offset = "0x16CF938", VA = "0x16CF938", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002C2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCAF188", Offset = "0xCAF188")]
		private sealed class <_DelayedCall>d__146 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x4000E02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Timing <>4__this;

			[Token(Token = "0x4000E03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x4000E04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameObject cancelWith;

			[Token(Token = "0x4000E05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action action;

			[Token(Token = "0x170001A6")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x6001110")]
				[Address(RVA = "0x16CEEBC", Offset = "0x16CEEBC", VA = "0x16CEEBC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x170001A7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001112")]
				[Address(RVA = "0x16CEF24", Offset = "0x16CEF24", VA = "0x16CEF24", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600110D")]
			[Address(RVA = "0x16CE34C", Offset = "0x16CE34C", VA = "0x16CE34C")]
			[DebuggerHidden]
			public <_DelayedCall>d__146(int <>1__state)
			{
			}

			[Token(Token = "0x600110E")]
			[Address(RVA = "0x16CEDC0", Offset = "0x16CEDC0", VA = "0x16CEDC0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600110F")]
			[Address(RVA = "0x16CEDC4", Offset = "0x16CEDC4", VA = "0x16CEDC4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001111")]
			[Address(RVA = "0x16CEEC4", Offset = "0x16CEEC4", VA = "0x16CEEC4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002C3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCAF198", Offset = "0xCAF198")]
		private sealed class <_CallContinuously>d__155 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x4000E08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Timing <>4__this;

			[Token(Token = "0x4000E09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float period;

			[Token(Token = "0x4000E0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action action;

			[Token(Token = "0x4000E0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeframe;

			[Token(Token = "0x4000E0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Action onDone;

			[Token(Token = "0x4000E0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private double <startTime>5__2;

			[Token(Token = "0x170001A8")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x6001116")]
				[Address(RVA = "0x16CECF4", Offset = "0x16CECF4", VA = "0x16CECF4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x170001A9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001118")]
				[Address(RVA = "0x16CED5C", Offset = "0x16CED5C", VA = "0x16CED5C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001113")]
			[Address(RVA = "0x16CE824", Offset = "0x16CE824", VA = "0x16CE824")]
			[DebuggerHidden]
			public <_CallContinuously>d__155(int <>1__state)
			{
			}

			[Token(Token = "0x6001114")]
			[Address(RVA = "0x16CEC14", Offset = "0x16CEC14", VA = "0x16CEC14", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001115")]
			[Address(RVA = "0x16CEC18", Offset = "0x16CEC18", VA = "0x16CEC18", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001117")]
			[Address(RVA = "0x16CECFC", Offset = "0x16CECFC", VA = "0x16CECFC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCAF1A8", Offset = "0xCAF1A8")]
		private sealed class <_CallContinuously>d__164<T> : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4000E0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private float <>2__current;

			[Token(Token = "0x4000E10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Timing <>4__this;

			[Token(Token = "0x4000E11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float period;

			[Token(Token = "0x4000E12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T> action;

			[Token(Token = "0x4000E13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T reference;

			[Token(Token = "0x4000E14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float timeframe;

			[Token(Token = "0x4000E15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T> onDone;

			[Token(Token = "0x4000E16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private double <startTime>5__2;

			[Token(Token = "0x170001AA")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x600111C")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x170001AB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600111E")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001119")]
			[DebuggerHidden]
			public <_CallContinuously>d__164(int <>1__state)
			{
			}

			[Token(Token = "0x600111A")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600111B")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600111D")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40002EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCB1514", Offset = "0xCB1514")]
		public float TimeBetweenSlowUpdateCalls;

		[Token(Token = "0x40002EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCB154C", Offset = "0xCB154C")]
		public DebugInfoType ProfilerDebugAmount;

		[Token(Token = "0x40002F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCB1584", Offset = "0xCB1584")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCB1584", Offset = "0xCB1584")]
		public int UpdateCoroutines;

		[Token(Token = "0x40002F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCB15D4", Offset = "0xCB15D4")]
		public int FixedUpdateCoroutines;

		[Token(Token = "0x40002F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCB160C", Offset = "0xCB160C")]
		public int LateUpdateCoroutines;

		[Token(Token = "0x40002F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCB1644", Offset = "0xCB1644")]
		public int SlowUpdateCoroutines;

		[NonSerialized]
		[Token(Token = "0x40002F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float localTime;

		[NonSerialized]
		[Token(Token = "0x40002F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float deltaTime;

		[Token(Token = "0x40002F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Func<IEnumerator<float>, CoroutineHandle, IEnumerator<float>> ReplacementFunction;

		[Token(Token = "0x40002F8")]
		public const float WaitForOneFrame = float.NegativeInfinity;

		[Token(Token = "0x40002F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB168C", Offset = "0xCB168C")]
		private static Thread <MainThread>k__BackingField;

		[Token(Token = "0x40002FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CoroutineHandle _currentCoroutine;

		[Token(Token = "0x40002FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static object _tmpRef;

		[Token(Token = "0x40002FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static bool _tmpBool;

		[Token(Token = "0x40002FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private static CoroutineHandle _tmpHandle;

		[Token(Token = "0x40002FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _currentUpdateFrame;

		[Token(Token = "0x40002FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int _currentLateUpdateFrame;

		[Token(Token = "0x4000300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int _currentSlowUpdateFrame;

		[Token(Token = "0x4000301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int _nextUpdateProcessSlot;

		[Token(Token = "0x4000302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int _nextLateUpdateProcessSlot;

		[Token(Token = "0x4000303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _nextFixedUpdateProcessSlot;

		[Token(Token = "0x4000304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int _nextSlowUpdateProcessSlot;

		[Token(Token = "0x4000305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int _lastUpdateProcessSlot;

		[Token(Token = "0x4000306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int _lastLateUpdateProcessSlot;

		[Token(Token = "0x4000307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int _lastFixedUpdateProcessSlot;

		[Token(Token = "0x4000308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int _lastSlowUpdateProcessSlot;

		[Token(Token = "0x4000309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float _lastUpdateTime;

		[Token(Token = "0x400030A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float _lastLateUpdateTime;

		[Token(Token = "0x400030B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float _lastFixedUpdateTime;

		[Token(Token = "0x400030C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float _lastSlowUpdateTime;

		[Token(Token = "0x400030D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _lastSlowUpdateDeltaTime;

		[Token(Token = "0x400030E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private ushort _framesSinceUpdate;

		[Token(Token = "0x400030F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7E")]
		private ushort _expansions;

		[Token(Token = "0x4000310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		[HideInInspector]
		private byte _instanceID;

		[Token(Token = "0x4000311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private readonly Dictionary<CoroutineHandle, HashSet<CoroutineHandle>> _waitingTriggers;

		[Token(Token = "0x4000312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private readonly HashSet<CoroutineHandle> _allWaiting;

		[Token(Token = "0x4000313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private readonly Dictionary<CoroutineHandle, ProcessIndex> _handleToIndex;

		[Token(Token = "0x4000314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private readonly Dictionary<ProcessIndex, CoroutineHandle> _indexToHandle;

		[Token(Token = "0x4000315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private readonly Dictionary<CoroutineHandle, string> _processTags;

		[Token(Token = "0x4000316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private readonly Dictionary<string, HashSet<CoroutineHandle>> _taggedProcesses;

		[Token(Token = "0x4000317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private IEnumerator<float>[] UpdateProcesses;

		[Token(Token = "0x4000318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private IEnumerator<float>[] LateUpdateProcesses;

		[Token(Token = "0x4000319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private IEnumerator<float>[] FixedUpdateProcesses;

		[Token(Token = "0x400031A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private IEnumerator<float>[] SlowUpdateProcesses;

		[Token(Token = "0x400031B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool[] UpdatePaused;

		[Token(Token = "0x400031C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool[] LateUpdatePaused;

		[Token(Token = "0x400031D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private bool[] FixedUpdatePaused;

		[Token(Token = "0x400031E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private bool[] SlowUpdatePaused;

		[Token(Token = "0x400031F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private bool[] UpdateHeld;

		[Token(Token = "0x4000320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private bool[] LateUpdateHeld;

		[Token(Token = "0x4000321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private bool[] FixedUpdateHeld;

		[Token(Token = "0x4000322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private bool[] SlowUpdateHeld;

		[Token(Token = "0x4000323")]
		private const ushort FramesUntilMaintenance = 64;

		[Token(Token = "0x4000324")]
		private const int ProcessArrayChunkSize = 64;

		[Token(Token = "0x4000325")]
		private const int InitialBufferSizeLarge = 256;

		[Token(Token = "0x4000326")]
		private const int InitialBufferSizeMedium = 64;

		[Token(Token = "0x4000327")]
		private const int InitialBufferSizeSmall = 8;

		[Token(Token = "0x4000328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Timing[] ActiveInstances;

		[Token(Token = "0x4000329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Timing _instance;

		[Token(Token = "0x170000CD")]
		public static float LocalTime
		{
			[Token(Token = "0x600070D")]
			[Address(RVA = "0x16C470C", Offset = "0x16C470C", VA = "0x16C470C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000CE")]
		public static float DeltaTime
		{
			[Token(Token = "0x600070E")]
			[Address(RVA = "0x16C49BC", Offset = "0x16C49BC", VA = "0x16C49BC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000CF")]
		public static Thread MainThread
		{
			[Token(Token = "0x6000711")]
			[Address(RVA = "0x16C4C08", Offset = "0x16C4C08", VA = "0x16C4C08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB440C", Offset = "0xCB440C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000712")]
			[Address(RVA = "0x16C4C70", Offset = "0x16C4C70", VA = "0x16C4C70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB441C", Offset = "0xCB441C")]
			private set
			{
			}
		}

		[Token(Token = "0x170000D0")]
		public static CoroutineHandle CurrentCoroutine
		{
			[Token(Token = "0x6000713")]
			[Address(RVA = "0x16C4CE0", Offset = "0x16C4CE0", VA = "0x16C4CE0")]
			get
			{
				return default(CoroutineHandle);
			}
		}

		[Token(Token = "0x170000D1")]
		public CoroutineHandle currentCoroutine
		{
			[Token(Token = "0x6000714")]
			[Address(RVA = "0x16C4E50", Offset = "0x16C4E50", VA = "0x16C4E50")]
			get
			{
				return default(CoroutineHandle);
			}
		}

		[Token(Token = "0x170000D2")]
		public static Timing Instance
		{
			[Token(Token = "0x6000715")]
			[Address(RVA = "0x16C4778", Offset = "0x16C4778", VA = "0x16C4778")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000716")]
			[Address(RVA = "0x16C50C0", Offset = "0x16C50C0", VA = "0x16C50C0")]
			set
			{
			}
		}

		[Token(Token = "0x14000001")]
		public static event Action OnPreExecute
		{
			[Token(Token = "0x600070F")]
			[Address(RVA = "0x16C4A28", Offset = "0x16C4A28", VA = "0x16C4A28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB43EC", Offset = "0xCB43EC")]
			add
			{
			}
			[Token(Token = "0x6000710")]
			[Address(RVA = "0x16C4B18", Offset = "0x16C4B18", VA = "0x16C4B18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB43FC", Offset = "0xCB43FC")]
			remove
			{
			}
		}

		[Token(Token = "0x6000717")]
		[Address(RVA = "0x16C5130", Offset = "0x16C5130", VA = "0x16C5130")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000718")]
		[Address(RVA = "0x16C532C", Offset = "0x16C532C", VA = "0x16C532C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000719")]
		[Address(RVA = "0x16C5410", Offset = "0x16C5410", VA = "0x16C5410")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600071A")]
		[Address(RVA = "0x16C5414", Offset = "0x16C5414", VA = "0x16C5414")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600071B")]
		[Address(RVA = "0x16C4E58", Offset = "0x16C4E58", VA = "0x16C4E58")]
		private void InitializeInstanceID()
		{
		}

		[Token(Token = "0x600071C")]
		[Address(RVA = "0x16C54FC", Offset = "0x16C54FC", VA = "0x16C54FC")]
		private void Update()
		{
		}

		[Token(Token = "0x600071D")]
		[Address(RVA = "0x16C7458", Offset = "0x16C7458", VA = "0x16C7458")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600071E")]
		[Address(RVA = "0x16C7B8C", Offset = "0x16C7B8C", VA = "0x16C7B8C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600071F")]
		[Address(RVA = "0x16C655C", Offset = "0x16C655C", VA = "0x16C655C")]
		private void RemoveUnused()
		{
		}

		[Token(Token = "0x6000720")]
		[Address(RVA = "0x16C8634", Offset = "0x16C8634", VA = "0x16C8634")]
		public static CoroutineHandle RunCoroutine(IEnumerator<float> coroutine)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000721")]
		[Address(RVA = "0x16C9C58", Offset = "0x16C9C58", VA = "0x16C9C58")]
		public static CoroutineHandle RunCoroutine(IEnumerator<float> coroutine, string tag)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000722")]
		[Address(RVA = "0x16C9D18", Offset = "0x16C9D18", VA = "0x16C9D18")]
		public static CoroutineHandle RunCoroutine(IEnumerator<float> coroutine, Segment segment)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000723")]
		[Address(RVA = "0x16C9DD8", Offset = "0x16C9DD8", VA = "0x16C9DD8")]
		public static CoroutineHandle RunCoroutine(IEnumerator<float> coroutine, Segment segment, string tag)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000724")]
		[Address(RVA = "0x16C9EA4", Offset = "0x16C9EA4", VA = "0x16C9EA4")]
		public CoroutineHandle RunCoroutineOnInstance(IEnumerator<float> coroutine)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000725")]
		[Address(RVA = "0x16C9F08", Offset = "0x16C9F08", VA = "0x16C9F08")]
		public CoroutineHandle RunCoroutineOnInstance(IEnumerator<float> coroutine, string tag)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000726")]
		[Address(RVA = "0x16C9F70", Offset = "0x16C9F70", VA = "0x16C9F70")]
		public CoroutineHandle RunCoroutineOnInstance(IEnumerator<float> coroutine, Segment segment)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000727")]
		[Address(RVA = "0x16C9FD8", Offset = "0x16C9FD8", VA = "0x16C9FD8")]
		public CoroutineHandle RunCoroutineOnInstance(IEnumerator<float> coroutine, Segment segment, string tag)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000728")]
		[Address(RVA = "0x16C86F0", Offset = "0x16C86F0", VA = "0x16C86F0")]
		private CoroutineHandle RunCoroutineInternal(IEnumerator<float> coroutine, Segment segment, string tag, CoroutineHandle handle, bool prewarm)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000729")]
		[Address(RVA = "0x16CA184", Offset = "0x16CA184", VA = "0x16CA184")]
		public static int KillCoroutines()
		{
			return default(int);
		}

		[Token(Token = "0x600072A")]
		[Address(RVA = "0x16CA260", Offset = "0x16CA260", VA = "0x16CA260")]
		public int KillCoroutinesOnInstance()
		{
			return default(int);
		}

		[Token(Token = "0x600072B")]
		[Address(RVA = "0x16CA4D8", Offset = "0x16CA4D8", VA = "0x16CA4D8")]
		public static int KillCoroutines(CoroutineHandle handle)
		{
			return default(int);
		}

		[Token(Token = "0x600072C")]
		[Address(RVA = "0x16C6474", Offset = "0x16C6474", VA = "0x16C6474")]
		public int KillCoroutinesOnInstance(CoroutineHandle handle)
		{
			return default(int);
		}

		[Token(Token = "0x600072D")]
		[Address(RVA = "0x16CA738", Offset = "0x16CA738", VA = "0x16CA738")]
		public static int KillCoroutines(string tag)
		{
			return default(int);
		}

		[Token(Token = "0x600072E")]
		[Address(RVA = "0x16CA828", Offset = "0x16CA828", VA = "0x16CA828")]
		public int KillCoroutinesOnInstance(string tag)
		{
			return default(int);
		}

		[Token(Token = "0x600072F")]
		[Address(RVA = "0x16CAAB0", Offset = "0x16CAAB0", VA = "0x16CAAB0")]
		public static int PauseCoroutines()
		{
			return default(int);
		}

		[Token(Token = "0x6000730")]
		[Address(RVA = "0x16CAB8C", Offset = "0x16CAB8C", VA = "0x16CAB8C")]
		public int PauseCoroutinesOnInstance()
		{
			return default(int);
		}

		[Token(Token = "0x6000731")]
		[Address(RVA = "0x16CB510", Offset = "0x16CB510", VA = "0x16CB510")]
		public static int PauseCoroutines(CoroutineHandle handle)
		{
			return default(int);
		}

		[Token(Token = "0x6000732")]
		[Address(RVA = "0x16CB620", Offset = "0x16CB620", VA = "0x16CB620")]
		public int PauseCoroutinesOnInstance(CoroutineHandle handle)
		{
			return default(int);
		}

		[Token(Token = "0x6000733")]
		[Address(RVA = "0x16CBD78", Offset = "0x16CBD78", VA = "0x16CBD78")]
		public static int PauseCoroutines(string tag)
		{
			return default(int);
		}

		[Token(Token = "0x6000734")]
		[Address(RVA = "0x16CBE68", Offset = "0x16CBE68", VA = "0x16CBE68")]
		public int PauseCoroutinesOnInstance(string tag)
		{
			return default(int);
		}

		[Token(Token = "0x6000735")]
		[Address(RVA = "0x16CBFB8", Offset = "0x16CBFB8", VA = "0x16CBFB8")]
		public static int ResumeCoroutines()
		{
			return default(int);
		}

		[Token(Token = "0x6000736")]
		[Address(RVA = "0x16CC094", Offset = "0x16CC094", VA = "0x16CC094")]
		public int ResumeCoroutinesOnInstance()
		{
			return default(int);
		}

		[Token(Token = "0x6000737")]
		[Address(RVA = "0x16CC264", Offset = "0x16CC264", VA = "0x16CC264")]
		public static int ResumeCoroutines(CoroutineHandle handle)
		{
			return default(int);
		}

		[Token(Token = "0x6000738")]
		[Address(RVA = "0x16CC374", Offset = "0x16CC374", VA = "0x16CC374")]
		public int ResumeCoroutinesOnInstance(CoroutineHandle handle)
		{
			return default(int);
		}

		[Token(Token = "0x6000739")]
		[Address(RVA = "0x16CC444", Offset = "0x16CC444", VA = "0x16CC444")]
		public static int ResumeCoroutines(string tag)
		{
			return default(int);
		}

		[Token(Token = "0x600073A")]
		[Address(RVA = "0x16CC534", Offset = "0x16CC534", VA = "0x16CC534")]
		public int ResumeCoroutinesOnInstance(string tag)
		{
			return default(int);
		}

		[Token(Token = "0x600073B")]
		[Address(RVA = "0x16C62E8", Offset = "0x16C62E8", VA = "0x16C62E8")]
		private bool UpdateTimeValues(Segment segment)
		{
			return default(bool);
		}

		[Token(Token = "0x600073C")]
		[Address(RVA = "0x16CB3B8", Offset = "0x16CB3B8", VA = "0x16CB3B8")]
		private float GetSegmentTime(Segment segment)
		{
			return default(float);
		}

		[Token(Token = "0x600073D")]
		[Address(RVA = "0x16CA5E8", Offset = "0x16CA5E8", VA = "0x16CA5E8")]
		public static Timing GetInstance(byte ID)
		{
			return null;
		}

		[Token(Token = "0x600073E")]
		[Address(RVA = "0x16CA04C", Offset = "0x16CA04C", VA = "0x16CA04C")]
		private void AddTag(string tag, CoroutineHandle coindex)
		{
		}

		[Token(Token = "0x600073F")]
		[Address(RVA = "0x16C84E0", Offset = "0x16C84E0", VA = "0x16C84E0")]
		private void RemoveTag(CoroutineHandle coindex)
		{
		}

		[Token(Token = "0x6000740")]
		[Address(RVA = "0x16CAA08", Offset = "0x16CAA08", VA = "0x16CAA08")]
		private bool Nullify(ProcessIndex coindex)
		{
			return default(bool);
		}

		[Token(Token = "0x6000741")]
		[Address(RVA = "0x16CA694", Offset = "0x16CA694", VA = "0x16CA694")]
		private IEnumerator<float> CoindexExtract(ProcessIndex coindex)
		{
			return null;
		}

		[Token(Token = "0x6000742")]
		[Address(RVA = "0x16CC680", Offset = "0x16CC680", VA = "0x16CC680")]
		private IEnumerator<float> CoindexPeek(ProcessIndex coindex)
		{
			return null;
		}

		[Token(Token = "0x6000743")]
		[Address(RVA = "0x16C82C0", Offset = "0x16C82C0", VA = "0x16C82C0")]
		private bool CoindexIsNull(ProcessIndex coindex)
		{
			return default(bool);
		}

		[Token(Token = "0x6000744")]
		[Address(RVA = "0x16CB6F4", Offset = "0x16CB6F4", VA = "0x16CB6F4")]
		private bool SetPause(ProcessIndex coindex, bool newPausedState)
		{
			return default(bool);
		}

		[Token(Token = "0x6000745")]
		[Address(RVA = "0x16CC70C", Offset = "0x16CC70C", VA = "0x16CC70C")]
		private bool SetHeld(ProcessIndex coindex, bool newHeldState)
		{
			return default(bool);
		}

		[Token(Token = "0x6000746")]
		[Address(RVA = "0x16CB468", Offset = "0x16CB468", VA = "0x16CB468")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCB442C", Offset = "0xCB442C")]
		private IEnumerator<float> _InjectDelay(IEnumerator<float> proc, float delayTime)
		{
			return null;
		}

		[Token(Token = "0x6000747")]
		[Address(RVA = "0x16CCDBC", Offset = "0x16CCDBC", VA = "0x16CCDBC")]
		private bool CoindexIsPaused(ProcessIndex coindex)
		{
			return default(bool);
		}

		[Token(Token = "0x6000748")]
		[Address(RVA = "0x16CCE4C", Offset = "0x16CCE4C", VA = "0x16CCE4C")]
		private bool CoindexIsHeld(ProcessIndex coindex)
		{
			return default(bool);
		}

		[Token(Token = "0x6000749")]
		[Address(RVA = "0x16CCEDC", Offset = "0x16CCEDC", VA = "0x16CCEDC")]
		private void CoindexReplace(ProcessIndex coindex, IEnumerator<float> replacement)
		{
		}

		[Token(Token = "0x600074A")]
		[Address(RVA = "0x16CCFB0", Offset = "0x16CCFB0", VA = "0x16CCFB0")]
		public static float WaitForSeconds(float waitTime)
		{
			return default(float);
		}

		[Token(Token = "0x600074B")]
		[Address(RVA = "0x16CD03C", Offset = "0x16CD03C", VA = "0x16CD03C")]
		public float WaitForSecondsOnInstance(float waitTime)
		{
			return default(float);
		}

		[Token(Token = "0x600074C")]
		[Address(RVA = "0x16CD080", Offset = "0x16CD080", VA = "0x16CD080")]
		public static float WaitUntilDone(CoroutineHandle otherCoroutine)
		{
			return default(float);
		}

		[Token(Token = "0x600074D")]
		[Address(RVA = "0x16CD0E8", Offset = "0x16CD0E8", VA = "0x16CD0E8")]
		public static float WaitUntilDone(CoroutineHandle otherCoroutine, bool warnOnIssue)
		{
			return default(float);
		}

		[Token(Token = "0x600074E")]
		[Address(RVA = "0x16CD3B8", Offset = "0x16CD3B8", VA = "0x16CD3B8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCB4490", Offset = "0xCB4490")]
		private IEnumerator<float> _StartWhenDone(CoroutineHandle handle, IEnumerator<float> proc)
		{
			return null;
		}

		[Token(Token = "0x600074F")]
		[Address(RVA = "0x16CD458", Offset = "0x16CD458", VA = "0x16CD458")]
		private void SwapToLast(CoroutineHandle firstHandle, CoroutineHandle lastHandle)
		{
		}

		[Token(Token = "0x6000750")]
		[Address(RVA = "0x16C8354", Offset = "0x16C8354", VA = "0x16C8354")]
		private void CloseWaitingProcess(CoroutineHandle handle)
		{
		}

		[Token(Token = "0x6000751")]
		[Address(RVA = "0x16CD7FC", Offset = "0x16CD7FC", VA = "0x16CD7FC")]
		private bool HandleIsInWaitingList(CoroutineHandle handle)
		{
			return default(bool);
		}

		[Token(Token = "0x6000752")]
		[Address(RVA = "0x16CD8C8", Offset = "0x16CD8C8", VA = "0x16CD8C8")]
		private static IEnumerator<float> ReturnTmpRefForRepFunc(IEnumerator<float> coptr, CoroutineHandle handle)
		{
			return null;
		}

		[Token(Token = "0x6000753")]
		[Address(RVA = "0x16CD93C", Offset = "0x16CD93C", VA = "0x16CD93C")]
		public static float WaitUntilDone(AsyncOperation operation)
		{
			return default(float);
		}

		[Token(Token = "0x6000754")]
		[Address(RVA = "0x16CDACC", Offset = "0x16CDACC", VA = "0x16CDACC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCB44F4", Offset = "0xCB44F4")]
		private static IEnumerator<float> _StartWhenDone(AsyncOperation operation, IEnumerator<float> pausedProc)
		{
			return null;
		}

		[Token(Token = "0x6000755")]
		[Address(RVA = "0x16CDB90", Offset = "0x16CDB90", VA = "0x16CDB90")]
		public static float WaitUntilDone(CustomYieldInstruction operation)
		{
			return default(float);
		}

		[Token(Token = "0x6000756")]
		[Address(RVA = "0x16CDD24", Offset = "0x16CDD24", VA = "0x16CDD24")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCB4558", Offset = "0xCB4558")]
		private static IEnumerator<float> _StartWhenDone(CustomYieldInstruction operation, IEnumerator<float> pausedProc)
		{
			return null;
		}

		[Token(Token = "0x6000757")]
		[Address(RVA = "0x16CDDE8", Offset = "0x16CDDE8", VA = "0x16CDDE8")]
		public bool LockCoroutine(CoroutineHandle coroutine, CoroutineHandle key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000758")]
		[Address(RVA = "0x16CDF80", Offset = "0x16CDF80", VA = "0x16CDF80")]
		public bool UnlockCoroutine(CoroutineHandle coroutine, CoroutineHandle key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000759")]
		[Address(RVA = "0x16CE0D0", Offset = "0x16CE0D0", VA = "0x16CE0D0")]
		public static CoroutineHandle CallDelayed(float delay, Action action)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x600075A")]
		[Address(RVA = "0x16CE228", Offset = "0x16CE228", VA = "0x16CE228")]
		public CoroutineHandle CallDelayedOnInstance(float delay, Action action)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x600075B")]
		[Address(RVA = "0x16CE268", Offset = "0x16CE268", VA = "0x16CE268")]
		public static CoroutineHandle CallDelayed(float delay, Action action, GameObject cancelWith)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x600075C")]
		[Address(RVA = "0x16CE310", Offset = "0x16CE310", VA = "0x16CE310")]
		public CoroutineHandle CallDelayedOnInstance(float delay, Action action, GameObject cancelWith)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x600075D")]
		[Address(RVA = "0x16CE16C", Offset = "0x16CE16C", VA = "0x16CE16C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCB45BC", Offset = "0xCB45BC")]
		private IEnumerator<float> _DelayedCall(float delay, Action action, GameObject cancelWith)
		{
			return null;
		}

		[Token(Token = "0x600075E")]
		[Address(RVA = "0x16CE378", Offset = "0x16CE378", VA = "0x16CE378")]
		public static CoroutineHandle CallPeriodically(float timeframe, float period, Action action, [Optional] Action onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x600075F")]
		[Address(RVA = "0x16CE4F0", Offset = "0x16CE4F0", VA = "0x16CE4F0")]
		public CoroutineHandle CallPeriodicallyOnInstance(float timeframe, float period, Action action, [Optional] Action onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000760")]
		[Address(RVA = "0x16CE530", Offset = "0x16CE530", VA = "0x16CE530")]
		public static CoroutineHandle CallPeriodically(float timeframe, float period, Action action, Segment segment, [Optional] Action onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000761")]
		[Address(RVA = "0x16CE5E8", Offset = "0x16CE5E8", VA = "0x16CE5E8")]
		public CoroutineHandle CallPeriodicallyOnInstance(float timeframe, float period, Action action, Segment segment, [Optional] Action onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000762")]
		[Address(RVA = "0x16CE630", Offset = "0x16CE630", VA = "0x16CE630")]
		public static CoroutineHandle CallContinuously(float timeframe, Action action, [Optional] Action onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000763")]
		[Address(RVA = "0x16CE6E0", Offset = "0x16CE6E0", VA = "0x16CE6E0")]
		public CoroutineHandle CallContinuouslyOnInstance(float timeframe, Action action, [Optional] Action onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000764")]
		[Address(RVA = "0x16CE724", Offset = "0x16CE724", VA = "0x16CE724")]
		public static CoroutineHandle CallContinuously(float timeframe, Action action, Segment timing, [Optional] Action onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000765")]
		[Address(RVA = "0x16CE7D8", Offset = "0x16CE7D8", VA = "0x16CE7D8")]
		public CoroutineHandle CallContinuouslyOnInstance(float timeframe, Action action, Segment timing, [Optional] Action onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000766")]
		[Address(RVA = "0x16CE42C", Offset = "0x16CE42C", VA = "0x16CE42C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCB4620", Offset = "0xCB4620")]
		private IEnumerator<float> _CallContinuously(float timeframe, float period, Action action, Action onDone)
		{
			return null;
		}

		[Token(Token = "0x6000767")]
		public static CoroutineHandle CallPeriodically<T>(T reference, float timeframe, float period, Action<T> action, [Optional] Action<T> onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000768")]
		public CoroutineHandle CallPeriodicallyOnInstance<T>(T reference, float timeframe, float period, Action<T> action, [Optional] Action<T> onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6000769")]
		public static CoroutineHandle CallPeriodically<T>(T reference, float timeframe, float period, Action<T> action, Segment timing, [Optional] Action<T> onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x600076A")]
		public CoroutineHandle CallPeriodicallyOnInstance<T>(T reference, float timeframe, float period, Action<T> action, Segment timing, [Optional] Action<T> onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x600076B")]
		public static CoroutineHandle CallContinuously<T>(T reference, float timeframe, Action<T> action, [Optional] Action<T> onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x600076C")]
		public CoroutineHandle CallContinuouslyOnInstance<T>(T reference, float timeframe, Action<T> action, [Optional] Action<T> onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x600076D")]
		public static CoroutineHandle CallContinuously<T>(T reference, float timeframe, Action<T> action, Segment timing, [Optional] Action<T> onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x600076E")]
		public CoroutineHandle CallContinuouslyOnInstance<T>(T reference, float timeframe, Action<T> action, Segment timing, [Optional] Action<T> onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x600076F")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCB4684", Offset = "0xCB4684")]
		private IEnumerator<float> _CallContinuously<T>(T reference, float timeframe, float period, Action<T> action, [Optional] Action<T> onDone)
		{
			return null;
		}

		[Token(Token = "0x6000770")]
		[Address(RVA = "0x16CE850", Offset = "0x16CE850", VA = "0x16CE850")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xCB46E8", Offset = "0xCB46E8")]
		public new Coroutine StartCoroutine(IEnumerator routine)
		{
			return null;
		}

		[Token(Token = "0x6000771")]
		[Address(RVA = "0x16CE858", Offset = "0x16CE858", VA = "0x16CE858")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xCB4724", Offset = "0xCB4724")]
		public new Coroutine StartCoroutine(string methodName, object value)
		{
			return null;
		}

		[Token(Token = "0x6000772")]
		[Address(RVA = "0x16CE860", Offset = "0x16CE860", VA = "0x16CE860")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xCB4760", Offset = "0xCB4760")]
		public new Coroutine StartCoroutine(string methodName)
		{
			return null;
		}

		[Token(Token = "0x6000773")]
		[Address(RVA = "0x16CE868", Offset = "0x16CE868", VA = "0x16CE868")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xCB479C", Offset = "0xCB479C")]
		public new Coroutine StartCoroutine_Auto(IEnumerator routine)
		{
			return null;
		}

		[Token(Token = "0x6000774")]
		[Address(RVA = "0x16CE870", Offset = "0x16CE870", VA = "0x16CE870")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xCB47D8", Offset = "0xCB47D8")]
		public new void StopCoroutine(string methodName)
		{
		}

		[Token(Token = "0x6000775")]
		[Address(RVA = "0x16CE874", Offset = "0x16CE874", VA = "0x16CE874")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xCB4814", Offset = "0xCB4814")]
		public new void StopCoroutine(IEnumerator routine)
		{
		}

		[Token(Token = "0x6000776")]
		[Address(RVA = "0x16CE878", Offset = "0x16CE878", VA = "0x16CE878")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xCB4850", Offset = "0xCB4850")]
		public new void StopCoroutine(Coroutine routine)
		{
		}

		[Token(Token = "0x6000777")]
		[Address(RVA = "0x16CE87C", Offset = "0x16CE87C", VA = "0x16CE87C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xCB488C", Offset = "0xCB488C")]
		public new void StopAllCoroutines()
		{
		}

		[Token(Token = "0x6000778")]
		[Address(RVA = "0x16CE880", Offset = "0x16CE880", VA = "0x16CE880")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xCB48C8", Offset = "0xCB48C8")]
		public new static void Destroy(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x6000779")]
		[Address(RVA = "0x16CE884", Offset = "0x16CE884", VA = "0x16CE884")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xCB4904", Offset = "0xCB4904")]
		public new static void Destroy(UnityEngine.Object obj, float f)
		{
		}

		[Token(Token = "0x600077A")]
		[Address(RVA = "0x16CE888", Offset = "0x16CE888", VA = "0x16CE888")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xCB4940", Offset = "0xCB4940")]
		public static void DestroyObject(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x600077B")]
		[Address(RVA = "0x16CE88C", Offset = "0x16CE88C", VA = "0x16CE88C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xCB497C", Offset = "0xCB497C")]
		public static void DestroyObject(UnityEngine.Object obj, float f)
		{
		}

		[Token(Token = "0x600077C")]
		[Address(RVA = "0x16CE890", Offset = "0x16CE890", VA = "0x16CE890")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xCB49B8", Offset = "0xCB49B8")]
		public new static void DestroyImmediate(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x600077D")]
		[Address(RVA = "0x16CE894", Offset = "0x16CE894", VA = "0x16CE894")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xCB49F4", Offset = "0xCB49F4")]
		public new static void DestroyImmediate(UnityEngine.Object obj, bool b)
		{
		}

		[Token(Token = "0x600077E")]
		[Address(RVA = "0x16CE898", Offset = "0x16CE898", VA = "0x16CE898")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xCB4A30", Offset = "0xCB4A30")]
		public new static void Instantiate(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x600077F")]
		[Address(RVA = "0x16CE89C", Offset = "0x16CE89C", VA = "0x16CE89C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xCB4A6C", Offset = "0xCB4A6C")]
		public new static void Instantiate(UnityEngine.Object original, Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x6000780")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xCB4AA8", Offset = "0xCB4AA8")]
		public new static void Instantiate<T>(T original) where T : UnityEngine.Object
		{
		}

		[Token(Token = "0x6000781")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xCB4AE4", Offset = "0xCB4AE4")]
		public new static T FindObjectOfType<T>() where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6000782")]
		[Address(RVA = "0x16CE8A0", Offset = "0x16CE8A0", VA = "0x16CE8A0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xCB4B20", Offset = "0xCB4B20")]
		public new static UnityEngine.Object FindObjectOfType(Type t)
		{
			return null;
		}

		[Token(Token = "0x6000783")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xCB4B5C", Offset = "0xCB4B5C")]
		public new static T[] FindObjectsOfType<T>() where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6000784")]
		[Address(RVA = "0x16CE8A8", Offset = "0x16CE8A8", VA = "0x16CE8A8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xCB4B98", Offset = "0xCB4B98")]
		public new static UnityEngine.Object[] FindObjectsOfType(Type t)
		{
			return null;
		}

		[Token(Token = "0x6000785")]
		[Address(RVA = "0x16CE8B0", Offset = "0x16CE8B0", VA = "0x16CE8B0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xCB4BD4", Offset = "0xCB4BD4")]
		public new static void print(object message)
		{
		}

		[Token(Token = "0x6000786")]
		[Address(RVA = "0x16CE8B4", Offset = "0x16CE8B4", VA = "0x16CE8B4")]
		public Timing()
		{
		}
	}
	[Token(Token = "0x2000091")]
	public enum Segment
	{
		[Token(Token = "0x400032B")]
		Invalid = -1,
		[Token(Token = "0x400032C")]
		Update,
		[Token(Token = "0x400032D")]
		FixedUpdate,
		[Token(Token = "0x400032E")]
		LateUpdate,
		[Token(Token = "0x400032F")]
		SlowUpdate
	}
	[Token(Token = "0x2000092")]
	public enum DebugInfoType
	{
		[Token(Token = "0x4000331")]
		None,
		[Token(Token = "0x4000332")]
		SeperateCoroutines,
		[Token(Token = "0x4000333")]
		SeperateTags
	}
	[Token(Token = "0x2000093")]
	public struct CoroutineHandle : IEquatable<CoroutineHandle>
	{
		[Token(Token = "0x4000334")]
		private const byte ReservedSpace = 15;

		[Token(Token = "0x4000335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int[] NextIndex;

		[Token(Token = "0x4000336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly int _id;

		[Token(Token = "0x170000D3")]
		public byte Key
		{
			[Token(Token = "0x6000788")]
			[Address(RVA = "0xDF6A00", Offset = "0xDF6A00", VA = "0xDF6A00")]
			get
			{
				return default(byte);
			}
		}

		[Token(Token = "0x170000D4")]
		public bool IsValid
		{
			[Token(Token = "0x600078F")]
			[Address(RVA = "0xDF6A34", Offset = "0xDF6A34", VA = "0xDF6A34")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000789")]
		[Address(RVA = "0xDF6A0C", Offset = "0xDF6A0C", VA = "0xDF6A0C")]
		public CoroutineHandle(byte ind)
		{
		}

		[Token(Token = "0x600078A")]
		[Address(RVA = "0xDF6A14", Offset = "0xDF6A14", VA = "0xDF6A14", Slot = "4")]
		public bool Equals(CoroutineHandle other)
		{
			return default(bool);
		}

		[Token(Token = "0x600078B")]
		[Address(RVA = "0xDF6A24", Offset = "0xDF6A24", VA = "0xDF6A24", Slot = "0")]
		public override bool Equals(object other)
		{
			return default(bool);
		}

		[Token(Token = "0x600078C")]
		[Address(RVA = "0x16C4650", Offset = "0x16C4650", VA = "0x16C4650")]
		public static bool operator ==(CoroutineHandle a, CoroutineHandle b)
		{
			return default(bool);
		}

		[Token(Token = "0x600078D")]
		[Address(RVA = "0x16C465C", Offset = "0x16C465C", VA = "0x16C465C")]
		public static bool operator !=(CoroutineHandle a, CoroutineHandle b)
		{
			return default(bool);
		}

		[Token(Token = "0x600078E")]
		[Address(RVA = "0xDF6A2C", Offset = "0xDF6A2C", VA = "0xDF6A2C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
}
namespace Valve.VR
{
	[Token(Token = "0x2000094")]
	public struct IVRSystem
	{
		[Token(Token = "0x20002C5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF1B8", Offset = "0xCAF1B8")]
		internal delegate void _GetRecommendedRenderTargetSize(ref uint pnWidth, ref uint pnHeight);

		[Token(Token = "0x20002C6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF1CC", Offset = "0xCAF1CC")]
		internal delegate HmdMatrix44_t _GetProjectionMatrix(EVREye eEye, float fNearZ, float fFarZ);

		[Token(Token = "0x20002C7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF1E0", Offset = "0xCAF1E0")]
		internal delegate void _GetProjectionRaw(EVREye eEye, ref float pfLeft, ref float pfRight, ref float pfTop, ref float pfBottom);

		[Token(Token = "0x20002C8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF1F4", Offset = "0xCAF1F4")]
		internal delegate bool _ComputeDistortion(EVREye eEye, float fU, float fV, ref DistortionCoordinates_t pDistortionCoordinates);

		[Token(Token = "0x20002C9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF208", Offset = "0xCAF208")]
		internal delegate HmdMatrix34_t _GetEyeToHeadTransform(EVREye eEye);

		[Token(Token = "0x20002CA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF21C", Offset = "0xCAF21C")]
		internal delegate bool _GetTimeSinceLastVsync(ref float pfSecondsSinceLastVsync, ref ulong pulFrameCounter);

		[Token(Token = "0x20002CB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF230", Offset = "0xCAF230")]
		internal delegate int _GetD3D9AdapterIndex();

		[Token(Token = "0x20002CC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF244", Offset = "0xCAF244")]
		internal delegate void _GetDXGIOutputInfo(ref int pnAdapterIndex);

		[Token(Token = "0x20002CD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF258", Offset = "0xCAF258")]
		internal delegate void _GetOutputDevice(ref ulong pnDevice, ETextureType textureType, IntPtr pInstance);

		[Token(Token = "0x20002CE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF26C", Offset = "0xCAF26C")]
		internal delegate bool _IsDisplayOnDesktop();

		[Token(Token = "0x20002CF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF280", Offset = "0xCAF280")]
		internal delegate bool _SetDisplayVisibility(bool bIsVisibleOnDesktop);

		[Token(Token = "0x20002D0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF294", Offset = "0xCAF294")]
		internal delegate void _GetDeviceToAbsoluteTrackingPose(ETrackingUniverseOrigin eOrigin, float fPredictedSecondsToPhotonsFromNow, [In][Out] TrackedDevicePose_t[] pTrackedDevicePoseArray, uint unTrackedDevicePoseArrayCount);

		[Token(Token = "0x20002D1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF2A8", Offset = "0xCAF2A8")]
		internal delegate void _ResetSeatedZeroPose();

		[Token(Token = "0x20002D2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF2BC", Offset = "0xCAF2BC")]
		internal delegate HmdMatrix34_t _GetSeatedZeroPoseToStandingAbsoluteTrackingPose();

		[Token(Token = "0x20002D3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF2D0", Offset = "0xCAF2D0")]
		internal delegate HmdMatrix34_t _GetRawZeroPoseToStandingAbsoluteTrackingPose();

		[Token(Token = "0x20002D4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF2E4", Offset = "0xCAF2E4")]
		internal delegate uint _GetSortedTrackedDeviceIndicesOfClass(ETrackedDeviceClass eTrackedDeviceClass, [In][Out] uint[] punTrackedDeviceIndexArray, uint unTrackedDeviceIndexArrayCount, uint unRelativeToTrackedDeviceIndex);

		[Token(Token = "0x20002D5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF2F8", Offset = "0xCAF2F8")]
		internal delegate EDeviceActivityLevel _GetTrackedDeviceActivityLevel(uint unDeviceId);

		[Token(Token = "0x20002D6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF30C", Offset = "0xCAF30C")]
		internal delegate void _ApplyTransform(ref TrackedDevicePose_t pOutputPose, ref TrackedDevicePose_t pTrackedDevicePose, ref HmdMatrix34_t pTransform);

		[Token(Token = "0x20002D7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF320", Offset = "0xCAF320")]
		internal delegate uint _GetTrackedDeviceIndexForControllerRole(ETrackedControllerRole unDeviceType);

		[Token(Token = "0x20002D8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF334", Offset = "0xCAF334")]
		internal delegate ETrackedControllerRole _GetControllerRoleForTrackedDeviceIndex(uint unDeviceIndex);

		[Token(Token = "0x20002D9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF348", Offset = "0xCAF348")]
		internal delegate ETrackedDeviceClass _GetTrackedDeviceClass(uint unDeviceIndex);

		[Token(Token = "0x20002DA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF35C", Offset = "0xCAF35C")]
		internal delegate bool _IsTrackedDeviceConnected(uint unDeviceIndex);

		[Token(Token = "0x20002DB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF370", Offset = "0xCAF370")]
		internal delegate bool _GetBoolTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x20002DC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF384", Offset = "0xCAF384")]
		internal delegate float _GetFloatTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x20002DD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF398", Offset = "0xCAF398")]
		internal delegate int _GetInt32TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x20002DE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF3AC", Offset = "0xCAF3AC")]
		internal delegate ulong _GetUint64TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x20002DF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF3C0", Offset = "0xCAF3C0")]
		internal delegate HmdMatrix34_t _GetMatrix34TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x20002E0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF3D4", Offset = "0xCAF3D4")]
		internal delegate uint _GetArrayTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, uint propType, IntPtr pBuffer, uint unBufferSize, ref ETrackedPropertyError pError);

		[Token(Token = "0x20002E1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF3E8", Offset = "0xCAF3E8")]
		internal delegate uint _GetStringTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, StringBuilder pchValue, uint unBufferSize, ref ETrackedPropertyError pError);

		[Token(Token = "0x20002E2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF3FC", Offset = "0xCAF3FC")]
		internal delegate IntPtr _GetPropErrorNameFromEnum(ETrackedPropertyError error);

		[Token(Token = "0x20002E3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF410", Offset = "0xCAF410")]
		internal delegate bool _PollNextEvent(ref VREvent_t pEvent, uint uncbVREvent);

		[Token(Token = "0x20002E4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF424", Offset = "0xCAF424")]
		internal delegate bool _PollNextEventWithPose(ETrackingUniverseOrigin eOrigin, ref VREvent_t pEvent, uint uncbVREvent, ref TrackedDevicePose_t pTrackedDevicePose);

		[Token(Token = "0x20002E5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF438", Offset = "0xCAF438")]
		internal delegate IntPtr _GetEventTypeNameFromEnum(EVREventType eType);

		[Token(Token = "0x20002E6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF44C", Offset = "0xCAF44C")]
		internal delegate HiddenAreaMesh_t _GetHiddenAreaMesh(EVREye eEye, EHiddenAreaMeshType type);

		[Token(Token = "0x20002E7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF460", Offset = "0xCAF460")]
		internal delegate bool _GetControllerState(uint unControllerDeviceIndex, ref VRControllerState_t pControllerState, uint unControllerStateSize);

		[Token(Token = "0x20002E8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF474", Offset = "0xCAF474")]
		internal delegate bool _GetControllerStateWithPose(ETrackingUniverseOrigin eOrigin, uint unControllerDeviceIndex, ref VRControllerState_t pControllerState, uint unControllerStateSize, ref TrackedDevicePose_t pTrackedDevicePose);

		[Token(Token = "0x20002E9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF488", Offset = "0xCAF488")]
		internal delegate void _TriggerHapticPulse(uint unControllerDeviceIndex, uint unAxisId, char usDurationMicroSec);

		[Token(Token = "0x20002EA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF49C", Offset = "0xCAF49C")]
		internal delegate IntPtr _GetButtonIdNameFromEnum(EVRButtonId eButtonId);

		[Token(Token = "0x20002EB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF4B0", Offset = "0xCAF4B0")]
		internal delegate IntPtr _GetControllerAxisTypeNameFromEnum(EVRControllerAxisType eAxisType);

		[Token(Token = "0x20002EC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF4C4", Offset = "0xCAF4C4")]
		internal delegate bool _IsInputAvailable();

		[Token(Token = "0x20002ED")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF4D8", Offset = "0xCAF4D8")]
		internal delegate bool _IsSteamVRDrawingControllers();

		[Token(Token = "0x20002EE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF4EC", Offset = "0xCAF4EC")]
		internal delegate bool _ShouldApplicationPause();

		[Token(Token = "0x20002EF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF500", Offset = "0xCAF500")]
		internal delegate bool _ShouldApplicationReduceRenderingWork();

		[Token(Token = "0x20002F0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF514", Offset = "0xCAF514")]
		internal delegate uint _DriverDebugRequest(uint unDeviceIndex, string pchRequest, StringBuilder pchResponseBuffer, uint unResponseBufferSize);

		[Token(Token = "0x20002F1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF528", Offset = "0xCAF528")]
		internal delegate EVRFirmwareError _PerformFirmwareUpdate(uint unDeviceIndex);

		[Token(Token = "0x20002F2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF53C", Offset = "0xCAF53C")]
		internal delegate void _AcknowledgeQuit_Exiting();

		[Token(Token = "0x20002F3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF550", Offset = "0xCAF550")]
		internal delegate void _AcknowledgeQuit_UserPrompt();

		[Token(Token = "0x4000337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetRecommendedRenderTargetSize GetRecommendedRenderTargetSize;

		[Token(Token = "0x4000338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetProjectionMatrix GetProjectionMatrix;

		[Token(Token = "0x4000339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetProjectionRaw GetProjectionRaw;

		[Token(Token = "0x400033A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _ComputeDistortion ComputeDistortion;

		[Token(Token = "0x400033B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetEyeToHeadTransform GetEyeToHeadTransform;

		[Token(Token = "0x400033C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetTimeSinceLastVsync GetTimeSinceLastVsync;

		[Token(Token = "0x400033D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _GetD3D9AdapterIndex GetD3D9AdapterIndex;

		[Token(Token = "0x400033E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetDXGIOutputInfo GetDXGIOutputInfo;

		[Token(Token = "0x400033F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetOutputDevice GetOutputDevice;

		[Token(Token = "0x4000340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _IsDisplayOnDesktop IsDisplayOnDesktop;

		[Token(Token = "0x4000341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _SetDisplayVisibility SetDisplayVisibility;

		[Token(Token = "0x4000342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _GetDeviceToAbsoluteTrackingPose GetDeviceToAbsoluteTrackingPose;

		[Token(Token = "0x4000343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _ResetSeatedZeroPose ResetSeatedZeroPose;

		[Token(Token = "0x4000344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetSeatedZeroPoseToStandingAbsoluteTrackingPose GetSeatedZeroPoseToStandingAbsoluteTrackingPose;

		[Token(Token = "0x4000345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _GetRawZeroPoseToStandingAbsoluteTrackingPose GetRawZeroPoseToStandingAbsoluteTrackingPose;

		[Token(Token = "0x4000346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetSortedTrackedDeviceIndicesOfClass GetSortedTrackedDeviceIndicesOfClass;

		[Token(Token = "0x4000347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _GetTrackedDeviceActivityLevel GetTrackedDeviceActivityLevel;

		[Token(Token = "0x4000348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _ApplyTransform ApplyTransform;

		[Token(Token = "0x4000349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _GetTrackedDeviceIndexForControllerRole GetTrackedDeviceIndexForControllerRole;

		[Token(Token = "0x400034A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _GetControllerRoleForTrackedDeviceIndex GetControllerRoleForTrackedDeviceIndex;

		[Token(Token = "0x400034B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal _GetTrackedDeviceClass GetTrackedDeviceClass;

		[Token(Token = "0x400034C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal _IsTrackedDeviceConnected IsTrackedDeviceConnected;

		[Token(Token = "0x400034D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		internal _GetBoolTrackedDeviceProperty GetBoolTrackedDeviceProperty;

		[Token(Token = "0x400034E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal _GetFloatTrackedDeviceProperty GetFloatTrackedDeviceProperty;

		[Token(Token = "0x400034F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		internal _GetInt32TrackedDeviceProperty GetInt32TrackedDeviceProperty;

		[Token(Token = "0x4000350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		internal _GetUint64TrackedDeviceProperty GetUint64TrackedDeviceProperty;

		[Token(Token = "0x4000351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		internal _GetMatrix34TrackedDeviceProperty GetMatrix34TrackedDeviceProperty;

		[Token(Token = "0x4000352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		internal _GetArrayTrackedDeviceProperty GetArrayTrackedDeviceProperty;

		[Token(Token = "0x4000353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		internal _GetStringTrackedDeviceProperty GetStringTrackedDeviceProperty;

		[Token(Token = "0x4000354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		internal _GetPropErrorNameFromEnum GetPropErrorNameFromEnum;

		[Token(Token = "0x4000355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		internal _PollNextEvent PollNextEvent;

		[Token(Token = "0x4000356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		internal _PollNextEventWithPose PollNextEventWithPose;

		[Token(Token = "0x4000357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		internal _GetEventTypeNameFromEnum GetEventTypeNameFromEnum;

		[Token(Token = "0x4000358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		internal _GetHiddenAreaMesh GetHiddenAreaMesh;

		[Token(Token = "0x4000359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		internal _GetControllerState GetControllerState;

		[Token(Token = "0x400035A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		internal _GetControllerStateWithPose GetControllerStateWithPose;

		[Token(Token = "0x400035B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		internal _TriggerHapticPulse TriggerHapticPulse;

		[Token(Token = "0x400035C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		internal _GetButtonIdNameFromEnum GetButtonIdNameFromEnum;

		[Token(Token = "0x400035D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		internal _GetControllerAxisTypeNameFromEnum GetControllerAxisTypeNameFromEnum;

		[Token(Token = "0x400035E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		internal _IsInputAvailable IsInputAvailable;

		[Token(Token = "0x400035F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		internal _IsSteamVRDrawingControllers IsSteamVRDrawingControllers;

		[Token(Token = "0x4000360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		internal _ShouldApplicationPause ShouldApplicationPause;

		[Token(Token = "0x4000361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		internal _ShouldApplicationReduceRenderingWork ShouldApplicationReduceRenderingWork;

		[Token(Token = "0x4000362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		internal _DriverDebugRequest DriverDebugRequest;

		[Token(Token = "0x4000363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		internal _PerformFirmwareUpdate PerformFirmwareUpdate;

		[Token(Token = "0x4000364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		internal _AcknowledgeQuit_Exiting AcknowledgeQuit_Exiting;

		[Token(Token = "0x4000365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		internal _AcknowledgeQuit_UserPrompt AcknowledgeQuit_UserPrompt;
	}
	[Token(Token = "0x2000095")]
	public struct IVRExtendedDisplay
	{
		[Token(Token = "0x20002F4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF564", Offset = "0xCAF564")]
		internal delegate void _GetWindowBounds(ref int pnX, ref int pnY, ref uint pnWidth, ref uint pnHeight);

		[Token(Token = "0x20002F5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF578", Offset = "0xCAF578")]
		internal delegate void _GetEyeOutputViewport(EVREye eEye, ref uint pnX, ref uint pnY, ref uint pnWidth, ref uint pnHeight);

		[Token(Token = "0x20002F6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF58C", Offset = "0xCAF58C")]
		internal delegate void _GetDXGIOutputInfo(ref int pnAdapterIndex, ref int pnAdapterOutputIndex);

		[Token(Token = "0x4000366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetWindowBounds GetWindowBounds;

		[Token(Token = "0x4000367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetEyeOutputViewport GetEyeOutputViewport;

		[Token(Token = "0x4000368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetDXGIOutputInfo GetDXGIOutputInfo;
	}
	[Token(Token = "0x2000096")]
	public struct IVRTrackedCamera
	{
		[Token(Token = "0x20002F7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF5A0", Offset = "0xCAF5A0")]
		internal delegate IntPtr _GetCameraErrorNameFromEnum(EVRTrackedCameraError eCameraError);

		[Token(Token = "0x20002F8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF5B4", Offset = "0xCAF5B4")]
		internal delegate EVRTrackedCameraError _HasCamera(uint nDeviceIndex, ref bool pHasCamera);

		[Token(Token = "0x20002F9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF5C8", Offset = "0xCAF5C8")]
		internal delegate EVRTrackedCameraError _GetCameraFrameSize(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref uint pnWidth, ref uint pnHeight, ref uint pnFrameBufferSize);

		[Token(Token = "0x20002FA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF5DC", Offset = "0xCAF5DC")]
		internal delegate EVRTrackedCameraError _GetCameraIntrinsics(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref HmdVector2_t pFocalLength, ref HmdVector2_t pCenter);

		[Token(Token = "0x20002FB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF5F0", Offset = "0xCAF5F0")]
		internal delegate EVRTrackedCameraError _GetCameraProjection(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, float flZNear, float flZFar, ref HmdMatrix44_t pProjection);

		[Token(Token = "0x20002FC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF604", Offset = "0xCAF604")]
		internal delegate EVRTrackedCameraError _AcquireVideoStreamingService(uint nDeviceIndex, ref ulong pHandle);

		[Token(Token = "0x20002FD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF618", Offset = "0xCAF618")]
		internal delegate EVRTrackedCameraError _ReleaseVideoStreamingService(ulong hTrackedCamera);

		[Token(Token = "0x20002FE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF62C", Offset = "0xCAF62C")]
		internal delegate EVRTrackedCameraError _GetVideoStreamFrameBuffer(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, IntPtr pFrameBuffer, uint nFrameBufferSize, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize);

		[Token(Token = "0x20002FF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF640", Offset = "0xCAF640")]
		internal delegate EVRTrackedCameraError _GetVideoStreamTextureSize(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref VRTextureBounds_t pTextureBounds, ref uint pnWidth, ref uint pnHeight);

		[Token(Token = "0x2000300")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF654", Offset = "0xCAF654")]
		internal delegate EVRTrackedCameraError _GetVideoStreamTextureD3D11(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, IntPtr pD3D11DeviceOrResource, ref IntPtr ppD3D11ShaderResourceView, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize);

		[Token(Token = "0x2000301")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF668", Offset = "0xCAF668")]
		internal delegate EVRTrackedCameraError _GetVideoStreamTextureGL(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, ref uint pglTextureId, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize);

		[Token(Token = "0x2000302")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF67C", Offset = "0xCAF67C")]
		internal delegate EVRTrackedCameraError _ReleaseVideoStreamTextureGL(ulong hTrackedCamera, uint glTextureId);

		[Token(Token = "0x4000369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetCameraErrorNameFromEnum GetCameraErrorNameFromEnum;

		[Token(Token = "0x400036A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _HasCamera HasCamera;

		[Token(Token = "0x400036B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetCameraFrameSize GetCameraFrameSize;

		[Token(Token = "0x400036C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetCameraIntrinsics GetCameraIntrinsics;

		[Token(Token = "0x400036D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetCameraProjection GetCameraProjection;

		[Token(Token = "0x400036E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _AcquireVideoStreamingService AcquireVideoStreamingService;

		[Token(Token = "0x400036F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _ReleaseVideoStreamingService ReleaseVideoStreamingService;

		[Token(Token = "0x4000370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetVideoStreamFrameBuffer GetVideoStreamFrameBuffer;

		[Token(Token = "0x4000371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetVideoStreamTextureSize GetVideoStreamTextureSize;

		[Token(Token = "0x4000372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetVideoStreamTextureD3D11 GetVideoStreamTextureD3D11;

		[Token(Token = "0x4000373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _GetVideoStreamTextureGL GetVideoStreamTextureGL;

		[Token(Token = "0x4000374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _ReleaseVideoStreamTextureGL ReleaseVideoStreamTextureGL;
	}
	[Token(Token = "0x2000097")]
	public struct IVRApplications
	{
		[Token(Token = "0x2000303")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF690", Offset = "0xCAF690")]
		internal delegate EVRApplicationError _AddApplicationManifest(string pchApplicationManifestFullPath, bool bTemporary);

		[Token(Token = "0x2000304")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF6A4", Offset = "0xCAF6A4")]
		internal delegate EVRApplicationError _RemoveApplicationManifest(string pchApplicationManifestFullPath);

		[Token(Token = "0x2000305")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF6B8", Offset = "0xCAF6B8")]
		internal delegate bool _IsApplicationInstalled(string pchAppKey);

		[Token(Token = "0x2000306")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF6CC", Offset = "0xCAF6CC")]
		internal delegate uint _GetApplicationCount();

		[Token(Token = "0x2000307")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF6E0", Offset = "0xCAF6E0")]
		internal delegate EVRApplicationError _GetApplicationKeyByIndex(uint unApplicationIndex, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen);

		[Token(Token = "0x2000308")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF6F4", Offset = "0xCAF6F4")]
		internal delegate EVRApplicationError _GetApplicationKeyByProcessId(uint unProcessId, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen);

		[Token(Token = "0x2000309")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF708", Offset = "0xCAF708")]
		internal delegate EVRApplicationError _LaunchApplication(string pchAppKey);

		[Token(Token = "0x200030A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF71C", Offset = "0xCAF71C")]
		internal delegate EVRApplicationError _LaunchTemplateApplication(string pchTemplateAppKey, string pchNewAppKey, [In][Out] AppOverrideKeys_t[] pKeys, uint unKeys);

		[Token(Token = "0x200030B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF730", Offset = "0xCAF730")]
		internal delegate EVRApplicationError _LaunchApplicationFromMimeType(string pchMimeType, string pchArgs);

		[Token(Token = "0x200030C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF744", Offset = "0xCAF744")]
		internal delegate EVRApplicationError _LaunchDashboardOverlay(string pchAppKey);

		[Token(Token = "0x200030D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF758", Offset = "0xCAF758")]
		internal delegate bool _CancelApplicationLaunch(string pchAppKey);

		[Token(Token = "0x200030E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF76C", Offset = "0xCAF76C")]
		internal delegate EVRApplicationError _IdentifyApplication(uint unProcessId, string pchAppKey);

		[Token(Token = "0x200030F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF780", Offset = "0xCAF780")]
		internal delegate uint _GetApplicationProcessId(string pchAppKey);

		[Token(Token = "0x2000310")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF794", Offset = "0xCAF794")]
		internal delegate IntPtr _GetApplicationsErrorNameFromEnum(EVRApplicationError error);

		[Token(Token = "0x2000311")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF7A8", Offset = "0xCAF7A8")]
		internal delegate uint _GetApplicationPropertyString(string pchAppKey, EVRApplicationProperty eProperty, StringBuilder pchPropertyValueBuffer, uint unPropertyValueBufferLen, ref EVRApplicationError peError);

		[Token(Token = "0x2000312")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF7BC", Offset = "0xCAF7BC")]
		internal delegate bool _GetApplicationPropertyBool(string pchAppKey, EVRApplicationProperty eProperty, ref EVRApplicationError peError);

		[Token(Token = "0x2000313")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF7D0", Offset = "0xCAF7D0")]
		internal delegate ulong _GetApplicationPropertyUint64(string pchAppKey, EVRApplicationProperty eProperty, ref EVRApplicationError peError);

		[Token(Token = "0x2000314")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF7E4", Offset = "0xCAF7E4")]
		internal delegate EVRApplicationError _SetApplicationAutoLaunch(string pchAppKey, bool bAutoLaunch);

		[Token(Token = "0x2000315")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF7F8", Offset = "0xCAF7F8")]
		internal delegate bool _GetApplicationAutoLaunch(string pchAppKey);

		[Token(Token = "0x2000316")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF80C", Offset = "0xCAF80C")]
		internal delegate EVRApplicationError _SetDefaultApplicationForMimeType(string pchAppKey, string pchMimeType);

		[Token(Token = "0x2000317")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF820", Offset = "0xCAF820")]
		internal delegate bool _GetDefaultApplicationForMimeType(string pchMimeType, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen);

		[Token(Token = "0x2000318")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF834", Offset = "0xCAF834")]
		internal delegate bool _GetApplicationSupportedMimeTypes(string pchAppKey, StringBuilder pchMimeTypesBuffer, uint unMimeTypesBuffer);

		[Token(Token = "0x2000319")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF848", Offset = "0xCAF848")]
		internal delegate uint _GetApplicationsThatSupportMimeType(string pchMimeType, StringBuilder pchAppKeysThatSupportBuffer, uint unAppKeysThatSupportBuffer);

		[Token(Token = "0x200031A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF85C", Offset = "0xCAF85C")]
		internal delegate uint _GetApplicationLaunchArguments(uint unHandle, StringBuilder pchArgs, uint unArgs);

		[Token(Token = "0x200031B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF870", Offset = "0xCAF870")]
		internal delegate EVRApplicationError _GetStartingApplication(StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen);

		[Token(Token = "0x200031C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF884", Offset = "0xCAF884")]
		internal delegate EVRApplicationTransitionState _GetTransitionState();

		[Token(Token = "0x200031D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF898", Offset = "0xCAF898")]
		internal delegate EVRApplicationError _PerformApplicationPrelaunchCheck(string pchAppKey);

		[Token(Token = "0x200031E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF8AC", Offset = "0xCAF8AC")]
		internal delegate IntPtr _GetApplicationsTransitionStateNameFromEnum(EVRApplicationTransitionState state);

		[Token(Token = "0x200031F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF8C0", Offset = "0xCAF8C0")]
		internal delegate bool _IsQuitUserPromptRequested();

		[Token(Token = "0x2000320")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF8D4", Offset = "0xCAF8D4")]
		internal delegate EVRApplicationError _LaunchInternalProcess(string pchBinaryPath, string pchArguments, string pchWorkingDirectory);

		[Token(Token = "0x2000321")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF8E8", Offset = "0xCAF8E8")]
		internal delegate uint _GetCurrentSceneProcessId();

		[Token(Token = "0x4000375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _AddApplicationManifest AddApplicationManifest;

		[Token(Token = "0x4000376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _RemoveApplicationManifest RemoveApplicationManifest;

		[Token(Token = "0x4000377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _IsApplicationInstalled IsApplicationInstalled;

		[Token(Token = "0x4000378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetApplicationCount GetApplicationCount;

		[Token(Token = "0x4000379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetApplicationKeyByIndex GetApplicationKeyByIndex;

		[Token(Token = "0x400037A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetApplicationKeyByProcessId GetApplicationKeyByProcessId;

		[Token(Token = "0x400037B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _LaunchApplication LaunchApplication;

		[Token(Token = "0x400037C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _LaunchTemplateApplication LaunchTemplateApplication;

		[Token(Token = "0x400037D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _LaunchApplicationFromMimeType LaunchApplicationFromMimeType;

		[Token(Token = "0x400037E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _LaunchDashboardOverlay LaunchDashboardOverlay;

		[Token(Token = "0x400037F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _CancelApplicationLaunch CancelApplicationLaunch;

		[Token(Token = "0x4000380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _IdentifyApplication IdentifyApplication;

		[Token(Token = "0x4000381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _GetApplicationProcessId GetApplicationProcessId;

		[Token(Token = "0x4000382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetApplicationsErrorNameFromEnum GetApplicationsErrorNameFromEnum;

		[Token(Token = "0x4000383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _GetApplicationPropertyString GetApplicationPropertyString;

		[Token(Token = "0x4000384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetApplicationPropertyBool GetApplicationPropertyBool;

		[Token(Token = "0x4000385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _GetApplicationPropertyUint64 GetApplicationPropertyUint64;

		[Token(Token = "0x4000386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _SetApplicationAutoLaunch SetApplicationAutoLaunch;

		[Token(Token = "0x4000387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _GetApplicationAutoLaunch GetApplicationAutoLaunch;

		[Token(Token = "0x4000388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _SetDefaultApplicationForMimeType SetDefaultApplicationForMimeType;

		[Token(Token = "0x4000389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal _GetDefaultApplicationForMimeType GetDefaultApplicationForMimeType;

		[Token(Token = "0x400038A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal _GetApplicationSupportedMimeTypes GetApplicationSupportedMimeTypes;

		[Token(Token = "0x400038B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		internal _GetApplicationsThatSupportMimeType GetApplicationsThatSupportMimeType;

		[Token(Token = "0x400038C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal _GetApplicationLaunchArguments GetApplicationLaunchArguments;

		[Token(Token = "0x400038D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		internal _GetStartingApplication GetStartingApplication;

		[Token(Token = "0x400038E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		internal _GetTransitionState GetTransitionState;

		[Token(Token = "0x400038F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		internal _PerformApplicationPrelaunchCheck PerformApplicationPrelaunchCheck;

		[Token(Token = "0x4000390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		internal _GetApplicationsTransitionStateNameFromEnum GetApplicationsTransitionStateNameFromEnum;

		[Token(Token = "0x4000391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		internal _IsQuitUserPromptRequested IsQuitUserPromptRequested;

		[Token(Token = "0x4000392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		internal _LaunchInternalProcess LaunchInternalProcess;

		[Token(Token = "0x4000393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		internal _GetCurrentSceneProcessId GetCurrentSceneProcessId;
	}
	[Token(Token = "0x2000098")]
	public struct IVRChaperone
	{
		[Token(Token = "0x2000322")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF8FC", Offset = "0xCAF8FC")]
		internal delegate ChaperoneCalibrationState _GetCalibrationState();

		[Token(Token = "0x2000323")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF910", Offset = "0xCAF910")]
		internal delegate bool _GetPlayAreaSize(ref float pSizeX, ref float pSizeZ);

		[Token(Token = "0x2000324")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF924", Offset = "0xCAF924")]
		internal delegate bool _GetPlayAreaRect(ref HmdQuad_t rect);

		[Token(Token = "0x2000325")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF938", Offset = "0xCAF938")]
		internal delegate void _ReloadInfo();

		[Token(Token = "0x2000326")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF94C", Offset = "0xCAF94C")]
		internal delegate void _SetSceneColor(HmdColor_t color);

		[Token(Token = "0x2000327")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF960", Offset = "0xCAF960")]
		internal delegate void _GetBoundsColor(ref HmdColor_t pOutputColorArray, int nNumOutputColors, float flCollisionBoundsFadeDistance, ref HmdColor_t pOutputCameraColor);

		[Token(Token = "0x2000328")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF974", Offset = "0xCAF974")]
		internal delegate bool _AreBoundsVisible();

		[Token(Token = "0x2000329")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF988", Offset = "0xCAF988")]
		internal delegate void _ForceBoundsVisible(bool bForce);

		[Token(Token = "0x4000394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetCalibrationState GetCalibrationState;

		[Token(Token = "0x4000395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetPlayAreaSize GetPlayAreaSize;

		[Token(Token = "0x4000396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetPlayAreaRect GetPlayAreaRect;

		[Token(Token = "0x4000397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _ReloadInfo ReloadInfo;

		[Token(Token = "0x4000398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _SetSceneColor SetSceneColor;

		[Token(Token = "0x4000399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetBoundsColor GetBoundsColor;

		[Token(Token = "0x400039A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _AreBoundsVisible AreBoundsVisible;

		[Token(Token = "0x400039B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _ForceBoundsVisible ForceBoundsVisible;
	}
	[Token(Token = "0x2000099")]
	public struct IVRChaperoneSetup
	{
		[Token(Token = "0x200032A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF99C", Offset = "0xCAF99C")]
		internal delegate bool _CommitWorkingCopy(EChaperoneConfigFile configFile);

		[Token(Token = "0x200032B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF9B0", Offset = "0xCAF9B0")]
		internal delegate void _RevertWorkingCopy();

		[Token(Token = "0x200032C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF9C4", Offset = "0xCAF9C4")]
		internal delegate bool _GetWorkingPlayAreaSize(ref float pSizeX, ref float pSizeZ);

		[Token(Token = "0x200032D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF9D8", Offset = "0xCAF9D8")]
		internal delegate bool _GetWorkingPlayAreaRect(ref HmdQuad_t rect);

		[Token(Token = "0x200032E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAF9EC", Offset = "0xCAF9EC")]
		internal delegate bool _GetWorkingCollisionBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, ref uint punQuadsCount);

		[Token(Token = "0x200032F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAFA00", Offset = "0xCAFA00")]
		internal delegate bool _GetLiveCollisionBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, ref uint punQuadsCount);

		[Token(Token = "0x2000330")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAFA14", Offset = "0xCAFA14")]
		internal delegate bool _GetWorkingSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose);

		[Token(Token = "0x2000331")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAFA28", Offset = "0xCAFA28")]
		internal delegate bool _GetWorkingStandingZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatStandingZeroPoseToRawTrackingPose);

		[Token(Token = "0x2000332")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAFA3C", Offset = "0xCAFA3C")]
		internal delegate void _SetWorkingPlayAreaSize(float sizeX, float sizeZ);

		[Token(Token = "0x2000333")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAFA50", Offset = "0xCAFA50")]
		internal delegate void _SetWorkingCollisionBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, uint unQuadsCount);

		[Token(Token = "0x2000334")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAFA64", Offset = "0xCAFA64")]
		internal delegate void _SetWorkingSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pMatSeatedZeroPoseToRawTrackingPose);

		[Token(Token = "0x2000335")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAFA78", Offset = "0xCAFA78")]
		internal delegate void _SetWorkingStandingZeroPoseToRawTrackingPose(ref HmdMatrix34_t pMatStandingZeroPoseToRawTrackingPose);

		[Token(Token = "0x2000336")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAFA8C", Offset = "0xCAFA8C")]
		internal delegate void _ReloadFromDisk(EChaperoneConfigFile configFile);

		[Token(Token = "0x2000337")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAFAA0", Offset = "0xCAFAA0")]
		internal delegate bool _GetLiveSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose);

		[Token(Token = "0x2000338")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAFAB4", Offset = "0xCAFAB4")]
		internal delegate void _SetWorkingCollisionBoundsTagsInfo([In][Out] byte[] pTagsBuffer, uint unTagCount);

		[Token(Token = "0x2000339")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAFAC8", Offset = "0xCAFAC8")]
		internal delegate bool _GetLiveCollisionBoundsTagsInfo([In][Out] byte[] pTagsBuffer, ref uint punTagCount);

		[Token(Token = "0x200033A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAFADC", Offset = "0xCAFADC")]
		internal delegate bool _SetWorkingPhysicalBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, uint unQuadsCount);

		[Token(Token = "0x200033B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAFAF0", Offset = "0xCAFAF0")]
		internal delegate bool _GetLivePhysicalBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, ref uint punQuadsCount);

		[Token(Token = "0x200033C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAFB04", Offset = "0xCAFB04")]
		internal delegate bool _ExportLiveToBuffer(StringBuilder pBuffer, ref uint pnBufferLength);

		[Token(Token = "0x200033D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAFB18", Offset = "0xCAFB18")]
		internal delegate bool _ImportFromBufferToWorking(string pBuffer, uint nImportFlags);

		[Token(Token = "0x400039C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _CommitWorkingCopy CommitWorkingCopy;

		[Token(Token = "0x400039D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _RevertWorkingCopy RevertWorkingCopy;

		[Token(Token = "0x400039E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetWorkingPlayAreaSize GetWorkingPlayAreaSize;

		[Token(Token = "0x400039F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetWorkingPlayAreaRect GetWorkingPlayAreaRect;

		[Token(Token = "0x40003A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetWorkingCollisionBoundsInfo GetWorkingCollisionBoundsInfo;

		[Token(Token = "0x40003A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetLiveCollisionBoundsInfo GetLiveCollisionBoundsInfo;

		[Token(Token = "0x40003A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _GetWorkingSeatedZeroPoseToRawTrackingPose GetWorkingSeatedZeroPoseToRawTrackingPose;

		[Token(Token = "0x40003A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetWorkingStandingZeroPoseToRawTrackingPose GetWorkingStandingZeroPoseToRawTrackingPose;

		[Token(Token = "0x40003A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _SetWorkingPlayAreaSize SetWorkingPlayAreaSize;

		[Token(Token = "0x40003A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _SetWorkingCollisionBoundsInfo SetWorkingCollisionBoundsInfo;

		[Token(Token = "0x40003A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _SetWorkingSeatedZeroPoseToRawTrackingPose SetWorkingSeatedZeroPoseToRawTrackingPose;

		[Token(Token = "0x40003A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _SetWorkingStandingZeroPoseToRawTrackingPose SetWorkingStandingZeroPoseToRawTrackingPose;

		[Token(Token = "0x40003A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _ReloadFromDisk ReloadFromDisk;

		[Token(Token = "0x40003A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetLiveSeatedZeroPoseToRawTrackingPose GetLiveSeatedZeroPoseToRawTrackingPose;

		[Token(Token = "0x40003AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _SetWorkingCollisionBoundsTagsInfo SetWorkingCollisionBoundsTagsInfo;

		[Token(Token = "0x40003AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetLiveCollisionBoundsTagsInfo GetLiveCollisionBoundsTagsInfo;

		[Token(Token = "0x40003AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _SetWorkingPhysicalBoundsInfo SetWorkingPhysicalBoundsInfo;

		[Token(Token = "0x40003AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _GetLivePhysicalBoundsInfo GetLivePhysicalBoundsInfo;

		[Token(Token = "0x40003AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _ExportLiveToBuffer ExportLiveToBuffer;

		[Token(Token = "0x40003AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _ImportFromBufferToWorking ImportFromBufferToWorking;
	}
	[Token(Token = "0x200009A")]
	public struct IVRCompositor
	{
		[Token(Token = "0x200033E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAFB2C", Offset = "0xCAFB2C")]
		internal delegate void _SetTrackingSpace(ETrackingUniverseOrigin eOrigin);

		[Token(Token = "0x200033F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAFB40", Offset = "0xCAFB40")]
		internal delegate ETrackingUniverseOrigin _GetTrackingSpace();

		[Token(Token = "0x2000340")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAFB54", Offset = "0xCAFB54")]
		internal delegate EVRCompositorError _WaitGetPoses([In][Out] TrackedDevicePose_t[] pRenderPoseArray, uint unRenderPoseArrayCount, [In][Out] TrackedDevicePose_t[] pGamePoseArray, uint unGamePoseArrayCount);

		[Token(Token = "0x2000341")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAFB68", Offset = "0xCAFB68")]
		internal delegate EVRCompositorError _GetLastPoses([In][Out] TrackedDevicePose_t[] pRenderPoseArray, uint unRenderPoseArrayCount, [In][Out] TrackedDevicePose_t[] pGamePoseArray, uint unGamePoseArrayCount);

		[Token(Token = "0x2000342")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAFB7C", Offset = "0xCAFB7C")]
		internal delegate EVRCompositorError _GetLastPoseForTrackedDeviceIndex(uint unDeviceIndex, ref TrackedDevicePose_t pOutputPose, ref TrackedDevicePose_t pOutputGamePose);

		[Token(Token = "0x2000343")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAFB90", Offset = "0xCAFB90")]
		internal delegate EVRCompositorError _Submit(EVREye eEye, ref Texture_t pTexture, ref VRTextureBounds_t pBounds, EVRSubmitFlags nSubmitFlags);

		[Token(Token = "0x2000344")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAFBA4", Offset = "0xCAFBA4")]
		internal delegate void _ClearLastSubmittedFrame();

		[Token(Token = "0x2000345")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAFBB8", Offset = "0xCAFBB8")]
		internal delegate void _PostPresentHandoff();

		[Token(Token = "0x2000346")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAFBCC", Offset = "0xCAFBCC")]
		internal delegate bool _GetFrameTiming(ref Compositor_FrameTiming pTiming, uint unFramesAgo);

		[Token(Token = "0x2000347")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAFBE0", Offset = "0xCAFBE0")]
		internal delegate uint _GetFrameTimings(ref Compositor_FrameTiming pTiming, uint nFrames);

		[Token(Token = "0x2000348")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAFBF4", Offset = "0xCAFBF4")]
		internal delegate float _GetFrameTimeRemaining();

		[Token(Token = "0x2000349")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAFC08", Offset = "0xCAFC08")]
		internal delegate void _GetCumulativeStats(ref Compositor_CumulativeStats pStats, uint nStatsSizeInBytes);

		[Token(Token = "0x200034A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAFC1C", Offset = "0xCAFC1C")]
		internal delegate void _FadeToColor(float fSeconds, float fRed, float fGreen, float fBlue, float fAlpha, bool bBackground);

		[Token(Token = "0x200034B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAFC30", Offset = "0xCAFC30")]
		internal delegate HmdColor_t _GetCurrentFadeColor(bool bBackground);

		[Token(Token = "0x200034C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAFC44", Offset = "0xCAFC44")]
		internal delegate void _FadeGrid(float fSeconds, bool bFadeIn);

		[Token(Token = "0x200034D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAFC58", Offset = "0xCAFC58")]
		internal delegate float _GetCurrentGridAlpha();

		[Token(Token = "0x200034E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAFC6C", Offset = "0xCAFC6C")]
		internal delegate EVRCompositorError _SetSkyboxOverride([In][Out] Texture_t[] pTextures, uint unTextureCount);

		[Token(Token = "0x200034F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAFC80", Offset = "0xCAFC80")]
		internal delegate void _ClearSkyboxOverride();

		[Token(Token = "0x2000350")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAFC94", Offset = "0xCAFC94")]
		internal delegate void _CompositorBringToFront();

		[Token(Token = "0x2000351")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAFCA8", Offset = "0xCAFCA8")]
		internal delegate void _CompositorGoToBack();

		[Token(Token = "0x2000352")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAFCBC", Offset = "0xCAFCBC")]
		internal delegate void _CompositorQuit();

		[Token(Token = "0x2000353")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAFCD0", Offset = "0xCAFCD0")]
		internal delegate bool _IsFullscreen();

		[Token(Token = "0x2000354")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAFCE4", Offset = "0xCAFCE4")]
		internal delegate uint _GetCurrentSceneFocusProcess();

		[Token(Token = "0x2000355")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAFCF8", Offset = "0xCAFCF8")]
		internal delegate uint _GetLastFrameRenderer();

		[Token(Token = "0x2000356")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAFD0C", Offset = "0xCAFD0C")]
		internal delegate bool _CanRenderScene();

		[Token(Token = "0x2000357")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAFD20", Offset = "0xCAFD20")]
		internal delegate void _ShowMirrorWindow();

		[Token(Token = "0x2000358")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAFD34", Offset = "0xCAFD34")]
		internal delegate void _HideMirrorWindow();

		[Token(Token = "0x2000359")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAFD48", Offset = "0xCAFD48")]
		internal delegate bool _IsMirrorWindowVisible();

		[Token(Token = "0x200035A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAFD5C", Offset = "0xCAFD5C")]
		internal delegate void _CompositorDumpImages();

		[Token(Token = "0x200035B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAFD70", Offset = "0xCAFD70")]
		internal delegate bool _ShouldAppRenderWithLowResources();

		[Token(Token = "0x200035C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAFD84", Offset = "0xCAFD84")]
		internal delegate void _ForceInterleavedReprojectionOn(bool bOverride);

		[Token(Token = "0x200035D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAFD98", Offset = "0xCAFD98")]
		internal delegate void _ForceReconnectProcess();

		[Token(Token = "0x200035E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAFDAC", Offset = "0xCAFDAC")]
		internal delegate void _SuspendRendering(bool bSuspend);

		[Token(Token = "0x200035F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAFDC0", Offset = "0xCAFDC0")]
		internal delegate EVRCompositorError _GetMirrorTextureD3D11(EVREye eEye, IntPtr pD3D11DeviceOrResource, ref IntPtr ppD3D11ShaderResourceView);

		[Token(Token = "0x2000360")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAFDD4", Offset = "0xCAFDD4")]
		internal delegate void _ReleaseMirrorTextureD3D11(IntPtr pD3D11ShaderResourceView);

		[Token(Token = "0x2000361")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAFDE8", Offset = "0xCAFDE8")]
		internal delegate EVRCompositorError _GetMirrorTextureGL(EVREye eEye, ref uint pglTextureId, IntPtr pglSharedTextureHandle);

		[Token(Token = "0x2000362")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAFDFC", Offset = "0xCAFDFC")]
		internal delegate bool _ReleaseSharedGLTexture(uint glTextureId, IntPtr glSharedTextureHandle);

		[Token(Token = "0x2000363")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAFE10", Offset = "0xCAFE10")]
		internal delegate void _LockGLSharedTextureForAccess(IntPtr glSharedTextureHandle);

		[Token(Token = "0x2000364")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAFE24", Offset = "0xCAFE24")]
		internal delegate void _UnlockGLSharedTextureForAccess(IntPtr glSharedTextureHandle);

		[Token(Token = "0x2000365")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAFE38", Offset = "0xCAFE38")]
		internal delegate uint _GetVulkanInstanceExtensionsRequired(StringBuilder pchValue, uint unBufferSize);

		[Token(Token = "0x2000366")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAFE4C", Offset = "0xCAFE4C")]
		internal delegate uint _GetVulkanDeviceExtensionsRequired(IntPtr pPhysicalDevice, StringBuilder pchValue, uint unBufferSize);

		[Token(Token = "0x2000367")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAFE60", Offset = "0xCAFE60")]
		internal delegate void _SetExplicitTimingMode(EVRCompositorTimingMode eTimingMode);

		[Token(Token = "0x2000368")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAFE74", Offset = "0xCAFE74")]
		internal delegate EVRCompositorError _SubmitExplicitTimingData();

		[Token(Token = "0x40003B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _SetTrackingSpace SetTrackingSpace;

		[Token(Token = "0x40003B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetTrackingSpace GetTrackingSpace;

		[Token(Token = "0x40003B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _WaitGetPoses WaitGetPoses;

		[Token(Token = "0x40003B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetLastPoses GetLastPoses;

		[Token(Token = "0x40003B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetLastPoseForTrackedDeviceIndex GetLastPoseForTrackedDeviceIndex;

		[Token(Token = "0x40003B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _Submit Submit;

		[Token(Token = "0x40003B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _ClearLastSubmittedFrame ClearLastSubmittedFrame;

		[Token(Token = "0x40003B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _PostPresentHandoff PostPresentHandoff;

		[Token(Token = "0x40003B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetFrameTiming GetFrameTiming;

		[Token(Token = "0x40003B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetFrameTimings GetFrameTimings;

		[Token(Token = "0x40003BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _GetFrameTimeRemaining GetFrameTimeRemaining;

		[Token(Token = "0x40003BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _GetCumulativeStats GetCumulativeStats;

		[Token(Token = "0x40003BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _FadeToColor FadeToColor;

		[Token(Token = "0x40003BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetCurrentFadeColor GetCurrentFadeColor;

		[Token(Token = "0x40003BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _FadeGrid FadeGrid;

		[Token(Token = "0x40003BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetCurrentGridAlpha GetCurrentGridAlpha;

		[Token(Token = "0x40003C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _SetSkyboxOverride SetSkyboxOverride;

		[Token(Token = "0x40003C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _ClearSkyboxOverride ClearSkyboxOverride;

		[Token(Token = "0x40003C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _CompositorBringToFront CompositorBringToFront;

		[Token(Token = "0x40003C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _CompositorGoToBack CompositorGoToBack;

		[Token(Token = "0x40003C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal _CompositorQuit CompositorQuit;

		[Token(Token = "0x40003C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal _IsFullscreen IsFullscreen;

		[Token(Token = "0x40003C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		internal _GetCurrentSceneFocusProcess GetCurrentSceneFocusProcess;

		[Token(Token = "0x40003C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal _GetLastFrameRenderer GetLastFrameRenderer;

		[Token(Token = "0x40003C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		internal _CanRenderScene CanRenderScene;

		[Token(Token = "0x40003C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		internal _ShowMirrorWindow ShowMirrorWindow;

		[Token(Token = "0x40003CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		internal _HideMirrorWindow HideMirrorWindow;

		[Token(Token = "0x40003CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		internal _IsMirrorWindowVisible IsMirrorWindowVisible;

		[Token(Token = "0x40003CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		internal _CompositorDumpImages CompositorDumpImages;

		[Token(Token = "0x40003CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		internal _ShouldAppRenderWithLowResources ShouldAppRenderWithLowResources;

		[Token(Token = "0x40003CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		internal _ForceInterleavedReprojectionOn ForceInterleavedReprojectionOn;

		[Token(Token = "0x40003CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		internal _ForceReconnectProcess ForceReconnectProcess;

		[Token(Token = "0x40003D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		internal _SuspendRendering SuspendRendering;

		[Token(Token = "0x40003D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		internal _GetMirrorTextureD3D11 GetMirrorTextureD3D11;

		[Token(Token = "0x40003D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		internal _ReleaseMirrorTextureD3D11 ReleaseMirrorTextureD3D11;

		[Token(Token = "0x40003D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		internal _GetMirrorTextureGL GetMirrorTextureGL;

		[Token(Token = "0x40003D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		internal _ReleaseSharedGLTexture ReleaseSharedGLTexture;

		[Token(Token = "0x40003D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		internal _LockGLSharedTextureForAccess LockGLSharedTextureForAccess;

		[Token(Token = "0x40003D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		internal _UnlockGLSharedTextureForAccess UnlockGLSharedTextureForAccess;

		[Token(Token = "0x40003D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		internal _GetVulkanInstanceExtensionsRequired GetVulkanInstanceExtensionsRequired;

		[Token(Token = "0x40003D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		internal _GetVulkanDeviceExtensionsRequired GetVulkanDeviceExtensionsRequired;

		[Token(Token = "0x40003D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		internal _SetExplicitTimingMode SetExplicitTimingMode;

		[Token(Token = "0x40003DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		internal _SubmitExplicitTimingData SubmitExplicitTimingData;
	}
	[Token(Token = "0x200009B")]
	public struct IVROverlay
	{
		[Token(Token = "0x2000369")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAFE88", Offset = "0xCAFE88")]
		internal delegate EVROverlayError _FindOverlay(string pchOverlayKey, ref ulong pOverlayHandle);

		[Token(Token = "0x200036A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAFE9C", Offset = "0xCAFE9C")]
		internal delegate EVROverlayError _CreateOverlay(string pchOverlayKey, string pchOverlayName, ref ulong pOverlayHandle);

		[Token(Token = "0x200036B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAFEB0", Offset = "0xCAFEB0")]
		internal delegate EVROverlayError _DestroyOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x200036C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAFEC4", Offset = "0xCAFEC4")]
		internal delegate EVROverlayError _SetHighQualityOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x200036D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAFED8", Offset = "0xCAFED8")]
		internal delegate ulong _GetHighQualityOverlay();

		[Token(Token = "0x200036E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAFEEC", Offset = "0xCAFEEC")]
		internal delegate uint _GetOverlayKey(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref EVROverlayError pError);

		[Token(Token = "0x200036F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAFF00", Offset = "0xCAFF00")]
		internal delegate uint _GetOverlayName(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref EVROverlayError pError);

		[Token(Token = "0x2000370")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAFF14", Offset = "0xCAFF14")]
		internal delegate EVROverlayError _SetOverlayName(ulong ulOverlayHandle, string pchName);

		[Token(Token = "0x2000371")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAFF28", Offset = "0xCAFF28")]
		internal delegate EVROverlayError _GetOverlayImageData(ulong ulOverlayHandle, IntPtr pvBuffer, uint unBufferSize, ref uint punWidth, ref uint punHeight);

		[Token(Token = "0x2000372")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAFF3C", Offset = "0xCAFF3C")]
		internal delegate IntPtr _GetOverlayErrorNameFromEnum(EVROverlayError error);

		[Token(Token = "0x2000373")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAFF50", Offset = "0xCAFF50")]
		internal delegate EVROverlayError _SetOverlayRenderingPid(ulong ulOverlayHandle, uint unPID);

		[Token(Token = "0x2000374")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAFF64", Offset = "0xCAFF64")]
		internal delegate uint _GetOverlayRenderingPid(ulong ulOverlayHandle);

		[Token(Token = "0x2000375")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAFF78", Offset = "0xCAFF78")]
		internal delegate EVROverlayError _SetOverlayFlag(ulong ulOverlayHandle, VROverlayFlags eOverlayFlag, bool bEnabled);

		[Token(Token = "0x2000376")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAFF8C", Offset = "0xCAFF8C")]
		internal delegate EVROverlayError _GetOverlayFlag(ulong ulOverlayHandle, VROverlayFlags eOverlayFlag, ref bool pbEnabled);

		[Token(Token = "0x2000377")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAFFA0", Offset = "0xCAFFA0")]
		internal delegate EVROverlayError _SetOverlayColor(ulong ulOverlayHandle, float fRed, float fGreen, float fBlue);

		[Token(Token = "0x2000378")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAFFB4", Offset = "0xCAFFB4")]
		internal delegate EVROverlayError _GetOverlayColor(ulong ulOverlayHandle, ref float pfRed, ref float pfGreen, ref float pfBlue);

		[Token(Token = "0x2000379")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAFFC8", Offset = "0xCAFFC8")]
		internal delegate EVROverlayError _SetOverlayAlpha(ulong ulOverlayHandle, float fAlpha);

		[Token(Token = "0x200037A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAFFDC", Offset = "0xCAFFDC")]
		internal delegate EVROverlayError _GetOverlayAlpha(ulong ulOverlayHandle, ref float pfAlpha);

		[Token(Token = "0x200037B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCAFFF0", Offset = "0xCAFFF0")]
		internal delegate EVROverlayError _SetOverlayTexelAspect(ulong ulOverlayHandle, float fTexelAspect);

		[Token(Token = "0x200037C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB0004", Offset = "0xCB0004")]
		internal delegate EVROverlayError _GetOverlayTexelAspect(ulong ulOverlayHandle, ref float pfTexelAspect);

		[Token(Token = "0x200037D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB0018", Offset = "0xCB0018")]
		internal delegate EVROverlayError _SetOverlaySortOrder(ulong ulOverlayHandle, uint unSortOrder);

		[Token(Token = "0x200037E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB002C", Offset = "0xCB002C")]
		internal delegate EVROverlayError _GetOverlaySortOrder(ulong ulOverlayHandle, ref uint punSortOrder);

		[Token(Token = "0x200037F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB0040", Offset = "0xCB0040")]
		internal delegate EVROverlayError _SetOverlayWidthInMeters(ulong ulOverlayHandle, float fWidthInMeters);

		[Token(Token = "0x2000380")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB0054", Offset = "0xCB0054")]
		internal delegate EVROverlayError _GetOverlayWidthInMeters(ulong ulOverlayHandle, ref float pfWidthInMeters);

		[Token(Token = "0x2000381")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB0068", Offset = "0xCB0068")]
		internal delegate EVROverlayError _SetOverlayAutoCurveDistanceRangeInMeters(ulong ulOverlayHandle, float fMinDistanceInMeters, float fMaxDistanceInMeters);

		[Token(Token = "0x2000382")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB007C", Offset = "0xCB007C")]
		internal delegate EVROverlayError _GetOverlayAutoCurveDistanceRangeInMeters(ulong ulOverlayHandle, ref float pfMinDistanceInMeters, ref float pfMaxDistanceInMeters);

		[Token(Token = "0x2000383")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB0090", Offset = "0xCB0090")]
		internal delegate EVROverlayError _SetOverlayTextureColorSpace(ulong ulOverlayHandle, EColorSpace eTextureColorSpace);

		[Token(Token = "0x2000384")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB00A4", Offset = "0xCB00A4")]
		internal delegate EVROverlayError _GetOverlayTextureColorSpace(ulong ulOverlayHandle, ref EColorSpace peTextureColorSpace);

		[Token(Token = "0x2000385")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB00B8", Offset = "0xCB00B8")]
		internal delegate EVROverlayError _SetOverlayTextureBounds(ulong ulOverlayHandle, ref VRTextureBounds_t pOverlayTextureBounds);

		[Token(Token = "0x2000386")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB00CC", Offset = "0xCB00CC")]
		internal delegate EVROverlayError _GetOverlayTextureBounds(ulong ulOverlayHandle, ref VRTextureBounds_t pOverlayTextureBounds);

		[Token(Token = "0x2000387")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB00E0", Offset = "0xCB00E0")]
		internal delegate uint _GetOverlayRenderModel(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref HmdColor_t pColor, ref EVROverlayError pError);

		[Token(Token = "0x2000388")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB00F4", Offset = "0xCB00F4")]
		internal delegate EVROverlayError _SetOverlayRenderModel(ulong ulOverlayHandle, string pchRenderModel, ref HmdColor_t pColor);

		[Token(Token = "0x2000389")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB0108", Offset = "0xCB0108")]
		internal delegate EVROverlayError _GetOverlayTransformType(ulong ulOverlayHandle, ref VROverlayTransformType peTransformType);

		[Token(Token = "0x200038A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB011C", Offset = "0xCB011C")]
		internal delegate EVROverlayError _SetOverlayTransformAbsolute(ulong ulOverlayHandle, ETrackingUniverseOrigin eTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToOverlayTransform);

		[Token(Token = "0x200038B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB0130", Offset = "0xCB0130")]
		internal delegate EVROverlayError _GetOverlayTransformAbsolute(ulong ulOverlayHandle, ref ETrackingUniverseOrigin peTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToOverlayTransform);

		[Token(Token = "0x200038C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB0144", Offset = "0xCB0144")]
		internal delegate EVROverlayError _SetOverlayTransformTrackedDeviceRelative(ulong ulOverlayHandle, uint unTrackedDevice, ref HmdMatrix34_t pmatTrackedDeviceToOverlayTransform);

		[Token(Token = "0x200038D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB0158", Offset = "0xCB0158")]
		internal delegate EVROverlayError _GetOverlayTransformTrackedDeviceRelative(ulong ulOverlayHandle, ref uint punTrackedDevice, ref HmdMatrix34_t pmatTrackedDeviceToOverlayTransform);

		[Token(Token = "0x200038E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB016C", Offset = "0xCB016C")]
		internal delegate EVROverlayError _SetOverlayTransformTrackedDeviceComponent(ulong ulOverlayHandle, uint unDeviceIndex, string pchComponentName);

		[Token(Token = "0x200038F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB0180", Offset = "0xCB0180")]
		internal delegate EVROverlayError _GetOverlayTransformTrackedDeviceComponent(ulong ulOverlayHandle, ref uint punDeviceIndex, StringBuilder pchComponentName, uint unComponentNameSize);

		[Token(Token = "0x2000390")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB0194", Offset = "0xCB0194")]
		internal delegate EVROverlayError _GetOverlayTransformOverlayRelative(ulong ulOverlayHandle, ref ulong ulOverlayHandleParent, ref HmdMatrix34_t pmatParentOverlayToOverlayTransform);

		[Token(Token = "0x2000391")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB01A8", Offset = "0xCB01A8")]
		internal delegate EVROverlayError _SetOverlayTransformOverlayRelative(ulong ulOverlayHandle, ulong ulOverlayHandleParent, ref HmdMatrix34_t pmatParentOverlayToOverlayTransform);

		[Token(Token = "0x2000392")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB01BC", Offset = "0xCB01BC")]
		internal delegate EVROverlayError _ShowOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x2000393")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB01D0", Offset = "0xCB01D0")]
		internal delegate EVROverlayError _HideOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x2000394")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB01E4", Offset = "0xCB01E4")]
		internal delegate bool _IsOverlayVisible(ulong ulOverlayHandle);

		[Token(Token = "0x2000395")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB01F8", Offset = "0xCB01F8")]
		internal delegate EVROverlayError _GetTransformForOverlayCoordinates(ulong ulOverlayHandle, ETrackingUniverseOrigin eTrackingOrigin, HmdVector2_t coordinatesInOverlay, ref HmdMatrix34_t pmatTransform);

		[Token(Token = "0x2000396")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB020C", Offset = "0xCB020C")]
		internal delegate bool _PollNextOverlayEvent(ulong ulOverlayHandle, ref VREvent_t pEvent, uint uncbVREvent);

		[Token(Token = "0x2000397")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB0220", Offset = "0xCB0220")]
		internal delegate EVROverlayError _GetOverlayInputMethod(ulong ulOverlayHandle, ref VROverlayInputMethod peInputMethod);

		[Token(Token = "0x2000398")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB0234", Offset = "0xCB0234")]
		internal delegate EVROverlayError _SetOverlayInputMethod(ulong ulOverlayHandle, VROverlayInputMethod eInputMethod);

		[Token(Token = "0x2000399")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB0248", Offset = "0xCB0248")]
		internal delegate EVROverlayError _GetOverlayMouseScale(ulong ulOverlayHandle, ref HmdVector2_t pvecMouseScale);

		[Token(Token = "0x200039A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB025C", Offset = "0xCB025C")]
		internal delegate EVROverlayError _SetOverlayMouseScale(ulong ulOverlayHandle, ref HmdVector2_t pvecMouseScale);

		[Token(Token = "0x200039B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB0270", Offset = "0xCB0270")]
		internal delegate bool _ComputeOverlayIntersection(ulong ulOverlayHandle, ref VROverlayIntersectionParams_t pParams, ref VROverlayIntersectionResults_t pResults);

		[Token(Token = "0x200039C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB0284", Offset = "0xCB0284")]
		internal delegate bool _IsHoverTargetOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x200039D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB0298", Offset = "0xCB0298")]
		internal delegate ulong _GetGamepadFocusOverlay();

		[Token(Token = "0x200039E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB02AC", Offset = "0xCB02AC")]
		internal delegate EVROverlayError _SetGamepadFocusOverlay(ulong ulNewFocusOverlay);

		[Token(Token = "0x200039F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB02C0", Offset = "0xCB02C0")]
		internal delegate EVROverlayError _SetOverlayNeighbor(EOverlayDirection eDirection, ulong ulFrom, ulong ulTo);

		[Token(Token = "0x20003A0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB02D4", Offset = "0xCB02D4")]
		internal delegate EVROverlayError _MoveGamepadFocusToNeighbor(EOverlayDirection eDirection, ulong ulFrom);

		[Token(Token = "0x20003A1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB02E8", Offset = "0xCB02E8")]
		internal delegate EVROverlayError _SetOverlayDualAnalogTransform(ulong ulOverlay, EDualAnalogWhich eWhich, IntPtr vCenter, float fRadius);

		[Token(Token = "0x20003A2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB02FC", Offset = "0xCB02FC")]
		internal delegate EVROverlayError _GetOverlayDualAnalogTransform(ulong ulOverlay, EDualAnalogWhich eWhich, ref HmdVector2_t pvCenter, ref float pfRadius);

		[Token(Token = "0x20003A3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB0310", Offset = "0xCB0310")]
		internal delegate EVROverlayError _SetOverlayTexture(ulong ulOverlayHandle, ref Texture_t pTexture);

		[Token(Token = "0x20003A4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB0324", Offset = "0xCB0324")]
		internal delegate EVROverlayError _ClearOverlayTexture(ulong ulOverlayHandle);

		[Token(Token = "0x20003A5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB0338", Offset = "0xCB0338")]
		internal delegate EVROverlayError _SetOverlayRaw(ulong ulOverlayHandle, IntPtr pvBuffer, uint unWidth, uint unHeight, uint unDepth);

		[Token(Token = "0x20003A6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB034C", Offset = "0xCB034C")]
		internal delegate EVROverlayError _SetOverlayFromFile(ulong ulOverlayHandle, string pchFilePath);

		[Token(Token = "0x20003A7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB0360", Offset = "0xCB0360")]
		internal delegate EVROverlayError _GetOverlayTexture(ulong ulOverlayHandle, ref IntPtr pNativeTextureHandle, IntPtr pNativeTextureRef, ref uint pWidth, ref uint pHeight, ref uint pNativeFormat, ref ETextureType pAPIType, ref EColorSpace pColorSpace, ref VRTextureBounds_t pTextureBounds);

		[Token(Token = "0x20003A8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB0374", Offset = "0xCB0374")]
		internal delegate EVROverlayError _ReleaseNativeOverlayHandle(ulong ulOverlayHandle, IntPtr pNativeTextureHandle);

		[Token(Token = "0x20003A9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB0388", Offset = "0xCB0388")]
		internal delegate EVROverlayError _GetOverlayTextureSize(ulong ulOverlayHandle, ref uint pWidth, ref uint pHeight);

		[Token(Token = "0x20003AA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB039C", Offset = "0xCB039C")]
		internal delegate EVROverlayError _CreateDashboardOverlay(string pchOverlayKey, string pchOverlayFriendlyName, ref ulong pMainHandle, ref ulong pThumbnailHandle);

		[Token(Token = "0x20003AB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB03B0", Offset = "0xCB03B0")]
		internal delegate bool _IsDashboardVisible();

		[Token(Token = "0x20003AC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB03C4", Offset = "0xCB03C4")]
		internal delegate bool _IsActiveDashboardOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x20003AD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB03D8", Offset = "0xCB03D8")]
		internal delegate EVROverlayError _SetDashboardOverlaySceneProcess(ulong ulOverlayHandle, uint unProcessId);

		[Token(Token = "0x20003AE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB03EC", Offset = "0xCB03EC")]
		internal delegate EVROverlayError _GetDashboardOverlaySceneProcess(ulong ulOverlayHandle, ref uint punProcessId);

		[Token(Token = "0x20003AF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB0400", Offset = "0xCB0400")]
		internal delegate void _ShowDashboard(string pchOverlayToShow);

		[Token(Token = "0x20003B0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB0414", Offset = "0xCB0414")]
		internal delegate uint _GetPrimaryDashboardDevice();

		[Token(Token = "0x20003B1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB0428", Offset = "0xCB0428")]
		internal delegate EVROverlayError _ShowKeyboard(int eInputMode, int eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText, bool bUseMinimalMode, ulong uUserValue);

		[Token(Token = "0x20003B2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB043C", Offset = "0xCB043C")]
		internal delegate EVROverlayError _ShowKeyboardForOverlay(ulong ulOverlayHandle, int eInputMode, int eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText, bool bUseMinimalMode, ulong uUserValue);

		[Token(Token = "0x20003B3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB0450", Offset = "0xCB0450")]
		internal delegate uint _GetKeyboardText(StringBuilder pchText, uint cchText);

		[Token(Token = "0x20003B4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB0464", Offset = "0xCB0464")]
		internal delegate void _HideKeyboard();

		[Token(Token = "0x20003B5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB0478", Offset = "0xCB0478")]
		internal delegate void _SetKeyboardTransformAbsolute(ETrackingUniverseOrigin eTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToKeyboardTransform);

		[Token(Token = "0x20003B6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB048C", Offset = "0xCB048C")]
		internal delegate void _SetKeyboardPositionForOverlay(ulong ulOverlayHandle, HmdRect2_t avoidRect);

		[Token(Token = "0x20003B7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB04A0", Offset = "0xCB04A0")]
		internal delegate EVROverlayError _SetOverlayIntersectionMask(ulong ulOverlayHandle, ref VROverlayIntersectionMaskPrimitive_t pMaskPrimitives, uint unNumMaskPrimitives, uint unPrimitiveSize);

		[Token(Token = "0x20003B8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB04B4", Offset = "0xCB04B4")]
		internal delegate EVROverlayError _GetOverlayFlags(ulong ulOverlayHandle, ref uint pFlags);

		[Token(Token = "0x20003B9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB04C8", Offset = "0xCB04C8")]
		internal delegate VRMessageOverlayResponse _ShowMessageOverlay(string pchText, string pchCaption, string pchButton0Text, string pchButton1Text, string pchButton2Text, string pchButton3Text);

		[Token(Token = "0x20003BA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB04DC", Offset = "0xCB04DC")]
		internal delegate void _CloseMessageOverlay();

		[Token(Token = "0x40003DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _FindOverlay FindOverlay;

		[Token(Token = "0x40003DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _CreateOverlay CreateOverlay;

		[Token(Token = "0x40003DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _DestroyOverlay DestroyOverlay;

		[Token(Token = "0x40003DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _SetHighQualityOverlay SetHighQualityOverlay;

		[Token(Token = "0x40003DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetHighQualityOverlay GetHighQualityOverlay;

		[Token(Token = "0x40003E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetOverlayKey GetOverlayKey;

		[Token(Token = "0x40003E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _GetOverlayName GetOverlayName;

		[Token(Token = "0x40003E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _SetOverlayName SetOverlayName;

		[Token(Token = "0x40003E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetOverlayImageData GetOverlayImageData;

		[Token(Token = "0x40003E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetOverlayErrorNameFromEnum GetOverlayErrorNameFromEnum;

		[Token(Token = "0x40003E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _SetOverlayRenderingPid SetOverlayRenderingPid;

		[Token(Token = "0x40003E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _GetOverlayRenderingPid GetOverlayRenderingPid;

		[Token(Token = "0x40003E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _SetOverlayFlag SetOverlayFlag;

		[Token(Token = "0x40003E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetOverlayFlag GetOverlayFlag;

		[Token(Token = "0x40003E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _SetOverlayColor SetOverlayColor;

		[Token(Token = "0x40003EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetOverlayColor GetOverlayColor;

		[Token(Token = "0x40003EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _SetOverlayAlpha SetOverlayAlpha;

		[Token(Token = "0x40003EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _GetOverlayAlpha GetOverlayAlpha;

		[Token(Token = "0x40003ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _SetOverlayTexelAspect SetOverlayTexelAspect;

		[Token(Token = "0x40003EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _GetOverlayTexelAspect GetOverlayTexelAspect;

		[Token(Token = "0x40003EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal _SetOverlaySortOrder SetOverlaySortOrder;

		[Token(Token = "0x40003F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal _GetOverlaySortOrder GetOverlaySortOrder;

		[Token(Token = "0x40003F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		internal _SetOverlayWidthInMeters SetOverlayWidthInMeters;

		[Token(Token = "0x40003F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal _GetOverlayWidthInMeters GetOverlayWidthInMeters;

		[Token(Token = "0x40003F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		internal _SetOverlayAutoCurveDistanceRangeInMeters SetOverlayAutoCurveDistanceRangeInMeters;

		[Token(Token = "0x40003F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		internal _GetOverlayAutoCurveDistanceRangeInMeters GetOverlayAutoCurveDistanceRangeInMeters;

		[Token(Token = "0x40003F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		internal _SetOverlayTextureColorSpace SetOverlayTextureColorSpace;

		[Token(Token = "0x40003F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		internal _GetOverlayTextureColorSpace GetOverlayTextureColorSpace;

		[Token(Token = "0x40003F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		internal _SetOverlayTextureBounds SetOverlayTextureBounds;

		[Token(Token = "0x40003F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		internal _GetOverlayTextureBounds GetOverlayTextureBounds;

		[Token(Token = "0x40003F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		internal _GetOverlayRenderModel GetOverlayRenderModel;

		[Token(Token = "0x40003FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		internal _SetOverlayRenderModel SetOverlayRenderModel;

		[Token(Token = "0x40003FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		internal _GetOverlayTransformType GetOverlayTransformType;

		[Token(Token = "0x40003FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		internal _SetOverlayTransformAbsolute SetOverlayTransformAbsolute;

		[Token(Token = "0x40003FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		internal _GetOverlayTransformAbsolute GetOverlayTransformAbsolute;

		[Token(Token = "0x40003FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		internal _SetOverlayTransformTrackedDeviceRelative SetOverlayTransformTrackedDeviceRelative;

		[Token(Token = "0x40003FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		internal _GetOverlayTransformTrackedDeviceRelative GetOverlayTransformTrackedDeviceRelative;

		[Token(Token = "0x4000400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		internal _SetOverlayTransformTrackedDeviceComponent SetOverlayTransformTrackedDeviceComponent;

		[Token(Token = "0x4000401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		internal _GetOverlayTransformTrackedDeviceComponent GetOverlayTransformTrackedDeviceComponent;

		[Token(Token = "0x4000402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		internal _GetOverlayTransformOverlayRelative GetOverlayTransformOverlayRelative;

		[Token(Token = "0x4000403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		internal _SetOverlayTransformOverlayRelative SetOverlayTransformOverlayRelative;

		[Token(Token = "0x4000404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		internal _ShowOverlay ShowOverlay;

		[Token(Token = "0x4000405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		internal _HideOverlay HideOverlay;

		[Token(Token = "0x4000406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		internal _IsOverlayVisible IsOverlayVisible;

		[Token(Token = "0x4000407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		internal _GetTransformForOverlayCoordinates GetTransformForOverlayCoordinates;

		[Token(Token = "0x4000408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		internal _PollNextOverlayEvent PollNextOverlayEvent;

		[Token(Token = "0x4000409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		internal _GetOverlayInputMethod GetOverlayInputMethod;

		[Token(Token = "0x400040A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		internal _SetOverlayInputMethod SetOverlayInputMethod;

		[Token(Token = "0x400040B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		internal _GetOverlayMouseScale GetOverlayMouseScale;

		[Token(Token = "0x400040C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		internal _SetOverlayMouseScale SetOverlayMouseScale;

		[Token(Token = "0x400040D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		internal _ComputeOverlayIntersection ComputeOverlayIntersection;

		[Token(Token = "0x400040E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		internal _IsHoverTargetOverlay IsHoverTargetOverlay;

		[Token(Token = "0x400040F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		internal _GetGamepadFocusOverlay GetGamepadFocusOverlay;

		[Token(Token = "0x4000410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		internal _SetGamepadFocusOverlay SetGamepadFocusOverlay;

		[Token(Token = "0x4000411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		internal _SetOverlayNeighbor SetOverlayNeighbor;

		[Token(Token = "0x4000412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		internal _MoveGamepadFocusToNeighbor MoveGamepadFocusToNeighbor;

		[Token(Token = "0x4000413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		internal _SetOverlayDualAnalogTransform SetOverlayDualAnalogTransform;

		[Token(Token = "0x4000414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		internal _GetOverlayDualAnalogTransform GetOverlayDualAnalogTransform;

		[Token(Token = "0x4000415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		internal _SetOverlayTexture SetOverlayTexture;

		[Token(Token = "0x4000416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		internal _ClearOverlayTexture ClearOverlayTexture;

		[Token(Token = "0x4000417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		internal _SetOverlayRaw SetOverlayRaw;

		[Token(Token = "0x4000418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		internal _SetOverlayFromFile SetOverlayFromFile;

		[Token(Token = "0x4000419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		internal _GetOverlayTexture GetOverlayTexture;

		[Token(Token = "0x400041A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		internal _ReleaseNativeOverlayHandle ReleaseNativeOverlayHandle;

		[Token(Token = "0x400041B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		internal _GetOverlayTextureSize GetOverlayTextureSize;

		[Token(Token = "0x400041C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		internal _CreateDashboardOverlay CreateDashboardOverlay;

		[Token(Token = "0x400041D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		internal _IsDashboardVisible IsDashboardVisible;

		[Token(Token = "0x400041E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		internal _IsActiveDashboardOverlay IsActiveDashboardOverlay;

		[Token(Token = "0x400041F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		internal _SetDashboardOverlaySceneProcess SetDashboardOverlaySceneProcess;

		[Token(Token = "0x4000420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		internal _GetDashboardOverlaySceneProcess GetDashboardOverlaySceneProcess;

		[Token(Token = "0x4000421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		internal _ShowDashboard ShowDashboard;

		[Token(Token = "0x4000422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		internal _GetPrimaryDashboardDevice GetPrimaryDashboardDevice;

		[Token(Token = "0x4000423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		internal _ShowKeyboard ShowKeyboard;

		[Token(Token = "0x4000424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		internal _ShowKeyboardForOverlay ShowKeyboardForOverlay;

		[Token(Token = "0x4000425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		internal _GetKeyboardText GetKeyboardText;

		[Token(Token = "0x4000426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		internal _HideKeyboard HideKeyboard;

		[Token(Token = "0x4000427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		internal _SetKeyboardTransformAbsolute SetKeyboardTransformAbsolute;

		[Token(Token = "0x4000428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		internal _SetKeyboardPositionForOverlay SetKeyboardPositionForOverlay;

		[Token(Token = "0x4000429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		internal _SetOverlayIntersectionMask SetOverlayIntersectionMask;

		[Token(Token = "0x400042A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		internal _GetOverlayFlags GetOverlayFlags;

		[Token(Token = "0x400042B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		internal _ShowMessageOverlay ShowMessageOverlay;

		[Token(Token = "0x400042C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		internal _CloseMessageOverlay CloseMessageOverlay;
	}
	[Token(Token = "0x200009C")]
	public struct IVRRenderModels
	{
		[Token(Token = "0x20003BB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB04F0", Offset = "0xCB04F0")]
		internal delegate EVRRenderModelError _LoadRenderModel_Async(string pchRenderModelName, ref IntPtr ppRenderModel);

		[Token(Token = "0x20003BC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB0504", Offset = "0xCB0504")]
		internal delegate void _FreeRenderModel(IntPtr pRenderModel);

		[Token(Token = "0x20003BD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB0518", Offset = "0xCB0518")]
		internal delegate EVRRenderModelError _LoadTexture_Async(int textureId, ref IntPtr ppTexture);

		[Token(Token = "0x20003BE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB052C", Offset = "0xCB052C")]
		internal delegate void _FreeTexture(IntPtr pTexture);

		[Token(Token = "0x20003BF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB0540", Offset = "0xCB0540")]
		internal delegate EVRRenderModelError _LoadTextureD3D11_Async(int textureId, IntPtr pD3D11Device, ref IntPtr ppD3D11Texture2D);

		[Token(Token = "0x20003C0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB0554", Offset = "0xCB0554")]
		internal delegate EVRRenderModelError _LoadIntoTextureD3D11_Async(int textureId, IntPtr pDstTexture);

		[Token(Token = "0x20003C1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB0568", Offset = "0xCB0568")]
		internal delegate void _FreeTextureD3D11(IntPtr pD3D11Texture2D);

		[Token(Token = "0x20003C2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB057C", Offset = "0xCB057C")]
		internal delegate uint _GetRenderModelName(uint unRenderModelIndex, StringBuilder pchRenderModelName, uint unRenderModelNameLen);

		[Token(Token = "0x20003C3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB0590", Offset = "0xCB0590")]
		internal delegate uint _GetRenderModelCount();

		[Token(Token = "0x20003C4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB05A4", Offset = "0xCB05A4")]
		internal delegate uint _GetComponentCount(string pchRenderModelName);

		[Token(Token = "0x20003C5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB05B8", Offset = "0xCB05B8")]
		internal delegate uint _GetComponentName(string pchRenderModelName, uint unComponentIndex, StringBuilder pchComponentName, uint unComponentNameLen);

		[Token(Token = "0x20003C6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB05CC", Offset = "0xCB05CC")]
		internal delegate ulong _GetComponentButtonMask(string pchRenderModelName, string pchComponentName);

		[Token(Token = "0x20003C7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB05E0", Offset = "0xCB05E0")]
		internal delegate uint _GetComponentRenderModelName(string pchRenderModelName, string pchComponentName, StringBuilder pchComponentRenderModelName, uint unComponentRenderModelNameLen);

		[Token(Token = "0x20003C8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB05F4", Offset = "0xCB05F4")]
		internal delegate bool _GetComponentState(string pchRenderModelName, string pchComponentName, ref VRControllerState_t pControllerState, ref RenderModel_ControllerMode_State_t pState, ref RenderModel_ComponentState_t pComponentState);

		[Token(Token = "0x20003C9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB0608", Offset = "0xCB0608")]
		internal delegate bool _RenderModelHasComponent(string pchRenderModelName, string pchComponentName);

		[Token(Token = "0x20003CA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB061C", Offset = "0xCB061C")]
		internal delegate uint _GetRenderModelThumbnailURL(string pchRenderModelName, StringBuilder pchThumbnailURL, uint unThumbnailURLLen, ref EVRRenderModelError peError);

		[Token(Token = "0x20003CB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB0630", Offset = "0xCB0630")]
		internal delegate uint _GetRenderModelOriginalPath(string pchRenderModelName, StringBuilder pchOriginalPath, uint unOriginalPathLen, ref EVRRenderModelError peError);

		[Token(Token = "0x20003CC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB0644", Offset = "0xCB0644")]
		internal delegate IntPtr _GetRenderModelErrorNameFromEnum(EVRRenderModelError error);

		[Token(Token = "0x400042D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _LoadRenderModel_Async LoadRenderModel_Async;

		[Token(Token = "0x400042E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _FreeRenderModel FreeRenderModel;

		[Token(Token = "0x400042F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _LoadTexture_Async LoadTexture_Async;

		[Token(Token = "0x4000430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _FreeTexture FreeTexture;

		[Token(Token = "0x4000431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _LoadTextureD3D11_Async LoadTextureD3D11_Async;

		[Token(Token = "0x4000432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _LoadIntoTextureD3D11_Async LoadIntoTextureD3D11_Async;

		[Token(Token = "0x4000433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _FreeTextureD3D11 FreeTextureD3D11;

		[Token(Token = "0x4000434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetRenderModelName GetRenderModelName;

		[Token(Token = "0x4000435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetRenderModelCount GetRenderModelCount;

		[Token(Token = "0x4000436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetComponentCount GetComponentCount;

		[Token(Token = "0x4000437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _GetComponentName GetComponentName;

		[Token(Token = "0x4000438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _GetComponentButtonMask GetComponentButtonMask;

		[Token(Token = "0x4000439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _GetComponentRenderModelName GetComponentRenderModelName;

		[Token(Token = "0x400043A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetComponentState GetComponentState;

		[Token(Token = "0x400043B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _RenderModelHasComponent RenderModelHasComponent;

		[Token(Token = "0x400043C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetRenderModelThumbnailURL GetRenderModelThumbnailURL;

		[Token(Token = "0x400043D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _GetRenderModelOriginalPath GetRenderModelOriginalPath;

		[Token(Token = "0x400043E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _GetRenderModelErrorNameFromEnum GetRenderModelErrorNameFromEnum;
	}
	[Token(Token = "0x200009D")]
	public struct IVRNotifications
	{
		[Token(Token = "0x20003CD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB0658", Offset = "0xCB0658")]
		internal delegate EVRNotificationError _CreateNotification(ulong ulOverlayHandle, ulong ulUserValue, EVRNotificationType type, string pchText, EVRNotificationStyle style, ref NotificationBitmap_t pImage, ref uint pNotificationId);

		[Token(Token = "0x20003CE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB066C", Offset = "0xCB066C")]
		internal delegate EVRNotificationError _RemoveNotification(uint notificationId);

		[Token(Token = "0x400043F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _CreateNotification CreateNotification;

		[Token(Token = "0x4000440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _RemoveNotification RemoveNotification;
	}
	[Token(Token = "0x200009E")]
	public struct IVRSettings
	{
		[Token(Token = "0x20003CF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB0680", Offset = "0xCB0680")]
		internal delegate IntPtr _GetSettingsErrorNameFromEnum(EVRSettingsError eError);

		[Token(Token = "0x20003D0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB0694", Offset = "0xCB0694")]
		internal delegate bool _Sync(bool bForce, ref EVRSettingsError peError);

		[Token(Token = "0x20003D1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB06A8", Offset = "0xCB06A8")]
		internal delegate void _SetBool(string pchSection, string pchSettingsKey, bool bValue, ref EVRSettingsError peError);

		[Token(Token = "0x20003D2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB06BC", Offset = "0xCB06BC")]
		internal delegate void _SetInt32(string pchSection, string pchSettingsKey, int nValue, ref EVRSettingsError peError);

		[Token(Token = "0x20003D3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB06D0", Offset = "0xCB06D0")]
		internal delegate void _SetFloat(string pchSection, string pchSettingsKey, float flValue, ref EVRSettingsError peError);

		[Token(Token = "0x20003D4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB06E4", Offset = "0xCB06E4")]
		internal delegate void _SetString(string pchSection, string pchSettingsKey, string pchValue, ref EVRSettingsError peError);

		[Token(Token = "0x20003D5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB06F8", Offset = "0xCB06F8")]
		internal delegate bool _GetBool(string pchSection, string pchSettingsKey, ref EVRSettingsError peError);

		[Token(Token = "0x20003D6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB070C", Offset = "0xCB070C")]
		internal delegate int _GetInt32(string pchSection, string pchSettingsKey, ref EVRSettingsError peError);

		[Token(Token = "0x20003D7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB0720", Offset = "0xCB0720")]
		internal delegate float _GetFloat(string pchSection, string pchSettingsKey, ref EVRSettingsError peError);

		[Token(Token = "0x20003D8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB0734", Offset = "0xCB0734")]
		internal delegate void _GetString(string pchSection, string pchSettingsKey, StringBuilder pchValue, uint unValueLen, ref EVRSettingsError peError);

		[Token(Token = "0x20003D9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB0748", Offset = "0xCB0748")]
		internal delegate void _RemoveSection(string pchSection, ref EVRSettingsError peError);

		[Token(Token = "0x20003DA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB075C", Offset = "0xCB075C")]
		internal delegate void _RemoveKeyInSection(string pchSection, string pchSettingsKey, ref EVRSettingsError peError);

		[Token(Token = "0x4000441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetSettingsErrorNameFromEnum GetSettingsErrorNameFromEnum;

		[Token(Token = "0x4000442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _Sync Sync;

		[Token(Token = "0x4000443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _SetBool SetBool;

		[Token(Token = "0x4000444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _SetInt32 SetInt32;

		[Token(Token = "0x4000445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _SetFloat SetFloat;

		[Token(Token = "0x4000446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _SetString SetString;

		[Token(Token = "0x4000447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _GetBool GetBool;

		[Token(Token = "0x4000448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetInt32 GetInt32;

		[Token(Token = "0x4000449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetFloat GetFloat;

		[Token(Token = "0x400044A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetString GetString;

		[Token(Token = "0x400044B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _RemoveSection RemoveSection;

		[Token(Token = "0x400044C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _RemoveKeyInSection RemoveKeyInSection;
	}
	[Token(Token = "0x200009F")]
	public struct IVRScreenshots
	{
		[Token(Token = "0x20003DB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB0770", Offset = "0xCB0770")]
		internal delegate EVRScreenshotError _RequestScreenshot(ref uint pOutScreenshotHandle, EVRScreenshotType type, string pchPreviewFilename, string pchVRFilename);

		[Token(Token = "0x20003DC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB0784", Offset = "0xCB0784")]
		internal delegate EVRScreenshotError _HookScreenshot([In][Out] EVRScreenshotType[] pSupportedTypes, int numTypes);

		[Token(Token = "0x20003DD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB0798", Offset = "0xCB0798")]
		internal delegate EVRScreenshotType _GetScreenshotPropertyType(uint screenshotHandle, ref EVRScreenshotError pError);

		[Token(Token = "0x20003DE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB07AC", Offset = "0xCB07AC")]
		internal delegate uint _GetScreenshotPropertyFilename(uint screenshotHandle, EVRScreenshotPropertyFilenames filenameType, StringBuilder pchFilename, uint cchFilename, ref EVRScreenshotError pError);

		[Token(Token = "0x20003DF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB07C0", Offset = "0xCB07C0")]
		internal delegate EVRScreenshotError _UpdateScreenshotProgress(uint screenshotHandle, float flProgress);

		[Token(Token = "0x20003E0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB07D4", Offset = "0xCB07D4")]
		internal delegate EVRScreenshotError _TakeStereoScreenshot(ref uint pOutScreenshotHandle, string pchPreviewFilename, string pchVRFilename);

		[Token(Token = "0x20003E1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB07E8", Offset = "0xCB07E8")]
		internal delegate EVRScreenshotError _SubmitScreenshot(uint screenshotHandle, EVRScreenshotType type, string pchSourcePreviewFilename, string pchSourceVRFilename);

		[Token(Token = "0x400044D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _RequestScreenshot RequestScreenshot;

		[Token(Token = "0x400044E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _HookScreenshot HookScreenshot;

		[Token(Token = "0x400044F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetScreenshotPropertyType GetScreenshotPropertyType;

		[Token(Token = "0x4000450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetScreenshotPropertyFilename GetScreenshotPropertyFilename;

		[Token(Token = "0x4000451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _UpdateScreenshotProgress UpdateScreenshotProgress;

		[Token(Token = "0x4000452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _TakeStereoScreenshot TakeStereoScreenshot;

		[Token(Token = "0x4000453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _SubmitScreenshot SubmitScreenshot;
	}
	[Token(Token = "0x20000A0")]
	public struct IVRResources
	{
		[Token(Token = "0x20003E2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB07FC", Offset = "0xCB07FC")]
		internal delegate uint _LoadSharedResource(string pchResourceName, string pchBuffer, uint unBufferLen);

		[Token(Token = "0x20003E3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB0810", Offset = "0xCB0810")]
		internal delegate uint _GetResourceFullPath(string pchResourceName, string pchResourceTypeDirectory, StringBuilder pchPathBuffer, uint unBufferLen);

		[Token(Token = "0x4000454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _LoadSharedResource LoadSharedResource;

		[Token(Token = "0x4000455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetResourceFullPath GetResourceFullPath;
	}
	[Token(Token = "0x20000A1")]
	public struct IVRDriverManager
	{
		[Token(Token = "0x20003E4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB0824", Offset = "0xCB0824")]
		internal delegate uint _GetDriverCount();

		[Token(Token = "0x20003E5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB0838", Offset = "0xCB0838")]
		internal delegate uint _GetDriverName(uint nDriver, StringBuilder pchValue, uint unBufferSize);

		[Token(Token = "0x20003E6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB084C", Offset = "0xCB084C")]
		internal delegate ulong _GetDriverHandle(string pchDriverName);

		[Token(Token = "0x4000456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetDriverCount GetDriverCount;

		[Token(Token = "0x4000457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetDriverName GetDriverName;

		[Token(Token = "0x4000458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetDriverHandle GetDriverHandle;
	}
	[Token(Token = "0x20000A2")]
	public class CVRSystem
	{
		[Token(Token = "0x20003E7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB0860", Offset = "0xCB0860")]
		internal delegate bool _PollNextEventPacked(ref VREvent_t_Packed pEvent, uint uncbVREvent);

		[StructLayout(2)]
		[Token(Token = "0x20003E8")]
		private struct PollNextEventUnion
		{
			[Token(Token = "0x4000E17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVRSystem._PollNextEvent pPollNextEvent;

			[Token(Token = "0x4000E18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _PollNextEventPacked pPollNextEventPacked;
		}

		[Token(Token = "0x20003E9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB0874", Offset = "0xCB0874")]
		internal delegate bool _GetControllerStatePacked(uint unControllerDeviceIndex, ref VRControllerState_t_Packed pControllerState, uint unControllerStateSize);

		[StructLayout(2)]
		[Token(Token = "0x20003EA")]
		private struct GetControllerStateUnion
		{
			[Token(Token = "0x4000E19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVRSystem._GetControllerState pGetControllerState;

			[Token(Token = "0x4000E1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _GetControllerStatePacked pGetControllerStatePacked;
		}

		[Token(Token = "0x20003EB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB0888", Offset = "0xCB0888")]
		internal delegate bool _GetControllerStateWithPosePacked(ETrackingUniverseOrigin eOrigin, uint unControllerDeviceIndex, ref VRControllerState_t_Packed pControllerState, uint unControllerStateSize, ref TrackedDevicePose_t pTrackedDevicePose);

		[StructLayout(2)]
		[Token(Token = "0x20003EC")]
		private struct GetControllerStateWithPoseUnion
		{
			[Token(Token = "0x4000E1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVRSystem._GetControllerStateWithPose pGetControllerStateWithPose;

			[Token(Token = "0x4000E1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _GetControllerStateWithPosePacked pGetControllerStateWithPosePacked;
		}

		[Token(Token = "0x4000459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRSystem FnTable;

		[Token(Token = "0x6000791")]
		[Address(RVA = "0x125F87C", Offset = "0x125F87C", VA = "0x125F87C")]
		internal CVRSystem(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6000792")]
		[Address(RVA = "0x125F990", Offset = "0x125F990", VA = "0x125F990")]
		public void GetRecommendedRenderTargetSize(ref uint pnWidth, ref uint pnHeight)
		{
		}

		[Token(Token = "0x6000793")]
		[Address(RVA = "0x125F9B4", Offset = "0x125F9B4", VA = "0x125F9B4")]
		public HmdMatrix44_t GetProjectionMatrix(EVREye eEye, float fNearZ, float fFarZ)
		{
			return default(HmdMatrix44_t);
		}

		[Token(Token = "0x6000794")]
		[Address(RVA = "0x125F9D0", Offset = "0x125F9D0", VA = "0x125F9D0")]
		public void GetProjectionRaw(EVREye eEye, ref float pfLeft, ref float pfRight, ref float pfTop, ref float pfBottom)
		{
		}

		[Token(Token = "0x6000795")]
		[Address(RVA = "0x125F9FC", Offset = "0x125F9FC", VA = "0x125F9FC")]
		public bool ComputeDistortion(EVREye eEye, float fU, float fV, ref DistortionCoordinates_t pDistortionCoordinates)
		{
			return default(bool);
		}

		[Token(Token = "0x6000796")]
		[Address(RVA = "0x125FA18", Offset = "0x125FA18", VA = "0x125FA18")]
		public HmdMatrix34_t GetEyeToHeadTransform(EVREye eEye)
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x6000797")]
		[Address(RVA = "0x125FA34", Offset = "0x125FA34", VA = "0x125FA34")]
		public bool GetTimeSinceLastVsync(ref float pfSecondsSinceLastVsync, ref ulong pulFrameCounter)
		{
			return default(bool);
		}

		[Token(Token = "0x6000798")]
		[Address(RVA = "0x125FA58", Offset = "0x125FA58", VA = "0x125FA58")]
		public int GetD3D9AdapterIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6000799")]
		[Address(RVA = "0x125FA74", Offset = "0x125FA74", VA = "0x125FA74")]
		public void GetDXGIOutputInfo(ref int pnAdapterIndex)
		{
		}

		[Token(Token = "0x600079A")]
		[Address(RVA = "0x125FA94", Offset = "0x125FA94", VA = "0x125FA94")]
		public void GetOutputDevice(ref ulong pnDevice, ETextureType textureType, IntPtr pInstance)
		{
		}

		[Token(Token = "0x600079B")]
		[Address(RVA = "0x125FAB4", Offset = "0x125FAB4", VA = "0x125FAB4")]
		public bool IsDisplayOnDesktop()
		{
			return default(bool);
		}

		[Token(Token = "0x600079C")]
		[Address(RVA = "0x125FAD0", Offset = "0x125FAD0", VA = "0x125FAD0")]
		public bool SetDisplayVisibility(bool bIsVisibleOnDesktop)
		{
			return default(bool);
		}

		[Token(Token = "0x600079D")]
		[Address(RVA = "0x125FAF0", Offset = "0x125FAF0", VA = "0x125FAF0")]
		public void GetDeviceToAbsoluteTrackingPose(ETrackingUniverseOrigin eOrigin, float fPredictedSecondsToPhotonsFromNow, TrackedDevicePose_t[] pTrackedDevicePoseArray)
		{
		}

		[Token(Token = "0x600079E")]
		[Address(RVA = "0x125FB18", Offset = "0x125FB18", VA = "0x125FB18")]
		public void ResetSeatedZeroPose()
		{
		}

		[Token(Token = "0x600079F")]
		[Address(RVA = "0x125FB34", Offset = "0x125FB34", VA = "0x125FB34")]
		public HmdMatrix34_t GetSeatedZeroPoseToStandingAbsoluteTrackingPose()
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x60007A0")]
		[Address(RVA = "0x125FB50", Offset = "0x125FB50", VA = "0x125FB50")]
		public HmdMatrix34_t GetRawZeroPoseToStandingAbsoluteTrackingPose()
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x60007A1")]
		[Address(RVA = "0x125FB6C", Offset = "0x125FB6C", VA = "0x125FB6C")]
		public uint GetSortedTrackedDeviceIndicesOfClass(ETrackedDeviceClass eTrackedDeviceClass, uint[] punTrackedDeviceIndexArray, uint unRelativeToTrackedDeviceIndex)
		{
			return default(uint);
		}

		[Token(Token = "0x60007A2")]
		[Address(RVA = "0x125FB98", Offset = "0x125FB98", VA = "0x125FB98")]
		public EDeviceActivityLevel GetTrackedDeviceActivityLevel(uint unDeviceId)
		{
			return default(EDeviceActivityLevel);
		}

		[Token(Token = "0x60007A3")]
		[Address(RVA = "0x125FBB4", Offset = "0x125FBB4", VA = "0x125FBB4")]
		public void ApplyTransform(ref TrackedDevicePose_t pOutputPose, ref TrackedDevicePose_t pTrackedDevicePose, ref HmdMatrix34_t pTransform)
		{
		}

		[Token(Token = "0x60007A4")]
		[Address(RVA = "0x125FBD0", Offset = "0x125FBD0", VA = "0x125FBD0")]
		public uint GetTrackedDeviceIndexForControllerRole(ETrackedControllerRole unDeviceType)
		{
			return default(uint);
		}

		[Token(Token = "0x60007A5")]
		[Address(RVA = "0x125FBEC", Offset = "0x125FBEC", VA = "0x125FBEC")]
		public ETrackedControllerRole GetControllerRoleForTrackedDeviceIndex(uint unDeviceIndex)
		{
			return default(ETrackedControllerRole);
		}

		[Token(Token = "0x60007A6")]
		[Address(RVA = "0x125FC08", Offset = "0x125FC08", VA = "0x125FC08")]
		public ETrackedDeviceClass GetTrackedDeviceClass(uint unDeviceIndex)
		{
			return default(ETrackedDeviceClass);
		}

		[Token(Token = "0x60007A7")]
		[Address(RVA = "0x125FC24", Offset = "0x125FC24", VA = "0x125FC24")]
		public bool IsTrackedDeviceConnected(uint unDeviceIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x60007A8")]
		[Address(RVA = "0x125FC40", Offset = "0x125FC40", VA = "0x125FC40")]
		public bool GetBoolTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(bool);
		}

		[Token(Token = "0x60007A9")]
		[Address(RVA = "0x125FC5C", Offset = "0x125FC5C", VA = "0x125FC5C")]
		public float GetFloatTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(float);
		}

		[Token(Token = "0x60007AA")]
		[Address(RVA = "0x125FC78", Offset = "0x125FC78", VA = "0x125FC78")]
		public int GetInt32TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(int);
		}

		[Token(Token = "0x60007AB")]
		[Address(RVA = "0x125FC94", Offset = "0x125FC94", VA = "0x125FC94")]
		public ulong GetUint64TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(ulong);
		}

		[Token(Token = "0x60007AC")]
		[Address(RVA = "0x125FCB0", Offset = "0x125FCB0", VA = "0x125FCB0")]
		public HmdMatrix34_t GetMatrix34TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x60007AD")]
		[Address(RVA = "0x125FCCC", Offset = "0x125FCCC", VA = "0x125FCCC")]
		public uint GetArrayTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, uint propType, IntPtr pBuffer, uint unBufferSize, ref ETrackedPropertyError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x60007AE")]
		[Address(RVA = "0x125FCE8", Offset = "0x125FCE8", VA = "0x125FCE8")]
		public uint GetStringTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, StringBuilder pchValue, uint unBufferSize, ref ETrackedPropertyError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x60007AF")]
		[Address(RVA = "0x125FD04", Offset = "0x125FD04", VA = "0x125FD04")]
		public string GetPropErrorNameFromEnum(ETrackedPropertyError error)
		{
			return null;
		}

		[Token(Token = "0x60007B0")]
		[Address(RVA = "0x125FD98", Offset = "0x125FD98", VA = "0x125FD98")]
		public bool PollNextEvent(ref VREvent_t pEvent, uint uncbVREvent)
		{
			return default(bool);
		}

		[Token(Token = "0x60007B1")]
		[Address(RVA = "0x12601A4", Offset = "0x12601A4", VA = "0x12601A4")]
		public bool PollNextEventWithPose(ETrackingUniverseOrigin eOrigin, ref VREvent_t pEvent, uint uncbVREvent, ref TrackedDevicePose_t pTrackedDevicePose)
		{
			return default(bool);
		}

		[Token(Token = "0x60007B2")]
		[Address(RVA = "0x12601C0", Offset = "0x12601C0", VA = "0x12601C0")]
		public string GetEventTypeNameFromEnum(EVREventType eType)
		{
			return null;
		}

		[Token(Token = "0x60007B3")]
		[Address(RVA = "0x1260254", Offset = "0x1260254", VA = "0x1260254")]
		public HiddenAreaMesh_t GetHiddenAreaMesh(EVREye eEye, EHiddenAreaMeshType type)
		{
			return default(HiddenAreaMesh_t);
		}

		[Token(Token = "0x60007B4")]
		[Address(RVA = "0x1260270", Offset = "0x1260270", VA = "0x1260270")]
		public bool GetControllerState(uint unControllerDeviceIndex, ref VRControllerState_t pControllerState, uint unControllerStateSize)
		{
			return default(bool);
		}

		[Token(Token = "0x60007B5")]
		[Address(RVA = "0x12606D4", Offset = "0x12606D4", VA = "0x12606D4")]
		public bool GetControllerStateWithPose(ETrackingUniverseOrigin eOrigin, uint unControllerDeviceIndex, ref VRControllerState_t pControllerState, uint unControllerStateSize, ref TrackedDevicePose_t pTrackedDevicePose)
		{
			return default(bool);
		}

		[Token(Token = "0x60007B6")]
		[Address(RVA = "0x1260B90", Offset = "0x1260B90", VA = "0x1260B90")]
		public void TriggerHapticPulse(uint unControllerDeviceIndex, uint unAxisId, char usDurationMicroSec)
		{
		}

		[Token(Token = "0x60007B7")]
		[Address(RVA = "0x1260BAC", Offset = "0x1260BAC", VA = "0x1260BAC")]
		public string GetButtonIdNameFromEnum(EVRButtonId eButtonId)
		{
			return null;
		}

		[Token(Token = "0x60007B8")]
		[Address(RVA = "0x1260C40", Offset = "0x1260C40", VA = "0x1260C40")]
		public string GetControllerAxisTypeNameFromEnum(EVRControllerAxisType eAxisType)
		{
			return null;
		}

		[Token(Token = "0x60007B9")]
		[Address(RVA = "0x1260CD4", Offset = "0x1260CD4", VA = "0x1260CD4")]
		public bool IsInputAvailable()
		{
			return default(bool);
		}

		[Token(Token = "0x60007BA")]
		[Address(RVA = "0x1260CF0", Offset = "0x1260CF0", VA = "0x1260CF0")]
		public bool IsSteamVRDrawingControllers()
		{
			return default(bool);
		}

		[Token(Token = "0x60007BB")]
		[Address(RVA = "0x1260D0C", Offset = "0x1260D0C", VA = "0x1260D0C")]
		public bool ShouldApplicationPause()
		{
			return default(bool);
		}

		[Token(Token = "0x60007BC")]
		[Address(RVA = "0x1260D28", Offset = "0x1260D28", VA = "0x1260D28")]
		public bool ShouldApplicationReduceRenderingWork()
		{
			return default(bool);
		}

		[Token(Token = "0x60007BD")]
		[Address(RVA = "0x1260D44", Offset = "0x1260D44", VA = "0x1260D44")]
		public uint DriverDebugRequest(uint unDeviceIndex, string pchRequest, StringBuilder pchResponseBuffer, uint unResponseBufferSize)
		{
			return default(uint);
		}

		[Token(Token = "0x60007BE")]
		[Address(RVA = "0x1260D60", Offset = "0x1260D60", VA = "0x1260D60")]
		public EVRFirmwareError PerformFirmwareUpdate(uint unDeviceIndex)
		{
			return default(EVRFirmwareError);
		}

		[Token(Token = "0x60007BF")]
		[Address(RVA = "0x1260D7C", Offset = "0x1260D7C", VA = "0x1260D7C")]
		public void AcknowledgeQuit_Exiting()
		{
		}

		[Token(Token = "0x60007C0")]
		[Address(RVA = "0x1260D98", Offset = "0x1260D98", VA = "0x1260D98")]
		public void AcknowledgeQuit_UserPrompt()
		{
		}
	}
	[Token(Token = "0x20000A3")]
	public class CVRExtendedDisplay
	{
		[Token(Token = "0x400045A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRExtendedDisplay FnTable;

		[Token(Token = "0x60007C1")]
		[Address(RVA = "0x125D4E0", Offset = "0x125D4E0", VA = "0x125D4E0")]
		internal CVRExtendedDisplay(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60007C2")]
		[Address(RVA = "0x125D5F0", Offset = "0x125D5F0", VA = "0x125D5F0")]
		public void GetWindowBounds(ref int pnX, ref int pnY, ref uint pnWidth, ref uint pnHeight)
		{
		}

		[Token(Token = "0x60007C3")]
		[Address(RVA = "0x125D61C", Offset = "0x125D61C", VA = "0x125D61C")]
		public void GetEyeOutputViewport(EVREye eEye, ref uint pnX, ref uint pnY, ref uint pnWidth, ref uint pnHeight)
		{
		}

		[Token(Token = "0x60007C4")]
		[Address(RVA = "0x125D648", Offset = "0x125D648", VA = "0x125D648")]
		public void GetDXGIOutputInfo(ref int pnAdapterIndex, ref int pnAdapterOutputIndex)
		{
		}
	}
	[Token(Token = "0x20000A4")]
	public class CVRTrackedCamera
	{
		[Token(Token = "0x400045B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRTrackedCamera FnTable;

		[Token(Token = "0x60007C5")]
		[Address(RVA = "0x1261120", Offset = "0x1261120", VA = "0x1261120")]
		internal CVRTrackedCamera(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60007C6")]
		[Address(RVA = "0x1261234", Offset = "0x1261234", VA = "0x1261234")]
		public string GetCameraErrorNameFromEnum(EVRTrackedCameraError eCameraError)
		{
			return null;
		}

		[Token(Token = "0x60007C7")]
		[Address(RVA = "0x12612C8", Offset = "0x12612C8", VA = "0x12612C8")]
		public EVRTrackedCameraError HasCamera(uint nDeviceIndex, ref bool pHasCamera)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60007C8")]
		[Address(RVA = "0x12612E8", Offset = "0x12612E8", VA = "0x12612E8")]
		public EVRTrackedCameraError GetCameraFrameSize(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref uint pnWidth, ref uint pnHeight, ref uint pnFrameBufferSize)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60007C9")]
		[Address(RVA = "0x1261310", Offset = "0x1261310", VA = "0x1261310")]
		public EVRTrackedCameraError GetCameraIntrinsics(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref HmdVector2_t pFocalLength, ref HmdVector2_t pCenter)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60007CA")]
		[Address(RVA = "0x126132C", Offset = "0x126132C", VA = "0x126132C")]
		public EVRTrackedCameraError GetCameraProjection(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, float flZNear, float flZFar, ref HmdMatrix44_t pProjection)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60007CB")]
		[Address(RVA = "0x1261348", Offset = "0x1261348", VA = "0x1261348")]
		public EVRTrackedCameraError AcquireVideoStreamingService(uint nDeviceIndex, ref ulong pHandle)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60007CC")]
		[Address(RVA = "0x1261368", Offset = "0x1261368", VA = "0x1261368")]
		public EVRTrackedCameraError ReleaseVideoStreamingService(ulong hTrackedCamera)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60007CD")]
		[Address(RVA = "0x1261384", Offset = "0x1261384", VA = "0x1261384")]
		public EVRTrackedCameraError GetVideoStreamFrameBuffer(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, IntPtr pFrameBuffer, uint nFrameBufferSize, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60007CE")]
		[Address(RVA = "0x12613A0", Offset = "0x12613A0", VA = "0x12613A0")]
		public EVRTrackedCameraError GetVideoStreamTextureSize(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref VRTextureBounds_t pTextureBounds, ref uint pnWidth, ref uint pnHeight)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60007CF")]
		[Address(RVA = "0x12613C4", Offset = "0x12613C4", VA = "0x12613C4")]
		public EVRTrackedCameraError GetVideoStreamTextureD3D11(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, IntPtr pD3D11DeviceOrResource, ref IntPtr ppD3D11ShaderResourceView, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60007D0")]
		[Address(RVA = "0x12613E0", Offset = "0x12613E0", VA = "0x12613E0")]
		public EVRTrackedCameraError GetVideoStreamTextureGL(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, ref uint pglTextureId, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60007D1")]
		[Address(RVA = "0x1261400", Offset = "0x1261400", VA = "0x1261400")]
		public EVRTrackedCameraError ReleaseVideoStreamTextureGL(ulong hTrackedCamera, uint glTextureId)
		{
			return default(EVRTrackedCameraError);
		}
	}
	[Token(Token = "0x20000A5")]
	public class CVRApplications
	{
		[Token(Token = "0x400045C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRApplications FnTable;

		[Token(Token = "0x60007D2")]
		[Address(RVA = "0x1252E24", Offset = "0x1252E24", VA = "0x1252E24")]
		internal CVRApplications(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60007D3")]
		[Address(RVA = "0x1252F38", Offset = "0x1252F38", VA = "0x1252F38")]
		public EVRApplicationError AddApplicationManifest(string pchApplicationManifestFullPath, bool bTemporary)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60007D4")]
		[Address(RVA = "0x12533A4", Offset = "0x12533A4", VA = "0x12533A4")]
		public EVRApplicationError RemoveApplicationManifest(string pchApplicationManifestFullPath)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60007D5")]
		[Address(RVA = "0x125377C", Offset = "0x125377C", VA = "0x125377C")]
		public bool IsApplicationInstalled(string pchAppKey)
		{
			return default(bool);
		}

		[Token(Token = "0x60007D6")]
		[Address(RVA = "0x1253B58", Offset = "0x1253B58", VA = "0x1253B58")]
		public uint GetApplicationCount()
		{
			return default(uint);
		}

		[Token(Token = "0x60007D7")]
		[Address(RVA = "0x1253D84", Offset = "0x1253D84", VA = "0x1253D84")]
		public EVRApplicationError GetApplicationKeyByIndex(uint unApplicationIndex, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60007D8")]
		[Address(RVA = "0x1254048", Offset = "0x1254048", VA = "0x1254048")]
		public EVRApplicationError GetApplicationKeyByProcessId(uint unProcessId, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60007D9")]
		[Address(RVA = "0x125430C", Offset = "0x125430C", VA = "0x125430C")]
		public EVRApplicationError LaunchApplication(string pchAppKey)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60007DA")]
		[Address(RVA = "0x12546E4", Offset = "0x12546E4", VA = "0x12546E4")]
		public EVRApplicationError LaunchTemplateApplication(string pchTemplateAppKey, string pchNewAppKey, AppOverrideKeys_t[] pKeys)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60007DB")]
		[Address(RVA = "0x1254B5C", Offset = "0x1254B5C", VA = "0x1254B5C")]
		public EVRApplicationError LaunchApplicationFromMimeType(string pchMimeType, string pchArgs)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60007DC")]
		[Address(RVA = "0x1254F80", Offset = "0x1254F80", VA = "0x1254F80")]
		public EVRApplicationError LaunchDashboardOverlay(string pchAppKey)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60007DD")]
		[Address(RVA = "0x1255358", Offset = "0x1255358", VA = "0x1255358")]
		public bool CancelApplicationLaunch(string pchAppKey)
		{
			return default(bool);
		}

		[Token(Token = "0x60007DE")]
		[Address(RVA = "0x1255734", Offset = "0x1255734", VA = "0x1255734")]
		public EVRApplicationError IdentifyApplication(uint unProcessId, string pchAppKey)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60007DF")]
		[Address(RVA = "0x12559DC", Offset = "0x12559DC", VA = "0x12559DC")]
		public uint GetApplicationProcessId(string pchAppKey)
		{
			return default(uint);
		}

		[Token(Token = "0x60007E0")]
		[Address(RVA = "0x1255DB4", Offset = "0x1255DB4", VA = "0x1255DB4")]
		public string GetApplicationsErrorNameFromEnum(EVRApplicationError error)
		{
			return null;
		}

		[Token(Token = "0x60007E1")]
		[Address(RVA = "0x12560B8", Offset = "0x12560B8", VA = "0x12560B8")]
		public uint GetApplicationPropertyString(string pchAppKey, EVRApplicationProperty eProperty, StringBuilder pchPropertyValueBuffer, uint unPropertyValueBufferLen, ref EVRApplicationError peError)
		{
			return default(uint);
		}

		[Token(Token = "0x60007E2")]
		[Address(RVA = "0x1256574", Offset = "0x1256574", VA = "0x1256574")]
		public bool GetApplicationPropertyBool(string pchAppKey, EVRApplicationProperty eProperty, ref EVRApplicationError peError)
		{
			return default(bool);
		}

		[Token(Token = "0x60007E3")]
		[Address(RVA = "0x12569E8", Offset = "0x12569E8", VA = "0x12569E8")]
		public ulong GetApplicationPropertyUint64(string pchAppKey, EVRApplicationProperty eProperty, ref EVRApplicationError peError)
		{
			return default(ulong);
		}

		[Token(Token = "0x60007E4")]
		[Address(RVA = "0x1256E58", Offset = "0x1256E58", VA = "0x1256E58")]
		public EVRApplicationError SetApplicationAutoLaunch(string pchAppKey, bool bAutoLaunch)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60007E5")]
		[Address(RVA = "0x12572C4", Offset = "0x12572C4", VA = "0x12572C4")]
		public bool GetApplicationAutoLaunch(string pchAppKey)
		{
			return default(bool);
		}

		[Token(Token = "0x60007E6")]
		[Address(RVA = "0x12576A0", Offset = "0x12576A0", VA = "0x12576A0")]
		public EVRApplicationError SetDefaultApplicationForMimeType(string pchAppKey, string pchMimeType)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60007E7")]
		[Address(RVA = "0x1257AC4", Offset = "0x1257AC4", VA = "0x1257AC4")]
		public bool GetDefaultApplicationForMimeType(string pchMimeType, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)
		{
			return default(bool);
		}

		[Token(Token = "0x60007E8")]
		[Address(RVA = "0x1257F10", Offset = "0x1257F10", VA = "0x1257F10")]
		public bool GetApplicationSupportedMimeTypes(string pchAppKey, StringBuilder pchMimeTypesBuffer, uint unMimeTypesBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x60007E9")]
		[Address(RVA = "0x125835C", Offset = "0x125835C", VA = "0x125835C")]
		public uint GetApplicationsThatSupportMimeType(string pchMimeType, StringBuilder pchAppKeysThatSupportBuffer, uint unAppKeysThatSupportBuffer)
		{
			return default(uint);
		}

		[Token(Token = "0x60007EA")]
		[Address(RVA = "0x12587A4", Offset = "0x12587A4", VA = "0x12587A4")]
		public uint GetApplicationLaunchArguments(uint unHandle, StringBuilder pchArgs, uint unArgs)
		{
			return default(uint);
		}

		[Token(Token = "0x60007EB")]
		[Address(RVA = "0x1258A68", Offset = "0x1258A68", VA = "0x1258A68")]
		public EVRApplicationError GetStartingApplication(StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60007EC")]
		[Address(RVA = "0x1258EB4", Offset = "0x1258EB4", VA = "0x1258EB4")]
		public EVRApplicationTransitionState GetTransitionState()
		{
			return default(EVRApplicationTransitionState);
		}

		[Token(Token = "0x60007ED")]
		[Address(RVA = "0x12590E0", Offset = "0x12590E0", VA = "0x12590E0")]
		public EVRApplicationError PerformApplicationPrelaunchCheck(string pchAppKey)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60007EE")]
		[Address(RVA = "0x12594B8", Offset = "0x12594B8", VA = "0x12594B8")]
		public string GetApplicationsTransitionStateNameFromEnum(EVRApplicationTransitionState state)
		{
			return null;
		}

		[Token(Token = "0x60007EF")]
		[Address(RVA = "0x12597BC", Offset = "0x12597BC", VA = "0x12597BC")]
		public bool IsQuitUserPromptRequested()
		{
			return default(bool);
		}

		[Token(Token = "0x60007F0")]
		[Address(RVA = "0x12599EC", Offset = "0x12599EC", VA = "0x12599EC")]
		public EVRApplicationError LaunchInternalProcess(string pchBinaryPath, string pchArguments, string pchWorkingDirectory)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60007F1")]
		[Address(RVA = "0x1259E34", Offset = "0x1259E34", VA = "0x1259E34")]
		public uint GetCurrentSceneProcessId()
		{
			return default(uint);
		}
	}
	[Token(Token = "0x20000A6")]
	public class CVRChaperone
	{
		[Token(Token = "0x400045D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRChaperone FnTable;

		[Token(Token = "0x60007F2")]
		[Address(RVA = "0x125A060", Offset = "0x125A060", VA = "0x125A060")]
		internal CVRChaperone(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60007F3")]
		[Address(RVA = "0x125A174", Offset = "0x125A174", VA = "0x125A174")]
		public ChaperoneCalibrationState GetCalibrationState()
		{
			return default(ChaperoneCalibrationState);
		}

		[Token(Token = "0x60007F4")]
		[Address(RVA = "0x125A3A0", Offset = "0x125A3A0", VA = "0x125A3A0")]
		public bool GetPlayAreaSize(ref float pSizeX, ref float pSizeZ)
		{
			return default(bool);
		}

		[Token(Token = "0x60007F5")]
		[Address(RVA = "0x125A638", Offset = "0x125A638", VA = "0x125A638")]
		public bool GetPlayAreaRect(ref HmdQuad_t rect)
		{
			return default(bool);
		}

		[Token(Token = "0x60007F6")]
		[Address(RVA = "0x125A8AC", Offset = "0x125A8AC", VA = "0x125A8AC")]
		public void ReloadInfo()
		{
		}

		[Token(Token = "0x60007F7")]
		[Address(RVA = "0x125AAD0", Offset = "0x125AAD0", VA = "0x125AAD0")]
		public void SetSceneColor(HmdColor_t color)
		{
		}

		[Token(Token = "0x60007F8")]
		[Address(RVA = "0x125AD94", Offset = "0x125AD94", VA = "0x125AD94")]
		public void GetBoundsColor(ref HmdColor_t pOutputColorArray, int nNumOutputColors, float flCollisionBoundsFadeDistance, ref HmdColor_t pOutputCameraColor)
		{
		}

		[Token(Token = "0x60007F9")]
		[Address(RVA = "0x125B04C", Offset = "0x125B04C", VA = "0x125B04C")]
		public bool AreBoundsVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x60007FA")]
		[Address(RVA = "0x125B27C", Offset = "0x125B27C", VA = "0x125B27C")]
		public void ForceBoundsVisible(bool bForce)
		{
		}
	}
	[Token(Token = "0x20000A7")]
	public class CVRChaperoneSetup
	{
		[Token(Token = "0x400045E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRChaperoneSetup FnTable;

		[Token(Token = "0x60007FB")]
		[Address(RVA = "0x125B514", Offset = "0x125B514", VA = "0x125B514")]
		internal CVRChaperoneSetup(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60007FC")]
		[Address(RVA = "0x125B628", Offset = "0x125B628", VA = "0x125B628")]
		public bool CommitWorkingCopy(EChaperoneConfigFile configFile)
		{
			return default(bool);
		}

		[Token(Token = "0x60007FD")]
		[Address(RVA = "0x125B8B8", Offset = "0x125B8B8", VA = "0x125B8B8")]
		public void RevertWorkingCopy()
		{
		}

		[Token(Token = "0x60007FE")]
		[Address(RVA = "0x125B8D4", Offset = "0x125B8D4", VA = "0x125B8D4")]
		public bool GetWorkingPlayAreaSize(ref float pSizeX, ref float pSizeZ)
		{
			return default(bool);
		}

		[Token(Token = "0x60007FF")]
		[Address(RVA = "0x125B8F8", Offset = "0x125B8F8", VA = "0x125B8F8")]
		public bool GetWorkingPlayAreaRect(ref HmdQuad_t rect)
		{
			return default(bool);
		}

		[Token(Token = "0x6000800")]
		[Address(RVA = "0x125B914", Offset = "0x125B914", VA = "0x125B914")]
		public bool GetWorkingCollisionBoundsInfo(out HmdQuad_t[] pQuadsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x6000801")]
		[Address(RVA = "0x125BC30", Offset = "0x125BC30", VA = "0x125BC30")]
		public bool GetLiveCollisionBoundsInfo(out HmdQuad_t[] pQuadsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x6000802")]
		[Address(RVA = "0x125BF4C", Offset = "0x125BF4C", VA = "0x125BF4C")]
		public bool GetWorkingSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose)
		{
			return default(bool);
		}

		[Token(Token = "0x6000803")]
		[Address(RVA = "0x125BF68", Offset = "0x125BF68", VA = "0x125BF68")]
		public bool GetWorkingStandingZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatStandingZeroPoseToRawTrackingPose)
		{
			return default(bool);
		}

		[Token(Token = "0x6000804")]
		[Address(RVA = "0x125BF84", Offset = "0x125BF84", VA = "0x125BF84")]
		public void SetWorkingPlayAreaSize(float sizeX, float sizeZ)
		{
		}

		[Token(Token = "0x6000805")]
		[Address(RVA = "0x125BFA0", Offset = "0x125BFA0", VA = "0x125BFA0")]
		public void SetWorkingCollisionBoundsInfo(HmdQuad_t[] pQuadsBuffer)
		{
		}

		[Token(Token = "0x6000806")]
		[Address(RVA = "0x125BFC8", Offset = "0x125BFC8", VA = "0x125BFC8")]
		public void SetWorkingSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pMatSeatedZeroPoseToRawTrackingPose)
		{
		}

		[Token(Token = "0x6000807")]
		[Address(RVA = "0x125BFE4", Offset = "0x125BFE4", VA = "0x125BFE4")]
		public void SetWorkingStandingZeroPoseToRawTrackingPose(ref HmdMatrix34_t pMatStandingZeroPoseToRawTrackingPose)
		{
		}

		[Token(Token = "0x6000808")]
		[Address(RVA = "0x125C000", Offset = "0x125C000", VA = "0x125C000")]
		public void ReloadFromDisk(EChaperoneConfigFile configFile)
		{
		}

		[Token(Token = "0x6000809")]
		[Address(RVA = "0x125C01C", Offset = "0x125C01C", VA = "0x125C01C")]
		public bool GetLiveSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose)
		{
			return default(bool);
		}

		[Token(Token = "0x600080A")]
		[Address(RVA = "0x125C290", Offset = "0x125C290", VA = "0x125C290")]
		public void SetWorkingCollisionBoundsTagsInfo(byte[] pTagsBuffer)
		{
		}

		[Token(Token = "0x600080B")]
		[Address(RVA = "0x125C2B8", Offset = "0x125C2B8", VA = "0x125C2B8")]
		public bool GetLiveCollisionBoundsTagsInfo(out byte[] pTagsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x600080C")]
		[Address(RVA = "0x125C5D4", Offset = "0x125C5D4", VA = "0x125C5D4")]
		public bool SetWorkingPhysicalBoundsInfo(HmdQuad_t[] pQuadsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x600080D")]
		[Address(RVA = "0x125C5FC", Offset = "0x125C5FC", VA = "0x125C5FC")]
		public bool GetLivePhysicalBoundsInfo(out HmdQuad_t[] pQuadsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x600080E")]
		[Address(RVA = "0x125C918", Offset = "0x125C918", VA = "0x125C918")]
		public bool ExportLiveToBuffer(StringBuilder pBuffer, ref uint pnBufferLength)
		{
			return default(bool);
		}

		[Token(Token = "0x600080F")]
		[Address(RVA = "0x125CD44", Offset = "0x125CD44", VA = "0x125CD44")]
		public bool ImportFromBufferToWorking(string pBuffer, uint nImportFlags)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20000A8")]
	public class CVRCompositor
	{
		[Token(Token = "0x400045F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRCompositor FnTable;

		[Token(Token = "0x6000810")]
		[Address(RVA = "0x125CD60", Offset = "0x125CD60", VA = "0x125CD60")]
		internal CVRCompositor(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6000811")]
		[Address(RVA = "0x125CE74", Offset = "0x125CE74", VA = "0x125CE74")]
		public void SetTrackingSpace(ETrackingUniverseOrigin eOrigin)
		{
		}

		[Token(Token = "0x6000812")]
		[Address(RVA = "0x125CE90", Offset = "0x125CE90", VA = "0x125CE90")]
		public ETrackingUniverseOrigin GetTrackingSpace()
		{
			return default(ETrackingUniverseOrigin);
		}

		[Token(Token = "0x6000813")]
		[Address(RVA = "0x125CEAC", Offset = "0x125CEAC", VA = "0x125CEAC")]
		public EVRCompositorError WaitGetPoses(TrackedDevicePose_t[] pRenderPoseArray, TrackedDevicePose_t[] pGamePoseArray)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6000814")]
		[Address(RVA = "0x125CEE0", Offset = "0x125CEE0", VA = "0x125CEE0")]
		public EVRCompositorError GetLastPoses(TrackedDevicePose_t[] pRenderPoseArray, TrackedDevicePose_t[] pGamePoseArray)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6000815")]
		[Address(RVA = "0x125CF14", Offset = "0x125CF14", VA = "0x125CF14")]
		public EVRCompositorError GetLastPoseForTrackedDeviceIndex(uint unDeviceIndex, ref TrackedDevicePose_t pOutputPose, ref TrackedDevicePose_t pOutputGamePose)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6000816")]
		[Address(RVA = "0x125CF30", Offset = "0x125CF30", VA = "0x125CF30")]
		public EVRCompositorError Submit(EVREye eEye, ref Texture_t pTexture, ref VRTextureBounds_t pBounds, EVRSubmitFlags nSubmitFlags)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6000817")]
		[Address(RVA = "0x125CF4C", Offset = "0x125CF4C", VA = "0x125CF4C")]
		public void ClearLastSubmittedFrame()
		{
		}

		[Token(Token = "0x6000818")]
		[Address(RVA = "0x125CF68", Offset = "0x125CF68", VA = "0x125CF68")]
		public void PostPresentHandoff()
		{
		}

		[Token(Token = "0x6000819")]
		[Address(RVA = "0x125CF84", Offset = "0x125CF84", VA = "0x125CF84")]
		public bool GetFrameTiming(ref Compositor_FrameTiming pTiming, uint unFramesAgo)
		{
			return default(bool);
		}

		[Token(Token = "0x600081A")]
		[Address(RVA = "0x125CFA0", Offset = "0x125CFA0", VA = "0x125CFA0")]
		public uint GetFrameTimings(ref Compositor_FrameTiming pTiming, uint nFrames)
		{
			return default(uint);
		}

		[Token(Token = "0x600081B")]
		[Address(RVA = "0x125CFBC", Offset = "0x125CFBC", VA = "0x125CFBC")]
		public float GetFrameTimeRemaining()
		{
			return default(float);
		}

		[Token(Token = "0x600081C")]
		[Address(RVA = "0x125CFD8", Offset = "0x125CFD8", VA = "0x125CFD8")]
		public void GetCumulativeStats(ref Compositor_CumulativeStats pStats, uint nStatsSizeInBytes)
		{
		}

		[Token(Token = "0x600081D")]
		[Address(RVA = "0x125CFF4", Offset = "0x125CFF4", VA = "0x125CFF4")]
		public void FadeToColor(float fSeconds, float fRed, float fGreen, float fBlue, float fAlpha, bool bBackground)
		{
		}

		[Token(Token = "0x600081E")]
		[Address(RVA = "0x125D014", Offset = "0x125D014", VA = "0x125D014")]
		public HmdColor_t GetCurrentFadeColor(bool bBackground)
		{
			return default(HmdColor_t);
		}

		[Token(Token = "0x600081F")]
		[Address(RVA = "0x125D034", Offset = "0x125D034", VA = "0x125D034")]
		public void FadeGrid(float fSeconds, bool bFadeIn)
		{
		}

		[Token(Token = "0x6000820")]
		[Address(RVA = "0x125D054", Offset = "0x125D054", VA = "0x125D054")]
		public float GetCurrentGridAlpha()
		{
			return default(float);
		}

		[Token(Token = "0x6000821")]
		[Address(RVA = "0x125D070", Offset = "0x125D070", VA = "0x125D070")]
		public EVRCompositorError SetSkyboxOverride(Texture_t[] pTextures)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6000822")]
		[Address(RVA = "0x125D098", Offset = "0x125D098", VA = "0x125D098")]
		public void ClearSkyboxOverride()
		{
		}

		[Token(Token = "0x6000823")]
		[Address(RVA = "0x125D0B4", Offset = "0x125D0B4", VA = "0x125D0B4")]
		public void CompositorBringToFront()
		{
		}

		[Token(Token = "0x6000824")]
		[Address(RVA = "0x125D0D0", Offset = "0x125D0D0", VA = "0x125D0D0")]
		public void CompositorGoToBack()
		{
		}

		[Token(Token = "0x6000825")]
		[Address(RVA = "0x125D0EC", Offset = "0x125D0EC", VA = "0x125D0EC")]
		public void CompositorQuit()
		{
		}

		[Token(Token = "0x6000826")]
		[Address(RVA = "0x125D108", Offset = "0x125D108", VA = "0x125D108")]
		public bool IsFullscreen()
		{
			return default(bool);
		}

		[Token(Token = "0x6000827")]
		[Address(RVA = "0x125D124", Offset = "0x125D124", VA = "0x125D124")]
		public uint GetCurrentSceneFocusProcess()
		{
			return default(uint);
		}

		[Token(Token = "0x6000828")]
		[Address(RVA = "0x125D140", Offset = "0x125D140", VA = "0x125D140")]
		public uint GetLastFrameRenderer()
		{
			return default(uint);
		}

		[Token(Token = "0x6000829")]
		[Address(RVA = "0x125D15C", Offset = "0x125D15C", VA = "0x125D15C")]
		public bool CanRenderScene()
		{
			return default(bool);
		}

		[Token(Token = "0x600082A")]
		[Address(RVA = "0x125D178", Offset = "0x125D178", VA = "0x125D178")]
		public void ShowMirrorWindow()
		{
		}

		[Token(Token = "0x600082B")]
		[Address(RVA = "0x125D194", Offset = "0x125D194", VA = "0x125D194")]
		public void HideMirrorWindow()
		{
		}

		[Token(Token = "0x600082C")]
		[Address(RVA = "0x125D1B0", Offset = "0x125D1B0", VA = "0x125D1B0")]
		public bool IsMirrorWindowVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x600082D")]
		[Address(RVA = "0x125D1CC", Offset = "0x125D1CC", VA = "0x125D1CC")]
		public void CompositorDumpImages()
		{
		}

		[Token(Token = "0x600082E")]
		[Address(RVA = "0x125D1E8", Offset = "0x125D1E8", VA = "0x125D1E8")]
		public bool ShouldAppRenderWithLowResources()
		{
			return default(bool);
		}

		[Token(Token = "0x600082F")]
		[Address(RVA = "0x125D204", Offset = "0x125D204", VA = "0x125D204")]
		public void ForceInterleavedReprojectionOn(bool bOverride)
		{
		}

		[Token(Token = "0x6000830")]
		[Address(RVA = "0x125D224", Offset = "0x125D224", VA = "0x125D224")]
		public void ForceReconnectProcess()
		{
		}

		[Token(Token = "0x6000831")]
		[Address(RVA = "0x125D240", Offset = "0x125D240", VA = "0x125D240")]
		public void SuspendRendering(bool bSuspend)
		{
		}

		[Token(Token = "0x6000832")]
		[Address(RVA = "0x125D260", Offset = "0x125D260", VA = "0x125D260")]
		public EVRCompositorError GetMirrorTextureD3D11(EVREye eEye, IntPtr pD3D11DeviceOrResource, ref IntPtr ppD3D11ShaderResourceView)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6000833")]
		[Address(RVA = "0x125D27C", Offset = "0x125D27C", VA = "0x125D27C")]
		public void ReleaseMirrorTextureD3D11(IntPtr pD3D11ShaderResourceView)
		{
		}

		[Token(Token = "0x6000834")]
		[Address(RVA = "0x125D298", Offset = "0x125D298", VA = "0x125D298")]
		public EVRCompositorError GetMirrorTextureGL(EVREye eEye, ref uint pglTextureId, IntPtr pglSharedTextureHandle)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6000835")]
		[Address(RVA = "0x125D2B8", Offset = "0x125D2B8", VA = "0x125D2B8")]
		public bool ReleaseSharedGLTexture(uint glTextureId, IntPtr glSharedTextureHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x6000836")]
		[Address(RVA = "0x125D2D4", Offset = "0x125D2D4", VA = "0x125D2D4")]
		public void LockGLSharedTextureForAccess(IntPtr glSharedTextureHandle)
		{
		}

		[Token(Token = "0x6000837")]
		[Address(RVA = "0x125D2F0", Offset = "0x125D2F0", VA = "0x125D2F0")]
		public void UnlockGLSharedTextureForAccess(IntPtr glSharedTextureHandle)
		{
		}

		[Token(Token = "0x6000838")]
		[Address(RVA = "0x125D30C", Offset = "0x125D30C", VA = "0x125D30C")]
		public uint GetVulkanInstanceExtensionsRequired(StringBuilder pchValue, uint unBufferSize)
		{
			return default(uint);
		}

		[Token(Token = "0x6000839")]
		[Address(RVA = "0x125D328", Offset = "0x125D328", VA = "0x125D328")]
		public uint GetVulkanDeviceExtensionsRequired(IntPtr pPhysicalDevice, StringBuilder pchValue, uint unBufferSize)
		{
			return default(uint);
		}

		[Token(Token = "0x600083A")]
		[Address(RVA = "0x125D344", Offset = "0x125D344", VA = "0x125D344")]
		public void SetExplicitTimingMode(EVRCompositorTimingMode eTimingMode)
		{
		}

		[Token(Token = "0x600083B")]
		[Address(RVA = "0x125D360", Offset = "0x125D360", VA = "0x125D360")]
		public EVRCompositorError SubmitExplicitTimingData()
		{
			return default(EVRCompositorError);
		}
	}
	[Token(Token = "0x20000A9")]
	public class CVROverlay
	{
		[Token(Token = "0x20003ED")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB089C", Offset = "0xCB089C")]
		internal delegate bool _PollNextOverlayEventPacked(ulong ulOverlayHandle, ref VREvent_t_Packed pEvent, uint uncbVREvent);

		[StructLayout(2)]
		[Token(Token = "0x20003EE")]
		private struct PollNextOverlayEventUnion
		{
			[Token(Token = "0x4000E1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVROverlay._PollNextOverlayEvent pPollNextOverlayEvent;

			[Token(Token = "0x4000E1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _PollNextOverlayEventPacked pPollNextOverlayEventPacked;
		}

		[Token(Token = "0x4000460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVROverlay FnTable;

		[Token(Token = "0x600083C")]
		[Address(RVA = "0x125D7B4", Offset = "0x125D7B4", VA = "0x125D7B4")]
		internal CVROverlay(IntPtr pInterface)
		{
		}

		[Token(Token = "0x600083D")]
		[Address(RVA = "0x125D8C8", Offset = "0x125D8C8", VA = "0x125D8C8")]
		public EVROverlayError FindOverlay(string pchOverlayKey, ref ulong pOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600083E")]
		[Address(RVA = "0x125D8E8", Offset = "0x125D8E8", VA = "0x125D8E8")]
		public EVROverlayError CreateOverlay(string pchOverlayKey, string pchOverlayName, ref ulong pOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600083F")]
		[Address(RVA = "0x125D908", Offset = "0x125D908", VA = "0x125D908")]
		public EVROverlayError DestroyOverlay(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000840")]
		[Address(RVA = "0x125D924", Offset = "0x125D924", VA = "0x125D924")]
		public EVROverlayError SetHighQualityOverlay(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000841")]
		[Address(RVA = "0x125D940", Offset = "0x125D940", VA = "0x125D940")]
		public ulong GetHighQualityOverlay()
		{
			return default(ulong);
		}

		[Token(Token = "0x6000842")]
		[Address(RVA = "0x125D95C", Offset = "0x125D95C", VA = "0x125D95C")]
		public uint GetOverlayKey(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref EVROverlayError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x6000843")]
		[Address(RVA = "0x125D978", Offset = "0x125D978", VA = "0x125D978")]
		public uint GetOverlayName(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref EVROverlayError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x6000844")]
		[Address(RVA = "0x125D994", Offset = "0x125D994", VA = "0x125D994")]
		public EVROverlayError SetOverlayName(ulong ulOverlayHandle, string pchName)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000845")]
		[Address(RVA = "0x125D9B0", Offset = "0x125D9B0", VA = "0x125D9B0")]
		public EVROverlayError GetOverlayImageData(ulong ulOverlayHandle, IntPtr pvBuffer, uint unBufferSize, ref uint punWidth, ref uint punHeight)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000846")]
		[Address(RVA = "0x125D9D4", Offset = "0x125D9D4", VA = "0x125D9D4")]
		public string GetOverlayErrorNameFromEnum(EVROverlayError error)
		{
			return null;
		}

		[Token(Token = "0x6000847")]
		[Address(RVA = "0x125DA68", Offset = "0x125DA68", VA = "0x125DA68")]
		public EVROverlayError SetOverlayRenderingPid(ulong ulOverlayHandle, uint unPID)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000848")]
		[Address(RVA = "0x125DA84", Offset = "0x125DA84", VA = "0x125DA84")]
		public uint GetOverlayRenderingPid(ulong ulOverlayHandle)
		{
			return default(uint);
		}

		[Token(Token = "0x6000849")]
		[Address(RVA = "0x125DAA0", Offset = "0x125DAA0", VA = "0x125DAA0")]
		public EVROverlayError SetOverlayFlag(ulong ulOverlayHandle, VROverlayFlags eOverlayFlag, bool bEnabled)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600084A")]
		[Address(RVA = "0x125DAC0", Offset = "0x125DAC0", VA = "0x125DAC0")]
		public EVROverlayError GetOverlayFlag(ulong ulOverlayHandle, VROverlayFlags eOverlayFlag, ref bool pbEnabled)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600084B")]
		[Address(RVA = "0x125DAE0", Offset = "0x125DAE0", VA = "0x125DAE0")]
		public EVROverlayError SetOverlayColor(ulong ulOverlayHandle, float fRed, float fGreen, float fBlue)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600084C")]
		[Address(RVA = "0x125DAFC", Offset = "0x125DAFC", VA = "0x125DAFC")]
		public EVROverlayError GetOverlayColor(ulong ulOverlayHandle, ref float pfRed, ref float pfGreen, ref float pfBlue)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600084D")]
		[Address(RVA = "0x125DB24", Offset = "0x125DB24", VA = "0x125DB24")]
		public EVROverlayError SetOverlayAlpha(ulong ulOverlayHandle, float fAlpha)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600084E")]
		[Address(RVA = "0x125DB40", Offset = "0x125DB40", VA = "0x125DB40")]
		public EVROverlayError GetOverlayAlpha(ulong ulOverlayHandle, ref float pfAlpha)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600084F")]
		[Address(RVA = "0x125DB60", Offset = "0x125DB60", VA = "0x125DB60")]
		public EVROverlayError SetOverlayTexelAspect(ulong ulOverlayHandle, float fTexelAspect)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000850")]
		[Address(RVA = "0x125DB7C", Offset = "0x125DB7C", VA = "0x125DB7C")]
		public EVROverlayError GetOverlayTexelAspect(ulong ulOverlayHandle, ref float pfTexelAspect)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000851")]
		[Address(RVA = "0x125DB9C", Offset = "0x125DB9C", VA = "0x125DB9C")]
		public EVROverlayError SetOverlaySortOrder(ulong ulOverlayHandle, uint unSortOrder)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000852")]
		[Address(RVA = "0x125DBB8", Offset = "0x125DBB8", VA = "0x125DBB8")]
		public EVROverlayError GetOverlaySortOrder(ulong ulOverlayHandle, ref uint punSortOrder)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000853")]
		[Address(RVA = "0x125DBD8", Offset = "0x125DBD8", VA = "0x125DBD8")]
		public EVROverlayError SetOverlayWidthInMeters(ulong ulOverlayHandle, float fWidthInMeters)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000854")]
		[Address(RVA = "0x125DBF4", Offset = "0x125DBF4", VA = "0x125DBF4")]
		public EVROverlayError GetOverlayWidthInMeters(ulong ulOverlayHandle, ref float pfWidthInMeters)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000855")]
		[Address(RVA = "0x125DC14", Offset = "0x125DC14", VA = "0x125DC14")]
		public EVROverlayError SetOverlayAutoCurveDistanceRangeInMeters(ulong ulOverlayHandle, float fMinDistanceInMeters, float fMaxDistanceInMeters)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000856")]
		[Address(RVA = "0x125DC30", Offset = "0x125DC30", VA = "0x125DC30")]
		public EVROverlayError GetOverlayAutoCurveDistanceRangeInMeters(ulong ulOverlayHandle, ref float pfMinDistanceInMeters, ref float pfMaxDistanceInMeters)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000857")]
		[Address(RVA = "0x125DC54", Offset = "0x125DC54", VA = "0x125DC54")]
		public EVROverlayError SetOverlayTextureColorSpace(ulong ulOverlayHandle, EColorSpace eTextureColorSpace)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000858")]
		[Address(RVA = "0x125DC70", Offset = "0x125DC70", VA = "0x125DC70")]
		public EVROverlayError GetOverlayTextureColorSpace(ulong ulOverlayHandle, ref EColorSpace peTextureColorSpace)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000859")]
		[Address(RVA = "0x125DC8C", Offset = "0x125DC8C", VA = "0x125DC8C")]
		public EVROverlayError SetOverlayTextureBounds(ulong ulOverlayHandle, ref VRTextureBounds_t pOverlayTextureBounds)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600085A")]
		[Address(RVA = "0x125DCA8", Offset = "0x125DCA8", VA = "0x125DCA8")]
		public EVROverlayError GetOverlayTextureBounds(ulong ulOverlayHandle, ref VRTextureBounds_t pOverlayTextureBounds)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600085B")]
		[Address(RVA = "0x125DCC4", Offset = "0x125DCC4", VA = "0x125DCC4")]
		public uint GetOverlayRenderModel(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref HmdColor_t pColor, ref EVROverlayError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x600085C")]
		[Address(RVA = "0x125DCE0", Offset = "0x125DCE0", VA = "0x125DCE0")]
		public EVROverlayError SetOverlayRenderModel(ulong ulOverlayHandle, string pchRenderModel, ref HmdColor_t pColor)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600085D")]
		[Address(RVA = "0x125DCFC", Offset = "0x125DCFC", VA = "0x125DCFC")]
		public EVROverlayError GetOverlayTransformType(ulong ulOverlayHandle, ref VROverlayTransformType peTransformType)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600085E")]
		[Address(RVA = "0x125DD18", Offset = "0x125DD18", VA = "0x125DD18")]
		public EVROverlayError SetOverlayTransformAbsolute(ulong ulOverlayHandle, ETrackingUniverseOrigin eTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600085F")]
		[Address(RVA = "0x125DD34", Offset = "0x125DD34", VA = "0x125DD34")]
		public EVROverlayError GetOverlayTransformAbsolute(ulong ulOverlayHandle, ref ETrackingUniverseOrigin peTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000860")]
		[Address(RVA = "0x125DD50", Offset = "0x125DD50", VA = "0x125DD50")]
		public EVROverlayError SetOverlayTransformTrackedDeviceRelative(ulong ulOverlayHandle, uint unTrackedDevice, ref HmdMatrix34_t pmatTrackedDeviceToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000861")]
		[Address(RVA = "0x125DD6C", Offset = "0x125DD6C", VA = "0x125DD6C")]
		public EVROverlayError GetOverlayTransformTrackedDeviceRelative(ulong ulOverlayHandle, ref uint punTrackedDevice, ref HmdMatrix34_t pmatTrackedDeviceToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000862")]
		[Address(RVA = "0x125DD8C", Offset = "0x125DD8C", VA = "0x125DD8C")]
		public EVROverlayError SetOverlayTransformTrackedDeviceComponent(ulong ulOverlayHandle, uint unDeviceIndex, string pchComponentName)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000863")]
		[Address(RVA = "0x125DDA8", Offset = "0x125DDA8", VA = "0x125DDA8")]
		public EVROverlayError GetOverlayTransformTrackedDeviceComponent(ulong ulOverlayHandle, ref uint punDeviceIndex, StringBuilder pchComponentName, uint unComponentNameSize)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000864")]
		[Address(RVA = "0x125DDC8", Offset = "0x125DDC8", VA = "0x125DDC8")]
		public EVROverlayError GetOverlayTransformOverlayRelative(ulong ulOverlayHandle, ref ulong ulOverlayHandleParent, ref HmdMatrix34_t pmatParentOverlayToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000865")]
		[Address(RVA = "0x125DDE8", Offset = "0x125DDE8", VA = "0x125DDE8")]
		public EVROverlayError SetOverlayTransformOverlayRelative(ulong ulOverlayHandle, ulong ulOverlayHandleParent, ref HmdMatrix34_t pmatParentOverlayToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000866")]
		[Address(RVA = "0x125DE04", Offset = "0x125DE04", VA = "0x125DE04")]
		public EVROverlayError ShowOverlay(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000867")]
		[Address(RVA = "0x125DE20", Offset = "0x125DE20", VA = "0x125DE20")]
		public EVROverlayError HideOverlay(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000868")]
		[Address(RVA = "0x125DE3C", Offset = "0x125DE3C", VA = "0x125DE3C")]
		public bool IsOverlayVisible(ulong ulOverlayHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x6000869")]
		[Address(RVA = "0x125DE58", Offset = "0x125DE58", VA = "0x125DE58")]
		public EVROverlayError GetTransformForOverlayCoordinates(ulong ulOverlayHandle, ETrackingUniverseOrigin eTrackingOrigin, HmdVector2_t coordinatesInOverlay, ref HmdMatrix34_t pmatTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600086A")]
		[Address(RVA = "0x125DE74", Offset = "0x125DE74", VA = "0x125DE74")]
		public bool PollNextOverlayEvent(ulong ulOverlayHandle, ref VREvent_t pEvent, uint uncbVREvent)
		{
			return default(bool);
		}

		[Token(Token = "0x600086B")]
		[Address(RVA = "0x125E2B0", Offset = "0x125E2B0", VA = "0x125E2B0")]
		public EVROverlayError GetOverlayInputMethod(ulong ulOverlayHandle, ref VROverlayInputMethod peInputMethod)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600086C")]
		[Address(RVA = "0x125E2CC", Offset = "0x125E2CC", VA = "0x125E2CC")]
		public EVROverlayError SetOverlayInputMethod(ulong ulOverlayHandle, VROverlayInputMethod eInputMethod)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600086D")]
		[Address(RVA = "0x125E2E8", Offset = "0x125E2E8", VA = "0x125E2E8")]
		public EVROverlayError GetOverlayMouseScale(ulong ulOverlayHandle, ref HmdVector2_t pvecMouseScale)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600086E")]
		[Address(RVA = "0x125E304", Offset = "0x125E304", VA = "0x125E304")]
		public EVROverlayError SetOverlayMouseScale(ulong ulOverlayHandle, ref HmdVector2_t pvecMouseScale)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600086F")]
		[Address(RVA = "0x125E320", Offset = "0x125E320", VA = "0x125E320")]
		public bool ComputeOverlayIntersection(ulong ulOverlayHandle, ref VROverlayIntersectionParams_t pParams, ref VROverlayIntersectionResults_t pResults)
		{
			return default(bool);
		}

		[Token(Token = "0x6000870")]
		[Address(RVA = "0x125E33C", Offset = "0x125E33C", VA = "0x125E33C")]
		public bool IsHoverTargetOverlay(ulong ulOverlayHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x6000871")]
		[Address(RVA = "0x125E358", Offset = "0x125E358", VA = "0x125E358")]
		public ulong GetGamepadFocusOverlay()
		{
			return default(ulong);
		}

		[Token(Token = "0x6000872")]
		[Address(RVA = "0x125E374", Offset = "0x125E374", VA = "0x125E374")]
		public EVROverlayError SetGamepadFocusOverlay(ulong ulNewFocusOverlay)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000873")]
		[Address(RVA = "0x125E390", Offset = "0x125E390", VA = "0x125E390")]
		public EVROverlayError SetOverlayNeighbor(EOverlayDirection eDirection, ulong ulFrom, ulong ulTo)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000874")]
		[Address(RVA = "0x125E3AC", Offset = "0x125E3AC", VA = "0x125E3AC")]
		public EVROverlayError MoveGamepadFocusToNeighbor(EOverlayDirection eDirection, ulong ulFrom)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000875")]
		[Address(RVA = "0x125E3C8", Offset = "0x125E3C8", VA = "0x125E3C8")]
		public EVROverlayError SetOverlayDualAnalogTransform(ulong ulOverlay, EDualAnalogWhich eWhich, IntPtr vCenter, float fRadius)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000876")]
		[Address(RVA = "0x125E3E4", Offset = "0x125E3E4", VA = "0x125E3E4")]
		public EVROverlayError GetOverlayDualAnalogTransform(ulong ulOverlay, EDualAnalogWhich eWhich, ref HmdVector2_t pvCenter, ref float pfRadius)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000877")]
		[Address(RVA = "0x125E404", Offset = "0x125E404", VA = "0x125E404")]
		public EVROverlayError SetOverlayTexture(ulong ulOverlayHandle, ref Texture_t pTexture)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000878")]
		[Address(RVA = "0x125E420", Offset = "0x125E420", VA = "0x125E420")]
		public EVROverlayError ClearOverlayTexture(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000879")]
		[Address(RVA = "0x125E43C", Offset = "0x125E43C", VA = "0x125E43C")]
		public EVROverlayError SetOverlayRaw(ulong ulOverlayHandle, IntPtr pvBuffer, uint unWidth, uint unHeight, uint unDepth)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600087A")]
		[Address(RVA = "0x125E458", Offset = "0x125E458", VA = "0x125E458")]
		public EVROverlayError SetOverlayFromFile(ulong ulOverlayHandle, string pchFilePath)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600087B")]
		[Address(RVA = "0x125E474", Offset = "0x125E474", VA = "0x125E474")]
		public EVROverlayError GetOverlayTexture(ulong ulOverlayHandle, ref IntPtr pNativeTextureHandle, IntPtr pNativeTextureRef, ref uint pWidth, ref uint pHeight, ref uint pNativeFormat, ref ETextureType pAPIType, ref EColorSpace pColorSpace, ref VRTextureBounds_t pTextureBounds)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600087C")]
		[Address(RVA = "0x125E4A8", Offset = "0x125E4A8", VA = "0x125E4A8")]
		public EVROverlayError ReleaseNativeOverlayHandle(ulong ulOverlayHandle, IntPtr pNativeTextureHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600087D")]
		[Address(RVA = "0x125E4C4", Offset = "0x125E4C4", VA = "0x125E4C4")]
		public EVROverlayError GetOverlayTextureSize(ulong ulOverlayHandle, ref uint pWidth, ref uint pHeight)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600087E")]
		[Address(RVA = "0x125E4E8", Offset = "0x125E4E8", VA = "0x125E4E8")]
		public EVROverlayError CreateDashboardOverlay(string pchOverlayKey, string pchOverlayFriendlyName, ref ulong pMainHandle, ref ulong pThumbnailHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600087F")]
		[Address(RVA = "0x125E50C", Offset = "0x125E50C", VA = "0x125E50C")]
		public bool IsDashboardVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x6000880")]
		[Address(RVA = "0x125E528", Offset = "0x125E528", VA = "0x125E528")]
		public bool IsActiveDashboardOverlay(ulong ulOverlayHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x6000881")]
		[Address(RVA = "0x125E544", Offset = "0x125E544", VA = "0x125E544")]
		public EVROverlayError SetDashboardOverlaySceneProcess(ulong ulOverlayHandle, uint unProcessId)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000882")]
		[Address(RVA = "0x125E560", Offset = "0x125E560", VA = "0x125E560")]
		public EVROverlayError GetDashboardOverlaySceneProcess(ulong ulOverlayHandle, ref uint punProcessId)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000883")]
		[Address(RVA = "0x125E580", Offset = "0x125E580", VA = "0x125E580")]
		public void ShowDashboard(string pchOverlayToShow)
		{
		}

		[Token(Token = "0x6000884")]
		[Address(RVA = "0x125E59C", Offset = "0x125E59C", VA = "0x125E59C")]
		public uint GetPrimaryDashboardDevice()
		{
			return default(uint);
		}

		[Token(Token = "0x6000885")]
		[Address(RVA = "0x125E5B8", Offset = "0x125E5B8", VA = "0x125E5B8")]
		public EVROverlayError ShowKeyboard(int eInputMode, int eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText, bool bUseMinimalMode, ulong uUserValue)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000886")]
		[Address(RVA = "0x125E5DC", Offset = "0x125E5DC", VA = "0x125E5DC")]
		public EVROverlayError ShowKeyboardForOverlay(ulong ulOverlayHandle, int eInputMode, int eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText, bool bUseMinimalMode, ulong uUserValue)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6000887")]
		[Address(RVA = "0x125E604", Offset = "0x125E604", VA = "0x125E604")]
		public uint GetKeyboardText(StringBuilder pchText, uint cchText)
		{
			return default(uint);
		}

		[Token(Token = "0x6000888")]
		[Address(RVA = "0x125E620", Offset = "0x125E620", VA = "0x125E620")]
		public void HideKeyboard()
		{
		}

		[Token(Token = "0x6000889")]
		[Address(RVA = "0x125E63C", Offset = "0x125E63C", VA = "0x125E63C")]
		public void SetKeyboardTransformAbsolute(ETrackingUniverseOrigin eTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToKeyboardTransform)
		{
		}

		[Token(Token = "0x600088A")]
		[Address(RVA = "0x125E658", Offset = "0x125E658", VA = "0x125E658")]
		public void SetKeyboardPositionForOverlay(ulong ulOverlayHandle, HmdRect2_t avoidRect)
		{
		}

		[Token(Token = "0x600088B")]
		[Address(RVA = "0x125E674", Offset = "0x125E674", VA = "0x125E674")]
		public EVROverlayError SetOverlayIntersectionMask(ulong ulOverlayHandle, ref VROverlayIntersectionMaskPrimitive_t pMaskPrimitives, uint unNumMaskPrimitives, uint unPrimitiveSize)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600088C")]
		[Address(RVA = "0x125E690", Offset = "0x125E690", VA = "0x125E690")]
		public EVROverlayError GetOverlayFlags(ulong ulOverlayHandle, ref uint pFlags)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600088D")]
		[Address(RVA = "0x125E6B0", Offset = "0x125E6B0", VA = "0x125E6B0")]
		public VRMessageOverlayResponse ShowMessageOverlay(string pchText, string pchCaption, string pchButton0Text, string pchButton1Text, string pchButton2Text, string pchButton3Text)
		{
			return default(VRMessageOverlayResponse);
		}

		[Token(Token = "0x600088E")]
		[Address(RVA = "0x125E6CC", Offset = "0x125E6CC", VA = "0x125E6CC")]
		public void CloseMessageOverlay()
		{
		}
	}
	[Token(Token = "0x20000AA")]
	public class CVRRenderModels
	{
		[Token(Token = "0x20003EF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCB08B0", Offset = "0xCB08B0")]
		internal delegate bool _GetComponentStatePacked(string pchRenderModelName, string pchComponentName, ref VRControllerState_t_Packed pControllerState, ref RenderModel_ControllerMode_State_t pState, ref RenderModel_ComponentState_t pComponentState);

		[StructLayout(2)]
		[Token(Token = "0x20003F0")]
		private struct GetComponentStateUnion
		{
			[Token(Token = "0x4000E1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVRRenderModels._GetComponentState pGetComponentState;

			[Token(Token = "0x4000E20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _GetComponentStatePacked pGetComponentStatePacked;
		}

		[Token(Token = "0x4000461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRRenderModels FnTable;

		[Token(Token = "0x600088F")]
		[Address(RVA = "0x125E808", Offset = "0x125E808", VA = "0x125E808")]
		internal CVRRenderModels(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6000890")]
		[Address(RVA = "0x125E91C", Offset = "0x125E91C", VA = "0x125E91C")]
		public EVRRenderModelError LoadRenderModel_Async(string pchRenderModelName, ref IntPtr ppRenderModel)
		{
			return default(EVRRenderModelError);
		}

		[Token(Token = "0x6000891")]
		[Address(RVA = "0x125E938", Offset = "0x125E938", VA = "0x125E938")]
		public void FreeRenderModel(IntPtr pRenderModel)
		{
		}

		[Token(Token = "0x6000892")]
		[Address(RVA = "0x125E954", Offset = "0x125E954", VA = "0x125E954")]
		public EVRRenderModelError LoadTexture_Async(int textureId, ref IntPtr ppTexture)
		{
			return default(EVRRenderModelError);
		}

		[Token(Token = "0x6000893")]
		[Address(RVA = "0x125E970", Offset = "0x125E970", VA = "0x125E970")]
		public void FreeTexture(IntPtr pTexture)
		{
		}

		[Token(Token = "0x6000894")]
		[Address(RVA = "0x125E98C", Offset = "0x125E98C", VA = "0x125E98C")]
		public EVRRenderModelError LoadTextureD3D11_Async(int textureId, IntPtr pD3D11Device, ref IntPtr ppD3D11Texture2D)
		{
			return default(EVRRenderModelError);
		}

		[Token(Token = "0x6000895")]
		[Address(RVA = "0x125E9A8", Offset = "0x125E9A8", VA = "0x125E9A8")]
		public EVRRenderModelError LoadIntoTextureD3D11_Async(int textureId, IntPtr pDstTexture)
		{
			return default(EVRRenderModelError);
		}

		[Token(Token = "0x6000896")]
		[Address(RVA = "0x125E9C4", Offset = "0x125E9C4", VA = "0x125E9C4")]
		public void FreeTextureD3D11(IntPtr pD3D11Texture2D)
		{
		}

		[Token(Token = "0x6000897")]
		[Address(RVA = "0x125E9E0", Offset = "0x125E9E0", VA = "0x125E9E0")]
		public uint GetRenderModelName(uint unRenderModelIndex, StringBuilder pchRenderModelName, uint unRenderModelNameLen)
		{
			return default(uint);
		}

		[Token(Token = "0x6000898")]
		[Address(RVA = "0x125E9FC", Offset = "0x125E9FC", VA = "0x125E9FC")]
		public uint GetRenderModelCount()
		{
			return default(uint);
		}

		[Token(Token = "0x6000899")]
		[Address(RVA = "0x125EA18", Offset = "0x125EA18", VA = "0x125EA18")]
		public uint GetComponentCount(string pchRenderModelName)
		{
			return default(uint);
		}

		[Token(Token = "0x600089A")]
		[Address(RVA = "0x125EA34", Offset = "0x125EA34", VA = "0x125EA34")]
		public uint GetComponentName(string pchRenderModelName, uint unComponentIndex, StringBuilder pchComponentName, uint unComponentNameLen)
		{
			return default(uint);
		}

		[Token(Token = "0x600089B")]
		[Address(RVA = "0x125EA50", Offset = "0x125EA50", VA = "0x125EA50")]
		public ulong GetComponentButtonMask(string pchRenderModelName, string pchComponentName)
		{
			return default(ulong);
		}

		[Token(Token = "0x600089C")]
		[Address(RVA = "0x125EA6C", Offset = "0x125EA6C", VA = "0x125EA6C")]
		public uint GetComponentRenderModelName(string pchRenderModelName, string pchComponentName, StringBuilder pchComponentRenderModelName, uint unComponentRenderModelNameLen)
		{
			return default(uint);
		}

		[Token(Token = "0x600089D")]
		[Address(RVA = "0x125EA88", Offset = "0x125EA88", VA = "0x125EA88")]
		public bool GetComponentState(string pchRenderModelName, string pchComponentName, ref VRControllerState_t pControllerState, ref RenderModel_ControllerMode_State_t pState, ref RenderModel_ComponentState_t pComponentState)
		{
			return default(bool);
		}

		[Token(Token = "0x600089E")]
		[Address(RVA = "0x125F03C", Offset = "0x125F03C", VA = "0x125F03C")]
		public bool RenderModelHasComponent(string pchRenderModelName, string pchComponentName)
		{
			return default(bool);
		}

		[Token(Token = "0x600089F")]
		[Address(RVA = "0x125F058", Offset = "0x125F058", VA = "0x125F058")]
		public uint GetRenderModelThumbnailURL(string pchRenderModelName, StringBuilder pchThumbnailURL, uint unThumbnailURLLen, ref EVRRenderModelError peError)
		{
			return default(uint);
		}

		[Token(Token = "0x60008A0")]
		[Address(RVA = "0x125F074", Offset = "0x125F074", VA = "0x125F074")]
		public uint GetRenderModelOriginalPath(string pchRenderModelName, StringBuilder pchOriginalPath, uint unOriginalPathLen, ref EVRRenderModelError peError)
		{
			return default(uint);
		}

		[Token(Token = "0x60008A1")]
		[Address(RVA = "0x125F090", Offset = "0x125F090", VA = "0x125F090")]
		public string GetRenderModelErrorNameFromEnum(EVRRenderModelError error)
		{
			return null;
		}
	}
	[Token(Token = "0x20000AB")]
	public class CVRNotifications
	{
		[Token(Token = "0x4000462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRNotifications FnTable;

		[Token(Token = "0x60008A2")]
		[Address(RVA = "0x125D66C", Offset = "0x125D66C", VA = "0x125D66C")]
		internal CVRNotifications(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60008A3")]
		[Address(RVA = "0x125D774", Offset = "0x125D774", VA = "0x125D774")]
		public EVRNotificationError CreateNotification(ulong ulOverlayHandle, ulong ulUserValue, EVRNotificationType type, string pchText, EVRNotificationStyle style, ref NotificationBitmap_t pImage, ref uint pNotificationId)
		{
			return default(EVRNotificationError);
		}

		[Token(Token = "0x60008A4")]
		[Address(RVA = "0x125D798", Offset = "0x125D798", VA = "0x125D798")]
		public EVRNotificationError RemoveNotification(uint notificationId)
		{
			return default(EVRNotificationError);
		}
	}
	[Token(Token = "0x20000AC")]
	public class CVRSettings
	{
		[Token(Token = "0x4000463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRSettings FnTable;

		[Token(Token = "0x60008A5")]
		[Address(RVA = "0x125F598", Offset = "0x125F598", VA = "0x125F598")]
		internal CVRSettings(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60008A6")]
		[Address(RVA = "0x125F6AC", Offset = "0x125F6AC", VA = "0x125F6AC")]
		public string GetSettingsErrorNameFromEnum(EVRSettingsError eError)
		{
			return null;
		}

		[Token(Token = "0x60008A7")]
		[Address(RVA = "0x125F740", Offset = "0x125F740", VA = "0x125F740")]
		public bool Sync(bool bForce, ref EVRSettingsError peError)
		{
			return default(bool);
		}

		[Token(Token = "0x60008A8")]
		[Address(RVA = "0x125F760", Offset = "0x125F760", VA = "0x125F760")]
		public void SetBool(string pchSection, string pchSettingsKey, bool bValue, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x60008A9")]
		[Address(RVA = "0x125F780", Offset = "0x125F780", VA = "0x125F780")]
		public void SetInt32(string pchSection, string pchSettingsKey, int nValue, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x60008AA")]
		[Address(RVA = "0x125F79C", Offset = "0x125F79C", VA = "0x125F79C")]
		public void SetFloat(string pchSection, string pchSettingsKey, float flValue, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x60008AB")]
		[Address(RVA = "0x125F7B8", Offset = "0x125F7B8", VA = "0x125F7B8")]
		public void SetString(string pchSection, string pchSettingsKey, string pchValue, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x60008AC")]
		[Address(RVA = "0x125F7D4", Offset = "0x125F7D4", VA = "0x125F7D4")]
		public bool GetBool(string pchSection, string pchSettingsKey, ref EVRSettingsError peError)
		{
			return default(bool);
		}

		[Token(Token = "0x60008AD")]
		[Address(RVA = "0x125F7F0", Offset = "0x125F7F0", VA = "0x125F7F0")]
		public int GetInt32(string pchSection, string pchSettingsKey, ref EVRSettingsError peError)
		{
			return default(int);
		}

		[Token(Token = "0x60008AE")]
		[Address(RVA = "0x125F80C", Offset = "0x125F80C", VA = "0x125F80C")]
		public float GetFloat(string pchSection, string pchSettingsKey, ref EVRSettingsError peError)
		{
			return default(float);
		}

		[Token(Token = "0x60008AF")]
		[Address(RVA = "0x125F828", Offset = "0x125F828", VA = "0x125F828")]
		public void GetString(string pchSection, string pchSettingsKey, StringBuilder pchValue, uint unValueLen, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x60008B0")]
		[Address(RVA = "0x125F844", Offset = "0x125F844", VA = "0x125F844")]
		public void RemoveSection(string pchSection, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x60008B1")]
		[Address(RVA = "0x125F860", Offset = "0x125F860", VA = "0x125F860")]
		public void RemoveKeyInSection(string pchSection, string pchSettingsKey, ref EVRSettingsError peError)
		{
		}
	}
	[Token(Token = "0x20000AD")]
	public class CVRScreenshots
	{
		[Token(Token = "0x4000464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRScreenshots FnTable;

		[Token(Token = "0x60008B2")]
		[Address(RVA = "0x125F3A4", Offset = "0x125F3A4", VA = "0x125F3A4")]
		internal CVRScreenshots(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60008B3")]
		[Address(RVA = "0x125F4C0", Offset = "0x125F4C0", VA = "0x125F4C0")]
		public EVRScreenshotError RequestScreenshot(ref uint pOutScreenshotHandle, EVRScreenshotType type, string pchPreviewFilename, string pchVRFilename)
		{
			return default(EVRScreenshotError);
		}

		[Token(Token = "0x60008B4")]
		[Address(RVA = "0x125F4E0", Offset = "0x125F4E0", VA = "0x125F4E0")]
		public EVRScreenshotError HookScreenshot(EVRScreenshotType[] pSupportedTypes)
		{
			return default(EVRScreenshotError);
		}

		[Token(Token = "0x60008B5")]
		[Address(RVA = "0x125F508", Offset = "0x125F508", VA = "0x125F508")]
		public EVRScreenshotType GetScreenshotPropertyType(uint screenshotHandle, ref EVRScreenshotError pError)
		{
			return default(EVRScreenshotType);
		}

		[Token(Token = "0x60008B6")]
		[Address(RVA = "0x125F524", Offset = "0x125F524", VA = "0x125F524")]
		public uint GetScreenshotPropertyFilename(uint screenshotHandle, EVRScreenshotPropertyFilenames filenameType, StringBuilder pchFilename, uint cchFilename, ref EVRScreenshotError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x60008B7")]
		[Address(RVA = "0x125F540", Offset = "0x125F540", VA = "0x125F540")]
		public EVRScreenshotError UpdateScreenshotProgress(uint screenshotHandle, float flProgress)
		{
			return default(EVRScreenshotError);
		}

		[Token(Token = "0x60008B8")]
		[Address(RVA = "0x125F55C", Offset = "0x125F55C", VA = "0x125F55C")]
		public EVRScreenshotError TakeStereoScreenshot(ref uint pOutScreenshotHandle, string pchPreviewFilename, string pchVRFilename)
		{
			return default(EVRScreenshotError);
		}

		[Token(Token = "0x60008B9")]
		[Address(RVA = "0x125F57C", Offset = "0x125F57C", VA = "0x125F57C")]
		public EVRScreenshotError SubmitScreenshot(uint screenshotHandle, EVRScreenshotType type, string pchSourcePreviewFilename, string pchSourceVRFilename)
		{
			return default(EVRScreenshotError);
		}
	}
	[Token(Token = "0x20000AE")]
	public class CVRResources
	{
		[Token(Token = "0x4000465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRResources FnTable;

		[Token(Token = "0x60008BA")]
		[Address(RVA = "0x125F264", Offset = "0x125F264", VA = "0x125F264")]
		internal CVRResources(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60008BB")]
		[Address(RVA = "0x125F36C", Offset = "0x125F36C", VA = "0x125F36C")]
		public uint LoadSharedResource(string pchResourceName, string pchBuffer, uint unBufferLen)
		{
			return default(uint);
		}

		[Token(Token = "0x60008BC")]
		[Address(RVA = "0x125F388", Offset = "0x125F388", VA = "0x125F388")]
		public uint GetResourceFullPath(string pchResourceName, string pchResourceTypeDirectory, StringBuilder pchPathBuffer, uint unBufferLen)
		{
			return default(uint);
		}
	}
	[Token(Token = "0x20000AF")]
	public class CVRDriverManager
	{
		[Token(Token = "0x4000466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRDriverManager FnTable;

		[Token(Token = "0x60008BD")]
		[Address(RVA = "0x125D37C", Offset = "0x125D37C", VA = "0x125D37C")]
		internal CVRDriverManager(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60008BE")]
		[Address(RVA = "0x125D48C", Offset = "0x125D48C", VA = "0x125D48C")]
		public uint GetDriverCount()
		{
			return default(uint);
		}

		[Token(Token = "0x60008BF")]
		[Address(RVA = "0x125D4A8", Offset = "0x125D4A8", VA = "0x125D4A8")]
		public uint GetDriverName(uint nDriver, StringBuilder pchValue, uint unBufferSize)
		{
			return default(uint);
		}

		[Token(Token = "0x60008C0")]
		[Address(RVA = "0x125D4C4", Offset = "0x125D4C4", VA = "0x125D4C4")]
		public ulong GetDriverHandle(string pchDriverName)
		{
			return default(ulong);
		}
	}
	[Token(Token = "0x20000B0")]
	public class OpenVRInterop
	{
		[PreserveSig]
		[Token(Token = "0x60008C1")]
		[Address(RVA = "0x1563160", Offset = "0x1563160", VA = "0x1563160")]
		internal static extern uint InitInternal(ref EVRInitError peError, EVRApplicationType eApplicationType);

		[PreserveSig]
		[Token(Token = "0x60008C2")]
		[Address(RVA = "0x15631F4", Offset = "0x15631F4", VA = "0x15631F4")]
		internal static extern void ShutdownInternal();

		[PreserveSig]
		[Token(Token = "0x60008C3")]
		[Address(RVA = "0x1563268", Offset = "0x1563268", VA = "0x1563268")]
		internal static extern bool IsHmdPresent();

		[PreserveSig]
		[Token(Token = "0x60008C4")]
		[Address(RVA = "0x15632E8", Offset = "0x15632E8", VA = "0x15632E8")]
		internal static extern bool IsRuntimeInstalled();

		[PreserveSig]
		[Token(Token = "0x60008C5")]
		[Address(RVA = "0x15633DC", Offset = "0x15633DC", VA = "0x15633DC")]
		internal static extern IntPtr GetStringForHmdError(EVRInitError error);

		[PreserveSig]
		[Token(Token = "0x60008C6")]
		[Address(RVA = "0x1563460", Offset = "0x1563460", VA = "0x1563460")]
		internal static extern IntPtr GetGenericInterface([In] string pchInterfaceVersion, ref EVRInitError peError);

		[PreserveSig]
		[Token(Token = "0x60008C7")]
		[Address(RVA = "0x156350C", Offset = "0x156350C", VA = "0x156350C")]
		internal static extern bool IsInterfaceVersionValid([In] string pchInterfaceVersion);

		[PreserveSig]
		[Token(Token = "0x60008C8")]
		[Address(RVA = "0x15635AC", Offset = "0x15635AC", VA = "0x15635AC")]
		internal static extern uint GetInitToken();

		[Token(Token = "0x60008C9")]
		[Address(RVA = "0x1564890", Offset = "0x1564890", VA = "0x1564890")]
		public OpenVRInterop()
		{
		}
	}
	[Token(Token = "0x20000B1")]
	public enum EVREye
	{
		[Token(Token = "0x4000468")]
		Eye_Left,
		[Token(Token = "0x4000469")]
		Eye_Right
	}
	[Token(Token = "0x20000B2")]
	public enum ETextureType
	{
		[Token(Token = "0x400046B")]
		DirectX,
		[Token(Token = "0x400046C")]
		OpenGL,
		[Token(Token = "0x400046D")]
		Vulkan,
		[Token(Token = "0x400046E")]
		IOSurface,
		[Token(Token = "0x400046F")]
		DirectX12,
		[Token(Token = "0x4000470")]
		DXGISharedHandle
	}
	[Token(Token = "0x20000B3")]
	public enum EColorSpace
	{
		[Token(Token = "0x4000472")]
		Auto,
		[Token(Token = "0x4000473")]
		Gamma,
		[Token(Token = "0x4000474")]
		Linear
	}
	[Token(Token = "0x20000B4")]
	public enum ETrackingResult
	{
		[Token(Token = "0x4000476")]
		Uninitialized = 1,
		[Token(Token = "0x4000477")]
		Calibrating_InProgress = 100,
		[Token(Token = "0x4000478")]
		Calibrating_OutOfRange = 101,
		[Token(Token = "0x4000479")]
		Running_OK = 200,
		[Token(Token = "0x400047A")]
		Running_OutOfRange = 201
	}
	[Token(Token = "0x20000B5")]
	public enum ETrackedDeviceClass
	{
		[Token(Token = "0x400047C")]
		Invalid,
		[Token(Token = "0x400047D")]
		HMD,
		[Token(Token = "0x400047E")]
		Controller,
		[Token(Token = "0x400047F")]
		GenericTracker,
		[Token(Token = "0x4000480")]
		TrackingReference,
		[Token(Token = "0x4000481")]
		DisplayRedirect
	}
	[Token(Token = "0x20000B6")]
	public enum ETrackedControllerRole
	{
		[Token(Token = "0x4000483")]
		Invalid,
		[Token(Token = "0x4000484")]
		LeftHand,
		[Token(Token = "0x4000485")]
		RightHand,
		[Token(Token = "0x4000486")]
		OptOut
	}
	[Token(Token = "0x20000B7")]
	public enum ETrackingUniverseOrigin
	{
		[Token(Token = "0x4000488")]
		TrackingUniverseSeated,
		[Token(Token = "0x4000489")]
		TrackingUniverseStanding,
		[Token(Token = "0x400048A")]
		TrackingUniverseRawAndUncalibrated
	}
	[Token(Token = "0x20000B8")]
	public enum ETrackedDeviceProperty
	{
		[Token(Token = "0x400048C")]
		Prop_Invalid = 0,
		[Token(Token = "0x400048D")]
		Prop_TrackingSystemName_String = 1000,
		[Token(Token = "0x400048E")]
		Prop_ModelNumber_String = 1001,
		[Token(Token = "0x400048F")]
		Prop_SerialNumber_String = 1002,
		[Token(Token = "0x4000490")]
		Prop_RenderModelName_String = 1003,
		[Token(Token = "0x4000491")]
		Prop_WillDriftInYaw_Bool = 1004,
		[Token(Token = "0x4000492")]
		Prop_ManufacturerName_String = 1005,
		[Token(Token = "0x4000493")]
		Prop_TrackingFirmwareVersion_String = 1006,
		[Token(Token = "0x4000494")]
		Prop_HardwareRevision_String = 1007,
		[Token(Token = "0x4000495")]
		Prop_AllWirelessDongleDescriptions_String = 1008,
		[Token(Token = "0x4000496")]
		Prop_ConnectedWirelessDongle_String = 1009,
		[Token(Token = "0x4000497")]
		Prop_DeviceIsWireless_Bool = 1010,
		[Token(Token = "0x4000498")]
		Prop_DeviceIsCharging_Bool = 1011,
		[Token(Token = "0x4000499")]
		Prop_DeviceBatteryPercentage_Float = 1012,
		[Token(Token = "0x400049A")]
		Prop_StatusDisplayTransform_Matrix34 = 1013,
		[Token(Token = "0x400049B")]
		Prop_Firmware_UpdateAvailable_Bool = 1014,
		[Token(Token = "0x400049C")]
		Prop_Firmware_ManualUpdate_Bool = 1015,
		[Token(Token = "0x400049D")]
		Prop_Firmware_ManualUpdateURL_String = 1016,
		[Token(Token = "0x400049E")]
		Prop_HardwareRevision_Uint64 = 1017,
		[Token(Token = "0x400049F")]
		Prop_FirmwareVersion_Uint64 = 1018,
		[Token(Token = "0x40004A0")]
		Prop_FPGAVersion_Uint64 = 1019,
		[Token(Token = "0x40004A1")]
		Prop_VRCVersion_Uint64 = 1020,
		[Token(Token = "0x40004A2")]
		Prop_RadioVersion_Uint64 = 1021,
		[Token(Token = "0x40004A3")]
		Prop_DongleVersion_Uint64 = 1022,
		[Token(Token = "0x40004A4")]
		Prop_BlockServerShutdown_Bool = 1023,
		[Token(Token = "0x40004A5")]
		Prop_CanUnifyCoordinateSystemWithHmd_Bool = 1024,
		[Token(Token = "0x40004A6")]
		Prop_ContainsProximitySensor_Bool = 1025,
		[Token(Token = "0x40004A7")]
		Prop_DeviceProvidesBatteryStatus_Bool = 1026,
		[Token(Token = "0x40004A8")]
		Prop_DeviceCanPowerOff_Bool = 1027,
		[Token(Token = "0x40004A9")]
		Prop_Firmware_ProgrammingTarget_String = 1028,
		[Token(Token = "0x40004AA")]
		Prop_DeviceClass_Int32 = 1029,
		[Token(Token = "0x40004AB")]
		Prop_HasCamera_Bool = 1030,
		[Token(Token = "0x40004AC")]
		Prop_DriverVersion_String = 1031,
		[Token(Token = "0x40004AD")]
		Prop_Firmware_ForceUpdateRequired_Bool = 1032,
		[Token(Token = "0x40004AE")]
		Prop_ViveSystemButtonFixRequired_Bool = 1033,
		[Token(Token = "0x40004AF")]
		Prop_ParentDriver_Uint64 = 1034,
		[Token(Token = "0x40004B0")]
		Prop_ResourceRoot_String = 1035,
		[Token(Token = "0x40004B1")]
		Prop_RegisteredDeviceType_String = 1036,
		[Token(Token = "0x40004B2")]
		Prop_InputProfilePath_String = 1037,
		[Token(Token = "0x40004B3")]
		Prop_NeverTracked_Bool = 1038,
		[Token(Token = "0x40004B4")]
		Prop_ReportsTimeSinceVSync_Bool = 2000,
		[Token(Token = "0x40004B5")]
		Prop_SecondsFromVsyncToPhotons_Float = 2001,
		[Token(Token = "0x40004B6")]
		Prop_DisplayFrequency_Float = 2002,
		[Token(Token = "0x40004B7")]
		Prop_UserIpdMeters_Float = 2003,
		[Token(Token = "0x40004B8")]
		Prop_CurrentUniverseId_Uint64 = 2004,
		[Token(Token = "0x40004B9")]
		Prop_PreviousUniverseId_Uint64 = 2005,
		[Token(Token = "0x40004BA")]
		Prop_DisplayFirmwareVersion_Uint64 = 2006,
		[Token(Token = "0x40004BB")]
		Prop_IsOnDesktop_Bool = 2007,
		[Token(Token = "0x40004BC")]
		Prop_DisplayMCType_Int32 = 2008,
		[Token(Token = "0x40004BD")]
		Prop_DisplayMCOffset_Float = 2009,
		[Token(Token = "0x40004BE")]
		Prop_DisplayMCScale_Float = 2010,
		[Token(Token = "0x40004BF")]
		Prop_EdidVendorID_Int32 = 2011,
		[Token(Token = "0x40004C0")]
		Prop_DisplayMCImageLeft_String = 2012,
		[Token(Token = "0x40004C1")]
		Prop_DisplayMCImageRight_String = 2013,
		[Token(Token = "0x40004C2")]
		Prop_DisplayGCBlackClamp_Float = 2014,
		[Token(Token = "0x40004C3")]
		Prop_EdidProductID_Int32 = 2015,
		[Token(Token = "0x40004C4")]
		Prop_CameraToHeadTransform_Matrix34 = 2016,
		[Token(Token = "0x40004C5")]
		Prop_DisplayGCType_Int32 = 2017,
		[Token(Token = "0x40004C6")]
		Prop_DisplayGCOffset_Float = 2018,
		[Token(Token = "0x40004C7")]
		Prop_DisplayGCScale_Float = 2019,
		[Token(Token = "0x40004C8")]
		Prop_DisplayGCPrescale_Float = 2020,
		[Token(Token = "0x40004C9")]
		Prop_DisplayGCImage_String = 2021,
		[Token(Token = "0x40004CA")]
		Prop_LensCenterLeftU_Float = 2022,
		[Token(Token = "0x40004CB")]
		Prop_LensCenterLeftV_Float = 2023,
		[Token(Token = "0x40004CC")]
		Prop_LensCenterRightU_Float = 2024,
		[Token(Token = "0x40004CD")]
		Prop_LensCenterRightV_Float = 2025,
		[Token(Token = "0x40004CE")]
		Prop_UserHeadToEyeDepthMeters_Float = 2026,
		[Token(Token = "0x40004CF")]
		Prop_CameraFirmwareVersion_Uint64 = 2027,
		[Token(Token = "0x40004D0")]
		Prop_CameraFirmwareDescription_String = 2028,
		[Token(Token = "0x40004D1")]
		Prop_DisplayFPGAVersion_Uint64 = 2029,
		[Token(Token = "0x40004D2")]
		Prop_DisplayBootloaderVersion_Uint64 = 2030,
		[Token(Token = "0x40004D3")]
		Prop_DisplayHardwareVersion_Uint64 = 2031,
		[Token(Token = "0x40004D4")]
		Prop_AudioFirmwareVersion_Uint64 = 2032,
		[Token(Token = "0x40004D5")]
		Prop_CameraCompatibilityMode_Int32 = 2033,
		[Token(Token = "0x40004D6")]
		Prop_ScreenshotHorizontalFieldOfViewDegrees_Float = 2034,
		[Token(Token = "0x40004D7")]
		Prop_ScreenshotVerticalFieldOfViewDegrees_Float = 2035,
		[Token(Token = "0x40004D8")]
		Prop_DisplaySuppressed_Bool = 2036,
		[Token(Token = "0x40004D9")]
		Prop_DisplayAllowNightMode_Bool = 2037,
		[Token(Token = "0x40004DA")]
		Prop_DisplayMCImageWidth_Int32 = 2038,
		[Token(Token = "0x40004DB")]
		Prop_DisplayMCImageHeight_Int32 = 2039,
		[Token(Token = "0x40004DC")]
		Prop_DisplayMCImageNumChannels_Int32 = 2040,
		[Token(Token = "0x40004DD")]
		Prop_DisplayMCImageData_Binary = 2041,
		[Token(Token = "0x40004DE")]
		Prop_SecondsFromPhotonsToVblank_Float = 2042,
		[Token(Token = "0x40004DF")]
		Prop_DriverDirectModeSendsVsyncEvents_Bool = 2043,
		[Token(Token = "0x40004E0")]
		Prop_DisplayDebugMode_Bool = 2044,
		[Token(Token = "0x40004E1")]
		Prop_GraphicsAdapterLuid_Uint64 = 2045,
		[Token(Token = "0x40004E2")]
		Prop_DriverProvidedChaperonePath_String = 2048,
		[Token(Token = "0x40004E3")]
		Prop_ExpectedTrackingReferenceCount_Int32 = 2049,
		[Token(Token = "0x40004E4")]
		Prop_ExpectedControllerCount_Int32 = 2050,
		[Token(Token = "0x40004E5")]
		Prop_NamedIconPathControllerLeftDeviceOff_String = 2051,
		[Token(Token = "0x40004E6")]
		Prop_NamedIconPathControllerRightDeviceOff_String = 2052,
		[Token(Token = "0x40004E7")]
		Prop_NamedIconPathTrackingReferenceDeviceOff_String = 2053,
		[Token(Token = "0x40004E8")]
		Prop_DoNotApplyPrediction_Bool = 2054,
		[Token(Token = "0x40004E9")]
		Prop_CameraToHeadTransforms_Matrix34_Array = 2055,
		[Token(Token = "0x40004EA")]
		Prop_DistortionMeshResolution_Int32 = 2056,
		[Token(Token = "0x40004EB")]
		Prop_DriverIsDrawingControllers_Bool = 2057,
		[Token(Token = "0x40004EC")]
		Prop_DriverRequestsApplicationPause_Bool = 2058,
		[Token(Token = "0x40004ED")]
		Prop_DriverRequestsReducedRendering_Bool = 2059,
		[Token(Token = "0x40004EE")]
		Prop_MinimumIpdStepMeters_Float = 2060,
		[Token(Token = "0x40004EF")]
		Prop_AudioBridgeFirmwareVersion_Uint64 = 2061,
		[Token(Token = "0x40004F0")]
		Prop_ImageBridgeFirmwareVersion_Uint64 = 2062,
		[Token(Token = "0x40004F1")]
		Prop_AttachedDeviceId_String = 3000,
		[Token(Token = "0x40004F2")]
		Prop_SupportedButtons_Uint64 = 3001,
		[Token(Token = "0x40004F3")]
		Prop_Axis0Type_Int32 = 3002,
		[Token(Token = "0x40004F4")]
		Prop_Axis1Type_Int32 = 3003,
		[Token(Token = "0x40004F5")]
		Prop_Axis2Type_Int32 = 3004,
		[Token(Token = "0x40004F6")]
		Prop_Axis3Type_Int32 = 3005,
		[Token(Token = "0x40004F7")]
		Prop_Axis4Type_Int32 = 3006,
		[Token(Token = "0x40004F8")]
		Prop_ControllerRoleHint_Int32 = 3007,
		[Token(Token = "0x40004F9")]
		Prop_FieldOfViewLeftDegrees_Float = 4000,
		[Token(Token = "0x40004FA")]
		Prop_FieldOfViewRightDegrees_Float = 4001,
		[Token(Token = "0x40004FB")]
		Prop_FieldOfViewTopDegrees_Float = 4002,
		[Token(Token = "0x40004FC")]
		Prop_FieldOfViewBottomDegrees_Float = 4003,
		[Token(Token = "0x40004FD")]
		Prop_TrackingRangeMinimumMeters_Float = 4004,
		[Token(Token = "0x40004FE")]
		Prop_TrackingRangeMaximumMeters_Float = 4005,
		[Token(Token = "0x40004FF")]
		Prop_ModeLabel_String = 4006,
		[Token(Token = "0x4000500")]
		Prop_IconPathName_String = 5000,
		[Token(Token = "0x4000501")]
		Prop_NamedIconPathDeviceOff_String = 5001,
		[Token(Token = "0x4000502")]
		Prop_NamedIconPathDeviceSearching_String = 5002,
		[Token(Token = "0x4000503")]
		Prop_NamedIconPathDeviceSearchingAlert_String = 5003,
		[Token(Token = "0x4000504")]
		Prop_NamedIconPathDeviceReady_String = 5004,
		[Token(Token = "0x4000505")]
		Prop_NamedIconPathDeviceReadyAlert_String = 5005,
		[Token(Token = "0x4000506")]
		Prop_NamedIconPathDeviceNotReady_String = 5006,
		[Token(Token = "0x4000507")]
		Prop_NamedIconPathDeviceStandby_String = 5007,
		[Token(Token = "0x4000508")]
		Prop_NamedIconPathDeviceAlertLow_String = 5008,
		[Token(Token = "0x4000509")]
		Prop_DisplayHiddenArea_Binary_Start = 5100,
		[Token(Token = "0x400050A")]
		Prop_DisplayHiddenArea_Binary_End = 5150,
		[Token(Token = "0x400050B")]
		Prop_ParentContainer = 5151,
		[Token(Token = "0x400050C")]
		Prop_UserConfigPath_String = 6000,
		[Token(Token = "0x400050D")]
		Prop_InstallPath_String = 6001,
		[Token(Token = "0x400050E")]
		Prop_HasDisplayComponent_Bool = 6002,
		[Token(Token = "0x400050F")]
		Prop_HasControllerComponent_Bool = 6003,
		[Token(Token = "0x4000510")]
		Prop_HasCameraComponent_Bool = 6004,
		[Token(Token = "0x4000511")]
		Prop_HasDriverDirectModeComponent_Bool = 6005,
		[Token(Token = "0x4000512")]
		Prop_HasVirtualDisplayComponent_Bool = 6006,
		[Token(Token = "0x4000513")]
		Prop_ControllerType_String = 7000,
		[Token(Token = "0x4000514")]
		Prop_LegacyInputProfile_String = 7001,
		[Token(Token = "0x4000515")]
		Prop_VendorSpecific_Reserved_Start = 10000,
		[Token(Token = "0x4000516")]
		Prop_VendorSpecific_Reserved_End = 10999,
		[Token(Token = "0x4000517")]
		Prop_TrackedDeviceProperty_Max = 1000000
	}
	[Token(Token = "0x20000B9")]
	public enum ETrackedPropertyError
	{
		[Token(Token = "0x4000519")]
		TrackedProp_Success,
		[Token(Token = "0x400051A")]
		TrackedProp_WrongDataType,
		[Token(Token = "0x400051B")]
		TrackedProp_WrongDeviceClass,
		[Token(Token = "0x400051C")]
		TrackedProp_BufferTooSmall,
		[Token(Token = "0x400051D")]
		TrackedProp_UnknownProperty,
		[Token(Token = "0x400051E")]
		TrackedProp_InvalidDevice,
		[Token(Token = "0x400051F")]
		TrackedProp_CouldNotContactServer,
		[Token(Token = "0x4000520")]
		TrackedProp_ValueNotProvidedByDevice,
		[Token(Token = "0x4000521")]
		TrackedProp_StringExceedsMaximumLength,
		[Token(Token = "0x4000522")]
		TrackedProp_NotYetAvailable,
		[Token(Token = "0x4000523")]
		TrackedProp_PermissionDenied,
		[Token(Token = "0x4000524")]
		TrackedProp_InvalidOperation,
		[Token(Token = "0x4000525")]
		TrackedProp_CannotWriteToWildcards
	}
	[Token(Token = "0x20000BA")]
	public enum EVRSubmitFlags
	{
		[Token(Token = "0x4000527")]
		Submit_Default = 0,
		[Token(Token = "0x4000528")]
		Submit_LensDistortionAlreadyApplied = 1,
		[Token(Token = "0x4000529")]
		Submit_GlRenderBuffer = 2,
		[Token(Token = "0x400052A")]
		Submit_Reserved = 4,
		[Token(Token = "0x400052B")]
		Submit_TextureWithPose = 8,
		[Token(Token = "0x400052C")]
		Submit_TextureWithDepth = 0x10
	}
	[Token(Token = "0x20000BB")]
	public enum EVRState
	{
		[Token(Token = "0x400052E")]
		Undefined = -1,
		[Token(Token = "0x400052F")]
		Off,
		[Token(Token = "0x4000530")]
		Searching,
		[Token(Token = "0x4000531")]
		Searching_Alert,
		[Token(Token = "0x4000532")]
		Ready,
		[Token(Token = "0x4000533")]
		Ready_Alert,
		[Token(Token = "0x4000534")]
		NotReady,
		[Token(Token = "0x4000535")]
		Standby,
		[Token(Token = "0x4000536")]
		Ready_Alert_Low
	}
	[Token(Token = "0x20000BC")]
	public enum EVREventType
	{
		[Token(Token = "0x4000538")]
		VREvent_None = 0,
		[Token(Token = "0x4000539")]
		VREvent_TrackedDeviceActivated = 100,
		[Token(Token = "0x400053A")]
		VREvent_TrackedDeviceDeactivated = 101,
		[Token(Token = "0x400053B")]
		VREvent_TrackedDeviceUpdated = 102,
		[Token(Token = "0x400053C")]
		VREvent_TrackedDeviceUserInteractionStarted = 103,
		[Token(Token = "0x400053D")]
		VREvent_TrackedDeviceUserInteractionEnded = 104,
		[Token(Token = "0x400053E")]
		VREvent_IpdChanged = 105,
		[Token(Token = "0x400053F")]
		VREvent_EnterStandbyMode = 106,
		[Token(Token = "0x4000540")]
		VREvent_LeaveStandbyMode = 107,
		[Token(Token = "0x4000541")]
		VREvent_TrackedDeviceRoleChanged = 108,
		[Token(Token = "0x4000542")]
		VREvent_WatchdogWakeUpRequested = 109,
		[Token(Token = "0x4000543")]
		VREvent_LensDistortionChanged = 110,
		[Token(Token = "0x4000544")]
		VREvent_PropertyChanged = 111,
		[Token(Token = "0x4000545")]
		VREvent_WirelessDisconnect = 112,
		[Token(Token = "0x4000546")]
		VREvent_WirelessReconnect = 113,
		[Token(Token = "0x4000547")]
		VREvent_ButtonPress = 200,
		[Token(Token = "0x4000548")]
		VREvent_ButtonUnpress = 201,
		[Token(Token = "0x4000549")]
		VREvent_ButtonTouch = 202,
		[Token(Token = "0x400054A")]
		VREvent_ButtonUntouch = 203,
		[Token(Token = "0x400054B")]
		VREvent_DualAnalog_Press = 250,
		[Token(Token = "0x400054C")]
		VREvent_DualAnalog_Unpress = 251,
		[Token(Token = "0x400054D")]
		VREvent_DualAnalog_Touch = 252,
		[Token(Token = "0x400054E")]
		VREvent_DualAnalog_Untouch = 253,
		[Token(Token = "0x400054F")]
		VREvent_DualAnalog_Move = 254,
		[Token(Token = "0x4000550")]
		VREvent_DualAnalog_ModeSwitch1 = 255,
		[Token(Token = "0x4000551")]
		VREvent_DualAnalog_ModeSwitch2 = 256,
		[Token(Token = "0x4000552")]
		VREvent_DualAnalog_Cancel = 257,
		[Token(Token = "0x4000553")]
		VREvent_MouseMove = 300,
		[Token(Token = "0x4000554")]
		VREvent_MouseButtonDown = 301,
		[Token(Token = "0x4000555")]
		VREvent_MouseButtonUp = 302,
		[Token(Token = "0x4000556")]
		VREvent_FocusEnter = 303,
		[Token(Token = "0x4000557")]
		VREvent_FocusLeave = 304,
		[Token(Token = "0x4000558")]
		VREvent_Scroll = 305,
		[Token(Token = "0x4000559")]
		VREvent_TouchPadMove = 306,
		[Token(Token = "0x400055A")]
		VREvent_OverlayFocusChanged = 307,
		[Token(Token = "0x400055B")]
		VREvent_InputFocusCaptured = 400,
		[Token(Token = "0x400055C")]
		VREvent_InputFocusReleased = 401,
		[Token(Token = "0x400055D")]
		VREvent_SceneFocusLost = 402,
		[Token(Token = "0x400055E")]
		VREvent_SceneFocusGained = 403,
		[Token(Token = "0x400055F")]
		VREvent_SceneApplicationChanged = 404,
		[Token(Token = "0x4000560")]
		VREvent_SceneFocusChanged = 405,
		[Token(Token = "0x4000561")]
		VREvent_InputFocusChanged = 406,
		[Token(Token = "0x4000562")]
		VREvent_SceneApplicationSecondaryRenderingStarted = 407,
		[Token(Token = "0x4000563")]
		VREvent_SceneApplicationUsingWrongGraphicsAdapter = 408,
		[Token(Token = "0x4000564")]
		VREvent_HideRenderModels = 410,
		[Token(Token = "0x4000565")]
		VREvent_ShowRenderModels = 411,
		[Token(Token = "0x4000566")]
		VREvent_ConsoleOpened = 420,
		[Token(Token = "0x4000567")]
		VREvent_ConsoleClosed = 421,
		[Token(Token = "0x4000568")]
		VREvent_OverlayShown = 500,
		[Token(Token = "0x4000569")]
		VREvent_OverlayHidden = 501,
		[Token(Token = "0x400056A")]
		VREvent_DashboardActivated = 502,
		[Token(Token = "0x400056B")]
		VREvent_DashboardDeactivated = 503,
		[Token(Token = "0x400056C")]
		VREvent_DashboardThumbSelected = 504,
		[Token(Token = "0x400056D")]
		VREvent_DashboardRequested = 505,
		[Token(Token = "0x400056E")]
		VREvent_ResetDashboard = 506,
		[Token(Token = "0x400056F")]
		VREvent_RenderToast = 507,
		[Token(Token = "0x4000570")]
		VREvent_ImageLoaded = 508,
		[Token(Token = "0x4000571")]
		VREvent_ShowKeyboard = 509,
		[Token(Token = "0x4000572")]
		VREvent_HideKeyboard = 510,
		[Token(Token = "0x4000573")]
		VREvent_OverlayGamepadFocusGained = 511,
		[Token(Token = "0x4000574")]
		VREvent_OverlayGamepadFocusLost = 512,
		[Token(Token = "0x4000575")]
		VREvent_OverlaySharedTextureChanged = 513,
		[Token(Token = "0x4000576")]
		VREvent_ScreenshotTriggered = 516,
		[Token(Token = "0x4000577")]
		VREvent_ImageFailed = 517,
		[Token(Token = "0x4000578")]
		VREvent_DashboardOverlayCreated = 518,
		[Token(Token = "0x4000579")]
		VREvent_SwitchGamepadFocus = 519,
		[Token(Token = "0x400057A")]
		VREvent_RequestScreenshot = 520,
		[Token(Token = "0x400057B")]
		VREvent_ScreenshotTaken = 521,
		[Token(Token = "0x400057C")]
		VREvent_ScreenshotFailed = 522,
		[Token(Token = "0x400057D")]
		VREvent_SubmitScreenshotToDashboard = 523,
		[Token(Token = "0x400057E")]
		VREvent_ScreenshotProgressToDashboard = 524,
		[Token(Token = "0x400057F")]
		VREvent_PrimaryDashboardDeviceChanged = 525,
		[Token(Token = "0x4000580")]
		VREvent_RoomViewShown = 526,
		[Token(Token = "0x4000581")]
		VREvent_RoomViewHidden = 527,
		[Token(Token = "0x4000582")]
		VREvent_Notification_Shown = 600,
		[Token(Token = "0x4000583")]
		VREvent_Notification_Hidden = 601,
		[Token(Token = "0x4000584")]
		VREvent_Notification_BeginInteraction = 602,
		[Token(Token = "0x4000585")]
		VREvent_Notification_Destroyed = 603,
		[Token(Token = "0x4000586")]
		VREvent_Quit = 700,
		[Token(Token = "0x4000587")]
		VREvent_ProcessQuit = 701,
		[Token(Token = "0x4000588")]
		VREvent_QuitAborted_UserPrompt = 702,
		[Token(Token = "0x4000589")]
		VREvent_QuitAcknowledged = 703,
		[Token(Token = "0x400058A")]
		VREvent_DriverRequestedQuit = 704,
		[Token(Token = "0x400058B")]
		VREvent_ChaperoneDataHasChanged = 800,
		[Token(Token = "0x400058C")]
		VREvent_ChaperoneUniverseHasChanged = 801,
		[Token(Token = "0x400058D")]
		VREvent_ChaperoneTempDataHasChanged = 802,
		[Token(Token = "0x400058E")]
		VREvent_ChaperoneSettingsHaveChanged = 803,
		[Token(Token = "0x400058F")]
		VREvent_SeatedZeroPoseReset = 804,
		[Token(Token = "0x4000590")]
		VREvent_AudioSettingsHaveChanged = 820,
		[Token(Token = "0x4000591")]
		VREvent_BackgroundSettingHasChanged = 850,
		[Token(Token = "0x4000592")]
		VREvent_CameraSettingsHaveChanged = 851,
		[Token(Token = "0x4000593")]
		VREvent_ReprojectionSettingHasChanged = 852,
		[Token(Token = "0x4000594")]
		VREvent_ModelSkinSettingsHaveChanged = 853,
		[Token(Token = "0x4000595")]
		VREvent_EnvironmentSettingsHaveChanged = 854,
		[Token(Token = "0x4000596")]
		VREvent_PowerSettingsHaveChanged = 855,
		[Token(Token = "0x4000597")]
		VREvent_EnableHomeAppSettingsHaveChanged = 856,
		[Token(Token = "0x4000598")]
		VREvent_SteamVRSectionSettingChanged = 857,
		[Token(Token = "0x4000599")]
		VREvent_LighthouseSectionSettingChanged = 858,
		[Token(Token = "0x400059A")]
		VREvent_NullSectionSettingChanged = 859,
		[Token(Token = "0x400059B")]
		VREvent_UserInterfaceSectionSettingChanged = 860,
		[Token(Token = "0x400059C")]
		VREvent_NotificationsSectionSettingChanged = 861,
		[Token(Token = "0x400059D")]
		VREvent_KeyboardSectionSettingChanged = 862,
		[Token(Token = "0x400059E")]
		VREvent_PerfSectionSettingChanged = 863,
		[Token(Token = "0x400059F")]
		VREvent_DashboardSectionSettingChanged = 864,
		[Token(Token = "0x40005A0")]
		VREvent_WebInterfaceSectionSettingChanged = 865,
		[Token(Token = "0x40005A1")]
		VREvent_StatusUpdate = 900,
		[Token(Token = "0x40005A2")]
		VREvent_WebInterface_InstallDriverCompleted = 950,
		[Token(Token = "0x40005A3")]
		VREvent_MCImageUpdated = 1000,
		[Token(Token = "0x40005A4")]
		VREvent_FirmwareUpdateStarted = 1100,
		[Token(Token = "0x40005A5")]
		VREvent_FirmwareUpdateFinished = 1101,
		[Token(Token = "0x40005A6")]
		VREvent_KeyboardClosed = 1200,
		[Token(Token = "0x40005A7")]
		VREvent_KeyboardCharInput = 1201,
		[Token(Token = "0x40005A8")]
		VREvent_KeyboardDone = 1202,
		[Token(Token = "0x40005A9")]
		VREvent_ApplicationTransitionStarted = 1300,
		[Token(Token = "0x40005AA")]
		VREvent_ApplicationTransitionAborted = 1301,
		[Token(Token = "0x40005AB")]
		VREvent_ApplicationTransitionNewAppStarted = 1302,
		[Token(Token = "0x40005AC")]
		VREvent_ApplicationListUpdated = 1303,
		[Token(Token = "0x40005AD")]
		VREvent_ApplicationMimeTypeLoad = 1304,
		[Token(Token = "0x40005AE")]
		VREvent_ApplicationTransitionNewAppLaunchComplete = 1305,
		[Token(Token = "0x40005AF")]
		VREvent_ProcessConnected = 1306,
		[Token(Token = "0x40005B0")]
		VREvent_ProcessDisconnected = 1307,
		[Token(Token = "0x40005B1")]
		VREvent_Compositor_MirrorWindowShown = 1400,
		[Token(Token = "0x40005B2")]
		VREvent_Compositor_MirrorWindowHidden = 1401,
		[Token(Token = "0x40005B3")]
		VREvent_Compositor_ChaperoneBoundsShown = 1410,
		[Token(Token = "0x40005B4")]
		VREvent_Compositor_ChaperoneBoundsHidden = 1411,
		[Token(Token = "0x40005B5")]
		VREvent_TrackedCamera_StartVideoStream = 1500,
		[Token(Token = "0x40005B6")]
		VREvent_TrackedCamera_StopVideoStream = 1501,
		[Token(Token = "0x40005B7")]
		VREvent_TrackedCamera_PauseVideoStream = 1502,
		[Token(Token = "0x40005B8")]
		VREvent_TrackedCamera_ResumeVideoStream = 1503,
		[Token(Token = "0x40005B9")]
		VREvent_TrackedCamera_EditingSurface = 1550,
		[Token(Token = "0x40005BA")]
		VREvent_PerformanceTest_EnableCapture = 1600,
		[Token(Token = "0x40005BB")]
		VREvent_PerformanceTest_DisableCapture = 1601,
		[Token(Token = "0x40005BC")]
		VREvent_PerformanceTest_FidelityLevel = 1602,
		[Token(Token = "0x40005BD")]
		VREvent_MessageOverlay_Closed = 1650,
		[Token(Token = "0x40005BE")]
		VREvent_MessageOverlayCloseRequested = 1651,
		[Token(Token = "0x40005BF")]
		VREvent_Input_HapticVibration = 1700,
		[Token(Token = "0x40005C0")]
		VREvent_VendorSpecific_Reserved_Start = 10000,
		[Token(Token = "0x40005C1")]
		VREvent_VendorSpecific_Reserved_End = 19999
	}
	[Token(Token = "0x20000BD")]
	public enum EDeviceActivityLevel
	{
		[Token(Token = "0x40005C3")]
		k_EDeviceActivityLevel_Unknown = -1,
		[Token(Token = "0x40005C4")]
		k_EDeviceActivityLevel_Idle,
		[Token(Token = "0x40005C5")]
		k_EDeviceActivityLevel_UserInteraction,
		[Token(Token = "0x40005C6")]
		k_EDeviceActivityLevel_UserInteraction_Timeout,
		[Token(Token = "0x40005C7")]
		k_EDeviceActivityLevel_Standby
	}
	[Token(Token = "0x20000BE")]
	public enum EVRButtonId
	{
		[Token(Token = "0x40005C9")]
		k_EButton_System = 0,
		[Token(Token = "0x40005CA")]
		k_EButton_ApplicationMenu = 1,
		[Token(Token = "0x40005CB")]
		k_EButton_Grip = 2,
		[Token(Token = "0x40005CC")]
		k_EButton_DPad_Left = 3,
		[Token(Token = "0x40005CD")]
		k_EButton_DPad_Up = 4,
		[Token(Token = "0x40005CE")]
		k_EButton_DPad_Right = 5,
		[Token(Token = "0x40005CF")]
		k_EButton_DPad_Down = 6,
		[Token(Token = "0x40005D0")]
		k_EButton_A = 7,
		[Token(Token = "0x40005D1")]
		k_EButton_ProximitySensor = 31,
		[Token(Token = "0x40005D2")]
		k_EButton_Axis0 = 32,
		[Token(Token = "0x40005D3")]
		k_EButton_Axis1 = 33,
		[Token(Token = "0x40005D4")]
		k_EButton_Axis2 = 34,
		[Token(Token = "0x40005D5")]
		k_EButton_Axis3 = 35,
		[Token(Token = "0x40005D6")]
		k_EButton_Axis4 = 36,
		[Token(Token = "0x40005D7")]
		k_EButton_SteamVR_Touchpad = 32,
		[Token(Token = "0x40005D8")]
		k_EButton_SteamVR_Trigger = 33,
		[Token(Token = "0x40005D9")]
		k_EButton_Dashboard_Back = 2,
		[Token(Token = "0x40005DA")]
		k_EButton_Max = 64
	}
	[Token(Token = "0x20000BF")]
	public enum EVRMouseButton
	{
		[Token(Token = "0x40005DC")]
		Left = 1,
		[Token(Token = "0x40005DD")]
		Right = 2,
		[Token(Token = "0x40005DE")]
		Middle = 4
	}
	[Token(Token = "0x20000C0")]
	public enum EDualAnalogWhich
	{
		[Token(Token = "0x40005E0")]
		k_EDualAnalog_Left,
		[Token(Token = "0x40005E1")]
		k_EDualAnalog_Right
	}
	[Token(Token = "0x20000C1")]
	public enum EVRInputError
	{
		[Token(Token = "0x40005E3")]
		None,
		[Token(Token = "0x40005E4")]
		NameNotFound,
		[Token(Token = "0x40005E5")]
		WrongType,
		[Token(Token = "0x40005E6")]
		InvalidHandle,
		[Token(Token = "0x40005E7")]
		InvalidParam,
		[Token(Token = "0x40005E8")]
		NoSteam,
		[Token(Token = "0x40005E9")]
		MaxCapacityReached,
		[Token(Token = "0x40005EA")]
		IPCError,
		[Token(Token = "0x40005EB")]
		NoActiveActionSet,
		[Token(Token = "0x40005EC")]
		InvalidDevice
	}
	[Token(Token = "0x20000C2")]
	public enum EHiddenAreaMeshType
	{
		[Token(Token = "0x40005EE")]
		k_eHiddenAreaMesh_Standard,
		[Token(Token = "0x40005EF")]
		k_eHiddenAreaMesh_Inverse,
		[Token(Token = "0x40005F0")]
		k_eHiddenAreaMesh_LineLoop,
		[Token(Token = "0x40005F1")]
		k_eHiddenAreaMesh_Max
	}
	[Token(Token = "0x20000C3")]
	public enum EVRControllerAxisType
	{
		[Token(Token = "0x40005F3")]
		k_eControllerAxis_None,
		[Token(Token = "0x40005F4")]
		k_eControllerAxis_TrackPad,
		[Token(Token = "0x40005F5")]
		k_eControllerAxis_Joystick,
		[Token(Token = "0x40005F6")]
		k_eControllerAxis_Trigger
	}
	[Token(Token = "0x20000C4")]
	public enum EVRControllerEventOutputType
	{
		[Token(Token = "0x40005F8")]
		ControllerEventOutput_OSEvents,
		[Token(Token = "0x40005F9")]
		ControllerEventOutput_VREvents
	}
	[Token(Token = "0x20000C5")]
	public enum ECollisionBoundsStyle
	{
		[Token(Token = "0x40005FB")]
		COLLISION_BOUNDS_STYLE_BEGINNER,
		[Token(Token = "0x40005FC")]
		COLLISION_BOUNDS_STYLE_INTERMEDIATE,
		[Token(Token = "0x40005FD")]
		COLLISION_BOUNDS_STYLE_SQUARES,
		[Token(Token = "0x40005FE")]
		COLLISION_BOUNDS_STYLE_ADVANCED,
		[Token(Token = "0x40005FF")]
		COLLISION_BOUNDS_STYLE_NONE,
		[Token(Token = "0x4000600")]
		COLLISION_BOUNDS_STYLE_COUNT
	}
	[Token(Token = "0x20000C6")]
	public enum EVROverlayError
	{
		[Token(Token = "0x4000602")]
		None = 0,
		[Token(Token = "0x4000603")]
		UnknownOverlay = 10,
		[Token(Token = "0x4000604")]
		InvalidHandle = 11,
		[Token(Token = "0x4000605")]
		PermissionDenied = 12,
		[Token(Token = "0x4000606")]
		OverlayLimitExceeded = 13,
		[Token(Token = "0x4000607")]
		WrongVisibilityType = 14,
		[Token(Token = "0x4000608")]
		KeyTooLong = 15,
		[Token(Token = "0x4000609")]
		NameTooLong = 16,
		[Token(Token = "0x400060A")]
		KeyInUse = 17,
		[Token(Token = "0x400060B")]
		WrongTransformType = 18,
		[Token(Token = "0x400060C")]
		InvalidTrackedDevice = 19,
		[Token(Token = "0x400060D")]
		InvalidParameter = 20,
		[Token(Token = "0x400060E")]
		ThumbnailCantBeDestroyed = 21,
		[Token(Token = "0x400060F")]
		ArrayTooSmall = 22,
		[Token(Token = "0x4000610")]
		RequestFailed = 23,
		[Token(Token = "0x4000611")]
		InvalidTexture = 24,
		[Token(Token = "0x4000612")]
		UnableToLoadFile = 25,
		[Token(Token = "0x4000613")]
		KeyboardAlreadyInUse = 26,
		[Token(Token = "0x4000614")]
		NoNeighbor = 27,
		[Token(Token = "0x4000615")]
		TooManyMaskPrimitives = 29,
		[Token(Token = "0x4000616")]
		BadMaskPrimitive = 30,
		[Token(Token = "0x4000617")]
		TextureAlreadyLocked = 31,
		[Token(Token = "0x4000618")]
		TextureLockCapacityReached = 32,
		[Token(Token = "0x4000619")]
		TextureNotLocked = 33
	}
	[Token(Token = "0x20000C7")]
	public enum EVRApplicationType
	{
		[Token(Token = "0x400061B")]
		VRApplication_Other,
		[Token(Token = "0x400061C")]
		VRApplication_Scene,
		[Token(Token = "0x400061D")]
		VRApplication_Overlay,
		[Token(Token = "0x400061E")]
		VRApplication_Background,
		[Token(Token = "0x400061F")]
		VRApplication_Utility,
		[Token(Token = "0x4000620")]
		VRApplication_VRMonitor,
		[Token(Token = "0x4000621")]
		VRApplication_SteamWatchdog,
		[Token(Token = "0x4000622")]
		VRApplication_Bootstrapper,
		[Token(Token = "0x4000623")]
		VRApplication_Max
	}
	[Token(Token = "0x20000C8")]
	public enum EVRFirmwareError
	{
		[Token(Token = "0x4000625")]
		None,
		[Token(Token = "0x4000626")]
		Success,
		[Token(Token = "0x4000627")]
		Fail
	}
	[Token(Token = "0x20000C9")]
	public enum EVRNotificationError
	{
		[Token(Token = "0x4000629")]
		OK = 0,
		[Token(Token = "0x400062A")]
		InvalidNotificationId = 100,
		[Token(Token = "0x400062B")]
		NotificationQueueFull = 101,
		[Token(Token = "0x400062C")]
		InvalidOverlayHandle = 102,
		[Token(Token = "0x400062D")]
		SystemWithUserValueAlreadyExists = 103
	}
	[Token(Token = "0x20000CA")]
	public enum EVRInitError
	{
		[Token(Token = "0x400062F")]
		None = 0,
		[Token(Token = "0x4000630")]
		Unknown = 1,
		[Token(Token = "0x4000631")]
		Init_InstallationNotFound = 100,
		[Token(Token = "0x4000632")]
		Init_InstallationCorrupt = 101,
		[Token(Token = "0x4000633")]
		Init_VRClientDLLNotFound = 102,
		[Token(Token = "0x4000634")]
		Init_FileNotFound = 103,
		[Token(Token = "0x4000635")]
		Init_FactoryNotFound = 104,
		[Token(Token = "0x4000636")]
		Init_InterfaceNotFound = 105,
		[Token(Token = "0x4000637")]
		Init_InvalidInterface = 106,
		[Token(Token = "0x4000638")]
		Init_UserConfigDirectoryInvalid = 107,
		[Token(Token = "0x4000639")]
		Init_HmdNotFound = 108,
		[Token(Token = "0x400063A")]
		Init_NotInitialized = 109,
		[Token(Token = "0x400063B")]
		Init_PathRegistryNotFound = 110,
		[Token(Token = "0x400063C")]
		Init_NoConfigPath = 111,
		[Token(Token = "0x400063D")]
		Init_NoLogPath = 112,
		[Token(Token = "0x400063E")]
		Init_PathRegistryNotWritable = 113,
		[Token(Token = "0x400063F")]
		Init_AppInfoInitFailed = 114,
		[Token(Token = "0x4000640")]
		Init_Retry = 115,
		[Token(Token = "0x4000641")]
		Init_InitCanceledByUser = 116,
		[Token(Token = "0x4000642")]
		Init_AnotherAppLaunching = 117,
		[Token(Token = "0x4000643")]
		Init_SettingsInitFailed = 118,
		[Token(Token = "0x4000644")]
		Init_ShuttingDown = 119,
		[Token(Token = "0x4000645")]
		Init_TooManyObjects = 120,
		[Token(Token = "0x4000646")]
		Init_NoServerForBackgroundApp = 121,
		[Token(Token = "0x4000647")]
		Init_NotSupportedWithCompositor = 122,
		[Token(Token = "0x4000648")]
		Init_NotAvailableToUtilityApps = 123,
		[Token(Token = "0x4000649")]
		Init_Internal = 124,
		[Token(Token = "0x400064A")]
		Init_HmdDriverIdIsNone = 125,
		[Token(Token = "0x400064B")]
		Init_HmdNotFoundPresenceFailed = 126,
		[Token(Token = "0x400064C")]
		Init_VRMonitorNotFound = 127,
		[Token(Token = "0x400064D")]
		Init_VRMonitorStartupFailed = 128,
		[Token(Token = "0x400064E")]
		Init_LowPowerWatchdogNotSupported = 129,
		[Token(Token = "0x400064F")]
		Init_InvalidApplicationType = 130,
		[Token(Token = "0x4000650")]
		Init_NotAvailableToWatchdogApps = 131,
		[Token(Token = "0x4000651")]
		Init_WatchdogDisabledInSettings = 132,
		[Token(Token = "0x4000652")]
		Init_VRDashboardNotFound = 133,
		[Token(Token = "0x4000653")]
		Init_VRDashboardStartupFailed = 134,
		[Token(Token = "0x4000654")]
		Init_VRHomeNotFound = 135,
		[Token(Token = "0x4000655")]
		Init_VRHomeStartupFailed = 136,
		[Token(Token = "0x4000656")]
		Init_RebootingBusy = 137,
		[Token(Token = "0x4000657")]
		Init_FirmwareUpdateBusy = 138,
		[Token(Token = "0x4000658")]
		Init_FirmwareRecoveryBusy = 139,
		[Token(Token = "0x4000659")]
		Init_USBServiceBusy = 140,
		[Token(Token = "0x400065A")]
		Init_VRWebHelperStartupFailed = 141,
		[Token(Token = "0x400065B")]
		Driver_Failed = 200,
		[Token(Token = "0x400065C")]
		Driver_Unknown = 201,
		[Token(Token = "0x400065D")]
		Driver_HmdUnknown = 202,
		[Token(Token = "0x400065E")]
		Driver_NotLoaded = 203,
		[Token(Token = "0x400065F")]
		Driver_RuntimeOutOfDate = 204,
		[Token(Token = "0x4000660")]
		Driver_HmdInUse = 205,
		[Token(Token = "0x4000661")]
		Driver_NotCalibrated = 206,
		[Token(Token = "0x4000662")]
		Driver_CalibrationInvalid = 207,
		[Token(Token = "0x4000663")]
		Driver_HmdDisplayNotFound = 208,
		[Token(Token = "0x4000664")]
		Driver_TrackedDeviceInterfaceUnknown = 209,
		[Token(Token = "0x4000665")]
		Driver_HmdDriverIdOutOfBounds = 211,
		[Token(Token = "0x4000666")]
		Driver_HmdDisplayMirrored = 212,
		[Token(Token = "0x4000667")]
		IPC_ServerInitFailed = 300,
		[Token(Token = "0x4000668")]
		IPC_ConnectFailed = 301,
		[Token(Token = "0x4000669")]
		IPC_SharedStateInitFailed = 302,
		[Token(Token = "0x400066A")]
		IPC_CompositorInitFailed = 303,
		[Token(Token = "0x400066B")]
		IPC_MutexInitFailed = 304,
		[Token(Token = "0x400066C")]
		IPC_Failed = 305,
		[Token(Token = "0x400066D")]
		IPC_CompositorConnectFailed = 306,
		[Token(Token = "0x400066E")]
		IPC_CompositorInvalidConnectResponse = 307,
		[Token(Token = "0x400066F")]
		IPC_ConnectFailedAfterMultipleAttempts = 308,
		[Token(Token = "0x4000670")]
		Compositor_Failed = 400,
		[Token(Token = "0x4000671")]
		Compositor_D3D11HardwareRequired = 401,
		[Token(Token = "0x4000672")]
		Compositor_FirmwareRequiresUpdate = 402,
		[Token(Token = "0x4000673")]
		Compositor_OverlayInitFailed = 403,
		[Token(Token = "0x4000674")]
		Compositor_ScreenshotsInitFailed = 404,
		[Token(Token = "0x4000675")]
		Compositor_UnableToCreateDevice = 405,
		[Token(Token = "0x4000676")]
		VendorSpecific_UnableToConnectToOculusRuntime = 1000,
		[Token(Token = "0x4000677")]
		VendorSpecific_WindowsNotInDevMode = 1001,
		[Token(Token = "0x4000678")]
		VendorSpecific_HmdFound_CantOpenDevice = 1101,
		[Token(Token = "0x4000679")]
		VendorSpecific_HmdFound_UnableToRequestConfigStart = 1102,
		[Token(Token = "0x400067A")]
		VendorSpecific_HmdFound_NoStoredConfig = 1103,
		[Token(Token = "0x400067B")]
		VendorSpecific_HmdFound_ConfigTooBig = 1104,
		[Token(Token = "0x400067C")]
		VendorSpecific_HmdFound_ConfigTooSmall = 1105,
		[Token(Token = "0x400067D")]
		VendorSpecific_HmdFound_UnableToInitZLib = 1106,
		[Token(Token = "0x400067E")]
		VendorSpecific_HmdFound_CantReadFirmwareVersion = 1107,
		[Token(Token = "0x400067F")]
		VendorSpecific_HmdFound_UnableToSendUserDataStart = 1108,
		[Token(Token = "0x4000680")]
		VendorSpecific_HmdFound_UnableToGetUserDataStart = 1109,
		[Token(Token = "0x4000681")]
		VendorSpecific_HmdFound_UnableToGetUserDataNext = 1110,
		[Token(Token = "0x4000682")]
		VendorSpecific_HmdFound_UserDataAddressRange = 1111,
		[Token(Token = "0x4000683")]
		VendorSpecific_HmdFound_UserDataError = 1112,
		[Token(Token = "0x4000684")]
		VendorSpecific_HmdFound_ConfigFailedSanityCheck = 1113,
		[Token(Token = "0x4000685")]
		Steam_SteamInstallationNotFound = 2000
	}
	[Token(Token = "0x20000CB")]
	public enum EVRScreenshotType
	{
		[Token(Token = "0x4000687")]
		None,
		[Token(Token = "0x4000688")]
		Mono,
		[Token(Token = "0x4000689")]
		Stereo,
		[Token(Token = "0x400068A")]
		Cubemap,
		[Token(Token = "0x400068B")]
		MonoPanorama,
		[Token(Token = "0x400068C")]
		StereoPanorama
	}
	[Token(Token = "0x20000CC")]
	public enum EVRScreenshotPropertyFilenames
	{
		[Token(Token = "0x400068E")]
		Preview,
		[Token(Token = "0x400068F")]
		VR
	}
	[Token(Token = "0x20000CD")]
	public enum EVRTrackedCameraError
	{
		[Token(Token = "0x4000691")]
		None = 0,
		[Token(Token = "0x4000692")]
		OperationFailed = 100,
		[Token(Token = "0x4000693")]
		InvalidHandle = 101,
		[Token(Token = "0x4000694")]
		InvalidFrameHeaderVersion = 102,
		[Token(Token = "0x4000695")]
		OutOfHandles = 103,
		[Token(Token = "0x4000696")]
		IPCFailure = 104,
		[Token(Token = "0x4000697")]
		NotSupportedForThisDevice = 105,
		[Token(Token = "0x4000698")]
		SharedMemoryFailure = 106,
		[Token(Token = "0x4000699")]
		FrameBufferingFailure = 107,
		[Token(Token = "0x400069A")]
		StreamSetupFailure = 108,
		[Token(Token = "0x400069B")]
		InvalidGLTextureId = 109,
		[Token(Token = "0x400069C")]
		InvalidSharedTextureHandle = 110,
		[Token(Token = "0x400069D")]
		FailedToGetGLTextureId = 111,
		[Token(Token = "0x400069E")]
		SharedTextureFailure = 112,
		[Token(Token = "0x400069F")]
		NoFrameAvailable = 113,
		[Token(Token = "0x40006A0")]
		InvalidArgument = 114,
		[Token(Token = "0x40006A1")]
		InvalidFrameBufferSize = 115
	}
	[Token(Token = "0x20000CE")]
	public enum EVRTrackedCameraFrameType
	{
		[Token(Token = "0x40006A3")]
		Distorted,
		[Token(Token = "0x40006A4")]
		Undistorted,
		[Token(Token = "0x40006A5")]
		MaximumUndistorted,
		[Token(Token = "0x40006A6")]
		MAX_CAMERA_FRAME_TYPES
	}
	[Token(Token = "0x20000CF")]
	public enum EVRApplicationError
	{
		[Token(Token = "0x40006A8")]
		None = 0,
		[Token(Token = "0x40006A9")]
		AppKeyAlreadyExists = 100,
		[Token(Token = "0x40006AA")]
		NoManifest = 101,
		[Token(Token = "0x40006AB")]
		NoApplication = 102,
		[Token(Token = "0x40006AC")]
		InvalidIndex = 103,
		[Token(Token = "0x40006AD")]
		UnknownApplication = 104,
		[Token(Token = "0x40006AE")]
		IPCFailed = 105,
		[Token(Token = "0x40006AF")]
		ApplicationAlreadyRunning = 106,
		[Token(Token = "0x40006B0")]
		InvalidManifest = 107,
		[Token(Token = "0x40006B1")]
		InvalidApplication = 108,
		[Token(Token = "0x40006B2")]
		LaunchFailed = 109,
		[Token(Token = "0x40006B3")]
		ApplicationAlreadyStarting = 110,
		[Token(Token = "0x40006B4")]
		LaunchInProgress = 111,
		[Token(Token = "0x40006B5")]
		OldApplicationQuitting = 112,
		[Token(Token = "0x40006B6")]
		TransitionAborted = 113,
		[Token(Token = "0x40006B7")]
		IsTemplate = 114,
		[Token(Token = "0x40006B8")]
		SteamVRIsExiting = 115,
		[Token(Token = "0x40006B9")]
		BufferTooSmall = 200,
		[Token(Token = "0x40006BA")]
		PropertyNotSet = 201,
		[Token(Token = "0x40006BB")]
		UnknownProperty = 202,
		[Token(Token = "0x40006BC")]
		InvalidParameter = 203
	}
	[Token(Token = "0x20000D0")]
	public enum EVRApplicationProperty
	{
		[Token(Token = "0x40006BE")]
		Name_String = 0,
		[Token(Token = "0x40006BF")]
		LaunchType_String = 11,
		[Token(Token = "0x40006C0")]
		WorkingDirectory_String = 12,
		[Token(Token = "0x40006C1")]
		BinaryPath_String = 13,
		[Token(Token = "0x40006C2")]
		Arguments_String = 14,
		[Token(Token = "0x40006C3")]
		URL_String = 15,
		[Token(Token = "0x40006C4")]
		Description_String = 50,
		[Token(Token = "0x40006C5")]
		NewsURL_String = 51,
		[Token(Token = "0x40006C6")]
		ImagePath_String = 52,
		[Token(Token = "0x40006C7")]
		Source_String = 53,
		[Token(Token = "0x40006C8")]
		ActionManifestURL_String = 54,
		[Token(Token = "0x40006C9")]
		IsDashboardOverlay_Bool = 60,
		[Token(Token = "0x40006CA")]
		IsTemplate_Bool = 61,
		[Token(Token = "0x40006CB")]
		IsInstanced_Bool = 62,
		[Token(Token = "0x40006CC")]
		IsInternal_Bool = 63,
		[Token(Token = "0x40006CD")]
		WantsCompositorPauseInStandby_Bool = 64,
		[Token(Token = "0x40006CE")]
		LastLaunchTime_Uint64 = 70
	}
	[Token(Token = "0x20000D1")]
	public enum EVRApplicationTransitionState
	{
		[Token(Token = "0x40006D0")]
		VRApplicationTransition_None = 0,
		[Token(Token = "0x40006D1")]
		VRApplicationTransition_OldAppQuitSent = 10,
		[Token(Token = "0x40006D2")]
		VRApplicationTransition_WaitingForExternalLaunch = 11,
		[Token(Token = "0x40006D3")]
		VRApplicationTransition_NewAppLaunched = 20
	}
	[Token(Token = "0x20000D2")]
	public enum ChaperoneCalibrationState
	{
		[Token(Token = "0x40006D5")]
		OK = 1,
		[Token(Token = "0x40006D6")]
		Warning = 100,
		[Token(Token = "0x40006D7")]
		Warning_BaseStationMayHaveMoved = 101,
		[Token(Token = "0x40006D8")]
		Warning_BaseStationRemoved = 102,
		[Token(Token = "0x40006D9")]
		Warning_SeatedBoundsInvalid = 103,
		[Token(Token = "0x40006DA")]
		Error = 200,
		[Token(Token = "0x40006DB")]
		Error_BaseStationUninitialized = 201,
		[Token(Token = "0x40006DC")]
		Error_BaseStationConflict = 202,
		[Token(Token = "0x40006DD")]
		Error_PlayAreaInvalid = 203,
		[Token(Token = "0x40006DE")]
		Error_CollisionBoundsInvalid = 204
	}
	[Token(Token = "0x20000D3")]
	public enum EChaperoneConfigFile
	{
		[Token(Token = "0x40006E0")]
		Live = 1,
		[Token(Token = "0x40006E1")]
		Temp
	}
	[Token(Token = "0x20000D4")]
	public enum EChaperoneImportFlags
	{
		[Token(Token = "0x40006E3")]
		EChaperoneImport_BoundsOnly = 1
	}
	[Token(Token = "0x20000D5")]
	public enum EVRCompositorError
	{
		[Token(Token = "0x40006E5")]
		None = 0,
		[Token(Token = "0x40006E6")]
		RequestFailed = 1,
		[Token(Token = "0x40006E7")]
		IncompatibleVersion = 100,
		[Token(Token = "0x40006E8")]
		DoNotHaveFocus = 101,
		[Token(Token = "0x40006E9")]
		InvalidTexture = 102,
		[Token(Token = "0x40006EA")]
		IsNotSceneApplication = 103,
		[Token(Token = "0x40006EB")]
		TextureIsOnWrongDevice = 104,
		[Token(Token = "0x40006EC")]
		TextureUsesUnsupportedFormat = 105,
		[Token(Token = "0x40006ED")]
		SharedTexturesNotSupported = 106,
		[Token(Token = "0x40006EE")]
		IndexOutOfRange = 107,
		[Token(Token = "0x40006EF")]
		AlreadySubmitted = 108,
		[Token(Token = "0x40006F0")]
		InvalidBounds = 109
	}
	[Token(Token = "0x20000D6")]
	public enum EVRCompositorTimingMode
	{
		[Token(Token = "0x40006F2")]
		Implicit,
		[Token(Token = "0x40006F3")]
		Explicit_RuntimePerformsPostPresentHandoff,
		[Token(Token = "0x40006F4")]
		Explicit_ApplicationPerformsPostPresentHandoff
	}
	[Token(Token = "0x20000D7")]
	public enum VROverlayInputMethod
	{
		[Token(Token = "0x40006F6")]
		None,
		[Token(Token = "0x40006F7")]
		Mouse,
		[Token(Token = "0x40006F8")]
		DualAnalog
	}
	[Token(Token = "0x20000D8")]
	public enum VROverlayTransformType
	{
		[Token(Token = "0x40006FA")]
		VROverlayTransform_Absolute,
		[Token(Token = "0x40006FB")]
		VROverlayTransform_TrackedDeviceRelative,
		[Token(Token = "0x40006FC")]
		VROverlayTransform_SystemOverlay,
		[Token(Token = "0x40006FD")]
		VROverlayTransform_TrackedComponent
	}
	[Token(Token = "0x20000D9")]
	public enum VROverlayFlags
	{
		[Token(Token = "0x40006FF")]
		None,
		[Token(Token = "0x4000700")]
		Curved,
		[Token(Token = "0x4000701")]
		RGSS4X,
		[Token(Token = "0x4000702")]
		NoDashboardTab,
		[Token(Token = "0x4000703")]
		AcceptsGamepadEvents,
		[Token(Token = "0x4000704")]
		ShowGamepadFocus,
		[Token(Token = "0x4000705")]
		SendVRScrollEvents,
		[Token(Token = "0x4000706")]
		SendVRTouchpadEvents,
		[Token(Token = "0x4000707")]
		ShowTouchPadScrollWheel,
		[Token(Token = "0x4000708")]
		TransferOwnershipToInternalProcess,
		[Token(Token = "0x4000709")]
		SideBySide_Parallel,
		[Token(Token = "0x400070A")]
		SideBySide_Crossed,
		[Token(Token = "0x400070B")]
		Panorama,
		[Token(Token = "0x400070C")]
		StereoPanorama,
		[Token(Token = "0x400070D")]
		SortWithNonSceneOverlays,
		[Token(Token = "0x400070E")]
		VisibleInDashboard
	}
	[Token(Token = "0x20000DA")]
	public enum VRMessageOverlayResponse
	{
		[Token(Token = "0x4000710")]
		ButtonPress_0,
		[Token(Token = "0x4000711")]
		ButtonPress_1,
		[Token(Token = "0x4000712")]
		ButtonPress_2,
		[Token(Token = "0x4000713")]
		ButtonPress_3,
		[Token(Token = "0x4000714")]
		CouldntFindSystemOverlay,
		[Token(Token = "0x4000715")]
		CouldntFindOrCreateClientOverlay,
		[Token(Token = "0x4000716")]
		ApplicationQuit
	}
	[Token(Token = "0x20000DB")]
	public enum EGamepadTextInputMode
	{
		[Token(Token = "0x4000718")]
		k_EGamepadTextInputModeNormal,
		[Token(Token = "0x4000719")]
		k_EGamepadTextInputModePassword,
		[Token(Token = "0x400071A")]
		k_EGamepadTextInputModeSubmit
	}
	[Token(Token = "0x20000DC")]
	public enum EGamepadTextInputLineMode
	{
		[Token(Token = "0x400071C")]
		k_EGamepadTextInputLineModeSingleLine,
		[Token(Token = "0x400071D")]
		k_EGamepadTextInputLineModeMultipleLines
	}
	[Token(Token = "0x20000DD")]
	public enum EOverlayDirection
	{
		[Token(Token = "0x400071F")]
		Up,
		[Token(Token = "0x4000720")]
		Down,
		[Token(Token = "0x4000721")]
		Left,
		[Token(Token = "0x4000722")]
		Right,
		[Token(Token = "0x4000723")]
		Count
	}
	[Token(Token = "0x20000DE")]
	public enum EVROverlayIntersectionMaskPrimitiveType
	{
		[Token(Token = "0x4000725")]
		OverlayIntersectionPrimitiveType_Rectangle,
		[Token(Token = "0x4000726")]
		OverlayIntersectionPrimitiveType_Circle
	}
	[Token(Token = "0x20000DF")]
	public enum EVRRenderModelError
	{
		[Token(Token = "0x4000728")]
		None = 0,
		[Token(Token = "0x4000729")]
		Loading = 100,
		[Token(Token = "0x400072A")]
		NotSupported = 200,
		[Token(Token = "0x400072B")]
		InvalidArg = 300,
		[Token(Token = "0x400072C")]
		InvalidModel = 301,
		[Token(Token = "0x400072D")]
		NoShapes = 302,
		[Token(Token = "0x400072E")]
		MultipleShapes = 303,
		[Token(Token = "0x400072F")]
		TooManyVertices = 304,
		[Token(Token = "0x4000730")]
		MultipleTextures = 305,
		[Token(Token = "0x4000731")]
		BufferTooSmall = 306,
		[Token(Token = "0x4000732")]
		NotEnoughNormals = 307,
		[Token(Token = "0x4000733")]
		NotEnoughTexCoords = 308,
		[Token(Token = "0x4000734")]
		InvalidTexture = 400
	}
	[Token(Token = "0x20000E0")]
	public enum EVRComponentProperty
	{
		[Token(Token = "0x4000736")]
		IsStatic = 1,
		[Token(Token = "0x4000737")]
		IsVisible = 2,
		[Token(Token = "0x4000738")]
		IsTouched = 4,
		[Token(Token = "0x4000739")]
		IsPressed = 8,
		[Token(Token = "0x400073A")]
		IsScrolled = 0x10
	}
	[Token(Token = "0x20000E1")]
	public enum EVRNotificationType
	{
		[Token(Token = "0x400073C")]
		Transient,
		[Token(Token = "0x400073D")]
		Persistent,
		[Token(Token = "0x400073E")]
		Transient_SystemWithUserValue
	}
	[Token(Token = "0x20000E2")]
	public enum EVRNotificationStyle
	{
		[Token(Token = "0x4000740")]
		None = 0,
		[Token(Token = "0x4000741")]
		Application = 100,
		[Token(Token = "0x4000742")]
		Contact_Disabled = 200,
		[Token(Token = "0x4000743")]
		Contact_Enabled = 201,
		[Token(Token = "0x4000744")]
		Contact_Active = 202
	}
	[Token(Token = "0x20000E3")]
	public enum EVRSettingsError
	{
		[Token(Token = "0x4000746")]
		None,
		[Token(Token = "0x4000747")]
		IPCFailed,
		[Token(Token = "0x4000748")]
		WriteFailed,
		[Token(Token = "0x4000749")]
		ReadFailed,
		[Token(Token = "0x400074A")]
		JsonParseFailed,
		[Token(Token = "0x400074B")]
		UnsetSettingHasNoDefault
	}
	[Token(Token = "0x20000E4")]
	public enum EVRScreenshotError
	{
		[Token(Token = "0x400074D")]
		None = 0,
		[Token(Token = "0x400074E")]
		RequestFailed = 1,
		[Token(Token = "0x400074F")]
		IncompatibleVersion = 100,
		[Token(Token = "0x4000750")]
		NotFound = 101,
		[Token(Token = "0x4000751")]
		BufferTooSmall = 102,
		[Token(Token = "0x4000752")]
		ScreenshotAlreadyInProgress = 108
	}
	[StructLayout(2)]
	[Token(Token = "0x20000E5")]
	public struct VREvent_Data_t
	{
		[Token(Token = "0x4000753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Reserved_t reserved;

		[Token(Token = "0x4000754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Controller_t controller;

		[Token(Token = "0x4000755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Mouse_t mouse;

		[Token(Token = "0x4000756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Scroll_t scroll;

		[Token(Token = "0x4000757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Process_t process;

		[Token(Token = "0x4000758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Notification_t notification;

		[Token(Token = "0x4000759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Overlay_t overlay;

		[Token(Token = "0x400075A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Status_t status;

		[Token(Token = "0x400075B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Ipd_t ipd;

		[Token(Token = "0x400075C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Chaperone_t chaperone;

		[Token(Token = "0x400075D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_PerformanceTest_t performanceTest;

		[Token(Token = "0x400075E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_TouchPadMove_t touchPadMove;

		[Token(Token = "0x400075F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_SeatedZeroPoseReset_t seatedZeroPoseReset;

		[Token(Token = "0x4000760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Screenshot_t screenshot;

		[Token(Token = "0x4000761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_ScreenshotProgress_t screenshotProgress;

		[Token(Token = "0x4000762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_ApplicationLaunch_t applicationLaunch;

		[Token(Token = "0x4000763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_EditingCameraSurface_t cameraSurface;

		[Token(Token = "0x4000764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_MessageOverlay_t messageOverlay;

		[Token(Token = "0x4000765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Property_t property;

		[Token(Token = "0x4000766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_DualAnalog_t dualAnalog;

		[Token(Token = "0x4000767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_HapticVibration_t hapticVibration;

		[Token(Token = "0x4000768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Keyboard_t keyboard;
	}
	[StructLayout(2)]
	[Token(Token = "0x20000E6")]
	public struct VROverlayIntersectionMaskPrimitive_Data_t
	{
		[Token(Token = "0x4000769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntersectionMaskRectangle_t m_Rectangle;

		[Token(Token = "0x400076A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntersectionMaskCircle_t m_Circle;
	}
	[Token(Token = "0x20000E7")]
	public struct HmdMatrix34_t
	{
		[Token(Token = "0x400076B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m0;

		[Token(Token = "0x400076C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m1;

		[Token(Token = "0x400076D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m2;

		[Token(Token = "0x400076E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m3;

		[Token(Token = "0x400076F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m4;

		[Token(Token = "0x4000770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m5;

		[Token(Token = "0x4000771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m6;

		[Token(Token = "0x4000772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m7;

		[Token(Token = "0x4000773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m8;

		[Token(Token = "0x4000774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m9;

		[Token(Token = "0x4000775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m10;

		[Token(Token = "0x4000776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m11;
	}
	[Token(Token = "0x20000E8")]
	public struct HmdMatrix44_t
	{
		[Token(Token = "0x4000777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m0;

		[Token(Token = "0x4000778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m1;

		[Token(Token = "0x4000779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m2;

		[Token(Token = "0x400077A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m3;

		[Token(Token = "0x400077B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m4;

		[Token(Token = "0x400077C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m5;

		[Token(Token = "0x400077D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m6;

		[Token(Token = "0x400077E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m7;

		[Token(Token = "0x400077F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m8;

		[Token(Token = "0x4000780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m9;

		[Token(Token = "0x4000781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m10;

		[Token(Token = "0x4000782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m11;

		[Token(Token = "0x4000783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m12;

		[Token(Token = "0x4000784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m13;

		[Token(Token = "0x4000785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m14;

		[Token(Token = "0x4000786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m15;
	}
	[Token(Token = "0x20000E9")]
	public struct HmdVector3_t
	{
		[Token(Token = "0x4000787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float v0;

		[Token(Token = "0x4000788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float v1;

		[Token(Token = "0x4000789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float v2;
	}
	[Token(Token = "0x20000EA")]
	public struct HmdVector4_t
	{
		[Token(Token = "0x400078A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float v0;

		[Token(Token = "0x400078B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float v1;

		[Token(Token = "0x400078C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float v2;

		[Token(Token = "0x400078D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float v3;
	}
	[Token(Token = "0x20000EB")]
	public struct HmdVector3d_t
	{
		[Token(Token = "0x400078E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public double v0;

		[Token(Token = "0x400078F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public double v1;

		[Token(Token = "0x4000790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public double v2;
	}
	[Token(Token = "0x20000EC")]
	public struct HmdVector2_t
	{
		[Token(Token = "0x4000791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float v0;

		[Token(Token = "0x4000792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float v1;
	}
	[Token(Token = "0x20000ED")]
	public struct HmdQuaternion_t
	{
		[Token(Token = "0x4000793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public double w;

		[Token(Token = "0x4000794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public double x;

		[Token(Token = "0x4000795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public double y;

		[Token(Token = "0x4000796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public double z;
	}
	[Token(Token = "0x20000EE")]
	public struct HmdColor_t
	{
		[Token(Token = "0x4000797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float r;

		[Token(Token = "0x4000798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float g;

		[Token(Token = "0x4000799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float b;

		[Token(Token = "0x400079A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float a;
	}
	[Token(Token = "0x20000EF")]
	public struct HmdQuad_t
	{
		[Token(Token = "0x400079B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector3_t vCorners0;

		[Token(Token = "0x400079C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HmdVector3_t vCorners1;

		[Token(Token = "0x400079D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HmdVector3_t vCorners2;

		[Token(Token = "0x400079E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public HmdVector3_t vCorners3;
	}
	[Token(Token = "0x20000F0")]
	public struct HmdRect2_t
	{
		[Token(Token = "0x400079F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector2_t vTopLeft;

		[Token(Token = "0x40007A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public HmdVector2_t vBottomRight;
	}
	[Token(Token = "0x20000F1")]
	public struct DistortionCoordinates_t
	{
		[Token(Token = "0x40007A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float rfRed0;

		[Token(Token = "0x40007A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float rfRed1;

		[Token(Token = "0x40007A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float rfGreen0;

		[Token(Token = "0x40007A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float rfGreen1;

		[Token(Token = "0x40007A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float rfBlue0;

		[Token(Token = "0x40007A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float rfBlue1;
	}
	[Token(Token = "0x20000F2")]
	public struct Texture_t
	{
		[Token(Token = "0x40007A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr handle;

		[Token(Token = "0x40007A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ETextureType eType;

		[Token(Token = "0x40007A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public EColorSpace eColorSpace;
	}
	[Token(Token = "0x20000F3")]
	public struct TrackedDevicePose_t
	{
		[Token(Token = "0x40007AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdMatrix34_t mDeviceToAbsoluteTracking;

		[Token(Token = "0x40007AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HmdVector3_t vVelocity;

		[Token(Token = "0x40007AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public HmdVector3_t vAngularVelocity;

		[Token(Token = "0x40007AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public ETrackingResult eTrackingResult;

		[Token(Token = "0x40007AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool bPoseIsValid;

		[Token(Token = "0x40007AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		public bool bDeviceIsConnected;
	}
	[Token(Token = "0x20000F4")]
	public struct VRTextureBounds_t
	{
		[Token(Token = "0x40007B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float uMin;

		[Token(Token = "0x40007B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float vMin;

		[Token(Token = "0x40007B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float uMax;

		[Token(Token = "0x40007B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float vMax;
	}
	[Token(Token = "0x20000F5")]
	public struct VRTextureWithPose_t
	{
		[Token(Token = "0x40007B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdMatrix34_t mDeviceToAbsoluteTracking;
	}
	[Token(Token = "0x20000F6")]
	public struct VRTextureDepthInfo_t
	{
		[Token(Token = "0x40007B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr handle;

		[Token(Token = "0x40007B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public HmdMatrix44_t mProjection;

		[Token(Token = "0x40007B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public HmdVector2_t vRange;
	}
	[Token(Token = "0x20000F7")]
	public struct VRTextureWithDepth_t
	{
		[Token(Token = "0x40007B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VRTextureDepthInfo_t depth;
	}
	[Token(Token = "0x20000F8")]
	public struct VRTextureWithPoseAndDepth_t
	{
		[Token(Token = "0x40007B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VRTextureDepthInfo_t depth;
	}
	[Token(Token = "0x20000F9")]
	public struct VRVulkanTextureData_t
	{
		[Token(Token = "0x40007BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong m_nImage;

		[Token(Token = "0x40007BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr m_pDevice;

		[Token(Token = "0x40007BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr m_pPhysicalDevice;

		[Token(Token = "0x40007BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IntPtr m_pInstance;

		[Token(Token = "0x40007BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IntPtr m_pQueue;

		[Token(Token = "0x40007BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public uint m_nQueueFamilyIndex;

		[Token(Token = "0x40007C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public uint m_nWidth;

		[Token(Token = "0x40007C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public uint m_nHeight;

		[Token(Token = "0x40007C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public uint m_nFormat;

		[Token(Token = "0x40007C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public uint m_nSampleCount;
	}
	[Token(Token = "0x20000FA")]
	public struct D3D12TextureData_t
	{
		[Token(Token = "0x40007C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr m_pResource;

		[Token(Token = "0x40007C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr m_pCommandQueue;

		[Token(Token = "0x40007C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint m_nNodeMask;
	}
	[Token(Token = "0x20000FB")]
	public struct VREvent_Controller_t
	{
		[Token(Token = "0x40007C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint button;
	}
	[Token(Token = "0x20000FC")]
	public struct VREvent_Mouse_t
	{
		[Token(Token = "0x40007C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x40007C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x40007CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint button;
	}
	[Token(Token = "0x20000FD")]
	public struct VREvent_Scroll_t
	{
		[Token(Token = "0x40007CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float xdelta;

		[Token(Token = "0x40007CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float ydelta;

		[Token(Token = "0x40007CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint repeatCount;
	}
	[Token(Token = "0x20000FE")]
	public struct VREvent_TouchPadMove_t
	{
		[Token(Token = "0x40007CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool bFingerDown;

		[Token(Token = "0x40007CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float flSecondsFingerDown;

		[Token(Token = "0x40007D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float fValueXFirst;

		[Token(Token = "0x40007D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float fValueYFirst;

		[Token(Token = "0x40007D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float fValueXRaw;

		[Token(Token = "0x40007D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float fValueYRaw;
	}
	[Token(Token = "0x20000FF")]
	public struct VREvent_Notification_t
	{
		[Token(Token = "0x40007D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong ulUserValue;

		[Token(Token = "0x40007D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint notificationId;
	}
	[Token(Token = "0x2000100")]
	public struct VREvent_Process_t
	{
		[Token(Token = "0x40007D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint pid;

		[Token(Token = "0x40007D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint oldPid;

		[Token(Token = "0x40007D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool bForced;
	}
	[Token(Token = "0x2000101")]
	public struct VREvent_Overlay_t
	{
		[Token(Token = "0x40007D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong overlayHandle;
	}
	[Token(Token = "0x2000102")]
	public struct VREvent_Status_t
	{
		[Token(Token = "0x40007DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint statusState;
	}
	[Token(Token = "0x2000103")]
	public struct VREvent_Keyboard_t
	{
		[Token(Token = "0x40007DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public byte cNewInput0;

		[Token(Token = "0x40007DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public byte cNewInput1;

		[Token(Token = "0x40007DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public byte cNewInput2;

		[Token(Token = "0x40007DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		public byte cNewInput3;

		[Token(Token = "0x40007DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public byte cNewInput4;

		[Token(Token = "0x40007E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		public byte cNewInput5;

		[Token(Token = "0x40007E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		public byte cNewInput6;

		[Token(Token = "0x40007E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7")]
		public byte cNewInput7;

		[Token(Token = "0x40007E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong uUserValue;
	}
	[Token(Token = "0x2000104")]
	public struct VREvent_Ipd_t
	{
		[Token(Token = "0x40007E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float ipdMeters;
	}
	[Token(Token = "0x2000105")]
	public struct VREvent_Chaperone_t
	{
		[Token(Token = "0x40007E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong m_nPreviousUniverse;

		[Token(Token = "0x40007E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong m_nCurrentUniverse;
	}
	[Token(Token = "0x2000106")]
	public struct VREvent_Reserved_t
	{
		[Token(Token = "0x40007E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong reserved0;

		[Token(Token = "0x40007E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong reserved1;

		[Token(Token = "0x40007E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ulong reserved2;

		[Token(Token = "0x40007EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ulong reserved3;
	}
	[Token(Token = "0x2000107")]
	public struct VREvent_PerformanceTest_t
	{
		[Token(Token = "0x40007EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nFidelityLevel;
	}
	[Token(Token = "0x2000108")]
	public struct VREvent_SeatedZeroPoseReset_t
	{
		[Token(Token = "0x40007EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool bResetBySystemMenu;
	}
	[Token(Token = "0x2000109")]
	public struct VREvent_Screenshot_t
	{
		[Token(Token = "0x40007ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint handle;

		[Token(Token = "0x40007EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint type;
	}
	[Token(Token = "0x200010A")]
	public struct VREvent_ScreenshotProgress_t
	{
		[Token(Token = "0x40007EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float progress;
	}
	[Token(Token = "0x200010B")]
	public struct VREvent_ApplicationLaunch_t
	{
		[Token(Token = "0x40007F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint pid;

		[Token(Token = "0x40007F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint unArgsHandle;
	}
	[Token(Token = "0x200010C")]
	public struct VREvent_EditingCameraSurface_t
	{
		[Token(Token = "0x40007F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong overlayHandle;

		[Token(Token = "0x40007F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint nVisualMode;
	}
	[Token(Token = "0x200010D")]
	public struct VREvent_MessageOverlay_t
	{
		[Token(Token = "0x40007F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint unVRMessageOverlayResponse;
	}
	[Token(Token = "0x200010E")]
	public struct VREvent_Property_t
	{
		[Token(Token = "0x40007F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong container;

		[Token(Token = "0x40007F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ETrackedDeviceProperty prop;
	}
	[Token(Token = "0x200010F")]
	public struct VREvent_DualAnalog_t
	{
		[Token(Token = "0x40007F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x40007F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x40007F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float transformedX;

		[Token(Token = "0x40007FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float transformedY;

		[Token(Token = "0x40007FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EDualAnalogWhich which;
	}
	[Token(Token = "0x2000110")]
	public struct VREvent_HapticVibration_t
	{
		[Token(Token = "0x40007FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong containerHandle;

		[Token(Token = "0x40007FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong componentHandle;

		[Token(Token = "0x40007FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float fDurationSeconds;

		[Token(Token = "0x40007FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float fFrequency;

		[Token(Token = "0x4000800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float fAmplitude;
	}
	[Token(Token = "0x2000111")]
	public struct VREvent_t
	{
		[Token(Token = "0x4000801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint eventType;

		[Token(Token = "0x4000802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint trackedDeviceIndex;

		[Token(Token = "0x4000803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float eventAgeSeconds;

		[Token(Token = "0x4000804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public VREvent_Data_t data;
	}
	[Token(Token = "0x2000112")]
	public struct VREvent_t_Packed
	{
		[Token(Token = "0x4000805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint eventType;

		[Token(Token = "0x4000806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint trackedDeviceIndex;

		[Token(Token = "0x4000807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float eventAgeSeconds;

		[Token(Token = "0x4000808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public VREvent_Data_t data;

		[Token(Token = "0x60008CA")]
		[Address(RVA = "0xDF15D8", Offset = "0xDF15D8", VA = "0xDF15D8")]
		public VREvent_t_Packed(VREvent_t unpacked)
		{
		}

		[Token(Token = "0x60008CB")]
		[Address(RVA = "0xDF1628", Offset = "0xDF1628", VA = "0xDF1628")]
		public void Unpack(ref VREvent_t unpacked)
		{
		}
	}
	[Token(Token = "0x2000113")]
	public struct HiddenAreaMesh_t
	{
		[Token(Token = "0x4000809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr pVertexData;

		[Token(Token = "0x400080A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint unTriangleCount;
	}
	[Token(Token = "0x2000114")]
	public struct VRControllerAxis_t
	{
		[Token(Token = "0x400080B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x400080C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;
	}
	[Token(Token = "0x2000115")]
	public struct VRControllerState_t
	{
		[Token(Token = "0x400080D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint unPacketNum;

		[Token(Token = "0x400080E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong ulButtonPressed;

		[Token(Token = "0x400080F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ulong ulButtonTouched;

		[Token(Token = "0x4000810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VRControllerAxis_t rAxis0;

		[Token(Token = "0x4000811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRControllerAxis_t rAxis1;

		[Token(Token = "0x4000812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VRControllerAxis_t rAxis2;

		[Token(Token = "0x4000813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public VRControllerAxis_t rAxis3;

		[Token(Token = "0x4000814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public VRControllerAxis_t rAxis4;
	}
	[Token(Token = "0x2000116")]
	public struct VRControllerState_t_Packed
	{
		[Token(Token = "0x4000815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint unPacketNum;

		[Token(Token = "0x4000816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ulong ulButtonPressed;

		[Token(Token = "0x4000817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public ulong ulButtonTouched;

		[Token(Token = "0x4000818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public VRControllerAxis_t rAxis0;

		[Token(Token = "0x4000819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public VRControllerAxis_t rAxis1;

		[Token(Token = "0x400081A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public VRControllerAxis_t rAxis2;

		[Token(Token = "0x400081B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public VRControllerAxis_t rAxis3;

		[Token(Token = "0x400081C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public VRControllerAxis_t rAxis4;

		[Token(Token = "0x60008CC")]
		[Address(RVA = "0xDF15A4", Offset = "0xDF15A4", VA = "0xDF15A4")]
		public VRControllerState_t_Packed(VRControllerState_t unpacked)
		{
		}

		[Token(Token = "0x60008CD")]
		[Address(RVA = "0xDF15D0", Offset = "0xDF15D0", VA = "0xDF15D0")]
		public void Unpack(ref VRControllerState_t unpacked)
		{
		}
	}
	[Token(Token = "0x2000117")]
	public struct Compositor_OverlaySettings
	{
		[Token(Token = "0x400081D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint size;

		[Token(Token = "0x400081E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public bool curved;

		[Token(Token = "0x400081F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		public bool antialias;

		[Token(Token = "0x4000820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float scale;

		[Token(Token = "0x4000821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float distance;

		[Token(Token = "0x4000822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float alpha;

		[Token(Token = "0x4000823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float uOffset;

		[Token(Token = "0x4000824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float vOffset;

		[Token(Token = "0x4000825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float uScale;

		[Token(Token = "0x4000826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float vScale;

		[Token(Token = "0x4000827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float gridDivs;

		[Token(Token = "0x4000828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float gridWidth;

		[Token(Token = "0x4000829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float gridScale;

		[Token(Token = "0x400082A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HmdMatrix44_t transform;
	}
	[Token(Token = "0x2000118")]
	public struct CameraVideoStreamFrameHeader_t
	{
		[Token(Token = "0x400082B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public EVRTrackedCameraFrameType eFrameType;

		[Token(Token = "0x400082C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint nWidth;

		[Token(Token = "0x400082D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint nHeight;

		[Token(Token = "0x400082E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint nBytesPerPixel;

		[Token(Token = "0x400082F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint nFrameSequence;

		[Token(Token = "0x4000830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public TrackedDevicePose_t standingTrackedDevicePose;
	}
	[Token(Token = "0x2000119")]
	public struct DriverDirectMode_FrameTiming
	{
		[Token(Token = "0x4000831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nSize;

		[Token(Token = "0x4000832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint m_nNumFramePresents;

		[Token(Token = "0x4000833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint m_nNumMisPresented;

		[Token(Token = "0x4000834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint m_nNumDroppedFrames;

		[Token(Token = "0x4000835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint m_nReprojectionFlags;
	}
	[Token(Token = "0x200011A")]
	public struct AppOverrideKeys_t
	{
		[Token(Token = "0x4000836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr pchKey;

		[Token(Token = "0x4000837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr pchValue;
	}
	[Token(Token = "0x200011B")]
	public struct Compositor_FrameTiming
	{
		[Token(Token = "0x4000838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nSize;

		[Token(Token = "0x4000839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint m_nFrameIndex;

		[Token(Token = "0x400083A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint m_nNumFramePresents;

		[Token(Token = "0x400083B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint m_nNumMisPresented;

		[Token(Token = "0x400083C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint m_nNumDroppedFrames;

		[Token(Token = "0x400083D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public uint m_nReprojectionFlags;

		[Token(Token = "0x400083E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public double m_flSystemTimeInSeconds;

		[Token(Token = "0x400083F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_flPreSubmitGpuMs;

		[Token(Token = "0x4000840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m_flPostSubmitGpuMs;

		[Token(Token = "0x4000841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_flTotalRenderGpuMs;

		[Token(Token = "0x4000842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m_flCompositorRenderGpuMs;

		[Token(Token = "0x4000843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_flCompositorRenderCpuMs;

		[Token(Token = "0x4000844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m_flCompositorIdleCpuMs;

		[Token(Token = "0x4000845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m_flClientFrameIntervalMs;

		[Token(Token = "0x4000846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m_flPresentCallCpuMs;

		[Token(Token = "0x4000847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float m_flWaitForPresentCpuMs;

		[Token(Token = "0x4000848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float m_flSubmitFrameMs;

		[Token(Token = "0x4000849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float m_flWaitGetPosesCalledMs;

		[Token(Token = "0x400084A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float m_flNewPosesReadyMs;

		[Token(Token = "0x400084B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float m_flNewFrameReadyMs;

		[Token(Token = "0x400084C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float m_flCompositorUpdateStartMs;

		[Token(Token = "0x400084D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float m_flCompositorUpdateEndMs;

		[Token(Token = "0x400084E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float m_flCompositorRenderStartMs;

		[Token(Token = "0x400084F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public TrackedDevicePose_t m_HmdPose;
	}
	[Token(Token = "0x200011C")]
	public struct Compositor_CumulativeStats
	{
		[Token(Token = "0x4000850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nPid;

		[Token(Token = "0x4000851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint m_nNumFramePresents;

		[Token(Token = "0x4000852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint m_nNumDroppedFrames;

		[Token(Token = "0x4000853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint m_nNumReprojectedFrames;

		[Token(Token = "0x4000854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint m_nNumFramePresentsOnStartup;

		[Token(Token = "0x4000855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public uint m_nNumDroppedFramesOnStartup;

		[Token(Token = "0x4000856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public uint m_nNumReprojectedFramesOnStartup;

		[Token(Token = "0x4000857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public uint m_nNumLoading;

		[Token(Token = "0x4000858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public uint m_nNumFramePresentsLoading;

		[Token(Token = "0x4000859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public uint m_nNumDroppedFramesLoading;

		[Token(Token = "0x400085A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public uint m_nNumReprojectedFramesLoading;

		[Token(Token = "0x400085B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public uint m_nNumTimedOut;

		[Token(Token = "0x400085C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public uint m_nNumFramePresentsTimedOut;

		[Token(Token = "0x400085D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public uint m_nNumDroppedFramesTimedOut;

		[Token(Token = "0x400085E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public uint m_nNumReprojectedFramesTimedOut;
	}
	[Token(Token = "0x200011D")]
	public struct VROverlayIntersectionParams_t
	{
		[Token(Token = "0x400085F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector3_t vSource;

		[Token(Token = "0x4000860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HmdVector3_t vDirection;

		[Token(Token = "0x4000861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ETrackingUniverseOrigin eOrigin;
	}
	[Token(Token = "0x200011E")]
	public struct VROverlayIntersectionResults_t
	{
		[Token(Token = "0x4000862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector3_t vPoint;

		[Token(Token = "0x4000863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HmdVector3_t vNormal;

		[Token(Token = "0x4000864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HmdVector2_t vUVs;

		[Token(Token = "0x4000865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fDistance;
	}
	[Token(Token = "0x200011F")]
	public struct IntersectionMaskRectangle_t
	{
		[Token(Token = "0x4000866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m_flTopLeftX;

		[Token(Token = "0x4000867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m_flTopLeftY;

		[Token(Token = "0x4000868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m_flWidth;

		[Token(Token = "0x4000869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m_flHeight;
	}
	[Token(Token = "0x2000120")]
	public struct IntersectionMaskCircle_t
	{
		[Token(Token = "0x400086A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m_flCenterX;

		[Token(Token = "0x400086B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m_flCenterY;

		[Token(Token = "0x400086C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m_flRadius;
	}
	[Token(Token = "0x2000121")]
	public struct VROverlayIntersectionMaskPrimitive_t
	{
		[Token(Token = "0x400086D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public EVROverlayIntersectionMaskPrimitiveType m_nPrimitiveType;

		[Token(Token = "0x400086E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public VROverlayIntersectionMaskPrimitive_Data_t m_Primitive;
	}
	[Token(Token = "0x2000122")]
	public struct RenderModel_ComponentState_t
	{
		[Token(Token = "0x400086F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdMatrix34_t mTrackingToComponentRenderModel;

		[Token(Token = "0x4000870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HmdMatrix34_t mTrackingToComponentLocal;

		[Token(Token = "0x4000871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public uint uProperties;
	}
	[Token(Token = "0x2000123")]
	public struct RenderModel_Vertex_t
	{
		[Token(Token = "0x4000872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector3_t vPosition;

		[Token(Token = "0x4000873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HmdVector3_t vNormal;

		[Token(Token = "0x4000874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float rfTextureCoord0;

		[Token(Token = "0x4000875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float rfTextureCoord1;
	}
	[Token(Token = "0x2000124")]
	public struct RenderModel_TextureMap_t
	{
		[Token(Token = "0x4000876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public char unWidth;

		[Token(Token = "0x4000877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public char unHeight;

		[Token(Token = "0x4000878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr rubTextureMapData;
	}
	[Token(Token = "0x2000125")]
	public struct RenderModel_TextureMap_t_Packed
	{
		[Token(Token = "0x4000879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public char unWidth;

		[Token(Token = "0x400087A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public char unHeight;

		[Token(Token = "0x400087B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr rubTextureMapData;

		[Token(Token = "0x60008CE")]
		[Address(RVA = "0xDF1528", Offset = "0xDF1528", VA = "0xDF1528")]
		public RenderModel_TextureMap_t_Packed(RenderModel_TextureMap_t unpacked)
		{
		}

		[Token(Token = "0x60008CF")]
		[Address(RVA = "0xDF153C", Offset = "0xDF153C", VA = "0xDF153C")]
		public void Unpack(ref RenderModel_TextureMap_t unpacked)
		{
		}
	}
	[Token(Token = "0x2000126")]
	public struct RenderModel_t
	{
		[Token(Token = "0x400087C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr rVertexData;

		[Token(Token = "0x400087D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint unVertexCount;

		[Token(Token = "0x400087E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr rIndexData;

		[Token(Token = "0x400087F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public uint unTriangleCount;

		[Token(Token = "0x4000880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int diffuseTextureId;
	}
	[Token(Token = "0x2000127")]
	public struct RenderModel_t_Packed
	{
		[Token(Token = "0x4000881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr rVertexData;

		[Token(Token = "0x4000882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint unVertexCount;

		[Token(Token = "0x4000883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public IntPtr rIndexData;

		[Token(Token = "0x4000884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public uint unTriangleCount;

		[Token(Token = "0x4000885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int diffuseTextureId;

		[Token(Token = "0x60008D0")]
		[Address(RVA = "0xDF1558", Offset = "0xDF1558", VA = "0xDF1558")]
		public RenderModel_t_Packed(RenderModel_t unpacked)
		{
		}

		[Token(Token = "0x60008D1")]
		[Address(RVA = "0xDF1578", Offset = "0xDF1578", VA = "0xDF1578")]
		public void Unpack(ref RenderModel_t unpacked)
		{
		}
	}
	[Token(Token = "0x2000128")]
	public struct RenderModel_ControllerMode_State_t
	{
		[Token(Token = "0x4000886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool bScrollWheelVisible;
	}
	[Token(Token = "0x2000129")]
	public struct NotificationBitmap_t
	{
		[Token(Token = "0x4000887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr m_pImageData;

		[Token(Token = "0x4000888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int m_nWidth;

		[Token(Token = "0x4000889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int m_nHeight;

		[Token(Token = "0x400088A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int m_nBytesPerPixel;
	}
	[Token(Token = "0x200012A")]
	public struct COpenVRContext
	{
		[Token(Token = "0x400088B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr m_pVRSystem;

		[Token(Token = "0x400088C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr m_pVRChaperone;

		[Token(Token = "0x400088D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr m_pVRChaperoneSetup;

		[Token(Token = "0x400088E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IntPtr m_pVRCompositor;

		[Token(Token = "0x400088F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IntPtr m_pVROverlay;

		[Token(Token = "0x4000890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IntPtr m_pVRResources;

		[Token(Token = "0x4000891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public IntPtr m_pVRRenderModels;

		[Token(Token = "0x4000892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IntPtr m_pVRExtendedDisplay;

		[Token(Token = "0x4000893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public IntPtr m_pVRSettings;

		[Token(Token = "0x4000894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public IntPtr m_pVRApplications;

		[Token(Token = "0x4000895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public IntPtr m_pVRTrackedCamera;

		[Token(Token = "0x4000896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public IntPtr m_pVRScreenshots;

		[Token(Token = "0x4000897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public IntPtr m_pVRDriverManager;
	}
	[Token(Token = "0x200012B")]
	public class OpenVR
	{
		[Token(Token = "0x20003F1")]
		private class COpenVRContext
		{
			[Token(Token = "0x4000E21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private CVRSystem m_pVRSystem;

			[Token(Token = "0x4000E22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private CVRChaperone m_pVRChaperone;

			[Token(Token = "0x4000E23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private CVRChaperoneSetup m_pVRChaperoneSetup;

			[Token(Token = "0x4000E24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private CVRCompositor m_pVRCompositor;

			[Token(Token = "0x4000E25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private CVROverlay m_pVROverlay;

			[Token(Token = "0x4000E26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private CVRRenderModels m_pVRRenderModels;

			[Token(Token = "0x4000E27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private CVRExtendedDisplay m_pVRExtendedDisplay;

			[Token(Token = "0x4000E28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private CVRSettings m_pVRSettings;

			[Token(Token = "0x4000E29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private CVRApplications m_pVRApplications;

			[Token(Token = "0x4000E2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private CVRScreenshots m_pVRScreenshots;

			[Token(Token = "0x4000E2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private CVRTrackedCamera m_pVRTrackedCamera;

			[Token(Token = "0x60015BB")]
			[Address(RVA = "0x15637D4", Offset = "0x15637D4", VA = "0x15637D4")]
			public COpenVRContext()
			{
			}

			[Token(Token = "0x60015BC")]
			[Address(RVA = "0x1564638", Offset = "0x1564638", VA = "0x1564638")]
			public void Clear()
			{
			}

			[Token(Token = "0x60015BD")]
			[Address(RVA = "0x1564764", Offset = "0x1564764", VA = "0x1564764")]
			private void CheckClear()
			{
			}

			[Token(Token = "0x60015BE")]
			[Address(RVA = "0x1563864", Offset = "0x1563864", VA = "0x1563864")]
			public CVRSystem VRSystem()
			{
				return null;
			}

			[Token(Token = "0x60015BF")]
			[Address(RVA = "0x1563990", Offset = "0x1563990", VA = "0x1563990")]
			public CVRChaperone VRChaperone()
			{
				return null;
			}

			[Token(Token = "0x60015C0")]
			[Address(RVA = "0x1563ABC", Offset = "0x1563ABC", VA = "0x1563ABC")]
			public CVRChaperoneSetup VRChaperoneSetup()
			{
				return null;
			}

			[Token(Token = "0x60015C1")]
			[Address(RVA = "0x1563BE8", Offset = "0x1563BE8", VA = "0x1563BE8")]
			public CVRCompositor VRCompositor()
			{
				return null;
			}

			[Token(Token = "0x60015C2")]
			[Address(RVA = "0x1563D14", Offset = "0x1563D14", VA = "0x1563D14")]
			public CVROverlay VROverlay()
			{
				return null;
			}

			[Token(Token = "0x60015C3")]
			[Address(RVA = "0x1563E40", Offset = "0x1563E40", VA = "0x1563E40")]
			public CVRRenderModels VRRenderModels()
			{
				return null;
			}

			[Token(Token = "0x60015C4")]
			[Address(RVA = "0x1563F6C", Offset = "0x1563F6C", VA = "0x1563F6C")]
			public CVRExtendedDisplay VRExtendedDisplay()
			{
				return null;
			}

			[Token(Token = "0x60015C5")]
			[Address(RVA = "0x1564098", Offset = "0x1564098", VA = "0x1564098")]
			public CVRSettings VRSettings()
			{
				return null;
			}

			[Token(Token = "0x60015C6")]
			[Address(RVA = "0x15641C4", Offset = "0x15641C4", VA = "0x15641C4")]
			public CVRApplications VRApplications()
			{
				return null;
			}

			[Token(Token = "0x60015C7")]
			[Address(RVA = "0x15642F0", Offset = "0x15642F0", VA = "0x15642F0")]
			public CVRScreenshots VRScreenshots()
			{
				return null;
			}

			[Token(Token = "0x60015C8")]
			[Address(RVA = "0x156441C", Offset = "0x156441C", VA = "0x156441C")]
			public CVRTrackedCamera VRTrackedCamera()
			{
				return null;
			}
		}

		[Token(Token = "0x4000898")]
		public const uint k_nDriverNone = uint.MaxValue;

		[Token(Token = "0x4000899")]
		public const uint k_unMaxDriverDebugResponseSize = 32768u;

		[Token(Token = "0x400089A")]
		public const uint k_unTrackedDeviceIndex_Hmd = 0u;

		[Token(Token = "0x400089B")]
		public const uint k_unMaxTrackedDeviceCount = 64u;

		[Token(Token = "0x400089C")]
		public const uint k_unTrackedDeviceIndexOther = 4294967294u;

		[Token(Token = "0x400089D")]
		public const uint k_unTrackedDeviceIndexInvalid = uint.MaxValue;

		[Token(Token = "0x400089E")]
		public const ulong k_ulInvalidPropertyContainer = 0uL;

		[Token(Token = "0x400089F")]
		public const uint k_unInvalidPropertyTag = 0u;

		[Token(Token = "0x40008A0")]
		public const ulong k_ulInvalidDriverHandle = 0uL;

		[Token(Token = "0x40008A1")]
		public const uint k_unFloatPropertyTag = 1u;

		[Token(Token = "0x40008A2")]
		public const uint k_unInt32PropertyTag = 2u;

		[Token(Token = "0x40008A3")]
		public const uint k_unUint64PropertyTag = 3u;

		[Token(Token = "0x40008A4")]
		public const uint k_unBoolPropertyTag = 4u;

		[Token(Token = "0x40008A5")]
		public const uint k_unStringPropertyTag = 5u;

		[Token(Token = "0x40008A6")]
		public const uint k_unHmdMatrix34PropertyTag = 20u;

		[Token(Token = "0x40008A7")]
		public const uint k_unHmdMatrix44PropertyTag = 21u;

		[Token(Token = "0x40008A8")]
		public const uint k_unHmdVector3PropertyTag = 22u;

		[Token(Token = "0x40008A9")]
		public const uint k_unHmdVector4PropertyTag = 23u;

		[Token(Token = "0x40008AA")]
		public const uint k_unHiddenAreaPropertyTag = 30u;

		[Token(Token = "0x40008AB")]
		public const uint k_unPathHandleInfoTag = 31u;

		[Token(Token = "0x40008AC")]
		public const uint k_unActionPropertyTag = 32u;

		[Token(Token = "0x40008AD")]
		public const uint k_unInputValuePropertyTag = 33u;

		[Token(Token = "0x40008AE")]
		public const uint k_unWildcardPropertyTag = 34u;

		[Token(Token = "0x40008AF")]
		public const uint k_unHapticVibrationPropertyTag = 35u;

		[Token(Token = "0x40008B0")]
		public const uint k_unOpenVRInternalReserved_Start = 1000u;

		[Token(Token = "0x40008B1")]
		public const uint k_unOpenVRInternalReserved_End = 10000u;

		[Token(Token = "0x40008B2")]
		public const uint k_unMaxPropertyStringSize = 32768u;

		[Token(Token = "0x40008B3")]
		public const uint k_unControllerStateAxisCount = 5u;

		[Token(Token = "0x40008B4")]
		public const ulong k_ulOverlayHandleInvalid = 0uL;

		[Token(Token = "0x40008B5")]
		public const uint k_unScreenshotHandleInvalid = 0u;

		[Token(Token = "0x40008B6")]
		public const string IVRSystem_Version = "IVRSystem_019";

		[Token(Token = "0x40008B7")]
		public const string IVRExtendedDisplay_Version = "IVRExtendedDisplay_001";

		[Token(Token = "0x40008B8")]
		public const string IVRTrackedCamera_Version = "IVRTrackedCamera_003";

		[Token(Token = "0x40008B9")]
		public const uint k_unMaxApplicationKeyLength = 128u;

		[Token(Token = "0x40008BA")]
		public const string k_pch_MimeType_HomeApp = "vr/home";

		[Token(Token = "0x40008BB")]
		public const string k_pch_MimeType_GameTheater = "vr/game_theater";

		[Token(Token = "0x40008BC")]
		public const string IVRApplications_Version = "IVRApplications_006";

		[Token(Token = "0x40008BD")]
		public const string IVRChaperone_Version = "IVRChaperone_003";

		[Token(Token = "0x40008BE")]
		public const string IVRChaperoneSetup_Version = "IVRChaperoneSetup_005";

		[Token(Token = "0x40008BF")]
		public const string IVRCompositor_Version = "IVRCompositor_022";

		[Token(Token = "0x40008C0")]
		public const uint k_unVROverlayMaxKeyLength = 128u;

		[Token(Token = "0x40008C1")]
		public const uint k_unVROverlayMaxNameLength = 128u;

		[Token(Token = "0x40008C2")]
		public const uint k_unMaxOverlayCount = 64u;

		[Token(Token = "0x40008C3")]
		public const uint k_unMaxOverlayIntersectionMaskPrimitivesCount = 32u;

		[Token(Token = "0x40008C4")]
		public const string IVROverlay_Version = "IVROverlay_018";

		[Token(Token = "0x40008C5")]
		public const string k_pch_Controller_Component_GDC2015 = "gdc2015";

		[Token(Token = "0x40008C6")]
		public const string k_pch_Controller_Component_Base = "base";

		[Token(Token = "0x40008C7")]
		public const string k_pch_Controller_Component_Tip = "tip";

		[Token(Token = "0x40008C8")]
		public const string k_pch_Controller_Component_HandGrip = "handgrip";

		[Token(Token = "0x40008C9")]
		public const string k_pch_Controller_Component_Status = "status";

		[Token(Token = "0x40008CA")]
		public const string IVRRenderModels_Version = "IVRRenderModels_005";

		[Token(Token = "0x40008CB")]
		public const uint k_unNotificationTextMaxSize = 256u;

		[Token(Token = "0x40008CC")]
		public const string IVRNotifications_Version = "IVRNotifications_002";

		[Token(Token = "0x40008CD")]
		public const uint k_unMaxSettingsKeyLength = 128u;

		[Token(Token = "0x40008CE")]
		public const string IVRSettings_Version = "IVRSettings_002";

		[Token(Token = "0x40008CF")]
		public const string k_pch_SteamVR_Section = "steamvr";

		[Token(Token = "0x40008D0")]
		public const string k_pch_SteamVR_RequireHmd_String = "requireHmd";

		[Token(Token = "0x40008D1")]
		public const string k_pch_SteamVR_ForcedDriverKey_String = "forcedDriver";

		[Token(Token = "0x40008D2")]
		public const string k_pch_SteamVR_ForcedHmdKey_String = "forcedHmd";

		[Token(Token = "0x40008D3")]
		public const string k_pch_SteamVR_DisplayDebug_Bool = "displayDebug";

		[Token(Token = "0x40008D4")]
		public const string k_pch_SteamVR_DebugProcessPipe_String = "debugProcessPipe";

		[Token(Token = "0x40008D5")]
		public const string k_pch_SteamVR_DisplayDebugX_Int32 = "displayDebugX";

		[Token(Token = "0x40008D6")]
		public const string k_pch_SteamVR_DisplayDebugY_Int32 = "displayDebugY";

		[Token(Token = "0x40008D7")]
		public const string k_pch_SteamVR_SendSystemButtonToAllApps_Bool = "sendSystemButtonToAllApps";

		[Token(Token = "0x40008D8")]
		public const string k_pch_SteamVR_LogLevel_Int32 = "loglevel";

		[Token(Token = "0x40008D9")]
		public const string k_pch_SteamVR_IPD_Float = "ipd";

		[Token(Token = "0x40008DA")]
		public const string k_pch_SteamVR_Background_String = "background";

		[Token(Token = "0x40008DB")]
		public const string k_pch_SteamVR_BackgroundUseDomeProjection_Bool = "backgroundUseDomeProjection";

		[Token(Token = "0x40008DC")]
		public const string k_pch_SteamVR_BackgroundCameraHeight_Float = "backgroundCameraHeight";

		[Token(Token = "0x40008DD")]
		public const string k_pch_SteamVR_BackgroundDomeRadius_Float = "backgroundDomeRadius";

		[Token(Token = "0x40008DE")]
		public const string k_pch_SteamVR_GridColor_String = "gridColor";

		[Token(Token = "0x40008DF")]
		public const string k_pch_SteamVR_PlayAreaColor_String = "playAreaColor";

		[Token(Token = "0x40008E0")]
		public const string k_pch_SteamVR_ShowStage_Bool = "showStage";

		[Token(Token = "0x40008E1")]
		public const string k_pch_SteamVR_ActivateMultipleDrivers_Bool = "activateMultipleDrivers";

		[Token(Token = "0x40008E2")]
		public const string k_pch_SteamVR_DirectMode_Bool = "directMode";

		[Token(Token = "0x40008E3")]
		public const string k_pch_SteamVR_DirectModeEdidVid_Int32 = "directModeEdidVid";

		[Token(Token = "0x40008E4")]
		public const string k_pch_SteamVR_DirectModeEdidPid_Int32 = "directModeEdidPid";

		[Token(Token = "0x40008E5")]
		public const string k_pch_SteamVR_UsingSpeakers_Bool = "usingSpeakers";

		[Token(Token = "0x40008E6")]
		public const string k_pch_SteamVR_SpeakersForwardYawOffsetDegrees_Float = "speakersForwardYawOffsetDegrees";

		[Token(Token = "0x40008E7")]
		public const string k_pch_SteamVR_BaseStationPowerManagement_Bool = "basestationPowerManagement";

		[Token(Token = "0x40008E8")]
		public const string k_pch_SteamVR_NeverKillProcesses_Bool = "neverKillProcesses";

		[Token(Token = "0x40008E9")]
		public const string k_pch_SteamVR_SupersampleScale_Float = "supersampleScale";

		[Token(Token = "0x40008EA")]
		public const string k_pch_SteamVR_AllowAsyncReprojection_Bool = "allowAsyncReprojection";

		[Token(Token = "0x40008EB")]
		public const string k_pch_SteamVR_AllowReprojection_Bool = "allowInterleavedReprojection";

		[Token(Token = "0x40008EC")]
		public const string k_pch_SteamVR_ForceReprojection_Bool = "forceReprojection";

		[Token(Token = "0x40008ED")]
		public const string k_pch_SteamVR_ForceFadeOnBadTracking_Bool = "forceFadeOnBadTracking";

		[Token(Token = "0x40008EE")]
		public const string k_pch_SteamVR_DefaultMirrorView_Int32 = "defaultMirrorView";

		[Token(Token = "0x40008EF")]
		public const string k_pch_SteamVR_ShowMirrorView_Bool = "showMirrorView";

		[Token(Token = "0x40008F0")]
		public const string k_pch_SteamVR_MirrorViewGeometry_String = "mirrorViewGeometry";

		[Token(Token = "0x40008F1")]
		public const string k_pch_SteamVR_StartMonitorFromAppLaunch = "startMonitorFromAppLaunch";

		[Token(Token = "0x40008F2")]
		public const string k_pch_SteamVR_StartCompositorFromAppLaunch_Bool = "startCompositorFromAppLaunch";

		[Token(Token = "0x40008F3")]
		public const string k_pch_SteamVR_StartDashboardFromAppLaunch_Bool = "startDashboardFromAppLaunch";

		[Token(Token = "0x40008F4")]
		public const string k_pch_SteamVR_StartOverlayAppsFromDashboard_Bool = "startOverlayAppsFromDashboard";

		[Token(Token = "0x40008F5")]
		public const string k_pch_SteamVR_EnableHomeApp = "enableHomeApp";

		[Token(Token = "0x40008F6")]
		public const string k_pch_SteamVR_CycleBackgroundImageTimeSec_Int32 = "CycleBackgroundImageTimeSec";

		[Token(Token = "0x40008F7")]
		public const string k_pch_SteamVR_RetailDemo_Bool = "retailDemo";

		[Token(Token = "0x40008F8")]
		public const string k_pch_SteamVR_IpdOffset_Float = "ipdOffset";

		[Token(Token = "0x40008F9")]
		public const string k_pch_SteamVR_AllowSupersampleFiltering_Bool = "allowSupersampleFiltering";

		[Token(Token = "0x40008FA")]
		public const string k_pch_SteamVR_EnableLinuxVulkanAsync_Bool = "enableLinuxVulkanAsync";

		[Token(Token = "0x40008FB")]
		public const string k_pch_SteamVR_AllowDisplayLockedMode_Bool = "allowDisplayLockedMode";

		[Token(Token = "0x40008FC")]
		public const string k_pch_SteamVR_HaveStartedTutorialForNativeChaperoneDriver_Bool = "haveStartedTutorialForNativeChaperoneDriver";

		[Token(Token = "0x40008FD")]
		public const string k_pch_SteamVR_ForceWindows32bitVRMonitor = "forceWindows32BitVRMonitor";

		[Token(Token = "0x40008FE")]
		public const string k_pch_SteamVR_DebugInput = "debugInput";

		[Token(Token = "0x40008FF")]
		public const string k_pch_Lighthouse_Section = "driver_lighthouse";

		[Token(Token = "0x4000900")]
		public const string k_pch_Lighthouse_DisableIMU_Bool = "disableimu";

		[Token(Token = "0x4000901")]
		public const string k_pch_Lighthouse_DisableIMUExceptHMD_Bool = "disableimuexcepthmd";

		[Token(Token = "0x4000902")]
		public const string k_pch_Lighthouse_UseDisambiguation_String = "usedisambiguation";

		[Token(Token = "0x4000903")]
		public const string k_pch_Lighthouse_DisambiguationDebug_Int32 = "disambiguationdebug";

		[Token(Token = "0x4000904")]
		public const string k_pch_Lighthouse_PrimaryBasestation_Int32 = "primarybasestation";

		[Token(Token = "0x4000905")]
		public const string k_pch_Lighthouse_DBHistory_Bool = "dbhistory";

		[Token(Token = "0x4000906")]
		public const string k_pch_Lighthouse_EnableBluetooth_Bool = "enableBluetooth";

		[Token(Token = "0x4000907")]
		public const string k_pch_Lighthouse_PowerManagedBaseStations_String = "PowerManagedBaseStations";

		[Token(Token = "0x4000908")]
		public const string k_pch_Null_Section = "driver_null";

		[Token(Token = "0x4000909")]
		public const string k_pch_Null_SerialNumber_String = "serialNumber";

		[Token(Token = "0x400090A")]
		public const string k_pch_Null_ModelNumber_String = "modelNumber";

		[Token(Token = "0x400090B")]
		public const string k_pch_Null_WindowX_Int32 = "windowX";

		[Token(Token = "0x400090C")]
		public const string k_pch_Null_WindowY_Int32 = "windowY";

		[Token(Token = "0x400090D")]
		public const string k_pch_Null_WindowWidth_Int32 = "windowWidth";

		[Token(Token = "0x400090E")]
		public const string k_pch_Null_WindowHeight_Int32 = "windowHeight";

		[Token(Token = "0x400090F")]
		public const string k_pch_Null_RenderWidth_Int32 = "renderWidth";

		[Token(Token = "0x4000910")]
		public const string k_pch_Null_RenderHeight_Int32 = "renderHeight";

		[Token(Token = "0x4000911")]
		public const string k_pch_Null_SecondsFromVsyncToPhotons_Float = "secondsFromVsyncToPhotons";

		[Token(Token = "0x4000912")]
		public const string k_pch_Null_DisplayFrequency_Float = "displayFrequency";

		[Token(Token = "0x4000913")]
		public const string k_pch_UserInterface_Section = "userinterface";

		[Token(Token = "0x4000914")]
		public const string k_pch_UserInterface_StatusAlwaysOnTop_Bool = "StatusAlwaysOnTop";

		[Token(Token = "0x4000915")]
		public const string k_pch_UserInterface_MinimizeToTray_Bool = "MinimizeToTray";

		[Token(Token = "0x4000916")]
		public const string k_pch_UserInterface_Screenshots_Bool = "screenshots";

		[Token(Token = "0x4000917")]
		public const string k_pch_UserInterface_ScreenshotType_Int = "screenshotType";

		[Token(Token = "0x4000918")]
		public const string k_pch_Notifications_Section = "notifications";

		[Token(Token = "0x4000919")]
		public const string k_pch_Notifications_DoNotDisturb_Bool = "DoNotDisturb";

		[Token(Token = "0x400091A")]
		public const string k_pch_Keyboard_Section = "keyboard";

		[Token(Token = "0x400091B")]
		public const string k_pch_Keyboard_TutorialCompletions = "TutorialCompletions";

		[Token(Token = "0x400091C")]
		public const string k_pch_Keyboard_ScaleX = "ScaleX";

		[Token(Token = "0x400091D")]
		public const string k_pch_Keyboard_ScaleY = "ScaleY";

		[Token(Token = "0x400091E")]
		public const string k_pch_Keyboard_OffsetLeftX = "OffsetLeftX";

		[Token(Token = "0x400091F")]
		public const string k_pch_Keyboard_OffsetRightX = "OffsetRightX";

		[Token(Token = "0x4000920")]
		public const string k_pch_Keyboard_OffsetY = "OffsetY";

		[Token(Token = "0x4000921")]
		public const string k_pch_Keyboard_Smoothing = "Smoothing";

		[Token(Token = "0x4000922")]
		public const string k_pch_Perf_Section = "perfcheck";

		[Token(Token = "0x4000923")]
		public const string k_pch_Perf_HeuristicActive_Bool = "heuristicActive";

		[Token(Token = "0x4000924")]
		public const string k_pch_Perf_NotifyInHMD_Bool = "warnInHMD";

		[Token(Token = "0x4000925")]
		public const string k_pch_Perf_NotifyOnlyOnce_Bool = "warnOnlyOnce";

		[Token(Token = "0x4000926")]
		public const string k_pch_Perf_AllowTimingStore_Bool = "allowTimingStore";

		[Token(Token = "0x4000927")]
		public const string k_pch_Perf_SaveTimingsOnExit_Bool = "saveTimingsOnExit";

		[Token(Token = "0x4000928")]
		public const string k_pch_Perf_TestData_Float = "perfTestData";

		[Token(Token = "0x4000929")]
		public const string k_pch_Perf_LinuxGPUProfiling_Bool = "linuxGPUProfiling";

		[Token(Token = "0x400092A")]
		public const string k_pch_CollisionBounds_Section = "collisionBounds";

		[Token(Token = "0x400092B")]
		public const string k_pch_CollisionBounds_Style_Int32 = "CollisionBoundsStyle";

		[Token(Token = "0x400092C")]
		public const string k_pch_CollisionBounds_GroundPerimeterOn_Bool = "CollisionBoundsGroundPerimeterOn";

		[Token(Token = "0x400092D")]
		public const string k_pch_CollisionBounds_CenterMarkerOn_Bool = "CollisionBoundsCenterMarkerOn";

		[Token(Token = "0x400092E")]
		public const string k_pch_CollisionBounds_PlaySpaceOn_Bool = "CollisionBoundsPlaySpaceOn";

		[Token(Token = "0x400092F")]
		public const string k_pch_CollisionBounds_FadeDistance_Float = "CollisionBoundsFadeDistance";

		[Token(Token = "0x4000930")]
		public const string k_pch_CollisionBounds_ColorGammaR_Int32 = "CollisionBoundsColorGammaR";

		[Token(Token = "0x4000931")]
		public const string k_pch_CollisionBounds_ColorGammaG_Int32 = "CollisionBoundsColorGammaG";

		[Token(Token = "0x4000932")]
		public const string k_pch_CollisionBounds_ColorGammaB_Int32 = "CollisionBoundsColorGammaB";

		[Token(Token = "0x4000933")]
		public const string k_pch_CollisionBounds_ColorGammaA_Int32 = "CollisionBoundsColorGammaA";

		[Token(Token = "0x4000934")]
		public const string k_pch_Camera_Section = "camera";

		[Token(Token = "0x4000935")]
		public const string k_pch_Camera_EnableCamera_Bool = "enableCamera";

		[Token(Token = "0x4000936")]
		public const string k_pch_Camera_EnableCameraInDashboard_Bool = "enableCameraInDashboard";

		[Token(Token = "0x4000937")]
		public const string k_pch_Camera_EnableCameraForCollisionBounds_Bool = "enableCameraForCollisionBounds";

		[Token(Token = "0x4000938")]
		public const string k_pch_Camera_EnableCameraForRoomView_Bool = "enableCameraForRoomView";

		[Token(Token = "0x4000939")]
		public const string k_pch_Camera_BoundsColorGammaR_Int32 = "cameraBoundsColorGammaR";

		[Token(Token = "0x400093A")]
		public const string k_pch_Camera_BoundsColorGammaG_Int32 = "cameraBoundsColorGammaG";

		[Token(Token = "0x400093B")]
		public const string k_pch_Camera_BoundsColorGammaB_Int32 = "cameraBoundsColorGammaB";

		[Token(Token = "0x400093C")]
		public const string k_pch_Camera_BoundsColorGammaA_Int32 = "cameraBoundsColorGammaA";

		[Token(Token = "0x400093D")]
		public const string k_pch_Camera_BoundsStrength_Int32 = "cameraBoundsStrength";

		[Token(Token = "0x400093E")]
		public const string k_pch_audio_Section = "audio";

		[Token(Token = "0x400093F")]
		public const string k_pch_audio_OnPlaybackDevice_String = "onPlaybackDevice";

		[Token(Token = "0x4000940")]
		public const string k_pch_audio_OnRecordDevice_String = "onRecordDevice";

		[Token(Token = "0x4000941")]
		public const string k_pch_audio_OnPlaybackMirrorDevice_String = "onPlaybackMirrorDevice";

		[Token(Token = "0x4000942")]
		public const string k_pch_audio_OffPlaybackDevice_String = "offPlaybackDevice";

		[Token(Token = "0x4000943")]
		public const string k_pch_audio_OffRecordDevice_String = "offRecordDevice";

		[Token(Token = "0x4000944")]
		public const string k_pch_audio_VIVEHDMIGain = "viveHDMIGain";

		[Token(Token = "0x4000945")]
		public const string k_pch_Power_Section = "power";

		[Token(Token = "0x4000946")]
		public const string k_pch_Power_PowerOffOnExit_Bool = "powerOffOnExit";

		[Token(Token = "0x4000947")]
		public const string k_pch_Power_TurnOffScreensTimeout_Float = "turnOffScreensTimeout";

		[Token(Token = "0x4000948")]
		public const string k_pch_Power_TurnOffControllersTimeout_Float = "turnOffControllersTimeout";

		[Token(Token = "0x4000949")]
		public const string k_pch_Power_ReturnToWatchdogTimeout_Float = "returnToWatchdogTimeout";

		[Token(Token = "0x400094A")]
		public const string k_pch_Power_AutoLaunchSteamVROnButtonPress = "autoLaunchSteamVROnButtonPress";

		[Token(Token = "0x400094B")]
		public const string k_pch_Power_PauseCompositorOnStandby_Bool = "pauseCompositorOnStandby";

		[Token(Token = "0x400094C")]
		public const string k_pch_Dashboard_Section = "dashboard";

		[Token(Token = "0x400094D")]
		public const string k_pch_Dashboard_EnableDashboard_Bool = "enableDashboard";

		[Token(Token = "0x400094E")]
		public const string k_pch_Dashboard_ArcadeMode_Bool = "arcadeMode";

		[Token(Token = "0x400094F")]
		public const string k_pch_Dashboard_EnableWebUI = "webUI";

		[Token(Token = "0x4000950")]
		public const string k_pch_modelskin_Section = "modelskins";

		[Token(Token = "0x4000951")]
		public const string k_pch_Driver_Enable_Bool = "enable";

		[Token(Token = "0x4000952")]
		public const string k_pch_WebInterface_Section = "WebInterface";

		[Token(Token = "0x4000953")]
		public const string k_pch_WebInterface_WebPort_String = "WebPort";

		[Token(Token = "0x4000954")]
		public const string IVRScreenshots_Version = "IVRScreenshots_001";

		[Token(Token = "0x4000955")]
		public const string IVRResources_Version = "IVRResources_001";

		[Token(Token = "0x4000956")]
		public const string IVRDriverManager_Version = "IVRDriverManager_001";

		[Token(Token = "0x4000957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB16D4", Offset = "0xCB16D4")]
		private static uint <VRToken>k__BackingField;

		[Token(Token = "0x4000958")]
		private const string FnTable_Prefix = "FnTable:";

		[Token(Token = "0x4000959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static COpenVRContext _OpenVRInternal_ModuleContext;

		[Token(Token = "0x170000D5")]
		private static uint VRToken
		{
			[Token(Token = "0x60008DA")]
			[Address(RVA = "0x1563620", Offset = "0x1563620", VA = "0x1563620")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB4C10", Offset = "0xCB4C10")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x60008DB")]
			[Address(RVA = "0x1563688", Offset = "0x1563688", VA = "0x1563688")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB4C20", Offset = "0xCB4C20")]
			set
			{
			}
		}

		[Token(Token = "0x170000D6")]
		private static COpenVRContext OpenVRInternal_ModuleContext
		{
			[Token(Token = "0x60008DC")]
			[Address(RVA = "0x15636F4", Offset = "0x15636F4", VA = "0x15636F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D7")]
		public static CVRSystem System
		{
			[Token(Token = "0x60008DD")]
			[Address(RVA = "0x15637FC", Offset = "0x15637FC", VA = "0x15637FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D8")]
		public static CVRChaperone Chaperone
		{
			[Token(Token = "0x60008DE")]
			[Address(RVA = "0x1563928", Offset = "0x1563928", VA = "0x1563928")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D9")]
		public static CVRChaperoneSetup ChaperoneSetup
		{
			[Token(Token = "0x60008DF")]
			[Address(RVA = "0x1563A54", Offset = "0x1563A54", VA = "0x1563A54")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DA")]
		public static CVRCompositor Compositor
		{
			[Token(Token = "0x60008E0")]
			[Address(RVA = "0x1563B80", Offset = "0x1563B80", VA = "0x1563B80")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DB")]
		public static CVROverlay Overlay
		{
			[Token(Token = "0x60008E1")]
			[Address(RVA = "0x1563CAC", Offset = "0x1563CAC", VA = "0x1563CAC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DC")]
		public static CVRRenderModels RenderModels
		{
			[Token(Token = "0x60008E2")]
			[Address(RVA = "0x1563DD8", Offset = "0x1563DD8", VA = "0x1563DD8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DD")]
		public static CVRExtendedDisplay ExtendedDisplay
		{
			[Token(Token = "0x60008E3")]
			[Address(RVA = "0x1563F04", Offset = "0x1563F04", VA = "0x1563F04")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DE")]
		public static CVRSettings Settings
		{
			[Token(Token = "0x60008E4")]
			[Address(RVA = "0x1564030", Offset = "0x1564030", VA = "0x1564030")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DF")]
		public static CVRApplications Applications
		{
			[Token(Token = "0x60008E5")]
			[Address(RVA = "0x156415C", Offset = "0x156415C", VA = "0x156415C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E0")]
		public static CVRScreenshots Screenshots
		{
			[Token(Token = "0x60008E6")]
			[Address(RVA = "0x1564288", Offset = "0x1564288", VA = "0x1564288")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E1")]
		public static CVRTrackedCamera TrackedCamera
		{
			[Token(Token = "0x60008E7")]
			[Address(RVA = "0x15643B4", Offset = "0x15643B4", VA = "0x15643B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008D2")]
		[Address(RVA = "0x156315C", Offset = "0x156315C", VA = "0x156315C")]
		public static uint InitInternal(ref EVRInitError peError, EVRApplicationType eApplicationType)
		{
			return default(uint);
		}

		[Token(Token = "0x60008D3")]
		[Address(RVA = "0x15631F0", Offset = "0x15631F0", VA = "0x15631F0")]
		public static void ShutdownInternal()
		{
		}

		[Token(Token = "0x60008D4")]
		[Address(RVA = "0x1563264", Offset = "0x1563264", VA = "0x1563264")]
		public static bool IsHmdPresent()
		{
			return default(bool);
		}

		[Token(Token = "0x60008D5")]
		[Address(RVA = "0x15632E4", Offset = "0x15632E4", VA = "0x15632E4")]
		public static bool IsRuntimeInstalled()
		{
			return default(bool);
		}

		[Token(Token = "0x60008D6")]
		[Address(RVA = "0x1563364", Offset = "0x1563364", VA = "0x1563364")]
		public static string GetStringForHmdError(EVRInitError error)
		{
			return null;
		}

		[Token(Token = "0x60008D7")]
		[Address(RVA = "0x156345C", Offset = "0x156345C", VA = "0x156345C")]
		public static IntPtr GetGenericInterface(string pchInterfaceVersion, ref EVRInitError peError)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60008D8")]
		[Address(RVA = "0x1563508", Offset = "0x1563508", VA = "0x1563508")]
		public static bool IsInterfaceVersionValid(string pchInterfaceVersion)
		{
			return default(bool);
		}

		[Token(Token = "0x60008D9")]
		[Address(RVA = "0x15635A8", Offset = "0x15635A8", VA = "0x15635A8")]
		public static uint GetInitToken()
		{
			return default(uint);
		}

		[Token(Token = "0x60008E8")]
		[Address(RVA = "0x15644E0", Offset = "0x15644E0", VA = "0x15644E0")]
		public static CVRSystem Init(ref EVRInitError peError, EVRApplicationType eApplicationType = EVRApplicationType.VRApplication_Scene)
		{
			return null;
		}

		[Token(Token = "0x60008E9")]
		[Address(RVA = "0x15646FC", Offset = "0x15646FC", VA = "0x15646FC")]
		public static void Shutdown()
		{
		}

		[Token(Token = "0x60008EA")]
		[Address(RVA = "0x1564758", Offset = "0x1564758", VA = "0x1564758")]
		public OpenVR()
		{
		}
	}
}
namespace RoboRyanTron.SearchableEnum
{
	[Token(Token = "0x200012C")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xCA81F4", Offset = "0xCA81F4")]
	public class SearchableEnumAttribute : PropertyAttribute
	{
		[Token(Token = "0x60008EC")]
		[Address(RVA = "0x16D1E50", Offset = "0x16D1E50", VA = "0x16D1E50")]
		public SearchableEnumAttribute()
		{
		}
	}
	[Token(Token = "0x200012D")]
	public class SearchableEnumDemo : ScriptableObject
	{
		[Token(Token = "0x400095A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCB16E4", Offset = "0xCB16E4")]
		public KeyCode LameKeyCode;

		[Token(Token = "0x400095B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCB171C", Offset = "0xCB171C")]
		[SearchableEnum]
		public KeyCode AwesomeKeyCode;

		[Token(Token = "0x60008ED")]
		[Address(RVA = "0x16D1E58", Offset = "0x16D1E58", VA = "0x16D1E58")]
		public SearchableEnumDemo()
		{
		}
	}
}
namespace RoboRyanTron.QuickButtons
{
	[Serializable]
	[Token(Token = "0x200012E")]
	public class QuickButton
	{
		[Token(Token = "0x400095C")]
		private const BindingFlags FLAGS = BindingFlags.IgnoreCase | BindingFlags.Instance | BindingFlags.Static | BindingFlags.Public | BindingFlags.NonPublic;

		[Token(Token = "0x400095D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly string functionName;

		[Token(Token = "0x400095E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly object[] functionArgs;

		[Token(Token = "0x400095F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Action<object> action;

		[Token(Token = "0x4000960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Action<object> invocation;

		[Token(Token = "0x60008EE")]
		[Address(RVA = "0x16D1BA4", Offset = "0x16D1BA4", VA = "0x16D1BA4")]
		public QuickButton(string functionName, params object[] functionArgs)
		{
		}

		[Token(Token = "0x60008EF")]
		[Address(RVA = "0x16D16F4", Offset = "0x16D16F4", VA = "0x16D16F4")]
		public QuickButton(Action<object> action)
		{
		}

		[Token(Token = "0x60008F0")]
		[Address(RVA = "0x16D1C60", Offset = "0x16D1C60", VA = "0x16D1C60")]
		public void Invoke(object target)
		{
		}

		[Token(Token = "0x60008F1")]
		[Address(RVA = "0x16D1CC8", Offset = "0x16D1CC8", VA = "0x16D1CC8")]
		private void ActionInvoke(object target)
		{
		}

		[Token(Token = "0x60008F2")]
		[Address(RVA = "0x16D1D30", Offset = "0x16D1D30", VA = "0x16D1D30")]
		private void NameInvoke(object target)
		{
		}
	}
}
namespace RoboRyanTron.QuickButtons.Demo
{
	[Serializable]
	[Token(Token = "0x200012F")]
	public class NestedClass
	{
		[Serializable]
		[Token(Token = "0x20003F2")]
		public class DeeperNestedClass
		{
			[Serializable]
			[Token(Token = "0x200042A")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB0AD4", Offset = "0xCB0AD4")]
			private sealed class <>c
			{
				[Token(Token = "0x4000ED2")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public static readonly <>c <>9;

				[Token(Token = "0x4000ED3")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public static Action<object> <>9__1_0;

				[Token(Token = "0x6001646")]
				[Address(RVA = "0x16D1A54", Offset = "0x16D1A54", VA = "0x16D1A54")]
				public <>c()
				{
				}

				[Token(Token = "0x6001647")]
				[Address(RVA = "0x16D1A5C", Offset = "0x16D1A5C", VA = "0x16D1A5C")]
				internal void <.ctor>b__1_0(object input)
				{
				}
			}

			[Token(Token = "0x4000E2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public QuickButton DeeperButton;

			[Token(Token = "0x60015C9")]
			[Address(RVA = "0x16D18D0", Offset = "0x16D18D0", VA = "0x16D18D0")]
			public DeeperNestedClass()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20003F3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB08C4", Offset = "0xCB08C4")]
		private sealed class <>c
		{
			[Token(Token = "0x4000E2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000E2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<object> <>9__4_0;

			[Token(Token = "0x60015CB")]
			[Address(RVA = "0x16D1804", Offset = "0x16D1804", VA = "0x16D1804")]
			public <>c()
			{
			}

			[Token(Token = "0x60015CC")]
			[Address(RVA = "0x16D180C", Offset = "0x16D180C", VA = "0x16D180C")]
			internal void <.ctor>b__4_0(object input)
			{
			}
		}

		[Token(Token = "0x4000961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public DeeperNestedClass DeeperNested;

		[Token(Token = "0x4000962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Message;

		[Token(Token = "0x4000963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public QuickButton NestedDelegateButton;

		[Token(Token = "0x60008F3")]
		[Address(RVA = "0x16D15D8", Offset = "0x16D15D8", VA = "0x16D15D8")]
		public NestedClass()
		{
		}
	}
	[Token(Token = "0x2000130")]
	public class QuickButtonsDemo : MonoBehaviour
	{
		[Token(Token = "0x4000964")]
		private const QuickButtonsDemo TEMPLATE = null;

		[Token(Token = "0x4000965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NestedClass nested;

		[Token(Token = "0x4000966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<NestedClass> nested2;

		[Token(Token = "0x60008F4")]
		[Address(RVA = "0x16D1AC8", Offset = "0x16D1AC8", VA = "0x16D1AC8")]
		private void OnDebugButtonClicked()
		{
		}

		[Token(Token = "0x60008F5")]
		[Address(RVA = "0x16D1B34", Offset = "0x16D1B34", VA = "0x16D1B34")]
		private void OnParameterizedDebugButtonClicked(string message)
		{
		}

		[Token(Token = "0x60008F6")]
		[Address(RVA = "0x16D1B9C", Offset = "0x16D1B9C", VA = "0x16D1B9C")]
		public QuickButtonsDemo()
		{
		}
	}
}
namespace Febucci.Attributes
{
	[Token(Token = "0x2000131")]
	public class CharsDisplayTimeAttribute : PropertyAttribute
	{
		[Token(Token = "0x60008F7")]
		[Address(RVA = "0x19CC88C", Offset = "0x19CC88C", VA = "0x19CC88C")]
		public CharsDisplayTimeAttribute()
		{
		}
	}
	[Token(Token = "0x2000132")]
	public class MinValueAttribute : PropertyAttribute
	{
		[Token(Token = "0x4000967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float min;

		[Token(Token = "0x60008F8")]
		[Address(RVA = "0x19CC894", Offset = "0x19CC894", VA = "0x19CC894")]
		public MinValueAttribute(float min)
		{
		}
	}
	[Token(Token = "0x2000133")]
	public class NotZeroAttribute : PropertyAttribute
	{
		[Token(Token = "0x60008F9")]
		[Address(RVA = "0x19CC8C8", Offset = "0x19CC8C8", VA = "0x19CC8C8")]
		public NotZeroAttribute()
		{
		}
	}
	[Token(Token = "0x2000134")]
	public class PositiveValueAttribute : PropertyAttribute
	{
		[Token(Token = "0x60008FA")]
		[Address(RVA = "0x19CC8D0", Offset = "0x19CC8D0", VA = "0x19CC8D0")]
		public PositiveValueAttribute()
		{
		}
	}
}
namespace Febucci.UI
{
	[Token(Token = "0x2000135")]
	public static class TAnimTags
	{
		[Token(Token = "0x4000968")]
		public const string bh_Shake = "shake";

		[Token(Token = "0x4000969")]
		public const string bh_Rot = "rot";

		[Token(Token = "0x400096A")]
		public const string bh_Wiggle = "wiggle";

		[Token(Token = "0x400096B")]
		public const string bh_Wave = "wave";

		[Token(Token = "0x400096C")]
		public const string bh_Swing = "swing";

		[Token(Token = "0x400096D")]
		public const string bh_Incr = "incr";

		[Token(Token = "0x400096E")]
		public const string bh_Slide = "slide";

		[Token(Token = "0x400096F")]
		public const string bh_Bounce = "bounce";

		[Token(Token = "0x4000970")]
		public const string bh_Fade = "fade";

		[Token(Token = "0x4000971")]
		public const string bh_Rainb = "rainb";

		[Token(Token = "0x4000972")]
		public const string ap_Size = "size";

		[Token(Token = "0x4000973")]
		public const string ap_Fade = "fade";

		[Token(Token = "0x4000974")]
		public const string ap_Offset = "offset";

		[Token(Token = "0x4000975")]
		public const string ap_VertExp = "vertexp";

		[Token(Token = "0x4000976")]
		public const string ap_HoriExp = "horiexp";

		[Token(Token = "0x4000977")]
		public const string ap_DiagExp = "diagexp";

		[Token(Token = "0x4000978")]
		public const string ap_Rot = "rot";

		[Token(Token = "0x4000979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string[] defaultBehaviors;

		[Token(Token = "0x400097A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly string[] defaultAppearances;
	}
	[Token(Token = "0x2000136")]
	public struct TypewriterAction
	{
		[Token(Token = "0x400097B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string actionID;

		[Token(Token = "0x400097C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public List<string> parameters;
	}
	[Token(Token = "0x2000137")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xCA8208", Offset = "0xCA8208")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCA8208", Offset = "0xCA8208")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xCA8208", Offset = "0xCA8208")]
	[DisallowMultipleComponent]
	public class TextAnimator : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20003F4")]
		private class AppearancesContainer
		{
			[Token(Token = "0x4000E2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			public string[] tags;

			[Token(Token = "0x4000E30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AppearanceDefaultValues values;

			[Token(Token = "0x60015CD")]
			[Address(RVA = "0x1333954", Offset = "0x1333954", VA = "0x1333954")]
			public AppearancesContainer()
			{
			}
		}

		[Token(Token = "0x20003F5")]
		internal struct InternalAction
		{
			[Token(Token = "0x4000E31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TypewriterAction action;

			[Token(Token = "0x4000E32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int charIndex;

			[Token(Token = "0x4000E33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public bool triggered;

			[Token(Token = "0x4000E34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int internalOrder;
		}

		[Token(Token = "0x20003F6")]
		private enum ShowTextMode : byte
		{
			[Token(Token = "0x4000E36")]
			Hidden,
			[Token(Token = "0x4000E37")]
			Shown,
			[Token(Token = "0x4000E38")]
			UserTyping
		}

		[Token(Token = "0x20003F7")]
		public enum TimeScale
		{
			[Token(Token = "0x4000E3A")]
			Scaled,
			[Token(Token = "0x4000E3B")]
			Unscaled
		}

		[Token(Token = "0x20003F8")]
		public delegate void MessageEvent(string message);

		[StructLayout(3)]
		[Token(Token = "0x20003F9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB08D4", Offset = "0xCB08D4")]
		private struct <>c__DisplayClass82_0
		{
			[Token(Token = "0x4000E3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string text;

			[Token(Token = "0x4000E3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string entireTag;

			[Token(Token = "0x4000E3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TextAnimator <>4__this;

			[Token(Token = "0x4000E3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int internalEventActionIndex;

			[Token(Token = "0x4000E40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<InternalAction> typewriterActions;

			[Token(Token = "0x4000E41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public StringBuilder realText;

			[Token(Token = "0x4000E42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string entireLoweredTag;
		}

		[StructLayout(3)]
		[Token(Token = "0x20003FA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB08E4", Offset = "0xCB08E4")]
		private struct <>c__DisplayClass82_1
		{
			[Token(Token = "0x4000E43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int realTextIndex;
		}

		[StructLayout(3)]
		[Token(Token = "0x20003FB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB08F4", Offset = "0xCB08F4")]
		private struct <>c__DisplayClass82_2
		{
			[Token(Token = "0x4000E44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public List<int> effectsToApply;
		}

		[StructLayout(3)]
		[Token(Token = "0x20003FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB0904", Offset = "0xCB0904")]
		private struct <>c__DisplayClass82_3
		{
			[Token(Token = "0x4000E45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int i;
		}

		[Token(Token = "0x400097D")]
		public const int verticesPerChar = 4;

		[Token(Token = "0x400097E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TAnimPlayerBase _tAnimPlayer;

		[Token(Token = "0x400097F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCB1768", Offset = "0xCB1768")]
		private bool triggerAnimPlayerOnChange;

		[Token(Token = "0x4000980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float effectIntensityMultiplier;

		[Token(Token = "0x4000981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xCB17C4", Offset = "0xCB17C4")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCB17C4", Offset = "0xCB17C4")]
		private AppearancesContainer appearancesContainer;

		[Token(Token = "0x4000982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private BehaviorDefaultValues behaviorValues;

		[Token(Token = "0x4000983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCB1844", Offset = "0xCB1844")]
		private bool useDynamicScaling;

		[Token(Token = "0x4000984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCB1890", Offset = "0xCB1890")]
		private float referenceFontSize;

		[Token(Token = "0x4000985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TMP_Text _tmproText;

		[Token(Token = "0x4000986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public TimeScale timeScale;

		[Token(Token = "0x4000987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB18DC", Offset = "0xCB18DC")]
		private float <deltaTime>k__BackingField;

		[Token(Token = "0x4000989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string latestText;

		[Token(Token = "0x400098A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB18FC", Offset = "0xCB18FC")]
		private TMP_CharacterInfo <latestCharacterShown>k__BackingField;

		[Token(Token = "0x400098B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private float timePassed;

		[Token(Token = "0x400098C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		private bool forceMeshRefresh;

		[Token(Token = "0x400098D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BD")]
		private bool skipAppearanceEffects;

		[Token(Token = "0x400098E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BE")]
		private bool hasParentCanvas;

		[Token(Token = "0x400098F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private Canvas parentCanvas;

		[Token(Token = "0x4000990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private bool autoSize;

		[Token(Token = "0x4000991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		private Rect sourceRect;

		[Token(Token = "0x4000992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		private Color sourceColor;

		[Token(Token = "0x4000993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		private int visibleCharacters;

		[Token(Token = "0x4000994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private bool hasText;

		[Token(Token = "0x4000995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB190C", Offset = "0xCB190C")]
		private bool <hasActions>k__BackingField;

		[Token(Token = "0x4000996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		private int latestTriggeredEvent;

		[Token(Token = "0x4000997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private int latestTriggeredAction;

		[Token(Token = "0x4000998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private TMP_TextInfo textInfo;

		[Token(Token = "0x4000999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private Character[] characters;

		[Token(Token = "0x400099A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private InternalAction[] typewriterActions;

		[Token(Token = "0x400099B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private BehaviorBase[] effects;

		[Token(Token = "0x400099C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private AppearanceBase[] appearingEffects;

		[Token(Token = "0x400099D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private EventMarker[] eventMarkers;

		[Token(Token = "0x400099E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool enabled_globalAppearances;

		[Token(Token = "0x400099F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		private static bool enabled_globalBehaviors;

		[Token(Token = "0x40009A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private bool databaseBuilt;

		[Token(Token = "0x40009A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		private Dictionary<string, Type> localBehaviors;

		[Token(Token = "0x40009A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		private Dictionary<string, Type> localAppearances;

		[Token(Token = "0x170000E2")]
		private TAnimPlayerBase tAnimPlayer
		{
			[Token(Token = "0x60008FE")]
			[Address(RVA = "0x13306F0", Offset = "0x13306F0", VA = "0x13306F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E3")]
		public TMP_Text tmproText
		{
			[Token(Token = "0x60008FF")]
			[Address(RVA = "0x13305D0", Offset = "0x13305D0", VA = "0x13305D0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000900")]
			[Address(RVA = "0x1330800", Offset = "0x1330800", VA = "0x1330800")]
			private set
			{
			}
		}

		[Token(Token = "0x170000E4")]
		public float deltaTime
		{
			[Token(Token = "0x6000901")]
			[Address(RVA = "0x1330808", Offset = "0x1330808", VA = "0x1330808")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB4C30", Offset = "0xCB4C30")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000902")]
			[Address(RVA = "0x1330810", Offset = "0x1330810", VA = "0x1330810")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB4C40", Offset = "0xCB4C40")]
			private set
			{
			}
		}

		[Token(Token = "0x170000E5")]
		public string text
		{
			[Token(Token = "0x6000905")]
			[Address(RVA = "0x1330960", Offset = "0x1330960", VA = "0x1330960")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000906")]
			[Address(RVA = "0x1330968", Offset = "0x1330968", VA = "0x1330968")]
			private set
			{
			}
		}

		[Token(Token = "0x170000E6")]
		public bool allLettersShown
		{
			[Token(Token = "0x6000907")]
			[Address(RVA = "0x132E654", Offset = "0x132E654", VA = "0x132E654")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000E7")]
		public TMP_CharacterInfo latestCharacterShown
		{
			[Token(Token = "0x6000908")]
			[Address(RVA = "0x1330970", Offset = "0x1330970", VA = "0x1330970")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB4C70", Offset = "0xCB4C70")]
			get
			{
				return default(TMP_CharacterInfo);
			}
			[Token(Token = "0x6000909")]
			[Address(RVA = "0x1330980", Offset = "0x1330980", VA = "0x1330980")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB4C80", Offset = "0xCB4C80")]
			private set
			{
			}
		}

		[Token(Token = "0x170000E8")]
		internal bool hasActions
		{
			[Token(Token = "0x600090A")]
			[Address(RVA = "0x13309B0", Offset = "0x13309B0", VA = "0x13309B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB4C90", Offset = "0xCB4C90")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600090B")]
			[Address(RVA = "0x13309B8", Offset = "0x13309B8", VA = "0x13309B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB4CA0", Offset = "0xCB4CA0")]
			private set
			{
			}
		}

		[Token(Token = "0x170000E9")]
		public static bool effectsBehaviorsEnabled
		{
			[Token(Token = "0x6000912")]
			[Address(RVA = "0x1332210", Offset = "0x1332210", VA = "0x1332210")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000EA")]
		public static bool effectsAppearancesEnabled
		{
			[Token(Token = "0x6000913")]
			[Address(RVA = "0x1332278", Offset = "0x1332278", VA = "0x1332278")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000002")]
		public event MessageEvent onEvent
		{
			[Token(Token = "0x6000903")]
			[Address(RVA = "0x1330818", Offset = "0x1330818", VA = "0x1330818")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB4C50", Offset = "0xCB4C50")]
			add
			{
			}
			[Token(Token = "0x6000904")]
			[Address(RVA = "0x13308BC", Offset = "0x13308BC", VA = "0x13308BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB4C60", Offset = "0xCB4C60")]
			remove
			{
			}
		}

		[Token(Token = "0x60008FC")]
		[Address(RVA = "0x1330484", Offset = "0x1330484", VA = "0x1330484")]
		public static bool IsTagLongEnough(string tag)
		{
			return default(bool);
		}

		[Token(Token = "0x60008FD")]
		[Address(RVA = "0x13304A4", Offset = "0x13304A4", VA = "0x13304A4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600090C")]
		[Address(RVA = "0x13309C4", Offset = "0x13309C4", VA = "0x13309C4")]
		public bool TryGetNextCharacter(out TMP_CharacterInfo result)
		{
			return default(bool);
		}

		[Token(Token = "0x600090D")]
		[Address(RVA = "0x132E7C0", Offset = "0x132E7C0", VA = "0x132E7C0")]
		public char IncreaseVisibleChars()
		{
			return default(char);
		}

		[Token(Token = "0x600090E")]
		[Address(RVA = "0x132E910", Offset = "0x132E910", VA = "0x132E910")]
		public void ShowAllCharacters(bool skipAppearanceEffects)
		{
		}

		[Token(Token = "0x600090F")]
		[Address(RVA = "0x132E938", Offset = "0x132E938", VA = "0x132E938")]
		public void TriggerRemainingEvents()
		{
		}

		[Token(Token = "0x6000910")]
		[Address(RVA = "0x132DC24", Offset = "0x132DC24", VA = "0x132DC24")]
		public void SyncText(string text, bool hideText)
		{
		}

		[Token(Token = "0x6000911")]
		[Address(RVA = "0x1332204", Offset = "0x1332204", VA = "0x1332204")]
		public void ForceMeshRefresh()
		{
		}

		[Token(Token = "0x6000914")]
		[Address(RVA = "0x13322E0", Offset = "0x13322E0", VA = "0x13322E0")]
		public static void EnableAllEffects(bool enabled)
		{
		}

		[Token(Token = "0x6000915")]
		[Address(RVA = "0x13323DC", Offset = "0x13323DC", VA = "0x13323DC")]
		public static void EnableAppearances(bool enabled)
		{
		}

		[Token(Token = "0x6000916")]
		[Address(RVA = "0x133244C", Offset = "0x133244C", VA = "0x133244C")]
		public static void EnableBehaviors(bool enabled)
		{
		}

		[Token(Token = "0x6000917")]
		[Address(RVA = "0x13324BC", Offset = "0x13324BC", VA = "0x13324BC")]
		private void BuildTagsDatabase()
		{
		}

		[Token(Token = "0x6000918")]
		[Address(RVA = "0x13326C8", Offset = "0x13326C8", VA = "0x13326C8")]
		private bool GetBehaviorClassFromTag(string tag, out BehaviorBase effectBase)
		{
			return default(bool);
		}

		[Token(Token = "0x6000919")]
		[Address(RVA = "0x13327A4", Offset = "0x13327A4", VA = "0x13327A4")]
		private bool GetAppearingClassFromTag(string tag, out AppearanceBase effectBase)
		{
			return default(bool);
		}

		[Token(Token = "0x600091A")]
		[Address(RVA = "0x1330F30", Offset = "0x1330F30", VA = "0x1330F30")]
		private void _SyncText(string text, ShowTextMode showTextMode)
		{
		}

		[Token(Token = "0x600091B")]
		[Address(RVA = "0x1330A5C", Offset = "0x1330A5C", VA = "0x1330A5C")]
		private void TryTriggeringEvent(int maxInternalOrder)
		{
		}

		[Token(Token = "0x600091C")]
		[Address(RVA = "0x132E690", Offset = "0x132E690", VA = "0x132E690")]
		internal bool TryGetAction(out TypewriterAction action)
		{
			return default(bool);
		}

		[Token(Token = "0x600091D")]
		[Address(RVA = "0x13306A8", Offset = "0x13306A8", VA = "0x13306A8")]
		private void UpdateDeltaTime()
		{
		}

		[Token(Token = "0x600091E")]
		[Address(RVA = "0x1332B1C", Offset = "0x1332B1C", VA = "0x1332B1C")]
		private void SetupEffectsIntensity()
		{
		}

		[Token(Token = "0x600091F")]
		[Address(RVA = "0x1332D04", Offset = "0x1332D04", VA = "0x1332D04")]
		private void CopyMeshSources()
		{
		}

		[Token(Token = "0x6000920")]
		[Address(RVA = "0x1332FF8", Offset = "0x1332FF8", VA = "0x1332FF8")]
		private void UpdateMesh()
		{
		}

		[Token(Token = "0x6000921")]
		[Address(RVA = "0x13331F0", Offset = "0x13331F0", VA = "0x13331F0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000922")]
		[Address(RVA = "0x1333824", Offset = "0x1333824", VA = "0x1333824")]
		public TextAnimator()
		{
		}

		[Token(Token = "0x6000924")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB4CB0", Offset = "0xCB4CB0")]
		private void <_SyncText>g__InitializeEffectRegion|82_2<T>(ref T effect, string idTag, ref <>c__DisplayClass82_0 P_2, ref <>c__DisplayClass82_1 P_3) where T : EffectsBase
		{
		}

		[Token(Token = "0x6000925")]
		[Address(RVA = "0x1332880", Offset = "0x1332880", VA = "0x1332880")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB4CC0", Offset = "0xCB4CC0")]
		private void <_SyncText>g__TagNotFound|82_3(ref <>c__DisplayClass82_0 P_0, ref <>c__DisplayClass82_1 P_1)
		{
		}

		[Token(Token = "0x6000926")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB4CD0", Offset = "0xCB4CD0")]
		private int[] <_SyncText>g__GetEffectsDependency|82_4<T>(List<T> effects, ref <>c__DisplayClass82_0 P_1, ref <>c__DisplayClass82_2 P_2, ref <>c__DisplayClass82_3 P_3) where T : EffectsBase
		{
			return null;
		}

		[Token(Token = "0x6000927")]
		[Address(RVA = "0x1332BF4", Offset = "0x1332BF4", VA = "0x1332BF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB4CE0", Offset = "0xCB4CE0")]
		private void <_SyncText>g__HideAllCharacters|82_0(ref <>c__DisplayClass82_0 P_0)
		{
		}

		[Token(Token = "0x6000928")]
		[Address(RVA = "0x1332C98", Offset = "0x1332C98", VA = "0x1332C98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB4CF0", Offset = "0xCB4CF0")]
		private void <_SyncText>g__ShowAllCharacters|82_1(ref <>c__DisplayClass82_0 P_0)
		{
		}
	}
	[Token(Token = "0x2000138")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xCA82C4", Offset = "0xCA82C4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCA82C4", Offset = "0xCA82C4")]
	public class TextAnimatorPlayer : TAnimPlayerBase
	{
		[Token(Token = "0x20003FD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB0914", Offset = "0xCB0914")]
		private sealed class <WaitInput>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x170001AC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60015D5")]
				[Address(RVA = "0x1333D54", Offset = "0x1333D54", VA = "0x1333D54", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001AD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60015D7")]
				[Address(RVA = "0x1333DBC", Offset = "0x1333DBC", VA = "0x1333DBC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60015D2")]
			[Address(RVA = "0x1333CAC", Offset = "0x1333CAC", VA = "0x1333CAC")]
			[DebuggerHidden]
			public <WaitInput>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x60015D3")]
			[Address(RVA = "0x1333CF4", Offset = "0x1333CF4", VA = "0x1333CF4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60015D4")]
			[Address(RVA = "0x1333CF8", Offset = "0x1333CF8", VA = "0x1333CF8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60015D6")]
			[Address(RVA = "0x1333D5C", Offset = "0x1333D5C", VA = "0x1333D5C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40009A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[CharsDisplayTime]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCB191C", Offset = "0xCB191C")]
		private float waitForNormalChars;

		[Token(Token = "0x40009A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		[CharsDisplayTime]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCB1978", Offset = "0xCB1978")]
		private float waitLong;

		[Token(Token = "0x40009A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[CharsDisplayTime]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCB19D4", Offset = "0xCB19D4")]
		private float waitMiddle;

		[Token(Token = "0x40009A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCB1A30", Offset = "0xCB1A30")]
		private bool avoidMultiplePunctuactionWait;

		[Token(Token = "0x6000929")]
		[Address(RVA = "0x1333AFC", Offset = "0x1333AFC", VA = "0x1333AFC", Slot = "5")]
		protected override float WaitTimeOf(char character)
		{
			return default(float);
		}

		[Token(Token = "0x600092A")]
		[Address(RVA = "0x1333C4C", Offset = "0x1333C4C", VA = "0x1333C4C", Slot = "4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCB4D00", Offset = "0xCB4D00")]
		protected override IEnumerator WaitInput()
		{
			return null;
		}

		[Token(Token = "0x600092B")]
		[Address(RVA = "0x1333CD8", Offset = "0x1333CD8", VA = "0x1333CD8")]
		public TextAnimatorPlayer()
		{
		}
	}
}
namespace Febucci.UI.Core
{
	[Token(Token = "0x2000139")]
	internal struct Character
	{
		[Token(Token = "0x40009A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int[] indexBehaviorEffects;

		[Token(Token = "0x40009A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int[] indexAppearanceEffects;

		[Token(Token = "0x40009A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CharacterSourceData sources;

		[Token(Token = "0x40009AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CharacterData data;

		[Token(Token = "0x600092C")]
		[Address(RVA = "0xE00D50", Offset = "0xE00D50", VA = "0xE00D50")]
		public void ResetVertices()
		{
		}

		[Token(Token = "0x600092D")]
		[Address(RVA = "0xE00D58", Offset = "0xE00D58", VA = "0xE00D58")]
		public void ResetColors()
		{
		}
	}
	[Token(Token = "0x200013A")]
	internal struct CharacterSourceData
	{
		[Token(Token = "0x40009AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Color32[] colors;

		[Token(Token = "0x40009AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector3[] vertices;
	}
	[Token(Token = "0x200013B")]
	public struct CharacterData
	{
		[Token(Token = "0x40009AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float passedTime;

		[Token(Token = "0x40009AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Color32[] colors;

		[Token(Token = "0x40009AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3[] vertices;
	}
	[Token(Token = "0x200013C")]
	public abstract class EffectsBase
	{
		[Token(Token = "0x40009B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected float effectIntensity;

		[Token(Token = "0x40009B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal string effectTag;

		[Token(Token = "0x40009B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal bool closed;

		[Token(Token = "0x40009B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal int charStartIndex;

		[Token(Token = "0x40009B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal int charEndIndex;

		[Token(Token = "0x600092E")]
		[Address(RVA = "0x19CD8A0", Offset = "0x19CD8A0", VA = "0x19CD8A0")]
		public bool IsCharInsideRegion(int charIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x600092F")]
		[Address(RVA = "0x19CCF94", Offset = "0x19CCF94", VA = "0x19CCF94", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000930")]
		public abstract void ApplyEffect(ref CharacterData data, int charIndex);

		[Token(Token = "0x6000931")]
		[Address(RVA = "0x19CCD00", Offset = "0x19CCD00", VA = "0x19CCD00")]
		protected void ApplyModifierTo(ref float value, string modifierValue)
		{
		}

		[Token(Token = "0x6000932")]
		[Address(RVA = "0x19CD94C", Offset = "0x19CD94C", VA = "0x19CD94C")]
		internal void SetEffectIntensity(float value)
		{
		}

		[Token(Token = "0x6000933")]
		[Address(RVA = "0x19CD954", Offset = "0x19CD954", VA = "0x19CD954", Slot = "5")]
		public virtual void Initialize(int charactersCount)
		{
		}

		[Token(Token = "0x6000934")]
		[Address(RVA = "0x19CD958", Offset = "0x19CD958", VA = "0x19CD958", Slot = "6")]
		public virtual void Calculate()
		{
		}

		[Token(Token = "0x6000935")]
		[Address(RVA = "0x19CC904", Offset = "0x19CC904", VA = "0x19CC904")]
		protected EffectsBase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200013D")]
	public class AppearanceDefaultValues
	{
		[Serializable]
		[Token(Token = "0x20003FE")]
		internal class Defaults
		{
			[Token(Token = "0x4000E48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[PositiveValue]
			public float sizeDuration;

			[Token(Token = "0x4000E49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "MinValueAttribute", RVA = "0xCB2714", Offset = "0xCB2714")]
			public float sizeAmplitude;

			[Token(Token = "0x4000E4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[PositiveValue]
			public float fadeDuration;

			[Token(Token = "0x4000E4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[PositiveValue]
			public float verticalExpandDuration;

			[Token(Token = "0x4000E4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool verticalFromBottom;

			[Token(Token = "0x4000E4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[PositiveValue]
			public float horizontalExpandDuration;

			[Token(Token = "0x4000E4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public HorizontalExpandAppearance.ExpType horizontalExpandStart;

			[Token(Token = "0x4000E4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[PositiveValue]
			public float diagonalExpandDuration;

			[Token(Token = "0x4000E50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool diagonalFromBttmLeft;

			[Token(Token = "0x4000E51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[NotZero]
			public Vector2 offsetDir;

			[Token(Token = "0x4000E52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			[PositiveValue]
			public float offsetDuration;

			[Token(Token = "0x4000E53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[NotZero]
			public float offsetAmplitude;

			[Token(Token = "0x4000E54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			[PositiveValue]
			public float rotationDuration;

			[Token(Token = "0x4000E55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public float rotationStartAngle;

			[Token(Token = "0x60015D8")]
			[Address(RVA = "0x19CC9D4", Offset = "0x19CC9D4", VA = "0x19CC9D4")]
			public Defaults()
			{
			}
		}

		[Token(Token = "0x40009B5")]
		private const float defDuration = 0.3f;

		[Token(Token = "0x40009B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCB1A7C", Offset = "0xCB1A7C")]
		internal Defaults defaults;

		[Token(Token = "0x40009B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCB1AC8", Offset = "0xCB1AC8")]
		internal PresetAppearanceValues[] presets;

		[Token(Token = "0x40009B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCB1B14", Offset = "0xCB1B14")]
		public CustomEffects.CustomAppearanceDefValues customs;

		[Token(Token = "0x6000936")]
		[Address(RVA = "0x19CC914", Offset = "0x19CC914", VA = "0x19CC914")]
		public AppearanceDefaultValues()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200013E")]
	public class BehaviorDefaultValues
	{
		[Serializable]
		[Token(Token = "0x20003FF")]
		public class Defaults
		{
			[Token(Token = "0x4000E56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[NotZero]
			public float wiggleAmplitude;

			[Token(Token = "0x4000E57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[NotZero]
			public float wiggleFrequency;

			[Token(Token = "0x4000E58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[NotZero]
			public float waveFrequency;

			[Token(Token = "0x4000E59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[NotZero]
			public float waveAmplitude;

			[Token(Token = "0x4000E5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float waveWaveSize;

			[Token(Token = "0x4000E5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[NotZero]
			public float angleSpeed;

			[Token(Token = "0x4000E5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float angleDiffBetweenChars;

			[Token(Token = "0x4000E5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[NotZero]
			public float swingAmplitude;

			[Token(Token = "0x4000E5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[NotZero]
			public float swingFrequency;

			[Token(Token = "0x4000E5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float swingWaveSize;

			[Token(Token = "0x4000E60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[NotZero]
			public float shakeStrength;

			[Token(Token = "0x4000E61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			[PositiveValue]
			public float shakeDelay;

			[Token(Token = "0x4000E62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public float sizeAmplitude;

			[Token(Token = "0x4000E63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			[NotZero]
			public float sizeFrequency;

			[Token(Token = "0x4000E64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public float sizeWaveSize;

			[Token(Token = "0x4000E65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			[NotZero]
			public float slideAmplitude;

			[Token(Token = "0x4000E66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[NotZero]
			public float slideFrequency;

			[Token(Token = "0x4000E67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public float slideWaveSize;

			[Token(Token = "0x4000E68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[NotZero]
			public float bounceAmplitude;

			[Token(Token = "0x4000E69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			[NotZero]
			public float bounceFrequency;

			[Token(Token = "0x4000E6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public float bounceWaveSize;

			[Token(Token = "0x4000E6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			[NotZero]
			public float hueShiftSpeed;

			[Token(Token = "0x4000E6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public float hueShiftWaveSize;

			[Token(Token = "0x4000E6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			[PositiveValue]
			public float fadeDelay;

			[Token(Token = "0x60015D9")]
			[Address(RVA = "0x19CCB70", Offset = "0x19CCB70", VA = "0x19CCB70")]
			public Defaults()
			{
			}
		}

		[Token(Token = "0x40009B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCB1B60", Offset = "0xCB1B60")]
		public Defaults defaults;

		[Token(Token = "0x40009BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCB1BAC", Offset = "0xCB1BAC")]
		internal PresetBehaviorValues[] presets;

		[Token(Token = "0x40009BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCB1BF8", Offset = "0xCB1BF8")]
		public CustomEffects.CustomBehaviorDefValues customs;

		[Token(Token = "0x6000937")]
		[Address(RVA = "0x19CCAB0", Offset = "0x19CCAB0", VA = "0x19CCAB0")]
		public BehaviorDefaultValues()
		{
		}
	}
	[Token(Token = "0x200013F")]
	internal struct EventMarker
	{
		[Token(Token = "0x40009BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int charIndex;

		[Token(Token = "0x40009BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string eventMessage;

		[Token(Token = "0x40009BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool triggered;

		[Token(Token = "0x40009BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int internalOrder;
	}
	[Token(Token = "0x2000140")]
	internal static class TAnimBuilder
	{
		[Token(Token = "0x40009C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static TAnimGlobalDataScriptable _data;

		[Token(Token = "0x40009C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB1C44", Offset = "0xCB1C44")]
		private static bool <hasData>k__BackingField;

		[Token(Token = "0x40009C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Dictionary<string, Type> behaviorsData;

		[Token(Token = "0x40009C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Dictionary<string, Type> appearancesData;

		[Token(Token = "0x40009C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static HashSet<string> globalDefaultActions;

		[Token(Token = "0x40009C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static HashSet<string> globalCustomActions;

		[Token(Token = "0x40009C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static bool globalDatabaseInitialized;

		[Token(Token = "0x170000EB")]
		public static bool hasData
		{
			[Token(Token = "0x6000938")]
			[Address(RVA = "0x19D1B40", Offset = "0x19D1B40", VA = "0x19D1B40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB4D64", Offset = "0xCB4D64")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000939")]
			[Address(RVA = "0x19D1BA8", Offset = "0x19D1BA8", VA = "0x19D1BA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB4D74", Offset = "0xCB4D74")]
			private set
			{
			}
		}

		[Token(Token = "0x170000EC")]
		internal static TAnimGlobalDataScriptable data
		{
			[Token(Token = "0x600093A")]
			[Address(RVA = "0x19D1C18", Offset = "0x19D1C18", VA = "0x19D1C18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600093B")]
		[Address(RVA = "0x19D1C80", Offset = "0x19D1C80", VA = "0x19D1C80")]
		internal static void InitializeGlobalDatabase()
		{
		}

		[Token(Token = "0x600093C")]
		[Address(RVA = "0x19D0760", Offset = "0x19D0760", VA = "0x19D0760")]
		internal static bool TryGetGlobalPresetBehavior(string tag, out PresetBehaviorValues result)
		{
			return default(bool);
		}

		[Token(Token = "0x600093D")]
		[Address(RVA = "0x19CF654", Offset = "0x19CF654", VA = "0x19CF654")]
		internal static bool TryGetGlobalPresetAppearance(string tag, out PresetAppearanceValues result)
		{
			return default(bool);
		}

		[Token(Token = "0x600093E")]
		internal static bool GetPresetFromArray<T>(string tag, T[] presets, out T result) where T : PresetBaseValues
		{
			return default(bool);
		}

		[Token(Token = "0x600093F")]
		[Address(RVA = "0x19D2C88", Offset = "0x19D2C88", VA = "0x19D2C88")]
		internal static bool IsDefaultAction(string tag)
		{
			return default(bool);
		}

		[Token(Token = "0x6000940")]
		[Address(RVA = "0x19D2D54", Offset = "0x19D2D54", VA = "0x19D2D54")]
		internal static bool IsCustomAction(string tag)
		{
			return default(bool);
		}

		[Token(Token = "0x6000941")]
		[Address(RVA = "0x19D2E20", Offset = "0x19D2E20", VA = "0x19D2E20")]
		internal static bool TryGetGlobalBehaviorFromTag(string tag, out BehaviorBase effectClass)
		{
			return default(bool);
		}

		[Token(Token = "0x6000942")]
		[Address(RVA = "0x19D2EAC", Offset = "0x19D2EAC", VA = "0x19D2EAC")]
		internal static bool TryGetGlobalAppearanceFromTag(string tag, out AppearanceBase effectClass)
		{
			return default(bool);
		}

		[Token(Token = "0x6000943")]
		internal static bool TryGetEffectClassFromTag<T>(Dictionary<string, Type> dictionary, string tag, out T effectClass) where T : class
		{
			return default(bool);
		}

		[Token(Token = "0x6000944")]
		[Address(RVA = "0x19D2B20", Offset = "0x19D2B20", VA = "0x19D2B20")]
		internal static void TryAddingPresetToDictionary(ref Dictionary<string, Type> database, string tag, Type type)
		{
		}

		[Token(Token = "0x6000946")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB4D84", Offset = "0xCB4D84")]
		internal static void <InitializeGlobalDatabase>g__AddCustomTags|12_0<T>(CustomEffects.TagInfo[] tagsArray, ref Dictionary<string, Type> dict) where T : EffectsBase
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000141")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCA8324", Offset = "0xCA8324")]
	public class TAnimGlobalDataScriptable : ScriptableObject
	{
		[Token(Token = "0x40009C7")]
		public const string resourcesPath = "TextAnimator GlobalData";

		[Token(Token = "0x40009C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PresetBehaviorValues[] globalBehaviorPresets;

		[Token(Token = "0x40009C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PresetAppearanceValues[] globalAppearancePresets;

		[Token(Token = "0x40009CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string[] customActions;

		[Token(Token = "0x6000947")]
		[Address(RVA = "0x132D7E0", Offset = "0x132D7E0", VA = "0x132D7E0")]
		public TAnimGlobalDataScriptable()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000142")]
	public class CharacterEvent : UnityEvent<char>
	{
		[Token(Token = "0x6000948")]
		[Address(RVA = "0x19CD3A0", Offset = "0x19CD3A0", VA = "0x19CD3A0")]
		public CharacterEvent()
		{
		}
	}
	[Token(Token = "0x2000143")]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xCA8384", Offset = "0xCA8384")]
	public abstract class TAnimPlayerBase : MonoBehaviour
	{
		[Token(Token = "0x2000400")]
		[Flags]
		private enum StartTypewriterMode
		{
			[Token(Token = "0x4000E6F")]
			FromScriptOnly = 0,
			[Token(Token = "0x4000E70")]
			OnEnable = 1,
			[Token(Token = "0x4000E71")]
			OnShowText = 2,
			[Token(Token = "0x4000E72")]
			AutomaticallyFromAllEvents = 3
		}

		[StructLayout(3)]
		[Token(Token = "0x2000401")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB0934", Offset = "0xCB0934")]
		private struct <>c__DisplayClass18_0
		{
			[Token(Token = "0x4000E73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float deltaTime;

			[Token(Token = "0x4000E74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float typewriterTagsSpeed;
		}

		[Token(Token = "0x2000402")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB0944", Offset = "0xCB0944")]
		private sealed class <ShowRemainingCharacters>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TAnimPlayerBase <>4__this;

			[Token(Token = "0x4000E78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass18_0 <>8__1;

			[Token(Token = "0x4000E79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <timeToWait>5__2;

			[Token(Token = "0x4000E7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timePassed>5__3;

			[Token(Token = "0x170001AE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60015DD")]
				[Address(RVA = "0x132EA18", Offset = "0x132EA18", VA = "0x132EA18", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001AF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60015DF")]
				[Address(RVA = "0x132EA80", Offset = "0x132EA80", VA = "0x132EA80", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60015DA")]
			[Address(RVA = "0x132DA28", Offset = "0x132DA28", VA = "0x132DA28")]
			[DebuggerHidden]
			public <ShowRemainingCharacters>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x60015DB")]
			[Address(RVA = "0x132E1CC", Offset = "0x132E1CC", VA = "0x132E1CC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60015DC")]
			[Address(RVA = "0x132E1D0", Offset = "0x132E1D0", VA = "0x132E1D0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60015DE")]
			[Address(RVA = "0x132EA20", Offset = "0x132EA20", VA = "0x132EA20", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000403")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB0954", Offset = "0xCB0954")]
		private sealed class <<ShowRemainingCharacters>g__WaitTime|18_0>d : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float time;

			[Token(Token = "0x4000E7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TAnimPlayerBase <>4__this;

			[Token(Token = "0x4000E7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <t>5__2;

			[Token(Token = "0x170001B0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60015E3")]
				[Address(RVA = "0x132E15C", Offset = "0x132E15C", VA = "0x132E15C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001B1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60015E5")]
				[Address(RVA = "0x132E1C4", Offset = "0x132E1C4", VA = "0x132E1C4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60015E0")]
			[Address(RVA = "0x132E01C", Offset = "0x132E01C", VA = "0x132E01C")]
			[DebuggerHidden]
			public <<ShowRemainingCharacters>g__WaitTime|18_0>d(int <>1__state)
			{
			}

			[Token(Token = "0x60015E1")]
			[Address(RVA = "0x132E0AC", Offset = "0x132E0AC", VA = "0x132E0AC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60015E2")]
			[Address(RVA = "0x132E0B0", Offset = "0x132E0B0", VA = "0x132E0B0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60015E4")]
			[Address(RVA = "0x132E164", Offset = "0x132E164", VA = "0x132E164", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40009CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string textToShow;

		[Token(Token = "0x40009CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextAnimator _textAnimator;

		[Token(Token = "0x40009CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool isInsideRoutine;

		[Token(Token = "0x40009CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		protected bool wantsToSkip;

		[Token(Token = "0x40009CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCB1C54", Offset = "0xCB1C54")]
		[SerializeField]
		public bool useTypeWriter;

		[Token(Token = "0x40009D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCB1CA0", Offset = "0xCB1CA0")]
		private StartTypewriterMode startTypewriterMode;

		[Token(Token = "0x40009D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool canSkipTypewriter;

		[Token(Token = "0x40009D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[SerializeField]
		private bool hideAppearancesOnSkip;

		[Token(Token = "0x40009D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCB1D0C", Offset = "0xCB1D0C")]
		private bool triggerEventsOnSkip;

		[Token(Token = "0x40009D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		protected float typewriterPlayerSpeed;

		[Token(Token = "0x40009D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEvent onTextShowed;

		[Token(Token = "0x40009D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEvent onTypewriterStart;

		[Token(Token = "0x40009D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public CharacterEvent onCharacterVisible;

		[Token(Token = "0x170000ED")]
		public TextAnimator textAnimator
		{
			[Token(Token = "0x6000949")]
			[Address(RVA = "0x132D894", Offset = "0x132D894", VA = "0x132D894")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EE")]
		protected bool isBaseInsideRoutine
		{
			[Token(Token = "0x600094A")]
			[Address(RVA = "0x132D9A4", Offset = "0x132D9A4", VA = "0x132D9A4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600094B")]
		[Address(RVA = "0x132D9AC", Offset = "0x132D9AC", VA = "0x132D9AC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCB4D94", Offset = "0xCB4D94")]
		private IEnumerator ShowRemainingCharacters()
		{
			return null;
		}

		[Token(Token = "0x600094C")]
		[Address(RVA = "0x132DA54", Offset = "0x132DA54", VA = "0x132DA54")]
		public void ShowText(string text)
		{
		}

		[Token(Token = "0x600094D")]
		[Address(RVA = "0x132DC40", Offset = "0x132DC40", VA = "0x132DC40")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCB4DF8", Offset = "0xCB4DF8")]
		public void StartShowingText()
		{
		}

		[Token(Token = "0x600094E")]
		[Address(RVA = "0x132DD38", Offset = "0x132DD38", VA = "0x132DD38")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCB4E30", Offset = "0xCB4E30")]
		public void SkipTypewriter()
		{
		}

		[Token(Token = "0x600094F")]
		[Address(RVA = "0x132DBB0", Offset = "0x132DBB0", VA = "0x132DBB0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xCB4E68", Offset = "0xCB4E68")]
		public void StopShowingText()
		{
		}

		[Token(Token = "0x6000950")]
		[Address(RVA = "0x132DD44", Offset = "0x132DD44", VA = "0x132DD44")]
		public void SetTypewriterSpeed(float value)
		{
		}

		[Token(Token = "0x6000951")]
		protected abstract IEnumerator WaitInput();

		[Token(Token = "0x6000952")]
		protected abstract float WaitTimeOf(char character);

		[Token(Token = "0x6000953")]
		[Address(RVA = "0x132DDCC", Offset = "0x132DDCC", VA = "0x132DDCC", Slot = "6")]
		protected virtual IEnumerator DoCustomAction(TypewriterAction action)
		{
			return null;
		}

		[Token(Token = "0x6000954")]
		[Address(RVA = "0x132DE60", Offset = "0x132DE60", VA = "0x132DE60", Slot = "7")]
		protected virtual void UpdateTypeWriterInput()
		{
		}

		[Token(Token = "0x6000955")]
		[Address(RVA = "0x132DE64", Offset = "0x132DE64", VA = "0x132DE64", Slot = "8")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000956")]
		[Address(RVA = "0x132DE6C", Offset = "0x132DE6C", VA = "0x132DE6C", Slot = "9")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000957")]
		[Address(RVA = "0x132DF0C", Offset = "0x132DF0C", VA = "0x132DF0C")]
		protected TAnimPlayerBase()
		{
		}

		[Token(Token = "0x6000958")]
		[Address(RVA = "0x132DF90", Offset = "0x132DF90", VA = "0x132DF90")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCB4EA0", Offset = "0xCB4EA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB4EA0", Offset = "0xCB4EA0")]
		private IEnumerator <ShowRemainingCharacters>g__WaitTime|18_0(float time)
		{
			return null;
		}

		[Token(Token = "0x6000959")]
		[Address(RVA = "0x132E048", Offset = "0x132E048", VA = "0x132E048")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB4F14", Offset = "0xCB4F14")]
		private bool <ShowRemainingCharacters>g__HasSkipped|18_1()
		{
			return default(bool);
		}

		[Token(Token = "0x600095A")]
		[Address(RVA = "0x132E068", Offset = "0x132E068", VA = "0x132E068")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB4F24", Offset = "0xCB4F24")]
		private void <ShowRemainingCharacters>g__UpdateDeltaTime|18_2(ref <>c__DisplayClass18_0 P_0)
		{
		}
	}
	[Token(Token = "0x2000144")]
	public static class FormatUtils
	{
		[Token(Token = "0x600095B")]
		[Address(RVA = "0x19CE3F4", Offset = "0x19CE3F4", VA = "0x19CE3F4")]
		public static bool TryGetFloat(List<string> attributes, int index, float defValue, out float result)
		{
			return default(bool);
		}

		[Token(Token = "0x600095C")]
		[Address(RVA = "0x19CD8C4", Offset = "0x19CD8C4", VA = "0x19CD8C4")]
		public static bool ParseFloat(string value, out float result)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000145")]
	internal static class TAnimExtensions
	{
		[Token(Token = "0x600095D")]
		internal static int GetIndexOfEffect<T>(this List<T> effects, string tag) where T : EffectsBase
		{
			return default(int);
		}

		[Token(Token = "0x600095E")]
		internal static bool CloseElement<T>(this List<T> effects, int listIndex, int realTextIndex) where T : EffectsBase
		{
			return default(bool);
		}

		[Token(Token = "0x600095F")]
		internal static bool CloseRegionNamed<T>(this List<T> effects, string endTag, int realTextIndex) where T : EffectsBase
		{
			return default(bool);
		}

		[Token(Token = "0x6000960")]
		internal static bool TryAddingNewRegion<T>(this List<T> effects, T region) where T : EffectsBase
		{
			return default(bool);
		}

		[Token(Token = "0x6000961")]
		internal static bool IsAnyRegionOpenWithTag<T>(this List<T> effects, string tag) where T : EffectsBase
		{
			return default(bool);
		}

		[Token(Token = "0x6000962")]
		internal static bool CloseSingleOrAllEffects<T>(this List<T> effects, string closureTag, int realTextIndex) where T : EffectsBase
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000146")]
	public static class TextUtilities
	{
		[Token(Token = "0x40009D8")]
		internal const int fakeRandomsCount = 25;

		[Token(Token = "0x40009D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static Vector3[] fakeRandoms;

		[Token(Token = "0x40009DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static bool initialized;

		[Token(Token = "0x6000963")]
		[Address(RVA = "0x132EA88", Offset = "0x132EA88", VA = "0x132EA88")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x6000964")]
		[Address(RVA = "0x132ED54", Offset = "0x132ED54", VA = "0x132ED54")]
		public static Vector3 RotateAround(this Vector3 vec, Vector2 center, float rot)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000965")]
		[Address(RVA = "0x132EE48", Offset = "0x132EE48", VA = "0x132EE48")]
		public static void MoveChar(this Vector3[] vec, Vector3 dir)
		{
		}

		[Token(Token = "0x6000966")]
		[Address(RVA = "0x132EF70", Offset = "0x132EF70", VA = "0x132EF70")]
		public static void SetChar(this Vector3[] vec, Vector3 pos)
		{
		}

		[Token(Token = "0x6000967")]
		[Address(RVA = "0x132EFD0", Offset = "0x132EFD0", VA = "0x132EFD0")]
		public static void LerpUnclamped(this Vector3[] vec, Vector3 target, float pct)
		{
		}

		[Token(Token = "0x6000968")]
		[Address(RVA = "0x132F110", Offset = "0x132F110", VA = "0x132F110")]
		public static Vector3 GetMiddlePos(this Vector3[] vec)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000969")]
		[Address(RVA = "0x132F1E4", Offset = "0x132F1E4", VA = "0x132F1E4")]
		public static void RotateChar(this Vector3[] vec, float angle)
		{
		}

		[Token(Token = "0x600096A")]
		[Address(RVA = "0x132F380", Offset = "0x132F380", VA = "0x132F380")]
		public static void SetColor(this Color32[] col, Color32 target)
		{
		}

		[Token(Token = "0x600096B")]
		[Address(RVA = "0x132F3D4", Offset = "0x132F3D4", VA = "0x132F3D4")]
		public static void LerpUnclamped(this Color32[] col, Color32 target, float pct)
		{
		}

		[Token(Token = "0x600096C")]
		[Address(RVA = "0x132F46C", Offset = "0x132F46C", VA = "0x132F46C")]
		public static float GetDuration(this AnimationCurve curve)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000147")]
	public static class Tween
	{
		[Token(Token = "0x600096E")]
		[Address(RVA = "0x132F504", Offset = "0x132F504", VA = "0x132F504")]
		public static float EaseIn(float t)
		{
			return default(float);
		}

		[Token(Token = "0x600096F")]
		[Address(RVA = "0x132F50C", Offset = "0x132F50C", VA = "0x132F50C")]
		public static float Flip(float x)
		{
			return default(float);
		}

		[Token(Token = "0x6000970")]
		[Address(RVA = "0x132F518", Offset = "0x132F518", VA = "0x132F518")]
		public static float Square(float t)
		{
			return default(float);
		}

		[Token(Token = "0x6000971")]
		[Address(RVA = "0x132F520", Offset = "0x132F520", VA = "0x132F520")]
		public static float EaseOut(float t)
		{
			return default(float);
		}

		[Token(Token = "0x6000972")]
		[Address(RVA = "0x132F534", Offset = "0x132F534", VA = "0x132F534")]
		public static float EaseInOut(float t)
		{
			return default(float);
		}

		[Token(Token = "0x6000973")]
		[Address(RVA = "0x132F5C8", Offset = "0x132F5C8", VA = "0x132F5C8")]
		public static float BounceOut(float t)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000148")]
	public abstract class AppearanceBase : EffectsBase
	{
		[Token(Token = "0x40009DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		protected float showDuration;

		[Token(Token = "0x6000974")]
		public abstract void SetDefaultValues(AppearanceDefaultValues data);

		[Token(Token = "0x6000975")]
		[Address(RVA = "0x19CC8D8", Offset = "0x19CC8D8", VA = "0x19CC8D8", Slot = "8")]
		public virtual bool CanShowAppearanceOn(float timePassed)
		{
			return default(bool);
		}

		[Token(Token = "0x6000976")]
		[Address(RVA = "0x19CC8E8", Offset = "0x19CC8E8", VA = "0x19CC8E8")]
		protected AppearanceBase()
		{
		}
	}
	[Token(Token = "0x2000149")]
	internal class DiagonalExpandAppearance : AppearanceBase
	{
		[Token(Token = "0x40009DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int targetA;

		[Token(Token = "0x40009DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int targetB;

		[Token(Token = "0x6000977")]
		[Address(RVA = "0x19CD604", Offset = "0x19CD604", VA = "0x19CD604", Slot = "7")]
		public override void SetDefaultValues(AppearanceDefaultValues data)
		{
		}

		[Token(Token = "0x6000978")]
		[Address(RVA = "0x19CD64C", Offset = "0x19CD64C", VA = "0x19CD64C", Slot = "4")]
		public override void ApplyEffect(ref CharacterData data, int charIndex)
		{
		}

		[Token(Token = "0x6000979")]
		[Address(RVA = "0x19CD884", Offset = "0x19CD884", VA = "0x19CD884")]
		public DiagonalExpandAppearance()
		{
		}
	}
	[Token(Token = "0x200014A")]
	internal class FadeAppearance : AppearanceBase
	{
		[Token(Token = "0x600097A")]
		[Address(RVA = "0x19CDD30", Offset = "0x19CDD30", VA = "0x19CDD30", Slot = "7")]
		public override void SetDefaultValues(AppearanceDefaultValues data)
		{
		}

		[Token(Token = "0x600097B")]
		[Address(RVA = "0x19CDD58", Offset = "0x19CDD58", VA = "0x19CDD58", Slot = "4")]
		public override void ApplyEffect(ref CharacterData data, int charIndex)
		{
		}

		[Token(Token = "0x600097C")]
		[Address(RVA = "0x19CDE14", Offset = "0x19CDE14", VA = "0x19CDE14")]
		public FadeAppearance()
		{
		}
	}
	[Token(Token = "0x200014B")]
	internal class HorizontalExpandAppearance : AppearanceBase
	{
		[Token(Token = "0x2000404")]
		public enum ExpType
		{
			[Token(Token = "0x4000E81")]
			Left,
			[Token(Token = "0x4000E82")]
			Middle,
			[Token(Token = "0x4000E83")]
			Right
		}

		[Token(Token = "0x40009DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ExpType type;

		[Token(Token = "0x600097D")]
		[Address(RVA = "0x19CE498", Offset = "0x19CE498", VA = "0x19CE498", Slot = "7")]
		public override void SetDefaultValues(AppearanceDefaultValues data)
		{
		}

		[Token(Token = "0x600097E")]
		[Address(RVA = "0x19CE4D0", Offset = "0x19CE4D0", VA = "0x19CE4D0", Slot = "4")]
		public override void ApplyEffect(ref CharacterData data, int charIndex)
		{
		}

		[Token(Token = "0x600097F")]
		[Address(RVA = "0x19CEA98", Offset = "0x19CEA98", VA = "0x19CEA98")]
		public HorizontalExpandAppearance()
		{
		}
	}
	[Token(Token = "0x200014C")]
	internal class OffsetAppearance : AppearanceBase
	{
		[Token(Token = "0x40009DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float amount;

		[Token(Token = "0x40009E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector2 direction;

		[Token(Token = "0x6000980")]
		[Address(RVA = "0x19CEAB4", Offset = "0x19CEAB4", VA = "0x19CEAB4", Slot = "7")]
		public override void SetDefaultValues(AppearanceDefaultValues data)
		{
		}

		[Token(Token = "0x6000981")]
		[Address(RVA = "0x19CEB04", Offset = "0x19CEB04", VA = "0x19CEB04", Slot = "4")]
		public override void ApplyEffect(ref CharacterData data, int charIndex)
		{
		}

		[Token(Token = "0x6000982")]
		[Address(RVA = "0x19CEC20", Offset = "0x19CEC20", VA = "0x19CEC20")]
		public OffsetAppearance()
		{
		}
	}
	[Token(Token = "0x200014D")]
	internal class RotatingAppearance : AppearanceBase
	{
		[Token(Token = "0x40009E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float targetAngle;

		[Token(Token = "0x6000983")]
		[Address(RVA = "0x19D0C20", Offset = "0x19D0C20", VA = "0x19D0C20", Slot = "7")]
		public override void SetDefaultValues(AppearanceDefaultValues data)
		{
		}

		[Token(Token = "0x6000984")]
		[Address(RVA = "0x19D0C58", Offset = "0x19D0C58", VA = "0x19D0C58", Slot = "4")]
		public override void ApplyEffect(ref CharacterData data, int charIndex)
		{
		}

		[Token(Token = "0x6000985")]
		[Address(RVA = "0x19D0D2C", Offset = "0x19D0D2C", VA = "0x19D0D2C")]
		public RotatingAppearance()
		{
		}
	}
	[Token(Token = "0x200014E")]
	internal class SizeAppearance : AppearanceBase
	{
		[Token(Token = "0x40009E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float amplitude;

		[Token(Token = "0x6000986")]
		[Address(RVA = "0x19D14A0", Offset = "0x19D14A0", VA = "0x19D14A0", Slot = "7")]
		public override void SetDefaultValues(AppearanceDefaultValues data)
		{
		}

		[Token(Token = "0x6000987")]
		[Address(RVA = "0x19D14E0", Offset = "0x19D14E0", VA = "0x19D14E0", Slot = "4")]
		public override void ApplyEffect(ref CharacterData data, int charIndex)
		{
		}

		[Token(Token = "0x6000988")]
		[Address(RVA = "0x19D15B0", Offset = "0x19D15B0", VA = "0x19D15B0")]
		public SizeAppearance()
		{
		}
	}
	[Token(Token = "0x200014F")]
	internal class VerticalExpandAppearance : AppearanceBase
	{
		[Token(Token = "0x40009E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int startA;

		[Token(Token = "0x40009E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int targetA;

		[Token(Token = "0x40009E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int startB;

		[Token(Token = "0x40009E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int targetB;

		[Token(Token = "0x6000989")]
		[Address(RVA = "0x132F688", Offset = "0x132F688", VA = "0x132F688", Slot = "7")]
		public override void SetDefaultValues(AppearanceDefaultValues data)
		{
		}

		[Token(Token = "0x600098A")]
		[Address(RVA = "0x132F6D8", Offset = "0x132F6D8", VA = "0x132F6D8", Slot = "4")]
		public override void ApplyEffect(ref CharacterData data, int charIndex)
		{
		}

		[Token(Token = "0x600098B")]
		[Address(RVA = "0x132F898", Offset = "0x132F898", VA = "0x132F898")]
		public VerticalExpandAppearance()
		{
		}
	}
	[Token(Token = "0x2000150")]
	internal class PresetAppearance : AppearanceBase
	{
		[StructLayout(3)]
		[Token(Token = "0x2000405")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB0964", Offset = "0xCB0964")]
		private struct <>c__DisplayClass24_0
		{
			[Token(Token = "0x4000E84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public PresetAppearance <>4__this;

			[Token(Token = "0x4000E85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AppearanceDefaultValues data;
		}

		[Token(Token = "0x40009E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool enabled;

		[Token(Token = "0x40009E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Matrix4x4 matrix;

		[Token(Token = "0x40009E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector3 movementVec;

		[Token(Token = "0x40009EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 scaleVec;

		[Token(Token = "0x40009EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3 offset;

		[Token(Token = "0x40009EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 rotationEuler;

		[Token(Token = "0x40009ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Quaternion rotationQua;

		[Token(Token = "0x40009EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private bool hasTransformEffects;

		[Token(Token = "0x40009EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB5")]
		private bool setMovement;

		[Token(Token = "0x40009F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private EffectEvaluator movementX;

		[Token(Token = "0x40009F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private EffectEvaluator movementY;

		[Token(Token = "0x40009F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private EffectEvaluator movementZ;

		[Token(Token = "0x40009F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private bool setScale;

		[Token(Token = "0x40009F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float scaleXDuration;

		[Token(Token = "0x40009F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private float scaleYDuration;

		[Token(Token = "0x40009F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private EffectEvaluator scaleX;

		[Token(Token = "0x40009F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private EffectEvaluator scaleY;

		[Token(Token = "0x40009F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private bool setRotation;

		[Token(Token = "0x40009F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private EffectEvaluator rotX;

		[Token(Token = "0x40009FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private EffectEvaluator rotY;

		[Token(Token = "0x40009FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private EffectEvaluator rotZ;

		[Token(Token = "0x40009FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private bool setColor;

		[Token(Token = "0x40009FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private Color32 color;

		[Token(Token = "0x40009FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private ColorCurve colorCurve;

		[Token(Token = "0x600098C")]
		[Address(RVA = "0x19CEC3C", Offset = "0x19CEC3C", VA = "0x19CEC3C", Slot = "7")]
		public override void SetDefaultValues(AppearanceDefaultValues data)
		{
		}

		[Token(Token = "0x600098D")]
		public static bool SetPreset<T>(bool isAppearance, T values, ref EffectEvaluator movementX, ref EffectEvaluator movementY, ref EffectEvaluator movementZ, ref bool setMovement, ref float showDuration, ref Vector3 scaleVec, ref bool setScale, ref EffectEvaluator scaleX, ref EffectEvaluator scaleY, ref float scaleXDuration, ref float scaleYDuration, ref bool setRotation, ref Quaternion rotationQua, ref EffectEvaluator rotX, ref EffectEvaluator rotY, ref EffectEvaluator rotZ, ref bool hasTransformEffects, ref bool setColor, ref ColorCurve colorCurve) where T : PresetBaseValues
		{
			return default(bool);
		}

		[Token(Token = "0x600098E")]
		[Address(RVA = "0x19CEDE0", Offset = "0x19CEDE0", VA = "0x19CEDE0", Slot = "4")]
		public override void ApplyEffect(ref CharacterData data, int charIndex)
		{
		}

		[Token(Token = "0x600098F")]
		[Address(RVA = "0x19CF55C", Offset = "0x19CF55C", VA = "0x19CF55C")]
		public PresetAppearance()
		{
		}

		[Token(Token = "0x6000990")]
		[Address(RVA = "0x19CF578", Offset = "0x19CF578", VA = "0x19CF578")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB5024", Offset = "0xCB5024")]
		private void <SetDefaultValues>g__AssignValues|24_0(PresetAppearanceValues result, ref <>c__DisplayClass24_0 P_1)
		{
		}

		[Token(Token = "0x6000991")]
		[Address(RVA = "0x19CECFC", Offset = "0x19CECFC", VA = "0x19CECFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB5034", Offset = "0xCB5034")]
		private void <SetDefaultValues>g__TryAssigningPreset|24_1(ref <>c__DisplayClass24_0 P_0)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000151")]
	public class PresetAppearanceValues : PresetBaseValues
	{
		[Token(Token = "0x6000992")]
		[Address(RVA = "0x19CF7AC", Offset = "0x19CF7AC", VA = "0x19CF7AC")]
		public PresetAppearanceValues()
		{
		}
	}
	[Token(Token = "0x2000152")]
	public abstract class BehaviorBase : EffectsBase
	{
		[Token(Token = "0x40009FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB1D58", Offset = "0xCB1D58")]
		private float <animatorTime>k__BackingField;

		[Token(Token = "0x4000A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB1D68", Offset = "0xCB1D68")]
		private float <animatorDeltaTime>k__BackingField;

		[Token(Token = "0x170000EF")]
		protected float animatorTime
		{
			[Token(Token = "0x6000995")]
			[Address(RVA = "0x19CCA78", Offset = "0x19CCA78", VA = "0x19CCA78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB5044", Offset = "0xCB5044")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000996")]
			[Address(RVA = "0x19CCA80", Offset = "0x19CCA80", VA = "0x19CCA80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB5054", Offset = "0xCB5054")]
			private set
			{
			}
		}

		[Token(Token = "0x170000F0")]
		protected float animatorDeltaTime
		{
			[Token(Token = "0x6000997")]
			[Address(RVA = "0x19CCA88", Offset = "0x19CCA88", VA = "0x19CCA88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB5064", Offset = "0xCB5064")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000998")]
			[Address(RVA = "0x19CCA90", Offset = "0x19CCA90", VA = "0x19CCA90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB5074", Offset = "0xCB5074")]
			private set
			{
			}
		}

		[Token(Token = "0x6000993")]
		public abstract void SetDefaultValues(BehaviorDefaultValues data);

		[Token(Token = "0x6000994")]
		public abstract void SetModifier(string modifierName, string modifierValue);

		[Token(Token = "0x6000999")]
		[Address(RVA = "0x19CCA98", Offset = "0x19CCA98", VA = "0x19CCA98")]
		public void SetTimeValues(float time, float deltaTime)
		{
		}

		[Token(Token = "0x600099A")]
		[Address(RVA = "0x19CCAA0", Offset = "0x19CCAA0", VA = "0x19CCAA0")]
		protected BehaviorBase()
		{
		}
	}
	[Token(Token = "0x2000153")]
	public abstract class BehaviorSine : BehaviorBase
	{
		[Token(Token = "0x4000A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		protected float amplitude;

		[Token(Token = "0x4000A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected float frequency;

		[Token(Token = "0x4000A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float waveSize;

		[Token(Token = "0x600099B")]
		[Address(RVA = "0x19CCBE0", Offset = "0x19CCBE0", VA = "0x19CCBE0", Slot = "8")]
		public override void SetModifier(string modifierName, string modifierValue)
		{
		}

		[Token(Token = "0x600099C")]
		[Address(RVA = "0x19CCD40", Offset = "0x19CCD40", VA = "0x19CCD40", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600099D")]
		[Address(RVA = "0x19CD060", Offset = "0x19CD060", VA = "0x19CD060")]
		protected BehaviorSine()
		{
		}
	}
	[Token(Token = "0x2000154")]
	internal class BounceBehavior : BehaviorSine
	{
		[Token(Token = "0x600099E")]
		[Address(RVA = "0x19CD084", Offset = "0x19CD084", VA = "0x19CD084", Slot = "7")]
		public override void SetDefaultValues(BehaviorDefaultValues data)
		{
		}

		[Token(Token = "0x600099F")]
		[Address(RVA = "0x19CD0CC", Offset = "0x19CD0CC", VA = "0x19CD0CC", Slot = "4")]
		public override void ApplyEffect(ref CharacterData data, int charIndex)
		{
		}

		[Token(Token = "0x60009A0")]
		[Address(RVA = "0x19CD284", Offset = "0x19CD284", VA = "0x19CD284")]
		public BounceBehavior()
		{
		}

		[Token(Token = "0x60009A1")]
		[Address(RVA = "0x19CD224", Offset = "0x19CD224", VA = "0x19CD224")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB5084", Offset = "0xCB5084")]
		internal static float <ApplyEffect>g__BounceTween|1_0(float t)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000155")]
	internal class FadeBehavior : BehaviorBase
	{
		[Token(Token = "0x4000A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float delay;

		[Token(Token = "0x4000A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float[] charPCTs;

		[Token(Token = "0x60009A2")]
		[Address(RVA = "0x19CDE30", Offset = "0x19CDE30", VA = "0x19CDE30", Slot = "7")]
		public override void SetDefaultValues(BehaviorDefaultValues data)
		{
		}

		[Token(Token = "0x60009A3")]
		[Address(RVA = "0x19CDE58", Offset = "0x19CDE58", VA = "0x19CDE58", Slot = "5")]
		public override void Initialize(int charactersCount)
		{
		}

		[Token(Token = "0x60009A4")]
		[Address(RVA = "0x19CDEC4", Offset = "0x19CDEC4", VA = "0x19CDEC4", Slot = "8")]
		public override void SetModifier(string modifierName, string modifierValue)
		{
		}

		[Token(Token = "0x60009A5")]
		[Address(RVA = "0x19CDF5C", Offset = "0x19CDF5C", VA = "0x19CDF5C", Slot = "4")]
		public override void ApplyEffect(ref CharacterData data, int charIndex)
		{
		}

		[Token(Token = "0x60009A6")]
		[Address(RVA = "0x19CE130", Offset = "0x19CE130", VA = "0x19CE130", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60009A7")]
		[Address(RVA = "0x19CE1D8", Offset = "0x19CE1D8", VA = "0x19CE1D8")]
		public FadeBehavior()
		{
		}
	}
	[Token(Token = "0x2000156")]
	internal class RainbowBehavior : BehaviorBase
	{
		[Token(Token = "0x4000A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float hueShiftSpeed;

		[Token(Token = "0x4000A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float hueShiftWaveSize;

		[Token(Token = "0x60009A8")]
		[Address(RVA = "0x19D08F4", Offset = "0x19D08F4", VA = "0x19D08F4", Slot = "7")]
		public override void SetDefaultValues(BehaviorDefaultValues data)
		{
		}

		[Token(Token = "0x60009A9")]
		[Address(RVA = "0x19D092C", Offset = "0x19D092C", VA = "0x19D092C", Slot = "8")]
		public override void SetModifier(string modifierName, string modifierValue)
		{
		}

		[Token(Token = "0x60009AA")]
		[Address(RVA = "0x19D0A08", Offset = "0x19D0A08", VA = "0x19D0A08", Slot = "4")]
		public override void ApplyEffect(ref CharacterData data, int charIndex)
		{
		}

		[Token(Token = "0x60009AB")]
		[Address(RVA = "0x19D0B24", Offset = "0x19D0B24", VA = "0x19D0B24", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60009AC")]
		[Address(RVA = "0x19D0C04", Offset = "0x19D0C04", VA = "0x19D0C04")]
		public RainbowBehavior()
		{
		}
	}
	[Token(Token = "0x2000157")]
	internal class RotationBehavior : BehaviorBase
	{
		[Token(Token = "0x4000A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float angleSpeed;

		[Token(Token = "0x4000A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float angleDiffBetweenChars;

		[Token(Token = "0x60009AD")]
		[Address(RVA = "0x19D0D48", Offset = "0x19D0D48", VA = "0x19D0D48", Slot = "7")]
		public override void SetDefaultValues(BehaviorDefaultValues data)
		{
		}

		[Token(Token = "0x60009AE")]
		[Address(RVA = "0x19D0D80", Offset = "0x19D0D80", VA = "0x19D0D80", Slot = "8")]
		public override void SetModifier(string modifierName, string modifierValue)
		{
		}

		[Token(Token = "0x60009AF")]
		[Address(RVA = "0x19D0E5C", Offset = "0x19D0E5C", VA = "0x19D0E5C", Slot = "4")]
		public override void ApplyEffect(ref CharacterData data, int charIndex)
		{
		}

		[Token(Token = "0x60009B0")]
		[Address(RVA = "0x19D0F00", Offset = "0x19D0F00", VA = "0x19D0F00", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60009B1")]
		[Address(RVA = "0x19D0FE0", Offset = "0x19D0FE0", VA = "0x19D0FE0")]
		public RotationBehavior()
		{
		}
	}
	[Token(Token = "0x2000158")]
	internal class ShakeBehavior : BehaviorBase
	{
		[Token(Token = "0x4000A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float shakeStrength;

		[Token(Token = "0x4000A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float shakeDelay;

		[Token(Token = "0x4000A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float timePassed;

		[Token(Token = "0x4000A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int randIndex;

		[Token(Token = "0x4000A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int lastRandomIndex;

		[Token(Token = "0x60009B2")]
		[Address(RVA = "0x19D0FFC", Offset = "0x19D0FFC", VA = "0x19D0FFC", Slot = "7")]
		public override void SetDefaultValues(BehaviorDefaultValues data)
		{
		}

		[Token(Token = "0x60009B3")]
		[Address(RVA = "0x19D1034", Offset = "0x19D1034", VA = "0x19D1034")]
		private void ClampValues()
		{
		}

		[Token(Token = "0x60009B4")]
		[Address(RVA = "0x19D10C0", Offset = "0x19D10C0", VA = "0x19D10C0", Slot = "5")]
		public override void Initialize(int charactersCount)
		{
		}

		[Token(Token = "0x60009B5")]
		[Address(RVA = "0x19D10F0", Offset = "0x19D10F0", VA = "0x19D10F0", Slot = "8")]
		public override void SetModifier(string modifierName, string modifierValue)
		{
		}

		[Token(Token = "0x60009B6")]
		[Address(RVA = "0x19D11D4", Offset = "0x19D11D4", VA = "0x19D11D4", Slot = "6")]
		public override void Calculate()
		{
		}

		[Token(Token = "0x60009B7")]
		[Address(RVA = "0x19D1240", Offset = "0x19D1240", VA = "0x19D1240", Slot = "4")]
		public override void ApplyEffect(ref CharacterData data, int charIndex)
		{
		}

		[Token(Token = "0x60009B8")]
		[Address(RVA = "0x19D13B0", Offset = "0x19D13B0", VA = "0x19D13B0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60009B9")]
		[Address(RVA = "0x19D1490", Offset = "0x19D1490", VA = "0x19D1490")]
		public ShakeBehavior()
		{
		}
	}
	[Token(Token = "0x2000159")]
	internal class SizeBehavior : BehaviorSine
	{
		[Token(Token = "0x4000A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 middle;

		[Token(Token = "0x60009BA")]
		[Address(RVA = "0x19D15CC", Offset = "0x19D15CC", VA = "0x19D15CC", Slot = "7")]
		public override void SetDefaultValues(BehaviorDefaultValues data)
		{
		}

		[Token(Token = "0x60009BB")]
		[Address(RVA = "0x19D161C", Offset = "0x19D161C", VA = "0x19D161C", Slot = "4")]
		public override void ApplyEffect(ref CharacterData data, int charIndex)
		{
		}

		[Token(Token = "0x60009BC")]
		[Address(RVA = "0x19D1734", Offset = "0x19D1734", VA = "0x19D1734")]
		public SizeBehavior()
		{
		}
	}
	[Token(Token = "0x200015A")]
	internal class SlideBehavior : BehaviorSine
	{
		[Token(Token = "0x60009BD")]
		[Address(RVA = "0x19D1758", Offset = "0x19D1758", VA = "0x19D1758", Slot = "7")]
		public override void SetDefaultValues(BehaviorDefaultValues data)
		{
		}

		[Token(Token = "0x60009BE")]
		[Address(RVA = "0x19D17A0", Offset = "0x19D17A0", VA = "0x19D17A0", Slot = "4")]
		public override void ApplyEffect(ref CharacterData data, int charIndex)
		{
		}

		[Token(Token = "0x60009BF")]
		[Address(RVA = "0x19D19DC", Offset = "0x19D19DC", VA = "0x19D19DC")]
		public SlideBehavior()
		{
		}
	}
	[Token(Token = "0x200015B")]
	internal class SwingBehavior : BehaviorSine
	{
		[Token(Token = "0x60009C0")]
		[Address(RVA = "0x19D1A00", Offset = "0x19D1A00", VA = "0x19D1A00", Slot = "7")]
		public override void SetDefaultValues(BehaviorDefaultValues data)
		{
		}

		[Token(Token = "0x60009C1")]
		[Address(RVA = "0x19D1A48", Offset = "0x19D1A48", VA = "0x19D1A48", Slot = "4")]
		public override void ApplyEffect(ref CharacterData data, int charIndex)
		{
		}

		[Token(Token = "0x60009C2")]
		[Address(RVA = "0x19D1B1C", Offset = "0x19D1B1C", VA = "0x19D1B1C")]
		public SwingBehavior()
		{
		}
	}
	[Token(Token = "0x200015C")]
	internal class WaveBehavior : BehaviorSine
	{
		[Token(Token = "0x60009C3")]
		[Address(RVA = "0x132F8A0", Offset = "0x132F8A0", VA = "0x132F8A0", Slot = "7")]
		public override void SetDefaultValues(BehaviorDefaultValues data)
		{
		}

		[Token(Token = "0x60009C4")]
		[Address(RVA = "0x132F8E8", Offset = "0x132F8E8", VA = "0x132F8E8", Slot = "4")]
		public override void ApplyEffect(ref CharacterData data, int charIndex)
		{
		}

		[Token(Token = "0x60009C5")]
		[Address(RVA = "0x132FA30", Offset = "0x132FA30", VA = "0x132FA30")]
		public WaveBehavior()
		{
		}
	}
	[Token(Token = "0x200015D")]
	internal class WiggleBehavior : BehaviorBase
	{
		[Token(Token = "0x4000A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float amplitude;

		[Token(Token = "0x4000A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float frequency;

		[Token(Token = "0x4000A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3[] directions;

		[Token(Token = "0x60009C6")]
		[Address(RVA = "0x132FA38", Offset = "0x132FA38", VA = "0x132FA38", Slot = "7")]
		public override void SetDefaultValues(BehaviorDefaultValues data)
		{
		}

		[Token(Token = "0x60009C7")]
		[Address(RVA = "0x132FA70", Offset = "0x132FA70", VA = "0x132FA70", Slot = "5")]
		public override void Initialize(int charactersCount)
		{
		}

		[Token(Token = "0x60009C8")]
		[Address(RVA = "0x132FC40", Offset = "0x132FC40", VA = "0x132FC40", Slot = "8")]
		public override void SetModifier(string modifierName, string modifierValue)
		{
		}

		[Token(Token = "0x60009C9")]
		[Address(RVA = "0x132FCF0", Offset = "0x132FCF0", VA = "0x132FCF0", Slot = "4")]
		public override void ApplyEffect(ref CharacterData data, int charIndex)
		{
		}

		[Token(Token = "0x60009CA")]
		[Address(RVA = "0x132FE5C", Offset = "0x132FE5C", VA = "0x132FE5C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60009CB")]
		[Address(RVA = "0x132FF40", Offset = "0x132FF40", VA = "0x132FF40")]
		public WiggleBehavior()
		{
		}
	}
	[Token(Token = "0x200015E")]
	internal class PresetBehavior : BehaviorBase
	{
		[StructLayout(3)]
		[Token(Token = "0x2000406")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB0974", Offset = "0xCB0974")]
		private struct <>c__DisplayClass28_0
		{
			[Token(Token = "0x4000E86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public PresetBehavior <>4__this;

			[Token(Token = "0x4000E87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float showDuration;

			[Token(Token = "0x4000E88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float scaleXDuration;

			[Token(Token = "0x4000E89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float scaleYDuration;

			[Token(Token = "0x4000E8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public BehaviorDefaultValues data;
		}

		[Token(Token = "0x4000A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool enabled;

		[Token(Token = "0x4000A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float timeSpeed;

		[Token(Token = "0x4000A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float weightMult;

		[Token(Token = "0x4000A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Matrix4x4 matrix;

		[Token(Token = "0x4000A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 movementVec;

		[Token(Token = "0x4000A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3 scaleVec;

		[Token(Token = "0x4000A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 offset;

		[Token(Token = "0x4000A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Vector3 rotationEuler;

		[Token(Token = "0x4000A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Quaternion rotationQua;

		[Token(Token = "0x4000A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float uniformEffectTime;

		[Token(Token = "0x4000A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private bool hasTransformEffects;

		[Token(Token = "0x4000A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC5")]
		private bool isOnOneCharacter;

		[Token(Token = "0x4000A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float weight;

		[Token(Token = "0x4000A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private EmissionControl emissionControl;

		[Token(Token = "0x4000A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private bool setMovement;

		[Token(Token = "0x4000A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private EffectEvaluator movementX;

		[Token(Token = "0x4000A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private EffectEvaluator movementY;

		[Token(Token = "0x4000A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private EffectEvaluator movementZ;

		[Token(Token = "0x4000A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private bool setScale;

		[Token(Token = "0x4000A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private EffectEvaluator scaleX;

		[Token(Token = "0x4000A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private EffectEvaluator scaleY;

		[Token(Token = "0x4000A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private bool setRotation;

		[Token(Token = "0x4000A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private EffectEvaluator rotX;

		[Token(Token = "0x4000A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private EffectEvaluator rotY;

		[Token(Token = "0x4000A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private EffectEvaluator rotZ;

		[Token(Token = "0x4000A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private bool setColor;

		[Token(Token = "0x4000A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private Color32 color;

		[Token(Token = "0x4000A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private ColorCurve colorCurve;

		[Token(Token = "0x60009CC")]
		[Address(RVA = "0x19CFB08", Offset = "0x19CFB08", VA = "0x19CFB08", Slot = "7")]
		public override void SetDefaultValues(BehaviorDefaultValues data)
		{
		}

		[Token(Token = "0x60009CD")]
		[Address(RVA = "0x19CFCCC", Offset = "0x19CFCCC", VA = "0x19CFCCC", Slot = "8")]
		public override void SetModifier(string modifierName, string modifierValue)
		{
		}

		[Token(Token = "0x60009CE")]
		[Address(RVA = "0x19CFDA8", Offset = "0x19CFDA8", VA = "0x19CFDA8", Slot = "6")]
		public override void Calculate()
		{
		}

		[Token(Token = "0x60009CF")]
		[Address(RVA = "0x19CFDE4", Offset = "0x19CFDE4", VA = "0x19CFDE4", Slot = "4")]
		public override void ApplyEffect(ref CharacterData data, int charIndex)
		{
		}

		[Token(Token = "0x60009D0")]
		[Address(RVA = "0x19D0634", Offset = "0x19D0634", VA = "0x19D0634")]
		public PresetBehavior()
		{
		}

		[Token(Token = "0x60009D1")]
		[Address(RVA = "0x19D0648", Offset = "0x19D0648", VA = "0x19D0648")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB5094", Offset = "0xCB5094")]
		private void <SetDefaultValues>g__AssignValues|28_0(PresetBehaviorValues result, ref <>c__DisplayClass28_0 P_1)
		{
		}

		[Token(Token = "0x60009D2")]
		[Address(RVA = "0x19CFBE4", Offset = "0x19CFBE4", VA = "0x19CFBE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB50A4", Offset = "0xCB50A4")]
		private void <SetDefaultValues>g__TryAssigningPreset|28_1(ref <>c__DisplayClass28_0 P_0)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200015F")]
	public class PresetBehaviorValues : PresetBaseValues
	{
		[Token(Token = "0x4000A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		public EmissionControl emission;

		[Token(Token = "0x60009D3")]
		[Address(RVA = "0x19D08B8", Offset = "0x19D08B8", VA = "0x19D08B8", Slot = "4")]
		public override void Initialize(bool isAppearance)
		{
		}

		[Token(Token = "0x60009D4")]
		[Address(RVA = "0x19D08EC", Offset = "0x19D08EC", VA = "0x19D08EC")]
		public PresetBehaviorValues()
		{
		}
	}
	[Token(Token = "0x2000160")]
	public static class CustomEffects
	{
		[Token(Token = "0x2000407")]
		public struct TagInfo
		{
			[Token(Token = "0x4000E8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public readonly string key;

			[Token(Token = "0x4000E8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public readonly Type type;

			[Token(Token = "0x60015E6")]
			[Address(RVA = "0xE00D9C", Offset = "0xE00D9C", VA = "0xE00D9C")]
			public TagInfo(string key, Type type)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000408")]
		public class CustomBehaviorDefValues
		{
			[Token(Token = "0x60015E7")]
			[Address(RVA = "0x19CCBD8", Offset = "0x19CCBD8", VA = "0x19CCBD8")]
			public CustomBehaviorDefValues()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000409")]
		public class CustomAppearanceDefValues
		{
			[Token(Token = "0x60015E8")]
			[Address(RVA = "0x19CCA70", Offset = "0x19CCA70", VA = "0x19CCA70")]
			public CustomAppearanceDefValues()
			{
			}
		}

		[Token(Token = "0x4000A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly TagInfo[] customBehaviors;

		[Token(Token = "0x4000A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly TagInfo[] customAppearances;
	}
	[Serializable]
	[Token(Token = "0x2000161")]
	public class ColorCurve
	{
		[Token(Token = "0x4000A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public bool enabled;

		[Token(Token = "0x4000A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Gradient gradient;

		[Token(Token = "0x4000A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "MinValueAttribute", RVA = "0xCB1DA8", Offset = "0xCB1DA8")]
		protected float duration;

		[Token(Token = "0x4000A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCB1DE8", Offset = "0xCB1DE8")]
		protected float charsTimeOffset;

		[Token(Token = "0x4000A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool isAppearance;

		[Token(Token = "0x60009D6")]
		[Address(RVA = "0x19CD3F0", Offset = "0x19CD3F0", VA = "0x19CD3F0")]
		public float GetDuration()
		{
			return default(float);
		}

		[Token(Token = "0x60009D7")]
		[Address(RVA = "0x19CD3F8", Offset = "0x19CD3F8", VA = "0x19CD3F8")]
		public void Initialize(bool isAppearance)
		{
		}

		[Token(Token = "0x60009D8")]
		[Address(RVA = "0x19CD424", Offset = "0x19CD424", VA = "0x19CD424")]
		public Color32 GetColor(float time, int characterIndex)
		{
			return default(Color32);
		}

		[Token(Token = "0x60009D9")]
		[Address(RVA = "0x19CD51C", Offset = "0x19CD51C", VA = "0x19CD51C")]
		public ColorCurve()
		{
		}
	}
	[Token(Token = "0x2000162")]
	internal interface EffectEvaluator
	{
		[Token(Token = "0x170000F1")]
		bool isEnabled
		{
			[Token(Token = "0x60009DB")]
			get;
		}

		[Token(Token = "0x60009DA")]
		void Initialize(int type);

		[Token(Token = "0x60009DC")]
		float Evaluate(float time, int characterIndex);

		[Token(Token = "0x60009DD")]
		float GetDuration();
	}
	[Serializable]
	[Token(Token = "0x2000163")]
	public struct EmissionControl
	{
		[Token(Token = "0x4000A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "MinValueAttribute", RVA = "0xCB1E2C", Offset = "0xCB1E2C")]
		private int cycles;

		[Token(Token = "0x4000A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		private AnimationCurve attackCurve;

		[Token(Token = "0x4000A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[AttributeAttribute(Name = "MinValueAttribute", RVA = "0xCB1E78", Offset = "0xCB1E78")]
		private float overrideDuration;

		[Token(Token = "0x4000A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private bool continueForever;

		[Token(Token = "0x4000A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AnimationCurve decayCurve;

		[NonSerialized]
		[Token(Token = "0x4000A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float maxDuration;

		[NonSerialized]
		[Token(Token = "0x4000A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AnimationCurve intensityOverDuration;

		[NonSerialized]
		[Token(Token = "0x4000A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float passedTime;

		[NonSerialized]
		[Token(Token = "0x4000A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float cycleDuration;

		[NonSerialized]
		[Token(Token = "0x4000A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float effectWeigth;

		[Token(Token = "0x60009DE")]
		[Address(RVA = "0xE00F80", Offset = "0xE00F80", VA = "0xE00F80")]
		public void Initialize(float effectsMaxDuration)
		{
		}

		[Token(Token = "0x60009DF")]
		[Address(RVA = "0xE00F88", Offset = "0xE00F88", VA = "0xE00F88")]
		public float IncreaseEffectTime(float deltaTime)
		{
			return default(float);
		}
	}
	[Serializable]
	[Token(Token = "0x2000164")]
	public class FloatCurve : EffectEvaluator
	{
		[Token(Token = "0x4000A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool enabled;

		[Token(Token = "0x4000A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		protected float amplitude;

		[Token(Token = "0x4000A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected AnimationCurve curve;

		[Token(Token = "0x4000A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[HideInInspector]
		protected float defaultReturn;

		[Token(Token = "0x4000A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCB1F2C", Offset = "0xCB1F2C")]
		protected float charsTimeOffset;

		[NonSerialized]
		[Token(Token = "0x4000A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float calculatedDuration;

		[Token(Token = "0x4000A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool isAppearance;

		[Token(Token = "0x170000F2")]
		public bool isEnabled
		{
			[Token(Token = "0x60009E0")]
			[Address(RVA = "0x19CE1F4", Offset = "0x19CE1F4", VA = "0x19CE1F4", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60009E1")]
		[Address(RVA = "0x19CE1FC", Offset = "0x19CE1FC", VA = "0x19CE1FC", Slot = "7")]
		public float GetDuration()
		{
			return default(float);
		}

		[Token(Token = "0x60009E2")]
		[Address(RVA = "0x19CE204", Offset = "0x19CE204", VA = "0x19CE204", Slot = "4")]
		public void Initialize(int type)
		{
		}

		[Token(Token = "0x60009E3")]
		[Address(RVA = "0x19CE2B0", Offset = "0x19CE2B0", VA = "0x19CE2B0", Slot = "6")]
		public float Evaluate(float time, int characterIndex)
		{
			return default(float);
		}

		[Token(Token = "0x60009E4")]
		[Address(RVA = "0x19CE3EC", Offset = "0x19CE3EC", VA = "0x19CE3EC")]
		public FloatCurve()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000165")]
	public class PresetBaseValues
	{
		[Token(Token = "0x4000A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string effectTag;

		[Token(Token = "0x4000A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public FloatCurve movementX;

		[Token(Token = "0x4000A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public FloatCurve movementY;

		[Token(Token = "0x4000A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public FloatCurve movementZ;

		[Token(Token = "0x4000A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public FloatCurve scaleX;

		[Token(Token = "0x4000A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public FloatCurve scaleY;

		[Token(Token = "0x4000A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		public FloatCurve rotX;

		[Token(Token = "0x4000A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		public FloatCurve rotY;

		[Token(Token = "0x4000A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		public FloatCurve rotZ;

		[Token(Token = "0x4000A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		public ColorCurve color;

		[Token(Token = "0x60009E5")]
		[Address(RVA = "0x19CF7BC", Offset = "0x19CF7BC", VA = "0x19CF7BC")]
		public float GetMaxDuration()
		{
			return default(float);
		}

		[Token(Token = "0x60009E6")]
		[Address(RVA = "0x19CFA18", Offset = "0x19CFA18", VA = "0x19CFA18", Slot = "4")]
		public virtual void Initialize(bool isAppearance)
		{
		}

		[Token(Token = "0x60009E7")]
		[Address(RVA = "0x19CF7B4", Offset = "0x19CF7B4", VA = "0x19CF7B4")]
		public PresetBaseValues()
		{
		}

		[Token(Token = "0x60009E8")]
		[Address(RVA = "0x19CF8F0", Offset = "0x19CF8F0", VA = "0x19CF8F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB50B4", Offset = "0xCB50B4")]
		internal static float <GetMaxDuration>g__GetEffectEvaluatorDuration|10_0(EffectEvaluator effect)
		{
			return default(float);
		}
	}
}
namespace Febucci.UI.Core.Examples
{
	[Token(Token = "0x2000166")]
	public class AppearanceTemplate : AppearanceBase
	{
		[Token(Token = "0x4000A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 vert;

		[Token(Token = "0x4000A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float pct;

		[Token(Token = "0x60009E9")]
		[Address(RVA = "0x19CDCF0", Offset = "0x19CDCF0", VA = "0x19CDCF0", Slot = "7")]
		public override void SetDefaultValues(AppearanceDefaultValues data)
		{
		}

		[Token(Token = "0x60009EA")]
		[Address(RVA = "0x19CDCF4", Offset = "0x19CDCF4", VA = "0x19CDCF4", Slot = "4")]
		public override void ApplyEffect(ref CharacterData data, int charIndex)
		{
		}

		[Token(Token = "0x60009EB")]
		[Address(RVA = "0x19CDCF8", Offset = "0x19CDCF8", VA = "0x19CDCF8")]
		public AppearanceTemplate()
		{
		}
	}
	[Token(Token = "0x2000167")]
	public class BehaviorTemplate : BehaviorBase
	{
		[Token(Token = "0x60009EC")]
		[Address(RVA = "0x19CDD14", Offset = "0x19CDD14", VA = "0x19CDD14", Slot = "7")]
		public override void SetDefaultValues(BehaviorDefaultValues data)
		{
		}

		[Token(Token = "0x60009ED")]
		[Address(RVA = "0x19CDD18", Offset = "0x19CDD18", VA = "0x19CDD18", Slot = "8")]
		public override void SetModifier(string modifierName, string modifierValue)
		{
		}

		[Token(Token = "0x60009EE")]
		[Address(RVA = "0x19CDD1C", Offset = "0x19CDD1C", VA = "0x19CDD1C", Slot = "4")]
		public override void ApplyEffect(ref CharacterData data, int charIndex)
		{
		}

		[Token(Token = "0x60009EF")]
		[Address(RVA = "0x19CDD20", Offset = "0x19CDD20", VA = "0x19CDD20")]
		public BehaviorTemplate()
		{
		}
	}
}
namespace ES3Types
{
	[Token(Token = "0x2000168")]
	[Preserve]
	public class ES3Type_ES3Prefab : ES3Type
	{
		[Token(Token = "0x4000A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60009F0")]
		[Address(RVA = "0x1AB59BC", Offset = "0x1AB59BC", VA = "0x1AB59BC")]
		public ES3Type_ES3Prefab()
		{
		}

		[Token(Token = "0x60009F1")]
		[Address(RVA = "0x1AB5A70", Offset = "0x1AB5A70", VA = "0x1AB5A70", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x60009F2")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000169")]
	public class ES3Type_ES3PrefabInternal : ES3Type
	{
		[Token(Token = "0x4000A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60009F4")]
		[Address(RVA = "0x1AB5A78", Offset = "0x1AB5A78", VA = "0x1AB5A78")]
		public ES3Type_ES3PrefabInternal()
		{
		}

		[Token(Token = "0x60009F5")]
		[Address(RVA = "0x1AB5B2C", Offset = "0x1AB5B2C", VA = "0x1AB5B2C", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x60009F6")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x200016A")]
	public class ES32DArrayType : ES3CollectionType
	{
		[Token(Token = "0x60009F8")]
		[Address(RVA = "0x1AAA058", Offset = "0x1AAA058", VA = "0x1AAA058")]
		public ES32DArrayType(Type type)
		{
		}

		[Token(Token = "0x60009F9")]
		[Address(RVA = "0x1AAA15C", Offset = "0x1AAA15C", VA = "0x1AAA15C", Slot = "9")]
		public override void Write(object obj, ES3Writer writer, ES3.ReferenceMode unityObjectType)
		{
		}

		[Token(Token = "0x60009FA")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x60009FB")]
		[Address(RVA = "0x1AAA370", Offset = "0x1AAA370", VA = "0x1AAA370", Slot = "7")]
		public override object Read(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x60009FC")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x60009FD")]
		[Address(RVA = "0x1AAA5A4", Offset = "0x1AAA5A4", VA = "0x1AAA5A4", Slot = "8")]
		public override void ReadInto(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x200016B")]
	public class ES33DArrayType : ES3CollectionType
	{
		[Token(Token = "0x60009FE")]
		[Address(RVA = "0x1AAA854", Offset = "0x1AAA854", VA = "0x1AAA854")]
		public ES33DArrayType(Type type)
		{
		}

		[Token(Token = "0x60009FF")]
		[Address(RVA = "0x1AAA858", Offset = "0x1AAA858", VA = "0x1AAA858", Slot = "9")]
		public override void Write(object obj, ES3Writer writer, ES3.ReferenceMode memberReferenceMode)
		{
		}

		[Token(Token = "0x6000A00")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000A01")]
		[Address(RVA = "0x1AAAB04", Offset = "0x1AAAB04", VA = "0x1AAAB04", Slot = "7")]
		public override object Read(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000A02")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000A03")]
		[Address(RVA = "0x1AAAE14", Offset = "0x1AAAE14", VA = "0x1AAAE14", Slot = "8")]
		public override void ReadInto(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x200016C")]
	[Preserve]
	public class ES3ArrayType : ES3CollectionType
	{
		[Token(Token = "0x6000A04")]
		[Address(RVA = "0x1AAB164", Offset = "0x1AAB164", VA = "0x1AAB164")]
		public ES3ArrayType(Type type)
		{
		}

		[Token(Token = "0x6000A05")]
		[Address(RVA = "0x1AAB168", Offset = "0x1AAB168", VA = "0x1AAB168")]
		public ES3ArrayType(Type type, ES3Type elementType)
		{
		}

		[Token(Token = "0x6000A06")]
		[Address(RVA = "0x1AAB1E0", Offset = "0x1AAB1E0", VA = "0x1AAB1E0", Slot = "9")]
		public override void Write(object obj, ES3Writer writer, ES3.ReferenceMode memberReferenceMode)
		{
		}

		[Token(Token = "0x6000A07")]
		[Address(RVA = "0x1AAB35C", Offset = "0x1AAB35C", VA = "0x1AAB35C", Slot = "7")]
		public override object Read(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000A08")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000A09")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000A0A")]
		[Address(RVA = "0x1AAB534", Offset = "0x1AAB534", VA = "0x1AAB534", Slot = "8")]
		public override void ReadInto(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x200016D")]
	[Preserve]
	public abstract class ES3CollectionType : ES3Type
	{
		[Token(Token = "0x4000A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ES3Type elementType;

		[Token(Token = "0x6000A0B")]
		public abstract object Read(ES3Reader reader);

		[Token(Token = "0x6000A0C")]
		public abstract void ReadInto(ES3Reader reader, object obj);

		[Token(Token = "0x6000A0D")]
		public abstract void Write(object obj, ES3Writer writer, ES3.ReferenceMode memberReferenceMode);

		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0x1AAA05C", Offset = "0x1AAA05C", VA = "0x1AAA05C")]
		public ES3CollectionType(Type type)
		{
		}

		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0x1AAB1A4", Offset = "0x1AAB1A4", VA = "0x1AAB1A4")]
		public ES3CollectionType(Type type, ES3Type elementType)
		{
		}

		[Token(Token = "0x6000A10")]
		[Address(RVA = "0x1AABB28", Offset = "0x1AABB28", VA = "0x1AABB28", Slot = "4")]
		[Preserve]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A11")]
		protected virtual bool ReadICollection<T>(ES3Reader reader, ICollection<T> collection, ES3Type elementType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A12")]
		protected virtual void ReadICollectionInto<T>(ES3Reader reader, ICollection<T> collection, ES3Type elementType)
		{
		}

		[Token(Token = "0x6000A13")]
		[Address(RVA = "0x1AABB38", Offset = "0x1AABB38", VA = "0x1AABB38", Slot = "12")]
		[Preserve]
		protected virtual void ReadICollectionInto(ES3Reader reader, ICollection collection, ES3Type elementType)
		{
		}
	}
	[Token(Token = "0x200016E")]
	[Preserve]
	public class ES3DictionaryType : ES3Type
	{
		[Token(Token = "0x4000A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ES3Type keyType;

		[Token(Token = "0x4000A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ES3Type valueType;

		[Token(Token = "0x4000A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected ES3Reflection.ES3ReflectedMethod readMethod;

		[Token(Token = "0x4000A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected ES3Reflection.ES3ReflectedMethod readIntoMethod;

		[Token(Token = "0x6000A14")]
		[Address(RVA = "0x1AAC420", Offset = "0x1AAC420", VA = "0x1AAC420")]
		public ES3DictionaryType(Type type)
		{
		}

		[Token(Token = "0x6000A15")]
		[Address(RVA = "0x1AAC558", Offset = "0x1AAC558", VA = "0x1AAC558")]
		public ES3DictionaryType(Type type, ES3Type keyType, ES3Type valueType)
		{
		}

		[Token(Token = "0x6000A16")]
		[Address(RVA = "0x1AAC5C0", Offset = "0x1AAC5C0", VA = "0x1AAC5C0", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A17")]
		[Address(RVA = "0x1AAC5E4", Offset = "0x1AAC5E4", VA = "0x1AAC5E4")]
		public void Write(object obj, ES3Writer writer, ES3.ReferenceMode memberReferenceMode)
		{
		}

		[Token(Token = "0x6000A18")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000A19")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0x1AAC9B0", Offset = "0x1AAC9B0", VA = "0x1AAC9B0")]
		public object Read(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0x1AACBE8", Offset = "0x1AACBE8", VA = "0x1AACBE8")]
		public void ReadInto(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x200016F")]
	[Preserve]
	public class ES3HashSetType : ES3CollectionType
	{
		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0x1AACF08", Offset = "0x1AACF08", VA = "0x1AACF08")]
		public ES3HashSetType(Type type)
		{
		}

		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0x1AACF0C", Offset = "0x1AACF0C", VA = "0x1AACF0C", Slot = "9")]
		public override void Write(object obj, ES3Writer writer, ES3.ReferenceMode memberReferenceMode)
		{
		}

		[Token(Token = "0x6000A1E")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0x1AAD4C8", Offset = "0x1AAD4C8", VA = "0x1AAD4C8", Slot = "7")]
		public override object Read(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000A20")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000A21")]
		[Address(RVA = "0x1AAD788", Offset = "0x1AAD788", VA = "0x1AAD788", Slot = "8")]
		public override void ReadInto(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000170")]
	[Preserve]
	public class ES3ListType : ES3CollectionType
	{
		[Token(Token = "0x6000A22")]
		[Address(RVA = "0x1AAD7F4", Offset = "0x1AAD7F4", VA = "0x1AAD7F4")]
		public ES3ListType(Type type)
		{
		}

		[Token(Token = "0x6000A23")]
		[Address(RVA = "0x1AAD7F8", Offset = "0x1AAD7F8", VA = "0x1AAD7F8")]
		public ES3ListType(Type type, ES3Type elementType)
		{
		}

		[Token(Token = "0x6000A24")]
		[Address(RVA = "0x1AAD834", Offset = "0x1AAD834", VA = "0x1AAD834", Slot = "9")]
		public override void Write(object obj, ES3Writer writer, ES3.ReferenceMode memberReferenceMode)
		{
		}

		[Token(Token = "0x6000A25")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000A26")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000A27")]
		[Address(RVA = "0x1AADBD8", Offset = "0x1AADBD8", VA = "0x1AADBD8", Slot = "7")]
		public override object Read(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000A28")]
		[Address(RVA = "0x1AADDB0", Offset = "0x1AADDB0", VA = "0x1AADDB0", Slot = "8")]
		public override void ReadInto(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000171")]
	[Preserve]
	public class ES3QueueType : ES3CollectionType
	{
		[Token(Token = "0x6000A29")]
		[Address(RVA = "0x1AAE5BC", Offset = "0x1AAE5BC", VA = "0x1AAE5BC")]
		public ES3QueueType(Type type)
		{
		}

		[Token(Token = "0x6000A2A")]
		[Address(RVA = "0x1AAE5C0", Offset = "0x1AAE5C0", VA = "0x1AAE5C0", Slot = "9")]
		public override void Write(object obj, ES3Writer writer, ES3.ReferenceMode memberReferenceMode)
		{
		}

		[Token(Token = "0x6000A2B")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000A2C")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000A2D")]
		[Address(RVA = "0x1AAE940", Offset = "0x1AAE940", VA = "0x1AAE940", Slot = "7")]
		public override object Read(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000A2E")]
		[Address(RVA = "0x1AAEC0C", Offset = "0x1AAEC0C", VA = "0x1AAEC0C", Slot = "8")]
		public override void ReadInto(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000172")]
	[Preserve]
	public class ES3StackType : ES3CollectionType
	{
		[Token(Token = "0x6000A2F")]
		[Address(RVA = "0x1AAFB10", Offset = "0x1AAFB10", VA = "0x1AAFB10")]
		public ES3StackType(Type type)
		{
		}

		[Token(Token = "0x6000A30")]
		[Address(RVA = "0x1AAFB14", Offset = "0x1AAFB14", VA = "0x1AAFB14", Slot = "9")]
		public override void Write(object obj, ES3Writer writer, ES3.ReferenceMode memberReferenceMode)
		{
		}

		[Token(Token = "0x6000A31")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000A32")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000A33")]
		[Address(RVA = "0x1AAFE94", Offset = "0x1AAFE94", VA = "0x1AAFE94", Slot = "7")]
		public override object Read(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000A34")]
		[Address(RVA = "0x1AB0160", Offset = "0x1AB0160", VA = "0x1AB0160", Slot = "8")]
		public override void ReadInto(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000173")]
	[Preserve]
	public abstract class ES3ComponentType : ES3UnityObjectType
	{
		[Token(Token = "0x4000A5B")]
		protected const string gameObjectPropertyName = "goID";

		[Token(Token = "0x6000A35")]
		[Address(RVA = "0x1AAC010", Offset = "0x1AAC010", VA = "0x1AAC010")]
		public ES3ComponentType(Type type)
		{
		}

		[Token(Token = "0x6000A36")]
		protected abstract void WriteComponent(object obj, ES3Writer writer);

		[Token(Token = "0x6000A37")]
		protected abstract void ReadComponent<T>(ES3Reader reader, object obj);

		[Token(Token = "0x6000A38")]
		[Address(RVA = "0x1AAC018", Offset = "0x1AAC018", VA = "0x1AAC018", Slot = "10")]
		protected override void WriteUnityObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A39")]
		protected override void ReadUnityObject<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000A3A")]
		protected override object ReadUnityObject<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000A3B")]
		protected override object ReadObject<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000A3C")]
		[Address(RVA = "0x1AAC278", Offset = "0x1AAC278", VA = "0x1AAC278")]
		private static Component GetOrAddComponent(GameObject go, Type type)
		{
			return null;
		}

		[Token(Token = "0x6000A3D")]
		[Address(RVA = "0x1AAC338", Offset = "0x1AAC338", VA = "0x1AAC338")]
		public static Component CreateComponent(Type type)
		{
			return null;
		}
	}
	[Token(Token = "0x2000174")]
	[Preserve]
	public abstract class ES3ObjectType : ES3Type
	{
		[Token(Token = "0x6000A3E")]
		[Address(RVA = "0x1AAE2D8", Offset = "0x1AAE2D8", VA = "0x1AAE2D8")]
		public ES3ObjectType(Type type)
		{
		}

		[Token(Token = "0x6000A3F")]
		protected abstract void WriteObject(object obj, ES3Writer writer);

		[Token(Token = "0x6000A40")]
		protected abstract object ReadObject<T>(ES3Reader reader);

		[Token(Token = "0x6000A41")]
		protected virtual void ReadObject<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000A42")]
		[Address(RVA = "0x1AAE2DC", Offset = "0x1AAE2DC", VA = "0x1AAE2DC", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A43")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000A44")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000175")]
	[Preserve]
	public abstract class ES3ScriptableObjectType : ES3UnityObjectType
	{
		[Token(Token = "0x6000A45")]
		[Address(RVA = "0x1AAF320", Offset = "0x1AAF320", VA = "0x1AAF320")]
		public ES3ScriptableObjectType(Type type)
		{
		}

		[Token(Token = "0x6000A46")]
		protected abstract void WriteScriptableObject(object obj, ES3Writer writer);

		[Token(Token = "0x6000A47")]
		protected abstract void ReadScriptableObject<T>(ES3Reader reader, object obj);

		[Token(Token = "0x6000A48")]
		[Address(RVA = "0x1AAF93C", Offset = "0x1AAF93C", VA = "0x1AAF93C", Slot = "10")]
		protected override void WriteUnityObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A49")]
		protected override void ReadUnityObject<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000A4A")]
		protected override object ReadUnityObject<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000A4B")]
		protected override object ReadObject<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000176")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xCA84C8", Offset = "0xCA84C8")]
	[Preserve]
	public abstract class ES3Type
	{
		[Token(Token = "0x4000A5C")]
		public const string typeFieldName = "__type";

		[Token(Token = "0x4000A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ES3Member[] members;

		[Token(Token = "0x4000A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Type type;

		[Token(Token = "0x4000A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isPrimitive;

		[Token(Token = "0x4000A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool isValueType;

		[Token(Token = "0x4000A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public bool isCollection;

		[Token(Token = "0x4000A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		public bool isDictionary;

		[Token(Token = "0x4000A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool isES3TypeUnityObject;

		[Token(Token = "0x4000A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool isReflectedType;

		[Token(Token = "0x4000A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		public bool isUnsupported;

		[Token(Token = "0x4000A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int priority;

		[Token(Token = "0x6000A4C")]
		[Address(RVA = "0x1AABA5C", Offset = "0x1AABA5C", VA = "0x1AABA5C")]
		protected ES3Type(Type type)
		{
		}

		[Token(Token = "0x6000A4D")]
		public abstract void Write(object obj, ES3Writer writer);

		[Token(Token = "0x6000A4E")]
		public abstract object Read<T>(ES3Reader reader);

		[Token(Token = "0x6000A4F")]
		public virtual void ReadInto<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000A50")]
		[Address(RVA = "0x1AAE47C", Offset = "0x1AAE47C", VA = "0x1AAE47C")]
		protected bool WriteUsingDerivedType(object obj, ES3Writer writer)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A51")]
		protected void ReadUsingDerivedType<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000A52")]
		[Address(RVA = "0x1AB0670", Offset = "0x1AB0670", VA = "0x1AB0670")]
		internal string ReadPropertyName(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000A53")]
		[Address(RVA = "0x1AAF164", Offset = "0x1AAF164", VA = "0x1AAF164")]
		protected void WriteProperties(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A54")]
		[Address(RVA = "0x1AB06CC", Offset = "0x1AB06CC", VA = "0x1AB06CC")]
		protected object ReadProperties(ES3Reader reader, object obj)
		{
			return null;
		}

		[Token(Token = "0x6000A55")]
		[Address(RVA = "0x1AAF154", Offset = "0x1AAF154", VA = "0x1AAF154")]
		protected void GetMembers(bool safe)
		{
		}

		[Token(Token = "0x6000A56")]
		[Address(RVA = "0x1AAF38C", Offset = "0x1AAF38C", VA = "0x1AAF38C")]
		protected void GetMembers(bool safe, string[] memberNames)
		{
		}
	}
	[Token(Token = "0x2000177")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xCA8504", Offset = "0xCA8504")]
	public class ES3PropertiesAttribute : Attribute
	{
		[Token(Token = "0x4000A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string[] members;

		[Token(Token = "0x6000A57")]
		[Address(RVA = "0x1AAE588", Offset = "0x1AAE588", VA = "0x1AAE588")]
		public ES3PropertiesAttribute(params string[] members)
		{
		}
	}
	[Token(Token = "0x2000178")]
	[Preserve]
	public abstract class ES3UnityObjectType : ES3ObjectType
	{
		[Token(Token = "0x6000A58")]
		[Address(RVA = "0x19BAEEC", Offset = "0x19BAEEC", VA = "0x19BAEEC")]
		public ES3UnityObjectType(Type type)
		{
		}

		[Token(Token = "0x6000A59")]
		protected abstract void WriteUnityObject(object obj, ES3Writer writer);

		[Token(Token = "0x6000A5A")]
		protected abstract void ReadUnityObject<T>(ES3Reader reader, object obj);

		[Token(Token = "0x6000A5B")]
		protected abstract object ReadUnityObject<T>(ES3Reader reader);

		[Token(Token = "0x6000A5C")]
		[Address(RVA = "0x19CA5D8", Offset = "0x19CA5D8", VA = "0x19CA5D8", Slot = "7")]
		protected override void WriteObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A5D")]
		[Address(RVA = "0x19CA5EC", Offset = "0x19CA5EC", VA = "0x19CA5EC", Slot = "13")]
		public virtual void WriteObject(object obj, ES3Writer writer, ES3.ReferenceMode mode)
		{
		}

		[Token(Token = "0x6000A5E")]
		protected override void ReadObject<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000A5F")]
		protected override object ReadObject<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000A60")]
		[Address(RVA = "0x19CA824", Offset = "0x19CA824", VA = "0x19CA824")]
		protected bool WriteUsingDerivedType(object obj, ES3Writer writer, ES3.ReferenceMode mode)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000179")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCA8528", Offset = "0xCA8528")]
	public class ES3Type_Random : ES3ObjectType
	{
		[Token(Token = "0x4000A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A61")]
		[Address(RVA = "0x19BEF24", Offset = "0x19BEF24", VA = "0x19BEF24")]
		public ES3Type_Random()
		{
		}

		[Token(Token = "0x6000A62")]
		[Address(RVA = "0x19BEFDC", Offset = "0x19BEFDC", VA = "0x19BEFDC", Slot = "7")]
		protected override void WriteObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A63")]
		protected override void ReadObject<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000A64")]
		protected override object ReadObject<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x200017A")]
	public class ES3Type_RandomArray : ES3ArrayType
	{
		[Token(Token = "0x4000A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A66")]
		[Address(RVA = "0x19BF314", Offset = "0x19BF314", VA = "0x19BF314")]
		public ES3Type_RandomArray()
		{
		}
	}
	[Token(Token = "0x200017B")]
	[Preserve]
	public class ES3Type_DateTime : ES3Type
	{
		[Token(Token = "0x4000A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A67")]
		[Address(RVA = "0x1AB56FC", Offset = "0x1AB56FC", VA = "0x1AB56FC")]
		public ES3Type_DateTime()
		{
		}

		[Token(Token = "0x6000A68")]
		[Address(RVA = "0x1AB57B0", Offset = "0x1AB57B0", VA = "0x1AB57B0", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A69")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x200017C")]
	public class ES3Type_DateTimeArray : ES3ArrayType
	{
		[Token(Token = "0x4000A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A6B")]
		[Address(RVA = "0x1AB58CC", Offset = "0x1AB58CC", VA = "0x1AB58CC")]
		public ES3Type_DateTimeArray()
		{
		}
	}
	[Token(Token = "0x200017D")]
	[Preserve]
	public class ES3Type_ES3Ref : ES3Type
	{
		[Token(Token = "0x4000A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A6C")]
		[Address(RVA = "0x1AB5C54", Offset = "0x1AB5C54", VA = "0x1AB5C54")]
		public ES3Type_ES3Ref()
		{
		}

		[Token(Token = "0x6000A6D")]
		[Address(RVA = "0x1AB5D10", Offset = "0x1AB5D10", VA = "0x1AB5D10", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A6E")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x200017E")]
	public class ES3Type_ES3RefArray : ES3ArrayType
	{
		[Token(Token = "0x4000A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A70")]
		[Address(RVA = "0x1AB5DC8", Offset = "0x1AB5DC8", VA = "0x1AB5DC8")]
		public ES3Type_ES3RefArray()
		{
		}
	}
	[Token(Token = "0x200017F")]
	public class ES3Type_ES3RefDictionary : ES3DictionaryType
	{
		[Token(Token = "0x4000A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A71")]
		[Address(RVA = "0x1AB5EB8", Offset = "0x1AB5EB8", VA = "0x1AB5EB8")]
		public ES3Type_ES3RefDictionary()
		{
		}
	}
	[Token(Token = "0x2000180")]
	[Preserve]
	public class ES3Type_UIntPtr : ES3Type
	{
		[Token(Token = "0x4000A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A72")]
		[Address(RVA = "0x19C65A8", Offset = "0x19C65A8", VA = "0x19C65A8")]
		public ES3Type_UIntPtr()
		{
		}

		[Token(Token = "0x6000A73")]
		[Address(RVA = "0x19C6668", Offset = "0x19C6668", VA = "0x19C6668", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A74")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000181")]
	public class ES3Type_UIntPtrArray : ES3ArrayType
	{
		[Token(Token = "0x4000A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A76")]
		[Address(RVA = "0x19C6704", Offset = "0x19C6704", VA = "0x19C6704")]
		public ES3Type_UIntPtrArray()
		{
		}
	}
	[Token(Token = "0x2000182")]
	[Preserve]
	public class ES3Type_bool : ES3Type
	{
		[Token(Token = "0x4000A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A77")]
		[Address(RVA = "0x19C7D60", Offset = "0x19C7D60", VA = "0x19C7D60")]
		public ES3Type_bool()
		{
		}

		[Token(Token = "0x6000A78")]
		[Address(RVA = "0x19C7E20", Offset = "0x19C7E20", VA = "0x19C7E20", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A79")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000183")]
	public class ES3Type_boolArray : ES3ArrayType
	{
		[Token(Token = "0x4000A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A7B")]
		[Address(RVA = "0x19C7EBC", Offset = "0x19C7EBC", VA = "0x19C7EBC")]
		public ES3Type_boolArray()
		{
		}
	}
	[Token(Token = "0x2000184")]
	[Preserve]
	public class ES3Type_byte : ES3Type
	{
		[Token(Token = "0x4000A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A7C")]
		[Address(RVA = "0x19C7F98", Offset = "0x19C7F98", VA = "0x19C7F98")]
		public ES3Type_byte()
		{
		}

		[Token(Token = "0x6000A7D")]
		[Address(RVA = "0x19C8058", Offset = "0x19C8058", VA = "0x19C8058", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A7E")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000185")]
	[Preserve]
	public class ES3Type_byteArray : ES3Type
	{
		[Token(Token = "0x4000A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A80")]
		[Address(RVA = "0x19C80F4", Offset = "0x19C80F4", VA = "0x19C80F4")]
		public ES3Type_byteArray()
		{
		}

		[Token(Token = "0x6000A81")]
		[Address(RVA = "0x19C81B4", Offset = "0x19C81B4", VA = "0x19C81B4", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A82")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000186")]
	[Preserve]
	public class ES3Type_char : ES3Type
	{
		[Token(Token = "0x4000A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A84")]
		[Address(RVA = "0x19C8250", Offset = "0x19C8250", VA = "0x19C8250")]
		public ES3Type_char()
		{
		}

		[Token(Token = "0x6000A85")]
		[Address(RVA = "0x19C8310", Offset = "0x19C8310", VA = "0x19C8310", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A86")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000187")]
	public class ES3Type_charArray : ES3ArrayType
	{
		[Token(Token = "0x4000A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A88")]
		[Address(RVA = "0x19C83AC", Offset = "0x19C83AC", VA = "0x19C83AC")]
		public ES3Type_charArray()
		{
		}
	}
	[Token(Token = "0x2000188")]
	[Preserve]
	public class ES3Type_decimal : ES3Type
	{
		[Token(Token = "0x4000A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A89")]
		[Address(RVA = "0x19C8488", Offset = "0x19C8488", VA = "0x19C8488")]
		public ES3Type_decimal()
		{
		}

		[Token(Token = "0x6000A8A")]
		[Address(RVA = "0x19C8548", Offset = "0x19C8548", VA = "0x19C8548", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A8B")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000189")]
	public class ES3Type_decimalArray : ES3ArrayType
	{
		[Token(Token = "0x4000A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A8D")]
		[Address(RVA = "0x19C85E4", Offset = "0x19C85E4", VA = "0x19C85E4")]
		public ES3Type_decimalArray()
		{
		}
	}
	[Token(Token = "0x200018A")]
	[Preserve]
	public class ES3Type_double : ES3Type
	{
		[Token(Token = "0x4000A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A8E")]
		[Address(RVA = "0x19C86C0", Offset = "0x19C86C0", VA = "0x19C86C0")]
		public ES3Type_double()
		{
		}

		[Token(Token = "0x6000A8F")]
		[Address(RVA = "0x19C8780", Offset = "0x19C8780", VA = "0x19C8780", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A90")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x200018B")]
	public class ES3Type_doubleArray : ES3ArrayType
	{
		[Token(Token = "0x4000A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A92")]
		[Address(RVA = "0x19C881C", Offset = "0x19C881C", VA = "0x19C881C")]
		public ES3Type_doubleArray()
		{
		}
	}
	[Token(Token = "0x200018C")]
	[Preserve]
	public class ES3Type_enum : ES3Type
	{
		[Token(Token = "0x4000A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x4000A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Type underlyingType;

		[Token(Token = "0x6000A93")]
		[Address(RVA = "0x19C88F8", Offset = "0x19C88F8", VA = "0x19C88F8")]
		public ES3Type_enum(Type type)
		{
		}

		[Token(Token = "0x6000A94")]
		[Address(RVA = "0x19C89C8", Offset = "0x19C89C8", VA = "0x19C89C8", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A95")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x200018D")]
	[Preserve]
	public class ES3Type_float : ES3Type
	{
		[Token(Token = "0x4000A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A97")]
		[Address(RVA = "0x19C92C8", Offset = "0x19C92C8", VA = "0x19C92C8")]
		public ES3Type_float()
		{
		}

		[Token(Token = "0x6000A98")]
		[Address(RVA = "0x19C9388", Offset = "0x19C9388", VA = "0x19C9388", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A99")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x200018E")]
	public class ES3Type_floatArray : ES3ArrayType
	{
		[Token(Token = "0x4000A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A9B")]
		[Address(RVA = "0x19C9424", Offset = "0x19C9424", VA = "0x19C9424")]
		public ES3Type_floatArray()
		{
		}
	}
	[Token(Token = "0x200018F")]
	[Preserve]
	public class ES3Type_int : ES3Type
	{
		[Token(Token = "0x4000A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A9C")]
		[Address(RVA = "0x19C9500", Offset = "0x19C9500", VA = "0x19C9500")]
		public ES3Type_int()
		{
		}

		[Token(Token = "0x6000A9D")]
		[Address(RVA = "0x19C95C0", Offset = "0x19C95C0", VA = "0x19C95C0", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A9E")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000190")]
	public class ES3Type_intArray : ES3ArrayType
	{
		[Token(Token = "0x4000A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0x19C965C", Offset = "0x19C965C", VA = "0x19C965C")]
		public ES3Type_intArray()
		{
		}
	}
	[Token(Token = "0x2000191")]
	[Preserve]
	public class ES3Type_IntPtr : ES3Type
	{
		[Token(Token = "0x4000A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AA1")]
		[Address(RVA = "0x1AB8F64", Offset = "0x1AB8F64", VA = "0x1AB8F64")]
		public ES3Type_IntPtr()
		{
		}

		[Token(Token = "0x6000AA2")]
		[Address(RVA = "0x1AB9020", Offset = "0x1AB9020", VA = "0x1AB9020", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AA3")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000192")]
	public class ES3Type_IntPtrArray : ES3ArrayType
	{
		[Token(Token = "0x4000A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AA5")]
		[Address(RVA = "0x1AB90C8", Offset = "0x1AB90C8", VA = "0x1AB90C8")]
		public ES3Type_IntPtrArray()
		{
		}
	}
	[Token(Token = "0x2000193")]
	[Preserve]
	public class ES3Type_long : ES3Type
	{
		[Token(Token = "0x4000A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AA6")]
		[Address(RVA = "0x19C9738", Offset = "0x19C9738", VA = "0x19C9738")]
		public ES3Type_long()
		{
		}

		[Token(Token = "0x6000AA7")]
		[Address(RVA = "0x19C97F8", Offset = "0x19C97F8", VA = "0x19C97F8", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AA8")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000194")]
	public class ES3Type_longArray : ES3ArrayType
	{
		[Token(Token = "0x4000A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0x19C9894", Offset = "0x19C9894", VA = "0x19C9894")]
		public ES3Type_longArray()
		{
		}
	}
	[Token(Token = "0x2000195")]
	[Preserve]
	public class ES3Type_sbyte : ES3Type
	{
		[Token(Token = "0x4000A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AAB")]
		[Address(RVA = "0x19C9970", Offset = "0x19C9970", VA = "0x19C9970")]
		public ES3Type_sbyte()
		{
		}

		[Token(Token = "0x6000AAC")]
		[Address(RVA = "0x19C9A30", Offset = "0x19C9A30", VA = "0x19C9A30", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AAD")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000196")]
	public class ES3Type_sbyteArray : ES3ArrayType
	{
		[Token(Token = "0x4000A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AAF")]
		[Address(RVA = "0x19C9ACC", Offset = "0x19C9ACC", VA = "0x19C9ACC")]
		public ES3Type_sbyteArray()
		{
		}
	}
	[Token(Token = "0x2000197")]
	[Preserve]
	public class ES3Type_short : ES3Type
	{
		[Token(Token = "0x4000A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AB0")]
		[Address(RVA = "0x19C9BA8", Offset = "0x19C9BA8", VA = "0x19C9BA8")]
		public ES3Type_short()
		{
		}

		[Token(Token = "0x6000AB1")]
		[Address(RVA = "0x19C9C68", Offset = "0x19C9C68", VA = "0x19C9C68", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AB2")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000198")]
	public class ES3Type_shortArray : ES3ArrayType
	{
		[Token(Token = "0x4000A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AB4")]
		[Address(RVA = "0x19C9D04", Offset = "0x19C9D04", VA = "0x19C9D04")]
		public ES3Type_shortArray()
		{
		}
	}
	[Token(Token = "0x2000199")]
	[Preserve]
	public class ES3Type_string : ES3Type
	{
		[Token(Token = "0x4000A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AB5")]
		[Address(RVA = "0x19C9DE0", Offset = "0x19C9DE0", VA = "0x19C9DE0")]
		public ES3Type_string()
		{
		}

		[Token(Token = "0x6000AB6")]
		[Address(RVA = "0x19C9EA0", Offset = "0x19C9EA0", VA = "0x19C9EA0", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AB7")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x200019A")]
	public class ES3Type_StringArray : ES3ArrayType
	{
		[Token(Token = "0x4000A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AB9")]
		[Address(RVA = "0x19C3E58", Offset = "0x19C3E58", VA = "0x19C3E58")]
		public ES3Type_StringArray()
		{
		}
	}
	[Token(Token = "0x200019B")]
	[Preserve]
	public class ES3Type_uint : ES3Type
	{
		[Token(Token = "0x4000A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000ABA")]
		[Address(RVA = "0x19C9F30", Offset = "0x19C9F30", VA = "0x19C9F30")]
		public ES3Type_uint()
		{
		}

		[Token(Token = "0x6000ABB")]
		[Address(RVA = "0x19C9FF0", Offset = "0x19C9FF0", VA = "0x19C9FF0", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000ABC")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x200019C")]
	public class ES3Type_uintArray : ES3ArrayType
	{
		[Token(Token = "0x4000A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000ABE")]
		[Address(RVA = "0x19CA08C", Offset = "0x19CA08C", VA = "0x19CA08C")]
		public ES3Type_uintArray()
		{
		}
	}
	[Token(Token = "0x200019D")]
	[Preserve]
	public class ES3Type_ulong : ES3Type
	{
		[Token(Token = "0x4000A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000ABF")]
		[Address(RVA = "0x19CA168", Offset = "0x19CA168", VA = "0x19CA168")]
		public ES3Type_ulong()
		{
		}

		[Token(Token = "0x6000AC0")]
		[Address(RVA = "0x19CA228", Offset = "0x19CA228", VA = "0x19CA228", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AC1")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x200019E")]
	public class ES3Type_ulongArray : ES3ArrayType
	{
		[Token(Token = "0x4000A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AC3")]
		[Address(RVA = "0x19CA2C4", Offset = "0x19CA2C4", VA = "0x19CA2C4")]
		public ES3Type_ulongArray()
		{
		}
	}
	[Token(Token = "0x200019F")]
	[Preserve]
	public class ES3Type_ushort : ES3Type
	{
		[Token(Token = "0x4000A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0x19CA3A0", Offset = "0x19CA3A0", VA = "0x19CA3A0")]
		public ES3Type_ushort()
		{
		}

		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0x19CA460", Offset = "0x19CA460", VA = "0x19CA460", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AC6")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x20001A0")]
	public class ES3Type_ushortArray : ES3ArrayType
	{
		[Token(Token = "0x4000A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AC8")]
		[Address(RVA = "0x19CA4FC", Offset = "0x19CA4FC", VA = "0x19CA4FC")]
		public ES3Type_ushortArray()
		{
		}
	}
	[Token(Token = "0x20001A1")]
	[Preserve]
	internal class ES3ReflectedComponentType : ES3ComponentType
	{
		[Token(Token = "0x6000AC9")]
		[Address(RVA = "0x1AAF11C", Offset = "0x1AAF11C", VA = "0x1AAF11C")]
		public ES3ReflectedComponentType(Type type)
		{
		}

		[Token(Token = "0x6000ACA")]
		[Address(RVA = "0x1AAF160", Offset = "0x1AAF160", VA = "0x1AAF160", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000ACB")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20001A2")]
	[Preserve]
	internal class ES3ReflectedObjectType : ES3ObjectType
	{
		[Token(Token = "0x6000ACC")]
		[Address(RVA = "0x1AAF2B0", Offset = "0x1AAF2B0", VA = "0x1AAF2B0")]
		public ES3ReflectedObjectType(Type type)
		{
		}

		[Token(Token = "0x6000ACD")]
		[Address(RVA = "0x1AAF2E4", Offset = "0x1AAF2E4", VA = "0x1AAF2E4", Slot = "7")]
		protected override void WriteObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000ACE")]
		protected override object ReadObject<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000ACF")]
		protected override void ReadObject<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20001A3")]
	[Preserve]
	internal class ES3ReflectedScriptableObjectType : ES3ScriptableObjectType
	{
		[Token(Token = "0x6000AD0")]
		[Address(RVA = "0x1AAF2E8", Offset = "0x1AAF2E8", VA = "0x1AAF2E8")]
		public ES3ReflectedScriptableObjectType(Type type)
		{
		}

		[Token(Token = "0x6000AD1")]
		[Address(RVA = "0x1AAF328", Offset = "0x1AAF328", VA = "0x1AAF328", Slot = "14")]
		protected override void WriteScriptableObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AD2")]
		protected override void ReadScriptableObject<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20001A4")]
	[Preserve]
	internal class ES3ReflectedType : ES3Type
	{
		[Token(Token = "0x6000AD3")]
		[Address(RVA = "0x1AAF32C", Offset = "0x1AAF32C", VA = "0x1AAF32C")]
		public ES3ReflectedType(Type type)
		{
		}

		[Token(Token = "0x6000AD4")]
		[Address(RVA = "0x1AAF354", Offset = "0x1AAF354", VA = "0x1AAF354")]
		public ES3ReflectedType(Type type, string[] members)
		{
		}

		[Token(Token = "0x6000AD5")]
		[Address(RVA = "0x1AAF52C", Offset = "0x1AAF52C", VA = "0x1AAF52C", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AD6")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000AD7")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20001A5")]
	[Preserve]
	internal class ES3ReflectedUnityObjectType : ES3UnityObjectType
	{
		[Token(Token = "0x6000AD8")]
		[Address(RVA = "0x1AAF8C8", Offset = "0x1AAF8C8", VA = "0x1AAF8C8")]
		public ES3ReflectedUnityObjectType(Type type)
		{
		}

		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0x1AAF900", Offset = "0x1AAF900", VA = "0x1AAF900", Slot = "10")]
		protected override void WriteUnityObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000ADA")]
		protected override object ReadUnityObject<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000ADB")]
		protected override void ReadUnityObject<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20001A6")]
	[Preserve]
	internal class ES3ReflectedValueType : ES3Type
	{
		[Token(Token = "0x6000ADC")]
		[Address(RVA = "0x1AAF904", Offset = "0x1AAF904", VA = "0x1AAF904")]
		public ES3ReflectedValueType(Type type)
		{
		}

		[Token(Token = "0x6000ADD")]
		[Address(RVA = "0x1AAF938", Offset = "0x1AAF938", VA = "0x1AAF938", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000ADE")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000ADF")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20001A7")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCA8794", Offset = "0xCA8794")]
	public class ES3Type_BoxCollider : ES3ComponentType
	{
		[Token(Token = "0x4000A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AE0")]
		[Address(RVA = "0x1AB2EE4", Offset = "0x1AB2EE4", VA = "0x1AB2EE4")]
		public ES3Type_BoxCollider()
		{
		}

		[Token(Token = "0x6000AE1")]
		[Address(RVA = "0x1AB2F9C", Offset = "0x1AB2F9C", VA = "0x1AB2F9C", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AE2")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20001A8")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCA88B4", Offset = "0xCA88B4")]
	public class ES3Type_BoxCollider2D : ES3ComponentType
	{
		[Token(Token = "0x4000A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AE4")]
		[Address(RVA = "0x1AB31DC", Offset = "0x1AB31DC", VA = "0x1AB31DC")]
		public ES3Type_BoxCollider2D()
		{
		}

		[Token(Token = "0x6000AE5")]
		[Address(RVA = "0x1AB3294", Offset = "0x1AB3294", VA = "0x1AB3294", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AE6")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20001A9")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCA89F0", Offset = "0xCA89F0")]
	public class ES3Type_Camera : ES3ComponentType
	{
		[Token(Token = "0x4000A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AE8")]
		[Address(RVA = "0x1AB355C", Offset = "0x1AB355C", VA = "0x1AB355C")]
		public ES3Type_Camera()
		{
		}

		[Token(Token = "0x6000AE9")]
		[Address(RVA = "0x1AB3614", Offset = "0x1AB3614", VA = "0x1AB3614", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AEA")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20001AA")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCA8E04", Offset = "0xCA8E04")]
	public class ES3Type_CapsuleCollider : ES3ComponentType
	{
		[Token(Token = "0x4000A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AEC")]
		[Address(RVA = "0x1AB3F80", Offset = "0x1AB3F80", VA = "0x1AB3F80")]
		public ES3Type_CapsuleCollider()
		{
		}

		[Token(Token = "0x6000AED")]
		[Address(RVA = "0x1AB4038", Offset = "0x1AB4038", VA = "0x1AB4038", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AEE")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20001AB")]
	[Preserve]
	public class ES3Type_EventSystem : ES3ComponentType
	{
		[Token(Token = "0x4000A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0x1AB631C", Offset = "0x1AB631C", VA = "0x1AB631C")]
		public ES3Type_EventSystem()
		{
		}

		[Token(Token = "0x6000AF1")]
		[Address(RVA = "0x1AB63D4", Offset = "0x1AB63D4", VA = "0x1AB63D4", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AF2")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20001AC")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCA8F6C", Offset = "0xCA8F6C")]
	public class ES3Type_Image : ES3ComponentType
	{
		[Token(Token = "0x4000A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0x1AB835C", Offset = "0x1AB835C", VA = "0x1AB835C")]
		public ES3Type_Image()
		{
		}

		[Token(Token = "0x6000AF5")]
		[Address(RVA = "0x1AB8420", Offset = "0x1AB8420", VA = "0x1AB8420", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AF6")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20001AD")]
	public class ES3Type_ImageArray : ES3ArrayType
	{
		[Token(Token = "0x4000A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AF8")]
		[Address(RVA = "0x1AB8B50", Offset = "0x1AB8B50", VA = "0x1AB8B50")]
		public ES3Type_ImageArray()
		{
		}
	}
	[Token(Token = "0x20001AE")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCA9230", Offset = "0xCA9230")]
	public class ES3Type_MeshCollider : ES3ComponentType
	{
		[Token(Token = "0x4000A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AF9")]
		[Address(RVA = "0x19BB464", Offset = "0x19BB464", VA = "0x19BB464")]
		public ES3Type_MeshCollider()
		{
		}

		[Token(Token = "0x6000AFA")]
		[Address(RVA = "0x19BB51C", Offset = "0x19BB51C", VA = "0x19BB51C", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AFB")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20001AF")]
	public class ES3Type_MeshColliderArray : ES3ArrayType
	{
		[Token(Token = "0x4000A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AFD")]
		[Address(RVA = "0x19BB7CC", Offset = "0x19BB7CC", VA = "0x19BB7CC")]
		public ES3Type_MeshColliderArray()
		{
		}
	}
	[Token(Token = "0x20001B0")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCA9388", Offset = "0xCA9388")]
	public class ES3Type_MeshFilter : ES3ComponentType
	{
		[Token(Token = "0x4000A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AFE")]
		[Address(RVA = "0x19BB8A8", Offset = "0x19BB8A8", VA = "0x19BB8A8")]
		public ES3Type_MeshFilter()
		{
		}

		[Token(Token = "0x6000AFF")]
		[Address(RVA = "0x19BB960", Offset = "0x19BB960", VA = "0x19BB960", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B00")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20001B1")]
	public class ES3Type_MeshFilterArray : ES3ArrayType
	{
		[Token(Token = "0x4000A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B02")]
		[Address(RVA = "0x19BBA04", Offset = "0x19BBA04", VA = "0x19BBA04")]
		public ES3Type_MeshFilterArray()
		{
		}
	}
	[Token(Token = "0x20001B2")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCA941C", Offset = "0xCA941C")]
	public class ES3Type_MeshRenderer : ES3ComponentType
	{
		[Token(Token = "0x4000A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B03")]
		[Address(RVA = "0x19BBAE0", Offset = "0x19BBAE0", VA = "0x19BBAE0")]
		public ES3Type_MeshRenderer()
		{
		}

		[Token(Token = "0x6000B04")]
		[Address(RVA = "0x19BBB98", Offset = "0x19BBB98", VA = "0x19BBB98", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B05")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20001B3")]
	public class ES3Type_MeshRendererArray : ES3ArrayType
	{
		[Token(Token = "0x4000A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B07")]
		[Address(RVA = "0x19BC234", Offset = "0x19BC234", VA = "0x19BC234")]
		public ES3Type_MeshRendererArray()
		{
		}
	}
	[Token(Token = "0x20001B4")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCA9670", Offset = "0xCA9670")]
	public class ES3Type_ParticleSystem : ES3ComponentType
	{
		[Token(Token = "0x4000A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B08")]
		[Address(RVA = "0x19BD584", Offset = "0x19BD584", VA = "0x19BD584")]
		public ES3Type_ParticleSystem()
		{
		}

		[Token(Token = "0x6000B09")]
		[Address(RVA = "0x19BD63C", Offset = "0x19BD63C", VA = "0x19BD63C", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B0A")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20001B5")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCA99DC", Offset = "0xCA99DC")]
	public class ES3Type_PolygonCollider2D : ES3ComponentType
	{
		[Token(Token = "0x4000A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B0C")]
		[Address(RVA = "0x19BE57C", Offset = "0x19BE57C", VA = "0x19BE57C")]
		public ES3Type_PolygonCollider2D()
		{
		}

		[Token(Token = "0x6000B0D")]
		[Address(RVA = "0x19BE634", Offset = "0x19BE634", VA = "0x19BE634", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B0E")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20001B6")]
	public class ES3Type_PolygonCollider2DArray : ES3ArrayType
	{
		[Token(Token = "0x4000AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B10")]
		[Address(RVA = "0x19BEADC", Offset = "0x19BEADC", VA = "0x19BEADC")]
		public ES3Type_PolygonCollider2DArray()
		{
		}
	}
	[Token(Token = "0x20001B7")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCA9B50", Offset = "0xCA9B50")]
	public class ES3Type_RawImage : ES3ComponentType
	{
		[Token(Token = "0x4000AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B11")]
		[Address(RVA = "0x19BF3F0", Offset = "0x19BF3F0", VA = "0x19BF3F0")]
		public ES3Type_RawImage()
		{
		}

		[Token(Token = "0x6000B12")]
		[Address(RVA = "0x19BF4B4", Offset = "0x19BF4B4", VA = "0x19BF4B4", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B13")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20001B8")]
	public class ES3Type_RawImageArray : ES3ArrayType
	{
		[Token(Token = "0x4000AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B15")]
		[Address(RVA = "0x19BFB88", Offset = "0x19BFB88", VA = "0x19BFB88")]
		public ES3Type_RawImageArray()
		{
		}
	}
	[Token(Token = "0x20001B9")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCA9CFC", Offset = "0xCA9CFC")]
	public class ES3Type_SphereCollider : ES3ComponentType
	{
		[Token(Token = "0x4000AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B16")]
		[Address(RVA = "0x19C2DC8", Offset = "0x19C2DC8", VA = "0x19C2DC8")]
		public ES3Type_SphereCollider()
		{
		}

		[Token(Token = "0x6000B17")]
		[Address(RVA = "0x19C2E80", Offset = "0x19C2E80", VA = "0x19C2E80", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B18")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20001BA")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCA9E1C", Offset = "0xCA9E1C")]
	public class ES3Type_Text : ES3ComponentType
	{
		[Token(Token = "0x4000AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B1A")]
		[Address(RVA = "0x19C4268", Offset = "0x19C4268", VA = "0x19C4268")]
		public ES3Type_Text()
		{
		}

		[Token(Token = "0x6000B1B")]
		[Address(RVA = "0x19C4320", Offset = "0x19C4320", VA = "0x19C4320", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B1C")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20001BB")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCAA118", Offset = "0xCAA118")]
	public class ES3Type_Transform : ES3ComponentType
	{
		[Token(Token = "0x4000AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int countRead;

		[Token(Token = "0x4000AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B1E")]
		[Address(RVA = "0x19C5FD4", Offset = "0x19C5FD4", VA = "0x19C5FD4")]
		public ES3Type_Transform()
		{
		}

		[Token(Token = "0x6000B1F")]
		[Address(RVA = "0x19C608C", Offset = "0x19C608C", VA = "0x19C608C", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B20")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20001BC")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCAA200", Offset = "0xCAA200")]
	public class ES3Type_AnimationCurve : ES3Type
	{
		[Token(Token = "0x4000AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B22")]
		[Address(RVA = "0x1AB20F4", Offset = "0x1AB20F4", VA = "0x1AB20F4")]
		public ES3Type_AnimationCurve()
		{
		}

		[Token(Token = "0x6000B23")]
		[Address(RVA = "0x1AB21A8", Offset = "0x1AB21A8", VA = "0x1AB21A8", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B24")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000B25")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20001BD")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCAA2CC", Offset = "0xCAA2CC")]
	public class ES3Type_AudioClip : ES3UnityObjectType
	{
		[Token(Token = "0x4000AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B27")]
		[Address(RVA = "0x1AB2314", Offset = "0x1AB2314", VA = "0x1AB2314")]
		public ES3Type_AudioClip()
		{
		}

		[Token(Token = "0x6000B28")]
		[Address(RVA = "0x1AB23CC", Offset = "0x1AB23CC", VA = "0x1AB23CC", Slot = "10")]
		protected override void WriteUnityObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B29")]
		protected override void ReadUnityObject<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000B2A")]
		protected override object ReadUnityObject<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x20001BE")]
	public class ES3Type_AudioClipArray : ES3ArrayType
	{
		[Token(Token = "0x4000AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B2C")]
		[Address(RVA = "0x1AB25C4", Offset = "0x1AB25C4", VA = "0x1AB25C4")]
		public ES3Type_AudioClipArray()
		{
		}
	}
	[Token(Token = "0x20001BF")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCAA3D0", Offset = "0xCAA3D0")]
	public class ES3Type_BoneWeight : ES3Type
	{
		[Token(Token = "0x4000AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B2D")]
		[Address(RVA = "0x1AB26B4", Offset = "0x1AB26B4", VA = "0x1AB26B4")]
		public ES3Type_BoneWeight()
		{
		}

		[Token(Token = "0x6000B2E")]
		[Address(RVA = "0x1AB2768", Offset = "0x1AB2768", VA = "0x1AB2768", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B2F")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x20001C0")]
	public class ES3Type_BoneWeightArray : ES3ArrayType
	{
		[Token(Token = "0x4000AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B31")]
		[Address(RVA = "0x1AB2AD8", Offset = "0x1AB2AD8", VA = "0x1AB2AD8")]
		public ES3Type_BoneWeightArray()
		{
		}
	}
	[Token(Token = "0x20001C1")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCAA528", Offset = "0xCAA528")]
	public class ES3Type_Bounds : ES3Type
	{
		[Token(Token = "0x4000AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B32")]
		[Address(RVA = "0x1AB2BC8", Offset = "0x1AB2BC8", VA = "0x1AB2BC8")]
		public ES3Type_Bounds()
		{
		}

		[Token(Token = "0x6000B33")]
		[Address(RVA = "0x1AB2C7C", Offset = "0x1AB2C7C", VA = "0x1AB2C7C", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B34")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x20001C2")]
	public class ES3Type_BoundsArray : ES3ArrayType
	{
		[Token(Token = "0x4000AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B36")]
		[Address(RVA = "0x1AB2DF4", Offset = "0x1AB2DF4", VA = "0x1AB2DF4")]
		public ES3Type_BoundsArray()
		{
		}
	}
	[Token(Token = "0x20001C3")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCAA5D8", Offset = "0xCAA5D8")]
	public class ES3Type_CollisionModule : ES3Type
	{
		[Token(Token = "0x4000AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B37")]
		[Address(RVA = "0x1AB4404", Offset = "0x1AB4404", VA = "0x1AB4404")]
		public ES3Type_CollisionModule()
		{
		}

		[Token(Token = "0x6000B38")]
		[Address(RVA = "0x1AB44B8", Offset = "0x1AB44B8", VA = "0x1AB44B8", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B39")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000B3A")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20001C4")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCAA848", Offset = "0xCAA848")]
	public class ES3Type_Color : ES3Type
	{
		[Token(Token = "0x4000AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B3C")]
		[Address(RVA = "0x1AB4A74", Offset = "0x1AB4A74", VA = "0x1AB4A74")]
		public ES3Type_Color()
		{
		}

		[Token(Token = "0x6000B3D")]
		[Address(RVA = "0x1AB4B28", Offset = "0x1AB4B28", VA = "0x1AB4B28", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B3E")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x20001C5")]
	public class ES3Type_ColorArray : ES3ArrayType
	{
		[Token(Token = "0x4000AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B40")]
		[Address(RVA = "0x1AB50C0", Offset = "0x1AB50C0", VA = "0x1AB50C0")]
		public ES3Type_ColorArray()
		{
		}
	}
	[Token(Token = "0x20001C6")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCAA930", Offset = "0xCAA930")]
	public class ES3Type_Color32 : ES3Type
	{
		[Token(Token = "0x4000AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B41")]
		[Address(RVA = "0x1AB4D00", Offset = "0x1AB4D00", VA = "0x1AB4D00")]
		public ES3Type_Color32()
		{
		}

		[Token(Token = "0x6000B42")]
		[Address(RVA = "0x1AB4DB4", Offset = "0x1AB4DB4", VA = "0x1AB4DB4", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B43")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000B44")]
		[Address(RVA = "0x1AB4F88", Offset = "0x1AB4F88", VA = "0x1AB4F88")]
		public static bool Equals(Color32 a, Color32 b)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001C7")]
	public class ES3Type_Color32Array : ES3ArrayType
	{
		[Token(Token = "0x4000AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B46")]
		[Address(RVA = "0x1AB4FD0", Offset = "0x1AB4FD0", VA = "0x1AB4FD0")]
		public ES3Type_Color32Array()
		{
		}
	}
	[Token(Token = "0x20001C8")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCAAA18", Offset = "0xCAAA18")]
	public class ES3Type_ColorBySpeedModule : ES3Type
	{
		[Token(Token = "0x4000AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B47")]
		[Address(RVA = "0x1AB51B0", Offset = "0x1AB51B0", VA = "0x1AB51B0")]
		public ES3Type_ColorBySpeedModule()
		{
		}

		[Token(Token = "0x6000B48")]
		[Address(RVA = "0x1AB5264", Offset = "0x1AB5264", VA = "0x1AB5264", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B49")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000B4A")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20001C9")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCAAAE4", Offset = "0xCAAAE4")]
	public class ES3Type_ColorOverLifetimeModule : ES3Type
	{
		[Token(Token = "0x4000AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B4C")]
		[Address(RVA = "0x1AB5494", Offset = "0x1AB5494", VA = "0x1AB5494")]
		public ES3Type_ColorOverLifetimeModule()
		{
		}

		[Token(Token = "0x6000B4D")]
		[Address(RVA = "0x1AB5548", Offset = "0x1AB5548", VA = "0x1AB5548", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B4E")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000B4F")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20001CA")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCAAB94", Offset = "0xCAAB94")]
	public class ES3Type_EmissionModule : ES3Type
	{
		[Token(Token = "0x4000AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B51")]
		[Address(RVA = "0x1AB5F94", Offset = "0x1AB5F94", VA = "0x1AB5F94")]
		public ES3Type_EmissionModule()
		{
		}

		[Token(Token = "0x6000B52")]
		[Address(RVA = "0x1AB6048", Offset = "0x1AB6048", VA = "0x1AB6048", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B53")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000B54")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20001CB")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCAAC98", Offset = "0xCAAC98")]
	public class ES3Type_ExternalForcesModule : ES3Type
	{
		[Token(Token = "0x4000AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B56")]
		[Address(RVA = "0x1AB63DC", Offset = "0x1AB63DC", VA = "0x1AB63DC")]
		public ES3Type_ExternalForcesModule()
		{
		}

		[Token(Token = "0x6000B57")]
		[Address(RVA = "0x1AB6490", Offset = "0x1AB6490", VA = "0x1AB6490", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B58")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000B59")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20001CC")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCAAD48", Offset = "0xCAAD48")]
	public class ES3Type_Flare : ES3Type
	{
		[Token(Token = "0x4000AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0x1AB662C", Offset = "0x1AB662C", VA = "0x1AB662C")]
		public ES3Type_Flare()
		{
		}

		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0x1AB66E0", Offset = "0x1AB66E0", VA = "0x1AB66E0", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B5D")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000B5E")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20001CD")]
	public class ES3Type_FlareArray : ES3ArrayType
	{
		[Token(Token = "0x4000AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B60")]
		[Address(RVA = "0x1AB67A4", Offset = "0x1AB67A4", VA = "0x1AB67A4")]
		public ES3Type_FlareArray()
		{
		}
	}
	[Token(Token = "0x20001CE")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCAADDC", Offset = "0xCAADDC")]
	public class ES3Type_Font : ES3UnityObjectType
	{
		[Token(Token = "0x4000AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B61")]
		[Address(RVA = "0x1AB6894", Offset = "0x1AB6894", VA = "0x1AB6894")]
		public ES3Type_Font()
		{
		}

		[Token(Token = "0x6000B62")]
		[Address(RVA = "0x1AB694C", Offset = "0x1AB694C", VA = "0x1AB694C", Slot = "10")]
		protected override void WriteUnityObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B63")]
		protected override void ReadUnityObject<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000B64")]
		protected override object ReadUnityObject<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x20001CF")]
	public class ES3Type_FontArray : ES3ArrayType
	{
		[Token(Token = "0x4000ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B66")]
		[Address(RVA = "0x1AB6A58", Offset = "0x1AB6A58", VA = "0x1AB6A58")]
		public ES3Type_FontArray()
		{
		}
	}
	[Token(Token = "0x20001D0")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCAAE8C", Offset = "0xCAAE8C")]
	public class ES3Type_ForceOverLifetimeModule : ES3Type
	{
		[Token(Token = "0x4000ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B67")]
		[Address(RVA = "0x1AB6B48", Offset = "0x1AB6B48", VA = "0x1AB6B48")]
		public ES3Type_ForceOverLifetimeModule()
		{
		}

		[Token(Token = "0x6000B68")]
		[Address(RVA = "0x1AB6BFC", Offset = "0x1AB6BFC", VA = "0x1AB6BFC", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B69")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000B6A")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20001D1")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCAB000", Offset = "0xCAB000")]
	public class ES3Type_GameObject : ES3UnityObjectType
	{
		[Token(Token = "0x4000ABC")]
		private const string prefabPropertyName = "es3Prefab";

		[Token(Token = "0x4000ABD")]
		private const string transformPropertyName = "transformID";

		[Token(Token = "0x4000ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x4000ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool saveChildren;

		[Token(Token = "0x6000B6C")]
		[Address(RVA = "0x1AB7014", Offset = "0x1AB7014", VA = "0x1AB7014")]
		public ES3Type_GameObject()
		{
		}

		[Token(Token = "0x6000B6D")]
		[Address(RVA = "0x1AB70CC", Offset = "0x1AB70CC", VA = "0x1AB70CC", Slot = "13")]
		public override void WriteObject(object obj, ES3Writer writer, ES3.ReferenceMode mode)
		{
		}

		[Token(Token = "0x6000B6E")]
		protected override object ReadObject<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000B6F")]
		protected override void ReadObject<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000B70")]
		[Address(RVA = "0x1AB79A8", Offset = "0x1AB79A8", VA = "0x1AB79A8")]
		private GameObject CreateNewGameObject(ES3ReferenceMgrBase refMgr, long id)
		{
			return null;
		}

		[Token(Token = "0x6000B71")]
		[Address(RVA = "0x1AB76E8", Offset = "0x1AB76E8", VA = "0x1AB76E8")]
		public static List<GameObject> GetChildren(GameObject go)
		{
			return null;
		}

		[Token(Token = "0x6000B72")]
		[Address(RVA = "0x1AB7A40", Offset = "0x1AB7A40", VA = "0x1AB7A40", Slot = "10")]
		protected override void WriteUnityObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B73")]
		protected override void ReadUnityObject<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000B74")]
		protected override object ReadUnityObject<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x20001D2")]
	public class ES3Type_GameObjectArray : ES3ArrayType
	{
		[Token(Token = "0x4000AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B76")]
		[Address(RVA = "0x1AB7A48", Offset = "0x1AB7A48", VA = "0x1AB7A48")]
		public ES3Type_GameObjectArray()
		{
		}
	}
	[Token(Token = "0x20001D3")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCAB13C", Offset = "0xCAB13C")]
	public class ES3Type_Gradient : ES3Type
	{
		[Token(Token = "0x4000AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B77")]
		[Address(RVA = "0x1AB7B38", Offset = "0x1AB7B38", VA = "0x1AB7B38")]
		public ES3Type_Gradient()
		{
		}

		[Token(Token = "0x6000B78")]
		[Address(RVA = "0x1AB7BEC", Offset = "0x1AB7BEC", VA = "0x1AB7BEC", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B79")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000B7A")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20001D4")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCAB208", Offset = "0xCAB208")]
	public class ES3Type_GradientAlphaKey : ES3Type
	{
		[Token(Token = "0x4000AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0x1AB7D58", Offset = "0x1AB7D58", VA = "0x1AB7D58")]
		public ES3Type_GradientAlphaKey()
		{
		}

		[Token(Token = "0x6000B7D")]
		[Address(RVA = "0x1AB7E0C", Offset = "0x1AB7E0C", VA = "0x1AB7E0C", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B7E")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x20001D5")]
	public class ES3Type_GradientAlphaKeyArray : ES3ArrayType
	{
		[Token(Token = "0x4000AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B80")]
		[Address(RVA = "0x1AB7F50", Offset = "0x1AB7F50", VA = "0x1AB7F50")]
		public ES3Type_GradientAlphaKeyArray()
		{
		}
	}
	[Token(Token = "0x20001D6")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCAB2B8", Offset = "0xCAB2B8")]
	public class ES3Type_GradientColorKey : ES3Type
	{
		[Token(Token = "0x4000AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B81")]
		[Address(RVA = "0x1AB8040", Offset = "0x1AB8040", VA = "0x1AB8040")]
		public ES3Type_GradientColorKey()
		{
		}

		[Token(Token = "0x6000B82")]
		[Address(RVA = "0x1AB80F4", Offset = "0x1AB80F4", VA = "0x1AB80F4", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B83")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x20001D7")]
	public class ES3Type_GradientColorKeyArray : ES3ArrayType
	{
		[Token(Token = "0x4000AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B85")]
		[Address(RVA = "0x1AB826C", Offset = "0x1AB826C", VA = "0x1AB826C")]
		public ES3Type_GradientColorKeyArray()
		{
		}
	}
	[Token(Token = "0x20001D8")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCAB368", Offset = "0xCAB368")]
	public class ES3Type_InheritVelocityModule : ES3Type
	{
		[Token(Token = "0x4000AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B86")]
		[Address(RVA = "0x1AB8C40", Offset = "0x1AB8C40", VA = "0x1AB8C40")]
		public ES3Type_InheritVelocityModule()
		{
		}

		[Token(Token = "0x6000B87")]
		[Address(RVA = "0x1AB8CF4", Offset = "0x1AB8CF4", VA = "0x1AB8CF4", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B88")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000B89")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20001D9")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCAB450", Offset = "0xCAB450")]
	public class ES3Type_Keyframe : ES3Type
	{
		[Token(Token = "0x4000AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B8B")]
		[Address(RVA = "0x1AB91B8", Offset = "0x1AB91B8", VA = "0x1AB91B8")]
		public ES3Type_Keyframe()
		{
		}

		[Token(Token = "0x6000B8C")]
		[Address(RVA = "0x1AB926C", Offset = "0x1AB926C", VA = "0x1AB926C", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B8D")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x20001DA")]
	public class ES3Type_KeyframeArray : ES3ArrayType
	{
		[Token(Token = "0x4000AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B8F")]
		[Address(RVA = "0x1AB9478", Offset = "0x1AB9478", VA = "0x1AB9478")]
		public ES3Type_KeyframeArray()
		{
		}
	}
	[Token(Token = "0x20001DB")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCAB538", Offset = "0xCAB538")]
	public class ES3Type_LayerMask : ES3Type
	{
		[Token(Token = "0x4000AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B90")]
		[Address(RVA = "0x1AB9568", Offset = "0x1AB9568", VA = "0x1AB9568")]
		public ES3Type_LayerMask()
		{
		}

		[Token(Token = "0x6000B91")]
		[Address(RVA = "0x1AB961C", Offset = "0x1AB961C", VA = "0x1AB961C", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B92")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x20001DC")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCAB604", Offset = "0xCAB604")]
	public class ES3Type_Light : ES3ComponentType
	{
		[Token(Token = "0x4000ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B94")]
		[Address(RVA = "0x1AB9730", Offset = "0x1AB9730", VA = "0x1AB9730")]
		public ES3Type_Light()
		{
		}

		[Token(Token = "0x6000B95")]
		[Address(RVA = "0x1AB97E8", Offset = "0x1AB97E8", VA = "0x1AB97E8", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B96")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20001DD")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCAB8E4", Offset = "0xCAB8E4")]
	public class ES3Type_LightsModule : ES3Type
	{
		[Token(Token = "0x4000ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B98")]
		[Address(RVA = "0x1AB9F4C", Offset = "0x1AB9F4C", VA = "0x1AB9F4C")]
		public ES3Type_LightsModule()
		{
		}

		[Token(Token = "0x6000B99")]
		[Address(RVA = "0x1ABA000", Offset = "0x1ABA000", VA = "0x1ABA000", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B9A")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000B9B")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20001DE")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCABAAC", Offset = "0xCABAAC")]
	public class ES3Type_LimitVelocityOverLifetimeModule : ES3Type
	{
		[Token(Token = "0x4000ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B9D")]
		[Address(RVA = "0x1ABA524", Offset = "0x1ABA524", VA = "0x1ABA524")]
		public ES3Type_LimitVelocityOverLifetimeModule()
		{
		}

		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0x1ABA5D8", Offset = "0x1ABA5D8", VA = "0x1ABA5D8", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B9F")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000BA0")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20001DF")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCABC74", Offset = "0xCABC74")]
	public class ES3Type_MainModule : ES3Type
	{
		[Token(Token = "0x4000ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0x1ABAAE4", Offset = "0x1ABAAE4", VA = "0x1ABAAE4")]
		public ES3Type_MainModule()
		{
		}

		[Token(Token = "0x6000BA3")]
		[Address(RVA = "0x1ABAB98", Offset = "0x1ABAB98", VA = "0x1ABAB98", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000BA4")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000BA5")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20001E0")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCAC0F8", Offset = "0xCAC0F8")]
	public class ES3Type_Material : ES3UnityObjectType
	{
		[Token(Token = "0x4000ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000BA7")]
		[Address(RVA = "0x1ABB938", Offset = "0x1ABB938", VA = "0x1ABB938")]
		public ES3Type_Material()
		{
		}

		[Token(Token = "0x6000BA8")]
		[Address(RVA = "0x1ABB9F0", Offset = "0x1ABB9F0", VA = "0x1ABB9F0", Slot = "10")]
		protected override void WriteUnityObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000BA9")]
		protected override object ReadUnityObject<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000BAA")]
		protected override void ReadUnityObject<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20001E1")]
	public class ES3Type_MaterialArray : ES3ArrayType
	{
		[Token(Token = "0x4000ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000BAC")]
		[Address(RVA = "0x19BA988", Offset = "0x19BA988", VA = "0x19BA988")]
		public ES3Type_MaterialArray()
		{
		}
	}
	[Token(Token = "0x20001E2")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCAC1FC", Offset = "0xCAC1FC")]
	public class ES3Type_Matrix4x4 : ES3Type
	{
		[Token(Token = "0x4000AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000BAD")]
		[Address(RVA = "0x19BAA64", Offset = "0x19BAA64", VA = "0x19BAA64")]
		public ES3Type_Matrix4x4()
		{
		}

		[Token(Token = "0x6000BAE")]
		[Address(RVA = "0x19BAB1C", Offset = "0x19BAB1C", VA = "0x19BAB1C", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000BAF")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x20001E3")]
	public class ES3Type_Matrix4x4Array : ES3ArrayType
	{
		[Token(Token = "0x4000AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000BB1")]
		[Address(RVA = "0x19BAD4C", Offset = "0x19BAD4C", VA = "0x19BAD4C")]
		public ES3Type_Matrix4x4Array()
		{
		}
	}
	[Token(Token = "0x20001E4")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCAC2E4", Offset = "0xCAC2E4")]
	public class ES3Type_Mesh : ES3UnityObjectType
	{
		[Token(Token = "0x4000AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000BB2")]
		[Address(RVA = "0x19BAE28", Offset = "0x19BAE28", VA = "0x19BAE28")]
		public ES3Type_Mesh()
		{
		}

		[Token(Token = "0x6000BB3")]
		[Address(RVA = "0x19BAF1C", Offset = "0x19BAF1C", VA = "0x19BAF1C", Slot = "10")]
		protected override void WriteUnityObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000BB4")]
		protected override object ReadUnityObject<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000BB5")]
		protected override void ReadUnityObject<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20001E5")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCAC4E4", Offset = "0xCAC4E4")]
	public class ES3Type_MinMaxCurve : ES3Type
	{
		[Token(Token = "0x4000AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000BB7")]
		[Address(RVA = "0x19BC310", Offset = "0x19BC310", VA = "0x19BC310")]
		public ES3Type_MinMaxCurve()
		{
		}

		[Token(Token = "0x6000BB8")]
		[Address(RVA = "0x19BC3C8", Offset = "0x19BC3C8", VA = "0x19BC3C8", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000BB9")]
		[Preserve]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000BBA")]
		[Preserve]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20001E6")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCAC63C", Offset = "0xCAC63C")]
	public class ES3Type_MinMaxGradient : ES3Type
	{
		[Token(Token = "0x4000AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000BBC")]
		[Address(RVA = "0x19BC6F8", Offset = "0x19BC6F8", VA = "0x19BC6F8")]
		public ES3Type_MinMaxGradient()
		{
		}

		[Token(Token = "0x6000BBD")]
		[Address(RVA = "0x19BC7B0", Offset = "0x19BC7B0", VA = "0x19BC7B0", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000BBE")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x20001E7")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCAC778", Offset = "0xCAC778")]
	public class ES3Type_NoiseModule : ES3Type
	{
		[Token(Token = "0x4000AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000BC0")]
		[Address(RVA = "0x19BCABC", Offset = "0x19BCABC", VA = "0x19BCABC")]
		public ES3Type_NoiseModule()
		{
		}

		[Token(Token = "0x6000BC1")]
		[Address(RVA = "0x19BCB74", Offset = "0x19BCB74", VA = "0x19BCB74", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000BC2")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000BC3")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20001E8")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCACAE4", Offset = "0xCACAE4")]
	public class ES3Type_PhysicMaterial : ES3ObjectType
	{
		[Token(Token = "0x4000AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000BC5")]
		[Address(RVA = "0x19BDEBC", Offset = "0x19BDEBC", VA = "0x19BDEBC")]
		public ES3Type_PhysicMaterial()
		{
		}

		[Token(Token = "0x6000BC6")]
		[Address(RVA = "0x19BDF74", Offset = "0x19BDF74", VA = "0x19BDF74", Slot = "7")]
		protected override void WriteObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000BC7")]
		protected override void ReadObject<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000BC8")]
		protected override object ReadObject<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x20001E9")]
	public class ES3Type_PhysicMaterialArray : ES3ArrayType
	{
		[Token(Token = "0x4000AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000BCA")]
		[Address(RVA = "0x19BE1C0", Offset = "0x19BE1C0", VA = "0x19BE1C0")]
		public ES3Type_PhysicMaterialArray()
		{
		}
	}
	[Token(Token = "0x20001EA")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCACBE8", Offset = "0xCACBE8")]
	public class ES3Type_PhysicsMaterial2D : ES3ObjectType
	{
		[Token(Token = "0x4000AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0x19BE29C", Offset = "0x19BE29C", VA = "0x19BE29C")]
		public ES3Type_PhysicsMaterial2D()
		{
		}

		[Token(Token = "0x6000BCC")]
		[Address(RVA = "0x19BE354", Offset = "0x19BE354", VA = "0x19BE354", Slot = "7")]
		protected override void WriteObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000BCD")]
		protected override void ReadObject<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000BCE")]
		protected override object ReadObject<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x20001EB")]
	public class ES3Type_PhysicsMaterial2DArray : ES3ArrayType
	{
		[Token(Token = "0x4000AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000BD0")]
		[Address(RVA = "0x19BE4A0", Offset = "0x19BE4A0", VA = "0x19BE4A0")]
		public ES3Type_PhysicsMaterial2DArray()
		{
		}
	}
	[Token(Token = "0x20001EC")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCACC98", Offset = "0xCACC98")]
	public class ES3Type_Quaternion : ES3Type
	{
		[Token(Token = "0x4000ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000BD1")]
		[Address(RVA = "0x19BEBB8", Offset = "0x19BEBB8", VA = "0x19BEBB8")]
		public ES3Type_Quaternion()
		{
		}

		[Token(Token = "0x6000BD2")]
		[Address(RVA = "0x19BEC70", Offset = "0x19BEC70", VA = "0x19BEC70", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000BD3")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x20001ED")]
	public class ES3Type_QuaternionArray : ES3ArrayType
	{
		[Token(Token = "0x4000ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000BD5")]
		[Address(RVA = "0x19BEE48", Offset = "0x19BEE48", VA = "0x19BEE48")]
		public ES3Type_QuaternionArray()
		{
		}
	}
	[Token(Token = "0x20001EE")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCACD80", Offset = "0xCACD80")]
	public class ES3Type_Rect : ES3Type
	{
		[Token(Token = "0x4000ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000BD6")]
		[Address(RVA = "0x19BFC64", Offset = "0x19BFC64", VA = "0x19BFC64")]
		public ES3Type_Rect()
		{
		}

		[Token(Token = "0x6000BD7")]
		[Address(RVA = "0x19BFD1C", Offset = "0x19BFD1C", VA = "0x19BFD1C", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000BD8")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x20001EF")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCACE68", Offset = "0xCACE68")]
	public class ES3Type_RectTransform : ES3ComponentType
	{
		[Token(Token = "0x4000ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000BDA")]
		[Address(RVA = "0x19BFF18", Offset = "0x19BFF18", VA = "0x19BFF18")]
		public ES3Type_RectTransform()
		{
		}

		[Token(Token = "0x6000BDB")]
		[Address(RVA = "0x19BFFD0", Offset = "0x19BFFD0", VA = "0x19BFFD0", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000BDC")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20001F0")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCAD030", Offset = "0xCAD030")]
	public class ES3Type_RotationBySpeedModule : ES3Type
	{
		[Token(Token = "0x4000ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000BDE")]
		[Address(RVA = "0x19C0470", Offset = "0x19C0470", VA = "0x19C0470")]
		public ES3Type_RotationBySpeedModule()
		{
		}

		[Token(Token = "0x6000BDF")]
		[Address(RVA = "0x19C0528", Offset = "0x19C0528", VA = "0x19C0528", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000BE0")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000BE1")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20001F1")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCAD1A4", Offset = "0xCAD1A4")]
	public class ES3Type_RotationOverLifetimeModule : ES3Type
	{
		[Token(Token = "0x4000ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000BE3")]
		[Address(RVA = "0x19C0978", Offset = "0x19C0978", VA = "0x19C0978")]
		public ES3Type_RotationOverLifetimeModule()
		{
		}

		[Token(Token = "0x6000BE4")]
		[Address(RVA = "0x19C0A30", Offset = "0x19C0A30", VA = "0x19C0A30", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000BE5")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000BE6")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20001F2")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCAD2FC", Offset = "0xCAD2FC")]
	public class ES3Type_Shader : ES3Type
	{
		[Token(Token = "0x4000AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0x19C0E08", Offset = "0x19C0E08", VA = "0x19C0E08")]
		public ES3Type_Shader()
		{
		}

		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0x19C0EC0", Offset = "0x19C0EC0", VA = "0x19C0EC0", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000BEA")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000BEB")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20001F3")]
	public class ES3Type_ShaderArray : ES3ArrayType
	{
		[Token(Token = "0x4000AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000BED")]
		[Address(RVA = "0x19C1028", Offset = "0x19C1028", VA = "0x19C1028")]
		public ES3Type_ShaderArray()
		{
		}
	}
	[Token(Token = "0x20001F4")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCAD3AC", Offset = "0xCAD3AC")]
	public class ES3Type_ShapeModule : ES3Type
	{
		[Token(Token = "0x4000AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0x19C1104", Offset = "0x19C1104", VA = "0x19C1104")]
		public ES3Type_ShapeModule()
		{
		}

		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0x19C11BC", Offset = "0x19C11BC", VA = "0x19C11BC", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000BF0")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000BF1")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20001F5")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCAD638", Offset = "0xCAD638")]
	public class ES3Type_SizeBySpeedModule : ES3Type
	{
		[Token(Token = "0x4000AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000BF3")]
		[Address(RVA = "0x19C1854", Offset = "0x19C1854", VA = "0x19C1854")]
		public ES3Type_SizeBySpeedModule()
		{
		}

		[Token(Token = "0x6000BF4")]
		[Address(RVA = "0x19C190C", Offset = "0x19C190C", VA = "0x19C190C", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000BF5")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000BF6")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20001F6")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCAD7E4", Offset = "0xCAD7E4")]
	public class ES3Type_SizeOverLifetimeModule : ES3Type
	{
		[Token(Token = "0x4000AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0x19C1DFC", Offset = "0x19C1DFC", VA = "0x19C1DFC")]
		public ES3Type_SizeOverLifetimeModule()
		{
		}

		[Token(Token = "0x6000BF9")]
		[Address(RVA = "0x19C1EB4", Offset = "0x19C1EB4", VA = "0x19C1EB4", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000BFA")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000BFB")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20001F7")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCAD974", Offset = "0xCAD974")]
	public class ES3Type_SkinnedMeshRenderer : ES3ComponentType
	{
		[Token(Token = "0x4000AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0x19C2330", Offset = "0x19C2330", VA = "0x19C2330")]
		public ES3Type_SkinnedMeshRenderer()
		{
		}

		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0x19C23E8", Offset = "0x19C23E8", VA = "0x19C23E8", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000BFF")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20001F8")]
	public class ES3Type_SkinnedMeshRendererArray : ES3ArrayType
	{
		[Token(Token = "0x4000AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000C01")]
		[Address(RVA = "0x19C2CEC", Offset = "0x19C2CEC", VA = "0x19C2CEC")]
		public ES3Type_SkinnedMeshRendererArray()
		{
		}
	}
	[Token(Token = "0x20001F9")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCADC70", Offset = "0xCADC70")]
	public class ES3Type_Sprite : ES3UnityObjectType
	{
		[Token(Token = "0x4000AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000C02")]
		[Address(RVA = "0x19C3180", Offset = "0x19C3180", VA = "0x19C3180")]
		public ES3Type_Sprite()
		{
		}

		[Token(Token = "0x6000C03")]
		[Address(RVA = "0x19C3244", Offset = "0x19C3244", VA = "0x19C3244", Slot = "10")]
		protected override void WriteUnityObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000C04")]
		protected override void ReadUnityObject<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000C05")]
		protected override object ReadUnityObject<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x20001FA")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCADD74", Offset = "0xCADD74")]
	public class ES3Type_SpriteRenderer : ES3ComponentType
	{
		[Token(Token = "0x4000AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000C07")]
		[Address(RVA = "0x19C352C", Offset = "0x19C352C", VA = "0x19C352C")]
		public ES3Type_SpriteRenderer()
		{
		}

		[Token(Token = "0x6000C08")]
		[Address(RVA = "0x19C35E4", Offset = "0x19C35E4", VA = "0x19C35E4", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000C09")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20001FB")]
	public class ES3Type_SpriteRendererArray : ES3ArrayType
	{
		[Token(Token = "0x4000AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000C0B")]
		[Address(RVA = "0x19C3D7C", Offset = "0x19C3D7C", VA = "0x19C3D7C")]
		public ES3Type_SpriteRendererArray()
		{
		}
	}
	[Token(Token = "0x20001FC")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCAE01C", Offset = "0xCAE01C")]
	public class ES3Type_SubEmittersModule : ES3Type
	{
		[Token(Token = "0x4000AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000C0C")]
		[Address(RVA = "0x19C3F34", Offset = "0x19C3F34", VA = "0x19C3F34")]
		public ES3Type_SubEmittersModule()
		{
		}

		[Token(Token = "0x6000C0D")]
		[Address(RVA = "0x19C3FEC", Offset = "0x19C3FEC", VA = "0x19C3FEC", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000C0E")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000C0F")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20001FD")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCAE0E8", Offset = "0xCAE0E8")]
	public class ES3Type_Texture : ES3Type
	{
		[Token(Token = "0x4000AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000C11")]
		[Address(RVA = "0x19C4990", Offset = "0x19C4990", VA = "0x19C4990")]
		public ES3Type_Texture()
		{
		}

		[Token(Token = "0x6000C12")]
		[Address(RVA = "0x19C4A48", Offset = "0x19C4A48", VA = "0x19C4A48", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000C13")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000C14")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x20001FE")]
	public class ES3Type_TextureArray : ES3ArrayType
	{
		[Token(Token = "0x4000AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000C16")]
		[Address(RVA = "0x19C51F8", Offset = "0x19C51F8", VA = "0x19C51F8")]
		public ES3Type_TextureArray()
		{
		}
	}
	[Token(Token = "0x20001FF")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCAE1EC", Offset = "0xCAE1EC")]
	public class ES3Type_Texture2D : ES3UnityObjectType
	{
		[Token(Token = "0x4000AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000C17")]
		[Address(RVA = "0x19C4BB8", Offset = "0x19C4BB8", VA = "0x19C4BB8")]
		public ES3Type_Texture2D()
		{
		}

		[Token(Token = "0x6000C18")]
		[Address(RVA = "0x19C4C7C", Offset = "0x19C4C7C", VA = "0x19C4C7C", Slot = "10")]
		protected override void WriteUnityObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000C19")]
		protected override void ReadUnityObject<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000C1A")]
		protected override object ReadUnityObject<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000C1B")]
		[Address(RVA = "0x19C5080", Offset = "0x19C5080", VA = "0x19C5080")]
		protected bool IsReadable(Texture2D instance)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000200")]
	public class ES3Type_Texture2DArray : ES3ArrayType
	{
		[Token(Token = "0x4000AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000C1D")]
		[Address(RVA = "0x19C511C", Offset = "0x19C511C", VA = "0x19C511C")]
		public ES3Type_Texture2DArray()
		{
		}
	}
	[Token(Token = "0x2000201")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCAE2F0", Offset = "0xCAE2F0")]
	public class ES3Type_TextureSheetAnimationModule : ES3Type
	{
		[Token(Token = "0x4000AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000C1E")]
		[Address(RVA = "0x19C52D4", Offset = "0x19C52D4", VA = "0x19C52D4")]
		public ES3Type_TextureSheetAnimationModule()
		{
		}

		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0x19C538C", Offset = "0x19C538C", VA = "0x19C538C", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000C20")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000C21")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000202")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCAE4F0", Offset = "0xCAE4F0")]
	public class ES3Type_TrailModule : ES3Type
	{
		[Token(Token = "0x4000AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000C23")]
		[Address(RVA = "0x19C58C0", Offset = "0x19C58C0", VA = "0x19C58C0")]
		public ES3Type_TrailModule()
		{
		}

		[Token(Token = "0x6000C24")]
		[Address(RVA = "0x19C5978", Offset = "0x19C5978", VA = "0x19C5978", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000C25")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000C26")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000203")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCAE70C", Offset = "0xCAE70C")]
	public class ES3Type_TriggerModule : ES3Type
	{
		[Token(Token = "0x4000AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000C28")]
		[Address(RVA = "0x19C623C", Offset = "0x19C623C", VA = "0x19C623C")]
		public ES3Type_TriggerModule()
		{
		}

		[Token(Token = "0x6000C29")]
		[Address(RVA = "0x19C62F4", Offset = "0x19C62F4", VA = "0x19C62F4", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000C2A")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000C2B")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000204")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCAE82C", Offset = "0xCAE82C")]
	public class ES3Type_Vector2 : ES3Type
	{
		[Token(Token = "0x4000AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0x19C67E0", Offset = "0x19C67E0", VA = "0x19C67E0")]
		public ES3Type_Vector2()
		{
		}

		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0x19C6898", Offset = "0x19C6898", VA = "0x19C6898", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000C2F")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000205")]
	public class ES3Type_Vector2Array : ES3ArrayType
	{
		[Token(Token = "0x4000AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000C31")]
		[Address(RVA = "0x19C69DC", Offset = "0x19C69DC", VA = "0x19C69DC")]
		public ES3Type_Vector2Array()
		{
		}
	}
	[Token(Token = "0x2000206")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCAE8DC", Offset = "0xCAE8DC")]
	public class ES3Type_Vector2Int : ES3Type
	{
		[Token(Token = "0x4000AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000C32")]
		[Address(RVA = "0x19C6AB8", Offset = "0x19C6AB8", VA = "0x19C6AB8")]
		public ES3Type_Vector2Int()
		{
		}

		[Token(Token = "0x6000C33")]
		[Address(RVA = "0x19C6B70", Offset = "0x19C6B70", VA = "0x19C6B70", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000C34")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000207")]
	public class ES3Type_Vector2IntArray : ES3ArrayType
	{
		[Token(Token = "0x4000AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000C36")]
		[Address(RVA = "0x19C6CDC", Offset = "0x19C6CDC", VA = "0x19C6CDC")]
		public ES3Type_Vector2IntArray()
		{
		}
	}
	[Token(Token = "0x2000208")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCAE98C", Offset = "0xCAE98C")]
	public class ES3Type_Vector3 : ES3Type
	{
		[Token(Token = "0x4000AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000C37")]
		[Address(RVA = "0x19C6DB8", Offset = "0x19C6DB8", VA = "0x19C6DB8")]
		public ES3Type_Vector3()
		{
		}

		[Token(Token = "0x6000C38")]
		[Address(RVA = "0x19C6E70", Offset = "0x19C6E70", VA = "0x19C6E70", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000C39")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000209")]
	public class ES3Type_Vector3Array : ES3ArrayType
	{
		[Token(Token = "0x4000AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0x19C7000", Offset = "0x19C7000", VA = "0x19C7000")]
		public ES3Type_Vector3Array()
		{
		}
	}
	[Token(Token = "0x200020A")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCAEA58", Offset = "0xCAEA58")]
	public class ES3Type_Vector3Int : ES3Type
	{
		[Token(Token = "0x4000AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000C3C")]
		[Address(RVA = "0x19C70DC", Offset = "0x19C70DC", VA = "0x19C70DC")]
		public ES3Type_Vector3Int()
		{
		}

		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0x19C7194", Offset = "0x19C7194", VA = "0x19C7194", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000C3E")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x200020B")]
	public class ES3Type_Vector3IntArray : ES3ArrayType
	{
		[Token(Token = "0x4000AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000C40")]
		[Address(RVA = "0x19C735C", Offset = "0x19C735C", VA = "0x19C735C")]
		public ES3Type_Vector3IntArray()
		{
		}
	}
	[Token(Token = "0x200020C")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCAEB24", Offset = "0xCAEB24")]
	public class ES3Type_Vector4 : ES3Type
	{
		[Token(Token = "0x4000AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000C41")]
		[Address(RVA = "0x19C7438", Offset = "0x19C7438", VA = "0x19C7438")]
		public ES3Type_Vector4()
		{
		}

		[Token(Token = "0x6000C42")]
		[Address(RVA = "0x19C74F0", Offset = "0x19C74F0", VA = "0x19C74F0", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000C43")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000C44")]
		[Address(RVA = "0x19C76C4", Offset = "0x19C76C4", VA = "0x19C76C4")]
		public static bool Equals(Vector4 a, Vector4 b)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200020D")]
	public class ES3Type_Vector4Array : ES3ArrayType
	{
		[Token(Token = "0x4000AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000C46")]
		[Address(RVA = "0x19C7814", Offset = "0x19C7814", VA = "0x19C7814")]
		public ES3Type_Vector4Array()
		{
		}
	}
	[Token(Token = "0x200020E")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCAEC0C", Offset = "0xCAEC0C")]
	public class ES3Type_VelocityOverLifetimeModule : ES3Type
	{
		[Token(Token = "0x4000AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000C47")]
		[Address(RVA = "0x19C78F0", Offset = "0x19C78F0", VA = "0x19C78F0")]
		public ES3Type_VelocityOverLifetimeModule()
		{
		}

		[Token(Token = "0x6000C48")]
		[Address(RVA = "0x19C79A8", Offset = "0x19C79A8", VA = "0x19C79A8", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000C49")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000C4A")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
}
namespace ES3Internal
{
	[Token(Token = "0x200020F")]
	internal static class ES3Debug
	{
		[Token(Token = "0x4000AFD")]
		private const string disableInfoMsg = "\n<i>To disable these messages from Easy Save, go to Window > Easy Save 3 > Settings, and uncheck 'Log Info'</i>";

		[Token(Token = "0x4000AFE")]
		private const string disableWarningMsg = "\n<i>To disable warnings from Easy Save, go to Window > Easy Save 3 > Settings, and uncheck 'Log Warnings'</i>";

		[Token(Token = "0x4000AFF")]
		private const string disableErrorMsg = "\n<i>To disable these error messages from Easy Save, go to Window > Easy Save 3 > Settings, and uncheck 'Log Errors'</i>";

		[Token(Token = "0x4000B00")]
		private const char indentChar = '-';

		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0x18290C0", Offset = "0x18290C0", VA = "0x18290C0")]
		public static void Log(string msg, [Optional] UnityEngine.Object context, int indent = 0)
		{
		}

		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0x181FEC0", Offset = "0x181FEC0", VA = "0x181FEC0")]
		public static void LogWarning(string msg, [Optional] UnityEngine.Object context, int indent = 0)
		{
		}

		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0x182C8DC", Offset = "0x182C8DC", VA = "0x182C8DC")]
		public static void LogError(string msg, [Optional] UnityEngine.Object context, int indent = 0)
		{
		}

		[Token(Token = "0x6000C4F")]
		[Address(RVA = "0x182CC9C", Offset = "0x182CC9C", VA = "0x182CC9C")]
		private static string Indent(int size)
		{
			return null;
		}
	}
	[Token(Token = "0x2000210")]
	public static class ES3Hash
	{
		[Token(Token = "0x6000C50")]
		[Address(RVA = "0x182D070", Offset = "0x182D070", VA = "0x182D070")]
		public static string SHA1Hash(string input)
		{
			return null;
		}
	}
	[Token(Token = "0x2000211")]
	public abstract class EncryptionAlgorithm
	{
		[Token(Token = "0x6000C51")]
		public abstract void Encrypt(Stream input, Stream output, string password, int bufferSize);

		[Token(Token = "0x6000C52")]
		public abstract void Decrypt(Stream input, Stream output, string password, int bufferSize);

		[Token(Token = "0x6000C53")]
		[Address(RVA = "0x1AA5898", Offset = "0x1AA5898", VA = "0x1AA5898")]
		protected static void CopyStream(Stream input, Stream output, int bufferSize)
		{
		}

		[Token(Token = "0x6000C54")]
		[Address(RVA = "0x1AA5980", Offset = "0x1AA5980", VA = "0x1AA5980")]
		protected EncryptionAlgorithm()
		{
		}
	}
	[Token(Token = "0x2000212")]
	public class AESEncryptionAlgorithm : EncryptionAlgorithm
	{
		[Token(Token = "0x4000B01")]
		private const int ivSize = 16;

		[Token(Token = "0x4000B02")]
		private const int keySize = 16;

		[Token(Token = "0x4000B03")]
		private const int pwIterations = 100;

		[Token(Token = "0x6000C55")]
		[Address(RVA = "0x1827F6C", Offset = "0x1827F6C", VA = "0x1827F6C", Slot = "4")]
		public override void Encrypt(Stream input, Stream output, string password, int bufferSize)
		{
		}

		[Token(Token = "0x6000C56")]
		[Address(RVA = "0x1828390", Offset = "0x1828390", VA = "0x1828390", Slot = "5")]
		public override void Decrypt(Stream input, Stream output, string password, int bufferSize)
		{
		}

		[Token(Token = "0x6000C57")]
		[Address(RVA = "0x1828788", Offset = "0x1828788", VA = "0x1828788")]
		public AESEncryptionAlgorithm()
		{
		}
	}
	[Token(Token = "0x2000213")]
	public class UnbufferedCryptoStream : MemoryStream
	{
		[Token(Token = "0x4000B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly Stream stream;

		[Token(Token = "0x4000B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly bool isReadStream;

		[Token(Token = "0x4000B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private string password;

		[Token(Token = "0x4000B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int bufferSize;

		[Token(Token = "0x4000B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private EncryptionAlgorithm alg;

		[Token(Token = "0x6000C58")]
		[Address(RVA = "0x1AA5988", Offset = "0x1AA5988", VA = "0x1AA5988")]
		public UnbufferedCryptoStream(Stream stream, bool isReadStream, string password, int bufferSize, EncryptionAlgorithm alg)
		{
		}

		[Token(Token = "0x6000C59")]
		[Address(RVA = "0x1AA5A54", Offset = "0x1AA5A54", VA = "0x1AA5A54", Slot = "16")]
		protected override void Dispose(bool disposing)
		{
		}
	}
	[Token(Token = "0x2000214")]
	public struct ES3Data
	{
		[Token(Token = "0x4000B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ES3Type type;

		[Token(Token = "0x4000B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public byte[] bytes;

		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0xDF9FD4", Offset = "0xDF9FD4", VA = "0xDF9FD4")]
		public ES3Data(Type type, byte[] bytes)
		{
		}

		[Token(Token = "0x6000C5B")]
		[Address(RVA = "0xDF9FDC", Offset = "0xDF9FDC", VA = "0xDF9FDC")]
		public ES3Data(ES3Type type, byte[] bytes)
		{
		}
	}
	[Token(Token = "0x2000215")]
	public static class ES3IO
	{
		[Token(Token = "0x200040A")]
		public enum ES3FileMode
		{
			[Token(Token = "0x4000E8E")]
			Read,
			[Token(Token = "0x4000E8F")]
			Write,
			[Token(Token = "0x4000E90")]
			Append
		}

		[Token(Token = "0x4000B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string persistentDataPath;

		[Token(Token = "0x4000B0C")]
		internal const string backupFileSuffix = ".bac";

		[Token(Token = "0x4000B0D")]
		internal const string temporaryFileSuffix = ".tmp";

		[Token(Token = "0x6000C5C")]
		[Address(RVA = "0x182D208", Offset = "0x182D208", VA = "0x182D208")]
		public static DateTime GetTimestamp(string filePath)
		{
			return default(DateTime);
		}

		[Token(Token = "0x6000C5D")]
		[Address(RVA = "0x182D2E8", Offset = "0x182D2E8", VA = "0x182D2E8")]
		public static string GetExtension(string path)
		{
			return null;
		}

		[Token(Token = "0x6000C5E")]
		[Address(RVA = "0x182D350", Offset = "0x182D350", VA = "0x182D350")]
		public static void DeleteFile(string filePath)
		{
		}

		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0x182D2E0", Offset = "0x182D2E0", VA = "0x182D2E0")]
		public static bool FileExists(string filePath)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C60")]
		[Address(RVA = "0x182D3D4", Offset = "0x182D3D4", VA = "0x182D3D4")]
		public static void MoveFile(string sourcePath, string destPath)
		{
		}

		[Token(Token = "0x6000C61")]
		[Address(RVA = "0x182D3DC", Offset = "0x182D3DC", VA = "0x182D3DC")]
		public static void CopyFile(string sourcePath, string destPath)
		{
		}

		[Token(Token = "0x6000C62")]
		[Address(RVA = "0x182D3E4", Offset = "0x182D3E4", VA = "0x182D3E4")]
		public static void MoveDirectory(string sourcePath, string destPath)
		{
		}

		[Token(Token = "0x6000C63")]
		[Address(RVA = "0x182D024", Offset = "0x182D024", VA = "0x182D024")]
		public static void CreateDirectory(string directoryPath)
		{
		}

		[Token(Token = "0x6000C64")]
		[Address(RVA = "0x182D3EC", Offset = "0x182D3EC", VA = "0x182D3EC")]
		public static bool DirectoryExists(string directoryPath)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C65")]
		[Address(RVA = "0x182CF20", Offset = "0x182CF20", VA = "0x182CF20")]
		public static string GetDirectoryPath(string path, char seperator = '/')
		{
			return null;
		}

		[Token(Token = "0x6000C66")]
		[Address(RVA = "0x182D3F4", Offset = "0x182D3F4", VA = "0x182D3F4")]
		public static bool UsesForwardSlash(string path)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C67")]
		[Address(RVA = "0x182D450", Offset = "0x182D450", VA = "0x182D450")]
		public static string CombinePathAndFilename(string directoryPath, string fileOrDirectoryName)
		{
			return null;
		}

		[Token(Token = "0x6000C68")]
		[Address(RVA = "0x182D50C", Offset = "0x182D50C", VA = "0x182D50C")]
		public static string[] GetDirectories(string path, bool getFullPaths = true)
		{
			return null;
		}

		[Token(Token = "0x6000C69")]
		[Address(RVA = "0x182D66C", Offset = "0x182D66C", VA = "0x182D66C")]
		public static void DeleteDirectory(string directoryPath)
		{
		}

		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0x182D6F4", Offset = "0x182D6F4", VA = "0x182D6F4")]
		public static string[] GetFiles(string path, bool getFullPaths = true)
		{
			return null;
		}

		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0x182D820", Offset = "0x182D820", VA = "0x182D820")]
		public static byte[] ReadAllBytes(string path)
		{
			return null;
		}

		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0x182D828", Offset = "0x182D828", VA = "0x182D828")]
		public static void WriteAllBytes(string path, byte[] bytes)
		{
		}

		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0x182D830", Offset = "0x182D830", VA = "0x182D830")]
		public static void CommitBackup(ES3Settings settings)
		{
		}
	}
	[Token(Token = "0x2000216")]
	public class ES3Prefab : MonoBehaviour
	{
		[Token(Token = "0x4000B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public long prefabId;

		[Token(Token = "0x4000B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ES3RefIdDictionary localRefs;

		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0x1831310", Offset = "0x1831310", VA = "0x1831310")]
		public void Awake()
		{
		}

		[Token(Token = "0x6000C70")]
		[Address(RVA = "0x183162C", Offset = "0x183162C", VA = "0x183162C")]
		public long Get(UnityEngine.Object obj)
		{
			return default(long);
		}

		[Token(Token = "0x6000C71")]
		[Address(RVA = "0x18316AC", Offset = "0x18316AC", VA = "0x18316AC")]
		public long Add(UnityEngine.Object obj)
		{
			return default(long);
		}

		[Token(Token = "0x6000C72")]
		[Address(RVA = "0x18317D4", Offset = "0x18317D4", VA = "0x18317D4")]
		public Dictionary<string, string> GetReferences()
		{
			return null;
		}

		[Token(Token = "0x6000C73")]
		[Address(RVA = "0x18319C8", Offset = "0x18319C8", VA = "0x18319C8")]
		public void ApplyReferences(Dictionary<long, long> localToGlobal)
		{
		}

		[Token(Token = "0x6000C74")]
		[Address(RVA = "0x1831778", Offset = "0x1831778", VA = "0x1831778")]
		public static long GetNewRefID()
		{
			return default(long);
		}

		[Token(Token = "0x6000C75")]
		[Address(RVA = "0x1831E84", Offset = "0x1831E84", VA = "0x1831E84")]
		public ES3Prefab()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000217")]
	[DisallowMultipleComponent]
	public abstract class ES3ReferenceMgrBase : MonoBehaviour
	{
		[Token(Token = "0x200040B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB0984", Offset = "0xCB0984")]
		private sealed class <>c__DisplayClass27_0
		{
			[Token(Token = "0x4000E91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UnityEngine.Object obj;

			[Token(Token = "0x4000E92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Func<KeyValuePair<long, UnityEngine.Object>, bool> <>9__0;

			[Token(Token = "0x60015E9")]
			[Address(RVA = "0x1833004", Offset = "0x1833004", VA = "0x1833004")]
			public <>c__DisplayClass27_0()
			{
			}

			[Token(Token = "0x60015EA")]
			[Address(RVA = "0x18339B0", Offset = "0x18339B0", VA = "0x18339B0")]
			internal bool <Remove>b__0(KeyValuePair<long, UnityEngine.Object> kvp)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200040C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB0994", Offset = "0xCB0994")]
		private sealed class <>c__DisplayClass28_0
		{
			[Token(Token = "0x4000E93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public long referenceID;

			[Token(Token = "0x4000E94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Func<KeyValuePair<UnityEngine.Object, long>, bool> <>9__0;

			[Token(Token = "0x60015EB")]
			[Address(RVA = "0x183329C", Offset = "0x183329C", VA = "0x183329C")]
			public <>c__DisplayClass28_0()
			{
			}

			[Token(Token = "0x60015EC")]
			[Address(RVA = "0x1833A2C", Offset = "0x1833A2C", VA = "0x1833A2C")]
			internal bool <Remove>b__0(KeyValuePair<UnityEngine.Object, long> kvp)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x200040D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB09A4", Offset = "0xCB09A4")]
		private sealed class <>c
		{
			[Token(Token = "0x4000E95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000E96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<KeyValuePair<long, UnityEngine.Object>, bool> <>9__29_0;

			[Token(Token = "0x4000E97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<KeyValuePair<long, UnityEngine.Object>, long> <>9__29_1;

			[Token(Token = "0x60015EE")]
			[Address(RVA = "0x18338F8", Offset = "0x18338F8", VA = "0x18338F8")]
			public <>c()
			{
			}

			[Token(Token = "0x60015EF")]
			[Address(RVA = "0x1833900", Offset = "0x1833900", VA = "0x1833900")]
			internal bool <RemoveNullValues>b__29_0(KeyValuePair<long, UnityEngine.Object> pair)
			{
				return default(bool);
			}

			[Token(Token = "0x60015F0")]
			[Address(RVA = "0x183396C", Offset = "0x183396C", VA = "0x183396C")]
			internal long <RemoveNullValues>b__29_1(KeyValuePair<long, UnityEngine.Object> pair)
			{
				return default(long);
			}
		}

		[Token(Token = "0x4000B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object _lock;

		[Token(Token = "0x4000B11")]
		public const string referencePropertyName = "_ES3Ref";

		[Token(Token = "0x4000B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ES3ReferenceMgrBase _current;

		[Token(Token = "0x4000B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static System.Random rng;

		[Token(Token = "0x4000B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public bool openPrefabs;

		[Token(Token = "0x4000B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<ES3Prefab> prefabs;

		[Token(Token = "0x4000B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public ES3IdRefDictionary idRef;

		[Token(Token = "0x4000B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ES3RefIdDictionary _refId;

		[Token(Token = "0x170000F3")]
		public static ES3ReferenceMgrBase Current
		{
			[Token(Token = "0x6000C76")]
			[Address(RVA = "0x1829B94", Offset = "0x1829B94", VA = "0x1829B94")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F4")]
		public bool IsInitialised
		{
			[Token(Token = "0x6000C77")]
			[Address(RVA = "0x1831FD0", Offset = "0x1831FD0", VA = "0x1831FD0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000F5")]
		public ES3RefIdDictionary refId
		{
			[Token(Token = "0x6000C78")]
			[Address(RVA = "0x1832034", Offset = "0x1832034", VA = "0x1832034")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C79")]
			[Address(RVA = "0x18321CC", Offset = "0x18321CC", VA = "0x18321CC")]
			set
			{
			}
		}

		[Token(Token = "0x170000F6")]
		public ES3GlobalReferences GlobalReferences
		{
			[Token(Token = "0x6000C7A")]
			[Address(RVA = "0x18321D4", Offset = "0x18321D4", VA = "0x18321D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0x18321DC", Offset = "0x18321DC", VA = "0x18321DC")]
		public void Awake()
		{
		}

		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0x1832440", Offset = "0x1832440", VA = "0x1832440")]
		public void Merge(ES3ReferenceMgrBase otherMgr)
		{
		}

		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0x1832544", Offset = "0x1832544", VA = "0x1832544")]
		public long Get(UnityEngine.Object obj)
		{
			return default(long);
		}

		[Token(Token = "0x6000C7E")]
		[Address(RVA = "0x1832604", Offset = "0x1832604", VA = "0x1832604")]
		internal UnityEngine.Object Get(long id, Type type)
		{
			return null;
		}

		[Token(Token = "0x6000C7F")]
		[Address(RVA = "0x18328A4", Offset = "0x18328A4", VA = "0x18328A4")]
		public UnityEngine.Object Get(long id, bool suppressWarnings = false)
		{
			return null;
		}

		[Token(Token = "0x6000C80")]
		[Address(RVA = "0x18329F4", Offset = "0x18329F4", VA = "0x18329F4")]
		public ES3Prefab GetPrefab(long id, bool suppressWarnings = false)
		{
			return null;
		}

		[Token(Token = "0x6000C81")]
		[Address(RVA = "0x1832B88", Offset = "0x1832B88", VA = "0x1832B88")]
		public long GetPrefab(ES3Prefab prefab, bool suppressWarnings = false)
		{
			return default(long);
		}

		[Token(Token = "0x6000C82")]
		[Address(RVA = "0x18314B0", Offset = "0x18314B0", VA = "0x18314B0")]
		public long Add(UnityEngine.Object obj)
		{
			return default(long);
		}

		[Token(Token = "0x6000C83")]
		[Address(RVA = "0x1831B94", Offset = "0x1831B94", VA = "0x1831B94")]
		public long Add(UnityEngine.Object obj, long id)
		{
			return default(long);
		}

		[Token(Token = "0x6000C84")]
		[Address(RVA = "0x1832CDC", Offset = "0x1832CDC", VA = "0x1832CDC")]
		public void AddPrefab(ES3Prefab prefab)
		{
		}

		[Token(Token = "0x6000C85")]
		[Address(RVA = "0x1832D74", Offset = "0x1832D74", VA = "0x1832D74")]
		public void Remove(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x6000C86")]
		[Address(RVA = "0x183300C", Offset = "0x183300C", VA = "0x183300C")]
		public void Remove(long referenceID)
		{
		}

		[Token(Token = "0x6000C87")]
		[Address(RVA = "0x18332A4", Offset = "0x18332A4", VA = "0x18332A4")]
		public void RemoveNullValues()
		{
		}

		[Token(Token = "0x6000C88")]
		[Address(RVA = "0x1833570", Offset = "0x1833570", VA = "0x1833570")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000C89")]
		[Address(RVA = "0x1833668", Offset = "0x1833668", VA = "0x1833668")]
		public bool Contains(UnityEngine.Object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0x18336D4", Offset = "0x18336D4", VA = "0x18336D4")]
		public bool Contains(long referenceID)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C8B")]
		[Address(RVA = "0x183373C", Offset = "0x183373C", VA = "0x183373C")]
		public void ChangeId(long oldId, long newId)
		{
		}

		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0x1831D00", Offset = "0x1831D00", VA = "0x1831D00")]
		internal static long GetNewRefID()
		{
			return default(long);
		}

		[Token(Token = "0x6000C8D")]
		[Address(RVA = "0x1831770", Offset = "0x1831770", VA = "0x1831770")]
		internal static bool CanBeSaved(UnityEngine.Object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0x18337BC", Offset = "0x18337BC", VA = "0x18337BC")]
		protected ES3ReferenceMgrBase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000218")]
	public class ES3IdRefDictionary : ES3SerializableDictionary<long, UnityEngine.Object>
	{
		[Token(Token = "0x6000C90")]
		[Address(RVA = "0x182DB5C", Offset = "0x182DB5C", VA = "0x182DB5C", Slot = "43")]
		protected override bool KeysAreEqual(long a, long b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C91")]
		[Address(RVA = "0x182DB68", Offset = "0x182DB68", VA = "0x182DB68", Slot = "44")]
		protected override bool ValuesAreEqual(UnityEngine.Object a, UnityEngine.Object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C92")]
		[Address(RVA = "0x182DBE0", Offset = "0x182DBE0", VA = "0x182DBE0")]
		public ES3IdRefDictionary()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000219")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xCAED74", Offset = "0xCAED74")]
	public class ES3RefIdDictionary : ES3SerializableDictionary<UnityEngine.Object, long>
	{
		[Token(Token = "0x6000C93")]
		[Address(RVA = "0x1831F4C", Offset = "0x1831F4C", VA = "0x1831F4C", Slot = "43")]
		protected override bool KeysAreEqual(UnityEngine.Object a, UnityEngine.Object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C94")]
		[Address(RVA = "0x1831FC4", Offset = "0x1831FC4", VA = "0x1831FC4", Slot = "44")]
		protected override bool ValuesAreEqual(long a, long b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C95")]
		[Address(RVA = "0x1831EFC", Offset = "0x1831EFC", VA = "0x1831EFC")]
		public ES3RefIdDictionary()
		{
		}
	}
	[Token(Token = "0x200021A")]
	public static class ES3Reflection
	{
		[Token(Token = "0x200040E")]
		public struct ES3ReflectedMember
		{
			[Token(Token = "0x4000E98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private FieldInfo fieldInfo;

			[Token(Token = "0x4000E99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private PropertyInfo propertyInfo;

			[Token(Token = "0x4000E9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool isProperty;

			[Token(Token = "0x170001B2")]
			public bool IsNull
			{
				[Token(Token = "0x60015F1")]
				[Address(RVA = "0xDFA04C", Offset = "0xDFA04C", VA = "0xDFA04C")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170001B3")]
			public string Name
			{
				[Token(Token = "0x60015F2")]
				[Address(RVA = "0xDFA054", Offset = "0xDFA054", VA = "0xDFA054")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001B4")]
			public Type MemberType
			{
				[Token(Token = "0x60015F3")]
				[Address(RVA = "0xDFA05C", Offset = "0xDFA05C", VA = "0xDFA05C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001B5")]
			public bool IsPublic
			{
				[Token(Token = "0x60015F4")]
				[Address(RVA = "0xDFA064", Offset = "0xDFA064", VA = "0xDFA064")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170001B6")]
			public bool IsProtected
			{
				[Token(Token = "0x60015F5")]
				[Address(RVA = "0xDFA06C", Offset = "0xDFA06C", VA = "0xDFA06C")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170001B7")]
			public bool IsStatic
			{
				[Token(Token = "0x60015F6")]
				[Address(RVA = "0xDFA074", Offset = "0xDFA074", VA = "0xDFA074")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x60015F7")]
			[Address(RVA = "0xDFA07C", Offset = "0xDFA07C", VA = "0xDFA07C")]
			public ES3ReflectedMember(object fieldPropertyInfo)
			{
			}

			[Token(Token = "0x60015F8")]
			[Address(RVA = "0xDFA084", Offset = "0xDFA084", VA = "0xDFA084")]
			public void SetValue(object obj, object value)
			{
			}

			[Token(Token = "0x60015F9")]
			[Address(RVA = "0xDFA08C", Offset = "0xDFA08C", VA = "0xDFA08C")]
			public object GetValue(object obj)
			{
				return null;
			}
		}

		[Token(Token = "0x200040F")]
		public class ES3ReflectedMethod
		{
			[Token(Token = "0x4000E9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private MethodInfo method;

			[Token(Token = "0x60015FA")]
			[Address(RVA = "0x1836134", Offset = "0x1836134", VA = "0x1836134")]
			public ES3ReflectedMethod(Type type, string methodName, Type[] genericParameters, Type[] parameterTypes)
			{
			}

			[Token(Token = "0x60015FB")]
			[Address(RVA = "0x1836AF0", Offset = "0x1836AF0", VA = "0x1836AF0")]
			public ES3ReflectedMethod(Type type, string methodName, Type[] genericParameters, Type[] parameterTypes, BindingFlags bindingAttr)
			{
			}

			[Token(Token = "0x60015FC")]
			[Address(RVA = "0x1836B84", Offset = "0x1836B84", VA = "0x1836B84")]
			public object Invoke(object obj, [Optional] object[] parameters)
			{
				return null;
			}
		}

		[Token(Token = "0x2000410")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB09B4", Offset = "0xCB09B4")]
		private sealed class <>c__DisplayClass27_0
		{
			[Token(Token = "0x4000E9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Type derivedType;

			[Token(Token = "0x60015FD")]
			[Address(RVA = "0x1836044", Offset = "0x1836044", VA = "0x1836044")]
			public <>c__DisplayClass27_0()
			{
			}

			[Token(Token = "0x60015FE")]
			[Address(RVA = "0x1836830", Offset = "0x1836830", VA = "0x1836830")]
			internal bool <GetDerivedTypes>b__2(<>f__AnonymousType0<Assembly, Type> <>h__TransparentIdentifier0)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000411")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB09C4", Offset = "0xCB09C4")]
		private sealed class <>c
		{
			[Token(Token = "0x4000E9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000E9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Assembly, IEnumerable<Type>> <>9__27_0;

			[Token(Token = "0x4000E9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Assembly, Type, <>f__AnonymousType0<Assembly, Type>> <>9__27_1;

			[Token(Token = "0x4000EA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<<>f__AnonymousType0<Assembly, Type>, Type> <>9__27_3;

			[Token(Token = "0x6001600")]
			[Address(RVA = "0x183673C", Offset = "0x183673C", VA = "0x183673C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001601")]
			[Address(RVA = "0x1836744", Offset = "0x1836744", VA = "0x1836744")]
			internal IEnumerable<Type> <GetDerivedTypes>b__27_0(Assembly assembly)
			{
				return null;
			}

			[Token(Token = "0x6001602")]
			[Address(RVA = "0x1836768", Offset = "0x1836768", VA = "0x1836768")]
			internal <>f__AnonymousType0<Assembly, Type> <GetDerivedTypes>b__27_1(Assembly assembly, Type type)
			{
				return null;
			}

			[Token(Token = "0x6001603")]
			[Address(RVA = "0x18367E4", Offset = "0x18367E4", VA = "0x18367E4")]
			internal Type <GetDerivedTypes>b__27_3(<>f__AnonymousType0<Assembly, Type> <>h__TransparentIdentifier0)
			{
				return null;
			}
		}

		[Token(Token = "0x4000B18")]
		public const string memberFieldPrefix = "m_";

		[Token(Token = "0x4000B19")]
		public const string componentTagFieldName = "tag";

		[Token(Token = "0x4000B1A")]
		public const string componentNameFieldName = "name";

		[Token(Token = "0x4000B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string[] excludedPropertyNames;

		[Token(Token = "0x4000B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly Type serializableAttributeType;

		[Token(Token = "0x4000B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Type serializeFieldAttributeType;

		[Token(Token = "0x4000B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly Type obsoleteAttributeType;

		[Token(Token = "0x4000B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly Type nonSerializedAttributeType;

		[Token(Token = "0x4000B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static readonly Type es3SerializableAttributeType;

		[Token(Token = "0x4000B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static readonly Type es3NonSerializableAttributeType;

		[Token(Token = "0x4000B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static Type[] EmptyTypes;

		[Token(Token = "0x4000B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static Assembly[] _assemblies;

		[Token(Token = "0x170000F7")]
		private static Assembly[] Assemblies
		{
			[Token(Token = "0x6000C96")]
			[Address(RVA = "0x1833A84", Offset = "0x1833A84", VA = "0x1833A84")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C97")]
		[Address(RVA = "0x1833D08", Offset = "0x1833D08", VA = "0x1833D08")]
		public static Type[] GetElementTypes(Type type)
		{
			return null;
		}

		[Token(Token = "0x6000C98")]
		[Address(RVA = "0x1833ED8", Offset = "0x1833ED8", VA = "0x1833ED8")]
		public static List<FieldInfo> GetSerializableFields(Type type, [Optional] List<FieldInfo> serializableFields, bool safe = true, [Optional] string[] memberNames, BindingFlags bindings = BindingFlags.DeclaredOnly | BindingFlags.Instance | BindingFlags.Static | BindingFlags.Public | BindingFlags.NonPublic)
		{
			return null;
		}

		[Token(Token = "0x6000C99")]
		[Address(RVA = "0x1834810", Offset = "0x1834810", VA = "0x1834810")]
		public static List<PropertyInfo> GetSerializableProperties(Type type, [Optional] List<PropertyInfo> serializableProperties, bool safe = true, [Optional] string[] memberNames, BindingFlags bindings = BindingFlags.DeclaredOnly | BindingFlags.Instance | BindingFlags.Static | BindingFlags.Public | BindingFlags.NonPublic)
		{
			return null;
		}

		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0x1834480", Offset = "0x1834480", VA = "0x1834480")]
		public static bool TypeIsSerializable(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0x1835084", Offset = "0x1835084", VA = "0x1835084")]
		public static object CreateInstance(Type type)
		{
			return null;
		}

		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0x18351F4", Offset = "0x18351F4", VA = "0x18351F4")]
		public static object CreateInstance(Type type, params object[] args)
		{
			return null;
		}

		[Token(Token = "0x6000C9D")]
		[Address(RVA = "0x1835378", Offset = "0x1835378", VA = "0x1835378")]
		public static Array ArrayCreateInstance(Type type, int length)
		{
			return null;
		}

		[Token(Token = "0x6000C9E")]
		[Address(RVA = "0x1835404", Offset = "0x1835404", VA = "0x1835404")]
		public static Array ArrayCreateInstance(Type type, int[] dimensions)
		{
			return null;
		}

		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0x183540C", Offset = "0x183540C", VA = "0x183540C")]
		public static Type MakeGenericType(Type type, Type genericParam)
		{
			return null;
		}

		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0x18354D8", Offset = "0x18354D8", VA = "0x18354D8")]
		public static ES3ReflectedMember[] GetSerializableMembers(Type type, bool safe = true, [Optional] string[] memberNames)
		{
			return null;
		}

		[Token(Token = "0x6000CA1")]
		[Address(RVA = "0x1835960", Offset = "0x1835960", VA = "0x1835960")]
		public static ES3ReflectedMember GetES3ReflectedProperty(Type type, string propertyName)
		{
			return default(ES3ReflectedMember);
		}

		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0x1835B44", Offset = "0x1835B44", VA = "0x1835B44")]
		public static ES3ReflectedMember GetES3ReflectedMember(Type type, string fieldName)
		{
			return default(ES3ReflectedMember);
		}

		[Token(Token = "0x6000CA3")]
		public static IList<T> GetInstances<T>()
		{
			return null;
		}

		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0x1835D30", Offset = "0x1835D30", VA = "0x1835D30")]
		public static IList<Type> GetDerivedTypes(Type derivedType)
		{
			return null;
		}

		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0x1834460", Offset = "0x1834460", VA = "0x1834460")]
		public static bool IsAssignableFrom(Type a, Type b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0x183604C", Offset = "0x183604C", VA = "0x183604C")]
		public static Type GetGenericTypeDefinition(Type type)
		{
			return null;
		}

		[Token(Token = "0x6000CA7")]
		[Address(RVA = "0x1833E98", Offset = "0x1833E98", VA = "0x1833E98")]
		public static Type[] GetGenericArguments(Type type)
		{
			return null;
		}

		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0x183606C", Offset = "0x183606C", VA = "0x183606C")]
		public static int GetArrayRank(Type type)
		{
			return default(int);
		}

		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0x183608C", Offset = "0x183608C", VA = "0x183608C")]
		public static string GetAssemblyQualifiedName(Type type)
		{
			return null;
		}

		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0x18360AC", Offset = "0x18360AC", VA = "0x18360AC")]
		public static ES3ReflectedMethod GetMethod(Type type, string methodName, Type[] genericParameters, Type[] parameterTypes)
		{
			return null;
		}

		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0x1834F78", Offset = "0x1834F78", VA = "0x1834F78")]
		public static bool TypeIsArray(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0x1833EB8", Offset = "0x1833EB8", VA = "0x1833EB8")]
		public static Type GetElementType(Type type)
		{
			return null;
		}

		[Token(Token = "0x6000CAD")]
		[Address(RVA = "0x18361B8", Offset = "0x18361B8", VA = "0x18361B8")]
		public static bool IsAbstract(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CAE")]
		[Address(RVA = "0x18361D0", Offset = "0x18361D0", VA = "0x18361D0")]
		public static bool IsInterface(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CAF")]
		[Address(RVA = "0x1833E78", Offset = "0x1833E78", VA = "0x1833E78")]
		public static bool IsGenericType(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0x1834F60", Offset = "0x1834F60", VA = "0x1834F60")]
		public static bool IsValueType(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0x18361E8", Offset = "0x18361E8", VA = "0x18361E8")]
		public static bool IsEnum(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0x1834F90", Offset = "0x1834F90", VA = "0x1834F90")]
		public static bool HasParameterlessConstructor(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0x1836208", Offset = "0x1836208", VA = "0x1836208")]
		public static ConstructorInfo GetParameterlessConstructor(Type type)
		{
			return null;
		}

		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0x1836284", Offset = "0x1836284", VA = "0x1836284")]
		public static string GetShortAssemblyQualifiedName(Type type)
		{
			return null;
		}

		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0x18359EC", Offset = "0x18359EC", VA = "0x18359EC")]
		public static PropertyInfo GetProperty(Type type, string propertyName)
		{
			return null;
		}

		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0x1835BD0", Offset = "0x1835BD0", VA = "0x1835BD0")]
		public static FieldInfo GetField(Type type, string fieldName)
		{
			return null;
		}

		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0x1834E64", Offset = "0x1834E64", VA = "0x1834E64")]
		public static bool IsPrimitive(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0x1834454", Offset = "0x1834454", VA = "0x1834454")]
		public static bool AttributeIsDefined(MemberInfo info, Type attributeType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0x1834E40", Offset = "0x1834E40", VA = "0x1834E40")]
		public static bool AttributeIsDefined(Type type, Type attributeType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0x1836368", Offset = "0x1836368", VA = "0x1836368")]
		public static bool ImplementsInterface(Type type, Type interfaceType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0x18347F0", Offset = "0x18347F0", VA = "0x18347F0")]
		public static Type BaseType(Type type)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x200021B")]
	public abstract class ES3SerializableDictionary<TKey, TVal> : Dictionary<TKey, TVal>, ISerializationCallbackReceiver
	{
		[Serializable]
		[Token(Token = "0x2000412")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB09D4", Offset = "0xCB09D4")]
		private sealed class <>c
		{
			[Token(Token = "0x4000EA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000EA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<KeyValuePair<TKey, TVal>, bool> <>9__6_0;

			[Token(Token = "0x4000EA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<KeyValuePair<TKey, TVal>, TKey> <>9__6_1;

			[Token(Token = "0x6001605")]
			public <>c()
			{
			}

			[Token(Token = "0x6001606")]
			internal bool <RemoveNullValues>b__6_0(KeyValuePair<TKey, TVal> pair)
			{
				return default(bool);
			}

			[Token(Token = "0x6001607")]
			internal TKey <RemoveNullValues>b__6_1(KeyValuePair<TKey, TVal> pair)
			{
				return (TKey)null;
			}
		}

		[Token(Token = "0x4000B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private List<TKey> _Keys;

		[Token(Token = "0x4000B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private List<TVal> _Values;

		[Token(Token = "0x6000CBD")]
		protected abstract bool KeysAreEqual(TKey a, TKey b);

		[Token(Token = "0x6000CBE")]
		protected abstract bool ValuesAreEqual(TVal a, TVal b);

		[Token(Token = "0x6000CBF")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6000CC0")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6000CC1")]
		public int RemoveNullValues()
		{
			return default(int);
		}

		[Token(Token = "0x6000CC2")]
		public bool ChangeKey(TKey oldKey, TKey newKey)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CC3")]
		protected ES3SerializableDictionary()
		{
		}
	}
	[Token(Token = "0x200021C")]
	public class ES3BinaryReader : ES3Reader
	{
		[Token(Token = "0x4000B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BinaryReader baseReader;

		[Token(Token = "0x6000CC4")]
		[Address(RVA = "0x1828F20", Offset = "0x1828F20", VA = "0x1828F20")]
		internal ES3BinaryReader(Stream stream, ES3Settings settings, bool readHeaderAndFooter = true)
		{
		}

		[Token(Token = "0x6000CC5")]
		[Address(RVA = "0x1828FCC", Offset = "0x1828FCC", VA = "0x1828FCC", Slot = "21")]
		public override string ReadPropertyName()
		{
			return null;
		}

		[Token(Token = "0x6000CC6")]
		[Address(RVA = "0x1829280", Offset = "0x1829280", VA = "0x1829280", Slot = "22")]
		protected override Type ReadKeyPrefix(bool ignoreType = false)
		{
			return null;
		}

		[Token(Token = "0x6000CC7")]
		[Address(RVA = "0x182950C", Offset = "0x182950C", VA = "0x182950C", Slot = "23")]
		protected override void ReadKeySuffix()
		{
		}

		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0x18295E4", Offset = "0x18295E4", VA = "0x18295E4", Slot = "27")]
		internal override bool StartReadObject()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0x1829620", Offset = "0x1829620", VA = "0x1829620", Slot = "28")]
		internal override void EndReadObject()
		{
		}

		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0x1829628", Offset = "0x1829628", VA = "0x1829628", Slot = "29")]
		internal override bool StartReadDictionary()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0x1829654", Offset = "0x1829654", VA = "0x1829654", Slot = "30")]
		internal override void EndReadDictionary()
		{
		}

		[Token(Token = "0x6000CCC")]
		[Address(RVA = "0x1829658", Offset = "0x1829658", VA = "0x1829658", Slot = "31")]
		internal override bool StartReadDictionaryKey()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CCD")]
		[Address(RVA = "0x1829684", Offset = "0x1829684", VA = "0x1829684", Slot = "32")]
		internal override void EndReadDictionaryKey()
		{
		}

		[Token(Token = "0x6000CCE")]
		[Address(RVA = "0x1829688", Offset = "0x1829688", VA = "0x1829688", Slot = "33")]
		internal override void StartReadDictionaryValue()
		{
		}

		[Token(Token = "0x6000CCF")]
		[Address(RVA = "0x182968C", Offset = "0x182968C", VA = "0x182968C", Slot = "34")]
		internal override bool EndReadDictionaryValue()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CD0")]
		[Address(RVA = "0x1829694", Offset = "0x1829694", VA = "0x1829694", Slot = "35")]
		internal override bool StartReadCollection()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0x18296C0", Offset = "0x18296C0", VA = "0x18296C0", Slot = "36")]
		internal override void EndReadCollection()
		{
		}

		[Token(Token = "0x6000CD2")]
		[Address(RVA = "0x18296C4", Offset = "0x18296C4", VA = "0x18296C4", Slot = "37")]
		internal override bool StartReadCollectionItem()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CD3")]
		[Address(RVA = "0x18296CC", Offset = "0x18296CC", VA = "0x18296CC", Slot = "38")]
		internal override bool EndReadCollectionItem()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0x18296D4", Offset = "0x18296D4", VA = "0x18296D4", Slot = "25")]
		internal override bool Goto(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0x1829770", Offset = "0x1829770", VA = "0x1829770")]
		protected void Reset()
		{
		}

		[Token(Token = "0x6000CD6")]
		[Address(RVA = "0x18297A4", Offset = "0x18297A4", VA = "0x18297A4", Slot = "24")]
		internal override byte[] ReadElement(bool skip = false)
		{
			return null;
		}

		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0x1829A04", Offset = "0x1829A04", VA = "0x1829A04")]
		private void ReadElement(BinaryWriter writer, bool skip = false)
		{
		}

		[Token(Token = "0x6000CD8")]
		[Address(RVA = "0x1829A7C", Offset = "0x1829A7C", VA = "0x1829A7C", Slot = "20")]
		internal override long Read_ref()
		{
			return default(long);
		}

		[Token(Token = "0x6000CD9")]
		[Address(RVA = "0x1829EAC", Offset = "0x1829EAC", VA = "0x1829EAC", Slot = "18")]
		internal override string Read_string()
		{
			return null;
		}

		[Token(Token = "0x6000CDA")]
		[Address(RVA = "0x1829EF4", Offset = "0x1829EF4", VA = "0x1829EF4", Slot = "8")]
		internal override char Read_char()
		{
			return default(char);
		}

		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0x1829F3C", Offset = "0x1829F3C", VA = "0x1829F3C", Slot = "6")]
		internal override float Read_float()
		{
			return default(float);
		}

		[Token(Token = "0x6000CDC")]
		[Address(RVA = "0x1829F84", Offset = "0x1829F84", VA = "0x1829F84", Slot = "5")]
		internal override int Read_int()
		{
			return default(int);
		}

		[Token(Token = "0x6000CDD")]
		[Address(RVA = "0x1829FBC", Offset = "0x1829FBC", VA = "0x1829FBC", Slot = "7")]
		internal override bool Read_bool()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CDE")]
		[Address(RVA = "0x182A000", Offset = "0x182A000", VA = "0x182A000", Slot = "9")]
		internal override decimal Read_decimal()
		{
			return default(decimal);
		}

		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0x182A048", Offset = "0x182A048", VA = "0x182A048", Slot = "10")]
		internal override double Read_double()
		{
			return default(double);
		}

		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0x182A090", Offset = "0x182A090", VA = "0x182A090", Slot = "11")]
		internal override long Read_long()
		{
			return default(long);
		}

		[Token(Token = "0x6000CE1")]
		[Address(RVA = "0x182A0D8", Offset = "0x182A0D8", VA = "0x182A0D8", Slot = "12")]
		internal override ulong Read_ulong()
		{
			return default(ulong);
		}

		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0x182A120", Offset = "0x182A120", VA = "0x182A120", Slot = "17")]
		internal override uint Read_uint()
		{
			return default(uint);
		}

		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0x182A168", Offset = "0x182A168", VA = "0x182A168", Slot = "13")]
		internal override byte Read_byte()
		{
			return default(byte);
		}

		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0x182A1AC", Offset = "0x182A1AC", VA = "0x182A1AC", Slot = "14")]
		internal override sbyte Read_sbyte()
		{
			return default(sbyte);
		}

		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0x182A1F0", Offset = "0x182A1F0", VA = "0x182A1F0", Slot = "15")]
		internal override short Read_short()
		{
			return default(short);
		}

		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0x182A238", Offset = "0x182A238", VA = "0x182A238", Slot = "16")]
		internal override ushort Read_ushort()
		{
			return default(ushort);
		}

		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0x182A280", Offset = "0x182A280", VA = "0x182A280", Slot = "19")]
		internal override byte[] Read_byteArray()
		{
			return null;
		}

		[Token(Token = "0x6000CE8")]
		[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xCB5104", Offset = "0xCB5104")]
		public override T Read<T>(ES3Type type)
		{
			return (T)null;
		}

		[Token(Token = "0x6000CE9")]
		[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xCB5118", Offset = "0xCB5118")]
		public override void ReadInto<T>(object obj, ES3Type type)
		{
		}

		[Token(Token = "0x6000CEA")]
		[Address(RVA = "0x1829448", Offset = "0x1829448", VA = "0x1829448")]
		private int Read7BitEncodedInt()
		{
			return default(int);
		}

		[Token(Token = "0x6000CEB")]
		[Address(RVA = "0x182A2E4", Offset = "0x182A2E4", VA = "0x182A2E4", Slot = "26")]
		public override void Dispose()
		{
		}
	}
	[Token(Token = "0x200021D")]
	public class ES3JSONReader : ES3Reader
	{
		[Token(Token = "0x4000B27")]
		private const char endOfStreamChar = '\uffff';

		[Token(Token = "0x4000B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public StreamReader baseReader;

		[Token(Token = "0x6000CEC")]
		[Address(RVA = "0x182DC30", Offset = "0x182DC30", VA = "0x182DC30")]
		internal ES3JSONReader(Stream stream, ES3Settings settings, bool readHeaderAndFooter = true)
		{
		}

		[Token(Token = "0x6000CED")]
		[Address(RVA = "0x182DE6C", Offset = "0x182DE6C", VA = "0x182DE6C", Slot = "21")]
		public override string ReadPropertyName()
		{
			return null;
		}

		[Token(Token = "0x6000CEE")]
		[Address(RVA = "0x182E3B4", Offset = "0x182E3B4", VA = "0x182E3B4", Slot = "22")]
		protected override Type ReadKeyPrefix(bool ignoreType = false)
		{
			return null;
		}

		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0x182E550", Offset = "0x182E550", VA = "0x182E550", Slot = "23")]
		protected override void ReadKeySuffix()
		{
		}

		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0x182E560", Offset = "0x182E560", VA = "0x182E560", Slot = "27")]
		internal override bool StartReadObject()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0x182E834", Offset = "0x182E834", VA = "0x182E834", Slot = "28")]
		internal override void EndReadObject()
		{
		}

		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0x182E860", Offset = "0x182E860", VA = "0x182E860", Slot = "29")]
		internal override bool StartReadDictionary()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CF3")]
		[Address(RVA = "0x182E870", Offset = "0x182E870", VA = "0x182E870", Slot = "30")]
		internal override void EndReadDictionary()
		{
		}

		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0x182E874", Offset = "0x182E874", VA = "0x182E874", Slot = "31")]
		internal override bool StartReadDictionaryKey()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0x182E8B8", Offset = "0x182E8B8", VA = "0x182E8B8", Slot = "32")]
		internal override void EndReadDictionaryKey()
		{
		}

		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0x182E8C0", Offset = "0x182E8C0", VA = "0x182E8C0", Slot = "33")]
		internal override void StartReadDictionaryValue()
		{
		}

		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0x182E8C4", Offset = "0x182E8C4", VA = "0x182E8C4", Slot = "34")]
		internal override bool EndReadDictionaryValue()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CF8")]
		[Address(RVA = "0x182E9AC", Offset = "0x182E9AC", VA = "0x182E9AC", Slot = "35")]
		internal override bool StartReadCollection()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CF9")]
		[Address(RVA = "0x182E9B4", Offset = "0x182E9B4", VA = "0x182E9B4", Slot = "36")]
		internal override void EndReadCollection()
		{
		}

		[Token(Token = "0x6000CFA")]
		[Address(RVA = "0x182E9B8", Offset = "0x182E9B8", VA = "0x182E9B8", Slot = "37")]
		internal override bool StartReadCollectionItem()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CFB")]
		[Address(RVA = "0x182E9FC", Offset = "0x182E9FC", VA = "0x182E9FC", Slot = "38")]
		internal override bool EndReadCollectionItem()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CFC")]
		[Address(RVA = "0x182EAE4", Offset = "0x182EAE4", VA = "0x182EAE4", Slot = "25")]
		internal override bool Goto(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CFD")]
		[Address(RVA = "0x182EB80", Offset = "0x182EB80", VA = "0x182EB80")]
		protected void Reset()
		{
		}

		[Token(Token = "0x6000CFE")]
		[Address(RVA = "0x182EC18", Offset = "0x182EC18", VA = "0x182EC18")]
		private void ReadString(StreamWriter writer, bool skip = false)
		{
		}

		[Token(Token = "0x6000CFF")]
		[Address(RVA = "0x182ED6C", Offset = "0x182ED6C", VA = "0x182ED6C", Slot = "24")]
		internal override byte[] ReadElement(bool skip = false)
		{
			return null;
		}

		[Token(Token = "0x6000D00")]
		[Address(RVA = "0x182ED08", Offset = "0x182ED08", VA = "0x182ED08")]
		private char ReadOrSkipChar(StreamWriter writer, bool skip)
		{
			return default(char);
		}

		[Token(Token = "0x6000D01")]
		[Address(RVA = "0x182E0AC", Offset = "0x182E0AC", VA = "0x182E0AC")]
		private char ReadCharIgnoreWhitespace(bool ignoreTrailingWhitespace = true)
		{
			return default(char);
		}

		[Token(Token = "0x6000D02")]
		[Address(RVA = "0x182E58C", Offset = "0x182E58C", VA = "0x182E58C")]
		private bool ReadNullOrCharIgnoreWhitespace(char expectedChar)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D03")]
		[Address(RVA = "0x182E1B8", Offset = "0x182E1B8", VA = "0x182E1B8")]
		private char ReadCharIgnoreWhitespace(char expectedChar)
		{
			return default(char);
		}

		[Token(Token = "0x6000D04")]
		[Address(RVA = "0x182F2C4", Offset = "0x182F2C4", VA = "0x182F2C4")]
		private bool ReadQuotationMarkOrNullIgnoreWhitespace()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D05")]
		[Address(RVA = "0x182F498", Offset = "0x182F498", VA = "0x182F498")]
		private char PeekCharIgnoreWhitespace(char expectedChar)
		{
			return default(char);
		}

		[Token(Token = "0x6000D06")]
		[Address(RVA = "0x182E018", Offset = "0x182E018", VA = "0x182E018")]
		private char PeekCharIgnoreWhitespace()
		{
			return default(char);
		}

		[Token(Token = "0x6000D07")]
		[Address(RVA = "0x182F690", Offset = "0x182F690", VA = "0x182F690")]
		private void SkipWhiteSpace()
		{
		}

		[Token(Token = "0x6000D08")]
		[Address(RVA = "0x182DD98", Offset = "0x182DD98", VA = "0x182DD98")]
		private void SkipOpeningBraceOfFile()
		{
		}

		[Token(Token = "0x6000D09")]
		[Address(RVA = "0x182F28C", Offset = "0x182F28C", VA = "0x182F28C")]
		private static bool IsWhiteSpace(char c)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0x182F208", Offset = "0x182F208", VA = "0x182F208")]
		private static bool IsOpeningBrace(char c)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0x182F21C", Offset = "0x182F21C", VA = "0x182F21C")]
		private static bool IsEndOfValue(char c)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0x182E098", Offset = "0x182E098", VA = "0x182E098")]
		private static bool IsTerminator(char c)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0x182E18C", Offset = "0x182E18C", VA = "0x182E18C")]
		private static bool IsQuotationMark(char c)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0x182F710", Offset = "0x182F710", VA = "0x182F710")]
		private static bool IsEndOfStream(char c)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0x182F720", Offset = "0x182F720", VA = "0x182F720")]
		private string GetValueString()
		{
			return null;
		}

		[Token(Token = "0x6000D10")]
		[Address(RVA = "0x182F7FC", Offset = "0x182F7FC", VA = "0x182F7FC", Slot = "18")]
		internal override string Read_string()
		{
			return null;
		}

		[Token(Token = "0x6000D11")]
		[Address(RVA = "0x182F9B8", Offset = "0x182F9B8", VA = "0x182F9B8", Slot = "20")]
		internal override long Read_ref()
		{
			return default(long);
		}

		[Token(Token = "0x6000D12")]
		[Address(RVA = "0x182FAE8", Offset = "0x182FAE8", VA = "0x182FAE8", Slot = "8")]
		internal override char Read_char()
		{
			return default(char);
		}

		[Token(Token = "0x6000D13")]
		[Address(RVA = "0x182FB6C", Offset = "0x182FB6C", VA = "0x182FB6C", Slot = "6")]
		internal override float Read_float()
		{
			return default(float);
		}

		[Token(Token = "0x6000D14")]
		[Address(RVA = "0x182FBF0", Offset = "0x182FBF0", VA = "0x182FBF0", Slot = "5")]
		internal override int Read_int()
		{
			return default(int);
		}

		[Token(Token = "0x6000D15")]
		[Address(RVA = "0x182FC08", Offset = "0x182FC08", VA = "0x182FC08", Slot = "7")]
		internal override bool Read_bool()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D16")]
		[Address(RVA = "0x182FC80", Offset = "0x182FC80", VA = "0x182FC80", Slot = "9")]
		internal override decimal Read_decimal()
		{
			return default(decimal);
		}

		[Token(Token = "0x6000D17")]
		[Address(RVA = "0x182FD2C", Offset = "0x182FD2C", VA = "0x182FD2C", Slot = "10")]
		internal override double Read_double()
		{
			return default(double);
		}

		[Token(Token = "0x6000D18")]
		[Address(RVA = "0x182FDD8", Offset = "0x182FDD8", VA = "0x182FDD8", Slot = "11")]
		internal override long Read_long()
		{
			return default(long);
		}

		[Token(Token = "0x6000D19")]
		[Address(RVA = "0x182FDF0", Offset = "0x182FDF0", VA = "0x182FDF0", Slot = "12")]
		internal override ulong Read_ulong()
		{
			return default(ulong);
		}

		[Token(Token = "0x6000D1A")]
		[Address(RVA = "0x182FE08", Offset = "0x182FE08", VA = "0x182FE08", Slot = "17")]
		internal override uint Read_uint()
		{
			return default(uint);
		}

		[Token(Token = "0x6000D1B")]
		[Address(RVA = "0x182FE20", Offset = "0x182FE20", VA = "0x182FE20", Slot = "13")]
		internal override byte Read_byte()
		{
			return default(byte);
		}

		[Token(Token = "0x6000D1C")]
		[Address(RVA = "0x182FE3C", Offset = "0x182FE3C", VA = "0x182FE3C", Slot = "14")]
		internal override sbyte Read_sbyte()
		{
			return default(sbyte);
		}

		[Token(Token = "0x6000D1D")]
		[Address(RVA = "0x182FE58", Offset = "0x182FE58", VA = "0x182FE58", Slot = "15")]
		internal override short Read_short()
		{
			return default(short);
		}

		[Token(Token = "0x6000D1E")]
		[Address(RVA = "0x182FE74", Offset = "0x182FE74", VA = "0x182FE74", Slot = "16")]
		internal override ushort Read_ushort()
		{
			return default(ushort);
		}

		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0x182FE90", Offset = "0x182FE90", VA = "0x182FE90", Slot = "19")]
		internal override byte[] Read_byteArray()
		{
			return null;
		}

		[Token(Token = "0x6000D20")]
		[Address(RVA = "0x182FF14", Offset = "0x182FF14", VA = "0x182FF14", Slot = "26")]
		public override void Dispose()
		{
		}
	}
	[Token(Token = "0x200021E")]
	public class ES3GlobalReferences : ScriptableObject
	{
		[Token(Token = "0x170000F8")]
		public static ES3GlobalReferences Instance
		{
			[Token(Token = "0x6000D21")]
			[Address(RVA = "0x182D04C", Offset = "0x182D04C", VA = "0x182D04C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D22")]
		[Address(RVA = "0x182D054", Offset = "0x182D054", VA = "0x182D054")]
		public UnityEngine.Object Get(long id)
		{
			return null;
		}

		[Token(Token = "0x6000D23")]
		[Address(RVA = "0x182D05C", Offset = "0x182D05C", VA = "0x182D05C")]
		public long GetOrAdd(UnityEngine.Object obj)
		{
			return default(long);
		}

		[Token(Token = "0x6000D24")]
		[Address(RVA = "0x182D064", Offset = "0x182D064", VA = "0x182D064")]
		public void RemoveInvalidKeys()
		{
		}

		[Token(Token = "0x6000D25")]
		[Address(RVA = "0x182D068", Offset = "0x182D068", VA = "0x182D068")]
		public ES3GlobalReferences()
		{
		}
	}
	[Token(Token = "0x200021F")]
	public class ES3DefaultSettings : MonoBehaviour
	{
		[Token(Token = "0x4000B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public ES3SerializableSettings settings;

		[Token(Token = "0x4000B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool autoUpdateReferences;

		[Token(Token = "0x6000D26")]
		[Address(RVA = "0x182CD08", Offset = "0x182CD08", VA = "0x182CD08")]
		public ES3DefaultSettings()
		{
		}
	}
	[Token(Token = "0x2000220")]
	public enum ES3FileMode
	{
		[Token(Token = "0x4000B2C")]
		Read,
		[Token(Token = "0x4000B2D")]
		Write,
		[Token(Token = "0x4000B2E")]
		Append
	}
	[Token(Token = "0x2000221")]
	public class ES3FileStream : FileStream
	{
		[Token(Token = "0x4000B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool isDisposed;

		[Token(Token = "0x6000D27")]
		[Address(RVA = "0x182CD18", Offset = "0x182CD18", VA = "0x182CD18")]
		public ES3FileStream(string path, ES3FileMode fileMode, int bufferSize, bool useAsync)
		{
		}

		[Token(Token = "0x6000D28")]
		[Address(RVA = "0x182CDEC", Offset = "0x182CDEC", VA = "0x182CDEC")]
		protected static string GetPath(string path, ES3FileMode fileMode)
		{
			return null;
		}

		[Token(Token = "0x6000D29")]
		[Address(RVA = "0x182CEF0", Offset = "0x182CEF0", VA = "0x182CEF0")]
		protected static FileMode GetFileMode(ES3FileMode fileMode)
		{
			return default(FileMode);
		}

		[Token(Token = "0x6000D2A")]
		[Address(RVA = "0x182CF10", Offset = "0x182CF10", VA = "0x182CF10")]
		protected static FileAccess GetFileAccess(ES3FileMode fileMode)
		{
			return default(FileAccess);
		}

		[Token(Token = "0x6000D2B")]
		[Address(RVA = "0x182D02C", Offset = "0x182D02C", VA = "0x182D02C", Slot = "16")]
		protected override void Dispose(bool disposing)
		{
		}
	}
	[Token(Token = "0x2000222")]
	internal class ES3PlayerPrefsStream : MemoryStream
	{
		[Token(Token = "0x4000B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string path;

		[Token(Token = "0x4000B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool append;

		[Token(Token = "0x4000B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool isWriteStream;

		[Token(Token = "0x4000B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		private bool isDisposed;

		[Token(Token = "0x6000D2C")]
		[Address(RVA = "0x1830EFC", Offset = "0x1830EFC", VA = "0x1830EFC")]
		public ES3PlayerPrefsStream(string path)
		{
		}

		[Token(Token = "0x6000D2D")]
		[Address(RVA = "0x1831038", Offset = "0x1831038", VA = "0x1831038")]
		public ES3PlayerPrefsStream(string path, int bufferSize, bool append = false)
		{
		}

		[Token(Token = "0x6000D2E")]
		[Address(RVA = "0x1830F4C", Offset = "0x1830F4C", VA = "0x1830F4C")]
		private static byte[] GetData(string path, bool isWriteStream)
		{
			return null;
		}

		[Token(Token = "0x6000D2F")]
		[Address(RVA = "0x1831090", Offset = "0x1831090", VA = "0x1831090", Slot = "16")]
		protected override void Dispose(bool disposing)
		{
		}
	}
	[Token(Token = "0x2000223")]
	internal class ES3ResourcesStream : MemoryStream
	{
		[Token(Token = "0x170000F9")]
		public bool Exists
		{
			[Token(Token = "0x6000D30")]
			[Address(RVA = "0x1836BA0", Offset = "0x1836BA0", VA = "0x1836BA0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000D31")]
		[Address(RVA = "0x1836BC4", Offset = "0x1836BC4", VA = "0x1836BC4")]
		public ES3ResourcesStream(string path)
		{
		}

		[Token(Token = "0x6000D32")]
		[Address(RVA = "0x1836BF4", Offset = "0x1836BF4", VA = "0x1836BF4")]
		private static byte[] GetData(string path)
		{
			return null;
		}

		[Token(Token = "0x6000D33")]
		[Address(RVA = "0x1836CE0", Offset = "0x1836CE0", VA = "0x1836CE0", Slot = "16")]
		protected override void Dispose(bool disposing)
		{
		}
	}
	[Token(Token = "0x2000224")]
	public static class ES3Stream
	{
		[Token(Token = "0x6000D34")]
		[Address(RVA = "0x1836CEC", Offset = "0x1836CEC", VA = "0x1836CEC")]
		public static Stream CreateStream(ES3Settings settings, ES3FileMode fileMode)
		{
			return null;
		}

		[Token(Token = "0x6000D35")]
		[Address(RVA = "0x1826ACC", Offset = "0x1826ACC", VA = "0x1826ACC")]
		public static Stream CreateStream(Stream stream, ES3Settings settings, ES3FileMode fileMode)
		{
			return null;
		}
	}
	[Token(Token = "0x2000225")]
	public class ES3Member
	{
		[Token(Token = "0x4000B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4000B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Type type;

		[Token(Token = "0x4000B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isProperty;

		[Token(Token = "0x4000B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ES3Reflection.ES3ReflectedMember reflectedMember;

		[Token(Token = "0x4000B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool useReflection;

		[Token(Token = "0x6000D36")]
		[Address(RVA = "0x1830D90", Offset = "0x1830D90", VA = "0x1830D90")]
		public ES3Member(string name, Type type, bool isProperty)
		{
		}

		[Token(Token = "0x6000D37")]
		[Address(RVA = "0x1830DF0", Offset = "0x1830DF0", VA = "0x1830DF0")]
		public ES3Member(ES3Reflection.ES3ReflectedMember reflectedMember)
		{
		}
	}
	[Token(Token = "0x2000226")]
	[Preserve]
	public static class ES3TypeMgr
	{
		[Token(Token = "0x4000B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static object _lock;

		[Token(Token = "0x4000B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xCB2050", Offset = "0xCB2050")]
		public static Dictionary<Type, ES3Type> types;

		[Token(Token = "0x4000B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static ES3Type lastAccessedType;

		[Token(Token = "0x6000D38")]
		[Address(RVA = "0x182AE6C", Offset = "0x182AE6C", VA = "0x182AE6C")]
		public static ES3Type GetOrCreateES3Type(Type type, bool throwException = true)
		{
			return null;
		}

		[Token(Token = "0x6000D39")]
		[Address(RVA = "0x1837BEC", Offset = "0x1837BEC", VA = "0x1837BEC")]
		public static ES3Type GetES3Type(Type type)
		{
			return null;
		}

		[Token(Token = "0x6000D3A")]
		[Address(RVA = "0x1837CE8", Offset = "0x1837CE8", VA = "0x1837CE8")]
		internal static void Add(Type type, ES3Type es3Type)
		{
		}

		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0x18372EC", Offset = "0x18372EC", VA = "0x18372EC")]
		internal static ES3Type CreateES3Type(Type type, bool throwException = true)
		{
			return null;
		}

		[Token(Token = "0x6000D3C")]
		[Address(RVA = "0x18370F0", Offset = "0x18370F0", VA = "0x18370F0")]
		internal static void Init()
		{
		}
	}
	[Token(Token = "0x2000227")]
	public class ES3WebClass
	{
		[Token(Token = "0x2000413")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB09E4", Offset = "0xCB09E4")]
		private sealed class <SendWebRequest>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000EA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000EA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000EA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ES3WebClass <>4__this;

			[Token(Token = "0x4000EA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UnityWebRequest webRequest;

			[Token(Token = "0x170001B8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600160B")]
				[Address(RVA = "0x1AA5828", Offset = "0x1AA5828", VA = "0x1AA5828", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001B9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600160D")]
				[Address(RVA = "0x1AA5890", Offset = "0x1AA5890", VA = "0x1AA5890", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001608")]
			[Address(RVA = "0x1AA5740", Offset = "0x1AA5740", VA = "0x1AA5740")]
			[DebuggerHidden]
			public <SendWebRequest>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6001609")]
			[Address(RVA = "0x1AA57A0", Offset = "0x1AA57A0", VA = "0x1AA57A0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600160A")]
			[Address(RVA = "0x1AA57A4", Offset = "0x1AA57A4", VA = "0x1AA57A4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600160C")]
			[Address(RVA = "0x1AA5830", Offset = "0x1AA5830", VA = "0x1AA5830", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected string url;

		[Token(Token = "0x4000B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected string apiKey;

		[Token(Token = "0x4000B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected List<KeyValuePair<string, string>> formData;

		[Token(Token = "0x4000B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected UnityWebRequest _webRequest;

		[Token(Token = "0x4000B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool isDone;

		[Token(Token = "0x4000B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string error;

		[Token(Token = "0x4000B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public long errorCode;

		[Token(Token = "0x170000FA")]
		public float uploadProgress
		{
			[Token(Token = "0x6000D3E")]
			[Address(RVA = "0x1AA5160", Offset = "0x1AA5160", VA = "0x1AA5160")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000FB")]
		public float downloadProgress
		{
			[Token(Token = "0x6000D3F")]
			[Address(RVA = "0x1AA5178", Offset = "0x1AA5178", VA = "0x1AA5178")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000FC")]
		public bool isError
		{
			[Token(Token = "0x6000D40")]
			[Address(RVA = "0x1AA5190", Offset = "0x1AA5190", VA = "0x1AA5190")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000D41")]
		[Address(RVA = "0x1AA51D0", Offset = "0x1AA51D0", VA = "0x1AA51D0")]
		protected ES3WebClass(string url, string apiKey)
		{
		}

		[Token(Token = "0x6000D42")]
		[Address(RVA = "0x1AA527C", Offset = "0x1AA527C", VA = "0x1AA527C")]
		public void AddPOSTField(string fieldName, string value)
		{
		}

		[Token(Token = "0x6000D43")]
		[Address(RVA = "0x1AA5318", Offset = "0x1AA5318", VA = "0x1AA5318")]
		protected string GetUser(string user, string password)
		{
			return null;
		}

		[Token(Token = "0x6000D44")]
		[Address(RVA = "0x1AA53BC", Offset = "0x1AA53BC", VA = "0x1AA53BC")]
		protected WWWForm CreateWWWForm()
		{
			return null;
		}

		[Token(Token = "0x6000D45")]
		[Address(RVA = "0x1AA54D8", Offset = "0x1AA54D8", VA = "0x1AA54D8")]
		protected bool HandleError(UnityWebRequest webRequest, bool errorIfDataIsDownloaded)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D46")]
		[Address(RVA = "0x1AA56A8", Offset = "0x1AA56A8", VA = "0x1AA56A8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCB512C", Offset = "0xCB512C")]
		protected IEnumerator SendWebRequest(UnityWebRequest webRequest)
		{
			return null;
		}

		[Token(Token = "0x6000D47")]
		[Address(RVA = "0x1AA576C", Offset = "0x1AA576C", VA = "0x1AA576C", Slot = "4")]
		protected virtual void Reset()
		{
		}
	}
	[Token(Token = "0x2000228")]
	internal enum ES3SpecialByte : byte
	{
		[Token(Token = "0x4000B44")]
		Null = 0,
		[Token(Token = "0x4000B45")]
		Bool = 1,
		[Token(Token = "0x4000B46")]
		Byte = 2,
		[Token(Token = "0x4000B47")]
		Sbyte = 3,
		[Token(Token = "0x4000B48")]
		Char = 4,
		[Token(Token = "0x4000B49")]
		Decimal = 5,
		[Token(Token = "0x4000B4A")]
		Double = 6,
		[Token(Token = "0x4000B4B")]
		Float = 7,
		[Token(Token = "0x4000B4C")]
		Int = 8,
		[Token(Token = "0x4000B4D")]
		Uint = 9,
		[Token(Token = "0x4000B4E")]
		Long = 10,
		[Token(Token = "0x4000B4F")]
		Ulong = 11,
		[Token(Token = "0x4000B50")]
		Short = 12,
		[Token(Token = "0x4000B51")]
		Ushort = 13,
		[Token(Token = "0x4000B52")]
		String = 14,
		[Token(Token = "0x4000B53")]
		ByteArray = 15,
		[Token(Token = "0x4000B54")]
		Collection = 128,
		[Token(Token = "0x4000B55")]
		Dictionary = 129,
		[Token(Token = "0x4000B56")]
		CollectionItem = 130,
		[Token(Token = "0x4000B57")]
		Object = 254,
		[Token(Token = "0x4000B58")]
		Terminator = byte.MaxValue
	}
	[Token(Token = "0x2000229")]
	internal static class ES3Binary
	{
		[Token(Token = "0x4000B59")]
		internal const string ObjectTerminator = ".";

		[Token(Token = "0x4000B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static readonly Dictionary<ES3SpecialByte, Type> IdToType;

		[Token(Token = "0x4000B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal static readonly Dictionary<Type, ES3SpecialByte> TypeToId;

		[Token(Token = "0x6000D48")]
		[Address(RVA = "0x1828790", Offset = "0x1828790", VA = "0x1828790")]
		internal static ES3SpecialByte TypeToByte(Type type)
		{
			return default(ES3SpecialByte);
		}

		[Token(Token = "0x6000D49")]
		[Address(RVA = "0x1828838", Offset = "0x1828838", VA = "0x1828838")]
		internal static Type ByteToType(ES3SpecialByte b)
		{
			return null;
		}

		[Token(Token = "0x6000D4A")]
		[Address(RVA = "0x182889C", Offset = "0x182889C", VA = "0x182889C")]
		internal static Type ByteToType(byte b)
		{
			return null;
		}

		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0x1828978", Offset = "0x1828978", VA = "0x1828978")]
		internal static bool IsPrimitive(ES3SpecialByte b)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200022A")]
	internal class ES3BinaryWriter : ES3Writer
	{
		[Token(Token = "0x4000B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal BinaryWriter baseWriter;

		[Token(Token = "0x6000D4D")]
		[Address(RVA = "0x182A304", Offset = "0x182A304", VA = "0x182A304")]
		public ES3BinaryWriter(Stream stream, ES3Settings settings)
		{
		}

		[Token(Token = "0x6000D4E")]
		[Address(RVA = "0x182A310", Offset = "0x182A310", VA = "0x182A310")]
		internal ES3BinaryWriter(Stream stream, ES3Settings settings, bool writeHeaderAndFooter, bool mergeKeys)
		{
		}

		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0x182A3D4", Offset = "0x182A3D4", VA = "0x182A3D4", Slot = "39")]
		internal override void Write(string key, Type type, byte[] value)
		{
		}

		[Token(Token = "0x6000D50")]
		[Address(RVA = "0x182A91C", Offset = "0x182A91C", VA = "0x182A91C", Slot = "41")]
		[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xCB5190", Offset = "0xCB5190")]
		public override void Write(Type type, string key, object value)
		{
		}

		[Token(Token = "0x6000D51")]
		[Address(RVA = "0x182B0A8", Offset = "0x182B0A8", VA = "0x182B0A8", Slot = "46")]
		public override void WriteProperty(string name, object value, ES3.ReferenceMode memberReferenceMode)
		{
		}

		[Token(Token = "0x6000D52")]
		[Address(RVA = "0x182B558", Offset = "0x182B558", VA = "0x182B558", Slot = "49")]
		[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xCB51A4", Offset = "0xCB51A4")]
		public override void WriteProperty(string name, object value, ES3Type type, ES3.ReferenceMode memberReferenceMode)
		{
		}

		[Token(Token = "0x6000D53")]
		[Address(RVA = "0x182BA18", Offset = "0x182BA18", VA = "0x182BA18", Slot = "50")]
		[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xCB51B8", Offset = "0xCB51B8")]
		public override void WritePropertyByRef(string name, UnityEngine.Object value)
		{
		}

		[Token(Token = "0x6000D54")]
		[Address(RVA = "0x182BF68", Offset = "0x182BF68", VA = "0x182BF68", Slot = "24")]
		internal override void WritePrimitive(int value)
		{
		}

		[Token(Token = "0x6000D55")]
		[Address(RVA = "0x182BFAC", Offset = "0x182BFAC", VA = "0x182BFAC", Slot = "25")]
		internal override void WritePrimitive(float value)
		{
		}

		[Token(Token = "0x6000D56")]
		[Address(RVA = "0x182C008", Offset = "0x182C008", VA = "0x182C008", Slot = "26")]
		internal override void WritePrimitive(bool value)
		{
		}

		[Token(Token = "0x6000D57")]
		[Address(RVA = "0x182C058", Offset = "0x182C058", VA = "0x182C058", Slot = "27")]
		internal override void WritePrimitive(decimal value)
		{
		}

		[Token(Token = "0x6000D58")]
		[Address(RVA = "0x182C0BC", Offset = "0x182C0BC", VA = "0x182C0BC", Slot = "28")]
		internal override void WritePrimitive(double value)
		{
		}

		[Token(Token = "0x6000D59")]
		[Address(RVA = "0x182C118", Offset = "0x182C118", VA = "0x182C118", Slot = "29")]
		internal override void WritePrimitive(long value)
		{
		}

		[Token(Token = "0x6000D5A")]
		[Address(RVA = "0x182C16C", Offset = "0x182C16C", VA = "0x182C16C", Slot = "30")]
		internal override void WritePrimitive(ulong value)
		{
		}

		[Token(Token = "0x6000D5B")]
		[Address(RVA = "0x182C1C0", Offset = "0x182C1C0", VA = "0x182C1C0", Slot = "31")]
		internal override void WritePrimitive(uint value)
		{
		}

		[Token(Token = "0x6000D5C")]
		[Address(RVA = "0x182C214", Offset = "0x182C214", VA = "0x182C214", Slot = "32")]
		internal override void WritePrimitive(byte value)
		{
		}

		[Token(Token = "0x6000D5D")]
		[Address(RVA = "0x182C264", Offset = "0x182C264", VA = "0x182C264", Slot = "33")]
		internal override void WritePrimitive(sbyte value)
		{
		}

		[Token(Token = "0x6000D5E")]
		[Address(RVA = "0x182C2B4", Offset = "0x182C2B4", VA = "0x182C2B4", Slot = "34")]
		internal override void WritePrimitive(short value)
		{
		}

		[Token(Token = "0x6000D5F")]
		[Address(RVA = "0x182C308", Offset = "0x182C308", VA = "0x182C308", Slot = "35")]
		internal override void WritePrimitive(ushort value)
		{
		}

		[Token(Token = "0x6000D60")]
		[Address(RVA = "0x182C35C", Offset = "0x182C35C", VA = "0x182C35C", Slot = "36")]
		internal override void WritePrimitive(char value)
		{
		}

		[Token(Token = "0x6000D61")]
		[Address(RVA = "0x182C3B0", Offset = "0x182C3B0", VA = "0x182C3B0", Slot = "38")]
		internal override void WritePrimitive(byte[] value)
		{
		}

		[Token(Token = "0x6000D62")]
		[Address(RVA = "0x182C420", Offset = "0x182C420", VA = "0x182C420", Slot = "37")]
		internal override void WritePrimitive(string value)
		{
		}

		[Token(Token = "0x6000D63")]
		[Address(RVA = "0x182A8C0", Offset = "0x182A8C0", VA = "0x182A8C0")]
		private void Write7BitEncodedInt(int value)
		{
		}

		[Token(Token = "0x6000D64")]
		[Address(RVA = "0x182C474", Offset = "0x182C474", VA = "0x182C474", Slot = "5")]
		internal override void WriteNull()
		{
		}

		[Token(Token = "0x6000D65")]
		[Address(RVA = "0x182C498", Offset = "0x182C498", VA = "0x182C498", Slot = "23")]
		internal override void WriteRawProperty(string name, byte[] value)
		{
		}

		[Token(Token = "0x6000D66")]
		[Address(RVA = "0x182C50C", Offset = "0x182C50C", VA = "0x182C50C", Slot = "6")]
		internal override void StartWriteFile()
		{
		}

		[Token(Token = "0x6000D67")]
		[Address(RVA = "0x182C514", Offset = "0x182C514", VA = "0x182C514", Slot = "7")]
		internal override void EndWriteFile()
		{
		}

		[Token(Token = "0x6000D68")]
		[Address(RVA = "0x182C584", Offset = "0x182C584", VA = "0x182C584", Slot = "10")]
		internal override void StartWriteProperty(string name)
		{
		}

		[Token(Token = "0x6000D69")]
		[Address(RVA = "0x182C5C8", Offset = "0x182C5C8", VA = "0x182C5C8", Slot = "11")]
		internal override void EndWriteProperty(string name)
		{
		}

		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0x182C5D0", Offset = "0x182C5D0", VA = "0x182C5D0", Slot = "8")]
		internal override void StartWriteObject(string name)
		{
		}

		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0x182C60C", Offset = "0x182C60C", VA = "0x182C60C", Slot = "9")]
		internal override void EndWriteObject(string name)
		{
		}

		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0x182C68C", Offset = "0x182C68C", VA = "0x182C68C", Slot = "12")]
		internal override void StartWriteCollection()
		{
		}

		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0x182C6C8", Offset = "0x182C6C8", VA = "0x182C6C8", Slot = "13")]
		internal override void EndWriteCollection()
		{
		}

		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0x182C708", Offset = "0x182C708", VA = "0x182C708", Slot = "14")]
		internal override void StartWriteCollectionItem(int index)
		{
		}

		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0x182C70C", Offset = "0x182C70C", VA = "0x182C70C", Slot = "15")]
		internal override void EndWriteCollectionItem(int index)
		{
		}

		[Token(Token = "0x6000D70")]
		[Address(RVA = "0x182C730", Offset = "0x182C730", VA = "0x182C730", Slot = "16")]
		internal override void StartWriteDictionary()
		{
		}

		[Token(Token = "0x6000D71")]
		[Address(RVA = "0x182C774", Offset = "0x182C774", VA = "0x182C774", Slot = "17")]
		internal override void EndWriteDictionary()
		{
		}

		[Token(Token = "0x6000D72")]
		[Address(RVA = "0x182C7BC", Offset = "0x182C7BC", VA = "0x182C7BC", Slot = "18")]
		internal override void StartWriteDictionaryKey(int index)
		{
		}

		[Token(Token = "0x6000D73")]
		[Address(RVA = "0x182C7C0", Offset = "0x182C7C0", VA = "0x182C7C0", Slot = "19")]
		internal override void EndWriteDictionaryKey(int index)
		{
		}

		[Token(Token = "0x6000D74")]
		[Address(RVA = "0x182C7C4", Offset = "0x182C7C4", VA = "0x182C7C4", Slot = "20")]
		internal override void StartWriteDictionaryValue(int index)
		{
		}

		[Token(Token = "0x6000D75")]
		[Address(RVA = "0x182C7C8", Offset = "0x182C7C8", VA = "0x182C7C8", Slot = "21")]
		internal override void EndWriteDictionaryValue(int index)
		{
		}

		[Token(Token = "0x6000D76")]
		[Address(RVA = "0x182C7CC", Offset = "0x182C7CC", VA = "0x182C7CC", Slot = "22")]
		public override void Dispose()
		{
		}
	}
	[Token(Token = "0x200022B")]
	internal class ES3CacheWriter : ES3Writer
	{
		[Token(Token = "0x4000B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ES3File es3File;

		[Token(Token = "0x6000D77")]
		[Address(RVA = "0x182C7EC", Offset = "0x182C7EC", VA = "0x182C7EC")]
		internal ES3CacheWriter(ES3Settings settings, bool writeHeaderAndFooter, bool mergeKeys)
		{
		}

		[Token(Token = "0x6000D78")]
		public override void Write<T>(string key, object value)
		{
		}

		[Token(Token = "0x6000D79")]
		[Address(RVA = "0x182C88C", Offset = "0x182C88C", VA = "0x182C88C", Slot = "39")]
		internal override void Write(string key, Type type, byte[] value)
		{
		}

		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0x182CA94", Offset = "0x182CA94", VA = "0x182CA94", Slot = "41")]
		[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xCB51CC", Offset = "0xCB51CC")]
		public override void Write(Type type, string key, object value)
		{
		}

		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0x182CB04", Offset = "0x182CB04", VA = "0x182CB04", Slot = "24")]
		internal override void WritePrimitive(int value)
		{
		}

		[Token(Token = "0x6000D7C")]
		[Address(RVA = "0x182CB08", Offset = "0x182CB08", VA = "0x182CB08", Slot = "25")]
		internal override void WritePrimitive(float value)
		{
		}

		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0x182CB0C", Offset = "0x182CB0C", VA = "0x182CB0C", Slot = "26")]
		internal override void WritePrimitive(bool value)
		{
		}

		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0x182CB10", Offset = "0x182CB10", VA = "0x182CB10", Slot = "27")]
		internal override void WritePrimitive(decimal value)
		{
		}

		[Token(Token = "0x6000D7F")]
		[Address(RVA = "0x182CB14", Offset = "0x182CB14", VA = "0x182CB14", Slot = "28")]
		internal override void WritePrimitive(double value)
		{
		}

		[Token(Token = "0x6000D80")]
		[Address(RVA = "0x182CB18", Offset = "0x182CB18", VA = "0x182CB18", Slot = "29")]
		internal override void WritePrimitive(long value)
		{
		}

		[Token(Token = "0x6000D81")]
		[Address(RVA = "0x182CB1C", Offset = "0x182CB1C", VA = "0x182CB1C", Slot = "30")]
		internal override void WritePrimitive(ulong value)
		{
		}

		[Token(Token = "0x6000D82")]
		[Address(RVA = "0x182CB20", Offset = "0x182CB20", VA = "0x182CB20", Slot = "31")]
		internal override void WritePrimitive(uint value)
		{
		}

		[Token(Token = "0x6000D83")]
		[Address(RVA = "0x182CB24", Offset = "0x182CB24", VA = "0x182CB24", Slot = "32")]
		internal override void WritePrimitive(byte value)
		{
		}

		[Token(Token = "0x6000D84")]
		[Address(RVA = "0x182CB28", Offset = "0x182CB28", VA = "0x182CB28", Slot = "33")]
		internal override void WritePrimitive(sbyte value)
		{
		}

		[Token(Token = "0x6000D85")]
		[Address(RVA = "0x182CB2C", Offset = "0x182CB2C", VA = "0x182CB2C", Slot = "34")]
		internal override void WritePrimitive(short value)
		{
		}

		[Token(Token = "0x6000D86")]
		[Address(RVA = "0x182CB30", Offset = "0x182CB30", VA = "0x182CB30", Slot = "35")]
		internal override void WritePrimitive(ushort value)
		{
		}

		[Token(Token = "0x6000D87")]
		[Address(RVA = "0x182CB34", Offset = "0x182CB34", VA = "0x182CB34", Slot = "36")]
		internal override void WritePrimitive(char value)
		{
		}

		[Token(Token = "0x6000D88")]
		[Address(RVA = "0x182CB38", Offset = "0x182CB38", VA = "0x182CB38", Slot = "38")]
		internal override void WritePrimitive(byte[] value)
		{
		}

		[Token(Token = "0x6000D89")]
		[Address(RVA = "0x182CB3C", Offset = "0x182CB3C", VA = "0x182CB3C", Slot = "37")]
		internal override void WritePrimitive(string value)
		{
		}

		[Token(Token = "0x6000D8A")]
		[Address(RVA = "0x182CB40", Offset = "0x182CB40", VA = "0x182CB40", Slot = "5")]
		internal override void WriteNull()
		{
		}

		[Token(Token = "0x6000D8B")]
		[Address(RVA = "0x182CB44", Offset = "0x182CB44", VA = "0x182CB44")]
		private static bool CharacterRequiresEscaping(char c)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D8C")]
		[Address(RVA = "0x182CB4C", Offset = "0x182CB4C", VA = "0x182CB4C")]
		private void WriteCommaIfRequired()
		{
		}

		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0x182CB50", Offset = "0x182CB50", VA = "0x182CB50", Slot = "23")]
		internal override void WriteRawProperty(string name, byte[] value)
		{
		}

		[Token(Token = "0x6000D8E")]
		[Address(RVA = "0x182CB54", Offset = "0x182CB54", VA = "0x182CB54", Slot = "6")]
		internal override void StartWriteFile()
		{
		}

		[Token(Token = "0x6000D8F")]
		[Address(RVA = "0x182CB58", Offset = "0x182CB58", VA = "0x182CB58", Slot = "7")]
		internal override void EndWriteFile()
		{
		}

		[Token(Token = "0x6000D90")]
		[Address(RVA = "0x182CB5C", Offset = "0x182CB5C", VA = "0x182CB5C", Slot = "10")]
		internal override void StartWriteProperty(string name)
		{
		}

		[Token(Token = "0x6000D91")]
		[Address(RVA = "0x182CB60", Offset = "0x182CB60", VA = "0x182CB60", Slot = "11")]
		internal override void EndWriteProperty(string name)
		{
		}

		[Token(Token = "0x6000D92")]
		[Address(RVA = "0x182CB64", Offset = "0x182CB64", VA = "0x182CB64", Slot = "8")]
		internal override void StartWriteObject(string name)
		{
		}

		[Token(Token = "0x6000D93")]
		[Address(RVA = "0x182CB68", Offset = "0x182CB68", VA = "0x182CB68", Slot = "9")]
		internal override void EndWriteObject(string name)
		{
		}

		[Token(Token = "0x6000D94")]
		[Address(RVA = "0x182CB6C", Offset = "0x182CB6C", VA = "0x182CB6C", Slot = "12")]
		internal override void StartWriteCollection()
		{
		}

		[Token(Token = "0x6000D95")]
		[Address(RVA = "0x182CB70", Offset = "0x182CB70", VA = "0x182CB70", Slot = "13")]
		internal override void EndWriteCollection()
		{
		}

		[Token(Token = "0x6000D96")]
		[Address(RVA = "0x182CB74", Offset = "0x182CB74", VA = "0x182CB74", Slot = "14")]
		internal override void StartWriteCollectionItem(int index)
		{
		}

		[Token(Token = "0x6000D97")]
		[Address(RVA = "0x182CB78", Offset = "0x182CB78", VA = "0x182CB78", Slot = "15")]
		internal override void EndWriteCollectionItem(int index)
		{
		}

		[Token(Token = "0x6000D98")]
		[Address(RVA = "0x182CB7C", Offset = "0x182CB7C", VA = "0x182CB7C", Slot = "16")]
		internal override void StartWriteDictionary()
		{
		}

		[Token(Token = "0x6000D99")]
		[Address(RVA = "0x182CB80", Offset = "0x182CB80", VA = "0x182CB80", Slot = "17")]
		internal override void EndWriteDictionary()
		{
		}

		[Token(Token = "0x6000D9A")]
		[Address(RVA = "0x182CB84", Offset = "0x182CB84", VA = "0x182CB84", Slot = "18")]
		internal override void StartWriteDictionaryKey(int index)
		{
		}

		[Token(Token = "0x6000D9B")]
		[Address(RVA = "0x182CB88", Offset = "0x182CB88", VA = "0x182CB88", Slot = "19")]
		internal override void EndWriteDictionaryKey(int index)
		{
		}

		[Token(Token = "0x6000D9C")]
		[Address(RVA = "0x182CB8C", Offset = "0x182CB8C", VA = "0x182CB8C", Slot = "20")]
		internal override void StartWriteDictionaryValue(int index)
		{
		}

		[Token(Token = "0x6000D9D")]
		[Address(RVA = "0x182CB90", Offset = "0x182CB90", VA = "0x182CB90", Slot = "21")]
		internal override void EndWriteDictionaryValue(int index)
		{
		}

		[Token(Token = "0x6000D9E")]
		[Address(RVA = "0x182CB94", Offset = "0x182CB94", VA = "0x182CB94", Slot = "22")]
		public override void Dispose()
		{
		}
	}
	[Token(Token = "0x200022C")]
	internal class ES3JSONWriter : ES3Writer
	{
		[Token(Token = "0x4000B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal StreamWriter baseWriter;

		[Token(Token = "0x4000B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool isFirstProperty;

		[Token(Token = "0x6000D9F")]
		[Address(RVA = "0x182FF30", Offset = "0x182FF30", VA = "0x182FF30")]
		public ES3JSONWriter(Stream stream, ES3Settings settings)
		{
		}

		[Token(Token = "0x6000DA0")]
		[Address(RVA = "0x182FF3C", Offset = "0x182FF3C", VA = "0x182FF3C")]
		internal ES3JSONWriter(Stream stream, ES3Settings settings, bool writeHeaderAndFooter, bool mergeKeys)
		{
		}

		[Token(Token = "0x6000DA1")]
		[Address(RVA = "0x182FFF8", Offset = "0x182FFF8", VA = "0x182FFF8", Slot = "24")]
		internal override void WritePrimitive(int value)
		{
		}

		[Token(Token = "0x6000DA2")]
		[Address(RVA = "0x183001C", Offset = "0x183001C", VA = "0x183001C", Slot = "25")]
		internal override void WritePrimitive(float value)
		{
		}

		[Token(Token = "0x6000DA3")]
		[Address(RVA = "0x18300D0", Offset = "0x18300D0", VA = "0x18300D0", Slot = "26")]
		internal override void WritePrimitive(bool value)
		{
		}

		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0x1830150", Offset = "0x1830150", VA = "0x1830150", Slot = "27")]
		internal override void WritePrimitive(decimal value)
		{
		}

		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0x18301F8", Offset = "0x18301F8", VA = "0x18301F8", Slot = "28")]
		internal override void WritePrimitive(double value)
		{
		}

		[Token(Token = "0x6000DA6")]
		[Address(RVA = "0x18302AC", Offset = "0x18302AC", VA = "0x18302AC", Slot = "29")]
		internal override void WritePrimitive(long value)
		{
		}

		[Token(Token = "0x6000DA7")]
		[Address(RVA = "0x18302D0", Offset = "0x18302D0", VA = "0x18302D0", Slot = "30")]
		internal override void WritePrimitive(ulong value)
		{
		}

		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0x18302F4", Offset = "0x18302F4", VA = "0x18302F4", Slot = "31")]
		internal override void WritePrimitive(uint value)
		{
		}

		[Token(Token = "0x6000DA9")]
		[Address(RVA = "0x1830318", Offset = "0x1830318", VA = "0x1830318", Slot = "32")]
		internal override void WritePrimitive(byte value)
		{
		}

		[Token(Token = "0x6000DAA")]
		[Address(RVA = "0x18303B0", Offset = "0x18303B0", VA = "0x18303B0", Slot = "33")]
		internal override void WritePrimitive(sbyte value)
		{
		}

		[Token(Token = "0x6000DAB")]
		[Address(RVA = "0x1830448", Offset = "0x1830448", VA = "0x1830448", Slot = "34")]
		internal override void WritePrimitive(short value)
		{
		}

		[Token(Token = "0x6000DAC")]
		[Address(RVA = "0x18304E0", Offset = "0x18304E0", VA = "0x18304E0", Slot = "35")]
		internal override void WritePrimitive(ushort value)
		{
		}

		[Token(Token = "0x6000DAD")]
		[Address(RVA = "0x1830578", Offset = "0x1830578", VA = "0x1830578", Slot = "36")]
		internal override void WritePrimitive(char value)
		{
		}

		[Token(Token = "0x6000DAE")]
		[Address(RVA = "0x18305BC", Offset = "0x18305BC", VA = "0x18305BC", Slot = "38")]
		internal override void WritePrimitive(byte[] value)
		{
		}

		[Token(Token = "0x6000DAF")]
		[Address(RVA = "0x1830648", Offset = "0x1830648", VA = "0x1830648", Slot = "37")]
		internal override void WritePrimitive(string value)
		{
		}

		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0x1830840", Offset = "0x1830840", VA = "0x1830840", Slot = "5")]
		internal override void WriteNull()
		{
		}

		[Token(Token = "0x6000DB1")]
		[Address(RVA = "0x18308A4", Offset = "0x18308A4", VA = "0x18308A4")]
		private static bool CharacterRequiresEscaping(char c)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0x18308D8", Offset = "0x18308D8", VA = "0x18308D8")]
		private void WriteCommaIfRequired()
		{
		}

		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0x18309B4", Offset = "0x18309B4", VA = "0x18309B4", Slot = "23")]
		internal override void WriteRawProperty(string name, byte[] value)
		{
		}

		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0x1830A50", Offset = "0x1830A50", VA = "0x1830A50", Slot = "6")]
		internal override void StartWriteFile()
		{
		}

		[Token(Token = "0x6000DB5")]
		[Address(RVA = "0x1830A98", Offset = "0x1830A98", VA = "0x1830A98", Slot = "7")]
		internal override void EndWriteFile()
		{
		}

		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0x1830AF0", Offset = "0x1830AF0", VA = "0x1830AF0", Slot = "10")]
		internal override void StartWriteProperty(string name)
		{
		}

		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0x1830BB0", Offset = "0x1830BB0", VA = "0x1830BB0", Slot = "11")]
		internal override void EndWriteProperty(string name)
		{
		}

		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0x1830BB8", Offset = "0x1830BB8", VA = "0x1830BB8", Slot = "8")]
		internal override void StartWriteObject(string name)
		{
		}

		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0x1830BFC", Offset = "0x1830BFC", VA = "0x1830BFC", Slot = "9")]
		internal override void EndWriteObject(string name)
		{
		}

		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0x1830C44", Offset = "0x1830C44", VA = "0x1830C44", Slot = "12")]
		internal override void StartWriteCollection()
		{
		}

		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0x1830C88", Offset = "0x1830C88", VA = "0x1830C88", Slot = "13")]
		internal override void EndWriteCollection()
		{
		}

		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0x1830CCC", Offset = "0x1830CCC", VA = "0x1830CCC", Slot = "14")]
		internal override void StartWriteCollectionItem(int index)
		{
		}

		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0x1830CF8", Offset = "0x1830CF8", VA = "0x1830CF8", Slot = "15")]
		internal override void EndWriteCollectionItem(int index)
		{
		}

		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0x1830CFC", Offset = "0x1830CFC", VA = "0x1830CFC", Slot = "16")]
		internal override void StartWriteDictionary()
		{
		}

		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0x1830D0C", Offset = "0x1830D0C", VA = "0x1830D0C", Slot = "17")]
		internal override void EndWriteDictionary()
		{
		}

		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0x1830D1C", Offset = "0x1830D1C", VA = "0x1830D1C", Slot = "18")]
		internal override void StartWriteDictionaryKey(int index)
		{
		}

		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0x1830D48", Offset = "0x1830D48", VA = "0x1830D48", Slot = "19")]
		internal override void EndWriteDictionaryKey(int index)
		{
		}

		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0x1830D6C", Offset = "0x1830D6C", VA = "0x1830D6C", Slot = "20")]
		internal override void StartWriteDictionaryValue(int index)
		{
		}

		[Token(Token = "0x6000DC3")]
		[Address(RVA = "0x1830D70", Offset = "0x1830D70", VA = "0x1830D70", Slot = "21")]
		internal override void EndWriteDictionaryValue(int index)
		{
		}

		[Token(Token = "0x6000DC4")]
		[Address(RVA = "0x1830D74", Offset = "0x1830D74", VA = "0x1830D74", Slot = "22")]
		public override void Dispose()
		{
		}

		[Token(Token = "0x6000DC5")]
		[Address(RVA = "0x1830924", Offset = "0x1830924", VA = "0x1830924")]
		public void WriteNewlineAndTabs()
		{
		}
	}
}
namespace CurvedUI
{
	[Token(Token = "0x200022D")]
	public class CurvedUIEventSystem : EventSystem
	{
		[Token(Token = "0x4000B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static CurvedUIEventSystem instance;

		[Token(Token = "0x6000DC6")]
		[Address(RVA = "0x10DF344", Offset = "0x10DF344", VA = "0x10DF344", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000DC7")]
		[Address(RVA = "0x10DF3A8", Offset = "0x10DF3A8", VA = "0x10DF3A8", Slot = "17")]
		protected override void OnApplicationFocus(bool hasFocus)
		{
		}

		[Token(Token = "0x6000DC8")]
		[Address(RVA = "0x10DF3B4", Offset = "0x10DF3B4", VA = "0x10DF3B4")]
		public CurvedUIEventSystem()
		{
		}
	}
	[Token(Token = "0x200022E")]
	public static class CurvedUIExtensionMethods
	{
		[Token(Token = "0x6000DC9")]
		[Address(RVA = "0x10DF41C", Offset = "0x10DF41C", VA = "0x10DF41C")]
		public static bool AlmostEqual(this Vector3 a, Vector3 b, double accuracy = 0.01)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DCA")]
		[Address(RVA = "0x10DF4E8", Offset = "0x10DF4E8", VA = "0x10DF4E8")]
		public static float Remap(this float value, float from1, float to1, float from2, float to2)
		{
			return default(float);
		}

		[Token(Token = "0x6000DCB")]
		[Address(RVA = "0x10DF504", Offset = "0x10DF504", VA = "0x10DF504")]
		public static float RemapAndClamp(this float value, float from1, float to1, float from2, float to2)
		{
			return default(float);
		}

		[Token(Token = "0x6000DCC")]
		[Address(RVA = "0x10DF5B0", Offset = "0x10DF5B0", VA = "0x10DF5B0")]
		public static float Remap(this int value, float from1, float to1, float from2, float to2)
		{
			return default(float);
		}

		[Token(Token = "0x6000DCD")]
		[Address(RVA = "0x10DF5D0", Offset = "0x10DF5D0", VA = "0x10DF5D0")]
		public static double Remap(this double value, double from1, double to1, double from2, double to2)
		{
			return default(double);
		}

		[Token(Token = "0x6000DCE")]
		[Address(RVA = "0x10DF528", Offset = "0x10DF528", VA = "0x10DF528")]
		public static float Clamp(this float value, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6000DCF")]
		[Address(RVA = "0x10DF5EC", Offset = "0x10DF5EC", VA = "0x10DF5EC")]
		public static float Clamp(this int value, int min, int max)
		{
			return default(float);
		}

		[Token(Token = "0x6000DD0")]
		[Address(RVA = "0x10DF674", Offset = "0x10DF674", VA = "0x10DF674")]
		public static int Abs(this int value)
		{
			return default(int);
		}

		[Token(Token = "0x6000DD1")]
		[Address(RVA = "0x10DF6DC", Offset = "0x10DF6DC", VA = "0x10DF6DC")]
		public static float Abs(this float value)
		{
			return default(float);
		}

		[Token(Token = "0x6000DD2")]
		[Address(RVA = "0x10DF748", Offset = "0x10DF748", VA = "0x10DF748")]
		public static int ToInt(this float value)
		{
			return default(int);
		}

		[Token(Token = "0x6000DD3")]
		[Address(RVA = "0x10DF7B8", Offset = "0x10DF7B8", VA = "0x10DF7B8")]
		public static int FloorToInt(this float value)
		{
			return default(int);
		}

		[Token(Token = "0x6000DD4")]
		[Address(RVA = "0x10DF828", Offset = "0x10DF828", VA = "0x10DF828")]
		public static int CeilToInt(this float value)
		{
			return default(int);
		}

		[Token(Token = "0x6000DD5")]
		[Address(RVA = "0x10DF898", Offset = "0x10DF898", VA = "0x10DF898")]
		public static Vector3 ModifyX(this Vector3 trans, float newVal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000DD6")]
		[Address(RVA = "0x10DF8D0", Offset = "0x10DF8D0", VA = "0x10DF8D0")]
		public static Vector3 ModifyY(this Vector3 trans, float newVal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0x10DF908", Offset = "0x10DF908", VA = "0x10DF908")]
		public static Vector3 ModifyZ(this Vector3 trans, float newVal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000DD8")]
		[Address(RVA = "0x10DF940", Offset = "0x10DF940", VA = "0x10DF940")]
		public static Vector2 ModifyVectorX(this Vector2 trans, float newVal)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000DD9")]
		[Address(RVA = "0x10DF9E0", Offset = "0x10DF9E0", VA = "0x10DF9E0")]
		public static Vector2 ModifyVectorY(this Vector2 trans, float newVal)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000DDA")]
		[Address(RVA = "0x10DFA80", Offset = "0x10DFA80", VA = "0x10DFA80")]
		public static void ResetTransform(this Transform trans)
		{
		}

		[Token(Token = "0x6000DDB")]
		public static T AddComponentIfMissing<T>(this GameObject go) where T : Component
		{
			return null;
		}

		[Token(Token = "0x6000DDC")]
		public static T AddComponentIfMissing<T>(this Component go) where T : Component
		{
			return null;
		}
	}
	[Token(Token = "0x200022F")]
	public class CurvedUIHandSwitcher : MonoBehaviour
	{
		[Token(Token = "0x4000B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject LaserBeam;

		[Token(Token = "0x4000B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCB2074", Offset = "0xCB2074")]
		private bool autoSwitchHands;

		[Token(Token = "0x4000B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCB20C0", Offset = "0xCB20C0")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCB20C0", Offset = "0xCB20C0")]
		private Transform leftHandOverride;

		[Token(Token = "0x4000B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCB2130", Offset = "0xCB2130")]
		private Transform rightHandOverride;

		[Token(Token = "0x4000B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRInput.Controller activeCont;

		[Token(Token = "0x4000B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool initialized;

		[Token(Token = "0x6000DDD")]
		[Address(RVA = "0x10DFB40", Offset = "0x10DFB40", VA = "0x10DFB40")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DDE")]
		[Address(RVA = "0x10E0298", Offset = "0x10E0298", VA = "0x10E0298")]
		private bool IsButtonDownOnController(OVRInput.Controller cont, OVRInput.Controller cont2 = OVRInput.Controller.None)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DDF")]
		[Address(RVA = "0x10DFFA8", Offset = "0x10DFFA8", VA = "0x10DFFA8")]
		private void SwitchHandTo(CurvedUIInputModule.Hand newHand)
		{
		}

		[Token(Token = "0x6000DE0")]
		[Address(RVA = "0x10E0510", Offset = "0x10E0510", VA = "0x10E0510")]
		public CurvedUIHandSwitcher()
		{
		}
	}
	[Token(Token = "0x2000230")]
	public class CurvedUIInputFieldCaret : MonoBehaviour, ISelectHandler, IEventSystemHandler, IDeselectHandler
	{
		[Token(Token = "0x2000414")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB09F4", Offset = "0xCB09F4")]
		private sealed class <CaretBlinker>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000EA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000EA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000EAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CurvedUIInputFieldCaret <>4__this;

			[Token(Token = "0x170001BA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001611")]
				[Address(RVA = "0x10E11A8", Offset = "0x10E11A8", VA = "0x10E11A8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001BB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001613")]
				[Address(RVA = "0x10E1210", Offset = "0x10E1210", VA = "0x10E1210", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600160E")]
			[Address(RVA = "0x10E0D54", Offset = "0x10E0D54", VA = "0x10E0D54")]
			[DebuggerHidden]
			public <CaretBlinker>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x600160F")]
			[Address(RVA = "0x10E1080", Offset = "0x10E1080", VA = "0x10E1080", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001610")]
			[Address(RVA = "0x10E1084", Offset = "0x10E1084", VA = "0x10E1084", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001612")]
			[Address(RVA = "0x10E11B0", Offset = "0x10E11B0", VA = "0x10E11B0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private InputField myField;

		[Token(Token = "0x4000B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RectTransform myCaret;

		[Token(Token = "0x4000B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color origCaretColor;

		[Token(Token = "0x4000B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color origSelectionColor;

		[Token(Token = "0x4000B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool selected;

		[Token(Token = "0x4000B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool selectingText;

		[Token(Token = "0x4000B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int lastCharDist;

		[Token(Token = "0x170000FD")]
		public Color CaretColor
		{
			[Token(Token = "0x6000DE9")]
			[Address(RVA = "0x10E1008", Offset = "0x10E1008", VA = "0x10E1008")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000DEA")]
			[Address(RVA = "0x10E1014", Offset = "0x10E1014", VA = "0x10E1014")]
			set
			{
			}
		}

		[Token(Token = "0x170000FE")]
		public Color SelectionColor
		{
			[Token(Token = "0x6000DEB")]
			[Address(RVA = "0x10E1020", Offset = "0x10E1020", VA = "0x10E1020")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000DEC")]
			[Address(RVA = "0x10E102C", Offset = "0x10E102C", VA = "0x10E102C")]
			set
			{
			}
		}

		[Token(Token = "0x170000FF")]
		public float CaretBlinkRate
		{
			[Token(Token = "0x6000DED")]
			[Address(RVA = "0x10E1038", Offset = "0x10E1038", VA = "0x10E1038")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DEE")]
			[Address(RVA = "0x10E1054", Offset = "0x10E1054", VA = "0x10E1054")]
			set
			{
			}
		}

		[Token(Token = "0x6000DE1")]
		[Address(RVA = "0x10E0520", Offset = "0x10E0520", VA = "0x10E0520")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DE2")]
		[Address(RVA = "0x10E0580", Offset = "0x10E0580", VA = "0x10E0580")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0x10E08C0", Offset = "0x10E08C0", VA = "0x10E08C0", Slot = "4")]
		public void OnSelect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6000DE4")]
		[Address(RVA = "0x10E0D1C", Offset = "0x10E0D1C", VA = "0x10E0D1C", Slot = "5")]
		public void OnDeselect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6000DE5")]
		[Address(RVA = "0x10E0CA0", Offset = "0x10E0CA0", VA = "0x10E0CA0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCB5320", Offset = "0xCB5320")]
		private IEnumerator CaretBlinker()
		{
			return null;
		}

		[Token(Token = "0x6000DE6")]
		[Address(RVA = "0x10E0980", Offset = "0x10E0980", VA = "0x10E0980")]
		private void CreateCaret()
		{
		}

		[Token(Token = "0x6000DE7")]
		[Address(RVA = "0x10E0590", Offset = "0x10E0590", VA = "0x10E0590")]
		private void UpdateCaret()
		{
		}

		[Token(Token = "0x6000DE8")]
		[Address(RVA = "0x10E0D80", Offset = "0x10E0D80", VA = "0x10E0D80")]
		private Vector2 GetLocalPositionInText(int charNo)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000DEF")]
		[Address(RVA = "0x10E1070", Offset = "0x10E1070", VA = "0x10E1070")]
		public CurvedUIInputFieldCaret()
		{
		}
	}
	[Token(Token = "0x2000231")]
	public class CurvedUILaserBeam : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000415")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB0A04", Offset = "0xCB0A04")]
		private sealed class <>c
		{
			[Token(Token = "0x4000EAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000EAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<GameObject> <>9__3_0;

			[Token(Token = "0x6001615")]
			[Address(RVA = "0x10E17B0", Offset = "0x10E17B0", VA = "0x10E17B0")]
			public <>c()
			{
			}

			[Token(Token = "0x6001616")]
			[Address(RVA = "0x10E17B8", Offset = "0x10E17B8", VA = "0x10E17B8")]
			internal bool <Update>b__3_0(GameObject x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform LaserBeamTransform;

		[Token(Token = "0x4000B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform LaserBeamDot;

		[Token(Token = "0x4000B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool hideWhenNotAimingAtCanvas;

		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0x10E1218", Offset = "0x10E1218", VA = "0x10E1218")]
		protected void Update()
		{
		}

		[Token(Token = "0x6000DF1")]
		[Address(RVA = "0x10E1740", Offset = "0x10E1740", VA = "0x10E1740")]
		public CurvedUILaserBeam()
		{
		}
	}
	[Token(Token = "0x2000232")]
	public class CurvedUIPhysicsRaycaster : BaseRaycaster
	{
		[Token(Token = "0x4000B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected int sortOrder;

		[Token(Token = "0x4000B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private RaycastHit hitInfo;

		[Token(Token = "0x4000B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private RaycastResult result;

		[Token(Token = "0x17000100")]
		public int CompoundEventMask
		{
			[Token(Token = "0x6000DF4")]
			[Address(RVA = "0x10E1DD4", Offset = "0x10E1DD4", VA = "0x10E1DD4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000101")]
		public override Camera eventCamera
		{
			[Token(Token = "0x6000DF5")]
			[Address(RVA = "0x10E1ED0", Offset = "0x10E1ED0", VA = "0x10E1ED0", Slot = "18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000102")]
		public virtual int Depth
		{
			[Token(Token = "0x6000DF6")]
			[Address(RVA = "0x10E1F98", Offset = "0x10E1F98", VA = "0x10E1F98", Slot = "22")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000103")]
		public override int sortOrderPriority
		{
			[Token(Token = "0x6000DF7")]
			[Address(RVA = "0x10E2058", Offset = "0x10E2058", VA = "0x10E2058", Slot = "20")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000DF2")]
		[Address(RVA = "0x10E18AC", Offset = "0x10E18AC", VA = "0x10E18AC")]
		protected CurvedUIPhysicsRaycaster()
		{
		}

		[Token(Token = "0x6000DF3")]
		[Address(RVA = "0x10E18BC", Offset = "0x10E18BC", VA = "0x10E18BC", Slot = "17")]
		public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
		{
		}
	}
	[Token(Token = "0x2000233")]
	public class CurvedUIPointerEventData : PointerEventData
	{
		[Token(Token = "0x2000416")]
		public enum ControllerType
		{
			[Token(Token = "0x4000EAE")]
			NONE = -1,
			[Token(Token = "0x4000EAF")]
			VIVE
		}

		[Token(Token = "0x4000B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public GameObject Controller;

		[Token(Token = "0x4000B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public Vector2 TouchPadAxis;

		[Token(Token = "0x6000DF8")]
		[Address(RVA = "0x10E2060", Offset = "0x10E2060", VA = "0x10E2060")]
		public CurvedUIPointerEventData(EventSystem eventSystem)
		{
		}
	}
	[Token(Token = "0x2000234")]
	public class CurvedUIRaycaster : GraphicRaycaster
	{
		[Serializable]
		[Token(Token = "0x2000417")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB0A14", Offset = "0xCB0A14")]
		private sealed class <>c
		{
			[Token(Token = "0x4000EB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000EB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<GameObject> <>9__21_0;

			[Token(Token = "0x4000EB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Comparison<Graphic> <>9__32_0;

			[Token(Token = "0x4000EB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Comparison<Graphic> <>9__55_0;

			[Token(Token = "0x6001618")]
			[Address(RVA = "0x10EA85C", Offset = "0x10EA85C", VA = "0x10EA85C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001619")]
			[Address(RVA = "0x10EA864", Offset = "0x10EA864", VA = "0x10EA864")]
			internal bool <Update>b__21_0(GameObject obj)
			{
				return default(bool);
			}

			[Token(Token = "0x600161A")]
			[Address(RVA = "0x10EA928", Offset = "0x10EA928", VA = "0x10EA928")]
			internal int <FlatRaycastAndSort>b__32_0(Graphic g1, Graphic g2)
			{
				return default(int);
			}

			[Token(Token = "0x600161B")]
			[Address(RVA = "0x10EA980", Offset = "0x10EA980", VA = "0x10EA980")]
			internal int <GetObjectsHitByRay>b__55_0(Graphic g1, Graphic g2)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4000B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool showDebug;

		[Token(Token = "0x4000B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool overrideEventData;

		[Token(Token = "0x4000B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Canvas myCanvas;

		[Token(Token = "0x4000B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private CurvedUISettings mySettings;

		[Token(Token = "0x4000B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 cyllinderMidPoint;

		[Token(Token = "0x4000B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<GameObject> objectsUnderPointer;

		[Token(Token = "0x4000B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector2 lastCanvasPos;

		[Token(Token = "0x4000B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private GameObject colliderContainer;

		[Token(Token = "0x4000B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private PointerEventData lastFrameEventData;

		[Token(Token = "0x4000B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private PointerEventData curEventData;

		[Token(Token = "0x4000B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private PointerEventData eventDataToUse;

		[Token(Token = "0x4000B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Ray cachedRay;

		[Token(Token = "0x4000B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Graphic gph;

		[Token(Token = "0x4000B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private List<GameObject> selectablesUnderGaze;

		[Token(Token = "0x4000B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private List<GameObject> selectablesUnderGazeLastFrame;

		[Token(Token = "0x4000B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float objectsUnderGazeLastChangeTime;

		[Token(Token = "0x4000B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private bool gazeClickExecuted;

		[Token(Token = "0x4000B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		private bool pointingAtCanvas;

		[Token(Token = "0x4000B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCE")]
		private bool pointingAtCanvasLastFrame;

		[NonSerialized]
		[Token(Token = "0x4000B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private List<Graphic> m_RaycastResults;

		[NonSerialized]
		[Token(Token = "0x4000B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<Graphic> s_SortedGraphics;

		[Token(Token = "0x17000104")]
		private Image GazeProgressImage
		{
			[Token(Token = "0x6000E0C")]
			[Address(RVA = "0x10E30A4", Offset = "0x10E30A4", VA = "0x10E30A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000105")]
		public bool PointingAtCanvas
		{
			[Token(Token = "0x6000E15")]
			[Address(RVA = "0x10E9E04", Offset = "0x10E9E04", VA = "0x10E9E04")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000DF9")]
		[Address(RVA = "0x10E20E8", Offset = "0x10E20E8", VA = "0x10E20E8", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000DFA")]
		[Address(RVA = "0x10E2390", Offset = "0x10E2390", VA = "0x10E2390", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000DFB")]
		[Address(RVA = "0x10E2B4C", Offset = "0x10E2B4C", VA = "0x10E2B4C", Slot = "22")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000DFC")]
		[Address(RVA = "0x10E2EF4", Offset = "0x10E2EF4", VA = "0x10E2EF4")]
		private void ProcessGazeTimedClick()
		{
		}

		[Token(Token = "0x6000DFD")]
		[Address(RVA = "0x10E2EC8", Offset = "0x10E2EC8", VA = "0x10E2EC8")]
		private void ResetGazeTimedClick()
		{
		}

		[Token(Token = "0x6000DFE")]
		[Address(RVA = "0x10E369C", Offset = "0x10E369C", VA = "0x10E369C", Slot = "17")]
		public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
		{
		}

		[Token(Token = "0x6000DFF")]
		[Address(RVA = "0x10E4B50", Offset = "0x10E4B50", VA = "0x10E4B50", Slot = "23")]
		public virtual bool RaycastToCyllinderCanvas(Ray ray3D, out Vector2 o_canvasPos, bool OutputInCanvasSpace = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E00")]
		[Address(RVA = "0x10E5418", Offset = "0x10E5418", VA = "0x10E5418", Slot = "24")]
		public virtual bool RaycastToCyllinderVerticalCanvas(Ray ray3D, out Vector2 o_canvasPos, bool OutputInCanvasSpace = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E01")]
		[Address(RVA = "0x10E5B30", Offset = "0x10E5B30", VA = "0x10E5B30", Slot = "25")]
		public virtual bool RaycastToRingCanvas(Ray ray3D, out Vector2 o_canvasPos, bool OutputInCanvasSpace = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E02")]
		[Address(RVA = "0x10E60E0", Offset = "0x10E60E0", VA = "0x10E60E0", Slot = "26")]
		public virtual bool RaycastToSphereCanvas(Ray ray3D, out Vector2 o_canvasPos, bool OutputInCanvasSpace = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E03")]
		[Address(RVA = "0x10E44D4", Offset = "0x10E44D4", VA = "0x10E44D4")]
		private void FlatRaycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
		{
		}

		[Token(Token = "0x6000E04")]
		[Address(RVA = "0x10E6C70", Offset = "0x10E6C70", VA = "0x10E6C70")]
		private static void FlatRaycastAndSort(Canvas canvas, Camera eventCamera, Vector2 pointerPosition, IList<Graphic> foundGraphics, List<Graphic> results)
		{
		}

		[Token(Token = "0x6000E05")]
		[Address(RVA = "0x10E2620", Offset = "0x10E2620", VA = "0x10E2620")]
		protected void CreateCollider()
		{
		}

		[Token(Token = "0x6000E06")]
		[Address(RVA = "0x10E8724", Offset = "0x10E8724", VA = "0x10E8724")]
		private void SetupMeshColliderUsingMesh(Mesh meshie)
		{
		}

		[Token(Token = "0x6000E07")]
		[Address(RVA = "0x10E7130", Offset = "0x10E7130", VA = "0x10E7130")]
		private GameObject CreateConvexCyllinderCollider(bool vertical = false)
		{
			return null;
		}

		[Token(Token = "0x6000E08")]
		[Address(RVA = "0x10E7DB4", Offset = "0x10E7DB4", VA = "0x10E7DB4")]
		private Mesh CreateCyllinderColliderMesh(bool vertical = false)
		{
			return null;
		}

		[Token(Token = "0x6000E09")]
		[Address(RVA = "0x10E87D4", Offset = "0x10E87D4", VA = "0x10E87D4")]
		private Mesh CreateSphereColliderMesh()
		{
			return null;
		}

		[Token(Token = "0x6000E0A")]
		[Address(RVA = "0x10E9328", Offset = "0x10E9328", VA = "0x10E9328")]
		private bool IsInLayerMask(int layer, LayerMask layermask)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E0B")]
		[Address(RVA = "0x10E5268", Offset = "0x10E5268", VA = "0x10E5268")]
		private LayerMask GetRaycastLayerMask()
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6000E0D")]
		[Address(RVA = "0x10E52D4", Offset = "0x10E52D4", VA = "0x10E52D4")]
		private float AngleSigned(Vector3 v1, Vector3 v2, Vector3 n)
		{
			return default(float);
		}

		[Token(Token = "0x6000E0E")]
		[Address(RVA = "0x10E9380", Offset = "0x10E9380", VA = "0x10E9380")]
		private bool ShouldStartDrag(Vector2 pressPos, Vector2 currentPos, float threshold, bool useDragThreshold)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E0F")]
		[Address(RVA = "0x10E9450", Offset = "0x10E9450", VA = "0x10E9450", Slot = "27")]
		protected virtual void ProcessMove(PointerEventData pointerEvent)
		{
		}

		[Token(Token = "0x6000E10")]
		[Address(RVA = "0x10E3EC8", Offset = "0x10E3EC8", VA = "0x10E3EC8")]
		protected void UpdateSelectedObjects(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000E11")]
		[Address(RVA = "0x10E9468", Offset = "0x10E9468", VA = "0x10E9468")]
		protected void HandlePointerExitAndEnter(PointerEventData currentPointerData, GameObject newEnterTarget)
		{
		}

		[Token(Token = "0x6000E12")]
		[Address(RVA = "0x10E9AD0", Offset = "0x10E9AD0", VA = "0x10E9AD0")]
		protected static GameObject FindCommonRoot(GameObject g1, GameObject g2)
		{
			return null;
		}

		[Token(Token = "0x6000E13")]
		[Address(RVA = "0x10E9C78", Offset = "0x10E9C78", VA = "0x10E9C78")]
		private bool GetScreenSpacePointByRay(Ray ray, out Vector2 o_positionOnCanvas)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E14")]
		[Address(RVA = "0x10E2420", Offset = "0x10E2420", VA = "0x10E2420")]
		private bool CheckEventCamera()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E16")]
		[Address(RVA = "0x10E9E0C", Offset = "0x10E9E0C", VA = "0x10E9E0C")]
		public void RebuildCollider()
		{
		}

		[Token(Token = "0x6000E17")]
		[Address(RVA = "0x10E9E78", Offset = "0x10E9E78", VA = "0x10E9E78")]
		public List<GameObject> GetObjectsUnderPointer()
		{
			return null;
		}

		[Token(Token = "0x6000E18")]
		[Address(RVA = "0x10E9EF8", Offset = "0x10E9EF8", VA = "0x10E9EF8")]
		public List<GameObject> GetObjectsUnderScreenPos(Vector2 screenPos, [Optional] Camera eventCamera)
		{
			return null;
		}

		[Token(Token = "0x6000E19")]
		[Address(RVA = "0x10EA008", Offset = "0x10EA008", VA = "0x10EA008")]
		public List<GameObject> GetObjectsHitByRay(Ray ray)
		{
			return null;
		}

		[Token(Token = "0x6000E1A")]
		[Address(RVA = "0x10E3110", Offset = "0x10E3110", VA = "0x10E3110")]
		public void Click()
		{
		}

		[Token(Token = "0x6000E1B")]
		[Address(RVA = "0x10E8FC4", Offset = "0x10E8FC4", VA = "0x10E8FC4")]
		private void ModifyQuad(List<Vector3> verts, int vertexIndex, Vector2 requiredSize)
		{
		}

		[Token(Token = "0x6000E1C")]
		[Address(RVA = "0x10EA434", Offset = "0x10EA434", VA = "0x10EA434")]
		private Vector3 TesselateQuad(List<Vector3> quad, float x, float y)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E1D")]
		[Address(RVA = "0x10EA628", Offset = "0x10EA628", VA = "0x10EA628")]
		public CurvedUIRaycaster()
		{
		}
	}
	[Token(Token = "0x2000235")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCAEDA8", Offset = "0xCAEDA8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xCAEDA8", Offset = "0xCAEDA8")]
	public class CurvedUISettings : MonoBehaviour
	{
		[Token(Token = "0x2000418")]
		public enum CurvedUIShape
		{
			[Token(Token = "0x4000EB5")]
			CYLINDER,
			[Token(Token = "0x4000EB6")]
			RING,
			[Token(Token = "0x4000EB7")]
			SPHERE,
			[Token(Token = "0x4000EB8")]
			CYLINDER_VERTICAL
		}

		[Token(Token = "0x4000B8B")]
		public const string Version = "3.1p1";

		[Token(Token = "0x4000B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CurvedUIShape shape;

		[Token(Token = "0x4000B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float quality;

		[Token(Token = "0x4000B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool interactable;

		[Token(Token = "0x4000B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[SerializeField]
		private bool blocksRaycasts;

		[Token(Token = "0x4000B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		[SerializeField]
		private bool forceUseBoxCollider;

		[Token(Token = "0x4000B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private int angle;

		[Token(Token = "0x4000B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool preserveAspect;

		[Token(Token = "0x4000B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private int vertAngle;

		[Token(Token = "0x4000B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float ringFill;

		[Token(Token = "0x4000B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private int ringExternalDiamater;

		[Token(Token = "0x4000B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool ringFlipVertical;

		[Token(Token = "0x4000B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int baseCircleSegments;

		[Token(Token = "0x4000B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector2 savedRectSize;

		[Token(Token = "0x4000B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float savedRadius;

		[Token(Token = "0x4000B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Canvas myCanvas;

		[Token(Token = "0x4000B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private RectTransform m_rectTransform;

		[Token(Token = "0x17000106")]
		private RectTransform RectTransform
		{
			[Token(Token = "0x6000E29")]
			[Address(RVA = "0x10EAA64", Offset = "0x10EAA64", VA = "0x10EAA64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000107")]
		public int BaseCircleSegments
		{
			[Token(Token = "0x6000E32")]
			[Address(RVA = "0x10EC398", Offset = "0x10EC398", VA = "0x10EC398")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000108")]
		public int Angle
		{
			[Token(Token = "0x6000E33")]
			[Address(RVA = "0x10EC3A0", Offset = "0x10EC3A0", VA = "0x10EC3A0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000E34")]
			[Address(RVA = "0x10EC3A8", Offset = "0x10EC3A8", VA = "0x10EC3A8")]
			set
			{
			}
		}

		[Token(Token = "0x17000109")]
		public float Quality
		{
			[Token(Token = "0x6000E35")]
			[Address(RVA = "0x10EC3BC", Offset = "0x10EC3BC", VA = "0x10EC3BC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E36")]
			[Address(RVA = "0x10EC3C4", Offset = "0x10EC3C4", VA = "0x10EC3C4")]
			set
			{
			}
		}

		[Token(Token = "0x1700010A")]
		public CurvedUIShape Shape
		{
			[Token(Token = "0x6000E37")]
			[Address(RVA = "0x10EC3E0", Offset = "0x10EC3E0", VA = "0x10EC3E0")]
			get
			{
				return default(CurvedUIShape);
			}
			[Token(Token = "0x6000E38")]
			[Address(RVA = "0x10EC3E8", Offset = "0x10EC3E8", VA = "0x10EC3E8")]
			set
			{
			}
		}

		[Token(Token = "0x1700010B")]
		public int VerticalAngle
		{
			[Token(Token = "0x6000E39")]
			[Address(RVA = "0x10EC408", Offset = "0x10EC408", VA = "0x10EC408")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000E3A")]
			[Address(RVA = "0x10EC410", Offset = "0x10EC410", VA = "0x10EC410")]
			set
			{
			}
		}

		[Token(Token = "0x1700010C")]
		public float RingFill
		{
			[Token(Token = "0x6000E3B")]
			[Address(RVA = "0x10EC430", Offset = "0x10EC430", VA = "0x10EC430")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E3C")]
			[Address(RVA = "0x10EC438", Offset = "0x10EC438", VA = "0x10EC438")]
			set
			{
			}
		}

		[Token(Token = "0x1700010D")]
		public float SavedRadius
		{
			[Token(Token = "0x6000E3D")]
			[Address(RVA = "0x10EB474", Offset = "0x10EB474", VA = "0x10EB474")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700010E")]
		public int RingExternalDiameter
		{
			[Token(Token = "0x6000E3E")]
			[Address(RVA = "0x10EC454", Offset = "0x10EC454", VA = "0x10EC454")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000E3F")]
			[Address(RVA = "0x10EC45C", Offset = "0x10EC45C", VA = "0x10EC45C")]
			set
			{
			}
		}

		[Token(Token = "0x1700010F")]
		public bool RingFlipVertical
		{
			[Token(Token = "0x6000E40")]
			[Address(RVA = "0x10EC47C", Offset = "0x10EC47C", VA = "0x10EC47C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E41")]
			[Address(RVA = "0x10EC484", Offset = "0x10EC484", VA = "0x10EC484")]
			set
			{
			}
		}

		[Token(Token = "0x17000110")]
		public bool PreserveAspect
		{
			[Token(Token = "0x6000E42")]
			[Address(RVA = "0x10EC4B0", Offset = "0x10EC4B0", VA = "0x10EC4B0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E43")]
			[Address(RVA = "0x10EC4B8", Offset = "0x10EC4B8", VA = "0x10EC4B8")]
			set
			{
			}
		}

		[Token(Token = "0x17000111")]
		public bool Interactable
		{
			[Token(Token = "0x6000E44")]
			[Address(RVA = "0x10EC4E4", Offset = "0x10EC4E4", VA = "0x10EC4E4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E45")]
			[Address(RVA = "0x10EC4EC", Offset = "0x10EC4EC", VA = "0x10EC4EC")]
			set
			{
			}
		}

		[Token(Token = "0x17000112")]
		public bool ForceUseBoxCollider
		{
			[Token(Token = "0x6000E46")]
			[Address(RVA = "0x10EC4F8", Offset = "0x10EC4F8", VA = "0x10EC4F8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E47")]
			[Address(RVA = "0x10EC500", Offset = "0x10EC500", VA = "0x10EC500")]
			set
			{
			}
		}

		[Token(Token = "0x17000113")]
		public bool BlocksRaycasts
		{
			[Token(Token = "0x6000E48")]
			[Address(RVA = "0x10EC50C", Offset = "0x10EC50C", VA = "0x10EC50C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E49")]
			[Address(RVA = "0x10EC514", Offset = "0x10EC514", VA = "0x10EC514")]
			set
			{
			}
		}

		[Token(Token = "0x17000114")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xCB69EC", Offset = "0xCB69EC")]
		public bool RaycastMyLayerOnly
		{
			[Token(Token = "0x6000E4A")]
			[Address(RVA = "0x10EC5FC", Offset = "0x10EC5FC", VA = "0x10EC5FC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E4B")]
			[Address(RVA = "0x10EC604", Offset = "0x10EC604", VA = "0x10EC604")]
			set
			{
			}
		}

		[Token(Token = "0x17000115")]
		public bool PointingAtCanvas
		{
			[Token(Token = "0x6000E4D")]
			[Address(RVA = "0x10EC6C4", Offset = "0x10EC6C4", VA = "0x10EC6C4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000116")]
		public CurvedUIInputModule.CUIControlMethod ControlMethod
		{
			[Token(Token = "0x6000E4F")]
			[Address(RVA = "0x10E9A74", Offset = "0x10E9A74", VA = "0x10E9A74")]
			get
			{
				return default(CurvedUIInputModule.CUIControlMethod);
			}
			[Token(Token = "0x6000E50")]
			[Address(RVA = "0x10EC874", Offset = "0x10EC874", VA = "0x10EC874")]
			set
			{
			}
		}

		[Token(Token = "0x17000117")]
		public bool GazeUseTimedClick
		{
			[Token(Token = "0x6000E54")]
			[Address(RVA = "0x10ECBCC", Offset = "0x10ECBCC", VA = "0x10ECBCC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E55")]
			[Address(RVA = "0x10ECC38", Offset = "0x10ECC38", VA = "0x10ECC38")]
			set
			{
			}
		}

		[Token(Token = "0x17000118")]
		public float GazeClickTimer
		{
			[Token(Token = "0x6000E56")]
			[Address(RVA = "0x10ECCAC", Offset = "0x10ECCAC", VA = "0x10ECCAC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E57")]
			[Address(RVA = "0x10ECD18", Offset = "0x10ECD18", VA = "0x10ECD18")]
			set
			{
			}
		}

		[Token(Token = "0x17000119")]
		public float GazeClickTimerDelay
		{
			[Token(Token = "0x6000E58")]
			[Address(RVA = "0x10ECE10", Offset = "0x10ECE10", VA = "0x10ECE10")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E59")]
			[Address(RVA = "0x10ECE7C", Offset = "0x10ECE7C", VA = "0x10ECE7C")]
			set
			{
			}
		}

		[Token(Token = "0x1700011A")]
		public float GazeTimerProgress
		{
			[Token(Token = "0x6000E5A")]
			[Address(RVA = "0x10ECF74", Offset = "0x10ECF74", VA = "0x10ECF74")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000E1F")]
		[Address(RVA = "0x10EA9D8", Offset = "0x10EA9D8", VA = "0x10EA9D8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E20")]
		[Address(RVA = "0x10EAB28", Offset = "0x10EAB28", VA = "0x10EAB28")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E21")]
		[Address(RVA = "0x10EAE7C", Offset = "0x10EAE7C", VA = "0x10EAE7C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E22")]
		[Address(RVA = "0x10EAF2C", Offset = "0x10EAF2C", VA = "0x10EAF2C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000E23")]
		[Address(RVA = "0x10EAFDC", Offset = "0x10EAFDC", VA = "0x10EAFDC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E24")]
		[Address(RVA = "0x10EB130", Offset = "0x10EB130", VA = "0x10EB130")]
		private void SetUIAngle(int newAngle)
		{
		}

		[Token(Token = "0x6000E25")]
		[Address(RVA = "0x10EB344", Offset = "0x10EB344", VA = "0x10EB344")]
		private Vector3 CanvasToCyllinder(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E26")]
		[Address(RVA = "0x10EB4A4", Offset = "0x10EB4A4", VA = "0x10EB4A4")]
		private Vector3 CanvasToCyllinderVertical(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E27")]
		[Address(RVA = "0x10EB5D4", Offset = "0x10EB5D4", VA = "0x10EB5D4")]
		private Vector3 CanvasToRing(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E28")]
		[Address(RVA = "0x10EB70C", Offset = "0x10EB70C", VA = "0x10EB70C")]
		private Vector3 CanvasToSphere(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E2A")]
		[Address(RVA = "0x10EB8F4", Offset = "0x10EB8F4", VA = "0x10EB8F4")]
		public void AddEffectToChildren()
		{
		}

		[Token(Token = "0x6000E2B")]
		[Address(RVA = "0x10EBC34", Offset = "0x10EBC34", VA = "0x10EBC34")]
		public Vector3 VertexPositionToCurvedCanvas(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E2C")]
		[Address(RVA = "0x10E43B4", Offset = "0x10E43B4", VA = "0x10E43B4")]
		public Vector3 CanvasToCurvedCanvas(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E2D")]
		[Address(RVA = "0x10EBD64", Offset = "0x10EBD64", VA = "0x10EBD64")]
		public Vector3 CanvasToCurvedCanvasNormal(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E2E")]
		[Address(RVA = "0x10EC0E4", Offset = "0x10EC0E4", VA = "0x10EC0E4")]
		public bool RaycastToCanvasSpace(Ray ray, out Vector2 o_positionOnCanvas)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E2F")]
		[Address(RVA = "0x10E2214", Offset = "0x10E2214", VA = "0x10E2214")]
		public float GetCyllinderRadiusInCanvasSpace()
		{
			return default(float);
		}

		[Token(Token = "0x6000E30")]
		[Address(RVA = "0x10E8D90", Offset = "0x10E8D90", VA = "0x10E8D90")]
		public Vector2 GetTesslationSize(bool modifiedByQuality = true)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000E31")]
		[Address(RVA = "0x10EC294", Offset = "0x10EC294", VA = "0x10EC294")]
		private float GetSegmentsByAngle(float angle)
		{
			return default(float);
		}

		[Token(Token = "0x6000E4C")]
		[Address(RVA = "0x10EC608", Offset = "0x10EC608", VA = "0x10EC608")]
		public void SetAllChildrenDirty(bool recalculateCurveOnly = false)
		{
		}

		[Token(Token = "0x6000E4E")]
		[Address(RVA = "0x10EC7B8", Offset = "0x10EC7B8", VA = "0x10EC7B8")]
		public void Click()
		{
		}

		[Token(Token = "0x6000E51")]
		[Address(RVA = "0x10E165C", Offset = "0x10E165C", VA = "0x10E165C")]
		public List<GameObject> GetObjectsUnderPointer()
		{
			return null;
		}

		[Token(Token = "0x6000E52")]
		[Address(RVA = "0x10EC974", Offset = "0x10EC974", VA = "0x10EC974")]
		public List<GameObject> GetObjectsUnderScreenPos(Vector2 pos, [Optional] Camera eventCamera)
		{
			return null;
		}

		[Token(Token = "0x6000E53")]
		[Address(RVA = "0x10ECABC", Offset = "0x10ECABC", VA = "0x10ECABC")]
		public List<GameObject> GetObjectsHitByRay(Ray ray)
		{
			return null;
		}

		[Token(Token = "0x6000E5B")]
		[Address(RVA = "0x10ECFE0", Offset = "0x10ECFE0", VA = "0x10ECFE0")]
		public CurvedUISettings()
		{
		}
	}
	[Token(Token = "0x2000236")]
	public class CurvedUIVertexEffect : BaseMeshEffect
	{
		[Token(Token = "0x4000B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCB227C", Offset = "0xCB227C")]
		public bool DoNotTesselate;

		[Token(Token = "0x4000B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Canvas myCanvas;

		[Token(Token = "0x4000B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CurvedUISettings mySettings;

		[Token(Token = "0x4000B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Graphic myGraphic;

		[Token(Token = "0x4000BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Text myText;

		[Token(Token = "0x4000BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TextMeshProUGUI myTMP;

		[Token(Token = "0x4000BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private CurvedUITMPSubmesh myTMPSubMesh;

		[Token(Token = "0x4000BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_tesselationRequired;

		[Token(Token = "0x4000BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool curvingRequired;

		[Token(Token = "0x4000BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		private bool TransformMisaligned;

		[Token(Token = "0x4000BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Matrix4x4 CanvasToWorld;

		[Token(Token = "0x4000BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Matrix4x4 CanvasToLocal;

		[Token(Token = "0x4000BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private Matrix4x4 MyToWorld;

		[Token(Token = "0x4000BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private Matrix4x4 MyToLocal;

		[Token(Token = "0x4000BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private List<UIVertex> m_tesselatedVerts;

		[Token(Token = "0x4000BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private List<UIVertex> m_curvedVerts;

		[Token(Token = "0x4000BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private List<UIVertex> m_vertsInQuads;

		[Token(Token = "0x4000BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private UIVertex m_ret;

		[Token(Token = "0x4000BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private UIVertex[] m_quad;

		[Token(Token = "0x4000BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private float[] m_weights;

		[Token(Token = "0x4000BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[SerializeField]
		[HideInInspector]
		private Vector3 savedPos;

		[Token(Token = "0x4000BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		[SerializeField]
		[HideInInspector]
		private Vector3 savedUp;

		[Token(Token = "0x4000BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[SerializeField]
		[HideInInspector]
		private Vector2 savedRectSize;

		[Token(Token = "0x4000BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[SerializeField]
		[HideInInspector]
		private Color savedColor;

		[Token(Token = "0x4000BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[SerializeField]
		[HideInInspector]
		private Vector2 savedTextUV0;

		[Token(Token = "0x4000BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		[SerializeField]
		[HideInInspector]
		private float savedFill;

		[Token(Token = "0x4000BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		private Vector2 _uv0;

		[Token(Token = "0x4000BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
		private Vector2 _uv1;

		[Token(Token = "0x4000BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
		private Vector3 _pos;

		[Token(Token = "0x1700011B")]
		private bool tesselationRequired
		{
			[Token(Token = "0x6000E5C")]
			[Address(RVA = "0x10EF840", Offset = "0x10EF840", VA = "0x10EF840")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E5D")]
			[Address(RVA = "0x10EF848", Offset = "0x10EF848", VA = "0x10EF848")]
			set
			{
			}
		}

		[Token(Token = "0x1700011C")]
		public bool TesselationRequired
		{
			[Token(Token = "0x6000E70")]
			[Address(RVA = "0x10F2658", Offset = "0x10F2658", VA = "0x10F2658")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E71")]
			[Address(RVA = "0x10F264C", Offset = "0x10F264C", VA = "0x10F264C")]
			set
			{
			}
		}

		[Token(Token = "0x1700011D")]
		public bool CurvingRequired
		{
			[Token(Token = "0x6000E72")]
			[Address(RVA = "0x10F2660", Offset = "0x10F2660", VA = "0x10F2660")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E73")]
			[Address(RVA = "0x10F2668", Offset = "0x10F2668", VA = "0x10F2668")]
			set
			{
			}
		}

		[Token(Token = "0x6000E5E")]
		[Address(RVA = "0x10EF854", Offset = "0x10EF854", VA = "0x10EF854", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000E5F")]
		[Address(RVA = "0x10EF92C", Offset = "0x10EF92C", VA = "0x10EF92C", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000E60")]
		[Address(RVA = "0x10EFBF0", Offset = "0x10EFBF0", VA = "0x10EFBF0", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000E61")]
		[Address(RVA = "0x10F01F8", Offset = "0x10F01F8", VA = "0x10F01F8", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000E62")]
		[Address(RVA = "0x10F0378", Offset = "0x10F0378", VA = "0x10F0378")]
		private void TesselationRequiredCallback()
		{
		}

		[Token(Token = "0x6000E63")]
		[Address(RVA = "0x10F0384", Offset = "0x10F0384", VA = "0x10F0384")]
		private void FontTextureRebuiltCallback(Font fontie)
		{
		}

		[Token(Token = "0x6000E64")]
		[Address(RVA = "0x10F0428", Offset = "0x10F0428", VA = "0x10F0428")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000E65")]
		[Address(RVA = "0x10F09D8", Offset = "0x10F09D8", VA = "0x10F09D8", Slot = "20")]
		public override void ModifyMesh(VertexHelper vh)
		{
		}

		[Token(Token = "0x6000E66")]
		[Address(RVA = "0x10EDF20", Offset = "0x10EDF20", VA = "0x10EDF20")]
		public void ModifyTMPMesh(ref List<UIVertex> vertexList)
		{
		}

		[Token(Token = "0x6000E67")]
		[Address(RVA = "0x10F1080", Offset = "0x10F1080", VA = "0x10F1080")]
		private bool ShouldModify()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E68")]
		[Address(RVA = "0x10F1184", Offset = "0x10F1184", VA = "0x10F1184")]
		private void CheckTextFontMaterial()
		{
		}

		[Token(Token = "0x6000E69")]
		[Address(RVA = "0x10EFAD0", Offset = "0x10EFAD0", VA = "0x10EFAD0")]
		public CurvedUISettings FindParentSettings(bool forceNew = false)
		{
			return null;
		}

		[Token(Token = "0x6000E6A")]
		[Address(RVA = "0x10F1600", Offset = "0x10F1600", VA = "0x10F1600")]
		private UIVertex CurveVertex(UIVertex input, float cylinder_angle, float radius, Vector2 canvasSize)
		{
			return default(UIVertex);
		}

		[Token(Token = "0x6000E6B")]
		[Address(RVA = "0x10F1428", Offset = "0x10F1428", VA = "0x10F1428")]
		private void TesselateGeometry(List<UIVertex> verts)
		{
		}

		[Token(Token = "0x6000E6C")]
		[Address(RVA = "0x10F1C24", Offset = "0x10F1C24", VA = "0x10F1C24")]
		private void ModifyQuad(List<UIVertex> verts, int vertexIndex, Vector2 requiredSize)
		{
		}

		[Token(Token = "0x6000E6D")]
		[Address(RVA = "0x10F19C4", Offset = "0x10F19C4", VA = "0x10F19C4")]
		private void TrisToQuads(List<UIVertex> verts)
		{
		}

		[Token(Token = "0x6000E6E")]
		[Address(RVA = "0x10F22C0", Offset = "0x10F22C0", VA = "0x10F22C0")]
		private UIVertex TesselateQuad(float x, float y)
		{
			return default(UIVertex);
		}

		[Token(Token = "0x6000E6F")]
		[Address(RVA = "0x10EB338", Offset = "0x10EB338", VA = "0x10EB338")]
		public void SetDirty()
		{
		}

		[Token(Token = "0x6000E74")]
		[Address(RVA = "0x10F2674", Offset = "0x10F2674", VA = "0x10F2674")]
		public CurvedUIVertexEffect()
		{
		}
	}
	[Token(Token = "0x2000237")]
	public class CurvedUIViveController : MonoBehaviour
	{
		[Token(Token = "0x6000E75")]
		[Address(RVA = "0x10F2790", Offset = "0x10F2790", VA = "0x10F2790")]
		public CurvedUIViveController()
		{
		}
	}
	[Token(Token = "0x2000238")]
	public struct ViveInputArgs
	{
		[Token(Token = "0x4000BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint controllerIndex;

		[Token(Token = "0x4000BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float buttonPressure;

		[Token(Token = "0x4000BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 touchpadAxis;
	}
	[Token(Token = "0x2000239")]
	public delegate void ViveInputEvent(object sender, ViveInputArgs e);
	[Token(Token = "0x200023A")]
	public delegate void ViveEvent(object sender);
	[Token(Token = "0x200023B")]
	[ExecuteInEditMode]
	public class CurvedUITMP : MonoBehaviour
	{
		[Token(Token = "0x4000BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CurvedUIVertexEffect crvdVE;

		[Token(Token = "0x4000BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextMeshProUGUI tmpText;

		[Token(Token = "0x4000BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CurvedUISettings mySettings;

		[Token(Token = "0x4000BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<UIVertex> m_UIVerts;

		[Token(Token = "0x4000BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UIVertex m_tempVertex;

		[Token(Token = "0x4000BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private CurvedUITMPSubmesh m_tempSubMsh;

		[Token(Token = "0x4000BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector2 savedSize;

		[Token(Token = "0x4000BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 savedUp;

		[Token(Token = "0x4000BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Vector3 savedPos;

		[Token(Token = "0x4000BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 savedLocalScale;

		[Token(Token = "0x4000BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Vector3 savedGlobalScale;

		[Token(Token = "0x4000BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private List<CurvedUITMPSubmesh> subMeshes;

		[Token(Token = "0x4000BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public bool Dirty;

		[Token(Token = "0x4000BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
		private bool curvingRequired;

		[Token(Token = "0x4000BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD2")]
		private bool tesselationRequired;

		[Token(Token = "0x4000BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD3")]
		private bool quitting;

		[Token(Token = "0x4000BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Vector3[] vertices;

		[Token(Token = "0x6000E7E")]
		[Address(RVA = "0x10ED024", Offset = "0x10ED024", VA = "0x10ED024")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E7F")]
		[Address(RVA = "0x10ED0D8", Offset = "0x10ED0D8", VA = "0x10ED0D8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E80")]
		[Address(RVA = "0x10ED384", Offset = "0x10ED384", VA = "0x10ED384")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000E81")]
		[Address(RVA = "0x10ED4D0", Offset = "0x10ED4D0", VA = "0x10ED4D0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000E82")]
		[Address(RVA = "0x10ED4DC", Offset = "0x10ED4DC", VA = "0x10ED4DC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000E83")]
		[Address(RVA = "0x10EDCF4", Offset = "0x10EDCF4", VA = "0x10EDCF4")]
		private void CreateUIVertexList(Mesh mesh)
		{
		}

		[Token(Token = "0x6000E84")]
		[Address(RVA = "0x10EE834", Offset = "0x10EE834", VA = "0x10EE834")]
		private void GetUIVertexFromMesh(ref UIVertex vert, int i)
		{
		}

		[Token(Token = "0x6000E85")]
		[Address(RVA = "0x10EE1D4", Offset = "0x10EE1D4", VA = "0x10EE1D4")]
		private void FillMeshWithUIVertexList(Mesh mesh, List<UIVertex> list)
		{
		}

		[Token(Token = "0x6000E86")]
		[Address(RVA = "0x10ED240", Offset = "0x10ED240", VA = "0x10ED240")]
		private void FindTMP()
		{
		}

		[Token(Token = "0x6000E87")]
		[Address(RVA = "0x10EE328", Offset = "0x10EE328", VA = "0x10EE328")]
		private void FindSubmeshes()
		{
		}

		[Token(Token = "0x6000E88")]
		[Address(RVA = "0x10ED974", Offset = "0x10ED974", VA = "0x10ED974")]
		private bool ShouldTesselate()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E89")]
		[Address(RVA = "0x10EE884", Offset = "0x10EE884", VA = "0x10EE884")]
		private void TMPTextChangedCallback(object obj)
		{
		}

		[Token(Token = "0x6000E8A")]
		[Address(RVA = "0x10EE8A0", Offset = "0x10EE8A0", VA = "0x10EE8A0")]
		private void TesselationRequiredCallback()
		{
		}

		[Token(Token = "0x6000E8B")]
		[Address(RVA = "0x10EE8AC", Offset = "0x10EE8AC", VA = "0x10EE8AC")]
		public CurvedUITMP()
		{
		}
	}
	[Token(Token = "0x200023C")]
	[ExecuteInEditMode]
	public class CurvedUITMPInputFieldCaret : MonoBehaviour, ISelectHandler, IEventSystemHandler, IDeselectHandler
	{
		[Token(Token = "0x2000419")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCB0A24", Offset = "0xCB0A24")]
		private sealed class <CaretBlinker>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000EB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000EBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000EBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CurvedUITMPInputFieldCaret <>4__this;

			[Token(Token = "0x170001BC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600161F")]
				[Address(RVA = "0x10EF7C8", Offset = "0x10EF7C8", VA = "0x10EF7C8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001BD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001621")]
				[Address(RVA = "0x10EF830", Offset = "0x10EF830", VA = "0x10EF830", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600161C")]
			[Address(RVA = "0x10EF510", Offset = "0x10EF510", VA = "0x10EF510")]
			[DebuggerHidden]
			public <CaretBlinker>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x600161D")]
			[Address(RVA = "0x10EF6A0", Offset = "0x10EF6A0", VA = "0x10EF6A0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600161E")]
			[Address(RVA = "0x10EF6A4", Offset = "0x10EF6A4", VA = "0x10EF6A4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001620")]
			[Address(RVA = "0x10EF7D0", Offset = "0x10EF7D0", VA = "0x10EF7D0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_InputField myField;

		[Token(Token = "0x4000BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RectTransform myCaret;

		[Token(Token = "0x4000BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color origCaretColor;

		[Token(Token = "0x4000BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color origSelectionColor;

		[Token(Token = "0x4000BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool selected;

		[Token(Token = "0x4000BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool selectingText;

		[Token(Token = "0x1700011E")]
		public Color CaretColor
		{
			[Token(Token = "0x6000E95")]
			[Address(RVA = "0x10EF630", Offset = "0x10EF630", VA = "0x10EF630")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000E96")]
			[Address(RVA = "0x10EF63C", Offset = "0x10EF63C", VA = "0x10EF63C")]
			set
			{
			}
		}

		[Token(Token = "0x1700011F")]
		public Color SelectionColor
		{
			[Token(Token = "0x6000E97")]
			[Address(RVA = "0x10EF648", Offset = "0x10EF648", VA = "0x10EF648")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000E98")]
			[Address(RVA = "0x10EF654", Offset = "0x10EF654", VA = "0x10EF654")]
			set
			{
			}
		}

		[Token(Token = "0x17000120")]
		public float CaretBlinkRate
		{
			[Token(Token = "0x6000E99")]
			[Address(RVA = "0x10EF660", Offset = "0x10EF660", VA = "0x10EF660")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E9A")]
			[Address(RVA = "0x10EF67C", Offset = "0x10EF67C", VA = "0x10EF67C")]
			set
			{
			}
		}

		[Token(Token = "0x6000E8C")]
		[Address(RVA = "0x10EE95C", Offset = "0x10EE95C", VA = "0x10EE95C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E8D")]
		[Address(RVA = "0x10EED30", Offset = "0x10EED30", VA = "0x10EED30")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E8E")]
		[Address(RVA = "0x10EF05C", Offset = "0x10EF05C", VA = "0x10EF05C", Slot = "4")]
		public void OnSelect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6000E8F")]
		[Address(RVA = "0x10EF4D8", Offset = "0x10EF4D8", VA = "0x10EF4D8", Slot = "5")]
		public void OnDeselect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6000E90")]
		[Address(RVA = "0x10EF45C", Offset = "0x10EF45C", VA = "0x10EF45C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCB5384", Offset = "0xCB5384")]
		private IEnumerator CaretBlinker()
		{
			return null;
		}

		[Token(Token = "0x6000E91")]
		[Address(RVA = "0x10EF11C", Offset = "0x10EF11C", VA = "0x10EF11C")]
		private void CreateCaret()
		{
		}

		[Token(Token = "0x6000E92")]
		[Address(RVA = "0x10EED40", Offset = "0x10EED40", VA = "0x10EED40")]
		private void UpdateCaret()
		{
		}

		[Token(Token = "0x6000E93")]
		[Address(RVA = "0x10EF53C", Offset = "0x10EF53C", VA = "0x10EF53C")]
		private Vector2 GetLocalPositionInText(int charNo)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000E94")]
		[Address(RVA = "0x10EEA04", Offset = "0x10EEA04", VA = "0x10EEA04")]
		private void CheckAndConvertMask()
		{
		}

		[Token(Token = "0x6000E9B")]
		[Address(RVA = "0x10EF698", Offset = "0x10EF698", VA = "0x10EF698")]
		public CurvedUITMPInputFieldCaret()
		{
		}
	}
	[Token(Token = "0x200023D")]
	[ExecuteInEditMode]
	public class CurvedUITMPSubmesh : MonoBehaviour
	{
		[Token(Token = "0x4000BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private VertexHelper vh;

		[Token(Token = "0x4000BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Mesh straightMesh;

		[Token(Token = "0x4000BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Mesh curvedMesh;

		[Token(Token = "0x4000BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CurvedUIVertexEffect crvdVE;

		[Token(Token = "0x4000BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TMP_SubMeshUI TMPsub;

		[Token(Token = "0x4000BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TextMeshProUGUI TMPtext;

		[Token(Token = "0x6000E9C")]
		[Address(RVA = "0x10EE448", Offset = "0x10EE448", VA = "0x10EE448")]
		public void UpdateSubmesh(bool tesselate, bool curve)
		{
		}

		[Token(Token = "0x6000E9D")]
		[Address(RVA = "0x10EF838", Offset = "0x10EF838", VA = "0x10EF838")]
		public CurvedUITMPSubmesh()
		{
		}
	}
	[Token(Token = "0x200023E")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xCAEE60", Offset = "0xCAEE60")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xCAEE60", Offset = "0xCAEE60")]
	public class OptionalDependencyAttribute : Attribute
	{
		[Token(Token = "0x4000BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string dependentClass;

		[Token(Token = "0x4000BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string define;

		[Token(Token = "0x6000E9E")]
		[Address(RVA = "0x10F2798", Offset = "0x10F2798", VA = "0x10F2798")]
		public OptionalDependencyAttribute(string dependentClass, string define)
		{
		}
	}
}
namespace TFHC_Shader_Samples
{
	[Token(Token = "0x200023F")]
	public class highlightAnimated : MonoBehaviour
	{
		[Token(Token = "0x4000BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Material mat;

		[Token(Token = "0x6000E9F")]
		[Address(RVA = "0x12505DC", Offset = "0x12505DC", VA = "0x12505DC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000EA0")]
		[Address(RVA = "0x125064C", Offset = "0x125064C", VA = "0x125064C")]
		private void OnMouseEnter()
		{
		}

		[Token(Token = "0x6000EA1")]
		[Address(RVA = "0x12506CC", Offset = "0x12506CC", VA = "0x12506CC")]
		private void OnMouseExit()
		{
		}

		[Token(Token = "0x6000EA2")]
		[Address(RVA = "0x1250654", Offset = "0x1250654", VA = "0x1250654")]
		private void switchhighlighted(bool highlighted)
		{
		}

		[Token(Token = "0x6000EA3")]
		[Address(RVA = "0x12506D4", Offset = "0x12506D4", VA = "0x12506D4")]
		public highlightAnimated()
		{
		}
	}
}
namespace TFHC_ForceShield_Shader_Sample
{
	[Token(Token = "0x2000240")]
	public class ForceShieldDestroyBall : MonoBehaviour
	{
		[Token(Token = "0x4000BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float lifetime;

		[Token(Token = "0x6000EA4")]
		[Address(RVA = "0x1250048", Offset = "0x1250048", VA = "0x1250048")]
		private void Start()
		{
		}

		[Token(Token = "0x6000EA5")]
		[Address(RVA = "0x12500D4", Offset = "0x12500D4", VA = "0x12500D4")]
		public ForceShieldDestroyBall()
		{
		}
	}
	[Token(Token = "0x2000241")]
	public class ForceShieldImpactDetection : MonoBehaviour
	{
		[Token(Token = "0x4000BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float hitTime;

		[Token(Token = "0x4000BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material mat;

		[Token(Token = "0x6000EA6")]
		[Address(RVA = "0x12500E4", Offset = "0x12500E4", VA = "0x12500E4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000EA7")]
		[Address(RVA = "0x1250154", Offset = "0x1250154", VA = "0x1250154")]
		private void Update()
		{
		}

		[Token(Token = "0x6000EA8")]
		[Address(RVA = "0x12501F8", Offset = "0x12501F8", VA = "0x12501F8")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6000EA9")]
		[Address(RVA = "0x12503A8", Offset = "0x12503A8", VA = "0x12503A8")]
		public ForceShieldImpactDetection()
		{
		}
	}
	[Token(Token = "0x2000242")]
	public class ForceShieldShootBall : MonoBehaviour
	{
		[Token(Token = "0x4000BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Rigidbody bullet;

		[Token(Token = "0x4000BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform origshoot;

		[Token(Token = "0x4000BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float speed;

		[Token(Token = "0x4000BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float distance;

		[Token(Token = "0x6000EAA")]
		[Address(RVA = "0x12503B0", Offset = "0x12503B0", VA = "0x12503B0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000EAB")]
		[Address(RVA = "0x12505C8", Offset = "0x12505C8", VA = "0x12505C8")]
		public ForceShieldShootBall()
		{
		}
	}
}
